name: _enforcement_matrix

on:
  workflow_call:
    inputs:
      registry_url:
        description: "Schema Registry URL"
        required: false
        type: string
        default: "https://registry.openbb.co/api/v1"
    secrets:
      REGISTRY_TOKEN:
        description: "Optional registry authentication token"
        required: false

jobs:
  enforcement-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        track: [v1, v2]
        mode: [warn, strict]
        python-version: ["3.11"]
      fail-fast: false
    
    name: Test track=${{ matrix.track }} mode=${{ matrix.mode }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -U pip wheel
          pip install -e ".[dev]"
      
      - name: Run enforcement mode tests
        env:
          REGISTRY_ENABLED: "true"
          REGISTRY_URL: ${{ inputs.registry_url }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
          SCHEMA_PREFER_TRACK: ${{ matrix.track }}
          REGISTRY_ENFORCEMENT: ${{ matrix.mode }}
        run: |
          pytest tests/schemas/test_enforcement_modes.py -v --tb=short
      
      - name: Run contract tests with enforcement
        env:
          REGISTRY_ENABLED: "true"
          REGISTRY_URL: ${{ inputs.registry_url }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
          SCHEMA_PREFER_TRACK: ${{ matrix.track }}
          REGISTRY_ENFORCEMENT: ${{ matrix.mode }}
        run: |
          pytest tests/contracts/ -v --tb=short -k "not skip_registry"


