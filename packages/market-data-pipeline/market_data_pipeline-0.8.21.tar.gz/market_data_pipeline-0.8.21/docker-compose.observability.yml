version: '3.8'

services:
  # Redis for streaming
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: marketdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d marketdata"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - redis
      - postgres

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  # Market Data Pipeline (streaming)
  pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9101:9101"  # Prometheus metrics
    environment:
      - REDIS_URI=redis://redis:6379/0
      - DATABASE_URI=postgresql://user:pass@postgres:5432/marketdata
      - PROMETHEUS_PORT=9101
    volumes:
      - ./configs:/app/configs
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Starting Market Data Pipeline...' &&
        python -m market_data_pipeline.streaming.telemetry start_metrics_server 9101 &&
        echo 'Metrics server started on port 9101' &&
        tail -f /dev/null
      "

  # Market Data Cockpit (if available)
  cockpit:
    image: market-data-cockpit:latest
    ports:
      - "9090:9090"  # Cockpit metrics
    environment:
      - DATABASE_URI=postgresql://user:pass@postgres:5432/marketdata
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - cockpit

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: market_data_network
