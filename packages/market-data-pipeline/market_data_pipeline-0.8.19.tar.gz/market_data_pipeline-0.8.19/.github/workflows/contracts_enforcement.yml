name: contracts_enforcement

on:
  push:
    branches:
      - base
      - main
    paths:
      - 'src/market_data_pipeline/schemas/**'
      - 'tests/schemas/**'
      - 'tests/contracts/**'
  pull_request:
    branches:
      - base
      - main
    paths:
      - 'src/market_data_pipeline/schemas/**'
      - 'tests/schemas/**'
      - 'tests/contracts/**'
  workflow_dispatch:
    inputs:
      registry_url:
        description: "Registry URL"
        required: false
        default: "https://schema-registry-service.fly.dev"
  
  # Nightly run for continuous validation
  schedule:
    - cron: '0 2 * * *'  # 2 AM UTC daily

jobs:
  enforcement-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        track: [v1, v2]
        mode: [warn, strict]
        python-version: ["3.11"]
      fail-fast: false
    
    name: test track=${{ matrix.track }} mode=${{ matrix.mode }}
    continue-on-error: ${{ matrix.track == 'v2' }}  # v2 is allowed to fail (preview)
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -U pip wheel
          pip install -e ".[dev]"
      
      - name: Fetch schemas from registry
        env:
          REGISTRY_URL: ${{ inputs.registry_url || 'https://schema-registry-service.fly.dev' }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          python scripts/fetch_schemas.py \
            --track ${{ matrix.track }} \
            --output tests/contracts/schemas || echo "Schema fetch failed, using cached"
      
      - name: Run enforcement tests
        env:
          REGISTRY_ENABLED: "true"
          REGISTRY_URL: ${{ inputs.registry_url || 'https://schema-registry-service.fly.dev' }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
          REGISTRY_TRACK: ${{ matrix.track }}
          SCHEMA_PREFER_TRACK: ${{ matrix.track }}
          REGISTRY_ENFORCEMENT: ${{ matrix.mode }}
          REGISTRY_POLL_SECONDS: "60"
        run: |
          pytest tests/schemas/test_enforcement_modes.py -v --tb=short
      
      - name: Run contract tests
        env:
          REGISTRY_ENABLED: "true"
          REGISTRY_URL: ${{ inputs.registry_url || 'https://schema-registry-service.fly.dev' }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
          REGISTRY_TRACK: ${{ matrix.track }}
          SCHEMA_PREFER_TRACK: ${{ matrix.track }}
          REGISTRY_ENFORCEMENT: ${{ matrix.mode }}
        run: |
          pytest tests/contracts/ -v --tb=short -k "not skip_registry"
      
      - name: Report validation metrics
        if: always()
        run: |
          echo "::notice::Track=${{ matrix.track }} Mode=${{ matrix.mode }} completed"
          echo "Track: ${{ matrix.track }}" >> $GITHUB_STEP_SUMMARY
          echo "Mode: ${{ matrix.mode }}" >> $GITHUB_STEP_SUMMARY
          echo "Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.track }}-${{ matrix.mode }}
          path: |
            pytest-*.xml
            .coverage
          retention-days: 7


