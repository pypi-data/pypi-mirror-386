Metadata-Version: 2.1
Name: shareddata
Version: 6.40.1
Summary: Memory Mapped / Shared Memory Database with S3 repository
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9, <3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: ipykernel ==6.23.3
Requires-Dist: boto3 ==1.26.160
Requires-Dist: python-json-logger ==2.0.7
Requires-Dist: python-dotenv ==1.0.0
Requires-Dist: pandas ==2.0.2
Requires-Dist: scipy ==1.14.0
Requires-Dist: numpy ==1.26.2
Requires-Dist: numba ==0.59.1
Requires-Dist: XlsxWriter ==3.1.2
Requires-Dist: openpyxl ==3.1.2
Requires-Dist: tqdm ==4.65.0
Requires-Dist: cffi ==1.17.1
Requires-Dist: tzlocal ==5.0.1
Requires-Dist: websockets ==12.0
Requires-Dist: cryptography ==41.0.7
Requires-Dist: lz4 ==4.3.3
Requires-Dist: flask ==3.0.0
Requires-Dist: waitress ==3.0.0
Requires-Dist: requests ==2.31.0
Requires-Dist: flasgger ==0.9.7.1
Requires-Dist: pymongo ==4.8.0
Requires-Dist: setuptools ==74.1.2
Requires-Dist: filelock ==3.18.0
Requires-Dist: gunicorn ==23.0.0
Requires-Dist: confluent-kafka ==2.10.0
Requires-Dist: aiokafka ==0.12.0
Requires-Dist: aiohttp ==3.12.13
Requires-Dist: redis ==6.2.0

# SharedData

A comprehensive ultrafast Python library for financial data.

## 📖 Table of Contents

- [🏗️ Core Features](#-core-features)
- [⚡ Quick Start](#-quick-start)
- [🔧 Configuration](#-configuration)
- [🚀 Advanced Usage](#-advanced-usage)
- [🔄 Development & Documentation](#-development--documentation)
- [📄 License](#-license)
- [🤝 Contributing](#-contributing)

## 🏗️ Core Features

SharedData provides a comprehensive set of features for high-performance financial data management:

- **🗃️ Database Schema & Indexing** - Optimized schemas for financial data types
- **🌐 Storage & Integration** - Multi-storage support (Local, S3, MongoDB, Redis)
- **📈 Performance & Scalability** - Parallel processing and advanced querying
- **📊 Data Containers** - Tables, Collections, Time Series, Streams, Cache, Metadata
- **⚡ Multiprocessing & Parallel Computing** - Sophisticated parallel processing library
- **🤖 Distributed Worker System** - Automated task execution and job scheduling
- **📋 Comprehensive Logging System** - Enterprise-grade logging with multiple destinations
- **🌐 Remote API Client** - REST API for remote data access and operations

**📚 [Read the complete Core Features guide →](docs/CORE_FEATURES.md)**

## ⚡ Quick Start

Get up and running with SharedData in minutes:

### Installation

```bash
# Create virtual environment
python -m venv venv
source venv/bin/activate

# Install SharedData
pip install -r requirements.txt
pip install -e .
```

### Basic Usage

```python
import pandas as pd
from SharedData.SharedData import SharedData

# Initialize SharedData
shdata = SharedData(__file__, user='master')

# Quick example - Tables
dates = pd.date_range('2025-01-01', '2025-01-10', freq='D')
symbols = ['AAPL', 'GOOGL', 'MSFT']
idx = pd.MultiIndex.from_product([dates, symbols], names=['date', 'symbol'])
df = pd.DataFrame({'price': 100, 'volume': 1000}, index=idx)

# Write and read data
tbl = shdata.table('MarketData', 'D1', 'TEST', 'PRICES', value=df)
tbl.write()
data = tbl.loc['2025-01-05':, 'AAPL']  # Fast symbol lookup
print(f"Retrieved {data.shape[0]} rows")
```

**📚 [Read the complete Quick Start guide →](docs/QUICK_START.md)**

## 🔧 Configuration

Configure SharedData with environment variables for your specific needs:

```bash
# Required Variables
SHAREDDATA_SECRET_KEY="your-secret-key"
SHAREDDATA_TOKEN="your-auth-token"
AWS_ACCESS_KEY_ID="your-aws-access-key"
S3_BUCKET="s3://your-bucket-name"
MONGODB_HOST="your-mongodb-host"
SHAREDDATA_ENDPOINT="http://your-server:port"
```

**📚 [Read the complete Configuration guide →](docs/CONFIGURATION.md)**

## 🚀 Advanced Usage

For power users and complex scenarios:

- **Advanced Data Operations** - Complex queries and aggregations
- **Performance Optimization** - Memory management and parallel processing
- **Distributed Computing** - Worker pools and distributed data processing
- **Custom Extensions** - Custom data containers and worker types
- **Production Deployment** - High availability and monitoring
- **Monitoring & Debugging** - Performance profiling and health checks

**📚 [Read the complete Advanced Usage guide →](docs/ADVANCED_USAGE.md)**

## 🔄 Development & Documentation

For developers contributing to SharedData:

### Building Documentation

```bash
# Generate documentation from docstrings
make gitea

# Alternative methods
python generate_docs.py
python update_docs.py
make all
```

### Running Tests

```bash
python -m pytest tests/
```

**📚 [Read the complete Development guide →](docs/DEVELOPMENT.md)**

## 📄 License

See [LICENSE](LICENSE) file for details.

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Update documentation: `make gitea`
5. Submit a pull request

**📚 [Read the complete Contributing guide →](docs/DEVELOPMENT.md#contributing-guidelines)**

---

## 📚 Documentation Index

- **[🏗️ Core Features](docs/CORE_FEATURES.md)** - Comprehensive overview of all SharedData capabilities
- **[⚡ Quick Start](docs/QUICK_START.md)** - Get started with SharedData in minutes
- **[🔧 Configuration](docs/CONFIGURATION.md)** - Complete configuration reference
- **[🚀 Advanced Usage](docs/ADVANCED_USAGE.md)** - Advanced patterns and optimization
- **[🔄 Development](docs/DEVELOPMENT.md)** - Contributing and development guidelines

---

[⬆️ Back to top](#shareddata)
