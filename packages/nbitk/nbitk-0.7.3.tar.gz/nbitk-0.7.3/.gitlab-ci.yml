image: continuumio/miniconda3:latest

stages:
  - prepare
  - build
  - test
  - publish

variables:
  CONDA_ENV_NAME: nbitk

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .conda_env/

prepare:
  stage: prepare
  script:
    # Install system dependencies required for building C extensions
    - apt-get update && apt-get install -y build-essential gcc
    - conda info
    - if [ -d "$CI_PROJECT_DIR/.conda_env" ]; then 
        echo "Conda environment already exists. Updating..." && 
        conda env update -p $CI_PROJECT_DIR/.conda_env -f environment.yml; 
      else 
        echo "Creating new Conda environment..." && 
        conda env create -p $CI_PROJECT_DIR/.conda_env -f environment.yml; 
      fi
    - source activate $CI_PROJECT_DIR/.conda_env
    # Install wheel to ensure proper wheel building
    - pip install wheel
    - conda env list
    - conda env export > environment_frozen.yml
  artifacts:
    paths:
      - environment_frozen.yml
    expire_in: 1 week

.activate_conda: &activate_conda
  before_script:
    - apt-get update && apt-get install -y build-essential gcc
    - conda info
    - if [ ! -d "$CI_PROJECT_DIR/.conda_env" ]; then 
        echo "Conda environment not found. Creating..." && 
        conda env create -p $CI_PROJECT_DIR/.conda_env -f environment.yml; 
      fi
    - source activate $CI_PROJECT_DIR/.conda_env
    - conda env list
    - python --version


build-job:
  stage: build
  <<: *activate_conda
  script:
    - echo "Installing build dependencies..." && pip install build setuptools_scm wheel
    - echo "Building package..." && python -m build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

unit-test-job:
  stage: test
  <<: *activate_conda
  services:
    - docker:27.2.0-dind
  variables:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_TLS_CERTDIR: ""
  script:
    - echo "Installing test dependencies..."
    - pip install pytest pytest-xdist testcontainers
    - echo "Running unit tests..."
    - pytest -v -n auto tests/
    - echo "Unit tests completed."

lint-test-job:
  stage: test
  <<: *activate_conda
  script:
    - echo "Installing linting dependencies..." && pip install flake8 black
    - echo "Running linters..." && flake8 nbitk/ && black --check nbitk/
    - echo "Linting completed."

publish:
  stage: publish
  <<: *activate_conda
  script:
    - echo "Installing publishing dependencies..." && pip install twine
    - echo "Publishing package to PyPI..." && TWINE_PASSWORD=${PYPI_API_TOKEN} TWINE_USERNAME=__token__ python -m twine upload --skip-existing dist/*
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - build-job