name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # For trusted publishing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine hatchling
      
      - name: Extract version from tag or input
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"
      
      - name: Update package version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Update version in pyproject.toml
          if [ -f "pyproject.toml" ]; then
            echo "Updating pyproject.toml to version $VERSION"
            sed -i "s/^version = \".*\"/version = \"$VERSION\"/" "pyproject.toml"
          fi
      
      - name: Build package
        run: |
          echo "Building package..."
          python -m build .
      
      - name: Check package contents
        run: |
          echo "Built files:"
          ls -la dist/
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          echo "Publishing to PyPI..."
          python -m twine upload dist/*
      
      - name: Verify publication
        run: |
          echo "Package published successfully!"
          PKG_NAME=$(grep '^name = ' pyproject.toml | sed 's/name = "\(.*\)"/\1/')
          echo "Published: $PKG_NAME"
