_include:
  - genesis/cult-cargo-base.yml

cabs:
  quartical:
    name: quartical
    image:
      _use: vars.cult-cargo.images
      name: quartical
    _use: lib.misc.numba.cache-cab-settings  # pull in numba cache dir settings
    command: goquartical
    info: QuartiCal calibration package (https://github.com/ratt-ru/QuartiCal)
    policies:
      key_value: true
      repeat: '[]'
      prefix: ''
    inputs:
      _include: genesis/quartical/argument_schema.yaml
    dynamic_schema: cultcargo.genesis.quartical.external.make_stimela_schema

  quartical-backup:
    name: quartical-backup
    image:
      _use: vars.cult-cargo.images
      name: quartical

    command: goquartical-backup
    info: QuartiCal column backup script

    policies:
      prefix: '--'

    inputs:
      ms_path:
        dtype: URI
        must_exist: true
        required: true
        policies:
          positional: true
        info: 'Path to input measurement set, e.g. path/to/dir/foo.MS.'
      zarr_dir:
        dtype: URI
        mkdir: true
        must_exist: false
        required: true
        policies:
          positional: true
        info: Path to desired backup location. Note that this only allows
              the user to specify a directory and not the name of the backup
              zarr that will be created, e.g. path/to/dir.
      column:
        dtype: str
        required: true
        policies:
          positional: true
        info: Name of column to be backed up.
      label:
        dtype: str
        info: An explicit label to include in the backup name. Defaults to
              datetime at which the backup was created. Full name will be
              given by [label]-[msname]-[column].bkp.qc.
      nthread:
        dtype: int
        info: Number of threads to use.
      field-id:
        dtype: int
        info: Field ID to back up.


  quartical-restore:
    name: quartical-restore
    image:
      _use: vars.cult-cargo.images
      name: quartical
      # version: # Optionally.
    command: goquartical-restore
    info: QuartiCal column restoring script

    policies:
      prefix: '--'

    inputs:
      zarr_path:
        dtype: URI
        must_exist: true
        required: true
        policies:
          positional: true
        info: Path to backup zarr column e.g. path/to/dir/20211201-154457-foo.MS-FLAG.bkp.qc.
              Also accepts valid s3 urls.
      ms_path:
        dtype: URI
        must_exist: true
        required: true
        policies:
          positional: true
        info: Path to measurement set, e.g. path/to/dir/foo.MS. Also accepts valid s3 urls.
      column_name:
        dtype: str
        required: True
        policies:
          positional: true
        info: Name of column to populate using the backup.
              Note that this does not have to be the same column as was used to create the backup.
      nthread:
        dtype: int
        info: Number of threads to use.

  quartical-plotter:
    name: quartical-plotter
    image:
      _use: vars.cult-cargo.images
      name: quartical
    command: goquartical-plot
    info: Rudimentary plotter for QuartiCal gain solutions
    policies:
      prefix: '--'
    inputs:
      input-path:
        dtype: Directory
        must_exist: true
        required: true
        policies:
          positional: true
        info: Path to input gains, e.g. path/to/dir/G. Accepts valid s3 urls.
      output-path:
        dtype: Directory
        mkdir: true
        must_exist: false
        required: true
        policies:
          positional: true
        info: Path to desired output location.
      plot-var:
        dtype: str
        default: gains
        info: Name of data variable to plot.
      flag-var:
        dtype: str
        info: Name of data variable to use as flags.
      xaxis:
        dtype: str
        default: gain_time
        choices: [gain_time, gain_freq, param_time, param_freq]
        info: Coordinate to use for x-axis.
      transform:
        dtype: str
        info: Transform to apply to data before plotting.
      iter-attrs:
        dtype: List[str]
        default: [FIELD_ID, DATA_DESC_ID, SCAN_NUMBER]
        info: Attributes over which to iterate. Omission results in concatenation along omitted axis.
        policies:
          repeat: list
      iter-axes:
        dtype: List[str]
        default: [antenna, direction, correlation]
        info: Axes over which to iterate when generating plots.
        policies:
          repeat: list
      mean-axis:
        dtype: str
        info: Axis to plot mean over as a heavier line.
      colourize-axis:
        dtype: str
        info: Axis to colour by.
      time-range:
        dtype: List[float]
        info: Time range to plot.
        policies:
          repeat: list
      freq-range:
        dtype: List[float]
        info: Frequency range to plot.
        policies:
          repeat: list
      nworker:
        dtype: int
        default: 1
        info: Number of processes to use while plotting.
      colourmap:
        dtype: str
        default: plasma
        info: Colourmap to use with --colourize-axis.
      fig-size:
        dtype: List[float]
        default: [5,5]
        info: Figure size in inches, width and height.
        policies:
          repeat: list
