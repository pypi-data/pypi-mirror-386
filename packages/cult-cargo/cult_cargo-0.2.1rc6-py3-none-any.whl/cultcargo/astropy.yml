_include: (cultcargo)/genesis/cult-cargo-base.yml

cabs:
  astropy.test-internal-cache:
    info: Tests astropy IERS and site data cache which is downloaded into the python-astro image at release time
    flavour: 
      kind: python-code
    command: |
      import os
      from astropy.config.paths import get_cache_dir
      print(f"Astropy cache directory is {get_cache_dir()}")
      print("Testing time data")
      from astropy.time import Time
      print(Time.now().ut1)
      print("Testing site data")
      from astropy.coordinates import EarthLocation
      print(EarthLocation.of_site('VLA'))

  astropy.test-host-cache:
    info: Tests local astropy IERS and site data cache
    _use: lib.misc.astropy.data-dir-cab-settings
    flavour: 
      kind: python-code
    inputs:
      cache-dir:
        dtype: Directory
        mkdir: true
        implicit: =config.lib.misc.astropy.local-data-dir
    command: |
      import os
      from astropy.config.paths import get_cache_dir
      print(f"User-specified cache directory is {cache_dir}")
      print(f"Astropy cache directory is {get_cache_dir()}. These can be different if a containerized backend is used.")
      print("Testing time data")
      from astropy.time import Time
      print(Time.now().ut1)
      print("Testing site data")
      from astropy.coordinates import EarthLocation
      print(EarthLocation.of_site('VLA'))

  astropy.refresh-host-cache:
    info: Refreshes local astropy IERS and site data cache
    _use: lib.misc.astropy.data-dir-cab-settings
    inputs:
      clear-cache:
        dtype: bool
        default: false
        info: clears cache, forcing a re-download
    outputs:
      cache-dir:
        dtype: Directory
        implicit: =config.lib.misc.astropy.local-data-dir
        mkdir: true
        policies:
          skip: false  # pass it in as a variable since we print it below
    flavour: 
      kind: python-code
    command: |
      import os
      from astropy.config.paths import get_cache_dir
      print(f"User-specified cache directory is {cache_dir}")
      print(f"Astropy cache directory is {get_cache_dir()}. These can be different if a containerized backend is used.")
      if clear_cache:
        print("Clearing the download cache")
        from astropy.utils.data import clear_download_cache
        clear_download_cache()
      print("Enabling downloads")
      import astropy.utils.iers
      astropy.utils.iers.conf.auto_max_age = 30
      import astropy.utils.data
      astropy.utils.data.conf.allow_internet = True
      print("Downloading and testing time data")
      from astropy.time import Time
      print(Time.now().ut1)
      print("Downloading and testing site data")
      from astropy.coordinates import EarthLocation
      print(EarthLocation.of_site('VLA'))
