[project]
name = "py_wlcommands"
dynamic = [ "version",]
description = "py_wlcommands - Python项目"
requires-python = ">=3.10"
license = "MIT"
readme = "README.md"
dependencies = [
 "toml>=0.10.2",
 "tomli>=2.3.0",
 "pytest>=8.4.2",
 "mypy>=1.18.2",
 "pytest-cov>=7.0.0",
 "ruff>=0.14.0",
 "pathspec>=0.12.1",
]
[[project.authors]]
name = "WL Admin"
email = "wl.admin@example.com"

[project.scripts]
wl = "py_wlcommands.__main__:main"

[[tool.uv.index]]
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
default = true

[build-system]
requires = [ "maturin>=1.0,<2.0",]
build-backend = "maturin"

[project.urls]
Homepage = "https://github.com/wl-commands/py_wlcommands"
Issues = "https://github.com/wl-commands/py_wlcommands/issues"

[tool.maturin]
manifest-path = "rust/Cargo.toml"
module-name = "py_wlcommands.lib.py_wlcommands_native"
python-source = "src"
include = [ 
  "src/py_wlcommands/**/*",
  "LICENSE",
]
bindings = "pyo3"
features = [ "pyo3/extension-module",]
sdist-include = [ 
  "src/**/*",
  "LICENSE",
]
python-packages = [ "py_wlcommands",]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C4", "UP", "N", "B", "C90"]
ignore = ["E501", "B904", "F401", "F841", "UP035", "E402", "F811"]
exclude = [ ".git", ".ruff_cache", "__pycache__", "build", "dist", "*.egg-info",]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py",]
addopts = "-v"

[tool.ruff.lint.isort]
known-first-party = [ "py_wlcommands",]

