"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from gr4vy.types import BaseModel
from gr4vy.utils import validate_const
import pydantic
from pydantic.functional_validators import AfterValidator
from typing import Literal, Optional
from typing_extensions import Annotated, TypedDict


class CryptogramTypedDict(TypedDict):
    cryptogram: str
    r"""The cryptogram of the network token."""
    type: Literal["network-token-cryptogram"]
    r"""Always `network-token-cryptogram`."""


class Cryptogram(BaseModel):
    cryptogram: str
    r"""The cryptogram of the network token."""

    TYPE: Annotated[
        Annotated[
            Optional[Literal["network-token-cryptogram"]],
            AfterValidator(validate_const("network-token-cryptogram")),
        ],
        pydantic.Field(alias="type"),
    ] = "network-token-cryptogram"
    r"""Always `network-token-cryptogram`."""
