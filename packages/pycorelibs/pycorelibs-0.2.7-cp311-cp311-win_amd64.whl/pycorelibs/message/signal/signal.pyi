from typing import Any, Callable

class SignalInstance:
    def __init__(self, signal: Signal, owner: object | None) -> None: ...
    def connect(self, slot: Callable[..., Any], /, type: Any = None) -> Any: ...
    def disconnect(self, /, slot: Callable[..., Any] | None = None) -> bool: ...
    def emit(self, /, *args: Any, **kwargs: Any) -> None: ...

class Signal:
    def __init__(self, /, *types: type, name: str | None = None, arguments: list[str] | None = None) -> None: ...
    def __get__(self, instance: object | None, owner: type | None = None) -> SignalInstance | Signal: ...
    def connect(self, slot: Callable[..., Any], /, type: Any = None) -> Any: ...
    def disconnect(self, /, slot: Callable[..., Any] | None = None) -> bool: ...
    def emit(self, /, *args: Any, **kwargs: Any) -> None: ...
    def set_runtime_check(self, enabled: bool) -> None: ...
