# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import mt4_term_api_internal_charts_pb2 as mt4__term__api__internal__charts__pb2


class InternalChartsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChartOpen = channel.unary_unary(
                '/mt4_term_api.InternalCharts/ChartOpen',
                request_serializer=mt4__term__api__internal__charts__pb2.ChartOpenRequest.SerializeToString,
                response_deserializer=mt4__term__api__internal__charts__pb2.ChartOpenReply.FromString,
                )
        self.ChartClose = channel.unary_unary(
                '/mt4_term_api.InternalCharts/ChartClose',
                request_serializer=mt4__term__api__internal__charts__pb2.ChartCloseRequest.SerializeToString,
                response_deserializer=mt4__term__api__internal__charts__pb2.ChartCloseReply.FromString,
                )
        self.CustomChartOpen = channel.unary_unary(
                '/mt4_term_api.InternalCharts/CustomChartOpen',
                request_serializer=mt4__term__api__internal__charts__pb2.CustomChartOpenRequest.SerializeToString,
                response_deserializer=mt4__term__api__internal__charts__pb2.CustomChartOpenReply.FromString,
                )
        self.CustomChartSaveTemplate = channel.unary_unary(
                '/mt4_term_api.InternalCharts/CustomChartSaveTemplate',
                request_serializer=mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateRequest.SerializeToString,
                response_deserializer=mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateReply.FromString,
                )
        self.CustomChartApplyTemplate = channel.unary_unary(
                '/mt4_term_api.InternalCharts/CustomChartApplyTemplate',
                request_serializer=mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateRequest.SerializeToString,
                response_deserializer=mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateReply.FromString,
                )


class InternalChartsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChartOpen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChartClose(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomChartOpen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomChartSaveTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomChartApplyTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalChartsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChartOpen': grpc.unary_unary_rpc_method_handler(
                    servicer.ChartOpen,
                    request_deserializer=mt4__term__api__internal__charts__pb2.ChartOpenRequest.FromString,
                    response_serializer=mt4__term__api__internal__charts__pb2.ChartOpenReply.SerializeToString,
            ),
            'ChartClose': grpc.unary_unary_rpc_method_handler(
                    servicer.ChartClose,
                    request_deserializer=mt4__term__api__internal__charts__pb2.ChartCloseRequest.FromString,
                    response_serializer=mt4__term__api__internal__charts__pb2.ChartCloseReply.SerializeToString,
            ),
            'CustomChartOpen': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomChartOpen,
                    request_deserializer=mt4__term__api__internal__charts__pb2.CustomChartOpenRequest.FromString,
                    response_serializer=mt4__term__api__internal__charts__pb2.CustomChartOpenReply.SerializeToString,
            ),
            'CustomChartSaveTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomChartSaveTemplate,
                    request_deserializer=mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateRequest.FromString,
                    response_serializer=mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateReply.SerializeToString,
            ),
            'CustomChartApplyTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomChartApplyTemplate,
                    request_deserializer=mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateRequest.FromString,
                    response_serializer=mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mt4_term_api.InternalCharts', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalCharts(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChartOpen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt4_term_api.InternalCharts/ChartOpen',
            mt4__term__api__internal__charts__pb2.ChartOpenRequest.SerializeToString,
            mt4__term__api__internal__charts__pb2.ChartOpenReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChartClose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt4_term_api.InternalCharts/ChartClose',
            mt4__term__api__internal__charts__pb2.ChartCloseRequest.SerializeToString,
            mt4__term__api__internal__charts__pb2.ChartCloseReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomChartOpen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt4_term_api.InternalCharts/CustomChartOpen',
            mt4__term__api__internal__charts__pb2.CustomChartOpenRequest.SerializeToString,
            mt4__term__api__internal__charts__pb2.CustomChartOpenReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomChartSaveTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt4_term_api.InternalCharts/CustomChartSaveTemplate',
            mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateRequest.SerializeToString,
            mt4__term__api__internal__charts__pb2.CustomChartSaveTemplateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomChartApplyTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt4_term_api.InternalCharts/CustomChartApplyTemplate',
            mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateRequest.SerializeToString,
            mt4__term__api__internal__charts__pb2.CustomChartApplyTemplateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
