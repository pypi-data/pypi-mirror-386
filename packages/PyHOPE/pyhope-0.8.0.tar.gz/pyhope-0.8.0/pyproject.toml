# pyporject.toml compatible with Poetry (version 2.0.0.dev0)
[project]
name = "PyHOPE"
version = "0.8.0"
description = "Python High-Order Preprocessing Environment"
license = {text = "GPL-3.0-only"}
requires-python = ">=3.10"
readme = "README.md"
authors = [
    {name = "Numerics Research Group (NRG)", email = "numerics@iag.uni-stuttgart.de"},
]
dependencies = [
    'alive-progress',
    'h5py',
    'hilbertcurve',
    'meshio',
    'numpy>=2.0.0',
    'packaging',
    'plotext',
    'scipy',
    'gmsh',
    # 'sortedcontainers',
    'typing-extensions'
]
keywords = ["PyHOPE", "mesh generator"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]

[project.urls]
homepage = "https://numericsresearchgroup.org"
repository = "https://github.com/hopr-framework/pyhope"
documentation = "https://hopr-framework.github.io/PyHOPE"

[project.scripts]
pyhope = "pyhope.script.pyhope_cli:main"

[tool.setuptools]
packages = ["pyhope"]

# Code coverage
[tool.coverage.run]
omit = [
    # Multiprocessing is disabled for code coverage
    '*/pyhope/common/common_parallel.py',
    # Gmsh does not get re-installed when running non-interactively
    '*/pyhope/gmsh/gmsh_install.py',
    ]

[tool.coverage.report]
omit = [
    # Multiprocessing is disabled for code coverage
    '*/pyhope/common/common_parallel.py',
    # Gmsh does not get re-installed when running non-interactively
    '*/pyhope/gmsh/gmsh_install.py',
    ]
exclude_also = [
    # Exclude if code block with abort
    'if .+(?s:...)*?hopout\.error',
    'if .+(?s:...)*?raise',
    'if .+(?s:...)*?sys\.exit',
    # Exclude if code block with continue/return
    # 'if .+(?s:...)*?continue',
    # 'if .+(?s:...)*?return',

    # Exclude else code block with abort
    'else .+(?s:...)*?hopout\.error',
    'else .+(?s:...)*?raise',
    'else .+(?s:...)*?sys\.exit',
    # Exclude else code block with continue/return
    # 'else .+(?s:...)*?continue',
    # 'else .+(?s:...)*?return',

    # Exclude except code block with abort
    'except .+(?s:...)*?hopout\.error',
    'except .+(?s:...)*?raise',
    'except .+(?s:...)*?sys\.exit',
    # Exclude except code block with continue/return
    # 'except .+(?s:...)*?continue',
    # 'except .+(?s:...)*?return',

    # Exclude blank lines with abort
    'hopout\.error',
    'raise .+Error',
    'sys\.exit',

    # Exclude disabled blocks
    'if 0:',
    'if False:',

    # Exclude multiprocessing blocks
    'if np_mtp > 0:',
    ]

# Code linters
[tool.pyright]
stubPath                        = "./.typings"

typeCheckingMode                = "standard"
reportUnknownArgumentType       = false
reportUnknownMemberType         = false
reportMissingParameterType      = false
reportUnknownParameterType      = false
reportUnknownVariableType       = false

reportMissingTypeStubs          = false
reportMissingTypeArgument       = false
reportOptionalMemberAccess      = false

reportAny                       = false
reportExplicitAny               = false

pythonVersion                   = "3.10"
reportTypeCommentUsage          = true
deprecateTypingAliases          = false
# Performance implications, > https://github.com/DetachHead/basedpyright/issues/461
reportImportCycles              = false
reportUnsafeMultipleInheritance = false
enableExperimentalFeatures      = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".pyenv",
    ".venv",
    ".vscode",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
    ]
# PyHOPE requires Python 3.10 or newer
target-version = "py310"

# [tool.ty.src]
# # Monkey-patching meshio.xdmf.main.XdmfWriter
# exclude = ['pyhope/io/io_xdmf.py']

[tool.ty.rules]
# Type checker
invalid-argument-type      = 'ignore'
invalid-assignment         = 'ignore'
possibly-missing-attribute = 'ignore'
unsupported-operator       = 'ignore'

[tool.ruff.format]
quote-style  = "single"
indent-style = "space"

# Dead code
[tool.vulture]
ignore_names = [
    # Exclude context manager
    "Basis",
    # Exclude debug function
    "time_function",
    # Exclude monkey-patching meshio
    "__init__", "data_counter", "h5_file"
    ]
sort_by_size = true
