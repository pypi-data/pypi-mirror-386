# Generated by Django 4.1.5 on 2023-01-14 09:30

from django.db import migrations


def forwards_func(apps, schema_editor):
    import karrio.server.providers.models as providers

    db_alias = schema_editor.connection.alias
    Shipment = apps.get_model("manager", "Shipment")
    shipments = (
        Shipment.objects.using(db_alias)
        .filter(selected_rate_carrier__isnull=False)
        .iterator()
    )
    Tracker = apps.get_model("manager", "Tracking")
    trackers = (
        Tracker.objects.using(db_alias)
        .filter(tracking_carrier__isnull=False)
        .iterator()
    )

    _shipments = []
    _trackers = []

    for shipment in shipments:
        carrier = providers.Carrier.objects.get(pk=shipment.selected_rate_carrier.pk)
        meta = shipment.meta or {}
        rate_provider = (
            getattr(carrier.settings, "custom_carrier_name", None)
            or meta.get("rate_provider")
            or carrier.carrier_name
        )
        shipment.meta = {
            **meta,
            "ext": carrier.ext,
            "carrier": rate_provider,
        }
        _shipments.append(shipment)

    for tracker in trackers:
        tracking_carrier = providers.Carrier.objects.get(pk=tracker.tracking_carrier.pk)
        meta = tracker.meta or {}
        carrier = (
            (
                (list(tracker.options.values())[0] or {}).get("carrier")
                or tracking_carrier.carrier_name
            )
            if len(tracker.options.values()) > 0
            else tracking_carrier.carrier_name
        )
        tracker.meta = {
            **meta,
            "carrier": carrier,
            "ext": tracking_carrier.carrier_name,
        }
        _trackers.append(tracker)

    if any(_shipments):
        Shipment.objects.using(db_alias).bulk_update(_shipments, ["meta"])

    if any(_trackers):
        Tracker.objects.using(db_alias).bulk_update(_trackers, ["meta"])


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("providers", "0044_carrier_carrier_capabilities"),
        ("manager", "0045_alter_customs_duty_billing_address_and_more"),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
