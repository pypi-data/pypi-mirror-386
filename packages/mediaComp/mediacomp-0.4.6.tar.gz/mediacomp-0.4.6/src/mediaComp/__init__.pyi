def setColorWrapAround(setting: any) -> None: ... 
def getColorWrapAround() -> bool: ... 
def pickAColor() -> "Color": ... 
def distance(c1: int, c2: int) -> float: ... 
def makeDarker(color: any) -> "Color": ... 
def makeLighter(color: any) -> "Color": ...
def makeColor(red: int, green: int = ..., blue: int = ...) -> "Color": ...
def setMediaFolder(path: str = ...) -> str: ... 
def setTestMediaFolder() -> str: ... 
def getMediaFolder(filename: str = ...) -> str: ...
def showMediaFolder() -> None: ... 
def getShortPath(filename: str) -> str: ... 
def setLibFolder(directory: str = ...) -> str: ... 
def pickAFile() -> str: ... 
def pickAFolder() -> str: ...
def randomPixels(somePic: any, number: int) -> None: ... 
def pictureTool(picture: "Picture") -> None: ...
def pixelsToPicture(pixels: any, defaultColor: "Color", maxX: int, maxY: int) -> "Picture": ...
def makePicture(filename: str, defaultColor: "Color" = "White") -> "Picture": ... 
def makeEmptyPicture(width: int, height: int, acolor: "Color" = "White") -> list: ...
def getPixels(picture: "Picture") -> list: ... 
def getWidth(picture: "Picture") -> int: ... 
def getHeight(picture: "Picture") -> int: ... 
def show(picture: "Picture") -> None: ...
def repaint(picture: "Picture") -> None: ...
def addLine(picture: "Picture", x1: int, y1: int, x2: int, y2: int, acolor: "Color") -> None: ...
def addText(picture: "Picture", x: int, y: int, string: str, acolor: "Color")  -> None: ...
def addRect(picture: "Picture", x: int, y: int, w: int, h: int, acolor: "Color") -> None: ...
def addRectFilled(picture: "Picture", x: int, y: int, w: int, h: int, acolor: "Color") -> None: ... 
def addOval(picture: "Picture", x: int, y: int, w: int, h: int, acolor: "Color") -> None: ... 
def addOvalFilled(picture: "Picture", x: int, y: int, w: int, h: int, acolor: "Color") -> None: ... 
def addArc(picture: "Picture", x: int, y: int, w: int, h: int, start: any, angle: any, acolor: "Color") -> None: ... 
def addArcFilled(picture: "Picture", x: int, y: int, w: int, h: int, start: any, angle: any, acolor: "Color") -> None: ...
def getPixelAt(picture: "Picture", x: int, y: int) -> "Pixel": ...
def setRed(pixel: "Pixel", value: int) -> None: ... 
def setGreen(pixel: "Pixel", value: int) -> None: ...  
def setBlue(pixel: "Pixel", value: int) -> None: ... 
def getRed(pixel: "Pixel") -> int: ... 
def getGreen(pixel: "Pixel") -> int: ... 
def getBlue(pixel: "Pixel") -> int: ...
def getColor(pixel: "Pixel") -> "Color": ... 
def setColor(pixel: "Pixel", color: "Color") -> None: ...
def getX(pixel: "Pixel") -> int: ... 
def getY(pixel: "Pixel") -> int: ...
def writePictureTo(picture: "Picture", filename: str) -> None: ...
def setAllPixelsToAColor(picture: "Picture", color: "Color") -> None: ... 
def copyInto(origPict: "Picture", destPict: "Picture", upperLeftX: int, upperLeftY: int) -> "Picture": ...
def duplicatePicture(picture: "Picture") -> "Picture": ...
def cropPicture(picture: "Picture", upperLeftX: int, upperLeftY: int, width: int, height: int) -> "Picture": ...
def calculateNeededFiller(message: str, width: int = ...) -> str: ...
def requestInteger(message: str) -> int: ...
def requestNumber(message: str) -> int: ... 
def requestIntegerInRange(message: str, min_val: int, max_val: int) -> int: ...
def requestString(message: str) -> str: ... 
def showWarning(message: str) -> None: ...
def showInformation(message: str) -> None: ... 
def showError(message: str) -> None: ...
def playMovie(movie: "Movie") -> None: ...
def writeQuicktime(movie: "Movie", destPath: str, framesPerSec: int) -> None: ...
def writeAVI(movie: "Movie", destPath: str, framesPerSec: int) -> None: ...
def makeMovie() -> "Movie": ... 
def makeMovieFromInitialFile(filename: str) -> "Movie": ...
def addFrameToMovie(a: any, b: any) -> None: ...
def writeFramesToDirectory(movie: "Movie", directory: str = ...) -> None: ...
def samplesToSound(samples: any) -> "Sound": ...
def makeSound(filename: str) -> "Sound": ...
def makeEmptySound(numSamples: int, samplingRate: int = ..., filename: str = ...) -> "Sound": ...
def makeEmptySoundBySeconds(seconds: int, samplingRate: int) -> "Sound": ...
def duplicateSound(sound: "Sound") -> "Sound": ...
def getSamples(sound: "Sound") -> "Samples": ...
def soundTool(sound: "Sound") -> None: ...
def play(sound: "Sound") -> None: ...
def blockingPlay(sound: "Sound") -> None: ...
def stopPlaying(sound: "Sound") -> None: ...
def playAtRate(sound: "Sound", rate: int) -> None: ...
def playAtRateDur(sound: "Sound", rate: int, dur: int) -> None: ...
def playInRange(sound: "Sound", start: int, stop: int) -> None: ...
def blockingPlayInRange(sound: "Sound", start: int, stop: int) -> None: ...
def playAtRateInRange(sound: "Sound", rate: int, start: int, stop: int) -> None: ...
def blockingPlayAtRateInRange(sound: "Sound", rate: int, start: int, stop: int) -> None: ...
def getSamplingRate(sound: "Sound") -> int: ...
def getSampleValueAt(sound: "Sound", index: int) -> int: ...
def setSampleValueAt(sound: "Sound", index: int, value: int) -> None: ...
def setSampleValue(sample: "Sample", value: int) -> None: ...
def getSampleValue(sample: "Sample") -> int: ...
def getSound(sample: "Sample") -> "Sound" : ...
def getNumSamples(sound: "Sound") -> int: ...
def getDuration(sound: "Sound") -> float: ...
def writeSoundTo(sound: "Sound", filename: str) -> None: ...
def randomSamples(someSound: "Sound", number: int) -> "Sound": ...
def getIndex(sample: "Sample") -> int: ...
def playNote(note: int, duration: int, intensity: int) -> None: ...
def turn(turtle: "Turtle", degrees: int) -> None: ...
def turnRight(turtle: "Turtle") -> None: ...
def turnToFace(turtle: "Turtle", x: int, y: int) -> None: ...
def turnLeft(turtle: "Turtle") -> None: ...
def forward(turtle: "Turtle", pixels: int) -> None: ...
def backward(turtle: "Turtle", pixels: int) -> None: ...
def moveTo(turtle: "Turtle", x: int, y: int) -> None: ...
def makeTurtle(world: "World") -> "Turtle": ...
def penUp(turtle: "Turtle") -> None: ...
def penDown(turtle: "Turtle") -> None: ...
def drop(turtle: "Turtle", picture: "Picture") -> None: ...
def getXPos(turtle: "Turtle") -> int: ...
def getYPos(turtle: "Turtle") -> int: ...
def getHeading(turtle: "Turtle") -> int: ...
def makeWorld(width: int = ..., height: int = ...) -> "World": ...
def getTurtleList(world: "World") -> any: ...
def getSampleAt(sound: "Sound", index: int) -> "Sample": ...
blue: "Color"
red: "Color"
green: "Color"
gray: "Color" 
darkGray: "Color"
lightGray: "Color"
yellow: "Color" 
orange: "Color"
pink: "Color" 
magenta: "Color"
cyan: "Color"
white: "Color"
black: "Color"