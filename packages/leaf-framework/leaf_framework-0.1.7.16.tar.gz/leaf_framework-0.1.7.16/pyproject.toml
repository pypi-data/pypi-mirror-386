[tool.poetry]
name = "leaf-framework"
version = "0.1.7.16"
description = "LabEquipment Adapter Framework (LEAF)"
authors = [
    "Matthew Crowther <nmc215@ncl.ac.uk>",
    "Brett Metcalfe <brett.metcalfe@hotmail.co.uk>",
    "Bart Nijsse <bart.nijsse@wur.nl>",
    "Jasper Koehorst <jasper.koehorst@wur.nl>"
]
license = "Apache-2.0"
readme = "README.md"
repository = "https://gitlab.com/LabEquipmentAdapterFramework/leaf"
documentation = "https://leaf.systemsbiology.nl"

packages = [
    { include = "leaf" }         # your actual Python module
]


[tool.poetry.dependencies]
aioredis = "~2.0.1"
dateparser = "~1.2.2"
httpx = "~0.28.1"
influxobject = "~0.0.4"
leaf-hello-world = ">=0.1.0"
leaf-register = "~0.1.1"
nicegui = "^2.22.1"
paho-mqtt = "~2.1.0"
pyyaml = "~6.0.2"
python = "^3.12"
redis = "~6.2.0"
requests = "~2.32.4"
watchdog = "~6.0.0"


[tool.poetry.scripts]
leaf = "leaf.start:main"

[tool.poetry.group.test.dependencies]
coverage = "^7.10.2"
mypy = "^1.17.1"
pytest = "^8.4.1"
pytest-forked = "^1.6.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.8.0"

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
pytest-cov = "^6.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
# Test configuration for CI (GitLab)
# Use --forked for test isolation to prevent conflicts
timeout = 30  # Maximum 30 seconds per test
addopts = [
    "--forked",  # Fork each test for isolation
    "--tb=short",  # Shorter tracebacks
]
markers = [
    "timing: marks tests as timing-sensitive (file watchers, etc.)",
]

[tool.coverage.run]
source = ["leaf"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
