[project]
name = "ssbc"
version = "1.2.0"
description = "Small Sample Beta Correction - PAC guarantees with small datasets"
readme = "README.md"
authors = [
  {name = "Petrus H Zwart", email = "phzwart@lbl.gov"}
]
maintainers = [
  {name = "Petrus H Zwart", email = "phzwart@lbl.gov"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = {file = "LICENSE"}
dependencies = [
  "joblib",
  "matplotlib",
  "numpy",
  "pandas",
  "plotly",
  "rich",
  "scipy",
  "typer",
]
requires-python = ">= 3.10"

[project.optional-dependencies]
test = [
    "coverage",  # testing
    "pytest",  # testing
    "pytest-cov",  # coverage plugin for pytest
    "ruff",  # linting
    "ty", # checking types
    "ipdb", # debugging
]
dev = [
    "pre-commit",  # git hooks
    "bandit[toml]",  # security linting
]
docs = [
    "sphinx>=7.0",  # documentation generator
    "sphinx-rtd-theme",  # Read the Docs theme
    "myst-parser",  # Markdown support for Sphinx
]
mcp = [
    "fastmcp",  # MCP server framework
]

[project.urls]
bugs = "https://github.com/phzwart/ssbc/issues"
changelog = "https://github.com/phzwart/ssbc/blob/master/changelog.md"
homepage = "https://github.com/phzwart/ssbc"

[project.scripts]
ssbc = "ssbc.cli:app"

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 120
# Include all directories (src, tests, examples)
extend-include = ["*.py"]
# Exclude notebooks from linting (they have special formatting)
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.bandit]
exclude_dirs = ["tests", "htmlcov", ".venv", "venv"]
skips = ["B101"]  # Skip assert_used check (common in tests)

[tool.uv]
package = true
