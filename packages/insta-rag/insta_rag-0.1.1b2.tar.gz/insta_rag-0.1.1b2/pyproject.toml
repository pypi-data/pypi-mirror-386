[project]
name = "insta_rag"
version = "0.1.1-beta.2"
description = "A RAG (Retrieval-Augmented Generation) library for document processing and retrieval."
authors = [
    { name = "Aukik Aurnab", email = "aukikaurnabx@gmail.com" },
    { name = "Tahmidul Islam", email = "me@tahmidul612.com" },
    { name = "MD Ikramul Kayes", email = "ikramul.kayesgg@gmail.com" },
]
requires-python = ">=3.9"
readme = "README.md"
license = "MIT"
keywords = ["rag", "retrieval-augmented-generation", "llm", "ai", "nlp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Natural Language :: English",
]
dependencies = [
    "openai>=1.12.0",
    "qdrant-client>=1.7.0",
    "pdfplumber>=0.10.3",
    "PyPDF2>=3.0.1",
    "tiktoken>=0.5.2",
    "numpy>=1.24.0",
    "python-dotenv>=1.0.0",
    "cohere>=4.47.0",
    "pydantic>=2.5.0",
    "requests>=2.32.5",
    "rank-bm25>=0.2.2",
]

[project.urls]
Homepage = "https://github.com/AI-Buddy-Catalyst-Labs/insta_rag"
Documentation = "https://github.com/AI-Buddy-Catalyst-Labs/insta_rag/wiki"
"Bug Tracker" = "https://github.com/AI-Buddy-Catalyst-Labs/insta_rag/issues"

[build-system]
requires = ["uv_build>=0.9.4,<0.10.0"]
build-backend = "uv_build"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
annotated_tag = true
gpg_sign = false
pre_bump_hooks = [
    "uv lock",
    "git add uv.lock",
]

[dependency-groups]
dev = [
    "commitizen>=4.9.1",
    "mdformat-ruff>=0.1.3",
    "pre-commit>=4.3.0",
    "ruff>=0.14.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-dotenv>=0.5.2",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "examples",
]
