[tool.poetry]
name = "karaoke-gen"
version = "0.65.0"
description = "Generate karaoke videos with synchronized lyrics. Handles the entire process from downloading audio and lyrics to creating the final video with title screens."
authors = ["Andrew Beveridge <andrew@beveridge.uk>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "karaoke_gen" }]
homepage = "https://github.com/nomadkaraoke/karaoke-gen"
repository = "https://github.com/nomadkaraoke/karaoke-gen"
documentation = "https://github.com/nomadkaraoke/karaoke-gen/blob/main/README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
torch = ">=2.7"
requests = ">=2"
beautifulsoup4 = ">=4"
yt-dlp = "*"
lyricsgenius = ">=3"
fetch-lyrics-from-genius = ">=0.1"
pillow = ">=10.1"
pyinstaller = ">=6.3"
google-api-python-client = "*"
google-auth = "*"
google-auth-oauthlib = "*"
google-auth-httplib2 = "*"
thefuzz = ">=0.22"
numpy = ">=2"
audio-separator = { version = ">=0.34.0", extras = ["cpu"] }
lyrics-converter = ">=0.2.1"
lyrics-transcriber = ">=0.72"
kbputils = "^0.0.16"
attrs = ">=24.2.0"
cattrs = ">=24.1.2"
toml = ">=0.10"
argparse = ">=1.4.0"
psutil = "^7.0.0"
pyperclip = "*"
pytest-asyncio = "*"
ffmpeg-python = "^0.2.0"
modal = "^1.0.5"
python-multipart = "^0.0.20"
matplotlib = ">=3"

[tool.poetry.group.dev.dependencies]
black = ">=23"
poetry = "*"
pytest = ">=7.0"
pytest-cov = ">=4.0"
pytest-mock = ">=3.10"
pytest-asyncio = "*"


[tool.poetry.scripts]
karaoke-gen = 'karaoke_gen.utils.gen_cli:main'
karaoke-bulk = 'karaoke_gen.utils.bulk_cli:main'

[tool.black]
line-length = 140

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests/unit", "tests/integration"]
python_files = ["test_*.py"]
addopts = [
    "--cov=karaoke_gen",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--asyncio-mode=auto",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: mark test as async",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:'audioop' is deprecated:DeprecationWarning",
    "ignore::RuntimeWarning",
    "ignore::UserWarning",
]
