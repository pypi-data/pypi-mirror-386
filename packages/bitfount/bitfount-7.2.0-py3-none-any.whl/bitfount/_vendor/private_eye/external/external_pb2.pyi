"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.timestamp_pb2 import (
    Timestamp as google___protobuf___timestamp_pb2___Timestamp,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ExternalData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Optos(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        datasource: typing___Text = ...
        patient_id: typing___Text = ...
        patient_name: typing___Text = ...
        patient_refcodes: typing___Text = ...
        patient_gender: typing___Text = ...
        session_id: typing___Text = ...
        session_instrument_id: typing___Text = ...
        image_id: typing___Text = ...
        image_type: builtin___int = ...
        image_eye: builtin___int = ...

        @property
        def patient_dob(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def session_start_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def session_end_time(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def image_captured(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        def __init__(self,
            *,
            datasource : typing___Optional[typing___Text] = None,
            patient_id : typing___Optional[typing___Text] = None,
            patient_name : typing___Optional[typing___Text] = None,
            patient_refcodes : typing___Optional[typing___Text] = None,
            patient_dob : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            patient_gender : typing___Optional[typing___Text] = None,
            session_id : typing___Optional[typing___Text] = None,
            session_instrument_id : typing___Optional[typing___Text] = None,
            session_start_time : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            session_end_time : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            image_id : typing___Optional[typing___Text] = None,
            image_type : typing___Optional[builtin___int] = None,
            image_captured : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            image_eye : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"image_captured",b"image_captured",u"patient_dob",b"patient_dob",u"session_end_time",b"session_end_time",u"session_start_time",b"session_start_time"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"datasource",b"datasource",u"image_captured",b"image_captured",u"image_eye",b"image_eye",u"image_id",b"image_id",u"image_type",b"image_type",u"patient_dob",b"patient_dob",u"patient_gender",b"patient_gender",u"patient_id",b"patient_id",u"patient_name",b"patient_name",u"patient_refcodes",b"patient_refcodes",u"session_end_time",b"session_end_time",u"session_id",b"session_id",u"session_instrument_id",b"session_instrument_id",u"session_start_time",b"session_start_time"]) -> None: ...
    type___Optos = Optos

    class Heidelberg(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        datasource: typing___Text = ...
        patient_pid: builtin___int = ...
        patient_first_name: typing___Text = ...
        patient_last_name: typing___Text = ...
        patient_title: typing___Text = ...
        patient_sex: typing___Text = ...
        patient_id: typing___Text = ...

        @property
        def patient_dob_value(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        def __init__(self,
            *,
            datasource : typing___Optional[typing___Text] = None,
            patient_pid : typing___Optional[builtin___int] = None,
            patient_first_name : typing___Optional[typing___Text] = None,
            patient_last_name : typing___Optional[typing___Text] = None,
            patient_title : typing___Optional[typing___Text] = None,
            patient_dob_value : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            patient_sex : typing___Optional[typing___Text] = None,
            patient_id : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"patient_dob",b"patient_dob",u"patient_dob_value",b"patient_dob_value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"datasource",b"datasource",u"patient_dob",b"patient_dob",u"patient_dob_value",b"patient_dob_value",u"patient_first_name",b"patient_first_name",u"patient_id",b"patient_id",u"patient_last_name",b"patient_last_name",u"patient_pid",b"patient_pid",u"patient_sex",b"patient_sex",u"patient_title",b"patient_title"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"patient_dob",b"patient_dob"]) -> typing_extensions___Literal["patient_dob_value"]: ...
    type___Heidelberg = Heidelberg

    class TopconImagenet2000(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class Patient(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            ident: typing___Text = ...
            last_name: typing___Text = ...
            first_name: typing___Text = ...
            middle_name: typing___Text = ...
            sex: typing___Text = ...

            @property
            def birth_date_value(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

            def __init__(self,
                *,
                ident : typing___Optional[typing___Text] = None,
                last_name : typing___Optional[typing___Text] = None,
                first_name : typing___Optional[typing___Text] = None,
                middle_name : typing___Optional[typing___Text] = None,
                sex : typing___Optional[typing___Text] = None,
                birth_date_value : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"birth_date",b"birth_date",u"birth_date_value",b"birth_date_value"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"birth_date",b"birth_date",u"birth_date_value",b"birth_date_value",u"first_name",b"first_name",u"ident",b"ident",u"last_name",b"last_name",u"middle_name",b"middle_name",u"sex",b"sex"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions___Literal[u"birth_date",b"birth_date"]) -> typing_extensions___Literal["birth_date_value"]: ...
        type___Patient = Patient

        class Image(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            class ProofSheet(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
                sn: builtin___int = ...
                image_index: builtin___int = ...

                def __init__(self,
                    *,
                    sn : typing___Optional[builtin___int] = None,
                    image_index : typing___Optional[builtin___int] = None,
                    ) -> None: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"image_index",b"image_index",u"sn",b"sn"]) -> None: ...
            type___ProofSheet = ProofSheet

            sn: builtin___int = ...
            file_name: typing___Text = ...
            proc_date: typing___Text = ...
            proc_time: typing___Text = ...
            proc_name: typing___Text = ...
            label: typing___Text = ...
            disk_no: builtin___int = ...
            image_type: builtin___int = ...
            size: builtin___int = ...
            mode: builtin___int = ...
            device: builtin___int = ...
            relay: builtin___float = ...
            angle_value: builtin___float = ...
            is_proof_sheet: builtin___bool = ...

            @property
            def proof_sheet(self) -> type___ExternalData.TopconImagenet2000.Image.ProofSheet: ...

            def __init__(self,
                *,
                sn : typing___Optional[builtin___int] = None,
                file_name : typing___Optional[typing___Text] = None,
                proc_date : typing___Optional[typing___Text] = None,
                proc_time : typing___Optional[typing___Text] = None,
                proc_name : typing___Optional[typing___Text] = None,
                label : typing___Optional[typing___Text] = None,
                disk_no : typing___Optional[builtin___int] = None,
                image_type : typing___Optional[builtin___int] = None,
                size : typing___Optional[builtin___int] = None,
                mode : typing___Optional[builtin___int] = None,
                device : typing___Optional[builtin___int] = None,
                relay : typing___Optional[builtin___float] = None,
                angle_value : typing___Optional[builtin___float] = None,
                is_proof_sheet : typing___Optional[builtin___bool] = None,
                proof_sheet : typing___Optional[type___ExternalData.TopconImagenet2000.Image.ProofSheet] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"angle",b"angle",u"angle_value",b"angle_value",u"proof_sheet",b"proof_sheet"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"angle",b"angle",u"angle_value",b"angle_value",u"device",b"device",u"disk_no",b"disk_no",u"file_name",b"file_name",u"image_type",b"image_type",u"is_proof_sheet",b"is_proof_sheet",u"label",b"label",u"mode",b"mode",u"proc_date",b"proc_date",u"proc_name",b"proc_name",u"proc_time",b"proc_time",u"proof_sheet",b"proof_sheet",u"relay",b"relay",u"size",b"size",u"sn",b"sn"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions___Literal[u"angle",b"angle"]) -> typing_extensions___Literal["angle_value"]: ...
        type___Image = Image


        @property
        def patient(self) -> type___ExternalData.TopconImagenet2000.Patient: ...

        @property
        def image(self) -> type___ExternalData.TopconImagenet2000.Image: ...

        def __init__(self,
            *,
            patient : typing___Optional[type___ExternalData.TopconImagenet2000.Patient] = None,
            image : typing___Optional[type___ExternalData.TopconImagenet2000.Image] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"image",b"image",u"patient",b"patient"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"image",b"image",u"patient",b"patient"]) -> None: ...
    type___TopconImagenet2000 = TopconImagenet2000

    class Custom(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        data_source: typing___Text = ...
        file_name: typing___Text = ...
        patient_key: typing___Text = ...
        first_name_value: typing___Text = ...
        last_name_value: typing___Text = ...
        gender_value: typing___Text = ...
        manufacturer: typing___Text = ...
        scanner_model_value: typing___Text = ...
        scanner_serial_number_value: typing___Text = ...
        scanner_software_version_value: typing___Text = ...
        laterality: typing___Text = ...
        fixation_value: typing___Text = ...
        anterior_value: builtin___bool = ...
        protocol_value: typing___Text = ...
        modality: typing___Text = ...
        group_value: builtin___int = ...
        resolution_x_value: builtin___float = ...
        resolution_y_value: builtin___float = ...
        resolution_z_value: builtin___float = ...
        field_of_view_value: builtin___float = ...
        source_image_id: typing___Text = ...
        source_series_id_value: typing___Text = ...
        source_exam_id_value: typing___Text = ...

        @property
        def loaded_date(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def date_of_birth_value(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def scan_datetime(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        @property
        def capture_datetime_value(self) -> google___protobuf___timestamp_pb2___Timestamp: ...

        def __init__(self,
            *,
            data_source : typing___Optional[typing___Text] = None,
            loaded_date : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            file_name : typing___Optional[typing___Text] = None,
            patient_key : typing___Optional[typing___Text] = None,
            first_name_value : typing___Optional[typing___Text] = None,
            last_name_value : typing___Optional[typing___Text] = None,
            date_of_birth_value : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            gender_value : typing___Optional[typing___Text] = None,
            manufacturer : typing___Optional[typing___Text] = None,
            scan_datetime : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            scanner_model_value : typing___Optional[typing___Text] = None,
            scanner_serial_number_value : typing___Optional[typing___Text] = None,
            scanner_software_version_value : typing___Optional[typing___Text] = None,
            laterality : typing___Optional[typing___Text] = None,
            fixation_value : typing___Optional[typing___Text] = None,
            anterior_value : typing___Optional[builtin___bool] = None,
            protocol_value : typing___Optional[typing___Text] = None,
            modality : typing___Optional[typing___Text] = None,
            group_value : typing___Optional[builtin___int] = None,
            resolution_x_value : typing___Optional[builtin___float] = None,
            resolution_y_value : typing___Optional[builtin___float] = None,
            resolution_z_value : typing___Optional[builtin___float] = None,
            field_of_view_value : typing___Optional[builtin___float] = None,
            capture_datetime_value : typing___Optional[google___protobuf___timestamp_pb2___Timestamp] = None,
            source_image_id : typing___Optional[typing___Text] = None,
            source_series_id_value : typing___Optional[typing___Text] = None,
            source_exam_id_value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"anterior",b"anterior",u"anterior_value",b"anterior_value",u"capture_datetime",b"capture_datetime",u"capture_datetime_value",b"capture_datetime_value",u"date_of_birth",b"date_of_birth",u"date_of_birth_value",b"date_of_birth_value",u"field_of_view",b"field_of_view",u"field_of_view_value",b"field_of_view_value",u"first_name",b"first_name",u"first_name_value",b"first_name_value",u"fixation",b"fixation",u"fixation_value",b"fixation_value",u"gender",b"gender",u"gender_value",b"gender_value",u"group",b"group",u"group_value",b"group_value",u"last_name",b"last_name",u"last_name_value",b"last_name_value",u"loaded_date",b"loaded_date",u"protocol",b"protocol",u"protocol_value",b"protocol_value",u"resolution_x",b"resolution_x",u"resolution_x_value",b"resolution_x_value",u"resolution_y",b"resolution_y",u"resolution_y_value",b"resolution_y_value",u"resolution_z",b"resolution_z",u"resolution_z_value",b"resolution_z_value",u"scan_datetime",b"scan_datetime",u"scanner_model",b"scanner_model",u"scanner_model_value",b"scanner_model_value",u"scanner_serial_number",b"scanner_serial_number",u"scanner_serial_number_value",b"scanner_serial_number_value",u"scanner_software_version",b"scanner_software_version",u"scanner_software_version_value",b"scanner_software_version_value",u"source_exam_id",b"source_exam_id",u"source_exam_id_value",b"source_exam_id_value",u"source_series_id",b"source_series_id",u"source_series_id_value",b"source_series_id_value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"anterior",b"anterior",u"anterior_value",b"anterior_value",u"capture_datetime",b"capture_datetime",u"capture_datetime_value",b"capture_datetime_value",u"data_source",b"data_source",u"date_of_birth",b"date_of_birth",u"date_of_birth_value",b"date_of_birth_value",u"field_of_view",b"field_of_view",u"field_of_view_value",b"field_of_view_value",u"file_name",b"file_name",u"first_name",b"first_name",u"first_name_value",b"first_name_value",u"fixation",b"fixation",u"fixation_value",b"fixation_value",u"gender",b"gender",u"gender_value",b"gender_value",u"group",b"group",u"group_value",b"group_value",u"last_name",b"last_name",u"last_name_value",b"last_name_value",u"laterality",b"laterality",u"loaded_date",b"loaded_date",u"manufacturer",b"manufacturer",u"modality",b"modality",u"patient_key",b"patient_key",u"protocol",b"protocol",u"protocol_value",b"protocol_value",u"resolution_x",b"resolution_x",u"resolution_x_value",b"resolution_x_value",u"resolution_y",b"resolution_y",u"resolution_y_value",b"resolution_y_value",u"resolution_z",b"resolution_z",u"resolution_z_value",b"resolution_z_value",u"scan_datetime",b"scan_datetime",u"scanner_model",b"scanner_model",u"scanner_model_value",b"scanner_model_value",u"scanner_serial_number",b"scanner_serial_number",u"scanner_serial_number_value",b"scanner_serial_number_value",u"scanner_software_version",b"scanner_software_version",u"scanner_software_version_value",b"scanner_software_version_value",u"source_exam_id",b"source_exam_id",u"source_exam_id_value",b"source_exam_id_value",u"source_image_id",b"source_image_id",u"source_series_id",b"source_series_id",u"source_series_id_value",b"source_series_id_value"]) -> None: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"anterior",b"anterior"]) -> typing_extensions___Literal["anterior_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"capture_datetime",b"capture_datetime"]) -> typing_extensions___Literal["capture_datetime_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"date_of_birth",b"date_of_birth"]) -> typing_extensions___Literal["date_of_birth_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"field_of_view",b"field_of_view"]) -> typing_extensions___Literal["field_of_view_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"first_name",b"first_name"]) -> typing_extensions___Literal["first_name_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"fixation",b"fixation"]) -> typing_extensions___Literal["fixation_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"gender",b"gender"]) -> typing_extensions___Literal["gender_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"group",b"group"]) -> typing_extensions___Literal["group_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"last_name",b"last_name"]) -> typing_extensions___Literal["last_name_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"protocol",b"protocol"]) -> typing_extensions___Literal["protocol_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"resolution_x",b"resolution_x"]) -> typing_extensions___Literal["resolution_x_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"resolution_y",b"resolution_y"]) -> typing_extensions___Literal["resolution_y_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"resolution_z",b"resolution_z"]) -> typing_extensions___Literal["resolution_z_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"scanner_model",b"scanner_model"]) -> typing_extensions___Literal["scanner_model_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"scanner_serial_number",b"scanner_serial_number"]) -> typing_extensions___Literal["scanner_serial_number_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"scanner_software_version",b"scanner_software_version"]) -> typing_extensions___Literal["scanner_software_version_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"source_exam_id",b"source_exam_id"]) -> typing_extensions___Literal["source_exam_id_value"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"source_series_id",b"source_series_id"]) -> typing_extensions___Literal["source_series_id_value"]: ...
    type___Custom = Custom


    @property
    def optos(self) -> type___ExternalData.Optos: ...

    @property
    def heidelberg(self) -> type___ExternalData.Heidelberg: ...

    @property
    def topcon_imagenet2000(self) -> type___ExternalData.TopconImagenet2000: ...

    @property
    def custom(self) -> type___ExternalData.Custom: ...

    def __init__(self,
        *,
        optos : typing___Optional[type___ExternalData.Optos] = None,
        heidelberg : typing___Optional[type___ExternalData.Heidelberg] = None,
        topcon_imagenet2000 : typing___Optional[type___ExternalData.TopconImagenet2000] = None,
        custom : typing___Optional[type___ExternalData.Custom] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"custom",b"custom",u"heidelberg",b"heidelberg",u"optos",b"optos",u"topcon_imagenet2000",b"topcon_imagenet2000"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"custom",b"custom",u"heidelberg",b"heidelberg",u"optos",b"optos",u"topcon_imagenet2000",b"topcon_imagenet2000"]) -> None: ...
type___ExternalData = ExternalData
