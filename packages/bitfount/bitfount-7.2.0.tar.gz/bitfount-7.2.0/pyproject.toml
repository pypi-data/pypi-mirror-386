# Codecov
# =======
# Doesn't support pyproject.toml yet
# See .codecov.yaml

# Coverage
# ========
[tool.coverage.report]
exclude_lines = [
  "raise NotImplementedError",
  'if __name__ == "__main__":',
  "if TYPE_CHECKING:",
  "^\\s*\\.\\.\\.\\s*$", # This matches any line that has `...` preceeded by whitespace
  "^\\s*pass\\s*$", # This matches any line that has `pass` preceeded by whitespace
]

[tool.coverage.run]
branch = true
include = ["bitfount/*"]

# Interrogate
# ===========
[tool.interrogate]
exclude = [
  # autogenerated code
  "bitfount/_vendor/", # vendorized code
  "bitfount/federated/transport/protos/", # not our code
  "bitfount/backends/pytorch/models/torch_functions/", # build folders
  ".eggs/",
  "build/",
  "dist/", # other
  "docs/node_modules/",
]
# TODO: [BIT-963] increase 'fail-under' to 100
fail-under = 98
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-nested-classes = true
ignore-nested-functions = true
ignore-overloaded-functions = true
ignore-property-decorators = true
omit-covered-files = true
verbose = 1

# Jupytext
# ========
[tool.jupytext]
formats = "md,ipynb"
hide_notebook_metadata = true

# Pytest
# ======
[tool.pytest.ini_options]
minversion = "6.0"

addopts = [
  "--cov-report=term-missing",
  "--cov-config=pyproject.toml",
  "-ra", # Extra test summary info for all tests except passed tests
  "-vv", # Extra verbosity
  "--no-header", # Removes header from pytest output
  "--disable-warnings", # Removes warnings from pytest output
]
markers = [
  "backend_test: mark tests involving a specific backend.",
  "end_to_end_mocks_test: tests that run the full end-to-end system, but mock out web calls",
  "end_to_end_test: mark tests that run the full end-to-end system, including web calls.",
  "integration_test: mark slower, integration- or training-like tests.",
  "unit_test: mark faster, unit-test-like tests.",
]
testpaths = ["tests"]

# Log formats
log_date_format = "%H:%M:%S"
log_format = "%(asctime)s.%(msecs)03d: %(processName)s.%(threadName)s: %(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
log_level = "DEBUG"

# Uncomment the following to get live logs during tests
#log_cli = true
#log_cli_level = "INFO"

# pytest-flask server fixture scope setting
live_server_scope = "function"

# pytest-asyncio options
asyncio_mode = "auto"

# ruff
# ====
[tool.ruff]
src = ["bitfount", "dev-scripts", "scripts", "tests", "tutorials"]
line-length = 88
exclude = [
    "bitfount/_vendor/",
    "bitfount/federated/transport/protos/*.py",
    "bitfount/federated/transport/protos/*.pyi",
    "bitfount/federated/algorithms/hugging_face_algorithms/timm_fine_tuning.py",
    "bitfount/federated/algorithms/hugging_face_algorithms/utils.py",
    "bitfount/models/models.py",
    "stubs/",
    "*.ipynb",
]

[tool.ruff.lint]
select = ["B", "D", "E", "F", "I", "W"]
ignore = ["B017", "B024", "B028", "D105", "D106", "D107", "D202", "D418", "E203", "E701"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D102", "D417"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# tox
# ===
# Doesn't (fully) support pyproject.toml yet
# See tox.ini

# vendorize
# ===
[tool.vendorize]
target = "bitfount/_vendor"
packages = [
    "requirements/to_vendor/private-eye-5.1.1-bitfount.2.zip"
]
