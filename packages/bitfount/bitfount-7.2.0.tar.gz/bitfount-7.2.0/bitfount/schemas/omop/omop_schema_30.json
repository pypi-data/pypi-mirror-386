{
  "tables": [
    {
      "name": "person",
      "description": "This table serves as the central identity management for all Persons in the database. It contains records that uniquely identify each person or patient, and some demographic information.",
      "features": [
        {
          "featureName": "person_id",
          "description": "A unique identifier for each person",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "gender_concept_id",
          "description": "A foreign key that refers to a standard concept identifier in the vocabulary for the gender of the person",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "year_of_birth",
          "description": "The year of birth of the person",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "month_of_birth",
          "description": "The month of birth of the person",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "day_of_birth",
          "description": "The day of the month of birth of the person",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "race_concept_id",
          "description": "A foreign key that refers to a standard concept identifier in the vocabulary for the race of the person",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "ethnicity_concept_id",
          "description": "A foreign key that refers to a standard concept identifier in the vocabulary for the ethnicity of the person",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "location_id",
          "description": "A foreign key to the location where the person is residing",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "provider_id",
          "description": "A foreign key to the primary care provider the person is seeing in the health system",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "care_site_id",
          "description": "A foreign key to the site of primary care in the health system",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "person_source_value",
          "description": "An encrypted key derived from the person identifier in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "gender_source_value",
          "description": "The source code for the gender of the person as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "race_source_value",
          "description": "The source code for the race of the person as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "ethnicity_source_value",
          "description": "The source code for the ethnicity of the person as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "observation_period",
      "description": "This table contains records which define spans of time during which two conditions are expected to hold: (i) Clinical Events that happened to the Person are recorded in the Event tables, and (ii) absence of records indicate such Events did not occur during this span of time.",
      "features": [
        {
          "featureName": "observation_period_id",
          "description": "A unique identifier for each observation period",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person for whom the observation period is defined",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "observation_period_start_date",
          "description": "The start date of the observation period for which data are available from the data source",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "observation_period_end_date",
          "description": "The end date of the observation period for which data are available from the data source",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "visit_occurrence",
      "description": "This table contains Events where Persons engage with the healthcare system for a duration of time. They are often also called 'Encounters'.",
      "features": [
        {
          "featureName": "visit_occurrence_id",
          "description": "A unique identifier for each person's visit or encounter at a healthcare provider",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person for whom the visit is recorded",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "visit_start_date",
          "description": "The start date of the visit",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "visit_end_date",
          "description": "The end date of the visit",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "place_of_service_concept_id",
          "description": "A foreign key that refers to a place of service concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "care_site_id",
          "description": "A foreign key to the care site in the location where the visit occurred",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "place_of_service_source_value",
          "description": "The source code for the place of service as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "condition_occurrence",
      "description": "This table contains records of Events of a Person suggesting the presence of a disease or medical condition stated as a diagnosis, a sign, or a symptom, which is either observed by a Provider or reported by the patient.",
      "features": [
        {
          "featureName": "condition_occurrence_id",
          "description": "A unique identifier for each condition occurrence event",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person who is experiencing the condition",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "condition_concept_id",
          "description": "A foreign key that refers to a standard condition concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "condition_start_date",
          "description": "The date when the condition was first recorded",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "condition_end_date",
          "description": "The date when the condition was resolved or ended",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "condition_type_concept_id",
          "description": "A foreign key to the predefined concept identifier in the vocabulary reflecting the source data from which the condition was recorded",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "stop_reason",
          "description": "The reason that the condition was no longer present, as indicated in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "visit_occurrence_id",
          "description": "A foreign key to the visit in the visit table during which the condition was determined (diagnosed)",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "condition_source_value",
          "description": "The source code for the condition as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "drug_exposure",
      "description": "This table captures records about the exposure to a Drug ingested or otherwise introduced into the body. A Drug is a biochemical substance formulated in such a way that when administered to a Person it will exert a certain physiological effect.",
      "features": [
        {
          "featureName": "drug_exposure_id",
          "description": "A unique identifier for each drug utilization event",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person who is subjected to the drug",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "drug_concept_id",
          "description": "A foreign key that refers to a standard concept identifier in the vocabulary for the drug concept",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "drug_exposure_start_date",
          "description": "The start date for the current instance of drug utilization",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "drug_exposure_end_date",
          "description": "The end date for the current instance of drug utilization",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "drug_type_concept_id",
          "description": "A foreign key to the predefined concept identifier in the vocabulary reflecting the type of drug exposure recorded",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "stop_reason",
          "description": "The reason the person stopped the medication as it is represented in the source",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "refills",
          "description": "The number of refills after the initial prescription",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "quantity",
          "description": "The quantity of drug as recorded in the original prescription or dispensing record",
          "dtype": "float64",
          "semanticType": "continuous"
        },
        {
          "featureName": "days_supply",
          "description": "The number of days of supply of the medication as recorded in the original prescription or dispensing record",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "sig",
          "description": "The directions ('signetur') on the drug prescription as recorded in the original prescription (and printed on the container) or dispensing record",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "visit_occurrence_id",
          "description": "A foreign key to the visit in the visit table during which the drug was prescribed",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "drug_source_value",
          "description": "The source code for the drug as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "procedure_occurrence",
      "description": "This table contains records of activities or processes ordered by, or carried out by, a healthcare provider on the patient to have a diagnostic or therapeutic purpose.",
      "features": [
        {
          "featureName": "procedure_occurrence_id",
          "description": "A unique identifier for each procedure occurrence event",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person who is subjected to the procedure",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "procedure_concept_id",
          "description": "A foreign key that refers to a standard procedure concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "procedure_date",
          "description": "The date on which the procedure was performed",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "procedure_type_concept_id",
          "description": "A foreign key to the predefined concept identifier in the vocabulary reflecting the type of source data from which the procedure record is derived",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "modifier_concept_id",
          "description": "A foreign key to a standard concept identifier for a modifier to the procedure",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "quantity",
          "description": "The quantity of procedures ordered or administered",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "visit_occurrence_id",
          "description": "A foreign key to the visit in the visit table during which the procedure was carried out",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "procedure_source_value",
          "description": "The source code for the procedure as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "observation",
      "description": "This table captures clinical facts about a person obtained in the context of examination, questioning or a procedure.",
      "features": [
        {
          "featureName": "observation_id",
          "description": "A unique identifier for each observation",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person about whom the observation was recorded",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "observation_concept_id",
          "description": "A foreign key to the standard observation concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "observation_date",
          "description": "The date of the observation",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "observation_time",
          "description": "The time of the observation, if available",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "value_as_number",
          "description": "The observation result stored as a number",
          "dtype": "float64",
          "semanticType": "continuous"
        },
        {
          "featureName": "value_as_string",
          "description": "The observation result stored as a string",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "value_as_concept_id",
          "description": "A foreign key to an observation result stored as a concept identifier",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "units_concept_id",
          "description": "A foreign key to a standard concept identifier of measurement units in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "range_low",
          "description": "The lower limit of the normal range of the observation",
          "dtype": "float64",
          "semanticType": "continuous"
        },
        {
          "featureName": "range_high",
          "description": "The upper limit of the normal range of the observation",
          "dtype": "float64",
          "semanticType": "continuous"
        },
        {
          "featureName": "observation_type_concept_id",
          "description": "A foreign key to the predefined concept identifier in the vocabulary reflecting the type of the observation",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "associated_provider_id",
          "description": "A foreign key to the provider in the provider table who was responsible for making the observation",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "visit_occurrence_id",
          "description": "A foreign key to the visit in the visit table during which the observation was recorded",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "relevant_condition_concept_id",
          "description": "A foreign key to the predefined concept identifier in the vocabulary reflecting the condition that was associated with the observation",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "observation_source_value",
          "description": "The observation code as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "units_source_value",
          "description": "The source code for the unit as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "death",
      "description": "The death table contains the clinical event for how and when a person died.",
      "features": [
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the deceased person",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "death_date",
          "description": "The date the person was deceased",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "death_type_concept_id",
          "description": "A foreign key referring to the predefined concept identifier in the vocabulary reflecting how the death was represented in the source data",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "cause_of_death_concept_id",
          "description": "A foreign key referring to a standard concept identifier in the vocabulary for conditions",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "cause_of_death_source_value",
          "description": "The source code for the cause of death as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "location",
      "description": "The location table represents a generic way to capture physical location or address information of persons and care sites.",
      "features": [
        {
          "featureName": "location_id",
          "description": "A unique identifier for each geographic location",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "address_1",
          "description": "The address field 1, typically used for the street address",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "address_2",
          "description": "The address field 2, typically used for additional address information such as buildings, suites, floors, etc",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "city",
          "description": "The city field as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "state",
          "description": "The state field as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "zip",
          "description": "The zip or postal code",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "county",
          "description": "The county",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "location_source_value",
          "description": "The verbatim information that is used to uniquely identify the location as it appears in the source data",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "care_site",
      "description": "The care_site table contains a list of uniquely identified institutional (physical or organizational) units where healthcare delivery is practiced (offices, wards, hospitals, clinics, etc.).",
      "features": [
        {
          "featureName": "care_site_id",
          "description": "A unique identifier for each care site",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "location_id",
          "description": "A foreign key to the geographic location of the administrative offices of the care site in the location table",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "organization_id",
          "description": "A foreign key to the organization table showing the organizational hierarchy of the care site",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "place_of_service_concept_id",
          "description": "A foreign key that refers to a place of service concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "care_site_source_value",
          "description": "The identifier for the care site as it appears in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "place_of_service_source_value",
          "description": "The source code for the place of service as it appears in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "organization",
      "description": "The organization table contains a list of uniquely identified health care organizations.",
      "features": [
        {
          "featureName": "organization_id",
          "description": "A unique identifier for each organization",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "place_of_service_concept_id",
          "description": "A foreign key that refers to a place of service concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "location_id",
          "description": "A foreign key to the geographic location in the location table, where the organization is located",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "organization_source_value",
          "description": "The identifier for the organization as it appears in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "place_of_service_source_value",
          "description": "The source code for the place of service as it appears in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "provider",
      "description": "The provider table contains a list of uniquely identified healthcare providers. These are individuals providing hands-on healthcare to patients, such as physicians, nurses, midwives, physical therapists etc.",
      "features": [
        {
          "featureName": "provider_id",
          "description": "A unique identifier for each provider",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "npi",
          "description": "The National Provider Identifier (NPI) of the provider",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "dea",
          "description": "The Drug Enforcement Administration (DEA) number of the provider",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "specialty_concept_id",
          "description": "A foreign key to a concept identifier in the vocabulary for the specialty of the provider",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "care_site_id",
          "description": "A foreign key to the main care site where the provider is practicing",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "provider_source_value",
          "description": "The identifier used for the provider in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "specialty_source_value",
          "description": "The source code for the provider specialty as it appears in the source data, stored here for reference",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "drug_era",
      "description": "A drug era is defined as a span of time when the person is assumed to be exposed to a particular drug. Successive periods of drug dispensing separated by 30 days or less are combined into a single drug era.",
      "features": [
        {
          "featureName": "drug_era_id",
          "description": "A unique identifier for each drug era",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person who is subjected to the drug during the drug era",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "drug_concept_id",
          "description": "A foreign key that refers to a standard concept identifier in the vocabulary for the ingredient concept",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "drug_era_start_date",
          "description": "The start date for the drug era constructed from the individual instances of drug exposures",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "drug_era_end_date",
          "description": "The end date for the drug era constructed from the individual instances of drug exposures",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "drug_exposure_count",
          "description": "The number of individual drug exposure occurrences used to construct the drug era",
          "dtype": "Int64",
          "semanticType": "continuous"
        }
      ]
    },
    {
      "name": "condition_era",
      "description": "A condition era is defined as a span of time when the person is assumed to have a given condition. Successive periods of condition occurrence separated by 30 days or less are combined into a single condition era.",
      "features": [
        {
          "featureName": "condition_era_id",
          "description": "A unique identifier for each condition era",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "person_id",
          "description": "A foreign key identifier to the person who is experiencing the condition during the condition era",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "condition_concept_id",
          "description": "A foreign key that refers to a standard condition concept identifier in the vocabulary",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "condition_era_start_date",
          "description": "The start date for the condition era constructed from the individual instances of condition occurrences",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "condition_era_end_date",
          "description": "The end date for the condition era constructed from the individual instances of condition occurrences",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "condition_occurrence_count",
          "description": "The number of individual condition occurrence events used to construct the condition era",
          "dtype": "Int64",
          "semanticType": "continuous"
        }
      ]
    },
    {
      "name": "concept",
      "description": "The concept table contains records that uniquely identify each fundamental unit of meaning used to represent healthcare information across all domains of analysis within the OMOP common data model.",
      "features": [
        {
          "featureName": "concept_id",
          "description": "A unique identifier for each concept across all domains",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "concept_name",
          "description": "An unambiguous, meaningful and descriptive name for the concept",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "concept_level",
          "description": "The level of hierarchy associated with the concept",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "concept_class",
          "description": "The category or class of the concept along both the hierarchical tree as well as different domains",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "vocabulary_id",
          "description": "A foreign key to the vocabulary table indicating from which source the concept has been adapted",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "concept_code",
          "description": "The concept code represents the identifier of the concept in the source vocabulary",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "valid_start_date",
          "description": "The date when the concept became valid",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "valid_end_date",
          "description": "The date when the concept became invalid",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "invalid_reason",
          "description": "Reason the concept was invalidated",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "vocabulary",
      "description": "The vocabulary table includes a list of the vocabularies collected from various sources or created de novo by the OMOP community.",
      "features": [
        {
          "featureName": "vocabulary_id",
          "description": "A unique identifier for each vocabulary",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "vocabulary_name",
          "description": "The name describing the vocabulary",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "vocabulary_reference",
          "description": "External reference to documentation or available download of the about the vocabulary",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "vocabulary_version",
          "description": "Version of the vocabulary",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "concept_relationship",
      "description": "The concept_relationship table contains records that define direct relationships between concepts across all domains and vocabularies.",
      "features": [
        {
          "featureName": "concept_id_1",
          "description": "A foreign key to a concept in the concept table associated with the relationship",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "concept_id_2",
          "description": "A foreign key to a concept in the concept table associated with the relationship",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "relationship_id",
          "description": "A unique identifier to the type or nature of the relationship",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "valid_start_date",
          "description": "The date when the the relationship became valid",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "valid_end_date",
          "description": "The date when the relationship became invalid",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "invalid_reason",
          "description": "Reason the relationship was invalidated",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    },
    {
      "name": "relationship",
      "description": "The relationship table provides a reference list of all types of relationships that can be used to associate any two concepts in the concept_relationship table.",
      "features": [
        {
          "featureName": "relationship_id",
          "description": "A unique identifier for each type of relationship",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "relationship_name",
          "description": "The text that describes the relationship type",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "is_hierarchical",
          "description": "Defines whether a relationship defines concepts into classes or hierarchies",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "defines_ancestry",
          "description": "Defines whether a hierarchical relationship contributes to the concept_ancestor table",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "reverse_relationship",
          "description": "The identifier for the relationship used to define the reverse relationship between two concepts",
          "dtype": "Int64",
          "semanticType": "categorical"
        }
      ]
    },
    {
      "name": "concept_ancestor",
      "description": "The concept_ancestor table is designed to simplify observational analysis by providing the complete hierarchical relationships between concepts.",
      "features": [
        {
          "featureName": "ancestor_concept_id",
          "description": "A foreign key to the concept in the concept table for the higher-level concept that forms the ancestor in the relationship",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "descendant_concept_id",
          "description": "A foreign key to the concept in the concept table for the lower-level concept that forms the descendant in the relationship",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "min_levels_of_separation",
          "description": "The minimum separation in number of levels of hierarchy between ancestor and descendant concepts",
          "dtype": "Int64",
          "semanticType": "continuous"
        },
        {
          "featureName": "max_levels_of_separation",
          "description": "The maximum separation in number of levels of hierarchy between ancestor and descendant concepts",
          "dtype": "Int64",
          "semanticType": "continuous"
        }
      ]
    },
    {
      "name": "source_to_concept_map",
      "description": "The source to concept map table is a legacy data structure within the OMOP common data model, recommended for use in ETL processes to maintain local source codes which are not available as concepts in the standardized vocabularies.",
      "features": [
        {
          "featureName": "source_code",
          "description": "The source code being translated into a standard concept",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "source_vocabulary_id",
          "description": "A foreign key to the vocabulary table defining the vocabulary of the source code",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "source_code_description",
          "description": "An optional description for the source code",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "target_concept_id",
          "description": "A foreign key to the target concept to which the source code is being mapped",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "target_vocabulary_id",
          "description": "A foreign key to the vocabulary table defining the vocabulary of the target concept",
          "dtype": "Int64",
          "semanticType": "categorical"
        },
        {
          "featureName": "mapping_type",
          "description": "The type of mapping from source to target concept",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "primary_map",
          "description": "Denotes the primary mapping for each source code",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "valid_start_date",
          "description": "The date when the mapping instance was first recorded",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "valid_end_date",
          "description": "The date when the mapping instance became invalid",
          "dtype": "string",
          "semanticType": "text"
        },
        {
          "featureName": "invalid_reason",
          "description": "Reason the mapping instance was invalidated",
          "dtype": "string",
          "semanticType": "text"
        }
      ]
    }
  ],
  "metadata": {
    "bitfount_version": "3.0.0",
    "hash": "",
    "schema_version": "2"
  }
}
