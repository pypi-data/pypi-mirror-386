[project]
name = "exc2issue"
version = "0.5.0"

description = "A Python decorator that automatically creates GitHub issues when functions encounter errors or log critical messages"
readme = "README.md"
authors = [
    { name = "DucretJe", email = "github@ducret.mozmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "build>=1.3.0",
    "cryptography>=44.0.0",
    "google-genai>=1.36.0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.10.1",
    "pyjwt>=2.10.1",
    "requests>=2.32.5",
]

[project.optional-dependencies]
ai = ["google-genai>=1.36.0"]

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "black>=25.9.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.18.1",
    "pylint>=3.3.8",
    "pyright>=1.1.405",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.0",
    "types-requests>=2.32.4.20250913",
]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "C4", "SIM", "TCH"]
ignore = ["E501"]  # Line length handled by formatter

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true
mypy_path = "src"
packages = ["exc2issue"]
exclude = ["megalinter-reports"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--strict-markers --disable-warnings"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pyright]
include = ["src", "tests"]
exclude = ["megalinter-reports", ".venv", "build", "dist", "*.egg-info"]
pythonVersion = "3.12"
typeCheckingMode = "basic"
# Use the uv-managed virtual environment
venvPath = "."
venv = ".venv"
# Report missing imports as warnings rather than errors in test files
reportMissingImports = "warning"
# Allow untyped third-party packages
reportMissingTypeStubs = false
# Ignore missing stubs for packages that don't have them
stubPath = ""
