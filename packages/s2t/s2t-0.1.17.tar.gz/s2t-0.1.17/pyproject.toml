[build-system]
requires = [
  "setuptools>=68",
  "wheel",
  "setuptools-scm>=8",
]
build-backend = "setuptools.build_meta"

[project]
name = "s2t"
dynamic = ["version"]
description = "Speech to Text (s2t): Record audio, run Whisper, export formats, and copy transcript to clipboard."
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = "LicenseRef-Proprietary"
authors = [
  { name = "Maintainers" }
]
dependencies = [
  "sounddevice>=0.4.6",
  "soundfile>=0.12.1",
  "numpy>=1.23",
  "openai-whisper>=20231117",
  "argostranslate>=1.9.0",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Environment :: Console",
  "Operating System :: OS Independent",
]

[project.optional-dependencies]
dev = [
  "pytest>=7",
  "pytest-cov>=4",
  "ruff>=0.4",
  "mypy>=1.7",
  "build>=1",
  # Required for local no-isolation builds because version is derived via setuptools-scm
  "setuptools-scm>=8",
  "twine>=4",
]
translate = [
  # Argos translation support (offline after one-time package download)
  "argostranslate>=1.9.0",
]


[project.scripts]
s2t = "s2t.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["s2t*"]

[tool.setuptools_scm]
fallback_version = "0.1.0"
version_scheme = "no-guess-dev"
local_scheme = "no-local-version"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501"]

[tool.ruff.format]
# Ruff formatter handles formatting (replaces Black)
quote-style = "preserve"

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
mypy_path = ["stubs"]
files = ["src"]
strict = false
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true

[tool.setuptools.package-data]
"s2t" = ["py.typed"]
