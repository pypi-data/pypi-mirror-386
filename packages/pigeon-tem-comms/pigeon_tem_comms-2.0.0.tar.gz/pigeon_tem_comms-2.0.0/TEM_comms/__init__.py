from . import (
    buffer,
    camera,
    montage,
    qc,
    roi,
    scope,
    stage,
    tile,
    ui,
    calibration,
    state,
    lens_correction,
)


topics = {
    "buffer.status": buffer.Status,
    "camera.command": camera.Command,
    "camera.image": camera.Image,
    "camera.settings": camera.Settings,
    "camera.status": camera.Status,
    "scope.command": scope.Command,
    "scope.status": scope.Status,
    "scope.image_shift.status": scope.image_shift.Status,
    "scope.image_shift.command": scope.image_shift.Command,
    "scope.image_shift.calibrate": scope.image_shift.Calibrate,
    "stage.aperture.command": stage.aperture.Command,
    "stage.aperture.status": stage.aperture.Status,
    "stage.motion.command": stage.motion.Command,
    "stage.motion.status": stage.motion.Status,
    "stage.rotation.command": stage.rotation.Command,
    "stage.rotation.status": stage.rotation.Status,
    "tile.preview": tile.Preview,
    "tile.mini": tile.Mini,
    "tile.processed": tile.Processed,
    "tile.raw": tile.Raw,
    "tile.statistics.focus": tile.statistics.Focus,
    "tile.statistics.histogram": tile.statistics.Histogram,
    "tile.statistics.min_max_mean": tile.statistics.MinMaxMean,
    "tile.matches": tile.Matches,
    "tile.template_matches": tile.TemplateMatches,
    "ui.edit": ui.Edit,
    "ui.run": ui.Run,
    "ui.setup": ui.Setup,
    "montage.complete": montage.Complete,
    "qc.status": qc.Status,
    "roi.load": roi.LoadROI,
    "roi.create": roi.CreateROI,
    "roi.current": roi.ROI,
    "roi.status": roi.ROIStatus,
    "montage.minimaps": montage.Minimaps,
    "calibration.resolution": calibration.Resolution,
    "calibration.centroid": calibration.Centroid,
    "state.current": state.Current,
    "state.change": state.Change,
    "lens_correction.transform": lens_correction.Transform,
}
