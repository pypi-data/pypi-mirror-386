---
id: https://w3id.org/TranslatorSRI/TranslatorTestingModel
name: Translator-Testing-Model
title: Translator Testing Data Model
version: 0.0.0
description: |-
  Data model to formalize the structure of test assets, cases, suites and related metadata
  applied to run the diverse polymorphic testing objectives for the Biomedical Data Translator system.
license: MIT
see_also:
  - https://TranslatorSRI.github.io/TranslatorTestingModel

prefixes:
  ttm: https://w3id.org/TranslatorSRI/TranslatorTestingModel/
  linkml: https://w3id.org/linkml/
  biolink: https://w3id.org/biolink/
  infores: https://w3id.org/biolink/vocab/
  schema: http://schema.org/
  example: https://example.org/

default_prefix: ttm
default_range: string

imports:
  - linkml:types

types:

  ##################################
  # Testing Model Types            #
  # (Mainly Biolink Model related) #
  ##################################

  category_type:
    typeof: uriorcurie
    description: >-
      A primitive type in which the value denotes a class within the biolink model.
      The value must be a URI or a CURIE within the 'biolink' namespace.

  concept_category:
    typeof: category_type
    description: >-
      A category type within the Biolink Model ('biolink' namespace) 'biolink:NamedThing' hierarchy.

  association_category:
    typeof: category_type
    description: >-
      A category type within the Biolink Model ('biolink' namespace) 'biolink:Association' hierarchy.

  predicate_type:
    typeof: uriorcurie
    description: >-
      A CURIE from the Biolink Model ('biolink' namespace) 'biolink:related_to' hierarchy.
      For example, biolink:related_to, biolink:causes, biolink:treats.

classes:

  ########################
  # General Class Models #
  ########################

  TestEntityParameter:
    description: >-
      A single 'tag = value' pair (where 'value' is a simple string).
    slots:
      - parameter
      - value

  Qualifier:
    is_a: TestEntityParameter
    slot_usage:
      parameter:
        description: >-
          The 'parameter' of a Qualifier should be a `qualifier` slot name from the
          Biolink Model ('biolink' namespace) 'biolink:qualifier' hierarchy.
      value:
        description: >-
          The 'value' of should be a suitable value generally drawn from an
          applicable Biolink Model ("Enum") value set of the specified Qualifier.

  TestEntity:
    description: >-
      Abstract global 'identification' class shared as a parent with
      all major model classes within the data model for Translator testing.
    abstract: true
    tree_root: true
    slots:
      - id
      - name
      - description
      - tags
      - test_runner_settings

  TestMetadata:
    description: >-
      Represents metadata related to (external SME, SMURF, Translator feedback, 
      large scale batch, etc.) like the provenance of test assets, cases and/or suites.
    is_a: TestEntity
    slots:
      - test_source
      - test_reference
      - test_objective
      - test_annotations
  
  PathfinderPathNode:
    description: >-
      Represents an output path node
    slots:
      - ids
      - name

  #####################
  # Test Asset Models #
  #####################

  TestAsset:
    description: >-
      Represents a Test Asset, which is a single specific instance of
      TestCase-agnostic semantic parameters representing the specification
      of a Translator test target with inputs and (expected) outputs.
    is_a: TestEntity
    slots:
      - input_id
      - input_name
      - input_category
      - predicate_id
      - predicate_name
      - output_id
      - output_name
      - output_category
      - association
      - qualifiers
      - expected_output
      - test_issue
      - semantic_severity
      - in_v1
      - well_known
      - test_reference
      - test_metadata
    slot_usage:
      id:
        aliases: ["AssetIdentifier"]
        range: uriorcurie
      tags:
        description: >-
          One or more 'tags' slot values (inherited from TestEntity) should generally
          be defined to specify TestAsset membership in a "Block List" collection
      test_runner_settings:
        description: >-
          Scalar settings for the TestRunner, e.g. "inferred"
  
  PathfinderTestAsset:
    is_a: TestEntity
    description: >-
      Represents a Test Asset, which is a single specific instance of TestCase-agnostic
      semantic parameters representing the specification of a Translator test target with
      inputs and (expected) outputs.
    slots:
      - source_input_id
      - source_input_name
      - source_input_category
      - target_input_id
      - target_input_name
      - target_input_category
      - predicate_id
      - predicate_name
      - qualifiers
      - minimum_required_path_nodes
      - path_nodes
      - expected_output

  AcceptanceTestAsset:
    is_a: TestAsset
    description: >-
      Model derived from Jenn's test asset design and Shervin's runner JSON here as an example.
    slots:
      - must_pass_date
      - must_pass_environment
      - scientific_question
      - string_entry
      - direction
      - answer_informal_concept
      - expected_result
#      - curie  # use input_id
      - top_level
      - query_node
      - notes

#  QueryAnswerPair:
#    description: >-
#      Represents a QueryAnswerPair specification type of Test Asset.
#      (is this class really needed? Let's assume that the nothing
#      is added above the other test types)
#    # aliases: [""]
#    is_a: TestAsset
  
  TestEdgeData:
    description: >-
      Represents a single Biolink Model compliant instance of a
      subject-predicate-object edge that can be used for testing.
    is_a: TestAsset

  ###################
  # TestCase Models #
  ###################

  Precondition:
    description: >-
      Represents a precondition for a TestCase
    is_a: TestEntity
    slots:

  TestCase:
    description: >-
      Represents a single enumerated instance of Test Case, derived from a 
      given collection of one or more TestAsset instances (the value of the
      'test_assets' slot) which define the 'inputs' and 'outputs' of the
      TestCase, used to probe a particular test condition.
    is_a: TestEntity
    slots:
      - query_type
      - test_assets
      - preconditions
      - trapi_template
      - test_case_objective
      - test_case_source
      - test_case_predicate_name
      - test_case_predicate_id
      - test_case_input_id
      - qualifiers
      - input_category
      - output_category
      - components
      - test_env
    slot_usage:
      test_assets:
        aliases: ["Block List"]
        description: >-
          One or more 'tags' slot values (inherited from TestEntity)
          should generally be defined as filters to specify TestAsset
          membership in 'test_assets' slot ("Block List") collection.
      tags:
        description: >-
          One or more 'tags' slot values (slot inherited from TestEntity) should generally
          be defined as filters to specify TestAsset membership in a "Block List" collection.
  
  PathfinderTestCase:
    is_a: TestEntity
    slots:
      - test_assets
      - test_case_objective
      - components
      - test_env
    slot_usage:
      test_assets:
        range: PathfinderTestAsset

  AcceptanceTestCase:
    is_a: TestCase
    description: >-
      See AcceptanceTestAsset above for more details.
    slot_usage:
      test_assets:
        range: AcceptanceTestAsset

  QuantitativeTestCase:
    is_a: TestCase
    description: >-
      Assumed additional model from Shervin's runner JSON here as an example.  This schema is not yet complete.
    slot_usage:
#      test_assets:
#        range: QuantitativeTestAsset

  PerformanceTestCase:
    is_a: TestCase
    description: >-
      Represents a performance test case.
    attributes:
      test_run_time:
        required: true
        range: integer
      spawn_rate:
        required: true
        range: float
    slot_usage:
      test_assets:
        range: TestAsset

  #####################
  # Test Suite Models #
  #####################

  TestSuiteSpecification:
    description: >-
      Parameters for a Test Case instances either dynamically
      generated from some external source of Test Assets.
    is_a: TestEntity
    slots:
      - test_data_file_locator
      - test_data_file_format

  TestSuite:
    is_a: TestEntity
    description: >-
      Specification of a set of Test Cases, one of either with a
      static list of 'test_cases' or a dynamic 'test_suite_specification' slot values.
      Note: at least one slot or the other, but generally not both(?) needs to be present.
    slots:
      - test_metadata
      - test_persona
      - test_cases
      - test_suite_specification
  
  AcceptanceTestSuite:
    is_a: TestSuite
    description:

  BenchmarkTestSuite:
    is_a: TestSuite
    description:
    
  PerformanceTestSuite:
    is_a: TestSuite
    description: >-
      A small test suite designed to test the performance of the Translator system.
    slot_usage:
      test_cases:
        range: PerformanceTestCase
     
  StandardsComplianceTestSuite:
    description: >-
      Test suite for testing Translator components against releases of standards like TRAPI and the Biolink Model.
    is_a: TestSuite

  OneHopTestSuite:
    description: >-
      Test case for testing the integrity of "One Hop" knowledge graph retrievals sensa legacy SRI_Testing harness.
    is_a: TestSuite

  #####################
  # TestRunner Models #
  #####################

  TestCaseResult:
    description: >-
      The outcome of a TestRunner run of one specific TestCase.
    is_a: TestEntity
    slots:
      - test_suite_id
      - test_case
      - test_case_result

  TestRunSession:
    description: >-
      Single run of a TestRunner in a given environment, with a specified
      set of test_entities (generally, one or more instances of TestSuite).
    is_a: TestEntity
    slots:
      - components
      - test_env
      - test_runner_name
      - test_run_parameters
      - test_entities
      - test_case_results
      - timestamp
    slot_usage:
      test_run_parameters:
        description: >-
          Different TestRunners could expect additional global test
          configuration parameters, like the applicable TRAPI version
          ("trapi_version") or Biolink Model versions ("biolink_version").
      test_entities:
        description: >-
          Different TestRunners could expect specific kinds of TestEntity
          as an input.  These 'test_entities' are one or more instances of
          TestAsset, TestCase or (preferably?) TestSuite.

  TestOutput:
    description: >-
      The output of a TestRunner run of one specific TestCase.
    is_a: TestEntity
    slots:
      - test_case_id
      - pks

  TestResultPKSet:
    description: >-
      Primary keys for a given ARA result set from a SmokeTest result for a given TestCase.
    is_a: TestEntity
    slots:
      - parent_pk
      - merged_pk
      - aragorn
      - arax
      - unsecret
      - bte
      - improving

###############
# Model slots #
###############

slots:

  parent_pk:
  merged_pk:
  aragorn:
  arax:
  unsecret:
  bte:
  improving:

  pks:
    description: >-
      Primary keys for a given ARA result set from a SmokeTest result for a given TestCase.
    range: TestResultPKSet
    multivalued: true

  results:
    description: >-
      The results of a TestRunner run of one specific TestCase.
    range: TestOutput
    multivalued: true

  #################
  # General Slots #
  #################

  test_case_id:
    description: >-
      CURIE id of a TestCase registered in the system.
    range: string

  parameter:
    description: >-
      Name of a TestParameter.

  value:
    description: >-
      (String) value of a TestParameter.

  test_entity_parameters:
    description: >-
      One or more 'tag = value' parameters documenting target characteristics of a TestEntity.
    range: TestEntityParameter
    multivalued: true
    inlined: true
    inlined_as_list: true

  timestamp:
    description: >-
      Date time when a given entity was created.
    range: datetime

  id:
    identifier: true
    slot_uri: schema:identifier
    range: uriorcurie
    description: A unique identifier for a Test Entity
  
  ids:
    slot_uri: schema:additionalType
    multivalued: true

  name:
    slot_uri: schema:name
    description: A human-readable name for a Test Entity

  description:
    slot_uri: schema:description
    description: A human-readable description for a Test Entity

  tags:
    slot_uri: schema:additionalType
    description: >-
      A human-readable tags for categorical memberships of a TestEntity (preferably a URI or CURIE).
      Typically used to aggregate instances of TestEntity into formally typed or ad hoc lists.
    multivalued: true

  test_source:
    description: >-
      Provenance of a specific set of test assets, cases and/or suites.  Or, the person who cares about this, 
      know about this.  We would like this to be an ORCID eventually, but currently it is just a string.
    range: TestSourceEnum

  test_reference:
    aliases: ["GitHubIssue"]
    description: >-
      Document URL where original test source particulars are registered (e.g. Github repo)
    range: uriorcurie

  test_objective:
    description: >-
      Testing objective behind specified set of test particulars
      (e.g. acceptance pass/fail; benchmark; quantitative; standards compliance; graph navigation integrity)
    range: TestObjectiveEnum

  test_case_objective:
    description: >-
      Testing objective behind specified set of test particulars
      (e.g. acceptance pass/fail; benchmark; quantitative; standards compliance; graph navigation integrity)
    range: TestObjectiveEnum

  test_case_source:
    description: >-
      Provenance of a specific set of test assets, cases and/or suites.  Or, the person who cares about this, 
      know about this.  We would like this to be an ORCID eventually, but currently it is just a string.
    range: TestSourceEnum

  test_annotations:
    description: >-
      Metadata annotation.
    is_a: test_entity_parameters

  ###################
  # TestAsset Slots #
  ###################

  test_case_input_id:
    aliases: ["InputID, node normalized", "SubjectID"]
    range: uriorcurie

  test_case_predicate_name:
    aliases: ["Predicate"]

  test_case_predicate_id:
    aliases: ["Predicate"]

  input_id:
    aliases: ["InputID, node normalized", "SubjectID"]
    range: uriorcurie

  input_name:
    aliases: ["InputName (user choice)", "SubjectName"]

  input_category:
    aliases: ["SubjectCategory"]
    range: concept_category
  
  source_input_id:
    range: uriorcurie
  
  source_input_name:

  source_input_category:
    range: concept_category
  
  target_input_id:
    range: uriorcurie
  
  target_input_name:

  target_input_category:
    range: concept_category
  
  path_nodes:
    required: true
    multivalued: true
    range: PathfinderPathNode
  
  minimum_required_path_nodes:
    description: >-
      The number of nodes required in a path to pass this test.
    range: integer
    required: true

  predicate_id:
    aliases: ["Predicate"]
    range: predicate_type

  predicate_name:
    aliases: ["Query", "Relationship"]

  biolink_predicate:
    description: the predicate in Biolink model corresponding to the shorthand predicate name used in the test asset.
    range: uriorcurie

  biolink_subject_aspect_qualifier:
    description: >-
      The aspect of the subject of the test asset predicate

  biolink_subject_direction_qualifier:
    description: >- 
      The direction of the subject of the test asset predicate

  biolink_object_aspect_qualifier:
    description: >-
      The aspect of the object of the test asset predicate

  biolink_object_direction_qualifier:
    description: >-
        The direction of the object of the test asset predicate

  biolink_qualified_predicate:
    description: >-
      The qualified_predicate in Biolink model corresponding to the shorthand predicate name used in the test asset.
    range: uriorcurie

  output_id:
    aliases: ["OutputID", "ObjectID"]
    range: uriorcurie

  output_name:
    aliases: ["OutputName", "ObjectName"]

  output_category:
    aliases: ["ObjectCategory"]
    range: concept_category

  association:
    description: >-
      Specific Biolink Model association 'category' which
      applies to the test asset defined knowledge statement
    range: association_category

  qualifiers:
    description: >-
      Optional qualifiers which constrain to the test asset defined
      knowledge statement. Note that this field records such qualifier
      slots and values as tag=value pairs, where the tag is the
      Biolink Model qualifier slot named and the value is an acceptable
      (Biolink Model enum?) value of the said qualifier slot.
    range: Qualifier
    multivalued: true
    inlined: true
    inlined_as_list: true

  expected_output:
    aliases: ["Expected Output"]

  test_issue:
    aliases: ["issue label"]
    range: TestIssueEnum

  semantic_severity:
    aliases: ["Semantic Severity"]
    range: SemanticSeverityEnum

  in_v1:
    aliases: ["In v1"]
    range: boolean

  well_known:
    aliases: ["Well Known"]
    range: boolean

  test_runner_settings:
    aliases: ["Settings"]
    description: >-
      Scalar parameters for the TestRunner processing a given TestEntity.
    range: string
    multivalued: true
    required: false

  must_pass_date:
    description: >-
      The date by which this test must pass
    range: date
    examples:
      - value: "2023-09-01"

  must_pass_environment:
    description: >-
      The deployment environment within which this test must pass.
    range: TestEnvEnum
    examples:
      - value: "prod"
      - value: "ci"
      - value: "test"

  scientific_question:
    description: >-
      The full human-readable scientific question a SME would ask,
      which is encoded into the test asset.
    range: string
    examples:
      - value: "What drugs may treat multiple sclerosis?"
      - value: "What gene is upregulated?"

  string_entry:
    aliases: ["trapi node 2", "disease"]
    description: >-
      The object of the core triple to be tested
    range: string
    examples:
      - value: "multiple sclerosis"
      - value: "Castlemans"

  direction:
    description: >-
      The direction of the expected query result triple
    range: DirectionEnum

  answer_informal_concept:
    description: >-
      An answer that is returned from the test case, note: this must be combined
      with the expected_result to form a complete answer.  It might make sense
      to couple these in their own object instead of strictly sticking to the
      flat schema introduced by the spreadsheet here:
      https://docs.google.com/spreadsheets/d/1yj7zIchFeVl1OHqL_kE_pqvzNLmGml_FLbHDs-8Yvig/edit#gid=0
    range: string
    examples:
      - value: "fingolimod"
      - value: "natalizumab"
      - value: "lead"
      - value: "great answer here"

  expected_result:
    description: >-
      The expected result of the query
    range: ExpectedResultsEnum

#  curie:
#    description: >-
#      The curie of the query; this is only used in AcceptanceTestCase
#      which is now converted to an AcceptanceTestAsset which has 'input_id'
#    range: curie

  top_level:
    description: >-
      The answer must return in these many results
    range: integer

  query_node:
    description: >-
      The node of the (templated) TRAPI query to replace
    range: NodeEnum

  notes:
    description: >-
      The notes of the query
    range: string

  ##################
  # TestCase Slots #
  ##################

  test_env:
    description: >-
      Deployment environment within which the associated TestSuite is run.
    range: TestEnvEnum

  query_type:
    description: >-
      Type of TestCase query.
    range: QueryTypeEnum

  test_assets:
    description: >-
      List of explicitly enumerated Test Assets. The class attributes of
      TestAsset would be included in the TestCase versus being referred to by
      the identifier (curie) of the TestAsset. That is, this would be a list of
      objects (in JSONSchema serialization) versus a list of strings (where
      each string is an identifier pointing to another class).
    range: TestAsset
    multivalued: true
    inlined: true
    inlined_as_list: true
    required: true

  preconditions:
    range: Precondition
    multivalued: true

  trapi_template:
    description: >-
      A template for a query, which can be used to generate a query
      for a test case.  note: the current enumerated values for this slot
      come from the Benchmarks repo config/benchmarks.json "templates" collection
      and refer to the "name" field of each template.  Templates themselves
      are currently stored in the config/[source_name]/templates directory.
    range: TrapiTemplateEnum

  components:
    description: >-
      The component that this test case is intended to run against.  Most often this is the ARS for 
      acceptance tests, but for the Benchmarks repo integration, this can also be individual components
      of the system like Aragorn, or ARAX.
    range: ComponentEnum
    multivalued: true

  trapi_version:
    description: TRAPI version (SemVer string)

  biolink_version:
    description: Biolink Model release (SemVer string)

  ###################
  # TestSuite Slots #
  ###################

  test_data_file_locator:
    description: >-
      An web accessible file resource link to test entity data
      (e.g. a web accessible text file of Test Asset entries)
    range: uriorcurie

  test_data_file_format:
    description: >-
      File format of test entity data (e.g. TSV, YAML or JSON)
    range: FileFormatEnum

  test_metadata:
    description: >-
      Test metadata describes the external provenance, cross-references and objectives for a given test.
    range: TestMetadata
    inlined: true
    required: false

  test_persona:
    description: >-
      A Test persona describes the user or operational context of a given test.
    range: TestPersonaEnum

  test_cases:
    description: >-
      List of explicitly enumerated Test Cases.
    range: TestCase
    any_of:
      - range: PathfinderTestCase
      - range: TestCase
      - range: PerformanceTestCase
    multivalued: true
    inlined: true
    required: false
  
  pathfinder_test_cases:
    description: >-
      List of explicitly enumerated Pathfinder Test Cases.
    range: PathfinderTestCase
    multivalued: true
    inlined: true
    required: false

  test_suite_specification:
    description: >-
      Declarative specification of a Test Suite of Test Cases whose
      generation is deferred, (i.e. within a Test Runner) or whose creation
      is achieved by stream processing of an external data source.
    range: TestSuiteSpecification
    inlined: true
    required: false

  ####################
  # TestRunner Slots #
  ####################

  test_run_parameters:
    description: >-
      TestRunSession parameters informing a TestHarness about
      the global characteristics of TestRunner processing tests.
    is_a: test_entity_parameters

  test_suite_id:
    description: >-
      CURIE id of a TestSuite registered in the system.
    range: uriorcurie

  test_case:
    description: >-
      Slot referencing a single TestCase.
    range: TestCase
    inlined: true

  test_case_result:
    description: >-
      Encoded result of a single test run of a given test case
    range: TestCaseResultEnum

  # TODO: if there are only a finite set of TestRunners, should the range of this slot be an explicit enumeration?
  test_runner_name:
    description: >-
      Global system name of a TestRunner.
    
  test_entities:
    description: >-
      One or more instances of TestEntity, generally
      of class TestAsset, TestCase or TestSuite.
    range: TestEntity
    multivalued: true
    inlined: true
 
  test_case_results:
    description: >-
      One or more instances of TestCaseResult.
    range: TestCaseResult
    multivalued: true
    inlined: true

#########
# Enums #
#########

enums:

  #######################
  # General Model Enums #
  #######################

  TestSourceEnum:
    permissible_values:
      SME:
        description: (External) Subject Matter Expert
      SMURF:
        description: >-
          Subject Matter User Reasonably Familiar, generally
          Translator-internal biomedical science expert
      GitHubUserFeedback:
        description: >-
          Git hub hosted issue from which a
          test asset/case/suite may be derived.
      TACT:
        is_a: GitHubUserFeedback
        description: >-
          Technical Advisory Committee, generally posting
          semantic use cases as Translator Feedback issues
      BenchMark:
        description: >-
          Curated benchmark tests
      TranslatorTeam:
        description: >-
          Translator funded KP or ARA team generating
          test assets/cases/suites for their resources.
      TestDataLocation:
        description: >-
          Current SRI_Testing-like test data edges
          specific to KP or ARA components

  TestObjectiveEnum:
    permissible_values:
      AcceptanceTest:
        description: Acceptance (pass/fail) test
      BenchmarkTest:
        description: Semantic benchmarking
      QuantitativeTest:
        description: Quantitative test
      StandardsValidationTest:
        description: Release-specific TRAPI and Biolink Model ("reasoner-validator") compliance validation
      OneHopTest:
        description: Knowledge graph "One Hop" query navigation integrity

  TestEnvEnum:
    description: >-
      Testing environments within which a TestSuite is
      run by a TestRunner scheduled by the TestHarness.
    permissible_values:
      dev:
        description: Development
      ci:
        description: Continuous Integration
      test:
        description: Test
      prod:
        description: Production

  FileFormatEnum:
    description: >-
      Text file formats for test data sources.
    permissible_values:
      TSV:
      YAML:
      JSON:

  #########################
  # TestAsset Model Enums #
  #########################

  ExpectedOutputEnum:
    description: >-
      Expected output values for instances of Test Asset or Test Cases(?).
      (Note: does this Enum overlap with 'ExpectedResultsEnum' below?)
    permissible_values:
      Acceptable:
        description:
      BadButForgivable:
        description:
      NeverShow:
        description:
      TopAnswer:
        description:
      OverlyGeneric:
        description:

  TestIssueEnum:
    permissible_values:
      causes not treats:
        description:
      TMKP:
        description: >-
          'Text Mining Knowledge Provider' generated relationship?
      category too generic:
        description:
      contraindications:
        description:
      chemical roles:
        description:
      test_issue:
        description:

  SemanticSeverityEnum:
    description: From Jenn's worksheet, empty or ill defined (needs elaboration)
    permissible_values:
      High:
        description:
      Low:
        description:
      NotApplicable:
        description:

  DirectionEnum:
    permissible_values:
      increased:
      decreased:

  ExpectedResultsEnum:
    description: >-
      Does this Enum overlap with 'ExpectedOutputEnum' above?
    permissible_values:
      include_good:
        description: >-
          The query should return the result in this test case
      exclude_bad:
        description: >-
          The query should not return the result in this test case

  NodeEnum:
    description: >-
      Target node of a Subject-Predicate-Object driven query
    permissible_values:
      subject:
      object:

  ########################
  # TestCase Model Enums #
  ########################

  QueryTypeEnum:
    description: >-
      Query
    permissible_values:
      treats:
        aliases: "treats(creative)"
        description:

  TrapiTemplateEnum:
    permissible_values:
      ameliorates:
      treats:
      three_hop:
      drug_treats_rare_disease:
      drug-to-gene:

  ComponentEnum:
    description: >-
      Translator components are identified by their InfoRes identifiers.
    #    reachable_from:
    #      source_ontology: biolink
    #      source_nodes:
    #        - biolink:infores
    #      include_self:  false
    permissible_values:
      ars:
        description: >-
          Automatic Relay Service component of Translator
        meaning: "infores:ncats-ars"
      # ARA's
      arax:
        description: >-
          ARAX Translator Reasoner
        meaning: "infores:arax"
      explanatory:
        description: >-
          A Translator Reasoner API for the Explanatory Agent
        meaning: "infores:explanatory-agent"
      improving:
        description: >-
          imProving Agent OpenAPI TRAPI Specification
        meaning: "infores:improving-agent"
      aragorn:
        description: >-
          Performs a query operation which compiles data from numerous ranking agent services.
        meaning: "infores:aragorn"
      bte:
        description: >-
          BioThings Explorer
        meaning: "infores:biothings-explorer"
      unsecret:
        description: >-
          Unsecret Agent OpenAPI for NCATS Biomedical Translator Reasoners
        meaning: "infores:unsecret-agent"
      # KP's
      rtxkg2:
        description: >-
          TRAPI endpoint for the NCATS Biomedical Translator KP called RTX KG2
        meaning: "infores:rtx-kg2"
      icees:
        description: >-
          ICEES (Integrated Clinical and Environmental Exposures Service)
        meaning: "infores:icees-kg"
      cam:
        description: >-
          Causal Activity Model KP
        meaning: "infores:cam-kp"
      spoke:
        description: >-
          SPOKE KP - an NIH NCATS Knowledge Provider to expose UCSFs SPOKE
        meaning: "infores:spoke"
      molepro:
        description: >-
          Molecular Data Provider for NCATS Biomedical Translator Reasoners
        meaning: "infores:molepro"
      genetics:
        description: >-
          TRAPI endpoint for the NCATS Biomedical Translator Genetics Data KP
        meaning: "infores:genetics-data-provider"
      textmining:
        description: >-
          Text Mining KP
        meaning: "infores:textmining-kp"
      cohd:
        description: >-
          Columbia Open Health Data (COHD)
        meaning: "infores:cohd"
      openpredict:
        description: >-
          OpenPredict API
        meaning: "infores:openpredict"
      collaboratory:
        description: >-
          Translator Knowledge Collaboratory API
        meaning: "infores:knowledge-collaboratory"
      connections:
        description: >-
          Connections Hypothesis Provider API
        meaning: "infores:connections-hypothesis"


  #########################
  # TestSuite Model Enums #
  #########################

  TestPersonaEnum:
    description: >-
      User persona context of a given test.
    permissible_values:
      All:
      Clinical:
        description: >-
          An MD or someone working in the clinical field.
      LookUp:
        description: >-
          Looking for an answer for a specific patient.
      Mechanistic:
        description: >-
          Someone working on basic biology questions or drug discoveries
          where the study of the biological mechanism.

  ##########################
  # TestRunner Model Enums #
  ##########################

  TestCaseResultEnum:
    permissible_values:
      PASSED:
        description: test case result indicating success.
      FAILED:
        description: test case result indicating failure.
      SKIPPED:
        description: test case result indicating that the specified test was not run.
