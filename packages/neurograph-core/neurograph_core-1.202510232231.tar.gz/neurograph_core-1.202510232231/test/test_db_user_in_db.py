# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.db_user_in_db import DbUserInDb

class TestDbUserInDb(unittest.TestCase):
    """DbUserInDb unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbUserInDb:
        """Test DbUserInDb
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbUserInDb`
        """
        model = DbUserInDb()
        if include_optional:
            return DbUserInDb(
                client_roles = [
                    neurograph.v1.models.db/user_client_role.db.UserClientRole(
                        client_id = '', 
                        id = 56, 
                        role_name = '', 
                        ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                            infinity_modifier = 1, 
                            time = '', 
                            valid = True, ), )
                    ],
                display_name = '',
                email = '',
                firebase_uid = '',
                id = 56,
                org_roles = [
                    neurograph.v1.models.db/user_org_role.db.UserOrgRole(
                        id = 56, 
                        org_id = '', 
                        role_name = '', 
                        ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                            infinity_modifier = 1, 
                            time = '', 
                            valid = True, ), )
                    ],
                roles = [
                    neurograph.v1.models.db/user_role.db.UserRole(
                        id = 56, 
                        role_name = '', 
                        ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                            infinity_modifier = 1, 
                            time = '', 
                            valid = True, ), )
                    ],
                ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                    infinity_modifier = 1, 
                    time = '', 
                    valid = True, ),
                ts_updated = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                    infinity_modifier = 1, 
                    time = '', 
                    valid = True, )
            )
        else:
            return DbUserInDb(
        )
        """

    def testDbUserInDb(self):
        """Test DbUserInDb"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
