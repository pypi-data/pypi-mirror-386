# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.knowledge_entity_get_many_response import KnowledgeEntityGetManyResponse

class TestKnowledgeEntityGetManyResponse(unittest.TestCase):
    """KnowledgeEntityGetManyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KnowledgeEntityGetManyResponse:
        """Test KnowledgeEntityGetManyResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KnowledgeEntityGetManyResponse`
        """
        model = KnowledgeEntityGetManyResponse()
        if include_optional:
            return KnowledgeEntityGetManyResponse(
                data = [
                    neurograph.v1.models.knowledge/entity_in_db.knowledge.EntityInDb(
                        batch_id = '', 
                        client_id = 'cli_...', 
                        data = neurograph.v1.models.data.data(), 
                        ext = neurograph.v1.models.knowledge/entity_extra.knowledge.EntityExtra(
                            customer_id = 56, 
                            domain = '', 
                            product_id = 56, ), 
                        extra = neurograph.v1.models.extra.extra(), 
                        id = 'ent_123', 
                        kind = 'Product|Customer|Store', 
                        name = 'GiBoard Gel', 
                        relations = neurograph.v1.models.knowledge/entity_relations.knowledge.EntityRelations(
                            children = [[ent_789]], 
                            parents = [[ent_123,  ent_456]], 
                            siblings = [[ent_999]], ), 
                        schema = neurograph.v1.models.knowledge/entity_schema.knowledge.EntitySchema(
                            id = '@axon/commerce/product:1.0.0', 
                            params = neurograph.v1.models.params.params(), ), 
                        source_id = '', 
                        source_updated_at = 56, 
                        ts_created = 56, 
                        ts_updated = 56, )
                    ],
                error = '',
                query = neurograph.v1.models.knowledge/query.knowledge.Query(
                    batch_id = '', 
                    client_id = '', 
                    kind = '', 
                    limit = 56, 
                    offset = 56, 
                    schema_id = '', )
            )
        else:
            return KnowledgeEntityGetManyResponse(
        )
        """

    def testKnowledgeEntityGetManyResponse(self):
        """Test KnowledgeEntityGetManyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
