# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.knowledge_assertion_list_response import KnowledgeAssertionListResponse

class TestKnowledgeAssertionListResponse(unittest.TestCase):
    """KnowledgeAssertionListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KnowledgeAssertionListResponse:
        """Test KnowledgeAssertionListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KnowledgeAssertionListResponse`
        """
        model = KnowledgeAssertionListResponse()
        if include_optional:
            return KnowledgeAssertionListResponse(
                data = [
                    neurograph.v1.models.knowledge/assertion.knowledge.Assertion(
                        assertion_id = 56, 
                        client_id = '', 
                        confidence = 1.337, 
                        created_at = '', 
                        predicate = '', 
                        source_artifact_id = 56, 
                        source_kind = '', 
                        source_ref = '', 
                        status = '', 
                        subject_entity_id = '', 
                        valid_from = '', 
                        valid_to = '', 
                        value_json = neurograph.v1.models.value_json.value_json(), )
                    ],
                error = '',
                query = neurograph.v1.models.knowledge/assertion_query.knowledge.AssertionQuery(
                    client_id = '', 
                    limit = 56, 
                    offset = 56, 
                    predicate = '', 
                    source_kind = '', 
                    status = '', 
                    subject_entity_id = '', )
            )
        else:
            return KnowledgeAssertionListResponse(
        )
        """

    def testKnowledgeAssertionListResponse(self):
        """Test KnowledgeAssertionListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
