# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.me_my_profile_response import MeMyProfileResponse

class TestMeMyProfileResponse(unittest.TestCase):
    """MeMyProfileResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeMyProfileResponse:
        """Test MeMyProfileResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeMyProfileResponse`
        """
        model = MeMyProfileResponse()
        if include_optional:
            return MeMyProfileResponse(
                clients = [
                    neurograph.v1.models.db/my_client.db.MyClient(
                        id = '', 
                        name = '', 
                        roles = [
                            neurograph.v1.models.db/user_client_role.db.UserClientRole(
                                client_id = '', 
                                id = 56, 
                                role_name = '', 
                                ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                                    infinity_modifier = 1, 
                                    time = '', 
                                    valid = True, ), )
                            ], )
                    ],
                display_name = '',
                email = '',
                error = '',
                id = 56,
                ng_roles = [
                    ''
                    ],
                orgs = [
                    neurograph.v1.models.db/my_org.db.MyOrg(
                        brand = neurograph.v1.models.db/account_organization_brand.db.AccountOrganizationBrand(
                            background_img_url = '', 
                            color1 = '', 
                            color2 = '', 
                            color3 = '', 
                            color4 = '', 
                            color5 = '', 
                            id = 56, 
                            logo_img_url = '', 
                            org_id = '', 
                            primary_color = '', 
                            secondary_color = '', 
                            tertiary_color = '', ), 
                        description = '', 
                        id = '', 
                        image_url = '', 
                        is_active = True, 
                        name = '', 
                        roles = [
                            neurograph.v1.models.db/user_org_role.db.UserOrgRole(
                                id = 56, 
                                org_id = '', 
                                role_name = '', 
                                ts_created = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                                    infinity_modifier = 1, 
                                    time = '', 
                                    valid = True, ), )
                            ], 
                        url = '', 
                        workbench_is_active = True, 
                        workbench_url = '', 
                        workbench_url_ext = '', 
                        workbench_version_id = '', )
                    ]
            )
        else:
            return MeMyProfileResponse(
        )
        """

    def testMeMyProfileResponse(self):
        """Test MeMyProfileResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
