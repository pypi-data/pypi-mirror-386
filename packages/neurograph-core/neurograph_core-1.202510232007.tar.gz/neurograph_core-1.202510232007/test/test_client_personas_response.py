# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.client_personas_response import ClientPersonasResponse

class TestClientPersonasResponse(unittest.TestCase):
    """ClientPersonasResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClientPersonasResponse:
        """Test ClientPersonasResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClientPersonasResponse`
        """
        model = ClientPersonasResponse()
        if include_optional:
            return ClientPersonasResponse(
                data = [
                    neurograph.v1.models.client/persona.client.Persona(
                        age = 1.337, 
                        description = '', 
                        factors = [
                            neurograph.v1.models.client/persona_factor.client.PersonaFactor(
                                detail = '', 
                                display = '', 
                                id = 56, 
                                name = '', 
                                persona_instance_id = '', 
                                summary = '', 
                                value = 56, )
                            ], 
                        female = 1.337, 
                        id = '', 
                        income = '', 
                        insights = [
                            neurograph.v1.models.client/persona_insight.client.PersonaInsight(
                                data = neurograph.v1.models.data.data(), 
                                id = 56, 
                                key = '', 
                                persona_instance_id = 56, )
                            ], 
                        is_active = True, 
                        kpis = [
                            neurograph.v1.models.client/kpi.client.Kpi(
                                id = 56, 
                                name = '', 
                                persona_instance_id = '', 
                                value = '', )
                            ], 
                        male = 1.337, 
                        metadata = '', 
                        name = '', 
                        persona_seed_id = '', 
                        personality_background = '', 
                        personality_first_name = '', 
                        personality_img_url = '', 
                        personality_last_name = '', 
                        personality_quote = '', 
                        personality_traits = [
                            neurograph.v1.models.client/persona_personality_trait.client.PersonaPersonalityTrait(
                                id = 56, 
                                name = '', 
                                persona_instance_id = '', 
                                traits = [
                                    ''
                                    ], )
                            ], 
                        personality_video_url = '', 
                        positioning_statement = '', 
                        seed_uid = '', 
                        summary_detail = '', 
                        summary_headline = '', 
                        tag = '', 
                        ts_created = 56, 
                        ts_updated = 56, 
                        value = '', )
                    ],
                error = '',
                total_rows = 56
            )
        else:
            return ClientPersonasResponse(
        )
        """

    def testClientPersonasResponse(self):
        """Test ClientPersonasResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
