# coding: utf-8

"""
    Neurograph Core

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from neurograph.v1.models.db_knowledge_order import DbKnowledgeOrder

class TestDbKnowledgeOrder(unittest.TestCase):
    """DbKnowledgeOrder unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DbKnowledgeOrder:
        """Test DbKnowledgeOrder
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DbKnowledgeOrder`
        """
        model = DbKnowledgeOrder()
        if include_optional:
            return DbKnowledgeOrder(
                billing_address_hash = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                billing_address_json = [
                    56
                    ],
                cancelled_at = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                    infinity_modifier = 1, 
                    time = '', 
                    valid = True, ),
                channel = '',
                client_id = '',
                closed_at = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                    infinity_modifier = 1, 
                    time = '', 
                    valid = True, ),
                currency = '',
                customer_entity_id = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                discount_amount = 1.337,
                email_at_order = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                entity_id = '',
                ext_order_id = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                ext_order_number = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                ext_store_id = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                financial_status = '',
                fulfillment_status = '',
                phone_at_order = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                placed_at = neurograph.v1.models.pgtype/timestamp.pgtype.Timestamp(
                    infinity_modifier = 1, 
                    time = '', 
                    valid = True, ),
                shipping_address_hash = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                shipping_address_json = [
                    56
                    ],
                shipping_amount = 1.337,
                source_name = '',
                status = '',
                store_entity_id = neurograph.v1.models.pgtype/text.pgtype.Text(
                    string = '', 
                    valid = True, ),
                subtotal_amount = 1.337,
                tax_amount = 1.337,
                total_amount = 1.337
            )
        else:
            return DbKnowledgeOrder(
        )
        """

    def testDbKnowledgeOrder(self):
        """Test DbKnowledgeOrder"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
