[[flight]]
D = "/Users/jpm/export/flight/export.csv"
Q = "add smoothing of col long with savgol"
M = "gpt-4o"
C = "from scipy.signal import savgol_filter\n\ndf['smoothed_long'] = savgol_filter(df['long'], window_length=5, polyorder=2)\n"

[[flight]]
D = "/Users/jpm/export/flight/export.csv"
Q = "add smoothing of col long with savgol"
M = "gpt-oss-120b"
C = "from scipy.signal import savgol_filter\n\ncolumn = 'long'\nif column not in df.columns:\n    raise KeyError(f\"Column '{column}' not found in dataframe\")\n\nwindow_length = 7  # must be odd and >= 5\npolyorder = 2\nif window_length >= len(df):\n    window_length = len(df) - 1 if len(df) % 2 == 0 else len(df)\n    window_length = max(window_length, 5)\n    if window_length % 2 == 0:\n        window_length -= 1\n\ndf[f\"{column}_smooth\"] = savgol_filter(\n    df[column].to_numpy(),\n    window_length=window_length,\n    polyorder=polyorder,\n    mode='interp',\n)\n"

[[flight]]
D = "/Users/jpm/export/flight/export.csv"
Q = "add smoothing of col long with savgol"
M = "mistral:instruct"
C = "from scipy.signal import convolve2d as cv2\nimport numpy as np\n\n# Define the window size for Savitzky-Golay filtering\nwindow_size = 51\n\n# Apply Savitzky-Golay filter to column 'long'\ndf['smoothed_long'] = cv2(df['long'].values, window_size, 2) / window_size"
