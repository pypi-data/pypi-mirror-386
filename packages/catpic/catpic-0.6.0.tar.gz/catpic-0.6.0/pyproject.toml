[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "catpic"
version = "0.6.0"
description = "Display images in terminals using Unicode mosaics and ANSI colors"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
authors = [
    { name = "Frisco Rose", email = "friscorose@gmail.com" },
]
keywords = ["terminal", "image", "ascii", "ansi", "mosaic", "unicode", "meow", "tui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: System :: Shells",
    "Topic :: Terminals",
]
dependencies = [
    "pillow>=9.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-pillow",
]

[project.scripts]
catpic = "catpic.cli:main"

[project.urls]
Homepage = "https://github.com/friscorose/catpic"
Repository = "https://github.com/friscorose/catpic"
Issues = "https://github.com/friscorose/catpic/issues"
Documentation = "https://github.com/friscorose/catpic/tree/main/docs"

[tool.hatch.build.targets.wheel]
packages = ["src/catpic"]

[tool.hatch.build.targets.wheel.force-include]
"IMPLEMENTATION.md" = "catpic/IMPLEMENTATION.md"
"docs" = "catpic/docs"
"spec" = "catpic/spec"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/IMPLEMENTATION.md",
    "/README.md",
    "/docs",
    "/spec",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"
