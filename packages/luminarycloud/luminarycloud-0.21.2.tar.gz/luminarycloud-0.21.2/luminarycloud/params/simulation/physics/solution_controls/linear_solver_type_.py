# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABC, ABCMeta
from dataclasses import dataclass, field
from typing import Any
from uuid import uuid4

from google.protobuf.message import Message as _Message
from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from luminarycloud.types import Vector3, LcFloat
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._helpers._entity_identifier import _create_entity_identifier
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
from luminarycloud._helpers import CodeRepr
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.simulation._lib import ParamGroupWrapper, create_unique_id


@dataclass(kw_only=True)
class LinearSolverType(CodeRepr, metaclass=ABCMeta):
    """Type of linear solver used for implicit relaxation."""

    iterations: int = 15
    "Maximum number of linear solver iterations per nonlinear solution update. The linear solver terminates if the maximum is reached."
    tolerance: LcFloat = 0.05
    "Relative reduction target in the linear solver residual from an initial value of 1.0 per nonlinear solution update. The linear solver terminates if the tolerance is met."
