# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABC, ABCMeta
from dataclasses import dataclass, field
from typing import Any
from uuid import uuid4

from google.protobuf.message import Message as _Message
from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from luminarycloud.types import Vector3, LcFloat
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._helpers._entity_identifier import _create_entity_identifier
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
from luminarycloud._helpers import CodeRepr
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.simulation._lib import ParamGroupWrapper, create_unique_id


@dataclass(kw_only=True)
class BoundaryConditionsFluid(CodeRepr, ParamGroupWrapper[clientpb.BoundaryConditionsFluid]):
    """Boundary conditions for a fluid flow physics solver."""

    surfaces: list[str] = field(default_factory=list)
    ""
    id: str = field(default_factory=create_unique_id, init=False)
    ""
    name: str = ""
    ""

    def _to_proto(self) -> clientpb.BoundaryConditionsFluid:
        _proto = clientpb.BoundaryConditionsFluid()
        if self.surfaces is not None:
            _proto.surfaces.extend(self.surfaces)
        if self.id is not None:
            _proto.boundary_condition_name = self.id
        if self.name is not None:
            _proto.boundary_condition_display_name = self.name
        return _proto

    def _from_proto(self, proto: clientpb.BoundaryConditionsFluid) -> None:
        self.surfaces.extend(proto.surfaces)
        self.id = proto.boundary_condition_name
        self.name = proto.boundary_condition_display_name
        return None
