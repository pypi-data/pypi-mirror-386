# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABC, ABCMeta
from dataclasses import dataclass, field
from typing import Any
from uuid import uuid4

from google.protobuf.message import Message as _Message
from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from luminarycloud.types import Vector3, LcFloat
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._helpers._entity_identifier import _create_entity_identifier
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
from luminarycloud._helpers import CodeRepr
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.simulation._lib import ParamGroupWrapper, create_unique_id

from luminarycloud.params.simulation.physics.solution_controls.linear_solver_type_ import (
    LinearSolverType,
)
from luminarycloud.params.simulation.physics.solution_controls.linear_solver_type_ import *


@dataclass(kw_only=True)
class KrylovAmg(LinearSolverType):
    """AMG + Krylov iterative method."""

    pre_sweeps: int = 1
    "Linear Solver AMG Pre-Sweeps."
    post_sweeps: int = 1
    "Linear Solver AMG Post-Sweeps."
    coarsening_size: int = 8
    "Linear Solver AMG Coarsening Sizing."
    levels: int = 20
    "Linear Solver AMG Level."
    relaxation: LcFloat = 0.75
    "Linear Solver AMG Relaxation applied to the smoother."
    multigrid_cycle: enum.LinsolAmgCycleType = enum.LinsolAmgCycleType.LINSOL_AMG_CYCLE_TYPE_V
    "AMG cycle type."
    freeze_levels_threshold: int = 300
    "Iteration at which the AMG levels are freezed."
    smoother: enum.LinsolAmgSmoother = enum.LinsolAmgSmoother.LINSOL_AMG_SMOOTHER_JACOBI
    "AMG cycle smoother."
