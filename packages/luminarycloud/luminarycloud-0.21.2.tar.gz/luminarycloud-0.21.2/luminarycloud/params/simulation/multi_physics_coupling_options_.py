# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABC, ABCMeta
from dataclasses import dataclass, field
from typing import Any
from uuid import uuid4

from google.protobuf.message import Message as _Message
from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from luminarycloud.types import Vector3, LcFloat
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._helpers._entity_identifier import _create_entity_identifier
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
from luminarycloud._helpers import CodeRepr
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.simulation._lib import ParamGroupWrapper, create_unique_id


@dataclass(kw_only=True)
class MultiPhysicsCouplingOptions(
    CodeRepr, ParamGroupWrapper[clientpb.MultiPhysicsCouplingOptions]
):
    """Defines coupling solution strategies between different physics."""

    mp_coupling_lin_sol_coupling: enum.MpCouplingLinSolCoupling = (
        enum.MpCouplingLinSolCoupling.MP_COUPLING_LIN_SOL_COUPLING_ON
    )
    "Turns on the use of enhanced coupling between the physics, which provides greater robustness at the cost of simulation speed."

    def _to_proto(self) -> clientpb.MultiPhysicsCouplingOptions:
        _proto = clientpb.MultiPhysicsCouplingOptions()
        _proto.mp_coupling_lin_sol_coupling = self.mp_coupling_lin_sol_coupling.value
        return _proto

    def _from_proto(self, proto: clientpb.MultiPhysicsCouplingOptions) -> None:
        self.mp_coupling_lin_sol_coupling = enum.MpCouplingLinSolCoupling(
            proto.mp_coupling_lin_sol_coupling
        )
        return None
