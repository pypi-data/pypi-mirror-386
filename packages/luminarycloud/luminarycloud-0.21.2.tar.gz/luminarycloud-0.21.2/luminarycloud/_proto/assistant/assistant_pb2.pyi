"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import luminarycloud._proto.api.v0.luminarycloud.vis.vis_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AssistRequestSource:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AssistRequestSourceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AssistRequestSource.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    WEBAPP_UI: _AssistRequestSource.ValueType  # 0
    NOTEBOOK_UI: _AssistRequestSource.ValueType  # 1

class AssistRequestSource(_AssistRequestSource, metaclass=_AssistRequestSourceEnumTypeWrapper): ...

WEBAPP_UI: AssistRequestSource.ValueType  # 0
NOTEBOOK_UI: AssistRequestSource.ValueType  # 1
global___AssistRequestSource = AssistRequestSource

class _CellType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CellTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CellType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CODE: _CellType.ValueType  # 0
    MARKDOWN: _CellType.ValueType  # 1
    RAW: _CellType.ValueType  # 2

class CellType(_CellType, metaclass=_CellTypeEnumTypeWrapper): ...

CODE: CellType.ValueType  # 0
MARKDOWN: CellType.ValueType  # 1
RAW: CellType.ValueType  # 2
global___CellType = CellType

class _StreamOutputType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _StreamOutputTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_StreamOutputType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    STDOUT: _StreamOutputType.ValueType  # 0
    STDERR: _StreamOutputType.ValueType  # 1

class StreamOutputType(_StreamOutputType, metaclass=_StreamOutputTypeEnumTypeWrapper): ...

STDOUT: StreamOutputType.ValueType  # 0
STDERR: StreamOutputType.ValueType  # 1
global___StreamOutputType = StreamOutputType

class GetChatSessionsRequest(google.protobuf.message.Message):
    """a request for getting sessions associated with the current project"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCOPE_FIELD_NUMBER: builtins.int
    scope: builtins.str
    """the scope of the chat sessions"""
    def __init__(
        self,
        *,
        scope: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["scope", b"scope"]) -> None: ...

global___GetChatSessionsRequest = GetChatSessionsRequest

class GetChatSessionsResponse(google.protobuf.message.Message):
    """response from GetChatSessions"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_IDS_FIELD_NUMBER: builtins.int
    @property
    def session_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        session_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["session_ids", b"session_ids"]) -> None: ...

global___GetChatSessionsResponse = GetChatSessionsResponse

class NewChatSessionRequest(google.protobuf.message.Message):
    """request to NewChatSession"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCOPE_FIELD_NUMBER: builtins.int
    scope: builtins.str
    """the scope of the chat session"""
    def __init__(
        self,
        *,
        scope: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["scope", b"scope"]) -> None: ...

global___NewChatSessionRequest = NewChatSessionRequest

class NewChatSessionResponse(google.protobuf.message.Message):
    """response from NewChatSession"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_ID_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["session_id", b"session_id"]) -> None: ...

global___NewChatSessionResponse = NewChatSessionResponse

class NotebookOutputItem(google.protobuf.message.Message):
    """Represents different types of output for notebook cells
    Based on Jupyter Notebook format specification
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STREAM_FIELD_NUMBER: builtins.int
    DISPLAY_DATA_FIELD_NUMBER: builtins.int
    EXECUTE_RESULT_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def stream(self) -> global___StreamOutput:
        """For stream output (stdout/stderr)"""
    @property
    def display_data(self) -> global___DisplayData:
        """For display_data outputs"""
    @property
    def execute_result(self) -> global___ExecuteResult:
        """For execute_result outputs"""
    @property
    def error(self) -> global___ErrorOutput:
        """For error outputs"""
    def __init__(
        self,
        *,
        stream: global___StreamOutput | None = ...,
        display_data: global___DisplayData | None = ...,
        execute_result: global___ExecuteResult | None = ...,
        error: global___ErrorOutput | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["display_data", b"display_data", "error", b"error", "execute_result", b"execute_result", "output_content", b"output_content", "stream", b"stream"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["display_data", b"display_data", "error", b"error", "execute_result", b"execute_result", "output_content", b"output_content", "stream", b"stream"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["output_content", b"output_content"]) -> typing_extensions.Literal["stream", "display_data", "execute_result", "error"] | None: ...

global___NotebookOutputItem = NotebookOutputItem

class StreamOutput(google.protobuf.message.Message):
    """Stream output (stdout/stderr)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    name: global___StreamOutputType.ValueType
    """The stream type (stdout or stderr)"""
    text: builtins.str
    """Content of the stream"""
    def __init__(
        self,
        *,
        name: global___StreamOutputType.ValueType = ...,
        text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "text", b"text"]) -> None: ...

global___StreamOutput = StreamOutput

class ErrorOutput(google.protobuf.message.Message):
    """Error output"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENAME_FIELD_NUMBER: builtins.int
    EVALUE_FIELD_NUMBER: builtins.int
    TRACEBACK_FIELD_NUMBER: builtins.int
    ename: builtins.str
    """Exception name"""
    evalue: builtins.str
    """Exception value"""
    @property
    def traceback(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of traceback frames"""
    def __init__(
        self,
        *,
        ename: builtins.str = ...,
        evalue: builtins.str = ...,
        traceback: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ename", b"ename", "evalue", b"evalue", "traceback", b"traceback"]) -> None: ...

global___ErrorOutput = ErrorOutput

class ExecuteResult(google.protobuf.message.Message):
    """Execute result output"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """The mime-bundle for rich execute result outputs"""
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___ExecuteResult = ExecuteResult

class DisplayData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class DataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATA_FIELD_NUMBER: builtins.int
    @property
    def data(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """The mime-bundle for rich display outputs"""
    def __init__(
        self,
        *,
        data: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data"]) -> None: ...

global___DisplayData = DisplayData

class NotebookCell(google.protobuf.message.Message):
    """Represents a cell in a notebook"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CELL_ID_FIELD_NUMBER: builtins.int
    CELL_TYPE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    cell_id: builtins.str
    """The id of the cell"""
    cell_type: global___CellType.ValueType
    """The type of the cell (code or markdown)"""
    content: builtins.str
    """The content of the cell ("source" in the notebook cell)"""
    @property
    def outputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotebookOutputItem]:
        """The output of the cell"""
    def __init__(
        self,
        *,
        cell_id: builtins.str = ...,
        cell_type: global___CellType.ValueType = ...,
        content: builtins.str = ...,
        outputs: collections.abc.Iterable[global___NotebookOutputItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cell_id", b"cell_id", "cell_type", b"cell_type", "content", b"content", "outputs", b"outputs"]) -> None: ...

global___NotebookCell = NotebookCell

class NotebookContext(google.protobuf.message.Message):
    """Represents the context of a notebook"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CELLS_FIELD_NUMBER: builtins.int
    ACTIVE_CELL_ID_FIELD_NUMBER: builtins.int
    VISIBLE_CELL_IDS_FIELD_NUMBER: builtins.int
    id: builtins.str
    """The id of the notebook"""
    name: builtins.str
    """The notebook name"""
    @property
    def cells(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NotebookCell]:
        """The cells of the notebook"""
    active_cell_id: builtins.str
    """The id of the currently active cell"""
    @property
    def visible_cell_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The ids of cells that are currently visible in the viewport"""
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        cells: collections.abc.Iterable[global___NotebookCell] | None = ...,
        active_cell_id: builtins.str | None = ...,
        visible_cell_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_active_cell_id", b"_active_cell_id", "active_cell_id", b"active_cell_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_active_cell_id", b"_active_cell_id", "active_cell_id", b"active_cell_id", "cells", b"cells", "id", b"id", "name", b"name", "visible_cell_ids", b"visible_cell_ids"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_active_cell_id", b"_active_cell_id"]) -> typing_extensions.Literal["active_cell_id"] | None: ...

global___NotebookContext = NotebookContext

class SourceCode(google.protobuf.message.Message):
    """Represents a source code (any language)"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANGUAGE_FIELD_NUMBER: builtins.int
    PATH_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    language: builtins.str
    path: builtins.str
    """The path to the source code"""
    content: builtins.str
    """The source code content"""
    def __init__(
        self,
        *,
        language: builtins.str = ...,
        path: builtins.str = ...,
        content: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["content", b"content", "language", b"language", "path", b"path"]) -> None: ...

global___SourceCode = SourceCode

class Image(google.protobuf.message.Message):
    """Represents an image in a notebook"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_BASE64_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    image_base64: builtins.str
    """The base64 encoded image"""
    description: builtins.str
    """The description of the image"""
    def __init__(
        self,
        *,
        image_base64: builtins.str = ...,
        description: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description", "image_base64", b"image_base64"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...

global___Image = Image

class ContextItem(google.protobuf.message.Message):
    """The context items can be one of several types"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTEBOOK_CONTEXT_FIELD_NUMBER: builtins.int
    SOURCE_CODE_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    IMAGE_FIELD_NUMBER: builtins.int
    @property
    def notebook_context(self) -> global___NotebookContext:
        """Notebook context"""
    @property
    def source_code(self) -> global___SourceCode:
        """Source code"""
    text: builtins.str
    """Any text content"""
    @property
    def image(self) -> global___Image:
        """Image content"""
    def __init__(
        self,
        *,
        notebook_context: global___NotebookContext | None = ...,
        source_code: global___SourceCode | None = ...,
        text: builtins.str = ...,
        image: global___Image | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image", b"image", "item", b"item", "notebook_context", b"notebook_context", "source_code", b"source_code", "text", b"text"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image", b"image", "item", b"item", "notebook_context", b"notebook_context", "source_code", b"source_code", "text", b"text"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["item", b"item"]) -> typing_extensions.Literal["notebook_context", "source_code", "text", "image"] | None: ...

global___ContextItem = ContextItem

class AssistantContext(google.protobuf.message.Message):
    """Represents the context of the assistant"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def context(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContextItem]:
        """The context of the assistant"""
    def __init__(
        self,
        *,
        context: collections.abc.Iterable[global___ContextItem] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context", b"context"]) -> None: ...

global___AssistantContext = AssistantContext

class Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class AllEnabledFeatureFlagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    SESSION_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    CMD_FIELD_NUMBER: builtins.int
    ACCESS_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    ALL_ENABLED_FEATURE_FLAGS_FIELD_NUMBER: builtins.int
    session: builtins.str
    """id of the long lived session, an opaque string set by initiator"""
    request: builtins.str
    """id of current chat, an opaque string set by initiator"""
    cmd: builtins.str
    """the text user entered to make the request"""
    access: builtins.str
    """the access tokens for assistant to act on behalf of the user"""
    scope: builtins.str
    source: global___AssistRequestSource.ValueType
    """the source of the request"""
    @property
    def context(self) -> global___AssistantContext:
        """the context sent to the assistant"""
    @property
    def all_enabled_feature_flags(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.str]:
        """map of enabled features flags with experiment id and feature name"""
    def __init__(
        self,
        *,
        session: builtins.str = ...,
        request: builtins.str = ...,
        cmd: builtins.str = ...,
        access: builtins.str = ...,
        scope: builtins.str = ...,
        source: global___AssistRequestSource.ValueType = ...,
        context: global___AssistantContext | None = ...,
        all_enabled_feature_flags: collections.abc.Mapping[builtins.int, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_context", b"_context", "context", b"context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_context", b"_context", "access", b"access", "all_enabled_feature_flags", b"all_enabled_feature_flags", "cmd", b"cmd", "context", b"context", "request", b"request", "scope", b"scope", "session", b"session", "source", b"source"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_context", b"_context"]) -> typing_extensions.Literal["context"] | None: ...

global___Request = Request

class Reply(google.protobuf.message.Message):
    """responses from assistant to request."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    LAST_FIELD_NUMBER: builtins.int
    ACTION_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    PLOTLY_PLOT_FIELD_NUMBER: builtins.int
    session: builtins.str
    """id of the session"""
    request: builtins.str
    """id of current chat"""
    last: builtins.bool
    """indicates if session is closing"""
    @property
    def action(self) -> global___Action:
        """request to run a predefined action"""
    response: builtins.str
    """show a response to the user"""
    plotly_plot: builtins.str
    """show a plotly plot to the user"""
    def __init__(
        self,
        *,
        session: builtins.str = ...,
        request: builtins.str = ...,
        last: builtins.bool = ...,
        action: global___Action | None = ...,
        response: builtins.str = ...,
        plotly_plot: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action", b"action", "plotly_plot", b"plotly_plot", "response", b"response", "step", b"step"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "last", b"last", "plotly_plot", b"plotly_plot", "request", b"request", "response", b"response", "session", b"session", "step", b"step"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["step", b"step"]) -> typing_extensions.Literal["action", "response", "plotly_plot"] | None: ...

global___Reply = Reply

class Action(google.protobuf.message.Message):
    """a request by assistant to a user visible action"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PARAMS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """the operation name"""
    @property
    def params(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """parameters to pass, each is individually json encoded"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        params: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "params", b"params"]) -> None: ...

global___Action = Action

class Outcome(google.protobuf.message.Message):
    """a response to a action request"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_FIELD_NUMBER: builtins.int
    REQUEST_FIELD_NUMBER: builtins.int
    VAL_FIELD_NUMBER: builtins.int
    ERR_FIELD_NUMBER: builtins.int
    session: builtins.str
    """id of the session"""
    request: builtins.str
    """id of current chat"""
    val: builtins.str
    """json encoded return value, if successful"""
    err: builtins.str
    """error that resulted, if failure"""
    def __init__(
        self,
        *,
        session: builtins.str = ...,
        request: builtins.str = ...,
        val: builtins.str = ...,
        err: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["err", b"err", "result", b"result", "val", b"val"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["err", b"err", "request", b"request", "result", b"result", "session", b"session", "val", b"val"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["result", b"result"]) -> typing_extensions.Literal["val", "err"] | None: ...

global___Outcome = Outcome

class GetChatHistoryRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_FIELD_NUMBER: builtins.int
    SCOPE_FIELD_NUMBER: builtins.int
    session: builtins.str
    """id of the session"""
    scope: builtins.str
    def __init__(
        self,
        *,
        session: builtins.str = ...,
        scope: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["scope", b"scope", "session", b"session"]) -> None: ...

global___GetChatHistoryRequest = GetChatHistoryRequest

class ChatHistoryEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    CONTENT_FIELD_NUMBER: builtins.int
    type: builtins.str
    content: builtins.str
    def __init__(
        self,
        *,
        type: builtins.str = ...,
        content: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["content", b"content", "type", b"type"]) -> None: ...

global___ChatHistoryEntry = ChatHistoryEntry

class GetChatHistoryResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ChatHistoryEntry]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___ChatHistoryEntry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entries", b"entries"]) -> None: ...

global___GetChatHistoryResponse = GetChatHistoryResponse

class SimulationToSdkCodeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    SESSION_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    SIMULATION_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    """Project ID for which to generate setup code"""
    session: builtins.str
    """Id of the long lived session, an opaque string set by initiator"""
    token: builtins.str
    """The session token for assistant to act on behalf of the user"""
    simulation_id: builtins.str
    """If specified, generate "simulation code" instead of "setup code" """
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        session: builtins.str = ...,
        token: builtins.str = ...,
        simulation_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["project_id", b"project_id", "session", b"session", "simulation_id", b"simulation_id", "token", b"token"]) -> None: ...

global___SimulationToSdkCodeRequest = SimulationToSdkCodeRequest

class SimulationToSdkCodeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SDK_CODE_FIELD_NUMBER: builtins.int
    sdk_code: builtins.str
    def __init__(
        self,
        *,
        sdk_code: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sdk_code", b"sdk_code"]) -> None: ...

global___SimulationToSdkCodeResponse = SimulationToSdkCodeResponse

class VisToSdkCodeRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SPEC_FIELD_NUMBER: builtins.int
    SESSION_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    @property
    def spec(self) -> luminarycloud._proto.api.v0.luminarycloud.vis.vis_pb2.ExtractSpec:
        """The extract spec that defines the vis state."""
    session: builtins.str
    """Id of the long lived session, an opaque string set by initiator"""
    token: builtins.str
    """The session token for assistant to act on behalf of the user"""
    def __init__(
        self,
        *,
        spec: luminarycloud._proto.api.v0.luminarycloud.vis.vis_pb2.ExtractSpec | None = ...,
        session: builtins.str = ...,
        token: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["spec", b"spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["session", b"session", "spec", b"spec", "token", b"token"]) -> None: ...

global___VisToSdkCodeRequest = VisToSdkCodeRequest

class VisToSdkCodeResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SDK_CODE_FIELD_NUMBER: builtins.int
    sdk_code: builtins.str
    def __init__(
        self,
        *,
        sdk_code: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sdk_code", b"sdk_code"]) -> None: ...

global___VisToSdkCodeResponse = VisToSdkCodeResponse

class VoiceTranscriptionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_DATA_FIELD_NUMBER: builtins.int
    AUDIO_FORMAT_FIELD_NUMBER: builtins.int
    audio_data: builtins.bytes
    audio_format: builtins.str
    def __init__(
        self,
        *,
        audio_data: builtins.bytes = ...,
        audio_format: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_data", b"audio_data", "audio_format", b"audio_format"]) -> None: ...

global___VoiceTranscriptionRequest = VoiceTranscriptionRequest

class VoiceTranscriptionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    text: builtins.str
    def __init__(
        self,
        *,
        text: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["text", b"text"]) -> None: ...

global___VoiceTranscriptionResponse = VoiceTranscriptionResponse
