"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _EntityType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EntityTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EntityType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID_ENTITY_TYPE: _EntityType.ValueType  # 0
    SURFACE: _EntityType.ValueType  # 1
    PARTICLE_GROUP: _EntityType.ValueType  # 2
    MONITOR_PLANE: _EntityType.ValueType  # 3
    PROBE_POINTS: _EntityType.ValueType  # 4
    MIXED: _EntityType.ValueType  # 5
    VOLUME: _EntityType.ValueType  # 6
    BODY_TAG: _EntityType.ValueType  # 7
    FACE_TAG: _EntityType.ValueType  # 8
    TAG_CONTAINER: _EntityType.ValueType  # 9

class EntityType(_EntityType, metaclass=_EntityTypeEnumTypeWrapper): ...

INVALID_ENTITY_TYPE: EntityType.ValueType  # 0
SURFACE: EntityType.ValueType  # 1
PARTICLE_GROUP: EntityType.ValueType  # 2
MONITOR_PLANE: EntityType.ValueType  # 3
PROBE_POINTS: EntityType.ValueType  # 4
MIXED: EntityType.ValueType  # 5
VOLUME: EntityType.ValueType  # 6
BODY_TAG: EntityType.ValueType  # 7
FACE_TAG: EntityType.ValueType  # 8
TAG_CONTAINER: EntityType.ValueType  # 9
global___EntityType = EntityType

class EntityGroup(google.protobuf.message.Message):
    """A nested group of entities (e.g. surfaces, monitor points etc)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    PARENT_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    INDEX_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the group."""
    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """A list of ids of individual entities or groups."""
    parent: builtins.str
    """Id of the parent of the group"""
    id: builtins.str
    """Id of the group"""
    type: global___EntityType.ValueType
    """Type of the group"""
    index: builtins.str
    """Index of the group for sorting."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        children: collections.abc.Iterable[builtins.str] | None = ...,
        parent: builtins.str = ...,
        id: builtins.str = ...,
        type: global___EntityType.ValueType = ...,
        index: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_index", b"_index", "index", b"index"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_index", b"_index", "children", b"children", "id", b"id", "index", b"index", "name", b"name", "parent", b"parent", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_index", b"_index"]) -> typing_extensions.Literal["index"] | None: ...

global___EntityGroup = EntityGroup

class EntityGroups(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class GroupsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___EntityGroup: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___EntityGroup | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    GROUPS_FIELD_NUMBER: builtins.int
    GROUP_PREFIX_REMOVED_FIELD_NUMBER: builtins.int
    UPGRADED_FIELD_NUMBER: builtins.int
    @property
    def groups(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___EntityGroup]: ...
    group_prefix_removed: builtins.bool
    """Indicates whether the legacy group prefix "Group " has been removed
    from the group ids
    """
    upgraded: builtins.bool
    """Indicates whether the message has been upgraded to the newest version
    (to handle nested groups)
    """
    def __init__(
        self,
        *,
        groups: collections.abc.Mapping[builtins.str, global___EntityGroup] | None = ...,
        group_prefix_removed: builtins.bool = ...,
        upgraded: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_prefix_removed", b"group_prefix_removed", "groups", b"groups", "upgraded", b"upgraded"]) -> None: ...

global___EntityGroups = EntityGroups
