"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import luminarycloud._proto.quantity.quantity_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _TableType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _TableTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_TableType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID: _TableType.ValueType  # 0
    MONITOR_POINTS: _TableType.ValueType  # 1
    RADIAL_DISTRIBUTION: _TableType.ValueType  # 2
    BLADE_GEOMETRY: _TableType.ValueType  # 3
    AIRFOIL_PERFORMANCE: _TableType.ValueType  # 4
    PROFILE_BC: _TableType.ValueType  # 5
    FAN_CURVE: _TableType.ValueType  # 6
    CUSTOM_SAMPLE_DOE: _TableType.ValueType  # 7
    TEMP_VARYING: _TableType.ValueType  # 8
    PROFILE_BC_2D: _TableType.ValueType  # 9

class TableType(_TableType, metaclass=_TableTypeEnumTypeWrapper):
    """These table types are written to gcs by the frontend.
    Renaming the enums will break backwards compatibility when the app tries to read these files again.
    """

INVALID: TableType.ValueType  # 0
MONITOR_POINTS: TableType.ValueType  # 1
RADIAL_DISTRIBUTION: TableType.ValueType  # 2
BLADE_GEOMETRY: TableType.ValueType  # 3
AIRFOIL_PERFORMANCE: TableType.ValueType  # 4
PROFILE_BC: TableType.ValueType  # 5
FAN_CURVE: TableType.ValueType  # 6
CUSTOM_SAMPLE_DOE: TableType.ValueType  # 7
TEMP_VARYING: TableType.ValueType  # 8
PROFILE_BC_2D: TableType.ValueType  # 9
global___TableType = TableType

class RectilinearTable(google.protobuf.message.Message):
    """General n-dimensional rectilinear grid that can store a variety of data
    types as record elements at the grid cells.
    The number of records in the table must be the product of the number of
    coordinates across all axes. Records should be stored in column-major order.
    The number of entries per record must match the number of record labels
    (record labels label the entries not the records).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    METADATA_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    AXIS_FIELD_NUMBER: builtins.int
    RECORD_FIELD_NUMBER: builtins.int
    @property
    def metadata(self) -> global___Metadata: ...
    @property
    def header(self) -> global___Header: ...
    @property
    def axis(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Axis]: ...
    @property
    def record(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Record]: ...
    def __init__(
        self,
        *,
        metadata: global___Metadata | None = ...,
        header: global___Header | None = ...,
        axis: collections.abc.Iterable[global___Axis] | None = ...,
        record: collections.abc.Iterable[global___Record] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header", "metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["axis", b"axis", "header", b"header", "metadata", b"metadata", "record", b"record"]) -> None: ...

global___RectilinearTable = RectilinearTable

class Axis(google.protobuf.message.Message):
    """Stores the coordinate data for a single axis"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Coordinate(google.protobuf.message.Message):
        """Defines the allowable element types for coordinates"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ADFLOAT_FIELD_NUMBER: builtins.int
        @property
        def adfloat(self) -> luminarycloud._proto.base.base_pb2.AdFloatType:
            """Other types here as needed"""
        def __init__(
            self,
            *,
            adfloat: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["adfloat", b"adfloat", "type", b"type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["adfloat", b"adfloat", "type", b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["adfloat"] | None: ...

    COORDINATE_FIELD_NUMBER: builtins.int
    @property
    def coordinate(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Axis.Coordinate]: ...
    def __init__(
        self,
        *,
        coordinate: collections.abc.Iterable[global___Axis.Coordinate] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["coordinate", b"coordinate"]) -> None: ...

global___Axis = Axis

class Record(google.protobuf.message.Message):
    """Stores record data for the Table message"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Entry(google.protobuf.message.Message):
        """Defines the allowable element types for record entries"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class Empty(google.protobuf.message.Message):
            """Used to denote intentionally missing entries"""

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            def __init__(
                self,
            ) -> None: ...

        ADFLOAT_FIELD_NUMBER: builtins.int
        STRING_FIELD_NUMBER: builtins.int
        EMPTY_FIELD_NUMBER: builtins.int
        @property
        def adfloat(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
        string: builtins.str
        @property
        def empty(self) -> global___Record.Entry.Empty:
            """Other types here as needed"""
        def __init__(
            self,
            *,
            adfloat: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
            string: builtins.str = ...,
            empty: global___Record.Entry.Empty | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["adfloat", b"adfloat", "empty", b"empty", "string", b"string", "type", b"type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["adfloat", b"adfloat", "empty", b"empty", "string", b"string", "type", b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["adfloat", "string", "empty"] | None: ...

    ENTRY_FIELD_NUMBER: builtins.int
    @property
    def entry(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Record.Entry]: ...
    def __init__(
        self,
        *,
        entry: collections.abc.Iterable[global___Record.Entry] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["entry", b"entry"]) -> None: ...

global___Record = Record

class Header(google.protobuf.message.Message):
    """Stores header (title) information for record entries of the table"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class Label(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        QUANTITY_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        quantity: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
        name: builtins.str
        """Other types here as needed"""
        def __init__(
            self,
            *,
            quantity: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
            name: builtins.str = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["name", b"name", "quantity", b"quantity", "type", b"type"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "quantity", b"quantity", "type", b"type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["quantity", "name"] | None: ...

    AXIS_LABEL_FIELD_NUMBER: builtins.int
    RECORD_LABEL_FIELD_NUMBER: builtins.int
    ALLOW_MISSING_ENTRIES_FIELD_NUMBER: builtins.int
    SKIP_HEADER_VALIDATION_FIELD_NUMBER: builtins.int
    @property
    def axis_label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Header.Label]: ...
    @property
    def record_label(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Header.Label]: ...
    allow_missing_entries: builtins.bool
    skip_header_validation: builtins.bool
    """If true, skips validation of the header (in c++)."""
    def __init__(
        self,
        *,
        axis_label: collections.abc.Iterable[global___Header.Label] | None = ...,
        record_label: collections.abc.Iterable[global___Header.Label] | None = ...,
        allow_missing_entries: builtins.bool = ...,
        skip_header_validation: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["allow_missing_entries", b"allow_missing_entries", "axis_label", b"axis_label", "record_label", b"record_label", "skip_header_validation", b"skip_header_validation"]) -> None: ...

global___Header = Header

class Metadata(google.protobuf.message.Message):
    """Stores data associated with the table not directly related to table entries"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    URL_FIELD_NUMBER: builtins.int
    TABLE_TYPE_FIELD_NUMBER: builtins.int
    UPLOADED_FILENAME_FIELD_NUMBER: builtins.int
    url: builtins.str
    """Table filename (typically in a gcs bucket)"""
    table_type: global___TableType.ValueType
    uploaded_filename: builtins.str
    """Other metadata as needed"""
    def __init__(
        self,
        *,
        url: builtins.str = ...,
        table_type: global___TableType.ValueType = ...,
        uploaded_filename: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["table_type", b"table_type", "uploaded_filename", b"uploaded_filename", "url", b"url"]) -> None: ...

global___Metadata = Metadata
