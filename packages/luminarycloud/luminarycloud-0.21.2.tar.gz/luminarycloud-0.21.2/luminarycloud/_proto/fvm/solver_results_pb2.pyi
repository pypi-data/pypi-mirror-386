"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import luminarycloud._proto.fvm.global_solution_pb2
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MpiDoubleStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_FIELD_NUMBER: builtins.int
    MIN_FIELD_NUMBER: builtins.int
    AVG_FIELD_NUMBER: builtins.int
    max: builtins.float
    min: builtins.float
    avg: builtins.float
    def __init__(
        self,
        *,
        max: builtins.float = ...,
        min: builtins.float = ...,
        avg: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["avg", b"avg", "max", b"max", "min", b"min"]) -> None: ...

global___MpiDoubleStats = MpiDoubleStats

class TimingSummary(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESH_PREPROCESS_TIME_FIELD_NUMBER: builtins.int
    SOLVER_ITERATION_MEAN_FIELD_NUMBER: builtins.int
    SOLVER_INITIALIZATION_TIME_FIELD_NUMBER: builtins.int
    GPU_MEMORY_USAGE_GB_PER_RANK_FIELD_NUMBER: builtins.int
    mesh_preprocess_time: builtins.float
    """Time in seconds between FVM start and the end of mesh preprocessing"""
    solver_iteration_mean: builtins.float
    """Mean iteration time"""
    solver_initialization_time: builtins.float
    """Time in seconds between mesh preprocessing and the solver being initialized
    Now using 'optional' so we can check for presence if we update this
    again in the future.
    """
    @property
    def gpu_memory_usage_gb_per_rank(self) -> global___MpiDoubleStats:
        """GPU Memory usage stats in GB for this iteration"""
    def __init__(
        self,
        *,
        mesh_preprocess_time: builtins.float = ...,
        solver_iteration_mean: builtins.float = ...,
        solver_initialization_time: builtins.float | None = ...,
        gpu_memory_usage_gb_per_rank: global___MpiDoubleStats | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_gpu_memory_usage_gb_per_rank", b"_gpu_memory_usage_gb_per_rank", "_solver_initialization_time", b"_solver_initialization_time", "gpu_memory_usage_gb_per_rank", b"gpu_memory_usage_gb_per_rank", "solver_initialization_time", b"solver_initialization_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_gpu_memory_usage_gb_per_rank", b"_gpu_memory_usage_gb_per_rank", "_solver_initialization_time", b"_solver_initialization_time", "gpu_memory_usage_gb_per_rank", b"gpu_memory_usage_gb_per_rank", "mesh_preprocess_time", b"mesh_preprocess_time", "solver_initialization_time", b"solver_initialization_time", "solver_iteration_mean", b"solver_iteration_mean"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_gpu_memory_usage_gb_per_rank", b"_gpu_memory_usage_gb_per_rank"]) -> typing_extensions.Literal["gpu_memory_usage_gb_per_rank"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_solver_initialization_time", b"_solver_initialization_time"]) -> typing_extensions.Literal["solver_initialization_time"] | None: ...

global___TimingSummary = TimingSummary

class SolverResultsSummary(google.protobuf.message.Message):
    """Holds both the state of the solver and timing information"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class NlcInputEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    SOLUTION_FIELD_NUMBER: builtins.int
    TIMING_INFO_FIELD_NUMBER: builtins.int
    PHYSICS_SOLUTIONS_FIELD_NUMBER: builtins.int
    NLC_INPUT_FIELD_NUMBER: builtins.int
    @property
    def solution(self) -> luminarycloud._proto.fvm.global_solution_pb2.GlobalSolution:
        """Legacy solution message for backward compatibility"""
    @property
    def timing_info(self) -> global___TimingSummary:
        """Summary of the time spent in different parts of the solver"""
    @property
    def physics_solutions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GlobalSolutionList]:
        """One GlobalSolutionList for each physical model"""
    @property
    def nlc_input(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, luminarycloud._proto.base.base_pb2.AdFloatType]:
        """Results of the nonlinear controller"""
    def __init__(
        self,
        *,
        solution: luminarycloud._proto.fvm.global_solution_pb2.GlobalSolution | None = ...,
        timing_info: global___TimingSummary | None = ...,
        physics_solutions: collections.abc.Iterable[global___GlobalSolutionList] | None = ...,
        nlc_input: collections.abc.Mapping[builtins.str, luminarycloud._proto.base.base_pb2.AdFloatType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_solution", b"_solution", "solution", b"solution", "timing_info", b"timing_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_solution", b"_solution", "nlc_input", b"nlc_input", "physics_solutions", b"physics_solutions", "solution", b"solution", "timing_info", b"timing_info"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_solution", b"_solution"]) -> typing_extensions.Literal["solution"] | None: ...

global___SolverResultsSummary = SolverResultsSummary

class SolverResultsSummaryList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SOLVER_RESULTS_FIELD_NUMBER: builtins.int
    @property
    def solver_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SolverResultsSummary]: ...
    def __init__(
        self,
        *,
        solver_results: collections.abc.Iterable[global___SolverResultsSummary] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["solver_results", b"solver_results"]) -> None: ...

global___SolverResultsSummaryList = SolverResultsSummaryList

class GlobalSolutionList(google.protobuf.message.Message):
    """Holds a GlobalSolution for each inner iteration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INNER_SOLUTIONS_FIELD_NUMBER: builtins.int
    @property
    def inner_solutions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[luminarycloud._proto.fvm.global_solution_pb2.GlobalSolution]: ...
    def __init__(
        self,
        *,
        inner_solutions: collections.abc.Iterable[luminarycloud._proto.fvm.global_solution_pb2.GlobalSolution] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["inner_solutions", b"inner_solutions"]) -> None: ...

global___GlobalSolutionList = GlobalSolutionList
