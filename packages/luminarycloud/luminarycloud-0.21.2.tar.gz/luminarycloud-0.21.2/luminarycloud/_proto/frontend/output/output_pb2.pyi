"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import luminarycloud._proto.output.output_pb2
import luminarycloud._proto.output.reference_values_pb2
import luminarycloud._proto.quantity.quantity_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _OutputIncludes:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OutputIncludesEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_OutputIncludes.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID_OUTPUT_INCLUDE: _OutputIncludes.ValueType  # 0
    OUTPUT_INCLUDE_BASE: _OutputIncludes.ValueType  # 1
    OUTPUT_INCLUDE_TIME_AVERAGE: _OutputIncludes.ValueType  # 2
    OUTPUT_INCLUDE_COEFFICIENT: _OutputIncludes.ValueType  # 3
    OUTPUT_INCLUDE_COEFFICIENT_TIME_AVERAGE: _OutputIncludes.ValueType  # 4
    OUTPUT_INCLUDE_RESIDUAL: _OutputIncludes.ValueType  # 5
    OUTPUT_INCLUDE_MAX_DEV: _OutputIncludes.ValueType  # 6
    OUTPUT_INCLUDE_INNER: _OutputIncludes.ValueType  # 7

class OutputIncludes(_OutputIncludes, metaclass=_OutputIncludesEnumTypeWrapper):
    """Individual outputs included in an outputNode"""

INVALID_OUTPUT_INCLUDE: OutputIncludes.ValueType  # 0
OUTPUT_INCLUDE_BASE: OutputIncludes.ValueType  # 1
OUTPUT_INCLUDE_TIME_AVERAGE: OutputIncludes.ValueType  # 2
OUTPUT_INCLUDE_COEFFICIENT: OutputIncludes.ValueType  # 3
OUTPUT_INCLUDE_COEFFICIENT_TIME_AVERAGE: OutputIncludes.ValueType  # 4
OUTPUT_INCLUDE_RESIDUAL: OutputIncludes.ValueType  # 5
OUTPUT_INCLUDE_MAX_DEV: OutputIncludes.ValueType  # 6
OUTPUT_INCLUDE_INNER: OutputIncludes.ValueType  # 7
global___OutputIncludes = OutputIncludes

class _CalculationType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CalculationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CalculationType.ValueType], builtins.type):  # noqa: F821
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID_CALCULATION_TYPE: _CalculationType.ValueType  # 0
    """An invalid calculation type."""
    CALCULATION_AGGREGATE: _CalculationType.ValueType  # 1
    """Output an aggregate value across all of the surfaces."""
    CALCULATION_PER_SURFACE: _CalculationType.ValueType  # 2
    """Output one value per surface."""
    CALCULATION_DIFFERENCE: _CalculationType.ValueType  # 3
    """Output the difference between the sum of all the IN surfaces and the sum of
    all the OUT surfaces.
    """

class CalculationType(_CalculationType, metaclass=_CalculationTypeEnumTypeWrapper): ...

INVALID_CALCULATION_TYPE: CalculationType.ValueType  # 0
"""An invalid calculation type."""
CALCULATION_AGGREGATE: CalculationType.ValueType  # 1
"""Output an aggregate value across all of the surfaces."""
CALCULATION_PER_SURFACE: CalculationType.ValueType  # 2
"""Output one value per surface."""
CALCULATION_DIFFERENCE: CalculationType.ValueType  # 3
"""Output the difference between the sum of all the IN surfaces and the sum of
all the OUT surfaces.
"""
global___CalculationType = CalculationType

class SurfaceAverageNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUANTITY_TYPE_FIELD_NUMBER: builtins.int
    VECTOR_COMPONENT_FIELD_NUMBER: builtins.int
    PROPS_FIELD_NUMBER: builtins.int
    INCLUDE_TIME_AVERAGE_FIELD_NUMBER: builtins.int
    INCLUDE_INSTANTANEOUS_FIELD_NUMBER: builtins.int
    quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
    vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.SurfaceAverageProperties: ...
    include_time_average: builtins.bool
    include_instantaneous: builtins.bool
    def __init__(
        self,
        *,
        quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
        vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType = ...,
        props: luminarycloud._proto.output.output_pb2.SurfaceAverageProperties | None = ...,
        include_time_average: builtins.bool = ...,
        include_instantaneous: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["include_instantaneous", b"include_instantaneous", "include_time_average", b"include_time_average", "props", b"props", "quantity_type", b"quantity_type", "vector_component", b"vector_component"]) -> None: ...

global___SurfaceAverageNode = SurfaceAverageNode

class ForceNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUANTITY_TYPE_FIELD_NUMBER: builtins.int
    PROPS_FIELD_NUMBER: builtins.int
    INCLUDE_DIMENSIONAL_FIELD_NUMBER: builtins.int
    INCLUDE_COEFFICIENT_FIELD_NUMBER: builtins.int
    INCLUDE_DIMENSIONAL_AVERAGE_FIELD_NUMBER: builtins.int
    INCLUDE_COEFFICIENT_AVERAGE_FIELD_NUMBER: builtins.int
    quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.ForceProperties: ...
    include_dimensional: builtins.bool
    include_coefficient: builtins.bool
    include_dimensional_average: builtins.bool
    include_coefficient_average: builtins.bool
    def __init__(
        self,
        *,
        quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
        props: luminarycloud._proto.output.output_pb2.ForceProperties | None = ...,
        include_dimensional: builtins.bool = ...,
        include_coefficient: builtins.bool = ...,
        include_dimensional_average: builtins.bool = ...,
        include_coefficient_average: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["include_coefficient", b"include_coefficient", "include_coefficient_average", b"include_coefficient_average", "include_dimensional", b"include_dimensional", "include_dimensional_average", b"include_dimensional_average", "props", b"props", "quantity_type", b"quantity_type"]) -> None: ...

global___ForceNode = ForceNode

class ResidualNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class ResEnabledEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.bool
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    PROPS_FIELD_NUMBER: builtins.int
    RES_TYPE_ENABLED_FIELD_NUMBER: builtins.int
    RES_ENABLED_FIELD_NUMBER: builtins.int
    PHYSICS_ID_FIELD_NUMBER: builtins.int
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.ResidualProperties: ...
    @property
    def res_type_enabled(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
    @property
    def res_enabled(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.bool]:
        """Contains boolean for every residual that indicates whether it is enabled or
        not. Note that the key type is actually supposed to be
        luminary.proto.quantity.QuantityType, but protobuf does not allow enum
        types as keys so we have to stick to int.
        """
    physics_id: builtins.str
    """The EntityIdentifier id of the selected physics"""
    def __init__(
        self,
        *,
        props: luminarycloud._proto.output.output_pb2.ResidualProperties | None = ...,
        res_type_enabled: collections.abc.Iterable[builtins.bool] | None = ...,
        res_enabled: collections.abc.Mapping[builtins.int, builtins.bool] | None = ...,
        physics_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["physics_id", b"physics_id", "props", b"props", "res_enabled", b"res_enabled", "res_type_enabled", b"res_type_enabled"]) -> None: ...

global___ResidualNode = ResidualNode

class ConvergenceMonitorNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONV_MONITOR_ENABLED_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    @property
    def conv_monitor_enabled(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]:
        """Boolean for every stopping condition that indicates whether
        the monitoring value plot is visible
        """
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OutputNode]:
        """Copy of output nodes used in stopping conditions"""
    def __init__(
        self,
        *,
        conv_monitor_enabled: collections.abc.Iterable[builtins.bool] | None = ...,
        nodes: collections.abc.Iterable[global___OutputNode] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["conv_monitor_enabled", b"conv_monitor_enabled", "nodes", b"nodes"]) -> None: ...

global___ConvergenceMonitorNode = ConvergenceMonitorNode

class BasicNode(google.protobuf.message.Message):
    """Basic quantity node that does not have any options"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUANTITY_TYPE_FIELD_NUMBER: builtins.int
    PROPS_FIELD_NUMBER: builtins.int
    quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.BasicType: ...
    def __init__(
        self,
        *,
        quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
        props: luminarycloud._proto.output.output_pb2.BasicType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["props", b"props", "quantity_type", b"quantity_type"]) -> None: ...

global___BasicNode = BasicNode

class PointProbeNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUANTITY_TYPE_FIELD_NUMBER: builtins.int
    VECTOR_COMPONENT_FIELD_NUMBER: builtins.int
    PROPS_FIELD_NUMBER: builtins.int
    quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
    vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.PointProbeType: ...
    def __init__(
        self,
        *,
        quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
        vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType = ...,
        props: luminarycloud._proto.output.output_pb2.PointProbeType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["props", b"props", "quantity_type", b"quantity_type", "vector_component", b"vector_component"]) -> None: ...

global___PointProbeNode = PointProbeNode

class VolumeReductionNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUANTITY_TYPE_FIELD_NUMBER: builtins.int
    VECTOR_COMPONENT_FIELD_NUMBER: builtins.int
    PROPS_FIELD_NUMBER: builtins.int
    quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType
    vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType
    @property
    def props(self) -> luminarycloud._proto.output.output_pb2.VolumeReductionProperties: ...
    def __init__(
        self,
        *,
        quantity_type: luminarycloud._proto.quantity.quantity_pb2.QuantityType.ValueType = ...,
        vector_component: luminarycloud._proto.base.base_pb2.Vector3Component.ValueType = ...,
        props: luminarycloud._proto.output.output_pb2.VolumeReductionProperties | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["props", b"props"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["props", b"props", "quantity_type", b"quantity_type", "vector_component", b"vector_component"]) -> None: ...

global___VolumeReductionNode = VolumeReductionNode

class DerivedNodeDependency(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    INCLUDE_FIELD_NUMBER: builtins.int
    id: builtins.str
    include: global___OutputIncludes.ValueType
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        include: global___OutputIncludes.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "include", b"include"]) -> None: ...

global___DerivedNodeDependency = DerivedNodeDependency

class ExpressionElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUBSTRING_FIELD_NUMBER: builtins.int
    DEPENDENCY_FIELD_NUMBER: builtins.int
    VARIABLE_FIELD_NUMBER: builtins.int
    substring: builtins.str
    @property
    def dependency(self) -> global___DerivedNodeDependency: ...
    variable: builtins.str
    def __init__(
        self,
        *,
        substring: builtins.str = ...,
        dependency: global___DerivedNodeDependency | None = ...,
        variable: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dependency", b"dependency", "element_type", b"element_type", "substring", b"substring", "variable", b"variable"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dependency", b"dependency", "element_type", b"element_type", "substring", b"substring", "variable", b"variable"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["element_type", b"element_type"]) -> typing_extensions.Literal["substring", "dependency", "variable"] | None: ...

global___ExpressionElement = ExpressionElement

class DerivedNode(google.protobuf.message.Message):
    """https://docs.google.com/document/d/1PbdPVFG9svSWZsZB5ReQubVXFWXMESXr1Du2VPBprfQ/edit"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ELEMENTS_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    @property
    def elements(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExpressionElement]: ...
    @property
    def errors(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        elements: collections.abc.Iterable[global___ExpressionElement] | None = ...,
        errors: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["elements", b"elements", "errors", b"errors"]) -> None: ...

global___DerivedNode = DerivedNode

class OutputNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OutputNode._Type.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVALID_OUTPUT_TYPE: OutputNode._Type.ValueType  # 0
        POINT_OUTPUT_TYPE: OutputNode._Type.ValueType  # 1
        SURFACE_OUTPUT_TYPE: OutputNode._Type.ValueType  # 2
        GLOBAL_OUTPUT_TYPE: OutputNode._Type.ValueType  # 3
        DERIVED_OUTPUT_TYPE: OutputNode._Type.ValueType  # 4
        VOLUME_OUTPUT_TYPE: OutputNode._Type.ValueType  # 5

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    INVALID_OUTPUT_TYPE: OutputNode.Type.ValueType  # 0
    POINT_OUTPUT_TYPE: OutputNode.Type.ValueType  # 1
    SURFACE_OUTPUT_TYPE: OutputNode.Type.ValueType  # 2
    GLOBAL_OUTPUT_TYPE: OutputNode.Type.ValueType  # 3
    DERIVED_OUTPUT_TYPE: OutputNode.Type.ValueType  # 4
    VOLUME_OUTPUT_TYPE: OutputNode.Type.ValueType  # 5

    class IncludeEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.bool
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    SURFACE_AVERAGE_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    RESIDUAL_FIELD_NUMBER: builtins.int
    CONV_MON_FIELD_NUMBER: builtins.int
    BASIC_FIELD_NUMBER: builtins.int
    POINT_PROBE_FIELD_NUMBER: builtins.int
    DERIVED_FIELD_NUMBER: builtins.int
    VOLUME_REDUCTION_FIELD_NUMBER: builtins.int
    CALC_TYPE_FIELD_NUMBER: builtins.int
    IN_SURFACES_FIELD_NUMBER: builtins.int
    OUT_SURFACES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    CHOICE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    INCLUDE_FIELD_NUMBER: builtins.int
    AVERAGE_ITERS_FIELD_NUMBER: builtins.int
    ANALYSIS_ITERS_FIELD_NUMBER: builtins.int
    TRAIL_AVG_ITERS_FIELD_NUMBER: builtins.int
    FRAME_ID_FIELD_NUMBER: builtins.int
    @property
    def surface_average(self) -> global___SurfaceAverageNode: ...
    @property
    def force(self) -> global___ForceNode: ...
    @property
    def residual(self) -> global___ResidualNode: ...
    @property
    def conv_mon(self) -> global___ConvergenceMonitorNode: ...
    @property
    def basic(self) -> global___BasicNode: ...
    @property
    def point_probe(self) -> global___PointProbeNode: ...
    @property
    def derived(self) -> global___DerivedNode: ...
    @property
    def volume_reduction(self) -> global___VolumeReductionNode: ...
    calc_type: global___CalculationType.ValueType
    @property
    def in_surfaces(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def out_surfaces(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    name: builtins.str
    id: builtins.str
    choice: builtins.int
    type: global___OutputNode.Type.ValueType
    @property
    def include(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.bool]:
        """One outputNode usually can include several related outputs
        (e.g. a force node can also include a coefficient or a time-averaged
        value). This map indicates which of those related output are enabled. Uses
        values of frontend.OutputIncludes as keys.
        """
    average_iters: builtins.int
    analysis_iters: builtins.int
    trail_avg_iters: builtins.int
    frame_id: builtins.str
    def __init__(
        self,
        *,
        surface_average: global___SurfaceAverageNode | None = ...,
        force: global___ForceNode | None = ...,
        residual: global___ResidualNode | None = ...,
        conv_mon: global___ConvergenceMonitorNode | None = ...,
        basic: global___BasicNode | None = ...,
        point_probe: global___PointProbeNode | None = ...,
        derived: global___DerivedNode | None = ...,
        volume_reduction: global___VolumeReductionNode | None = ...,
        calc_type: global___CalculationType.ValueType = ...,
        in_surfaces: collections.abc.Iterable[builtins.str] | None = ...,
        out_surfaces: collections.abc.Iterable[builtins.str] | None = ...,
        name: builtins.str = ...,
        id: builtins.str = ...,
        choice: builtins.int = ...,
        type: global___OutputNode.Type.ValueType = ...,
        include: collections.abc.Mapping[builtins.int, builtins.bool] | None = ...,
        average_iters: builtins.int = ...,
        analysis_iters: builtins.int = ...,
        trail_avg_iters: builtins.int = ...,
        frame_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["basic", b"basic", "conv_mon", b"conv_mon", "derived", b"derived", "force", b"force", "node_props", b"node_props", "point_probe", b"point_probe", "residual", b"residual", "surface_average", b"surface_average", "volume_reduction", b"volume_reduction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis_iters", b"analysis_iters", "average_iters", b"average_iters", "basic", b"basic", "calc_type", b"calc_type", "choice", b"choice", "conv_mon", b"conv_mon", "derived", b"derived", "force", b"force", "frame_id", b"frame_id", "id", b"id", "in_surfaces", b"in_surfaces", "include", b"include", "name", b"name", "node_props", b"node_props", "out_surfaces", b"out_surfaces", "point_probe", b"point_probe", "residual", b"residual", "surface_average", b"surface_average", "trail_avg_iters", b"trail_avg_iters", "type", b"type", "volume_reduction", b"volume_reduction"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["node_props", b"node_props"]) -> typing_extensions.Literal["surface_average", "force", "residual", "conv_mon", "basic", "point_probe", "derived", "volume_reduction"] | None: ...

global___OutputNode = OutputNode

class OutputNodes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODES_FIELD_NUMBER: builtins.int
    INITIALIZED_FIELD_NUMBER: builtins.int
    REFERENCE_VALUES_FIELD_NUMBER: builtins.int
    USE_REF_VALUES_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OutputNode]: ...
    initialized: builtins.bool
    """Boolean to distinguish a default state from an empty state (nodes will be
    empty in both cases)
    """
    @property
    def reference_values(self) -> luminarycloud._proto.output.reference_values_pb2.ReferenceValues: ...
    use_ref_values: builtins.bool
    """Use the reference values stored in this message rather than the
    values from the simulation params.
    """
    def __init__(
        self,
        *,
        nodes: collections.abc.Iterable[global___OutputNode] | None = ...,
        initialized: builtins.bool = ...,
        reference_values: luminarycloud._proto.output.reference_values_pb2.ReferenceValues | None = ...,
        use_ref_values: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["reference_values", b"reference_values"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["initialized", b"initialized", "nodes", b"nodes", "reference_values", b"reference_values", "use_ref_values", b"use_ref_values"]) -> None: ...

global___OutputNodes = OutputNodes

class CustomField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    EXPRESSION_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    name: builtins.str
    expression: builtins.str
    id: builtins.str
    errors: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        expression: builtins.str = ...,
        id: builtins.str = ...,
        errors: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["errors", b"errors", "expression", b"expression", "id", b"id", "name", b"name"]) -> None: ...

global___CustomField = CustomField

class CustomFields(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CUSTOM_FIELDS_FIELD_NUMBER: builtins.int
    @property
    def custom_fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CustomField]: ...
    def __init__(
        self,
        *,
        custom_fields: collections.abc.Iterable[global___CustomField] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["custom_fields", b"custom_fields"]) -> None: ...

global___CustomFields = CustomFields

class StoppingCondition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LEGACY_NODE_ID_FIELD_NUMBER: builtins.int
    THRESHOLD_FIELD_NUMBER: builtins.int
    N_ITERATIONS_FIELD_NUMBER: builtins.int
    START_AT_FIELD_NUMBER: builtins.int
    NODE_FIELD_NUMBER: builtins.int
    INNER_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    N_ANALYSIS_ITERS_FIELD_NUMBER: builtins.int
    legacy_node_id: builtins.str
    """Id of the output node for this stopping condition"""
    threshold: builtins.float
    """Threshold for this stopping condition"""
    n_iterations: builtins.int
    """Number of averaging iterations"""
    start_at: builtins.int
    """Starting iteration"""
    @property
    def node(self) -> global___OutputNode:
        """Output node with this condition"""
    inner: builtins.bool
    """Indicated whether this condition is applied to inner iterations"""
    id: builtins.str
    """Unique ID"""
    n_analysis_iters: builtins.int
    """Number of iterations over which to perform analysis"""
    def __init__(
        self,
        *,
        legacy_node_id: builtins.str = ...,
        threshold: builtins.float = ...,
        n_iterations: builtins.int = ...,
        start_at: builtins.int = ...,
        node: global___OutputNode | None = ...,
        inner: builtins.bool = ...,
        id: builtins.str = ...,
        n_analysis_iters: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node", b"node"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "inner", b"inner", "legacy_node_id", b"legacy_node_id", "n_analysis_iters", b"n_analysis_iters", "n_iterations", b"n_iterations", "node", b"node", "start_at", b"start_at", "threshold", b"threshold"]) -> None: ...

global___StoppingCondition = StoppingCondition

class StoppingConditions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    COND_FIELD_NUMBER: builtins.int
    MAX_ITERATIONS_FIELD_NUMBER: builtins.int
    MAX_PHYSICAL_TIME_FIELD_NUMBER: builtins.int
    OP_FIELD_NUMBER: builtins.int
    MAX_INNER_ITERATIONS_FIELD_NUMBER: builtins.int
    @property
    def cond(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StoppingCondition]:
        """List of stopping conditions"""
    max_iterations: builtins.int
    """Maximum iterations"""
    max_physical_time: builtins.float
    """Maximum physical time"""
    op: luminarycloud._proto.output.output_pb2.StoppingConditionOp.ValueType
    """Condition operation"""
    max_inner_iterations: builtins.int
    """Maximum inner iterations"""
    def __init__(
        self,
        *,
        cond: collections.abc.Iterable[global___StoppingCondition] | None = ...,
        max_iterations: builtins.int = ...,
        max_physical_time: builtins.float = ...,
        op: luminarycloud._proto.output.output_pb2.StoppingConditionOp.ValueType = ...,
        max_inner_iterations: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cond", b"cond", "max_inner_iterations", b"max_inner_iterations", "max_iterations", b"max_iterations", "max_physical_time", b"max_physical_time", "op", b"op"]) -> None: ...

global___StoppingConditions = StoppingConditions
