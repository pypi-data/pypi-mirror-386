"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import luminarycloud._proto.entitygroup.entitygroup_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Box(google.protobuf.message.Message):
    """Box with min and max coordinates"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIN_FIELD_NUMBER: builtins.int
    MAX_FIELD_NUMBER: builtins.int
    @property
    def min(self) -> luminarycloud._proto.base.base_pb2.Vector3: ...
    @property
    def max(self) -> luminarycloud._proto.base.base_pb2.Vector3: ...
    def __init__(
        self,
        *,
        min: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
        max: luminarycloud._proto.base.base_pb2.Vector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["max", b"max", "min", b"min"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["max", b"max", "min", b"min"]) -> None: ...

global___Box = Box

class CadMetadata(google.protobuf.message.Message):
    """Metadata about the geometry"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLOBAL_MIN_SIZE_M_FIELD_NUMBER: builtins.int
    GLOBAL_MAX_SIZE_M_FIELD_NUMBER: builtins.int
    MODEL_MAX_SIZE_M_FIELD_NUMBER: builtins.int
    ENTITY_GROUPS_FIELD_NUMBER: builtins.int
    BOUNDING_BOX_FIELD_NUMBER: builtins.int
    N_BODIES_FIELD_NUMBER: builtins.int
    N_FACES_FIELD_NUMBER: builtins.int
    N_EDGES_FIELD_NUMBER: builtins.int
    N_VERTICES_FIELD_NUMBER: builtins.int
    VOLUME_NAMES_FIELD_NUMBER: builtins.int
    VOLUME_IDS_FIELD_NUMBER: builtins.int
    global_min_size_m: builtins.float
    """Guess for a global minimum mesh element size in meters"""
    global_max_size_m: builtins.float
    """Guess for a global maximum mesh element size in meters"""
    model_max_size_m: builtins.float
    """Guess for a model max size in meters"""
    @property
    def entity_groups(self) -> luminarycloud._proto.entitygroup.entitygroup_pb2.EntityGroups:
        """Guess groups of entities"""
    @property
    def bounding_box(self) -> global___Box:
        """Bounding box of the model"""
    n_bodies: builtins.int
    """Number of bodies in the model"""
    n_faces: builtins.int
    """Number of faces in the model"""
    n_edges: builtins.int
    """Number of edges in the model"""
    n_vertices: builtins.int
    """Number of vertices in the model"""
    @property
    def volume_names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Names of all volumes in the geometry"""
    @property
    def volume_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Native CAD kernel ids of the volumes/bodies.
        NOTE: this data may be unavailable for already-persisted protos.
        """
    def __init__(
        self,
        *,
        global_min_size_m: builtins.float = ...,
        global_max_size_m: builtins.float = ...,
        model_max_size_m: builtins.float = ...,
        entity_groups: luminarycloud._proto.entitygroup.entitygroup_pb2.EntityGroups | None = ...,
        bounding_box: global___Box | None = ...,
        n_bodies: builtins.int = ...,
        n_faces: builtins.int = ...,
        n_edges: builtins.int = ...,
        n_vertices: builtins.int = ...,
        volume_names: collections.abc.Iterable[builtins.str] | None = ...,
        volume_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bounding_box", b"bounding_box", "entity_groups", b"entity_groups"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bounding_box", b"bounding_box", "entity_groups", b"entity_groups", "global_max_size_m", b"global_max_size_m", "global_min_size_m", b"global_min_size_m", "model_max_size_m", b"model_max_size_m", "n_bodies", b"n_bodies", "n_edges", b"n_edges", "n_faces", b"n_faces", "n_vertices", b"n_vertices", "volume_ids", b"volume_ids", "volume_names", b"volume_names"]) -> None: ...

global___CadMetadata = CadMetadata
