"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import luminarycloud._proto.lcstatus.codes_pb2
import luminarycloud._proto.lcstatus.levels_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LCStatus(google.protobuf.message.Message):
    """LCStatus conveys a specific piece of information that's typically the result
    of some operation or processing.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    WHERE_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    code: luminarycloud._proto.lcstatus.codes_pb2.Code.ValueType
    """Encodes the key piece of information to be conveyed."""
    level: luminarycloud._proto.lcstatus.levels_pb2.Level.ValueType
    """Indicates importance of this pieces of information."""
    @property
    def details(self) -> google.protobuf.any_pb2.Any:
        """Optionally contains more detailed information for the specified code."""
    description: builtins.str
    """Optional string describing the status (not user-facing)"""
    where: builtins.str
    """Optional string describing the location where the status was generated
    (not user-facing)
    """
    id: builtins.str
    """Instance id (to identify identical instances)"""
    def __init__(
        self,
        *,
        code: luminarycloud._proto.lcstatus.codes_pb2.Code.ValueType = ...,
        level: luminarycloud._proto.lcstatus.levels_pb2.Level.ValueType = ...,
        details: google.protobuf.any_pb2.Any | None = ...,
        description: builtins.str = ...,
        where: builtins.str = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["details", b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code", b"code", "description", b"description", "details", b"details", "id", b"id", "level", b"level", "where", b"where"]) -> None: ...

global___LCStatus = LCStatus
