"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Fill(google.protobuf.message.Message):
    """Fill fills the volume with the phase."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___Fill = Fill

class Sphere(google.protobuf.message.Message):
    """Sphere defines the location and size of a sphere."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CENTER_FIELD_NUMBER: builtins.int
    RADIUS_FIELD_NUMBER: builtins.int
    @property
    def center(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """Location of the spheres center."""
    @property
    def radius(self) -> luminarycloud._proto.base.base_pb2.AdFloatType:
        """Radius of the sphere in meters."""
    def __init__(
        self,
        *,
        center: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        radius: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["center", b"center", "radius", b"radius"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["center", b"center", "radius", b"radius"]) -> None: ...

global___Sphere = Sphere

class Box(google.protobuf.message.Message):
    """Box defines the lower left point and side lengths."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOWER_LEFT_FIELD_NUMBER: builtins.int
    SIDE_LENGTHS_FIELD_NUMBER: builtins.int
    @property
    def lower_left(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """Location of the lower left corner of the box."""
    @property
    def side_lengths(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """Side lengths of the box."""
    def __init__(
        self,
        *,
        lower_left: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        side_lengths: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["lower_left", b"lower_left", "side_lengths", b"side_lengths"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["lower_left", b"lower_left", "side_lengths", b"side_lengths"]) -> None: ...

global___Box = Box

class Plane(google.protobuf.message.Message):
    """Plane defines the normal and point of a plane."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NORMAL_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    @property
    def normal(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """A plane normal."""
    @property
    def point(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """A point on the plane."""
    def __init__(
        self,
        *,
        normal: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        point: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["normal", b"normal", "point", b"point"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["normal", b"normal", "point", b"point"]) -> None: ...

global___Plane = Plane

class CosWave(google.protobuf.message.Message):
    """Plane defines the normal and point of a plane."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NORMAL_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    DIRECTION_FIELD_NUMBER: builtins.int
    AMPLITUDE_FIELD_NUMBER: builtins.int
    WAVE_LENGTH_FIELD_NUMBER: builtins.int
    @property
    def normal(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """A plane normal."""
    @property
    def point(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """A point on the plane. Serves as origin for cosine wave."""
    @property
    def direction(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """Cosine wave direction."""
    @property
    def amplitude(self) -> luminarycloud._proto.base.base_pb2.AdFloatType:
        """Amplitude of cosine wave."""
    @property
    def wave_length(self) -> luminarycloud._proto.base.base_pb2.AdFloatType:
        """Wave length of cosine wave."""
    def __init__(
        self,
        *,
        normal: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        point: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        direction: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        amplitude: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        wave_length: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amplitude", b"amplitude", "direction", b"direction", "normal", b"normal", "point", b"point", "wave_length", b"wave_length"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amplitude", b"amplitude", "direction", b"direction", "normal", b"normal", "point", b"point", "wave_length", b"wave_length"]) -> None: ...

global___CosWave = CosWave

class VofInitialization(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class VofShape(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        ID_FIELD_NUMBER: builtins.int
        FILL_FIELD_NUMBER: builtins.int
        SPHERE_FIELD_NUMBER: builtins.int
        BOX_FIELD_NUMBER: builtins.int
        PLANE_FIELD_NUMBER: builtins.int
        COS_WAVE_FIELD_NUMBER: builtins.int
        name: builtins.str
        """The user-defined name of the region."""
        id: builtins.str
        """An identifying id."""
        @property
        def fill(self) -> global___Fill: ...
        @property
        def sphere(self) -> global___Sphere: ...
        @property
        def box(self) -> global___Box: ...
        @property
        def plane(self) -> global___Plane: ...
        @property
        def cos_wave(self) -> global___CosWave: ...
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            id: builtins.str = ...,
            fill: global___Fill | None = ...,
            sphere: global___Sphere | None = ...,
            box: global___Box | None = ...,
            plane: global___Plane | None = ...,
            cos_wave: global___CosWave | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["box", b"box", "cos_wave", b"cos_wave", "fill", b"fill", "plane", b"plane", "shape", b"shape", "sphere", b"sphere"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["box", b"box", "cos_wave", b"cos_wave", "fill", b"fill", "id", b"id", "name", b"name", "plane", b"plane", "shape", b"shape", "sphere", b"sphere"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions.Literal["shape", b"shape"]) -> typing_extensions.Literal["fill", "sphere", "box", "plane", "cos_wave"] | None: ...

    PHASE_ID_FIELD_NUMBER: builtins.int
    ZONE_IDS_FIELD_NUMBER: builtins.int
    VOF_SHAPES_FIELD_NUMBER: builtins.int
    phase_id: builtins.str
    """Index (starting from 0) for which the Vof initialization will take place."""
    @property
    def zone_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of zones to apply the initialization to. Any value < 0 means all."""
    @property
    def vof_shapes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VofInitialization.VofShape]:
        """Users can specify any number of shapes to initialize from."""
    def __init__(
        self,
        *,
        phase_id: builtins.str = ...,
        zone_ids: collections.abc.Iterable[builtins.str] | None = ...,
        vof_shapes: collections.abc.Iterable[global___VofInitialization.VofShape] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["phase_id", b"phase_id", "vof_shapes", b"vof_shapes", "zone_ids", b"zone_ids"]) -> None: ...

global___VofInitialization = VofInitialization
