"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import luminarycloud._proto.base.base_pb2
import luminarycloud._proto.table.table_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ActuatorDiskRadialDistributionRow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RADIAL_STATION_FIELD_NUMBER: builtins.int
    AXIAL_FIELD_NUMBER: builtins.int
    TANGENTIAL_FIELD_NUMBER: builtins.int
    RADIAL_FIELD_NUMBER: builtins.int
    @property
    def radial_station(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
    @property
    def axial(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
    @property
    def tangential(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
    @property
    def radial(self) -> luminarycloud._proto.base.base_pb2.AdFloatType: ...
    def __init__(
        self,
        *,
        radial_station: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        axial: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        tangential: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        radial: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["axial", b"axial", "radial", b"radial", "radial_station", b"radial_station", "tangential", b"tangential"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["axial", b"axial", "radial", b"radial", "radial_station", b"radial_station", "tangential", b"tangential"]) -> None: ...

global___ActuatorDiskRadialDistributionRow = ActuatorDiskRadialDistributionRow

class ActuatorDiskRadialDistributionTable(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROW_FIELD_NUMBER: builtins.int
    @property
    def row(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ActuatorDiskRadialDistributionRow]: ...
    def __init__(
        self,
        *,
        row: collections.abc.Iterable[global___ActuatorDiskRadialDistributionRow] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["row", b"row"]) -> None: ...

global___ActuatorDiskRadialDistributionTable = ActuatorDiskRadialDistributionTable

class BladeElementDefinition(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    BLADE_ROOT_FIELD_NUMBER: builtins.int
    BLADE_ANGLE_FIELD_NUMBER: builtins.int
    GEOMETRY_FIELD_NUMBER: builtins.int
    AIRFOIL_FIELD_NUMBER: builtins.int
    ALPHA_FIELD_NUMBER: builtins.int
    MACH_FIELD_NUMBER: builtins.int
    REYNOLDS_NUMBER_FIELD_NUMBER: builtins.int
    AERODYNAMICS_FIELD_NUMBER: builtins.int
    name: builtins.str
    """User-provided name for identification through the UI"""
    id: builtins.str
    """Unique ID for this blade definition"""
    @property
    def blade_root(self) -> luminarycloud._proto.base.base_pb2.AdVector3:
        """(x,y,z) location of the blade root"""
    @property
    def blade_angle(self) -> luminarycloud._proto.base.base_pb2.AdFloatType:
        """Angle of the blade at t=0"""
    @property
    def geometry(self) -> luminarycloud._proto.table.table_pb2.RectilinearTable:
        """Table defining the geometry of the blade
        Axes: (r/R)
        Channels: twist, sweep, anhedral, & chord
        """
    @property
    def airfoil(self) -> luminarycloud._proto.table.table_pb2.RectilinearTable:
        """Table defining the airfoils along the blade
        Axes: (r/R)
        Channels: airfoil name, table ID
        """
    @property
    def alpha(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[luminarycloud._proto.base.base_pb2.AdFloatType]:
        """Axes values for Mach, angle of attack, and Reynolds number
        (shared across all aero tables)
        """
    @property
    def mach(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[luminarycloud._proto.base.base_pb2.AdFloatType]: ...
    @property
    def reynolds_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[luminarycloud._proto.base.base_pb2.AdFloatType]: ...
    @property
    def aerodynamics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[luminarycloud._proto.table.table_pb2.RectilinearTable]:
        """List of tables
        Axes: angle-of-attack, Mach number, (TODO: Reynolds number)
        Channels: Lift, Drag, Moment
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        id: builtins.str = ...,
        blade_root: luminarycloud._proto.base.base_pb2.AdVector3 | None = ...,
        blade_angle: luminarycloud._proto.base.base_pb2.AdFloatType | None = ...,
        geometry: luminarycloud._proto.table.table_pb2.RectilinearTable | None = ...,
        airfoil: luminarycloud._proto.table.table_pb2.RectilinearTable | None = ...,
        alpha: collections.abc.Iterable[luminarycloud._proto.base.base_pb2.AdFloatType] | None = ...,
        mach: collections.abc.Iterable[luminarycloud._proto.base.base_pb2.AdFloatType] | None = ...,
        reynolds_number: collections.abc.Iterable[luminarycloud._proto.base.base_pb2.AdFloatType] | None = ...,
        aerodynamics: collections.abc.Iterable[luminarycloud._proto.table.table_pb2.RectilinearTable] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["airfoil", b"airfoil", "blade_angle", b"blade_angle", "blade_root", b"blade_root", "geometry", b"geometry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aerodynamics", b"aerodynamics", "airfoil", b"airfoil", "alpha", b"alpha", "blade_angle", b"blade_angle", "blade_root", b"blade_root", "geometry", b"geometry", "id", b"id", "mach", b"mach", "name", b"name", "reynolds_number", b"reynolds_number"]) -> None: ...

global___BladeElementDefinition = BladeElementDefinition
