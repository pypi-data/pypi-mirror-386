---
id: 1.1.10
name: branches_updated_before_merging
title: Ensure open Git branches are up to date before they can be merged into code base
profile: 1
category: source_code
sub_category: code_changes
description: >-
  Organizations should make sure each suggested code change is in full sync with the 
  existing state of its origin code repository before allowing merging.
rationale: >-
  Git branches can easily become outdated since the origin code repository is constantly 
  being edited. This means engineers working on separate code branches can 
  accidentally include outdated code with potential security issues which might have 
  already been fixed, overriding the potential solutions for those security issues when 
  merging their own changes.
impact: >-
  If enforced, outdated branches would not be able to be merged into their origin 
  repository without first being updated to contain any recent changes.
audit: |
  For each project, verify that open branches must be updated before merging by performing the following:
    • Navigate to the main page of the project
    • In the sidebar, select Settings > Merge requests
    • Look at the 'Merge method'. If 'Merge commit with semi-linear history' or 'Fast-forward merge' is selected, the project is compliant.
remediation: |
  For each project identified as being non-compliant, performing the following:
    • Navigate to the main page of the project
    • In the sidebar, select Settings > Merge requests
    • Under the 'Merge method' select either 'Merge commit with semi-linear history' or 'Fast-forward merge'.
default_value: By default, there is no requirement to update a branch before merging it.
references:
  - https://docs.gitlab.com/ee/user/project/merge_requests/methods/
cis_controls:
  - id: 16.1
    version: 8
    name: Establish and Maintain a Secure Application Development Process
    description: >-
      Establish and maintain a secure application development process. In the 
      process, address such items as: secure application design standards, secure coding 
      practices, developer training, vulnerability management, security of third-party code, 
      and application security testing procedures. Review and update documentation 
      annually, or when significant enterprise changes occur that could impact this 
      Safeguard.
    implementation_groups:
      - IG2
      - IG3
  - id: 18.1
    version: 7
    name: Establish Secure Coding Practices
    description: >-
      Establish secure coding practices appropriate to the programming language and 
      development environment being used.
    implementation_groups:
      - IG2
      - IG3
additional_info: >-
