---
id: 2.3.1
name: build_steps_as_code
title: Ensure all build steps are defined as code
profile: 1
category: build_pipelines
sub_category: pipeline_instructions
description: >-
  Use pipeline as code for build pipelines and their defined steps.
rationale: >-
  Storing pipeline instructions as code in a version control system means automation of 
  the build steps and less room for human error, which could potentially lead to a security 
  breach. Additionally, It creates the ability to revert back to a previous pipeline 
  configuration in order to pinpoint the affected change should a malicious incident occur.
impact: >-
audit: |
  Verify that all build steps are defined as code and stored in a version control system.
    • On the left sidebar, select Code > Repository.
    • Check if a .gitlab-ci.yml file is at the root of your repository
remediation: |
  Convert pipeline instructions into code-based syntax and upload them to the organization's version control platform.
    • On the left sidebar, select Code > Repository.
    • Above the file list, select the branch you want to commit to. If you're not sure, leave master or main. Then select the plus icon () and New file:
    • For the Filename, type .gitlab-ci.yml.
    • Select Commit changes.
default_value:
references:
  - https://docs.gitlab.com/ee/ci/pipelines/
cis_controls:
  - id: 0.0
    version: 8
    name: Explicitly Not Mapped
    description: >-
      Explicitly Not Mapped
    implementation_groups:
  - id: 0.0
    version: 7
    name: Explicitly Not Mapped
    description: >-
      Explicitly Not Mapped
    implementation_groups:
additional_info: >-
