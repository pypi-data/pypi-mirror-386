---
id: 1.5.7
name: dast_web_scanning
title: Ensure scanners are in place for web application runtime security weaknesses
profile: 2
category: source_code
sub_category: code_risks
description: >-
  Dynamic Application Security Testing (DAST) runs automated penetration tests to find 
  vulnerabilities in your web applications as they are running. DAST automates a hacker's 
  approach and simulates real-world attacks for critical threats such as cross-site scripting 
  (XSS), SQL injection (SQLi), and cross-site request forgery (CSRF) to uncover 
  vulnerabilities and misconfigurations that other security tools cannot detect.
rationale: >-
impact: >-
audit: |
  Ensure Browser-based DAST is set up to identify dynamic vulnerabilities in web 
  applications that cannot be detected by other tools earlier in the SDLC. Ensure that 
  every project that contains a web application is scanned by DAST. 
    • The DAST template must be configured for your project. 
    • Review the output from the previous scan on your default branch in Secure > 
  Vulnerability Report.
remediation: |
  1. Include the DAST.gitlab-ci.yml template in your .gitlab-ci.yml file.
  2. Add a dast stage to your GitLab CI/CD stages configuration.
  3. Define the URL to be scanned by DAST by setting the DAST_WEBSITE CI/CD variable.
  4. Add any additionally desired CI variables to customize the test.
  5. After configuration, the analyzer will run in your pipeline.
  6. View the results in the Vulnerability report and remediate the vulnerabilities.
default_value:
references:
  - https://docs.gitlab.com/ee/user/application_security/dast/browser/configuration/customize_settings.html
cis_controls:
  - id: 16.12
    version: 8
    name: Implement Code-Level Security Checks
    description: >-
      Apply static and dynamic analysis tools within the application life cycle to 
      verify that secure coding practices are being followed.
    implementation_groups:
      - IG3
  - id: 18.7
    version: 7
    name: Apply Static and Dynamic Code Analysis Tools
    description: >-
      Apply static and dynamic analysis tools to verify that secure coding 
      practices are being adhered to for internally developed software.
    implementation_groups:
      - IG2
      - IG3
additional_info: >-
