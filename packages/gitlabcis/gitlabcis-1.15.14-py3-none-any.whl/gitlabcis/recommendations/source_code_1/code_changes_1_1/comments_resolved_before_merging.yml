---
id: 1.1.11
name: comments_resolved_before_merging
title: Ensure all open comments are resolved before allowing code change merging
profile: 2
category: source_code
sub_category: code_changes
description: >-
  Organizations should enforce a "no open comments" policy before allowing code 
  change merging.
rationale: >-
  In an open code change proposal, reviewers can leave comments containing their 
  questions and suggestions. These comments can also include potential bugs and 
  security issues. Requiring all comments on a code change proposal to be resolved 
  before it can be merged ensures that every concern is properly addressed or 
  acknowledged before the new code changes are introduced to the code base.
impact: >-
  Code change proposals containing open comments would not be able to be merged into 
  the code base.
audit: |
  Ensure that All threads must be resolved before changes in a branch can be merged.
  To review these settings:
    1. On the left sidebar, select Search or go to and find your project.
    2. Select Settings > Merge requests.
    3. In the Merge checks section, check to see that the All threads must be resolved checkbox has been selected.
remediation: |
  You can prevent merge requests from being merged until all threads are resolved.
  When this setting is enabled, the Unresolved threads counter in a merge request is shown in orange when at least one thread remains unresolved.
    1. On the left sidebar, select Search or go to and find your project.
    2. Select Settings > Merge requests.
    3. In the Merge checks section, select the All threads must be resolved checkbox.
    4. Select Save changes.
default_value: By default, code changes with open comments on them are able to be merged into the code base
references:
  - https://docs.gitlab.com/ee/user/project/merge_requests/index.html#prevent-merge-unless-all-threads-are-resolved
cis_controls:
  - id: 16.1
    version: 8
    name: Establish and Maintain a Secure Application Development Process
    description: >-
      Establish and maintain a secure application development process. In the 
      process, address such items as: secure application design standards, secure coding 
      practices, developer training, vulnerability management, security of third-party code, 
      and application security testing procedures. Review and update documentation 
      annually, or when significant enterprise changes occur that could impact this 
      Safeguard.
    implementation_groups:
      - IG2
      - IG3
  - id: 18.1
    version: 7
    name: Establish Secure Coding Practices
    description: >-
      Establish secure coding practices appropriate to the programming language and 
      development environment being used.
    implementation_groups:
      - IG2
      - IG3
additional_info: >-
