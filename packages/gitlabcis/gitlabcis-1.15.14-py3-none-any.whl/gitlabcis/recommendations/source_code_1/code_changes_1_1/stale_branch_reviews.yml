---
id: 1.1.8
name: stale_branch_reviews
title: Ensure inactive branches are periodically reviewed and removed
profile: 1
category: source_code
sub_category: code_changes
description: >-
  Keep track of code branches that are inactive for a lengthy period of time and 
  periodically remove them.
rationale: >-
  Git branches that have been inactive (i.e., no new changes introduced) for a long period 
  of time are enlarging the surface of attack for malicious code injection, sensitive data 
  leaks, and CI pipeline exploitation. They potentially contain outdated dependencies 
  which may leave them highly vulnerable. They are more likely to be improperly 
  managed, and could possibly be accessed by a large number of members of the 
  organization.
impact: >-
  Removing inactive Git branches means that any code changes they contain would be 
  removed along with them, thus work done in the past might not be accessible after 
  auditing for inactivity.
audit: |
  For each project, verify that all existing Git branches are active or have yet to be checked for inactivity by performing the next steps:
    • Navigate to the main page of the project.
    • In the sidebar select Code > Branches
    • Use the navigation at the top of the page to view the Stale branches. The Stale view shows all branches that no one has committed to in the last three months, ordered by the branches with the oldest commits first.
    • If the list is empty, you are compliant. If the list is not empty, but there is a valid reason the branches listed are not deleted, you are compliant.

  You can perform the next steps to verify that merge request branches are prevented from becoming stale branches by default:
    • Navigate to the main page of the project.
    • In the left sidebar select Settings > Merge requests
    • Verify if 'Enable "Delete source branch" option by default' is selected. If it is not selected, you are more likely to become non-compliant.
remediation: |
  For each project, review existing Git branches and remove those which were identified during the audit as being non-compliant by performing the following:
    • Navigate to the main page of the project.
    • In the sidebar select Code > Branches
    • Next to each non-compliant branch select the vertical ellipsis
    • Select 'Delete branch'
    • Read the warning
    • Select 'Yes, delete branch'
  
  You can perform the next steps to reduce the likelihood of a stale branches remaining after a merge request:
    • Navigate to the main page of the project.
    • In the left sidebar select Settings > Merge requests
    • Select 'Enable "Delete source branch" option by default'.
default_value: By default, newly opened Git branches would never be removed, regardless of activity or inactivity.
references:
  - https://docs.gitlab.com/ee/user/project/repository/branches/
cis_controls:
  - id: 16.1
    version: 8
    name: Establish and Maintain a Secure Application Development Process
    description: >-
      Establish and maintain a secure application development process. In the 
      process, address such items as: secure application design standards, secure coding 
      practices, developer training, vulnerability management, security of third-party code, 
      and application security testing procedures. Review and update documentation 
      annually, or when significant enterprise changes occur that could impact this 
      Safeguard.
    implementation_groups:
      - IG2
      - IG3
  - id: 18.1
    version: 7
    name: Establish Secure Coding Practices
    description: >-
      Establish secure coding practices appropriate to the programming language and 
      development environment being used.
    implementation_groups:
      - IG2
      - IG3
additional_info: >-
