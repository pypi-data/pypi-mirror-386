[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ctx-bandits-mcmc"
version = "1.0.0"
description = "Feel-Good Thompson Sampling for Contextual Bandits: a Markov Chain Monte Carlo Showdown"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Emile Anand"},
    {name = "Sarah Liaw"}
]
keywords = ["thompson-sampling", "contextual-bandits", "mcmc", "reinforcement-learning", "bayesian"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "torch>=2.0.0",
    "numpy>=1.20.0",
    "matplotlib>=3.0.0",
    "scipy>=1.10.0",
    "pandas>=1.0.0",
    "scikit-learn>=1.0.0",
    "tqdm>=4.60.0",
    "wandb>=0.12.0",
    "pytest>=7.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "build>=0.10.0",
    "twine>=4.0.0",
]
neural = [
    "yfinance",
    "xlrd>=2.0.0",
]

[project.scripts]
ctx-bandits-posterior = "posterior_analysis:main"

[project.urls]
Homepage = "https://github.com/yourusername/ctx-bandits-mcmc-showdown"
Documentation = "https://github.com/yourusername/ctx-bandits-mcmc-showdown/README.md"
Repository = "https://github.com/yourusername/ctx-bandits-mcmc-showdown"
Paper = "https://arxiv.org/abs/2507.15290"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml"]

[tool.pytest.ini_options]
testpaths = ["tests", "."]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers --color=yes"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src", "."]
omit = ["*/tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
