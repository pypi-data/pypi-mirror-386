apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaizen
  namespace: kaizen
  labels:
    app: kaizen
    component: agent
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kaizen
      component: agent
  template:
    metadata:
      labels:
        app: kaizen
        component: agent
    spec:
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      # Service account
      serviceAccountName: kaizen-agent

      containers:
      - name: kaizen
        image: kaizen:latest
        imagePullPolicy: IfNotPresent

        # Environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: kaizen-config

        # Sensitive environment variables from Secret
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: kaizen-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: kaizen-secrets
              key: anthropic-api-key
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: kaizen-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: kaizen-secrets
              key: redis-url

        # Resource limits and requests
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "2000m"

        # Ports
        ports:
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP

        # Liveness probe
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3

        # Readiness probe
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: health
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        # Startup probe (for slow-starting applications)
        startupProbe:
          httpGet:
            path: /health/startup
            port: health
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12  # Allow up to 2 minutes for startup

        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL

        # Volume mounts for read-only filesystem
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /root/.cache

      # Volumes for writable directories
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}

      # Restart policy
      restartPolicy: Always

      # DNS policy
      dnsPolicy: ClusterFirst

      # Termination grace period
      terminationGracePeriodSeconds: 30
