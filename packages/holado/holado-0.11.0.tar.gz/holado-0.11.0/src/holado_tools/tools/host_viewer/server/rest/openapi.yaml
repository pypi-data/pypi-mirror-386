openapi: "3.0.0"
info:
  version: "1"
  title: "Docker Viewer API"
  description: |
    API to process some docker actions from anywhere on the network.
    In a microservice architecture, the docker viewer can be run in a docker with special privileges,
    whereas all other microservices have user privileges.
    For example, it is usefull to monitor containers statuses from any terminal on the network.
paths:
  /os/env:
    get:
      description: "Get environment variable values"
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "string"
      responses:
        200:
          description: "Environment variable values"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"

  /os/ls:
    get:
      description: "List directory filenames"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                path:
                  type: string
                extension:
                  type: string
                  nullable: true
      responses:
        200:
          description: "Directory filenames"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"

  /docker/container:
    get:
      description: "List containers and their status"
      parameters:
        - in: "query"
          name: "all"
          description: "if set to 'true', list all containers, not only running ones"
          schema:
            type: "boolean"
            default: false
      responses:
        200:
          description: "List of container names with their status"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
  /docker/container/{name}:
    get:
      description: "Display all information of a container"
      parameters:
        - in: "path"
          name: "name"
          description: "Container name"
          required: true
          schema:
            type: "string"
        - in: "query"
          name: "all"
          description: "if set to 'true', search container in all containers, not only running ones"
          schema:
            type: "boolean"
            default: false
      responses:
        200:
          description: "Container information"
          content:
            application/json:
              schema:
                type: "string"
components:
  securitySchemes: {}
  schemas:
    DockerControler:
      properties: {}

