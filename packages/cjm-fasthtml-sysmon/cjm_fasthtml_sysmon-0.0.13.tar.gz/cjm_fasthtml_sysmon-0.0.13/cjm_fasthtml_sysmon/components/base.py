"""Base components for rendering process count and status badges."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/components/base.ipynb.

# %% auto 0
__all__ = ['render_process_count', 'render_process_status']

# %% ../../nbs/components/base.ipynb 3
from fasthtml.common import *
from fasthtml.common import FT

# DaisyUI imports
from cjm_fasthtml_daisyui.components.data_display.badge import badge, badge_colors, badge_sizes

# Tailwind imports
from cjm_fasthtml_tailwind.utilities.spacing import m
from cjm_fasthtml_tailwind.utilities.flexbox_and_grid import flex_display, gap, flex
from cjm_fasthtml_tailwind.core.base import combine_classes

# HTML IDs
from ..core.html_ids import HtmlIds

# %% ../../nbs/components/base.ipynb 5
def render_process_count(
    total:int  # The total number of processes
)-> FT:  # A Span element containing the process count badge
    """Render the process count badge."""
    return Span(
        f"{total} processes",
        cls=combine_classes(badge, badge_colors.primary, badge_sizes.lg),
        id=HtmlIds.PROCESS_COUNT
    )

# %% ../../nbs/components/base.ipynb 8
def render_process_status(
    status_counts:dict  # Dictionary mapping process status names to their counts
)-> FT:  # A Div element containing status badges
    """Render the process status badges."""
    return Div(
        *[Span(
            f"{status}: {count}",
            cls=combine_classes(
                badge,
                badge_colors.info if status == 'running' else badge_colors.neutral,
                badge_sizes.sm,
                m.r(2)
            )
        ) for status, count in status_counts.items()],
        cls=combine_classes(flex_display, flex.wrap, gap(1), m.b(4)),
        id=HtmlIds.PROCESS_STATUS
    )
