# yaml-language-server: $schema=https://raw.githubusercontent.com/phil65/LLMling/refs/heads/main/schema/config-schema.json

global_settings:
  scripts:
    - "https://gist.githubusercontent.com/phil65/9b57d35ea63f354cf056e0c7d4a62885/raw/d69c01f1bc56a18a1a0e3292a32003f6c4ab6a6f/get_readme.py"
    - "https://gist.githubusercontent.com/phil65/bae47ad9c737c6f584707944bc793f49/raw/e075ca1aabb5c767ab0ed0a675fd2632febfee55/uithub.py"
  log_level: "DEBUG"
# Resource processors definitions
context_processors:
  uppercase:
    import_path: llmling.testing.processors.uppercase_text

# Global tools definitions
tools:
  analyze_ast:
    import_path: "llmling.testing.tools.analyze_ast"
    description: "Analyze Python code structure"

toolsets:
  random:
    type: openapi
    spec: "https://random-data-api.com/api-docs/v2/openapi.json"

  abc:
    type: entry_points
    module: llmling

# Resource definitions
resources:
  python_guidelines:
    type: path
    path: "https://raw.githubusercontent.com/phil65/LLMling/refs/heads/main/README.md"
    description: "Python coding standards and best practices"

  my_utils:
    type: source
    import_path: "llmling.core"
    description: "Utility module source code"

  system_info:
    type: callable
    import_path: "getpass.getuser"
    description: "Current system information"

  system_prompt:
    type: text
    content: |
      You are a test assistant. Your task is to generate exactly 100 words
      of test content. The content should be a simple story about a dog.

      Requirements:
      1. Exactly 100 words
      2. Simple narrative structure
      3. Consistent tone
      4. No complex vocabulary
      5. No dialogue

      Begin your response immediately with the story, without any preamble
      or meta-commentary.
    description: "Test prompt for consistent output"

  git_diff:
    type: cli
    command: "git diff HEAD~1"
    description: "Current git changes"
    shell: true
    processors:
      - name: uppercase

# Resource groups
resource_groups:
  code_review_basic:
    - system_prompt

prompts:
  code_review:
    name: test
    type: text
    description: "Review code changes"
    messages:
      - role: system
        content: |
          Tst prompt
    arguments:
      - name: changes
        type: text
        required: true
  get_readme:
    import_path: get_readme.get_readme
    type: function
    # name: "Fetch Readme for package"
    description: "Fetch README.md for PyPi package"
