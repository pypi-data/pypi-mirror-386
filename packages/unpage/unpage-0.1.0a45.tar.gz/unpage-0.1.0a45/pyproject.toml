[project]
name = "unpage"
version = "0.1.0-alpha.45"
description = "An agent framework for production engineering"
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["aioboto3==15.2.0", "aiobotocore==2.24.2", "aiofiles==24.1.0", "aiohappyeyeballs==2.6.1", "aiohttp==3.11.18", "aioitertools==0.12.0", "aiosignal==1.3.2", "aiosonic==0.15.1", "alembic==1.16.4", "annotated-types==0.7.0", "anyio==4.11.0", "apscheduler==3.11.0", "asyncache==0.3.1", "asyncer==0.0.8", "attrs==25.3.0", "authlib==1.6.0", "azure-common==1.1.28", "azure-core==1.35.1", "azure-identity==1.25.0", "azure-mgmt-compute==37.0.0", "azure-mgmt-containerservice==39.1.0", "azure-mgmt-core==1.6.0", "azure-mgmt-cosmosdb==9.8.0", "azure-mgmt-monitor==7.0.0", "azure-mgmt-network==29.0.0", "azure-mgmt-rdbms==10.1.0", "azure-mgmt-resource==24.0.0", "azure-mgmt-sql==3.0.1", "azure-mgmt-storage==23.1.0", "azure-mgmt-subscription==3.1.1", "backoff==2.2.1", "blinker==1.9.0", "boltons==25.0.0", "boto3==1.40.18", "botocore==1.40.18", "cachetools==5.5.2", "certifi==2025.4.26", "cffi==1.17.1 ; platform_python_implementation != 'PyPy'", "chardet==4.0.0", "charset-normalizer==3.4.2", "click==8.1.8", "cloudpickle==3.1.1", "colorama==0.4.6 ; sys_platform == 'win32'", "colorlog==6.9.0", "contourpy==1.3.2", "cryptography==45.0.3", "cycler==0.12.1", "cyclopts==3.24.0", "databricks-sdk==0.59.0", "datadog-api-client==2.34.0", "diskcache==5.6.3", "distro==1.9.0", "dnspython==2.8.0", "docker==7.1.0", "docstring-parser==0.17.0 ; python_full_version < '4'", "docutils==0.21.2", "dotenv==0.9.9", "dspy==3.0.3", "email-validator==2.2.0", "exceptiongroup==1.2.2", "expandvars==1.1.2", "fastapi==0.116.1", "fastapi-cli==0.0.8", "fastapi-cloud-cli==0.1.4", "fastmcp==2.12.4", "fastuuid==0.13.5", "filelock==3.18.0", "flask==3.1.1", "fonttools==4.57.0", "frozenlist==1.6.0", "fsspec==2025.3.0", "gepa==0.0.7", "gitdb==4.0.12", "gitpython==3.1.44", "google-api-core==2.25.2", "google-auth==2.40.3", "google-auth-httplib2==0.2.0", "google-cloud-appengine-logging==1.6.2", "google-cloud-audit-log==0.3.2", "google-cloud-core==2.4.3", "google-cloud-logging==3.12.1", "google-cloud-monitoring==2.27.2", "googleapis-common-protos==1.70.0", "graphene==3.4.3", "graphql-core==3.2.6", "graphql-relay==3.2.0", "graphviz==0.21", "greenlet==3.2.3 ; (python_full_version < '3.14' and platform_machine == 'AMD64') or (python_full_version < '3.14' and platform_machine == 'WIN32') or (python_full_version < '3.14' and platform_machine == 'aarch64') or (python_full_version < '3.14' and platform_machine == 'amd64') or (python_full_version < '3.14' and platform_machine == 'ppc64le') or (python_full_version < '3.14' and platform_machine == 'win32') or (python_full_version < '3.14' and platform_machine == 'x86_64')", "grpc-google-iam-v1==0.14.2", "grpcio==1.75.1", "grpcio-status==1.75.1", "gunicorn==23.0.0 ; sys_platform != 'win32'", "h11==0.16.0", "h2==4.1.0", "hf-xet==1.1.5 ; platform_machine == 'aarch64' or platform_machine == 'amd64' or platform_machine == 'arm64' or platform_machine == 'x86_64'", "hpack==4.0.0", "httpcore==1.0.9", "httplib2==0.31.0", "httptools==0.6.4", "httpx==0.28.1", "httpx-sse==0.4.0", "httpx-ws==0.7.2", "huggingface-hub==0.33.4", "human-readable==2.0.0", "hyperframe==6.0.1", "idna==3.10", "importlib-metadata==8.7.0", "iniconfig==2.1.0", "isodate==0.7.2", "itsdangerous==2.2.0", "jinja2==3.1.6", "jiter==0.10.0", "jmespath==1.0.1", "joblib==1.5.1", "json-repair==0.48.0", "jsonschema==4.24.0", "jsonschema-path==0.3.4", "jsonschema-specifications==2025.4.1", "kiwisolver==1.4.8", "kr8s==0.20.10", "lazy-object-proxy==1.11.0", "litellm==1.78.2", "loguru==0.7.3", "magicattr==0.1.6", "mako==1.3.10", "markdown-it-py==3.0.0", "markupsafe==3.0.2", "matplotlib==3.10.5", "mcp==1.16.0", "mdurl==0.1.2", "mlflow==3.4.0", "mlflow-skinny==3.4.0", "mlflow-tracing==3.4.0", "more-itertools==10.7.0", "msal==1.34.0", "msal-extensions==1.3.1", "msrest==0.7.1", "multidict==6.4.3", "networkx==3.5", "numpy==2.2.6", "oauthlib==3.3.1", "onecache==0.3.1", "openai==1.99.8", "openapi-core==0.19.5", "openapi-pydantic==0.5.1", "openapi-schema-validator==0.6.3", "openapi-spec-validator==0.7.2", "opentelemetry-api==1.35.0", "opentelemetry-proto==1.37.0", "opentelemetry-sdk==1.35.0", "opentelemetry-semantic-conventions==0.56b0", "optuna==4.4.0", "orjson==3.11.3", "packaging==25.0", "pagerduty==5.1.0", "pandas==2.3.1", "parse==1.20.2", "pathable==0.4.4", "pillow==11.2.1", "pluggy==1.6.0", "prompt-toolkit==3.0.51", "propcache==0.3.1", "proto-plus==1.26.1", "protobuf==6.31.1", "pyarrow==20.0.0", "pyasn1==0.6.1", "pyasn1-modules==0.4.2", "pycparser==2.22 ; platform_python_implementation != 'PyPy'", "pydantic==2.11.10", "pydantic-core==2.33.2", "pydantic-settings==2.11.0", "pydantic-yaml==1.6.0", "pydot==4.0.1", "pygments==2.19.1", "pyjwt==2.10.1", "pyngrok==7.4.0", "pyparsing==3.2.3", "pyperclip==1.9.0", "pytest==8.4.2", "python-box==7.3.2", "python-dateutil==2.9.0.post0", "python-dotenv==1.1.0", "python-jsonpath==1.3.1", "python-multipart==0.0.20", "pytz==2025.2", "pywin32==311 ; sys_platform == 'win32'", "pyyaml==6.0.3", "questionary==2.1.1", "referencing==0.36.2", "regex==2024.11.6", "requests==2.32.5", "requests-oauthlib==2.0.0", "rfc3339-validator==0.1.4", "rich==14.0.0", "rich-color-ext==0.1.3", "rich-gradient==0.3.4", "rich-rst==1.3.1", "rich-toolkit==0.14.8", "rignore==0.6.4", "rpds-py==0.26.0", "rsa==4.9.1", "ruamel-yaml==0.18.12", "ruamel-yaml-clib==0.2.12 ; python_full_version < '3.14' and platform_python_implementation == 'CPython'", "s3transfer==0.13.0", "scapy==2.6.1", "scikit-learn==1.6.1", "scipy==1.15.2", "sentry-sdk==2.41.0", "shellingham==1.5.4", "six==1.17.0", "smmap==5.0.2", "sniffio==1.3.1", "sqlalchemy==2.0.41", "sqlparse==0.5.3", "sse-starlette==2.3.4", "starlette==0.46.2", "tenacity==9.1.2", "threadpoolctl==3.6.0", "tiktoken==0.9.0", "tokenizers==0.21.2", "tqdm==4.67.1", "typer==0.16.0", "typing-extensions==4.13.2", "typing-inspection==0.4.0", "tzdata==2025.2", "tzlocal==5.3.1", "urllib3==2.4.0", "uvicorn==0.35.0", "uvloop==0.21.0 ; platform_python_implementation != 'PyPy' and sys_platform != 'cygwin' and sys_platform != 'win32'", "waitress==3.0.2 ; sys_platform == 'win32'", "watchfiles==1.1.0", "wcwidth==0.2.13", "websockets==15.0.1", "werkzeug==3.1.1", "win32-setctime==1.2.0 ; sys_platform == 'win32'", "wrapt==1.17.2", "wsproto==1.2.0", "xxhash==3.5.0", "yarl==1.20.0", "zipp==3.23.0"]

[project.scripts]
unpage = "unpage.cli:main"


[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.402",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-freezer>=0.4.9",
    "ruff>=0.12.7",
    "types-aioboto3[aioboto3]>=14.1.0",
    "types-boltons>=25.0.0.20250516",
    "types-networkx>=3.4.2.20250515",
]

[build-system]
requires = ["hatchling", "tomlkit"]
build-backend = "pinned_hatchling_backend"
backend-path = ["."]

[tool.hatch.build.targets.sdist]
exclude = ["CLAUDE.md", "tests/", "docs/"]

[tool.hatch.build.targets.wheel]
exclude = ["CLAUDE.md", "tests/", "docs/"]

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
typeCheckingMode = "standard"

# See:
# - https://docs.astral.sh/ruff/configuration/
# - https://docs.astral.sh/ruff/settings/
# - https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 100

[tool.ruff.lint]
exclude = ["tests/**/test_*.py", "tests/**/conftest.py"]
ignore = [
    "S603" # false positive: https://github.com/astral-sh/ruff/issues/4045
]
select = [
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "E4",    # pycodestyle-4xx
    "E7",    # pycodestyle-7xx
    "E9",    # pycodestyle-9xx
    "ERA",   # eradicate
    "F",     # pyflakes
    "FURB",  # refurb
    "I",     # isort
    "N",     # pep8-naming
    "NPY",   # numpy
    "PERF",  # perflint
    "PTH",   # flake8-use-pathlib
    "RUF",   # ruff
    "S",     # flake8-bandit
    "SIM",   # flake8-simplify
    "TC",    # flake8-type-checking
    "UP",    # pyupgrade
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    # Allow Pydantic's `@validator` decorator to be recognized as a class method.
    "pydantic.validator",
    # Allow the @classproperty decorator to be recognized as a class method.
    "classproperty",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true # allow typing *args and *kwargs with Any

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "pip install uv && uv lock && git add uv.lock && uv build"
commit_parser = "conventional"
allow_zero_version = true
major_on_zero = false

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "alpha"
prerelease = true

[tool.semantic_release.commit_parser_options]
# https://python-semantic-release.readthedocs.io/en/latest/concepts/commit_parsing.html#conventional-commits-parser
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''', # codespell:ignore ommit
]

[tool.codespell]
check-filenames = true
ignore-words-list = "aks"
