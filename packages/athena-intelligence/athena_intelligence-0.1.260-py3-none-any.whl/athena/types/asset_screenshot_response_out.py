# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class AssetScreenshotResponseOut(UniversalBaseModel):
    """
    Response model with screenshot data.
    """

    base_64_image: typing_extensions.Annotated[str, FieldMetadata(alias="base64_image")] = pydantic.Field()
    """
    Base64-encoded image data
    """

    message: str = pydantic.Field()
    """
    Status message
    """

    page_number: int = pydantic.Field()
    """
    The page number that was captured
    """

    total_pages: int = pydantic.Field()
    """
    Total number of pages in the document
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
