# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .border_style import BorderStyle
from .color import Color


class BorderModel(UniversalBaseModel):
    color: typing.Optional[Color] = pydantic.Field(default=None)
    """
    Border color. Defaults to theme color 1 (default black). Always set the color if border width and border style is present
    """

    style: BorderStyle
    width: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
