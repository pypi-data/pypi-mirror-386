[project]
name = "rag-memory"
version = "0.8.0"
description = "PostgreSQL pgvector-based RAG memory system with MCP server"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Tim Kitchens"},
]
keywords = ["rag", "mcp", "pgvector", "postgresql", "vector-database", "embeddings", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
]
dependencies = [
    # Core Database
    "psycopg[binary]>=3.2.0",
    "pgvector>=0.3.0",
    "numpy>=2.0.0",
    # LangChain (October 2025 stable versions)
    "langchain>=0.3.0,<0.4.0",
    "langchain-postgres>=0.0.12",
    "langchain-openai>=0.2.0",
    "langchain-community>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-text-splitters>=0.3.0",
    # OpenAI
    "openai>=1.50.0",
    # CLI
    "click>=8.1.0",
    "rich>=13.9.0",
    "python-dotenv>=1.0.0",
    # Configuration (cross-platform, OS-standard locations)
    "platformdirs>=4.0.0",
    "pyyaml>=6.0.0",
    # Web Crawling
    "crawl4ai>=0.4.0",
    "playwright>=1.49.0",
    # MCP Server
    "mcp[cli]>=1.0.0",
    "alembic>=1.17.0",
    # Knowledge Graph
    "graphiti-core>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=6.0.0",
    "anyio>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "build>=1.0.0",
    "twine>=6.0.0",
]
jupyter = [
    "jupyter>=1.1.0",
    "ipykernel>=6.29.0",
]

[project.scripts]
# CLI tool for document management
rag = "src.cli:main"

# MCP Server convenience wrappers
rag-mcp = "src.mcp.server:main"              # General (accepts CLI args)
rag-mcp-stdio = "src.mcp.server:main_stdio"  # For Claude Desktop/Cursor
rag-mcp-sse = "src.mcp.server:main_sse"      # For MCP Inspector (port 3001)
rag-mcp-http = "src.mcp.server:main_http"    # For HTTP integrations (port 3001)

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=6.0.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "anyio>=4.0.0",
    "build>=1.0.0",
    "twine>=6.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
