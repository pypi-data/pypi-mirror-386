version: '3.9'

# ================================================================================
# Environment Configuration
# ================================================================================
# Load environment variables from .env.local
# Usage:
#   docker-compose -f docker-compose.local.yml up -d
#
# Or set COMPOSE_FILE environment variable to auto-load:
#   export COMPOSE_FILE=docker-compose.local.yml
#   docker-compose up -d
# ================================================================================

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag-memory-postgres
    environment:
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpassword
      POSTGRES_DB: rag_memory
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${PROD_POSTGRES_PORT:-54350}:5432"
    labels:
      - docker-volume-backup.stop-during-backup=true

  neo4j:
    image: neo4j:5-community
    container_name: rag-memory-neo4j
    environment:
      NEO4J_AUTH: neo4j/graphiti-password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_server_memory_heap_initial__size: 256m
      NEO4J_server_memory_heap_max__size: 512m
    volumes:
      - neo4j_data:/var/lib/neo4j/data
      - neo4j_logs:/var/lib/neo4j/logs
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p graphiti-password 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${PROD_NEO4J_BOLT_PORT:-7700}:7687"  # Bolt - Database protocol
      - "${PROD_NEO4J_HTTP_PORT:-7500}:7474"  # HTTP - Neo4j Browser UI
    labels:
      - docker-volume-backup.stop-during-backup=true

  rag-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag-memory-mcp
    environment:
      DATABASE_URL: postgresql://raguser:ragpassword@postgres:5432/rag_memory
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: graphiti-password
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      # Mount config directory so MCP server can read config.yaml
      # Config includes server settings and directory mount specifications
      - ~/.config/rag-memory:/app/.config/rag-memory:ro
    ports:
      - "${PROD_MCP_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    restart: on-failure

  # ============================================================================
  # Automated Backups - Creates daily TAR archives of database volumes
  # ============================================================================
  backup:
    image: offen/docker-volume-backup:latest
    container_name: rag-memory-backup
    restart: always
    env_file: ./.env.local
    volumes:
      - postgres_data:/backup/postgres:ro
      - neo4j_data:/backup/neo4j:ro
      - neo4j_logs:/backup/neo4j_logs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backups:/archive
    depends_on:
      - postgres
      - neo4j
    environment:
      BACKUP_SOURCES: /backup
      BACKUP_FILENAME_EXPAND: "true"
      # Backup schedule: 2:05 AM daily by default (override in .env.local)
      BACKUP_CRON_SCHEDULE: "${BACKUP_CRON_SCHEDULE:-5 2 * * *}"
    labels:
      description: "RAG Memory - Automated Daily Backups"
      backup_location: "./backups"
      backup_schedule: "Daily (configurable via BACKUP_CRON_SCHEDULE in .env.local)"

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
