# ================================================================================
# TEST ENVIRONMENT - docker-compose.test.yml
# ================================================================================
# Ephemeral test servers for automated pytest tests.
# Data does NOT persist across container restarts.
# Complete cleanup between test runs is guaranteed.
#
# Usage:
#   docker-compose -f docker-compose.test.yml up -d     (start test servers)
#   uv run pytest tests/                                  (run all tests)
#   docker-compose -f docker-compose.test.yml down       (cleanup test data)
#
# Ports (completely separate from all other environments):
#   - Postgres:     localhost:54323 (DATABASE_URL: postgresql://raguser:ragpassword@localhost:54323/rag_memory_test)
#   - Neo4j UI:     http://localhost:7476 (username: neo4j, password: test-password)
#   - Neo4j Bolt:   localhost:7689 (NEO4J_URI: bolt://localhost:7689)
#
# Environment: Automatically loads .env.test
#
# ⚠️  WARNING: Data in test servers is INTENTIONALLY NOT PERSISTENT
#     Use 'docker-compose -f docker-compose.test.yml down -v' to guarantee cleanup
# ================================================================================

services:
  # ============================================================================
  # PostgreSQL with pgvector - Test Instance
  # ============================================================================
  postgres-test:
    image: pgvector/pgvector:pg17
    container_name: rag-memory-postgres-test
    environment:
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpassword
      POSTGRES_DB: rag_memory_test
      # Ephemeral mode - temporary tables and no persistence
      POSTGRES_INITDB_ARGS: "-c shared_buffers=128MB -c work_mem=8MB"
    ports:
      - "${TEST_POSTGRES_PORT:-54323}:5432"
    volumes:
      - pgvector_data_test:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d rag_memory_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    labels:
      description: "RAG Memory - Test PostgreSQL Instance (Ephemeral)"
      environment: "test"
      cleanup: "docker-compose -f docker-compose.test.yml down -v"
    networks:
      - rag-memory-test

  # ============================================================================
  # Neo4j - Test Instance
  # ============================================================================
  neo4j-test:
    image: neo4j:5.26-community
    container_name: rag-memory-neo4j-test
    ports:
      - "${TEST_NEO4J_HTTP_PORT:-7476}:7474"  # HTTP - Neo4j Browser UI
      - "${TEST_NEO4J_BOLT_PORT:-7689}:7687"  # Bolt - Database protocol
    environment:
      # Authentication
      NEO4J_AUTH: neo4j/test-password

      # Performance tuning (lighter for tests)
      NEO4J_server_memory_heap_initial__size: 256m
      NEO4J_server_memory_heap_max__size: 512m
      NEO4J_server_memory_pagecache_size: 256m

      # APOC plugin for graph algorithms
      NEO4J_PLUGINS: '["apoc"]'

      # Allow unlimited query execution time for test queries
      NEO4J_dbms_transaction_timeout: 0
    volumes:
      # Ephemeral volumes - data NOT persisted
      - neo4j_data_test:/data
      - neo4j_logs_test:/logs
      - neo4j_import_test:/var/lib/neo4j/import
      - neo4j_plugins_test:/plugins
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "test-password", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    labels:
      description: "RAG Memory - Test Neo4j Instance (Ephemeral)"
      environment: "test"
      cleanup: "docker-compose -f docker-compose.test.yml down -v"
    networks:
      - rag-memory-test

volumes:
  pgvector_data_test:
    driver: local
  neo4j_data_test:
    driver: local
  neo4j_logs_test:
    driver: local
  neo4j_import_test:
    driver: local
  neo4j_plugins_test:
    driver: local

networks:
  rag-memory-test:
    driver: bridge

# ================================================================================
# CLEANUP INSTRUCTIONS
# ================================================================================
# To guarantee complete cleanup (including volumes):
#   docker-compose -f docker-compose.test.yml down -v
#
# To just stop containers (keep volumes for inspection):
#   docker-compose -f docker-compose.test.yml down
#
# To view test data before cleanup:
#   - Postgres: psql postgresql://raguser:ragpassword@localhost:54321/rag_memory_test
#   - Neo4j:    http://localhost:7475 (username: neo4j, password: test-password)
# ================================================================================
