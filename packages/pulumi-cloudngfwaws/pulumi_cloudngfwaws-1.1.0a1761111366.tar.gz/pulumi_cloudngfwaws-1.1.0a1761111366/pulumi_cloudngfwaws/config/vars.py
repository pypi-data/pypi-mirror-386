# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

import types

__config__ = pulumi.Config('cloudngfwaws')


class _ExportableConfig(types.ModuleType):
    @_builtins.property
    def access_key(self) -> Optional[str]:
        """
        (Used for the initial `sts assume role`) AWS access key. Environment variable: `CLOUDNGFWAWS_ACCESS_KEY`. JSON conf file variable: `access-key`.
        """
        return __config__.get('accessKey')

    @_builtins.property
    def account_admin_arn(self) -> Optional[str]:
        """
        The ARN allowing account admin permissions. Environment variable: `CLOUDNGFWAWS_ACCT_ADMIN_ARN`. JSON conf file variable: `account-admin-arn`.
        """
        return __config__.get('accountAdminArn')

    @_builtins.property
    def arn(self) -> Optional[str]:
        """
        The ARN allowing firewall, rulestack, and global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS account is onboarded by AWS Firewall Manager. Use 'lfa_arn' and 'lra_arn' if you want to enable only firewall and rulestack admin permissions. Environment variable: `CLOUDNGFWAWS_ARN`. JSON conf file variable: `arn`.
        """
        return __config__.get('arn')

    @_builtins.property
    def gra_arn(self) -> Optional[str]:
        """
        The ARN allowing global rulestack admin permissions. Global rulestack admin permissions can be enabled only if the AWS account is onboarded by AWS Firewall Manager. 'gra_arn' is preferentially used over the `arn` param if both are specified. Environment variable: `CLOUDNGFWAWS_GRA_ARN`. JSON conf file variable: `gra-arn`.
        """
        return __config__.get('graArn')

    @_builtins.property
    def headers(self) -> Optional[str]:
        """
        Additional HTTP headers to send with API calls. Environment variable: `CLOUDNGFWAWS_HEADERS`. JSON conf file variable: `headers`.
        """
        return __config__.get('headers')

    @_builtins.property
    def host(self) -> Optional[str]:
        """
        The hostname of the API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable: `CLOUDNGFWAWS_HOST`. JSON conf file variable: `host`.
        """
        return __config__.get('host')

    @_builtins.property
    def json_config_file(self) -> Optional[str]:
        """
        Retrieve provider configuration from this JSON file.
        """
        return __config__.get('jsonConfigFile')

    @_builtins.property
    def lfa_arn(self) -> Optional[str]:
        """
        The ARN allowing firewall admin permissions. This is preferentially used over the `arn` param if both are specified. Environment variable: `CLOUDNGFWAWS_LFA_ARN`. JSON conf file variable: `lfa-arn`.
        """
        return __config__.get('lfaArn')

    @_builtins.property
    def loggings(self) -> Optional[str]:
        """
        The logging options for the provider. Environment variable: `CLOUDNGFWAWS_LOGGING`. JSON conf file variable: `logging`.
        """
        return __config__.get('loggings')

    @_builtins.property
    def lra_arn(self) -> Optional[str]:
        """
        The ARN allowing rulestack admin permissions. This is preferentially used over the `arn` param if both are specified. Environment variable: `CLOUDNGFWAWS_LRA_ARN`. JSON conf file variable: `lra-arn`.
        """
        return __config__.get('lraArn')

    @_builtins.property
    def mp_region(self) -> Optional[str]:
        """
        AWS management plane region. Environment variable: `CLOUDNGFWAWS_MP_REGION`. JSON conf file variable: `mp_region`.
        """
        return __config__.get('mpRegion')

    @_builtins.property
    def mp_region_host(self) -> Optional[str]:
        """
        AWS management plane MP region host Environment variable: `CLOUDNGFWAWS_MP_REGION_HOST`. JSON conf file variable: `mp_region_host`.
        """
        return __config__.get('mpRegionHost')

    @_builtins.property
    def profile(self) -> Optional[str]:
        """
        (Used for the initial `sts assume role`) AWS PROFILE. Environment variable: `CLOUDNGFWAWS_PROFILE`. JSON conf file variable: `profile`.
        """
        return __config__.get('profile')

    @_builtins.property
    def protocol(self) -> Optional[str]:
        """
        The protocol (defaults to `https`). Environment variable: `CLOUDNGFWAWS_PROTOCOL`. JSON conf file variable: `protocol`. Valid values are `https` or `http`.
        """
        return __config__.get('protocol')

    @_builtins.property
    def region(self) -> Optional[str]:
        """
        AWS region. Environment variable: `CLOUDNGFWAWS_REGION`. JSON conf file variable: `region`.
        """
        return __config__.get('region')

    @_builtins.property
    def secret_key(self) -> Optional[str]:
        """
        (Used for the initial `sts assume role`) AWS secret key. Environment variable: `CLOUDNGFWAWS_SECRET_KEY`. JSON conf file variable: `secret-key`.
        """
        return __config__.get('secretKey')

    @_builtins.property
    def skip_verify_certificate(self) -> Optional[bool]:
        """
        Skip verifying the SSL certificate. Environment variable: `CLOUDNGFWAWS_SKIP_VERIFY_CERTIFICATE`. JSON conf file variable: `skip-verify-certificate`.
        """
        return __config__.get_bool('skipVerifyCertificate')

    @_builtins.property
    def sync_mode(self) -> Optional[bool]:
        """
        Enable synchronous mode while creating resources Environment variable: `CLOUDNGFWAWS_SYNC_MODE`. JSON conf file variable: `sync_mode`.
        """
        return __config__.get_bool('syncMode')

    @_builtins.property
    def timeout(self) -> Optional[int]:
        """
        The timeout for any single API call (default: `30`). Environment variable: `CLOUDNGFWAWS_TIMEOUT`. JSON conf file variable: `timeout`.
        """
        return __config__.get_int('timeout')

    @_builtins.property
    def v2_host(self) -> Optional[str]:
        """
        The hostname of the V2 API (default: `api.us-east-1.aws.cloudngfw.paloaltonetworks.com`). Environment variable: `CLOUDNGFWAWS_V2_HOST`. JSON conf file variable: `v2_host`.
        """
        return __config__.get('v2Host')

