# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resources/form_v2/carga_continua.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CargaContinua(object):
    def setupUi(self, CargaContinua):
        CargaContinua.setObjectName("CargaContinua")
        CargaContinua.resize(550, 500)
        self.verticalLayout = QtWidgets.QVBoxLayout(CargaContinua)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBoxAgendamento = QtWidgets.QGroupBox(CargaContinua)
        self.groupBoxAgendamento.setObjectName("groupBoxAgendamento")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBoxAgendamento)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.radioDiario = QtWidgets.QRadioButton(self.groupBoxAgendamento)
        self.radioDiario.setChecked(True)
        self.radioDiario.setObjectName("radioDiario")
        self.horizontalLayout.addWidget(self.radioDiario)
        self.radioSemanal = QtWidgets.QRadioButton(self.groupBoxAgendamento)
        self.radioSemanal.setObjectName("radioSemanal")
        self.horizontalLayout.addWidget(self.radioSemanal)
        self.radioMensal = QtWidgets.QRadioButton(self.groupBoxAgendamento)
        self.radioMensal.setObjectName("radioMensal")
        self.horizontalLayout.addWidget(self.radioMensal)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.labelHorario = QtWidgets.QLabel(self.groupBoxAgendamento)
        self.labelHorario.setObjectName("labelHorario")
        self.verticalLayout_2.addWidget(self.labelHorario)
        self.timeEdit = QtWidgets.QTimeEdit(self.groupBoxAgendamento)
        self.timeEdit.setObjectName("timeEdit")
        self.verticalLayout_2.addWidget(self.timeEdit)
        self.verticalLayout.addWidget(self.groupBoxAgendamento)
        self.groupBoxTabelas = QtWidgets.QGroupBox(CargaContinua)
        self.groupBoxTabelas.setObjectName("groupBoxTabelas")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBoxTabelas)
        self.gridLayout.setObjectName("gridLayout")
        self.checkClientes = QtWidgets.QCheckBox(self.groupBoxTabelas)
        self.checkClientes.setChecked(True)
        self.checkClientes.setObjectName("checkClientes")
        self.gridLayout.addWidget(self.checkClientes, 0, 0, 1, 1)
        self.verticalLayout.addWidget(self.groupBoxTabelas)
        self.groupBoxOpcoes = QtWidgets.QGroupBox(CargaContinua)
        self.groupBoxOpcoes.setObjectName("groupBoxOpcoes")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBoxOpcoes)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.checkModificados = QtWidgets.QCheckBox(self.groupBoxOpcoes)
        self.checkModificados.setChecked(True)
        self.checkModificados.setObjectName("checkModificados")
        self.verticalLayout_3.addWidget(self.checkModificados)
        self.checkNotificar = QtWidgets.QCheckBox(self.groupBoxOpcoes)
        self.checkNotificar.setObjectName("checkNotificar")
        self.verticalLayout_3.addWidget(self.checkNotificar)
        self.labelEmail = QtWidgets.QLabel(self.groupBoxOpcoes)
        self.labelEmail.setObjectName("labelEmail")
        self.verticalLayout_3.addWidget(self.labelEmail)
        self.lineEditEmail = QtWidgets.QLineEdit(self.groupBoxOpcoes)
        self.lineEditEmail.setObjectName("lineEditEmail")
        self.verticalLayout_3.addWidget(self.lineEditEmail)
        self.verticalLayout.addWidget(self.groupBoxOpcoes)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.btnCancelar = QtWidgets.QPushButton(CargaContinua)
        self.btnCancelar.setObjectName("btnCancelar")
        self.horizontalLayout_2.addWidget(self.btnCancelar)
        self.btnSalvar = QtWidgets.QPushButton(CargaContinua)
        self.btnSalvar.setObjectName("btnSalvar")
        self.horizontalLayout_2.addWidget(self.btnSalvar)
        self.verticalLayout.addLayout(self.horizontalLayout_2)

        self.retranslateUi(CargaContinua)
        QtCore.QMetaObject.connectSlotsByName(CargaContinua)

    def retranslateUi(self, CargaContinua):
        _translate = QtCore.QCoreApplication.translate
        CargaContinua.setWindowTitle(_translate("CargaContinua", "Configuração de Carga Contínua"))
        self.groupBoxAgendamento.setTitle(_translate("CargaContinua", "Agendamento"))
        self.radioDiario.setText(_translate("CargaContinua", "Diariamente"))
        self.radioSemanal.setText(_translate("CargaContinua", "Semanalmente"))
        self.radioMensal.setText(_translate("CargaContinua", "Mensalmente"))
        self.labelHorario.setText(_translate("CargaContinua", "Horário de Execução:"))
        self.groupBoxTabelas.setTitle(_translate("CargaContinua", "Tabelas para Sincronização Automática"))
        self.checkClientes.setText(_translate("CargaContinua", "Clientes"))
        self.groupBoxOpcoes.setTitle(_translate("CargaContinua", "Opções Avançadas"))
        self.checkModificados.setText(_translate("CargaContinua", "Enviar apenas registros modificados desde a última execução"))
        self.checkNotificar.setText(_translate("CargaContinua", "Notificar por e-mail em caso de falha"))
        self.labelEmail.setText(_translate("CargaContinua", "E-mail para notificação:"))
        self.lineEditEmail.setPlaceholderText(_translate("CargaContinua", "email@empresa.com"))
        self.btnCancelar.setText(_translate("CargaContinua", "Cancelar"))
        self.btnSalvar.setText(_translate("CargaContinua", "Salvar Configurações"))

def show_form():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CargaContinua = QtWidgets.QDialog()
    ui = Ui_CargaContinua()
    ui.setupUi(CargaContinua)
    CargaContinua.show()
    sys.exit(app.exec_())


if __name__ == "__main__":
    show_form()

