# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class TimerInterface(UniversalBaseModel):
    """
    A timer interface instance
    """

    id: str = pydantic.Field()
    """
    The unique ID of the timer interface
    """

    interval_seconds: typing.Optional[float] = None
    cron: typing.Optional[str] = None
    timezone: str
    schedule_changed_at: int
    created_at: int = pydantic.Field()
    """
    The timestamp when the timer interface was created (epoch milliseconds)
    """

    updated_at: int = pydantic.Field()
    """
    The timestamp when the timer interface was last updated (epoch milliseconds)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
