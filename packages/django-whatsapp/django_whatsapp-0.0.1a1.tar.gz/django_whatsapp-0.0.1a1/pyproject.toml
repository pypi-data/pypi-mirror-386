[project]
name = "django-whatsapp"
description = "Django application to handle WhatsApp Webhook incoming requests"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
  { name = "Christian Hartung", email = "christian.hartung@olist.com" },
]
keywords = ["django"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 5.2",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Internet :: WWW/HTTP",
  "Typing :: Typed",
]
dependencies = [
  "asgiref>=3.3",
  "django>=5.2",
  "typing-extensions; python_version<'3.12'"
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/olist/django-whatsapp#readme"
Issues = "https://github.com/olist/django-whatsapp/issues"
Source = "https://github.com/olist/django-whatsapp"

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
source_pkgs = ["django_whatsapp", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
django_whatsapp = [
  "src/django_whatsapp",
  "*/django-whatsapp/src/django_whatsapp"
]
tests = ["tests", "*/django-whatsapp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.deptry]
known_first_party = ["django_whatsapp"]

[tool.django-stubs]
django_settings_module = "testproj.settings"

[tool.hatch.envs.default]
dependencies = [
  "django-stubs>=5.2",
  "mypy",
  "pre-commit",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-django",
  "pytest",
]

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "pytest-asyncio",
  "pytest-django",
]

[[tool.hatch.envs.hatch-test.matrix]]
django = ["5.2"]
python = ["3.10", "3.11", "3.12", "3.13", "3.14"]

[tool.hatch.envs.hatch-test.overrides]
matrix.django.dependencies = [
  { value = "django>=5.2,<6.0", if = ["5.2"] },
]

[tool.hatch.envs.hatch-static-analysis]
config-path = "none"
dependencies = ["ruff==0.14.*"]

[tool.hatch.build.targets.wheel]
packages = ["src/django_whatsapp"]

[tool.hatch.build.targets.sdist]
exclude = ["/.devcontainer", "/.github"]

[tool.hatch.version]
source = "vcs"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
strict = true
enable_error_code = ["deprecated"]

[[tool.mypy.overrides]]
module = "django_whatsapp.migrations.*"
ignore_errors = true

[tool.pytest.ini_options]
pythonpath = [".", "src"]
DJANGO_SETTINGS_MODULE = "testproj.settings"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "ERA",
  "ANN",
  "ASYNC",
  "S",
  "BLE",
  "FBT",
  "B",
  "A",
  "COM818",
  "C4",
  "DTZ",
  "T10",
  "DJ",
  "EM",
  "EXE",
  "INT",
  "ISC",
  "ICN",
  "LOG",
  "G",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "RSE",
  "RET",
  "SLF",
  "SIM",
  "SLOT",
  "TID",
  "TD",
  "TC",
  "PTH",
  "FLY",
  "I",
  "C90",
  "N",
  "PERF",
  "E",
  "W",
  "D",
  "F",
  "PGH",
  "PL",
  "UP",
  "FURB",
  "RUF",
  "TRY",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.per-file-ignores]
"manage.py" = ["PLC", "ANN"]
"*/models.py" = ["D106"]
"*/apps.py" = ["D100"]
"*/*urls.py" = ["D100"]
"*/migrations/*.py" = ["D", "RUF012"]
"tests/*.py" = ["D", "S101"]
"testproj/*.py" = ["D"]

[tool.ruff.lint.flake8-self]
ignore-names = ["_meta"]
