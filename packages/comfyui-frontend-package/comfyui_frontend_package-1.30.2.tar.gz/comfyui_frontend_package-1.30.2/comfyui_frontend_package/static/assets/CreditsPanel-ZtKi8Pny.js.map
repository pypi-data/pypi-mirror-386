{"version":3,"file":"CreditsPanel-ZtKi8Pny.js","sources":["../../src/services/customerEventsService.ts","../../src/components/dialog/content/setting/UsageLogsTable.vue","../../src/components/dialog/content/setting/CreditsPanel.vue"],"sourcesContent":["import type { AxiosError, AxiosResponse } from 'axios'\nimport axios from 'axios'\nimport { ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport { COMFY_API_BASE_URL } from '@/config/comfyApi'\nimport { useFirebaseAuthStore } from '@/stores/firebaseAuthStore'\nimport type { components, operations } from '@/types/comfyRegistryTypes'\nimport { isAbortError } from '@/utils/typeGuardUtil'\n\nexport enum EventType {\n  CREDIT_ADDED = 'credit_added',\n  ACCOUNT_CREATED = 'account_created',\n  API_USAGE_STARTED = 'api_usage_started',\n  API_USAGE_COMPLETED = 'api_usage_completed'\n}\n\ntype CustomerEventsResponse =\n  operations['GetCustomerEvents']['responses']['200']['content']['application/json']\n\ntype CustomerEventsResponseQuery =\n  operations['GetCustomerEvents']['parameters']['query']\n\nexport type AuditLog = components['schemas']['AuditLog']\n\nconst customerApiClient = axios.create({\n  baseURL: COMFY_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport const useCustomerEventsService = () => {\n  const isLoading = ref(false)\n  const error = ref<string | null>(null)\n  const { d } = useI18n()\n\n  const handleRequestError = (\n    err: unknown,\n    context: string,\n    routeSpecificErrors?: Record<number, string>\n  ) => {\n    // Don't treat cancellation as an error\n    if (isAbortError(err)) return\n\n    let message: string\n    if (!axios.isAxiosError(err)) {\n      message = `${context} failed: ${err instanceof Error ? err.message : String(err)}`\n    } else {\n      const axiosError = err as AxiosError<{ message: string }>\n      const status = axiosError.response?.status\n      if (status && routeSpecificErrors?.[status]) {\n        message = routeSpecificErrors[status]\n      } else {\n        message =\n          axiosError.response?.data?.message ??\n          `${context} failed with status ${status}`\n      }\n    }\n\n    error.value = message\n  }\n\n  const executeRequest = async <T>(\n    requestCall: () => Promise<AxiosResponse<T>>,\n    options: {\n      errorContext: string\n      routeSpecificErrors?: Record<number, string>\n    }\n  ): Promise<T | null> => {\n    const { errorContext, routeSpecificErrors } = options\n\n    isLoading.value = true\n    error.value = null\n\n    try {\n      const response = await requestCall()\n      return response.data\n    } catch (err) {\n      handleRequestError(err, errorContext, routeSpecificErrors)\n      return null\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  function formatEventType(eventType: string) {\n    switch (eventType) {\n      case 'credit_added':\n        return 'Credits Added'\n      case 'account_created':\n        return 'Account Created'\n      case 'api_usage_completed':\n        return 'API Usage'\n      default:\n        return eventType\n    }\n  }\n\n  function formatDate(dateString: string): string {\n    const date = new Date(dateString)\n\n    return d(date, {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  function formatJsonKey(key: string) {\n    return key\n      .split('_')\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ')\n  }\n\n  function formatJsonValue(value: any) {\n    if (typeof value === 'number') {\n      // Format numbers with commas and decimals if needed\n      return value.toLocaleString()\n    }\n    if (typeof value === 'string' && value.match(/^\\d{4}-\\d{2}-\\d{2}/)) {\n      // Format dates nicely\n      return new Date(value).toLocaleString()\n    }\n    return value\n  }\n\n  function getEventSeverity(eventType: string) {\n    switch (eventType) {\n      case 'credit_added':\n        return 'success'\n      case 'account_created':\n        return 'info'\n      case 'api_usage_completed':\n        return 'warning'\n      default:\n        return 'info'\n    }\n  }\n\n  function hasAdditionalInfo(event: AuditLog) {\n    const { amount, api_name, model, ...otherParams } = event.params || {}\n    return Object.keys(otherParams).length > 0\n  }\n\n  function getTooltipContent(event: AuditLog) {\n    const { ...params } = event.params || {}\n\n    return Object.entries(params)\n      .map(([key, value]) => {\n        const formattedKey = formatJsonKey(key)\n        const formattedValue = formatJsonValue(value)\n        return `<strong>${formattedKey}:</strong> ${formattedValue}`\n      })\n      .join('<br>')\n  }\n\n  function formatAmount(amountMicros?: number) {\n    if (!amountMicros) return '0.00'\n    return (amountMicros / 100).toFixed(2)\n  }\n\n  async function getMyEvents({\n    page = 1,\n    limit = 10\n  }: CustomerEventsResponseQuery = {}): Promise<CustomerEventsResponse | null> {\n    const errorContext = 'Fetching customer events'\n    const routeSpecificErrors = {\n      400: 'Invalid input, object invalid',\n      404: 'Not found'\n    }\n\n    // Get auth headers\n    const authHeaders = await useFirebaseAuthStore().getAuthHeader()\n    if (!authHeaders) {\n      error.value = 'Authentication header is missing'\n      return null\n    }\n\n    return executeRequest<CustomerEventsResponse>(\n      () =>\n        customerApiClient.get('/customers/events', {\n          params: { page, limit },\n          headers: authHeaders\n        }),\n      { errorContext, routeSpecificErrors }\n    )\n  }\n\n  return {\n    // State\n    isLoading,\n    error,\n\n    // Methods\n    getMyEvents,\n    formatEventType,\n    getEventSeverity,\n    formatAmount,\n    hasAdditionalInfo,\n    formatDate,\n    formatJsonKey,\n    formatJsonValue,\n    getTooltipContent\n  }\n}\n","<template>\n  <div>\n    <div v-if=\"loading\" class=\"flex items-center justify-center p-8\">\n      <ProgressSpinner />\n    </div>\n    <div v-else-if=\"error\" class=\"p-4\">\n      <Message severity=\"error\" :closable=\"false\">{{ error }}</Message>\n    </div>\n    <DataTable\n      v-else\n      :value=\"events\"\n      :paginator=\"true\"\n      :rows=\"pagination.limit\"\n      :total-records=\"pagination.total\"\n      :first=\"dataTableFirst\"\n      :lazy=\"true\"\n      class=\"p-datatable-sm custom-datatable\"\n      @page=\"onPageChange\"\n    >\n      <Column field=\"event_type\" :header=\"$t('credits.eventType')\">\n        <template #body=\"{ data }\">\n          <Badge\n            :value=\"customerEventService.formatEventType(data.event_type)\"\n            :severity=\"customerEventService.getEventSeverity(data.event_type)\"\n          />\n        </template>\n      </Column>\n      <Column field=\"details\" :header=\"$t('credits.details')\">\n        <template #body=\"{ data }\">\n          <div class=\"event-details\">\n            <!-- Credits Added -->\n            <template v-if=\"data.event_type === EventType.CREDIT_ADDED\">\n              <div class=\"font-semibold text-green-500\">\n                {{ $t('credits.added') }} ${{\n                  customerEventService.formatAmount(data.params?.amount)\n                }}\n              </div>\n            </template>\n\n            <!-- Account Created -->\n            <template v-else-if=\"data.event_type === EventType.ACCOUNT_CREATED\">\n              <div>{{ $t('credits.accountInitialized') }}</div>\n            </template>\n\n            <!-- API Usage -->\n            <template\n              v-else-if=\"data.event_type === EventType.API_USAGE_COMPLETED\"\n            >\n              <div class=\"flex flex-col gap-1\">\n                <div class=\"font-semibold\">\n                  {{ data.params?.api_name || 'API' }}\n                </div>\n                <div class=\"text-sm text-gray-400\">\n                  {{ $t('credits.model') }}: {{ data.params?.model || '-' }}\n                </div>\n              </div>\n            </template>\n          </div>\n        </template>\n      </Column>\n      <Column field=\"createdAt\" :header=\"$t('credits.time')\">\n        <template #body=\"{ data }\">\n          {{ customerEventService.formatDate(data.createdAt) }}\n        </template>\n      </Column>\n      <Column field=\"params\" :header=\"$t('credits.additionalInfo')\">\n        <template #body=\"{ data }\">\n          <Button\n            v-if=\"customerEventService.hasAdditionalInfo(data)\"\n            v-tooltip.top=\"{\n              escape: false,\n              value: tooltipContentMap.get(data.event_id) || '',\n              pt: {\n                text: {\n                  style: {\n                    width: 'max-content !important'\n                  }\n                }\n              }\n            }\"\n            icon=\"pi pi-info-circle\"\n            class=\"p-button-text p-button-sm\"\n          />\n        </template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport Badge from 'primevue/badge'\nimport Button from 'primevue/button'\nimport Column from 'primevue/column'\nimport DataTable from 'primevue/datatable'\nimport Message from 'primevue/message'\nimport ProgressSpinner from 'primevue/progressspinner'\nimport { computed, ref } from 'vue'\n\nimport type { AuditLog } from '@/services/customerEventsService'\nimport {\n  EventType,\n  useCustomerEventsService\n} from '@/services/customerEventsService'\n\nconst events = ref<AuditLog[]>([])\nconst loading = ref(true)\nconst error = ref<string | null>(null)\n\nconst customerEventService = useCustomerEventsService()\n\nconst pagination = ref({\n  page: 1,\n  limit: 7,\n  total: 0,\n  totalPages: 0\n})\n\nconst dataTableFirst = computed(\n  () => (pagination.value.page - 1) * pagination.value.limit\n)\n\nconst tooltipContentMap = computed(() => {\n  const map = new Map<string, string>()\n  events.value.forEach((event) => {\n    if (customerEventService.hasAdditionalInfo(event) && event.event_id) {\n      map.set(event.event_id, customerEventService.getTooltipContent(event))\n    }\n  })\n  return map\n})\n\nconst loadEvents = async () => {\n  loading.value = true\n  error.value = null\n\n  try {\n    const response = await customerEventService.getMyEvents({\n      page: pagination.value.page,\n      limit: pagination.value.limit\n    })\n\n    if (response) {\n      if (response.events) {\n        events.value = response.events\n      }\n\n      if (response.page) {\n        pagination.value.page = response.page\n      }\n\n      if (response.limit) {\n        pagination.value.limit = response.limit\n      }\n\n      if (response.total) {\n        pagination.value.total = response.total\n      }\n\n      if (response.totalPages) {\n        pagination.value.totalPages = response.totalPages\n      }\n    } else {\n      error.value = customerEventService.error.value || 'Failed to load events'\n    }\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'Unknown error'\n    console.error('Error loading events:', err)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst onPageChange = (event: { page: number }) => {\n  pagination.value.page = event.page + 1\n  loadEvents().catch((error) => {\n    console.error('Error loading events:', error)\n  })\n}\n\nconst refresh = async () => {\n  pagination.value.page = 1\n  await loadEvents()\n}\n\ndefineExpose({\n  refresh\n})\n</script>\n","<template>\n  <TabPanel value=\"Credits\" class=\"credits-container h-full\">\n    <div class=\"flex h-full flex-col\">\n      <h2 class=\"mb-2 text-2xl font-bold\">\n        {{ $t('credits.credits') }}\n      </h2>\n\n      <Divider />\n\n      <div class=\"flex flex-col gap-2\">\n        <h3 class=\"text-sm font-medium text-muted\">\n          {{ $t('credits.yourCreditBalance') }}\n        </h3>\n        <div class=\"flex items-center justify-between\">\n          <UserCredit text-class=\"text-3xl font-bold\" />\n          <Skeleton v-if=\"loading\" width=\"2rem\" height=\"2rem\" />\n          <Button\n            v-else\n            :label=\"$t('credits.purchaseCredits')\"\n            :loading=\"loading\"\n            @click=\"handlePurchaseCreditsClick\"\n          />\n        </div>\n        <div class=\"flex flex-row items-center\">\n          <Skeleton\n            v-if=\"balanceLoading\"\n            width=\"12rem\"\n            height=\"1rem\"\n            class=\"text-xs\"\n          />\n          <div v-else-if=\"formattedLastUpdateTime\" class=\"text-xs text-muted\">\n            {{ $t('credits.lastUpdated') }}: {{ formattedLastUpdateTime }}\n          </div>\n          <Button\n            icon=\"pi pi-refresh\"\n            text\n            size=\"small\"\n            severity=\"secondary\"\n            @click=\"() => authActions.fetchBalance()\"\n          />\n        </div>\n      </div>\n\n      <div class=\"flex items-center justify-between\">\n        <h3>{{ $t('credits.activity') }}</h3>\n        <Button\n          :label=\"$t('credits.invoiceHistory')\"\n          text\n          severity=\"secondary\"\n          icon=\"pi pi-arrow-up-right\"\n          :loading=\"loading\"\n          @click=\"handleCreditsHistoryClick\"\n        />\n      </div>\n\n      <template v-if=\"creditHistory.length > 0\">\n        <div class=\"grow\">\n          <DataTable :value=\"creditHistory\" :show-headers=\"false\">\n            <Column field=\"title\" :header=\"$t('g.name')\">\n              <template #body=\"{ data }\">\n                <div class=\"text-sm font-medium\">{{ data.title }}</div>\n                <div class=\"text-xs text-muted\">{{ data.timestamp }}</div>\n              </template>\n            </Column>\n            <Column field=\"amount\" :header=\"$t('g.amount')\">\n              <template #body=\"{ data }\">\n                <div\n                  :class=\"[\n                    'text-center text-base font-medium',\n                    data.isPositive ? 'text-sky-500' : 'text-red-400'\n                  ]\"\n                >\n                  {{ data.isPositive ? '+' : '-' }}${{\n                    formatMetronomeCurrency(data.amount, 'usd')\n                  }}\n                </div>\n              </template>\n            </Column>\n          </DataTable>\n        </div>\n      </template>\n\n      <Divider />\n\n      <UsageLogsTable ref=\"usageLogsTableRef\" />\n\n      <div class=\"flex flex-row gap-2\">\n        <Button\n          :label=\"$t('credits.faqs')\"\n          text\n          severity=\"secondary\"\n          icon=\"pi pi-question-circle\"\n          @click=\"handleFaqClick\"\n        />\n        <Button\n          :label=\"$t('credits.messageSupport')\"\n          text\n          severity=\"secondary\"\n          icon=\"pi pi-comments\"\n          @click=\"handleMessageSupport\"\n        />\n      </div>\n    </div>\n  </TabPanel>\n</template>\n\n<script setup lang=\"ts\">\nimport Button from 'primevue/button'\nimport Column from 'primevue/column'\nimport DataTable from 'primevue/datatable'\nimport Divider from 'primevue/divider'\nimport Skeleton from 'primevue/skeleton'\nimport TabPanel from 'primevue/tabpanel'\nimport { computed, ref, watch } from 'vue'\n\nimport UserCredit from '@/components/common/UserCredit.vue'\nimport UsageLogsTable from '@/components/dialog/content/setting/UsageLogsTable.vue'\nimport { useFirebaseAuthActions } from '@/composables/auth/useFirebaseAuthActions'\nimport { useDialogService } from '@/services/dialogService'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useFirebaseAuthStore } from '@/stores/firebaseAuthStore'\nimport { formatMetronomeCurrency } from '@/utils/formatUtil'\n\ninterface CreditHistoryItemData {\n  title: string\n  timestamp: string\n  amount: number\n  isPositive: boolean\n}\n\nconst dialogService = useDialogService()\nconst authStore = useFirebaseAuthStore()\nconst authActions = useFirebaseAuthActions()\nconst commandStore = useCommandStore()\nconst loading = computed(() => authStore.loading)\nconst balanceLoading = computed(() => authStore.isFetchingBalance)\n\nconst usageLogsTableRef = ref<InstanceType<typeof UsageLogsTable> | null>(null)\n\nconst formattedLastUpdateTime = computed(() =>\n  authStore.lastBalanceUpdateTime\n    ? authStore.lastBalanceUpdateTime.toLocaleString()\n    : ''\n)\n\nwatch(\n  () => authStore.lastBalanceUpdateTime,\n  (newTime, oldTime) => {\n    if (newTime && newTime !== oldTime && usageLogsTableRef.value) {\n      usageLogsTableRef.value.refresh()\n    }\n  }\n)\n\nconst handlePurchaseCreditsClick = () => {\n  dialogService.showTopUpCreditsDialog()\n}\n\nconst handleCreditsHistoryClick = async () => {\n  await authActions.accessBillingPortal()\n}\n\nconst handleMessageSupport = async () => {\n  await commandStore.execute('Comfy.ContactSupport')\n}\n\nconst handleFaqClick = () => {\n  window.open('https://docs.comfy.org/tutorials/api-nodes/faq', '_blank')\n}\n\nconst creditHistory = ref<CreditHistoryItemData[]>([])\n</script>\n"],"names":["EventType","customerApiClient","axios","COMFY_API_BASE_URL","useCustomerEventsService","__name","isLoading","ref","error","d","useI18n","handleRequestError","err","context","routeSpecificErrors","isAbortError","message","axiosError","status","executeRequest","requestCall","options","errorContext","formatEventType","eventType","formatDate","dateString","date","formatJsonKey","key","word","formatJsonValue","value","getEventSeverity","hasAdditionalInfo","event","amount","api_name","model","otherParams","getTooltipContent","params","formattedKey","formattedValue","formatAmount","amountMicros","getMyEvents","page","limit","authHeaders","useFirebaseAuthStore","events","loading","customerEventService","pagination","dataTableFirst","computed","tooltipContentMap","map","loadEvents","response","onPageChange","__expose","dialogService","useDialogService","authStore","authActions","useFirebaseAuthActions","commandStore","useCommandStore","balanceLoading","usageLogsTableRef","formattedLastUpdateTime","watch","newTime","oldTime","handlePurchaseCreditsClick","handleCreditsHistoryClick","handleMessageSupport","handleFaqClick","creditHistory"],"mappings":"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"}