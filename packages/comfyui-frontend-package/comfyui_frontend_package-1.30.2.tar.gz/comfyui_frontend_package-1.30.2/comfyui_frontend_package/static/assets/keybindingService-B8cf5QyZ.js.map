{"version":3,"file":"keybindingService-B8cf5QyZ.js","sources":["../../src/constants/coreKeybindings.ts","../../src/services/keybindingService.ts"],"sourcesContent":["import type { Keybinding } from '@/schemas/keyBindingSchema'\n\nexport const CORE_KEYBINDINGS: Keybinding[] = [\n  {\n    combo: {\n      ctrl: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.QueuePrompt'\n  },\n  {\n    combo: {\n      ctrl: true,\n      shift: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.QueuePromptFront'\n  },\n  {\n    combo: {\n      ctrl: true,\n      alt: true,\n      key: 'Enter'\n    },\n    commandId: 'Comfy.Interrupt'\n  },\n  {\n    combo: {\n      key: 'r'\n    },\n    commandId: 'Comfy.RefreshNodeDefinitions'\n  },\n  {\n    combo: {\n      key: 'q'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.queue'\n  },\n  {\n    combo: {\n      key: 'w'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.workflows'\n  },\n  {\n    combo: {\n      key: 'n'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.node-library'\n  },\n  {\n    combo: {\n      key: 'm'\n    },\n    commandId: 'Workspace.ToggleSidebarTab.model-library'\n  },\n  {\n    combo: {\n      key: 's',\n      ctrl: true\n    },\n    commandId: 'Comfy.SaveWorkflow'\n  },\n  {\n    combo: {\n      key: 'o',\n      ctrl: true\n    },\n    commandId: 'Comfy.OpenWorkflow'\n  },\n  {\n    combo: {\n      key: 'g',\n      ctrl: true\n    },\n    commandId: 'Comfy.Graph.GroupSelectedNodes'\n  },\n  {\n    combo: {\n      key: ',',\n      ctrl: true\n    },\n    commandId: 'Comfy.ShowSettingsDialog'\n  },\n  // For '=' both holding shift and not holding shift\n  {\n    combo: {\n      key: '=',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '+',\n      alt: true,\n      shift: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  // For number pad '+'\n  {\n    combo: {\n      key: '+',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomIn',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '-',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ZoomOut',\n    targetElementId: 'graph-canvas'\n  },\n  {\n    combo: {\n      key: '.'\n    },\n    commandId: 'Comfy.Canvas.FitView',\n    targetElementId: 'graph-canvas-container'\n  },\n  {\n    combo: {\n      key: 'p'\n    },\n    commandId: 'Comfy.Canvas.ToggleSelected.Pin',\n    targetElementId: 'graph-canvas-container'\n  },\n  {\n    combo: {\n      key: 'c',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Collapse',\n    targetElementId: 'graph-canvas-container'\n  },\n  {\n    combo: {\n      key: 'b',\n      ctrl: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Bypass',\n    targetElementId: 'graph-canvas-container'\n  },\n  {\n    combo: {\n      key: 'm',\n      ctrl: true\n    },\n    commandId: 'Comfy.Canvas.ToggleSelectedNodes.Mute',\n    targetElementId: 'graph-canvas-container'\n  },\n  {\n    combo: {\n      key: '`',\n      ctrl: true\n    },\n    commandId: 'Workspace.ToggleBottomPanelTab.logs-terminal'\n  },\n  {\n    combo: {\n      key: 'e',\n      ctrl: true,\n      shift: true\n    },\n    commandId: 'Comfy.Graph.ConvertToSubgraph'\n  },\n  {\n    combo: {\n      key: 'm',\n      alt: true\n    },\n    commandId: 'Comfy.Canvas.ToggleMinimap'\n  },\n  {\n    combo: {\n      ctrl: true,\n      shift: true,\n      key: 'k'\n    },\n    commandId: 'Workspace.ToggleBottomPanel.Shortcuts'\n  },\n  {\n    combo: {\n      key: 'v'\n    },\n    commandId: 'Comfy.Canvas.Unlock'\n  },\n  {\n    combo: {\n      key: 'h'\n    },\n    commandId: 'Comfy.Canvas.Lock'\n  },\n  {\n    combo: {\n      key: 'Escape'\n    },\n    commandId: 'Comfy.Graph.ExitSubgraph'\n  }\n]\n","import { CORE_KEYBINDINGS } from '@/constants/coreKeybindings'\nimport { useSettingStore } from '@/platform/settings/settingStore'\nimport { app } from '@/scripts/app'\nimport { useCommandStore } from '@/stores/commandStore'\nimport { useDialogStore } from '@/stores/dialogStore'\nimport {\n  KeyComboImpl,\n  KeybindingImpl,\n  useKeybindingStore\n} from '@/stores/keybindingStore'\n\nexport const useKeybindingService = () => {\n  const keybindingStore = useKeybindingStore()\n  const commandStore = useCommandStore()\n  const settingStore = useSettingStore()\n  const dialogStore = useDialogStore()\n\n  // Helper function to determine if an event should be forwarded to canvas\n  const shouldForwardToCanvas = (event: KeyboardEvent): boolean => {\n    // Don't forward if modifier keys are pressed (except shift)\n    if (event.ctrlKey || event.altKey || event.metaKey) {\n      return false\n    }\n\n    // Keys that LiteGraph handles but aren't in core keybindings\n    const canvasKeys = ['Delete', 'Backspace']\n\n    return canvasKeys.includes(event.key)\n  }\n\n  const keybindHandler = async function (event: KeyboardEvent) {\n    const keyCombo = KeyComboImpl.fromEvent(event)\n    if (keyCombo.isModifier) {\n      return\n    }\n\n    // Ignore reserved or non-modifier keybindings if typing in input fields\n    const target = event.composedPath()[0] as HTMLElement\n    if (\n      keyCombo.isReservedByTextInput &&\n      (target.tagName === 'TEXTAREA' ||\n        target.tagName === 'INPUT' ||\n        target.contentEditable === 'true' ||\n        (target.tagName === 'SPAN' &&\n          target.classList.contains('property_value')))\n    ) {\n      return\n    }\n\n    const keybinding = keybindingStore.getKeybinding(keyCombo)\n    if (keybinding && keybinding.targetElementId !== 'graph-canvas') {\n      // Special handling for Escape key - let dialogs handle it first\n      if (\n        event.key === 'Escape' &&\n        !event.ctrlKey &&\n        !event.altKey &&\n        !event.metaKey\n      ) {\n        // If dialogs are open, don't execute the keybinding - let the dialog handle it\n        if (dialogStore.dialogStack.length > 0) {\n          return\n        }\n      }\n\n      // Prevent default browser behavior first, then execute the command\n      event.preventDefault()\n      await commandStore.execute(keybinding.commandId)\n      return\n    }\n\n    // Forward unhandled canvas-targeted events to LiteGraph\n    if (!keybinding && shouldForwardToCanvas(event)) {\n      const canvas = app.canvas\n      if (\n        canvas &&\n        canvas.processKey &&\n        typeof canvas.processKey === 'function'\n      ) {\n        // Let LiteGraph handle the event\n        canvas.processKey(event)\n        return\n      }\n    }\n\n    // Only clear dialogs if not using modifiers\n    if (event.ctrlKey || event.altKey || event.metaKey) {\n      return\n    }\n\n    // Escape key: close the first open modal found, and all dialogs\n    if (event.key === 'Escape') {\n      const modals = document.querySelectorAll<HTMLElement>('.comfy-modal')\n      for (const modal of modals) {\n        const modalDisplay = window\n          .getComputedStyle(modal)\n          .getPropertyValue('display')\n\n        if (modalDisplay !== 'none') {\n          modal.style.display = 'none'\n          break\n        }\n      }\n\n      for (const d of document.querySelectorAll('dialog')) d.close()\n    }\n  }\n\n  const registerCoreKeybindings = () => {\n    for (const keybinding of CORE_KEYBINDINGS) {\n      keybindingStore.addDefaultKeybinding(new KeybindingImpl(keybinding))\n    }\n  }\n\n  function registerUserKeybindings() {\n    // Unset bindings first as new bindings might conflict with default bindings.\n    const unsetBindings = settingStore.get('Comfy.Keybinding.UnsetBindings')\n    for (const keybinding of unsetBindings) {\n      keybindingStore.unsetKeybinding(new KeybindingImpl(keybinding))\n    }\n    const newBindings = settingStore.get('Comfy.Keybinding.NewBindings')\n    for (const keybinding of newBindings) {\n      keybindingStore.addUserKeybinding(new KeybindingImpl(keybinding))\n    }\n  }\n\n  async function persistUserKeybindings() {\n    // TODO(https://github.com/Comfy-Org/ComfyUI_frontend/issues/1079):\n    // Allow setting multiple values at once in settingStore\n    await settingStore.set(\n      'Comfy.Keybinding.NewBindings',\n      Object.values(keybindingStore.getUserKeybindings())\n    )\n    await settingStore.set(\n      'Comfy.Keybinding.UnsetBindings',\n      Object.values(keybindingStore.getUserUnsetKeybindings())\n    )\n  }\n\n  return {\n    keybindHandler,\n    registerCoreKeybindings,\n    registerUserKeybindings,\n    persistUserKeybindings\n  }\n}\n"],"names":["CORE_KEYBINDINGS","useKeybindingService","__name","keybindingStore","useKeybindingStore","commandStore","useCommandStore","settingStore","useSettingStore","dialogStore","useDialogStore","shouldForwardToCanvas","event","keybindHandler","keyCombo","KeyComboImpl","target","keybinding","canvas","app","modals","modal","d","registerCoreKeybindings","KeybindingImpl","registerUserKeybindings","unsetBindings","newBindings","persistUserKeybindings"],"mappings":"qKAEO,MAAMA,EAAiC,CAC5C,CACE,MAAO,CACL,KAAM,GACN,IAAK,OACP,EACA,UAAW,mBACb,EACA,CACE,MAAO,CACL,KAAM,GACN,MAAO,GACP,IAAK,OACP,EACA,UAAW,wBACb,EACA,CACE,MAAO,CACL,KAAM,GACN,IAAK,GACL,IAAK,OACP,EACA,UAAW,iBACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,8BACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,kCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,sCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,yCACb,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,0CACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,oBACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,oBACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,gCACb,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,0BACb,EAEA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,sBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,GACL,MAAO,EACT,EACA,UAAW,sBACX,gBAAiB,cACnB,EAEA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,sBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,uBACX,gBAAiB,cACnB,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,uBACX,gBAAiB,wBACnB,EACA,CACE,MAAO,CACL,IAAK,GACP,EACA,UAAW,kCACX,gBAAiB,wBACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,IAAK,EACP,EACA,UAAW,4CACX,gBAAiB,wBACnB,EACA,CACE,MAAO,CACL,IAAK,IACL,KAAM,EACR,EACA,UAAW,0CACX,gBAAiB,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"}