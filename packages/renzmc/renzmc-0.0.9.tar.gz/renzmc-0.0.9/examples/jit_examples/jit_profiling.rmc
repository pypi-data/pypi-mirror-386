// ============================================
// JIT Profiling Demo - RenzMcLang
// ============================================
// Demonstrasi penggunaan @profile decorator untuk analisis performa

tampilkan "=== JIT Profiling Demo ==="
tampilkan ""

tampilkan "1. Basic Profiling with @profile:"
tampilkan ""

// Decorator @profile mengukur waktu eksekusi dan penggunaan memori
@profile
buat fungsi hitung_sum dengan n
    total itu 0
    untuk i dari 1 sampai n
        total itu total + i
    selesai
    hasil total
selesai

tampilkan "Menghitung sum dengan profiling..."
hasil itu panggil hitung_sum dengan 10000
tampilkan "Sum(10000) = " + ke_teks(hasil)
tampilkan ""

tampilkan "2. Profiling Complex Operations:"
tampilkan ""

@profile
buat fungsi matrix_multiply dengan n
    total itu 0
    untuk i dari 1 sampai n
        untuk j dari 1 sampai n
            untuk k dari 1 sampai n
                total itu total + (i * j * k)
            selesai
        selesai
    selesai
    hasil total
selesai

tampilkan "Menghitung matrix multiply dengan profiling..."
hasil itu panggil matrix_multiply dengan 50
tampilkan "Matrix Multiply Result: " + ke_teks(hasil)
tampilkan ""

tampilkan "3. Profiling with JIT-optimized Function:"
tampilkan ""

@jit_compile
buat fungsi optimized_computation dengan n
    total itu 0
    untuk i dari 1 sampai n
        untuk j dari 1 sampai 100
            total itu total + (i * j)
        selesai
    selesai
    hasil total
selesai

tampilkan "Menghitung dengan JIT optimization..."
hasil itu panggil optimized_computation dengan 1000
tampilkan "Optimized Result: " + ke_teks(hasil)
tampilkan ""

tampilkan "=== Profiling Demo Selesai! ==="
tampilkan ""
tampilkan "✓ @profile memberikan informasi waktu eksekusi dan memori"
tampilkan "✓ @jit_compile mengoptimasi performa fungsi numerik"
tampilkan "✓ Berguna untuk mengidentifikasi bottleneck performa"