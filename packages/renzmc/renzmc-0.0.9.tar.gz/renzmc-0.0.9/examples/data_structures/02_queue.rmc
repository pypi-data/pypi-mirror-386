// ============================================
// Data Structure: Queue (Antrian)
// ============================================
// Queue adalah struktur data FIFO (First In First Out)
// Elemen pertama yang masuk adalah yang pertama keluar

tampilkan "╔════════════════════════════════════════╗"
tampilkan "║      IMPLEMENTASI QUEUE (ANTRIAN)     ║"
tampilkan "╚════════════════════════════════════════╝"
tampilkan ""

// Buat Queue
fungsi buat_queue():
    queue itu []
    hasil queue
selesai

// Enqueue: Tambah elemen ke belakang queue
fungsi enqueue(queue, item):
    tambah(queue, item)
    tampilkan f"✓ Enqueue: {item} ditambahkan ke queue"
selesai

// Dequeue: Ambil dan hapus elemen depan
fungsi dequeue(queue):
    jika panjang(queue) == 0
        tampilkan "✗ Queue kosong! Tidak bisa dequeue"
        hasil tidak_ada
    selesai
    
    item itu queue[0]
    hapus_pada(queue, 0)
    tampilkan f"✓ Dequeue: {item} diambil dari queue"
    hasil item
selesai

// Front: Lihat elemen depan tanpa menghapus
fungsi front(queue):
    jika panjang(queue) == 0
        tampilkan "✗ Queue kosong!"
        hasil tidak_ada
    selesai
    
    hasil queue[0]
selesai

// Rear: Lihat elemen belakang
fungsi rear(queue):
    jika panjang(queue) == 0
        tampilkan "✗ Queue kosong!"
        hasil tidak_ada
    selesai
    
    hasil queue[panjang(queue) - 1]
selesai

// Is Empty
fungsi is_empty_queue(queue):
    hasil panjang(queue) == 0
selesai

// Size
fungsi size_queue(queue):
    hasil panjang(queue)
selesai

// Tampilkan queue
fungsi tampilkan_queue(queue):
    jika panjang(queue) == 0
        tampilkan "  Queue: [] (kosong)"
    lainnya
        tampilkan f"  Queue: {queue}"
        tampilkan f"  Front -> {queue[0]}, Rear -> {queue[panjang(queue) - 1]}"
    selesai
selesai

// ============================================
// DEMO QUEUE
// ============================================

tampilkan "=== DEMO 1: Operasi Dasar Queue ==="
tampilkan ""

// Buat queue baru
my_queue itu buat_queue()
tampilkan "Queue dibuat!"
tampilkan_queue(my_queue)
tampilkan ""

// Enqueue beberapa elemen
tampilkan "--- Enqueue Operations ---"
enqueue(my_queue, "Alice")
enqueue(my_queue, "Bob")
enqueue(my_queue, "Charlie")
enqueue(my_queue, "Diana")
tampilkan ""
tampilkan_queue(my_queue)
tampilkan ""

// Front dan Rear
tampilkan "--- Front & Rear ---"
depan itu front(my_queue)
belakang itu rear(my_queue)
tampilkan f"✓ Front: {depan}"
tampilkan f"✓ Rear: {belakang}"
tampilkan ""

// Dequeue beberapa elemen
tampilkan "--- Dequeue Operations ---"
dequeue(my_queue)
dequeue(my_queue)
tampilkan ""
tampilkan_queue(my_queue)
tampilkan ""

ukuran itu size_queue(my_queue)
tampilkan f"✓ Ukuran queue: {ukuran}"
tampilkan ""

// ============================================
// DEMO 2: Simulasi Antrian Bank
// ============================================

tampilkan "=== DEMO 2: Simulasi Antrian Bank ==="
tampilkan ""

antrian_bank itu buat_queue()

tampilkan "--- Pelanggan Datang ---"
enqueue(antrian_bank, "Nasabah #1")
enqueue(antrian_bank, "Nasabah #2")
enqueue(antrian_bank, "Nasabah #3")
enqueue(antrian_bank, "Nasabah #4")
enqueue(antrian_bank, "Nasabah #5")
tampilkan ""

tampilkan "--- Status Antrian ---"
tampilkan_queue(antrian_bank)
tampilkan ""

tampilkan "--- Teller Melayani ---"
untuk i dari 1 sampai 3
    tampilkan f"Teller melayani pelanggan ke-{i}:"
    dequeue(antrian_bank)
    tampilkan ""
selesai

tampilkan "--- Sisa Antrian ---"
tampilkan_queue(antrian_bank)
tampilkan ""

tampilkan "╔════════════════════════════════════════╗"
tampilkan "║  Queue Implementation Complete! ✅     ║"
tampilkan "╚════════════════════════════════════════╝"