[tool.poetry]
name = "vantage-agent"
version = "3.2.1"
description = "Vantage Agent"
authors = ["Omnivector Solutions <info@omnivector.solutions>"]
readme = "README.md"
packages = [{ include = "vantage_agent" }]

[tool.poetry.dependencies]
python = "^3.10"
APScheduler = "3.10.4"
httpx = "^0.27.0"
pydantic-settings = "^2.4.0"
loguru = "^0.7.2"
python-dotenv = "^1.0.1"
py-buzz = "^4.1.0"
pyjwt = "^2.3.0"
python-jose = "^3.3.0"
jsondiff = "^2.2.0"
sentry-sdk = "^2.13.0"
pydantic = "^2.10.6"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.1"
ruff = "^0.5.7"
respx = "^0.21.1"
pytest = "^8.3.2"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.3"
pytest-xdist = "^3.6.1"

[tool.poetry.scripts]
vtg-run = "vantage_agent.main:main"

[tool.poetry.plugins.'vantage_agent.tasks']
cluster-config = 'vantage_agent.tasks:cluster_config_task'
cluster-partition = 'vantage_agent.tasks:cluster_partition_task'
cluster-queue-actions = 'vantage_agent.tasks:cluster_queue_actions_task'
cluster-queue = 'vantage_agent.tasks:cluster_queue_task'
cluster-node = 'vantage_agent.tasks:cluster_node_task'
partitions-sync = 'vantage_agent.tasks:sync_cluster_partitions_task'
self-update = 'vantage_agent.tasks:self_update_task'
status-report = 'vantage_agent.tasks:status_report_task'

[tool.ruff]
line-length = 110
extend-exclude = ["__pycache__", "*.egg_info", "__init__.py"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001", "I"]
ignore = ["D213", "D211", "D203", "C408"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/test_helpers.py" = ["E501"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-vv",
    "--cov=vantage_agent",
    "--cov-report=term-missing",
    "-n=auto"
]
testpaths = ["tests"]
env = [
    "VANTAGE_AGENT_OIDC_DOMAIN = armasec.dev",
    "VANTAGE_AGENT_OIDC_CLIENT_ID = vantage-agent-2699404d-4b88-4285-9b57-b3aa38d674ae",
    "VANTAGE_AGENT_OIDC_CLIENT_SECRET = super-secret",
    "VANTAGE_AGENT_OIDC_USE_HTTPS = true"
]
asyncio_mode = "auto"

[tool.coverage.run]
omit = [
    "vantage_agent/exceptions.py",
    "vantage_agent/vantage_api_client.py",
]

[tool.coverage.report]
fail_under = 100

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
