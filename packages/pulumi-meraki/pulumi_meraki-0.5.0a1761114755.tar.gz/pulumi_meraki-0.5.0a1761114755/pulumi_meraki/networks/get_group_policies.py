# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetGroupPoliciesResult',
    'AwaitableGetGroupPoliciesResult',
    'get_group_policies',
    'get_group_policies_output',
]

@pulumi.output_type
class GetGroupPoliciesResult:
    """
    A collection of values returned by getGroupPolicies.
    """
    def __init__(__self__, group_policy_id=None, id=None, item=None, items=None, network_id=None):
        if group_policy_id and not isinstance(group_policy_id, str):
            raise TypeError("Expected argument 'group_policy_id' to be a str")
        pulumi.set(__self__, "group_policy_id", group_policy_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if item and not isinstance(item, dict):
            raise TypeError("Expected argument 'item' to be a dict")
        pulumi.set(__self__, "item", item)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if network_id and not isinstance(network_id, str):
            raise TypeError("Expected argument 'network_id' to be a str")
        pulumi.set(__self__, "network_id", network_id)

    @_builtins.property
    @pulumi.getter(name="groupPolicyId")
    def group_policy_id(self) -> Optional[_builtins.str]:
        """
        groupPolicyId path parameter. Group policy ID
        """
        return pulumi.get(self, "group_policy_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def item(self) -> 'outputs.GetGroupPoliciesItemResult':
        return pulumi.get(self, "item")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetGroupPoliciesItemResult']:
        """
        Array of ResponseNetworksGetNetworkGroupPolicies
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> Optional[_builtins.str]:
        """
        networkId path parameter. Network ID
        """
        return pulumi.get(self, "network_id")


class AwaitableGetGroupPoliciesResult(GetGroupPoliciesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGroupPoliciesResult(
            group_policy_id=self.group_policy_id,
            id=self.id,
            item=self.item,
            items=self.items,
            network_id=self.network_id)


def get_group_policies(group_policy_id: Optional[_builtins.str] = None,
                       network_id: Optional[_builtins.str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetGroupPoliciesResult:
    """
    ## Example Usage


    :param _builtins.str group_policy_id: groupPolicyId path parameter. Group policy ID
    :param _builtins.str network_id: networkId path parameter. Network ID
    """
    __args__ = dict()
    __args__['groupPolicyId'] = group_policy_id
    __args__['networkId'] = network_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('meraki:networks/getGroupPolicies:getGroupPolicies', __args__, opts=opts, typ=GetGroupPoliciesResult).value

    return AwaitableGetGroupPoliciesResult(
        group_policy_id=pulumi.get(__ret__, 'group_policy_id'),
        id=pulumi.get(__ret__, 'id'),
        item=pulumi.get(__ret__, 'item'),
        items=pulumi.get(__ret__, 'items'),
        network_id=pulumi.get(__ret__, 'network_id'))
def get_group_policies_output(group_policy_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              network_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetGroupPoliciesResult]:
    """
    ## Example Usage


    :param _builtins.str group_policy_id: groupPolicyId path parameter. Group policy ID
    :param _builtins.str network_id: networkId path parameter. Network ID
    """
    __args__ = dict()
    __args__['groupPolicyId'] = group_policy_id
    __args__['networkId'] = network_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('meraki:networks/getGroupPolicies:getGroupPolicies', __args__, opts=opts, typ=GetGroupPoliciesResult)
    return __ret__.apply(lambda __response__: GetGroupPoliciesResult(
        group_policy_id=pulumi.get(__response__, 'group_policy_id'),
        id=pulumi.get(__response__, 'id'),
        item=pulumi.get(__response__, 'item'),
        items=pulumi.get(__response__, 'items'),
        network_id=pulumi.get(__response__, 'network_id')))
