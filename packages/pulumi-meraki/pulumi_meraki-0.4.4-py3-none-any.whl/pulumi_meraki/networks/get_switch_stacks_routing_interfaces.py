# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSwitchStacksRoutingInterfacesResult',
    'AwaitableGetSwitchStacksRoutingInterfacesResult',
    'get_switch_stacks_routing_interfaces',
    'get_switch_stacks_routing_interfaces_output',
]

@pulumi.output_type
class GetSwitchStacksRoutingInterfacesResult:
    """
    A collection of values returned by getSwitchStacksRoutingInterfaces.
    """
    def __init__(__self__, id=None, interface_id=None, item=None, items=None, network_id=None, switch_stack_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if interface_id and not isinstance(interface_id, str):
            raise TypeError("Expected argument 'interface_id' to be a str")
        pulumi.set(__self__, "interface_id", interface_id)
        if item and not isinstance(item, dict):
            raise TypeError("Expected argument 'item' to be a dict")
        pulumi.set(__self__, "item", item)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if network_id and not isinstance(network_id, str):
            raise TypeError("Expected argument 'network_id' to be a str")
        pulumi.set(__self__, "network_id", network_id)
        if switch_stack_id and not isinstance(switch_stack_id, str):
            raise TypeError("Expected argument 'switch_stack_id' to be a str")
        pulumi.set(__self__, "switch_stack_id", switch_stack_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="interfaceId")
    def interface_id(self) -> Optional[_builtins.str]:
        """
        interfaceId path parameter. Interface ID
        """
        return pulumi.get(self, "interface_id")

    @_builtins.property
    @pulumi.getter
    def item(self) -> 'outputs.GetSwitchStacksRoutingInterfacesItemResult':
        return pulumi.get(self, "item")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetSwitchStacksRoutingInterfacesItemResult']:
        """
        Array of ResponseSwitchGetNetworkSwitchStackRoutingInterfaces
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> Optional[_builtins.str]:
        """
        networkId path parameter. Network ID
        """
        return pulumi.get(self, "network_id")

    @_builtins.property
    @pulumi.getter(name="switchStackId")
    def switch_stack_id(self) -> Optional[_builtins.str]:
        """
        switchStackId path parameter. Switch stack ID
        """
        return pulumi.get(self, "switch_stack_id")


class AwaitableGetSwitchStacksRoutingInterfacesResult(GetSwitchStacksRoutingInterfacesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSwitchStacksRoutingInterfacesResult(
            id=self.id,
            interface_id=self.interface_id,
            item=self.item,
            items=self.items,
            network_id=self.network_id,
            switch_stack_id=self.switch_stack_id)


def get_switch_stacks_routing_interfaces(interface_id: Optional[_builtins.str] = None,
                                         network_id: Optional[_builtins.str] = None,
                                         switch_stack_id: Optional[_builtins.str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSwitchStacksRoutingInterfacesResult:
    """
    ## Example Usage


    :param _builtins.str interface_id: interfaceId path parameter. Interface ID
    :param _builtins.str network_id: networkId path parameter. Network ID
    :param _builtins.str switch_stack_id: switchStackId path parameter. Switch stack ID
    """
    __args__ = dict()
    __args__['interfaceId'] = interface_id
    __args__['networkId'] = network_id
    __args__['switchStackId'] = switch_stack_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces', __args__, opts=opts, typ=GetSwitchStacksRoutingInterfacesResult).value

    return AwaitableGetSwitchStacksRoutingInterfacesResult(
        id=pulumi.get(__ret__, 'id'),
        interface_id=pulumi.get(__ret__, 'interface_id'),
        item=pulumi.get(__ret__, 'item'),
        items=pulumi.get(__ret__, 'items'),
        network_id=pulumi.get(__ret__, 'network_id'),
        switch_stack_id=pulumi.get(__ret__, 'switch_stack_id'))
def get_switch_stacks_routing_interfaces_output(interface_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                network_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                switch_stack_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSwitchStacksRoutingInterfacesResult]:
    """
    ## Example Usage


    :param _builtins.str interface_id: interfaceId path parameter. Interface ID
    :param _builtins.str network_id: networkId path parameter. Network ID
    :param _builtins.str switch_stack_id: switchStackId path parameter. Switch stack ID
    """
    __args__ = dict()
    __args__['interfaceId'] = interface_id
    __args__['networkId'] = network_id
    __args__['switchStackId'] = switch_stack_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('meraki:networks/getSwitchStacksRoutingInterfaces:getSwitchStacksRoutingInterfaces', __args__, opts=opts, typ=GetSwitchStacksRoutingInterfacesResult)
    return __ret__.apply(lambda __response__: GetSwitchStacksRoutingInterfacesResult(
        id=pulumi.get(__response__, 'id'),
        interface_id=pulumi.get(__response__, 'interface_id'),
        item=pulumi.get(__response__, 'item'),
        items=pulumi.get(__response__, 'items'),
        network_id=pulumi.get(__response__, 'network_id'),
        switch_stack_id=pulumi.get(__response__, 'switch_stack_id')))
