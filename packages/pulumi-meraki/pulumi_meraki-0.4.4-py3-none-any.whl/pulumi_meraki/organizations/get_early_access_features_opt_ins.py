# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetEarlyAccessFeaturesOptInsResult',
    'AwaitableGetEarlyAccessFeaturesOptInsResult',
    'get_early_access_features_opt_ins',
    'get_early_access_features_opt_ins_output',
]

@pulumi.output_type
class GetEarlyAccessFeaturesOptInsResult:
    """
    A collection of values returned by getEarlyAccessFeaturesOptIns.
    """
    def __init__(__self__, id=None, item=None, opt_in_id=None, organization_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if item and not isinstance(item, dict):
            raise TypeError("Expected argument 'item' to be a dict")
        pulumi.set(__self__, "item", item)
        if opt_in_id and not isinstance(opt_in_id, str):
            raise TypeError("Expected argument 'opt_in_id' to be a str")
        pulumi.set(__self__, "opt_in_id", opt_in_id)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def item(self) -> 'outputs.GetEarlyAccessFeaturesOptInsItemResult':
        return pulumi.get(self, "item")

    @_builtins.property
    @pulumi.getter(name="optInId")
    def opt_in_id(self) -> Optional[_builtins.str]:
        """
        optInId path parameter. Opt in ID
        """
        return pulumi.get(self, "opt_in_id")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[_builtins.str]:
        """
        organizationId path parameter. Organization ID
        """
        return pulumi.get(self, "organization_id")


class AwaitableGetEarlyAccessFeaturesOptInsResult(GetEarlyAccessFeaturesOptInsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEarlyAccessFeaturesOptInsResult(
            id=self.id,
            item=self.item,
            opt_in_id=self.opt_in_id,
            organization_id=self.organization_id)


def get_early_access_features_opt_ins(opt_in_id: Optional[_builtins.str] = None,
                                      organization_id: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEarlyAccessFeaturesOptInsResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.organizations.get_early_access_features_opt_ins(organization_id="string")
    pulumi.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item)
    ```


    :param _builtins.str opt_in_id: optInId path parameter. Opt in ID
    :param _builtins.str organization_id: organizationId path parameter. Organization ID
    """
    __args__ = dict()
    __args__['optInId'] = opt_in_id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns', __args__, opts=opts, typ=GetEarlyAccessFeaturesOptInsResult).value

    return AwaitableGetEarlyAccessFeaturesOptInsResult(
        id=pulumi.get(__ret__, 'id'),
        item=pulumi.get(__ret__, 'item'),
        opt_in_id=pulumi.get(__ret__, 'opt_in_id'),
        organization_id=pulumi.get(__ret__, 'organization_id'))
def get_early_access_features_opt_ins_output(opt_in_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             organization_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetEarlyAccessFeaturesOptInsResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.organizations.get_early_access_features_opt_ins(organization_id="string")
    pulumi.export("merakiOrganizationsEarlyAccessFeaturesOptInsExample", example.item)
    ```


    :param _builtins.str opt_in_id: optInId path parameter. Opt in ID
    :param _builtins.str organization_id: organizationId path parameter. Organization ID
    """
    __args__ = dict()
    __args__['optInId'] = opt_in_id
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('meraki:organizations/getEarlyAccessFeaturesOptIns:getEarlyAccessFeaturesOptIns', __args__, opts=opts, typ=GetEarlyAccessFeaturesOptInsResult)
    return __ret__.apply(lambda __response__: GetEarlyAccessFeaturesOptInsResult(
        id=pulumi.get(__response__, 'id'),
        item=pulumi.get(__response__, 'item'),
        opt_in_id=pulumi.get(__response__, 'opt_in_id'),
        organization_id=pulumi.get(__response__, 'organization_id')))
