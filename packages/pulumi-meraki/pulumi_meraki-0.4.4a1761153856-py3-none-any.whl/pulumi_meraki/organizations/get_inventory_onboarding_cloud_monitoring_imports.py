# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInventoryOnboardingCloudMonitoringImportsResult',
    'AwaitableGetInventoryOnboardingCloudMonitoringImportsResult',
    'get_inventory_onboarding_cloud_monitoring_imports',
    'get_inventory_onboarding_cloud_monitoring_imports_output',
]

@pulumi.output_type
class GetInventoryOnboardingCloudMonitoringImportsResult:
    """
    A collection of values returned by getInventoryOnboardingCloudMonitoringImports.
    """
    def __init__(__self__, id=None, import_ids=None, items=None, organization_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if import_ids and not isinstance(import_ids, list):
            raise TypeError("Expected argument 'import_ids' to be a list")
        pulumi.set(__self__, "import_ids", import_ids)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="importIds")
    def import_ids(self) -> Sequence[_builtins.str]:
        """
        importIds query parameter. import ids from an imports
        """
        return pulumi.get(self, "import_ids")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetInventoryOnboardingCloudMonitoringImportsItemResult']:
        """
        Array of ResponseOrganizationsGetOrganizationInventoryOnboardingCloudMonitoringImports
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> _builtins.str:
        """
        organizationId path parameter. Organization ID
        """
        return pulumi.get(self, "organization_id")


class AwaitableGetInventoryOnboardingCloudMonitoringImportsResult(GetInventoryOnboardingCloudMonitoringImportsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInventoryOnboardingCloudMonitoringImportsResult(
            id=self.id,
            import_ids=self.import_ids,
            items=self.items,
            organization_id=self.organization_id)


def get_inventory_onboarding_cloud_monitoring_imports(import_ids: Optional[Sequence[_builtins.str]] = None,
                                                      organization_id: Optional[_builtins.str] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInventoryOnboardingCloudMonitoringImportsResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.organizations.get_inventory_onboarding_cloud_monitoring_imports(import_ids=["string"],
        organization_id="string")
    pulumi.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items)
    ```


    :param Sequence[_builtins.str] import_ids: importIds query parameter. import ids from an imports
    :param _builtins.str organization_id: organizationId path parameter. Organization ID
    """
    __args__ = dict()
    __args__['importIds'] = import_ids
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('meraki:organizations/getInventoryOnboardingCloudMonitoringImports:getInventoryOnboardingCloudMonitoringImports', __args__, opts=opts, typ=GetInventoryOnboardingCloudMonitoringImportsResult).value

    return AwaitableGetInventoryOnboardingCloudMonitoringImportsResult(
        id=pulumi.get(__ret__, 'id'),
        import_ids=pulumi.get(__ret__, 'import_ids'),
        items=pulumi.get(__ret__, 'items'),
        organization_id=pulumi.get(__ret__, 'organization_id'))
def get_inventory_onboarding_cloud_monitoring_imports_output(import_ids: Optional[pulumi.Input[Sequence[_builtins.str]]] = None,
                                                             organization_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetInventoryOnboardingCloudMonitoringImportsResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.organizations.get_inventory_onboarding_cloud_monitoring_imports(import_ids=["string"],
        organization_id="string")
    pulumi.export("merakiOrganizationsInventoryOnboardingCloudMonitoringImportsExample", example.items)
    ```


    :param Sequence[_builtins.str] import_ids: importIds query parameter. import ids from an imports
    :param _builtins.str organization_id: organizationId path parameter. Organization ID
    """
    __args__ = dict()
    __args__['importIds'] = import_ids
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('meraki:organizations/getInventoryOnboardingCloudMonitoringImports:getInventoryOnboardingCloudMonitoringImports', __args__, opts=opts, typ=GetInventoryOnboardingCloudMonitoringImportsResult)
    return __ret__.apply(lambda __response__: GetInventoryOnboardingCloudMonitoringImportsResult(
        id=pulumi.get(__response__, 'id'),
        import_ids=pulumi.get(__response__, 'import_ids'),
        items=pulumi.get(__response__, 'items'),
        organization_id=pulumi.get(__response__, 'organization_id')))
