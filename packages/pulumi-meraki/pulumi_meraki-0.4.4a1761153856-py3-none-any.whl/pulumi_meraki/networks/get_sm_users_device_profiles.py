# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSmUsersDeviceProfilesResult',
    'AwaitableGetSmUsersDeviceProfilesResult',
    'get_sm_users_device_profiles',
    'get_sm_users_device_profiles_output',
]

@pulumi.output_type
class GetSmUsersDeviceProfilesResult:
    """
    A collection of values returned by getSmUsersDeviceProfiles.
    """
    def __init__(__self__, id=None, items=None, network_id=None, user_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if items and not isinstance(items, list):
            raise TypeError("Expected argument 'items' to be a list")
        pulumi.set(__self__, "items", items)
        if network_id and not isinstance(network_id, str):
            raise TypeError("Expected argument 'network_id' to be a str")
        pulumi.set(__self__, "network_id", network_id)
        if user_id and not isinstance(user_id, str):
            raise TypeError("Expected argument 'user_id' to be a str")
        pulumi.set(__self__, "user_id", user_id)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def items(self) -> Sequence['outputs.GetSmUsersDeviceProfilesItemResult']:
        """
        Array of ResponseSmGetNetworkSmUserDeviceProfiles
        """
        return pulumi.get(self, "items")

    @_builtins.property
    @pulumi.getter(name="networkId")
    def network_id(self) -> _builtins.str:
        """
        networkId path parameter. Network ID
        """
        return pulumi.get(self, "network_id")

    @_builtins.property
    @pulumi.getter(name="userId")
    def user_id(self) -> _builtins.str:
        """
        userId path parameter. User ID
        """
        return pulumi.get(self, "user_id")


class AwaitableGetSmUsersDeviceProfilesResult(GetSmUsersDeviceProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSmUsersDeviceProfilesResult(
            id=self.id,
            items=self.items,
            network_id=self.network_id,
            user_id=self.user_id)


def get_sm_users_device_profiles(network_id: Optional[_builtins.str] = None,
                                 user_id: Optional[_builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSmUsersDeviceProfilesResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.networks.get_sm_users_device_profiles(network_id="string",
        user_id="string")
    pulumi.export("merakiNetworksSmUsersDeviceProfilesExample", example.items)
    ```


    :param _builtins.str network_id: networkId path parameter. Network ID
    :param _builtins.str user_id: userId path parameter. User ID
    """
    __args__ = dict()
    __args__['networkId'] = network_id
    __args__['userId'] = user_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('meraki:networks/getSmUsersDeviceProfiles:getSmUsersDeviceProfiles', __args__, opts=opts, typ=GetSmUsersDeviceProfilesResult).value

    return AwaitableGetSmUsersDeviceProfilesResult(
        id=pulumi.get(__ret__, 'id'),
        items=pulumi.get(__ret__, 'items'),
        network_id=pulumi.get(__ret__, 'network_id'),
        user_id=pulumi.get(__ret__, 'user_id'))
def get_sm_users_device_profiles_output(network_id: Optional[pulumi.Input[_builtins.str]] = None,
                                        user_id: Optional[pulumi.Input[_builtins.str]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSmUsersDeviceProfilesResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_meraki as meraki

    example = meraki.networks.get_sm_users_device_profiles(network_id="string",
        user_id="string")
    pulumi.export("merakiNetworksSmUsersDeviceProfilesExample", example.items)
    ```


    :param _builtins.str network_id: networkId path parameter. Network ID
    :param _builtins.str user_id: userId path parameter. User ID
    """
    __args__ = dict()
    __args__['networkId'] = network_id
    __args__['userId'] = user_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('meraki:networks/getSmUsersDeviceProfiles:getSmUsersDeviceProfiles', __args__, opts=opts, typ=GetSmUsersDeviceProfilesResult)
    return __ret__.apply(lambda __response__: GetSmUsersDeviceProfilesResult(
        id=pulumi.get(__response__, 'id'),
        items=pulumi.get(__response__, 'items'),
        network_id=pulumi.get(__response__, 'network_id'),
        user_id=pulumi.get(__response__, 'user_id')))
