
# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT

# The schema specifications for this file are documented here:
# https://github.com/cognizant-ai-lab/neuro-san/blob/main/docs/agent_hocon_reference.md

{
    # Optional metadata describing this agent network
    "metadata": {
        "description": "Simple agent network demonstrating use of temporary agent networks using Reservations",
        "tags": ["example", "reservations"],
    },

    "llm_config": {
        "model_name": "gpt-4o",
    },
    "tools": [
        # These tool definitions do not have to be in any particular order
        # How they are linked and call each other is defined within their
        # own specs.  This could be a graph, potentially even with cycles.

        # This first agent definition is regarded as the "Front Man", which
        # does all the talking to the outside world/client.
        # It is identified as such because it is either:
        #   A) The only one with no parameters in his function definition,
        #      and therefore he needs to talk to the outside world to get things rolling.
        #   B) The first agent listed, regardless of function parameters.
        #
        # Some disqualifications from being a front man:
        #   1) Cannot use a CodedTool "class" definition
        #   2) Cannot use a Tool "toolbox" definition
        {
            "name": "copy_cat",

            "function": {

                # The description acts as an initial prompt.
                "description": """
I am a test agent network that can make a copy of an existing agent on this server
and deploy it as a temporary agent.  Also, if you give me some input text for the
new temporary agent, I can immediately call it, but that is optional.

What is the name of the agent you want to copy?
"""
            },

            "instructions": """
Always call the copyist tool to copy the agent network referred to by the user input.
Return verbatim whatever it returns.
If there is an error or list of errors, report that.
""",
            "tools": ["copyist"],

            "allow": {
                "to_upstream": {
                    # Specifying this allows sly_data keys from this network to be passed back
                    # to the calling client
                    "sly_data": ["agent_reservations"]
                }
            }
        },

        # The copyist is a low-level CodedTool and does not call anyone else.
        # He is called by the front-man.
        {
            "name": "copyist",
            "function": {
                "description": """
Takes a given agent network name and copies it as a temporary network.
If the call_text argument is given, the temporary network will be immediately called with the text provided.
""",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "agent_name": {
                            "type": "string",
                            "description": "The name of the agent to copy"
                        },
                        "call_text": {
                            "type": "string",
                            "description": "The text with which to call the copied agent immediately."
                        }
                    },
                    "required": ["agent_name"]
                }
            },
            "class": "copyist.Copyist",
            "allow": {
                "reservations": True
            }
        }
    ]
}
