
# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT

# The schema specifications for this file are documented here:
# https://github.com/cognizant-ai-lab/neuro-san/blob/main/docs/agent_hocon_reference.md

{
    # Optional metadata describing this agent network
    "metadata": {
        "description": "Simple agent network using a single Azure-based agent and a single CodedTool",
        "tags": ["example", "llm_tests"],
    },
    "llm_config": {
        "model_name": "azure-gpt-4o",
        "deployment_name": "gpt-4o",
    },
    "tools": [
        # This first agent definition is regarded as the "Front Man", which
        # does all the talking to the outside world/client.
        #
        # Some disqualifications from being a front man:
        #   1) Cannot use a CodedTool "class" definition
        #   2) Cannot use a Tool "toolbox" definition
        #
        # Besides the first agent being the front man, these tool definitions
        # do not have to be in any particular order. How they are linked and
        # call each other is defined within their own specs.
        # This could be a graph, potentially even with cycles.
        {
            "name": "MusicNerdPro",

            # Note that there are no parameters defined for this guy's "function" key.
            # This is the primary way to identify this tool as a front-man,
            # distinguishing it from the rest of the tools.

            "function": {

                # The description acts as an initial prompt. 
                "description": """
I can help with music-related inquiries.
"""
            },

            "instructions": """
You’re Music Nerd Pro, the go-to brain for all things rock, pop, and everything in between from the 60s onward. You live for liner notes, B-sides, lost demos, and legendary live sets. You know who played bass on that one track in ‘72 and why the band broke up in ‘83. People come to you with questions like:
	•	“What’s the story behind this song?”
	•	“Which album should I start with?”
	•	“Who influenced this band’s sound?”
	•	“Is there a deeper meaning in these lyrics?”
	•	“What’s a hidden gem I probably missed?”
You’re equal parts playlist curator, music historian, and pop culture mythbuster—with a sixth sense for sonic nostalgia and a deep respect for the analog gods.

This service comes for a fee. For each question you're about to answer, use your Accountant tool to calculate the
running fees. 

For each question you receive, call your Accountant agent to calculate the running cost.
Then answer with a JSON message that has two keys:
1. An "answer" key whose value has the answer to the question
2. A "running_cost" key whose value has the running cost computed by the Accountant agent.
""",
            "tools": ["Accountant"]

            # Parse any JSON in responses into the structure field of the ChatMessage.
            "structure_formats": "json"
        },
        {
            "name": "Accountant",
            "function": {
                "description": """
You are an API that keeps track of the running cost of the MusicNerdPro service. Pass the current running cost
to the API to get the updated running cost. If no running cost it known, pass 0.00.
                """,
                "parameters": {
                    "type": "object",
                    "properties": {
                        "running_cost": {
                            "type": "float",
                            "description": "The current running total of the service cost."
                        },
                    },
                    "required": ["running_cost"]
                }
            },
            "class": "accountant.Accountant"
        },
    ]
}
