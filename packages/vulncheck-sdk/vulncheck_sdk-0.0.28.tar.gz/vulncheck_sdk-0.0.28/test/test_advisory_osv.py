# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_osv import AdvisoryOSV

class TestAdvisoryOSV(unittest.TestCase):
    """AdvisoryOSV unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryOSV:
        """Test AdvisoryOSV
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryOSV`
        """
        model = AdvisoryOSV()
        if include_optional:
            return AdvisoryOSV(
                cve = [
                    ''
                    ],
                date_added = '',
                date_updated = '',
                osv = vulncheck_sdk.models.advisory/osv_obj.advisory.OSVObj(
                    affected = [
                        vulncheck_sdk.models.advisory/affected.advisory.Affected(
                            database_specific = vulncheck_sdk.models.database_specific.database_specific(), 
                            ecosystem_specific = vulncheck_sdk.models.ecosystem_specific.ecosystem_specific(), 
                            package = vulncheck_sdk.models.advisory/osv_package.advisory.OSVPackage(
                                ecosystem = '', 
                                name = '', 
                                purl = '', ), 
                            ranges = [
                                vulncheck_sdk.models.advisory/range.advisory.Range(
                                    events = [
                                        vulncheck_sdk.models.advisory/event.advisory.Event(
                                            fixed = '', 
                                            introduced = '', 
                                            last_affected = '', 
                                            limit = '', )
                                        ], 
                                    repo = '', 
                                    type = '', )
                                ], 
                            severity = [
                                vulncheck_sdk.models.advisory/severity.advisory.Severity(
                                    score = '', 
                                    type = '', )
                                ], 
                            versions = [
                                ''
                                ], )
                        ], 
                    aliases = [
                        ''
                        ], 
                    details = '', 
                    id = '', 
                    modified = '', 
                    published = '', 
                    references = [
                        vulncheck_sdk.models.advisory/osv_reference.advisory.OSVReference(
                            type = '', 
                            url = '', )
                        ], 
                    related = [
                        ''
                        ], 
                    summary = '', 
                    withdrawn = '', ),
                summary = '',
                title = '',
                url = ''
            )
        else:
            return AdvisoryOSV(
        )
        """

    def testAdvisoryOSV(self):
        """Test AdvisoryOSV"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
