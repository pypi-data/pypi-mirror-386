# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.api_oss_package import ApiOSSPackage

class TestApiOSSPackage(unittest.TestCase):
    """ApiOSSPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiOSSPackage:
        """Test ApiOSSPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiOSSPackage`
        """
        model = ApiOSSPackage()
        if include_optional:
            return ApiOSSPackage(
                artifacts = vulncheck_sdk.models.api/oss_package_artifacts.api.OSSPackageArtifacts(
                    binary = [
                        vulncheck_sdk.models.api/oss_package_download_info.api.OSSPackageDownloadInfo(
                            hashes = [
                                vulncheck_sdk.models.api/oss_package_hash_info.api.OSSPackageHashInfo(
                                    algorithm = '', 
                                    type = '', 
                                    value = '', )
                                ], 
                            reference = '', 
                            type = '', 
                            url = '', )
                        ], 
                    source = [
                        vulncheck_sdk.models.api/oss_package_download_info.api.OSSPackageDownloadInfo(
                            reference = '', 
                            type = '', 
                            url = '', )
                        ], ),
                cves = [
                    ''
                    ],
                licenses = [
                    ''
                    ],
                name = '',
                published_date = '',
                purl = [
                    ''
                    ],
                research_attributes = vulncheck_sdk.models.api/oss_package_research_attributes.api.OSSPackageResearchAttributes(
                    abandoned = True, 
                    eol = True, 
                    is_malicious = True, 
                    malicious_source = '', 
                    repo_hijackable = True, 
                    squatted_package = '', ),
                version = '',
                vulnerabilities = [
                    vulncheck_sdk.models.api/oss_package_vulnerability.api.OSSPackageVulnerability(
                        detection = '', 
                        fixed_version = '', )
                    ]
            )
        else:
            return ApiOSSPackage(
        )
        """

    def testApiOSSPackage(self):
        """Test ApiOSSPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
