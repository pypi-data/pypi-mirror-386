# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_alma_linux_update import AdvisoryAlmaLinuxUpdate

class TestAdvisoryAlmaLinuxUpdate(unittest.TestCase):
    """AdvisoryAlmaLinuxUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryAlmaLinuxUpdate:
        """Test AdvisoryAlmaLinuxUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryAlmaLinuxUpdate`
        """
        model = AdvisoryAlmaLinuxUpdate()
        if include_optional:
            return AdvisoryAlmaLinuxUpdate(
                bs_repo_id = vulncheck_sdk.models.advisory/alma_object_id.advisory.AlmaObjectID(
                    __oid = '', ),
                cve = [
                    ''
                    ],
                date_added = '',
                description = '',
                fromstr = '',
                id = vulncheck_sdk.models.advisory/alma_object_id.advisory.AlmaObjectID(
                    __oid = '', ),
                issued_date = vulncheck_sdk.models.advisory/alma_date.advisory.AlmaDate(
                    __date = 56, ),
                pkglist = vulncheck_sdk.models.advisory/alma_package_list.advisory.AlmaPackageList(
                    name = '', 
                    packages = [
                        vulncheck_sdk.models.advisory/alma_package.advisory.AlmaPackage(
                            arch = '', 
                            epoch = '', 
                            filename = '', 
                            name = '', 
                            reboot_suggested = 56, 
                            release = '', 
                            source = '', 
                            sum = '', 
                            version = '', )
                        ], 
                    shortname = '', ),
                pushcount = '',
                references = [
                    vulncheck_sdk.models.advisory/alma_reference.advisory.AlmaReference(
                        href = '', 
                        id = '', 
                        title = '', 
                        type = '', )
                    ],
                release = '',
                rights = '',
                severity = '',
                solution = '',
                status = '',
                summary = '',
                title = '',
                type = '',
                update_url = '',
                updated_date = vulncheck_sdk.models.advisory/alma_date.advisory.AlmaDate(
                    __date = 56, ),
                updateinfo_id = '',
                version = ''
            )
        else:
            return AdvisoryAlmaLinuxUpdate(
        )
        """

    def testAdvisoryAlmaLinuxUpdate(self):
        """Test AdvisoryAlmaLinuxUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
