# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_sonic_wall_advisory import AdvisorySonicWallAdvisory

class TestAdvisorySonicWallAdvisory(unittest.TestCase):
    """AdvisorySonicWallAdvisory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisorySonicWallAdvisory:
        """Test AdvisorySonicWallAdvisory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisorySonicWallAdvisory`
        """
        model = AdvisorySonicWallAdvisory()
        if include_optional:
            return AdvisorySonicWallAdvisory(
                advisory_id = '',
                affected_products = [
                    ''
                    ],
                cve = [
                    ''
                    ],
                cvss = '',
                cvss_vector = '',
                cvss_version = 1.337,
                cwe = '',
                date_added = '',
                impact = '',
                is_workaround_available = True,
                last_updated_when = '',
                published_when = '',
                summary = '',
                title = '',
                url = '',
                vuln_status = '',
                vulnerable_products_list = [
                    ''
                    ]
            )
        else:
            return AdvisorySonicWallAdvisory(
        )
        """

    def testAdvisorySonicWallAdvisory(self):
        """Test AdvisorySonicWallAdvisory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
