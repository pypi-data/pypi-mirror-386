# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_vulnerable_debian_package import AdvisoryVulnerableDebianPackage

class TestAdvisoryVulnerableDebianPackage(unittest.TestCase):
    """AdvisoryVulnerableDebianPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryVulnerableDebianPackage:
        """Test AdvisoryVulnerableDebianPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryVulnerableDebianPackage`
        """
        model = AdvisoryVulnerableDebianPackage()
        if include_optional:
            return AdvisoryVulnerableDebianPackage(
                associated_cves = [
                    vulncheck_sdk.models.advisory/debian_cve.advisory.DebianCVE(
                        cve = '', 
                        debianbug = 56, 
                        description = '', 
                        releases = [
                            vulncheck_sdk.models.advisory/affected_debian_release.advisory.AffectedDebianRelease(
                                fixed_version = '', 
                                nodsa = '', 
                                nodsa_reason = '', 
                                release_name = '', 
                                repositories = [
                                    vulncheck_sdk.models.advisory/affected_debian_repository.advisory.AffectedDebianRepository(
                                        repository_name = '', 
                                        version = '', )
                                    ], 
                                status = '', 
                                urgency = '', )
                            ], 
                        scope = '', 
                        url = '', )
                    ],
                cve = [
                    ''
                    ],
                package_name = ''
            )
        else:
            return AdvisoryVulnerableDebianPackage(
        )
        """

    def testAdvisoryVulnerableDebianPackage(self):
        """Test AdvisoryVulnerableDebianPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
