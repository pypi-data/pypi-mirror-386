# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_zdi import AdvisoryZDI

class TestAdvisoryZDI(unittest.TestCase):
    """AdvisoryZDI unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryZDI:
        """Test AdvisoryZDI
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryZDI`
        """
        model = AdvisoryZDI()
        if include_optional:
            return AdvisoryZDI(
                cves = [
                    ''
                    ],
                cvss_score = '',
                cvss_vector = '',
                cvss_version = '',
                discoverers = [
                    ''
                    ],
                filter_ids_dv = [
                    ''
                    ],
                last_updated_at = '',
                products = [
                    vulncheck_sdk.models.advisory/zdi_product.advisory.ZDIProduct(
                        name = '', 
                        uri = '', 
                        vendor = vulncheck_sdk.models.advisory/zdi_vendor.advisory.ZDIVendor(
                            name = '', 
                            uri = '', ), )
                    ],
                public_advisory = '',
                published_date = '',
                responses = [
                    vulncheck_sdk.models.advisory/zdi_response.advisory.ZDIResponse(
                        text = '', 
                        uri = '', 
                        vendor = vulncheck_sdk.models.advisory/zdi_response_vendor.advisory.ZDIResponseVendor(
                            name = '', ), )
                    ],
                title = '',
                zdi_can = '',
                zdi_public = ''
            )
        else:
            return AdvisoryZDI(
        )
        """

    def testAdvisoryZDI(self):
        """Test AdvisoryZDI"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
