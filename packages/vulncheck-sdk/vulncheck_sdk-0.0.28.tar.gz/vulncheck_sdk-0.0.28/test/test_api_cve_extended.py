# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.api_cve_extended import ApiCVEExtended

class TestApiCVEExtended(unittest.TestCase):
    """ApiCVEExtended unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiCVEExtended:
        """Test ApiCVEExtended
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiCVEExtended`
        """
        model = ApiCVEExtended()
        if include_optional:
            return ApiCVEExtended(
                cve_data_meta = vulncheck_sdk.models.api/cve_data_meta_extended.api.CVEDataMetaExtended(
                    alias = '', 
                    assigner = '', 
                    id = '', 
                    status = '', ),
                categorization = vulncheck_sdk.models.api/categorization_extended.api.CategorizationExtended(
                    tags = [
                        ''
                        ], ),
                data_format = '',
                data_type = '',
                data_version = '',
                description = vulncheck_sdk.models.api/description.api.Description(
                    description_data = [
                        vulncheck_sdk.models.api/description_data.api.DescriptionData(
                            lang = '', 
                            value = '', )
                        ], ),
                problemtype = vulncheck_sdk.models.api/problem_type_extended.api.ProblemTypeExtended(
                    problemtype_data = [
                        vulncheck_sdk.models.api/problem_type_data_extended.api.ProblemTypeDataExtended(
                            description = [
                                vulncheck_sdk.models.api/problem_type_description_extended.api.ProblemTypeDescriptionExtended(
                                    lang = '', 
                                    name = '', 
                                    url = '', 
                                    value = '', )
                                ], )
                        ], ),
                references = vulncheck_sdk.models.api/references_extended.api.ReferencesExtended(
                    reference_data = [
                        vulncheck_sdk.models.api/reference_data_extended.api.ReferenceDataExtended(
                            date_added = '', 
                            external_id = '', 
                            lang = '', 
                            name = '', 
                            previous_url = '', 
                            refsource = '', 
                            status = '', 
                            tags = [
                                ''
                                ], 
                            url = '', )
                        ], )
            )
        else:
            return ApiCVEExtended(
        )
        """

    def testApiCVEExtended(self):
        """Test ApiCVEExtended"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
