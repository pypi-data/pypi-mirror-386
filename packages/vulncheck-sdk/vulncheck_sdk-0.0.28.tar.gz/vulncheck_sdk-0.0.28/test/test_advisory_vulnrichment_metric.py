# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_vulnrichment_metric import AdvisoryVulnrichmentMetric

class TestAdvisoryVulnrichmentMetric(unittest.TestCase):
    """AdvisoryVulnrichmentMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryVulnrichmentMetric:
        """Test AdvisoryVulnrichmentMetric
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryVulnrichmentMetric`
        """
        model = AdvisoryVulnrichmentMetric()
        if include_optional:
            return AdvisoryVulnrichmentMetric(
                other = vulncheck_sdk.models.advisory/vulnrichment_other.advisory.VulnrichmentOther(
                    content = vulncheck_sdk.models.advisory/vulnrichment_content.advisory.VulnrichmentContent(
                        id = '', 
                        options = [
                            vulncheck_sdk.models.advisory/vulnrichment_option.advisory.VulnrichmentOption(
                                automatable = '', 
                                exploitation = '', 
                                technical_impact = '', )
                            ], 
                        role = '', 
                        timestamp = '', 
                        version = '', ), 
                    type = '', )
            )
        else:
            return AdvisoryVulnrichmentMetric(
        )
        """

    def testAdvisoryVulnrichmentMetric(self):
        """Test AdvisoryVulnrichmentMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
