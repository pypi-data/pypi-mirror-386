# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_ip_intel_record import AdvisoryIpIntelRecord

class TestAdvisoryIpIntelRecord(unittest.TestCase):
    """AdvisoryIpIntelRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryIpIntelRecord:
        """Test AdvisoryIpIntelRecord
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryIpIntelRecord`
        """
        model = AdvisoryIpIntelRecord()
        if include_optional:
            return AdvisoryIpIntelRecord(
                asn = '',
                city = '',
                country = '',
                country_code = '',
                cve = [
                    ''
                    ],
                feed_ids = [
                    ''
                    ],
                hostnames = [
                    ''
                    ],
                ip = '',
                last_seen = '',
                matches = [
                    ''
                    ],
                port = 56,
                ssl = True,
                type = vulncheck_sdk.models.advisory/record_type.advisory.RecordType(
                    finding = '', 
                    id = '', 
                    kind = '', )
            )
        else:
            return AdvisoryIpIntelRecord(
        )
        """

    def testAdvisoryIpIntelRecord(self):
        """Test AdvisoryIpIntelRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
