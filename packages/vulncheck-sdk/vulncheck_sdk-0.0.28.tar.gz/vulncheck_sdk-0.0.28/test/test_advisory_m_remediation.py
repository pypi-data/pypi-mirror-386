# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_m_remediation import AdvisoryMRemediation

class TestAdvisoryMRemediation(unittest.TestCase):
    """AdvisoryMRemediation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryMRemediation:
        """Test AdvisoryMRemediation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryMRemediation`
        """
        model = AdvisoryMRemediation()
        if include_optional:
            return AdvisoryMRemediation(
                affected_files = [
                    vulncheck_sdk.models.advisory/affected_file.advisory.AffectedFile(
                        file_last_modified = '', 
                        file_name = '', )
                    ],
                var_date = '',
                date_specified = True,
                description = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                    value = '', ),
                fixed_build = '',
                product_id = [
                    ''
                    ],
                restart_required = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                    value = '', ),
                sub_type = '',
                type = 56,
                url = '',
                supercedence = ''
            )
        else:
            return AdvisoryMRemediation(
        )
        """

    def testAdvisoryMRemediation(self):
        """Test AdvisoryMRemediation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
