# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_sigma_rule_rule import AdvisorySigmaRuleRule

class TestAdvisorySigmaRuleRule(unittest.TestCase):
    """AdvisorySigmaRuleRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisorySigmaRuleRule:
        """Test AdvisorySigmaRuleRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisorySigmaRuleRule`
        """
        model = AdvisorySigmaRuleRule()
        if include_optional:
            return AdvisorySigmaRuleRule(
                author = '',
                var_date = '',
                description = '',
                detection = { },
                false_positives = [
                    ''
                    ],
                fields = [
                    ''
                    ],
                id = '',
                level = '',
                logsource = vulncheck_sdk.models.advisory/log_source.advisory.LogSource(
                    category = '', 
                    definition = '', 
                    product = '', 
                    service = '', ),
                modified = '',
                references = [
                    ''
                    ],
                related = [
                    vulncheck_sdk.models.advisory/related_rule.advisory.RelatedRule(
                        id = '', 
                        type = '', )
                    ],
                status = '',
                tags = [
                    ''
                    ],
                title = ''
            )
        else:
            return AdvisorySigmaRuleRule(
        )
        """

    def testAdvisorySigmaRuleRule(self):
        """Test AdvisorySigmaRuleRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
