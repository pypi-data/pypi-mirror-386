# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_siemens_vulnerability import AdvisorySiemensVulnerability

class TestAdvisorySiemensVulnerability(unittest.TestCase):
    """AdvisorySiemensVulnerability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisorySiemensVulnerability:
        """Test AdvisorySiemensVulnerability
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisorySiemensVulnerability`
        """
        model = AdvisorySiemensVulnerability()
        if include_optional:
            return AdvisorySiemensVulnerability(
                cve = '',
                cwe = vulncheck_sdk.models.advisory/siemens_cwe.advisory.SiemensCWE(
                    id = '', 
                    name = '', ),
                notes = [
                    vulncheck_sdk.models.advisory/siemens_notes.advisory.SiemensNotes(
                        category = '', 
                        text = '', 
                        title = '', )
                    ],
                product_status = vulncheck_sdk.models.advisory/siemens_product_status.advisory.SiemensProductStatus(
                    known_affected = [
                        ''
                        ], ),
                references = [
                    vulncheck_sdk.models.advisory/siemens_references.advisory.SiemensReferences(
                        category = '', 
                        summary = '', 
                        url = '', )
                    ],
                remediations = [
                    vulncheck_sdk.models.advisory/siemens_remediation.advisory.SiemensRemediation(
                        category = '', 
                        details = '', 
                        product_ids = [
                            ''
                            ], 
                        url = '', )
                    ],
                scores = [
                    vulncheck_sdk.models.advisory/siemens_score.advisory.SiemensScore(
                        cvss_v3 = vulncheck_sdk.models.advisory/siemens_cvssv3.advisory.SiemensCVSSV3(
                            base_score = 1.337, 
                            base_severity = '', 
                            vector_string = '', 
                            version = '', ), 
                        products = [
                            ''
                            ], )
                    ],
                title = ''
            )
        else:
            return AdvisorySiemensVulnerability(
        )
        """

    def testAdvisorySiemensVulnerability(self):
        """Test AdvisorySiemensVulnerability"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
