# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.api_base_metric_v2 import ApiBaseMetricV2

class TestApiBaseMetricV2(unittest.TestCase):
    """ApiBaseMetricV2 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiBaseMetricV2:
        """Test ApiBaseMetricV2
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiBaseMetricV2`
        """
        model = ApiBaseMetricV2()
        if include_optional:
            return ApiBaseMetricV2(
                ac_insuf_info = True,
                cvss_v2 = vulncheck_sdk.models.api/cvssv2.api.CVSSV2(
                    access_complexity = '', 
                    access_vector = '', 
                    authentication = '', 
                    availability_impact = '', 
                    base_score = 1.337, 
                    confidentiality_impact = '', 
                    integrity_impact = '', 
                    vector_string = '', 
                    version = '', ),
                exploitability_score = 1.337,
                impact_score = 1.337,
                obtain_all_privilege = True,
                obtain_other_privilege = True,
                obtain_user_privilege = True,
                severity = '',
                user_interaction_required = True
            )
        else:
            return ApiBaseMetricV2(
        )
        """

    def testApiBaseMetricV2(self):
        """Test ApiBaseMetricV2"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
