# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_siemens_tracking import AdvisorySiemensTracking

class TestAdvisorySiemensTracking(unittest.TestCase):
    """AdvisorySiemensTracking unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisorySiemensTracking:
        """Test AdvisorySiemensTracking
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisorySiemensTracking`
        """
        model = AdvisorySiemensTracking()
        if include_optional:
            return AdvisorySiemensTracking(
                current_release_date = '',
                generator = vulncheck_sdk.models.advisory/siemens_generator.advisory.SiemensGenerator(
                    engine = vulncheck_sdk.models.advisory/siemens_engine.advisory.SiemensEngine(
                        name = '', 
                        version = '', ), ),
                id = '',
                initial_release_date = '',
                revision_history = [
                    vulncheck_sdk.models.advisory/siemens_revision_history.advisory.SiemensRevisionHistory(
                        date = '', 
                        legacy_version = '', 
                        number = '', 
                        summary = '', )
                    ],
                status = '',
                version = ''
            )
        else:
            return AdvisorySiemensTracking(
        )
        """

    def testAdvisorySiemensTracking(self):
        """Test AdvisorySiemensTracking"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
