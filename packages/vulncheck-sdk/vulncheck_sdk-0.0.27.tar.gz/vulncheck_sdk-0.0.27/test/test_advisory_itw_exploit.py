# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_itw_exploit import AdvisoryITWExploit

class TestAdvisoryITWExploit(unittest.TestCase):
    """AdvisoryITWExploit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryITWExploit:
        """Test AdvisoryITWExploit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryITWExploit`
        """
        model = AdvisoryITWExploit()
        if include_optional:
            return AdvisoryITWExploit(
                advisory = '',
                affected_versions = '',
                analysis_url = '',
                bug_introducing_change_list_url = '',
                claimed_attribution = '',
                claimed_attribution_url = '',
                cve = [
                    ''
                    ],
                date_added = '',
                date_discovered = '',
                date_patched = '',
                description = '',
                first_patched_version = '',
                patch_change_list_url = '',
                product = '',
                reported_by = '',
                root_cause_analysis_url = '',
                vendor = '',
                vulnerability_type = ''
            )
        else:
            return AdvisoryITWExploit(
        )
        """

    def testAdvisoryITWExploit(self):
        """Test AdvisoryITWExploit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
