# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_m_document_tracking import AdvisoryMDocumentTracking

class TestAdvisoryMDocumentTracking(unittest.TestCase):
    """AdvisoryMDocumentTracking unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryMDocumentTracking:
        """Test AdvisoryMDocumentTracking
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryMDocumentTracking`
        """
        model = AdvisoryMDocumentTracking()
        if include_optional:
            return AdvisoryMDocumentTracking(
                current_release_date = '',
                initial_release_date = '',
                identification = vulncheck_sdk.models.advisory/m_identification.advisory.MIdentification(
                    alias = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                        value = '', ), 
                    id = vulncheck_sdk.models.advisory/i_val.advisory.IVal(
                        value = '', ), ),
                revisionhistory = [
                    vulncheck_sdk.models.advisory/r_revision.advisory.RRevision(
                        date = '', 
                        description = vulncheck_sdk.models.advisory/r_description.advisory.RDescription(
                            value = '', ), 
                        number = '', )
                    ],
                status = 56,
                version = ''
            )
        else:
            return AdvisoryMDocumentTracking(
        )
        """

    def testAdvisoryMDocumentTracking(self):
        """Test AdvisoryMDocumentTracking"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
