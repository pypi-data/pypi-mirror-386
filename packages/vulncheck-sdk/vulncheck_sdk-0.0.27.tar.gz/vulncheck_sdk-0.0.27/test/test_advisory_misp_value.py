# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_misp_value import AdvisoryMispValue

class TestAdvisoryMispValue(unittest.TestCase):
    """AdvisoryMispValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryMispValue:
        """Test AdvisoryMispValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryMispValue`
        """
        model = AdvisoryMispValue()
        if include_optional:
            return AdvisoryMispValue(
                description = '',
                meta = vulncheck_sdk.models.advisory/misp_meta.advisory.MispMeta(
                    attribution_confidence = '', 
                    cfr_suspected_state_sponsor = '', 
                    cfr_suspected_victims = [
                        ''
                        ], 
                    cfr_target_category = [
                        ''
                        ], 
                    cfr_type_of_incident = [
                        ''
                        ], 
                    country = '', 
                    refs = [
                        ''
                        ], 
                    synonyms = [
                        ''
                        ], ),
                related = [
                    vulncheck_sdk.models.advisory/misp_related_item.advisory.MispRelatedItem(
                        dest_uuid = '', 
                        tags = [
                            ''
                            ], 
                        type = '', )
                    ],
                uuid = '',
                value = ''
            )
        else:
            return AdvisoryMispValue(
        )
        """

    def testAdvisoryMispValue(self):
        """Test AdvisoryMispValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
