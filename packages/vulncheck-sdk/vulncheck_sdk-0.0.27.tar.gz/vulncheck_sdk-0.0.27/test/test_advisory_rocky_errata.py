# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_rocky_errata import AdvisoryRockyErrata

class TestAdvisoryRockyErrata(unittest.TestCase):
    """AdvisoryRockyErrata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryRockyErrata:
        """Test AdvisoryRockyErrata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryRockyErrata`
        """
        model = AdvisoryRockyErrata()
        if include_optional:
            return AdvisoryRockyErrata(
                advisory = vulncheck_sdk.models.advisory/rocky_advisory.advisory.RockyAdvisory(
                    affected_products = [
                        ''
                        ], 
                    build_references = [
                        ''
                        ], 
                    cves = [
                        vulncheck_sdk.models.advisory/rocky_cve.advisory.RockyCve(
                            cvss3_base_score = '', 
                            cvss3_scoring_vector = '', 
                            cwe = '', 
                            name = '', 
                            source_by = '', 
                            source_link = '', )
                        ], 
                    description = '', 
                    fixes = [
                        vulncheck_sdk.models.advisory/rocky_fix.advisory.RockyFix(
                            description = '', 
                            source_by = '', 
                            source_link = '', 
                            ticket = '', )
                        ], 
                    name = '', 
                    published_at = '', 
                    reboot_suggested = True, 
                    references = [
                        ''
                        ], 
                    rpms = {
                        'key' : vulncheck_sdk.models.advisory/rocky_version.advisory.RockyVersion(
                            nvras = [
                                ''
                                ], )
                        }, 
                    severity = '', 
                    short_code = '', 
                    solution = '', 
                    synopsis = '', 
                    topic = '', 
                    type = '', ),
                cve = [
                    ''
                    ],
                date_added = '',
                packages = [
                    vulncheck_sdk.models.advisory/rocky_package.advisory.RockyPackage(
                        distro = '', 
                        name = '', 
                        version = '', )
                    ],
                url = ''
            )
        else:
            return AdvisoryRockyErrata(
        )
        """

    def testAdvisoryRockyErrata(self):
        """Test AdvisoryRockyErrata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
