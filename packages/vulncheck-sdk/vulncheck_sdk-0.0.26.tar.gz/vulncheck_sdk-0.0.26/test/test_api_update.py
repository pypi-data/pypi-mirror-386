# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.api_update import ApiUpdate

class TestApiUpdate(unittest.TestCase):
    """ApiUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiUpdate:
        """Test ApiUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiUpdate`
        """
        model = ApiUpdate()
        if include_optional:
            return ApiUpdate(
                cve = [
                    ''
                    ],
                date_added = '',
                description = '',
                id = '',
                issued = vulncheck_sdk.models.api/date_time.api.DateTime(
                    date = '', ),
                os_arch = '',
                os_version = '',
                packages = [
                    vulncheck_sdk.models.api/package.api.Package(
                        filename = '', 
                        name = '', 
                        release = '', 
                        src = '', 
                        version = '', )
                    ],
                references = [
                    vulncheck_sdk.models.api/reference.api.Reference(
                        href = '', 
                        id = '', 
                        title = '', 
                        type = '', )
                    ],
                severity = '',
                title = '',
                type = '',
                updated = vulncheck_sdk.models.api/date_time.api.DateTime(
                    date = '', )
            )
        else:
            return ApiUpdate(
        )
        """

    def testApiUpdate(self):
        """Test ApiUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
