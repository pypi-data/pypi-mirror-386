# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.v3controllers_purl_response_metadata import V3controllersPurlResponseMetadata

class TestV3controllersPurlResponseMetadata(unittest.TestCase):
    """V3controllersPurlResponseMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V3controllersPurlResponseMetadata:
        """Test V3controllersPurlResponseMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V3controllersPurlResponseMetadata`
        """
        model = V3controllersPurlResponseMetadata()
        if include_optional:
            return V3controllersPurlResponseMetadata(
                purl_struct = vulncheck_sdk.models.purl/package_urljson.purl.PackageURLJSON(
                    name = '', 
                    namespace = '', 
                    qualifiers = [
                        vulncheck_sdk.models.purl/qualifier_json.purl.QualifierJSON(
                            key = '', 
                            value = '', )
                        ], 
                    subpath = '', 
                    type = '', 
                    version = '', ),
                timestamp = '',
                total_documents = 56
            )
        else:
            return V3controllersPurlResponseMetadata(
        )
        """

    def testV3controllersPurlResponseMetadata(self):
        """Test V3controllersPurlResponseMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
