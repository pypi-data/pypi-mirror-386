# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_gitlab_advisory import AdvisoryGitlabAdvisory

class TestAdvisoryGitlabAdvisory(unittest.TestCase):
    """AdvisoryGitlabAdvisory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryGitlabAdvisory:
        """Test AdvisoryGitlabAdvisory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryGitlabAdvisory`
        """
        model = AdvisoryGitlabAdvisory()
        if include_optional:
            return AdvisoryGitlabAdvisory(
                affected_range = '',
                affected_versions = '',
                cve = [
                    ''
                    ],
                cvss_v2 = '',
                cvss_v3 = '',
                cwe = [
                    ''
                    ],
                var_date = '',
                date_added = '',
                description = '',
                filename = '',
                fixed_versions = [
                    ''
                    ],
                ghsa = [
                    ''
                    ],
                gitlab_url = '',
                identifier = '',
                identifiers = [
                    ''
                    ],
                not_impacted = '',
                package_manager = '',
                package_name = '',
                package_slug = '',
                pubdate = '',
                solution = '',
                title = '',
                urls = [
                    ''
                    ],
                uuid = ''
            )
        else:
            return AdvisoryGitlabAdvisory(
        )
        """

    def testAdvisoryGitlabAdvisory(self):
        """Test AdvisoryGitlabAdvisory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
