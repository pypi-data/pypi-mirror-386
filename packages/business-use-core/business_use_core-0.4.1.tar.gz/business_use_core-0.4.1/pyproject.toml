[project]
name = "business-use-core"
version = "0.4.1"
description = "Business-Use Core CLI"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Desplega AI", email = "contact@desplega.ai"}
]
maintainers = [
    {name = "Desplega AI", email = "contact@desplega.ai"}
]
keywords = ["workflow", "automation", "testing", "event-driven"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi[standard]>=0.119.1",
    "pydantic>=2.12.3",
    "sqlmodel>=0.0.27",
    "aiosqlite>=0.20.0",
    "asyncpg>=0.30.0",
    "alembic>=1.15.0",
    "click>=8.1.0",
    "bubus>=1.5.6",
    "greenlet>=3.0.0",
    "uuid>=1.30",
    "httpx>=0.27.0",
    "pyyaml>=6.0.0",
    "questionary>=2.1.0",
]

[project.urls]
Homepage = "https://github.com/desplega-ai/business-use"
Documentation = "https://github.com/desplega-ai/business-use#readme"
Repository = "https://github.com/desplega-ai/business-use"
Issues = "https://github.com/desplega-ai/business-use/issues"
Changelog = "https://github.com/desplega-ai/business-use/releases"

[dependency-groups]
dev = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.0.0",
    "types-pyyaml>=6.0.12.20250915",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
business-use-core = "src.cli:main"
business-use = "src.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "src/**/*.py",
    "src/migrations/**",
    "alembic.ini",
    "config.yaml.example",
    "README.md",
    "LICENSE",
]
exclude = [
    "*.pyc",
    "__pycache__",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "scripts/**",
    "tests/**",
]

[tool.ruff]
line-length = 88
target-version = "py314"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.14"
warn_return_any = true
warn_unused_configs = true
# disallow_untyped_defs = false
disallow_any_generics = true
# check_untyped_defs = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
show_error_codes = true
exclude = ["scripts/"]

# Allow some flexibility for SQLModel/Pydantic
[[tool.mypy.overrides]]
module = [
    "sqlmodel",
    "sqlalchemy.*",
    "alembic.*",
    "bubus.*",
]
ignore_missing_imports = true
