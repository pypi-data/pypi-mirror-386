[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.30.0"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# CI backends to support
ci = "github"
# Whether CI should include auto-generated code to build local artifacts
build-local-artifacts = false
# Whether CI should trigger releases with dispatches instead of tag pushes
dispatch-releases = true
# Which actions to run on pull requests
pr-run-mode = "plan"
# Which phase dist should use to create the GitHub release
github-release = "announce"
# Whether to publish prereleases to package managers
publish-prereleases = true
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A namespace to use when publishing this package to the npm registry
npm-scope = "@j178"
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "aarch64-unknown-linux-gnu",
    "aarch64-unknown-linux-musl",
    "aarch64-pc-windows-msvc",
    "arm-unknown-linux-musleabihf",
    "armv7-unknown-linux-gnueabihf",
    "armv7-unknown-linux-musleabihf",
    "x86_64-apple-darwin",
    "powerpc64-unknown-linux-gnu",
    "powerpc64le-unknown-linux-gnu",
    "riscv64gc-unknown-linux-gnu",
    "s390x-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
    "x86_64-unknown-linux-musl",
    "x86_64-pc-windows-msvc",
    "i686-unknown-linux-gnu",
    "i686-unknown-linux-musl",
    "i686-pc-windows-msvc"
]
# Local artifacts jobs to run in CI
local-artifacts-jobs = ["./build-binaries"]
# Publish jobs to run in CI
publish-jobs = ["./publish", "homebrew"]
# Post-announce jobs to run in CI
post-announce-jobs = ["./publish-docs"]
github-custom-job-permissions = { "publish-docs" = { contents = "read", pages = "write", id-token = "write" }}
# A GitHub repo to push Homebrew formulas to
tap = "j178/homebrew-tap"
# Customize the Homebrew formula name
formula = "prek"
# Whether to install an updater program
install-updater = false
# Path that installers should place binaries in
install-path = ["$XDG_BIN_HOME/", "$XDG_DATA_HOME/../bin", "~/.local/bin"]

[dist.github-custom-runners]
global = "ubuntu-latest"

[dist.github-action-commits]
"actions/checkout" = "08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5
"actions/upload-artifact" = "ea165f8d65b6e75b540449e92b4886f43607fa02" # v4.6.2
"actions/download-artifact" = "634f93cb2916e3fdff6788551b99b062d0335ce0" # v5.0.0
