# ui/core/interface_ports.py

from typing import Protocol, Dict, Any, List, Optional, Callable

class ITaskRunner(Protocol):
    def run_task(self, name: str, payload: Dict[str, Any]) -> Dict[str, Any]:
        """Executa e retorna {ok:bool, data:..., error:...}"""

class IThemeRepository(Protocol):
    def list_themes(self) -> List[str]: ...
    def load_theme(self, name: str) -> Dict[str, Any]: ...
    def save_theme(self, name: str, data: Dict[str, Any]) -> None: ...
    def delete_theme(self, name: str) -> None: ...

class ICommandBus(Protocol):
    def register(self, name: str, handler: Callable[[Dict[str, Any]], Dict[str, Any]]) -> None: ...
    def dispatch(self, name: str, payload: Optional[Dict[str, Any]] = None) -> Dict[str, Any]: ...
