[project]
version = "0.4.4"
name = "opthub_runner_admin"
description = "Library for running OptHub problems."
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
keywords = ["opthub", "runner", "evaluator", "scorer"]
authors = [
  {email = "dev@opthub.ai", name = "Opthub Inc."}
]
maintainers = [
  {email = "dev@opthub.ai", name = "Opthub Inc."}
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "python >= 3.10",
    "docker >= 7.1.0",
    "click >= 8.1.7",
    "gql >= 3.5.0",
    "aiohttp >= 3.9.3",
    "boto3 >= 1.34",
    "PyYAML >= 6.0",
    "pyjwt >= 2.8.0",
    "cryptography >= 42.0.7",
    "jwcrypto >= 1.5.6",
    "requests >= 2.31.0",
    "filelock >= 3.16.1",
]

[project.urls]
Homepage = "https://github.com/opthub-org/opthub-runner-admin"
Documentation = "https://github.com/opthub-org/opthub-runner-admin"
Repository = "https://github.com/opthub-org/opthub-runner-admin"

[tool.poetry]
version = "0.4.4" # using poetry-dynamic-versioning
name = "opthub_runner_admin"
description = "Library for running OptHub problems and indicators."
authors = ["Opthub Inc. <dev@opthub.ai>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/opthub-org/opthub-runner-admin"
repository = "https://github.com/opthub-org/opthub-runner-admin"
documentation = "https://github.com/opthub-org/opthub-runner-admin"
keywords = ["opthub", "runner", "evaluator", "scorer"]

[tool.poetry-dynamic-versioning]
enable = false
format-jinja = "{% if distance == 0 %}{{ base }}{% else %}{{ base }}.post{{ distance }}{% endif %}"

[tool.poetry.dependencies]
python = ">=3.10, <4.0"
click = "^8.1.7"
gql = "^3.5.0"
aiohttp = "^3.9.3"
boto3 = "^1.34"
docker = "^7.1.0"
PyYAML = "^6.0"
pyjwt = "^2.8.0"
cryptography = "^42.0.7"
jwcrypto = "^1.5.6"
requests = "^2.31.0"
filelock = "^3.16.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.3"
mypy = "^1.9.0"
pytest = "^8.1.1"
boto3-stubs = {extras = ["dynamodb", "sqs"], version = "^1.34"}
types-boto3 = "^1.0.2"
types-PyYAML = "^6.0"
types-requests = "^2.32.0.20240622"


[tool.ruff]
target-version = "py312"
line-length = 120
lint.select = ["ALL"]
lint.ignore = [
    "ANN101",   # Don't require type hints for self.
    "D104",     # Don't require docstrings for public packages.
    "RET504",   # Allow assignment before return
    "FBT001",   # Allow bool type positional arguments
    "TD002",    # Allow unassigned todos
    "TD003",    # Allow todos without issue
    "TRY301",   # Allow abstract `raise` to an inner function
    "DTZ005",   # Allow timezone naive datetime
    "BLE001",   # Allow builtin exceptions
]
lint.exclude = [
    "examples/**/*",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.scripts]
opthub-runner-start = "opthub_runner_admin.main:run"
opthub-runner-stop = "opthub_runner_admin.utils.process:stop"

