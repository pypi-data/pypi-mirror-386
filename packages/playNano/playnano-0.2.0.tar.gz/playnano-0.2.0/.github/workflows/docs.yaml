name: Build and Deploy Docs

on:
  push:
    branches:
      - main
    tags:
      - 'v*'                # deploy on release tags too
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history incl. tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install docs dependencies
        run: |
          python -m pip install --upgrade pip
          # install your package with docs extra; ensure it includes sphinx, furo, sphinx-multiversion
          pip install -e .[docs]

      - name: Build versioned HTML docs
        run: sphinx-multiversion docs/ docs/_build/html

      # OPTIONAL: Create stable alias from newest tag (v*)
      - name: Create "stable" alias (latest v* tag)
        run: |
          set -euo pipefail
          SITE_DIR="docs/_build/html"
          cd "$SITE_DIR"
          latest=$(ls -d v*/ 2>/dev/null | sed 's#/##' | sort -Vr | head -n1 || true)
          if [ -n "$latest" ]; then
            echo "Creating stable alias from $latest"
            rm -rf stable
            cp -a "$latest" stable
          else
            echo "No tag directories found; skipping stable alias."
          fi

      - name: Create root index.html redirect to main/
        run: |
          SITE_DIR="docs/_build/html"
          mkdir -p "$SITE_DIR"
          cat > "$SITE_DIR/index.html" <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>Redirectingâ€¦</title>
          <meta http-equiv="refresh" content="0; url=./main/">
          <script>window.location.replace("./main/");</script>
          <p>If you are not redirected, ./main/click here</a>.</p>
          HTML

      - name: Generate versions.json (project page /playNano base)
        run: |
          set -euo pipefail
          SITE_DIR="docs/_build/html"
          cd "$SITE_DIR"
          BASE="/playNano"   # because your site is served at https://derollins.github.io/playNano/

          # Collect version folders produced by sphinx-multiversion
          versions=$(ls -d */ | sed 's#/##' | grep -E '^(main|stable|v[0-9]+\.[0-9]+(\.[0-9]+)?)$' || true)

          json="["
          first=true

          if echo "$versions" | grep -qx "main"; then
            entry="{\"name\":\"latest\",\"title\":\"main (latest)\",\"url\":\"${BASE}/main/\"}"
            json="$json$entry"; first=false
          fi
          if echo "$versions" | grep -qx "stable"; then
            entry="{\"name\":\"stable\",\"title\":\"stable (latest release)\",\"url\":\"${BASE}/stable/\"}"
            if [ "$first" = true ]; then json="$json$entry"; first=false
            else json="$json,$entry"; fi
          fi
          for v in $(echo "$versions" | grep -E '^v[0-9]+' | sort -Vr); do
            entry="{\"name\":\"$v\",\"title\":\"$v\",\"url\":\"${BASE}/$v/\"}"
            if [ "$first" = true ]; then json="$json$entry"; first=false
            else json="$json,$entry"; fi
          done
          json="$json]"
          echo "$json" > versions.json
          echo "Generated versions.json:"
          cat versions.json

      - name: Configure Git (for gh-pages push)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Optional artifact for PR preview
      - name: Upload built site artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: docs/_build/html

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
