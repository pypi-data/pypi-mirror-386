[project]
name = "theforecastingcompany"
dynamic = ["version"]
description = "The official Python library for The Forecasting Company API"
authors = [
  { name = "The Forecasting Company", email = "support@theforecastingcompany.com" },
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "httpx>=0.28.1",
  "nest-asyncio>=1.6.0",
  "pandas>=2.2.3",
  "pydantic>=2.11.7",
  "tqdm>=4.67.1",
]
keywords = [
  "forecasting",
  "prediction",
  "time-series",
  "api",
  "python-sdk",
  "data-science",
  "machine-learning",
  "deep-learning",
  "artificial-intelligence",
  "time-series-forecasting",
  "foundation-model",
  "tfc",
]

license = "Apache-2.0"
license-files = ["LICEN[CS]E*"]

[project.urls]
homepage = "https://theforecastingcompany.com"
repository = "https://github.com/theforecastingcompany/theforecastingcompany-sdk-python"
docs = "https://api.retrocast.com/docs"

[build-system]
requires = ["hatchling >= 1.26.3", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[dependency-groups]
lint = ["ruff>=0.12.0"]
dev = [
    "jupyter>=1.1.1",
    "pytest>=7.4.3",
    "python-dotenv>=1.1.1",
]

[tool.ruff]
line-length = 120
output-format = "grouped"
target-version = "py312"

[tool.ruff.lint]
select = [
  # isort
  "I",
  # bugbear
  "B",
  # remove unused imports
  "F401",
  # bare except statements
  "E722",
  # unused arguments
  "ARG",
  # print statements
  "T201",
  "T203",
]
unfixable = [
  # disable auto fix for print statements
  "T201",
  "T203",
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["T201", "T203"]
"examples/**.py" = ["T201", "T203"]
