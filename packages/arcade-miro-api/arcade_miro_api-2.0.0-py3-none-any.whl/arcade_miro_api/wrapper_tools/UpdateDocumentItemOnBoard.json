{
  "name": "UpdateDocumentItemOnBoard",
  "fully_qualified_name": "MiroApi.UpdateDocumentItemOnBoard@2.0.0",
  "description": "Update a document item on a Miro board using its URL.\n\nThis tool updates a specific document item on a Miro board. It should be called when you need to modify the content or metadata of an item on a Miro board by using its URL. Ensure you have the required 'boards:write' scope and be mindful of Level 2 rate limiting.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "board_id",
        "required": true,
        "description": "Unique identifier of the Miro board where the document item will be updated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "board_id"
      },
      {
        "name": "item_identifier_to_update",
        "required": true,
        "description": "Unique identifier of the item to update on the board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "item_id"
      },
      {
        "name": "document_title",
        "required": false,
        "description": "A short text header to identify the document on the board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A short text header to identify the document."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.title"
      },
      {
        "name": "document_hosting_url",
        "required": false,
        "description": "URL where the document is hosted for updating on the Miro board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "URL where the document is hosted."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.url"
      },
      {
        "name": "x_axis_coordinate_on_board",
        "required": false,
        "description": "X-axis coordinate for the item's placement on the board, with default positioning at 0. Center of the board is x: 0.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "position.x"
      },
      {
        "name": "y_axis_coordinate",
        "required": false,
        "description": "Y-axis coordinate for placing the item on the board. Default is 0, with absolute positioning relative to the board center.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "position.y"
      },
      {
        "name": "item_height_pixels",
        "required": false,
        "description": "Height of the document item in pixels.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Height of the item, in pixels."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "geometry.height"
      },
      {
        "name": "item_width_pixels",
        "required": false,
        "description": "Specify the width of the item in pixels on the board.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Width of the item, in pixels."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "geometry.width"
      },
      {
        "name": "rotation_angle_degrees",
        "required": false,
        "description": "Rotation angle of an item, in degrees, relative to the board. Positive values rotate clockwise, negative values rotate counterclockwise.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "geometry.rotation"
      },
      {
        "name": "parent_frame_id",
        "required": false,
        "description": "Unique identifier (ID) of the parent frame for the item on the board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the parent frame for the item."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "parent.id"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'update-document-item-using-url'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/boards/{board_id}/documents/{item_id}",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "board_id",
        "tool_parameter_name": "board_id",
        "description": "Unique identifier (ID) of the board where you want to update the item.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "item_id",
        "tool_parameter_name": "item_identifier_to_update",
        "description": "Unique identifier (ID) of the item that you want to update.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.title",
        "tool_parameter_name": "document_title",
        "description": "A short text header to identify the document.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A short text header to identify the document."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.url",
        "tool_parameter_name": "document_hosting_url",
        "description": "URL where the document is hosted.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "URL where the document is hosted."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "position.x",
        "tool_parameter_name": "x_axis_coordinate_on_board",
        "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": 0,
        "documentation_urls": []
      },
      {
        "name": "position.y",
        "tool_parameter_name": "y_axis_coordinate",
        "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": 0,
        "documentation_urls": []
      },
      {
        "name": "geometry.height",
        "tool_parameter_name": "item_height_pixels",
        "description": "Height of the item, in pixels.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Height of the item, in pixels."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "geometry.width",
        "tool_parameter_name": "item_width_pixels",
        "description": "Width of the item, in pixels.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Width of the item, in pixels."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "geometry.rotation",
        "tool_parameter_name": "rotation_angle_degrees",
        "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "parent.id",
        "tool_parameter_name": "parent_frame_id",
        "description": "Unique identifier (ID) of the parent frame for the item.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the parent frame for the item."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the document URL.\",\n            \"properties\": {\n              \"title\": {\n                \"type\": \"string\",\n                \"description\": \"A short text header to identify the document.\"\n              },\n              \"url\": {\n                \"type\": \"string\",\n                \"description\": \"URL where the document is hosted.\",\n                \"example\": \"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\"\n              }\n            }\n          },\n          \"position\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates.\",\n            \"properties\": {\n              \"x\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"X-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              },\n              \"y\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Y-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              }\n            }\n          },\n          \"geometry\": {\n            \"type\": \"object\",\n            \"description\": \"Contains geometrical information about the item, such as its width or rotation. You can set either the width or height, you cannot set both the width and height at the same time.\",\n            \"properties\": {\n              \"height\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Height of the item, in pixels.\"\n              },\n              \"width\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Width of the item, in pixels.\"\n              },\n              \"rotation\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively.\"\n              }\n            }\n          },\n          \"parent\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the parent frame for the item.\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"int64\",\n                \"description\": \"Unique identifier (ID) of the parent frame for the item.\",\n                \"example\": \"3074457362577955300\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
