{
  "name": "UpdateMiroAppCard",
  "fully_qualified_name": "MiroApi.UpdateMiroAppCard@2.0.0",
  "description": "Update an app card item on a Miro board.\n\nUse this tool to update an existing app card on a Miro board based on specified data and style properties. Ensure you have the 'boards:write' scope.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "board_identifier",
        "required": true,
        "description": "Unique identifier of the board where the app card will be updated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "board_id"
      },
      {
        "name": "item_identifier_for_update",
        "required": true,
        "description": "Unique identifier (ID) of the app card item to update on the Miro board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "item_id"
      },
      {
        "name": "app_card_update_details",
        "required": true,
        "description": "JSON object containing the app card item data, style properties, position, geometry, and parent frame details for updating an app card.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "data": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A short text description to add context about the app card."
                },
                "fields": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "fillColor": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Hex value representing the color that fills the background area of the preview field, when it's displayed on the app card."
                    },
                    "iconShape": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "round",
                        "square"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The shape of the icon on the preview field."
                    },
                    "iconUrl": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A valid URL pointing to an image available online.\nThe transport protocol must be HTTPS.\nPossible image file formats: JPG/JPEG, PNG, SVG."
                    },
                    "textColor": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Hex value representing the color of the text string assigned to `value`."
                    },
                    "tooltip": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A short text displayed in a tooltip when clicking or hovering over the preview field."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The actual data value of the custom field.\nIt can be any type of information that you want to convey."
                    }
                  },
                  "description": "Array where each object represents a custom preview field. Preview fields are displayed on the bottom half of the app card in the compact view."
                },
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "disconnected",
                    "connected",
                    "disabled"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Status indicating whether an app card is connected and in sync with the source. When the source for the app card is deleted, the status returns `disabled`."
                },
                "title": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A short text header to identify the app card."
                }
              },
              "inner_properties": null,
              "description": "Contains app card item data, such as the title, description, or fields."
            },
            "style": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "fillColor": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Hex value of the border color of the app card."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the style of an app card item, such as the fill color."
            },
            "position": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "x": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                },
                "y": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates."
            },
            "geometry": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "height": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Height of the item, in pixels."
                },
                "rotation": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
                },
                "width": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Width of the item, in pixels."
                }
              },
              "inner_properties": null,
              "description": "Contains geometrical information about the item, such as its width or height."
            },
            "parent": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Unique identifier (ID) of the parent frame for the item."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the parent frame for the item."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'update-app-card-item'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/boards/{board_id}/app_cards/{item_id}",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "board_id",
        "tool_parameter_name": "board_identifier",
        "description": "Unique identifier (ID) of the board where you want to update the item.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "item_id",
        "tool_parameter_name": "item_identifier_for_update",
        "description": "Unique identifier (ID) of the item that you want to update.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "app_card_update_details",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "data": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A short text description to add context about the app card."
                },
                "fields": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "fillColor": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Hex value representing the color that fills the background area of the preview field, when it's displayed on the app card."
                    },
                    "iconShape": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "round",
                        "square"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "The shape of the icon on the preview field."
                    },
                    "iconUrl": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A valid URL pointing to an image available online.\nThe transport protocol must be HTTPS.\nPossible image file formats: JPG/JPEG, PNG, SVG."
                    },
                    "textColor": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Hex value representing the color of the text string assigned to `value`."
                    },
                    "tooltip": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "A short text displayed in a tooltip when clicking or hovering over the preview field."
                    },
                    "value": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The actual data value of the custom field.\nIt can be any type of information that you want to convey."
                    }
                  },
                  "description": "Array where each object represents a custom preview field. Preview fields are displayed on the bottom half of the app card in the compact view."
                },
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "disconnected",
                    "connected",
                    "disabled"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Status indicating whether an app card is connected and in sync with the source. When the source for the app card is deleted, the status returns `disabled`."
                },
                "title": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A short text header to identify the app card."
                }
              },
              "inner_properties": null,
              "description": "Contains app card item data, such as the title, description, or fields."
            },
            "style": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "fillColor": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Hex value of the border color of the app card."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the style of an app card item, such as the fill color."
            },
            "position": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "x": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                },
                "y": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates."
            },
            "geometry": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "height": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Height of the item, in pixels."
                },
                "rotation": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
                },
                "width": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Width of the item, in pixels."
                }
              },
              "inner_properties": null,
              "description": "Contains geometrical information about the item, such as its width or height."
            },
            "parent": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Unique identifier (ID) of the parent frame for the item."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the parent frame for the item."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"description\": \"Contains app card item data, such as the title, description, or fields.\",\n            \"properties\": {\n              \"description\": {\n                \"type\": \"string\",\n                \"description\": \"A short text description to add context about the app card.\",\n                \"example\": \"Sample app card description\"\n              },\n              \"fields\": {\n                \"type\": \"array\",\n                \"description\": \"Array where each object represents a custom preview field. Preview fields are displayed on the bottom half of the app card in the compact view.\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"description\": \"Array where each object represents a custom preview field. Preview fields are displayed on the bottom half of the app card in the compact view.\",\n                  \"properties\": {\n                    \"fillColor\": {\n                      \"type\": \"string\",\n                      \"description\": \"Hex value representing the color that fills the background area of the preview field, when it's displayed on the app card.\",\n                      \"example\": \"#2fa9e3\"\n                    },\n                    \"iconShape\": {\n                      \"type\": \"string\",\n                      \"default\": \"round\",\n                      \"description\": \"The shape of the icon on the preview field.\",\n                      \"enum\": [\n                        \"round\",\n                        \"square\"\n                      ]\n                    },\n                    \"iconUrl\": {\n                      \"type\": \"string\",\n                      \"description\": \"A valid URL pointing to an image available online.\\nThe transport protocol must be HTTPS.\\nPossible image file formats: JPG/JPEG, PNG, SVG.\",\n                      \"example\": \"https://cdn-icons-png.flaticon.com/512/5695/5695864.png\"\n                    },\n                    \"textColor\": {\n                      \"type\": \"string\",\n                      \"description\": \"Hex value representing the color of the text string assigned to `value`.\",\n                      \"example\": \"#1a1a1a\"\n                    },\n                    \"tooltip\": {\n                      \"type\": \"string\",\n                      \"description\": \"A short text displayed in a tooltip when clicking or hovering over the preview field.\",\n                      \"example\": \"Completion status indicator\"\n                    },\n                    \"value\": {\n                      \"type\": \"string\",\n                      \"description\": \"The actual data value of the custom field.\\nIt can be any type of information that you want to convey.\",\n                      \"example\": \"Status: in progress\"\n                    }\n                  }\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"default\": \"disconnected\",\n                \"description\": \"Status indicating whether an app card is connected and in sync with the source. When the source for the app card is deleted, the status returns `disabled`.\",\n                \"enum\": [\n                  \"disconnected\",\n                  \"connected\",\n                  \"disabled\"\n                ]\n              },\n              \"title\": {\n                \"type\": \"string\",\n                \"default\": \"sample app card item\",\n                \"description\": \"A short text header to identify the app card.\"\n              }\n            }\n          },\n          \"style\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the style of an app card item, such as the fill color.\",\n            \"properties\": {\n              \"fillColor\": {\n                \"type\": \"string\",\n                \"description\": \"Hex value of the border color of the app card.\",\n                \"example\": \"#2d9bf0\"\n              }\n            }\n          },\n          \"position\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates.\",\n            \"properties\": {\n              \"x\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"X-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              },\n              \"y\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Y-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              }\n            }\n          },\n          \"geometry\": {\n            \"type\": \"object\",\n            \"description\": \"Contains geometrical information about the item, such as its width or height.\",\n            \"properties\": {\n              \"height\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Height of the item, in pixels.\",\n                \"example\": 60\n              },\n              \"rotation\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively.\"\n              },\n              \"width\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Width of the item, in pixels.\",\n                \"example\": 320\n              }\n            }\n          },\n          \"parent\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the parent frame for the item.\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"int64\",\n                \"description\": \"Unique identifier (ID) of the parent frame for the item.\",\n                \"example\": \"3074457362577955300\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
