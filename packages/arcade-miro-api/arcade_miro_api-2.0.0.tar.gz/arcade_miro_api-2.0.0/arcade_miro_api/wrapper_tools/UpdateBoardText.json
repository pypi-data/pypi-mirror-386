{
  "name": "UpdateBoardText",
  "fully_qualified_name": "MiroApi.UpdateBoardText@2.0.0",
  "description": "Update a text item on a Miro board.\n\nThis tool updates a text item on a specified Miro board using provided data and style properties.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "board_id",
        "required": true,
        "description": "Unique ID of the Miro board where the text item is to be updated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "board_id"
      },
      {
        "name": "text_item_id",
        "required": true,
        "description": "Unique identifier (ID) of the text item to update on the board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "item_id"
      },
      {
        "name": "text_item_update_details",
        "required": true,
        "description": "JSON object containing details to update a text item, including data, style, position, geometry, and parent information.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "data": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "content": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The actual text (content) that appears in the text item."
                }
              },
              "inner_properties": null,
              "description": "Contains text item data, such as the title, content, or description. For more information on the JSON properties, see [Data](https://developers.miro.com/reference/data)."
            },
            "style": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "color": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Hex value representing the color for the text within the text item."
                },
                "fillColor": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Background color of the text item."
                },
                "fillOpacity": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Opacity level of the background color.\nPossible values: any number between `0.0` and `1.0`, where:\n`0.0`: the background color is completely transparent or invisible\n`1.0`: the background color is completely opaque or solid"
                },
                "fontFamily": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "arial",
                    "abril_fatface",
                    "bangers",
                    "eb_garamond",
                    "georgia",
                    "graduate",
                    "gravitas_one",
                    "fredoka_one",
                    "nixie_one",
                    "open_sans",
                    "permanent_marker",
                    "pt_sans",
                    "pt_sans_narrow",
                    "pt_serif",
                    "rammetto_one",
                    "roboto",
                    "roboto_condensed",
                    "roboto_slab",
                    "caveat",
                    "times_new_roman",
                    "titan_one",
                    "lemon_tuesday",
                    "roboto_mono",
                    "noto_sans",
                    "plex_sans",
                    "plex_serif",
                    "plex_mono",
                    "spoof",
                    "tiempos_text",
                    "formular"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Font type for the text in the text item."
                },
                "fontSize": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Font size, in dp."
                },
                "textAlign": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "left",
                    "right",
                    "center"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Horizontal alignment for the item's content."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the style of a text item, such as the fill color or font family."
            },
            "position": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "x": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                },
                "y": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates."
            },
            "geometry": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "rotation": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
                },
                "width": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Width of the item, in pixels.\nThe minimum `width` of a `text` widget is relative to the font size of the `text` widget. The width must be at least 1.7 times wider than the font size.\nFor example, if the font size of the `text` item is `14`, the minimum `width` is `24`."
                }
              },
              "inner_properties": null,
              "description": "Contains geometrical information about the item, such as its width or rotation. You can only specify the width of the text item as the height is dynamically updated based on the content."
            },
            "parent": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Unique identifier (ID) of the parent frame for the item."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the parent frame for the item."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'update-text-item'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/boards/{board_id}/texts/{item_id}",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "board_id",
        "tool_parameter_name": "board_id",
        "description": "Unique identifier (ID) of the board where you want to update the item.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board where you want to update the item."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "item_id",
        "tool_parameter_name": "text_item_id",
        "description": "Unique identifier (ID) of the item that you want to update.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the item that you want to update."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "text_item_update_details",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "data": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "content": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The actual text (content) that appears in the text item."
                }
              },
              "inner_properties": null,
              "description": "Contains text item data, such as the title, content, or description. For more information on the JSON properties, see [Data](https://developers.miro.com/reference/data)."
            },
            "style": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "color": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Hex value representing the color for the text within the text item."
                },
                "fillColor": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Background color of the text item."
                },
                "fillOpacity": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Opacity level of the background color.\nPossible values: any number between `0.0` and `1.0`, where:\n`0.0`: the background color is completely transparent or invisible\n`1.0`: the background color is completely opaque or solid"
                },
                "fontFamily": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "arial",
                    "abril_fatface",
                    "bangers",
                    "eb_garamond",
                    "georgia",
                    "graduate",
                    "gravitas_one",
                    "fredoka_one",
                    "nixie_one",
                    "open_sans",
                    "permanent_marker",
                    "pt_sans",
                    "pt_sans_narrow",
                    "pt_serif",
                    "rammetto_one",
                    "roboto",
                    "roboto_condensed",
                    "roboto_slab",
                    "caveat",
                    "times_new_roman",
                    "titan_one",
                    "lemon_tuesday",
                    "roboto_mono",
                    "noto_sans",
                    "plex_sans",
                    "plex_serif",
                    "plex_mono",
                    "spoof",
                    "tiempos_text",
                    "formular"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Font type for the text in the text item."
                },
                "fontSize": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Font size, in dp."
                },
                "textAlign": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "left",
                    "right",
                    "center"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "Horizontal alignment for the item's content."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the style of a text item, such as the fill color or font family."
            },
            "position": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "x": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "X-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                },
                "y": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Y-axis coordinate of the location of the item on the board.\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\nThe center point of the board has `x: 0` and `y: 0` coordinates."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates."
            },
            "geometry": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "rotation": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively."
                },
                "width": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Width of the item, in pixels.\nThe minimum `width` of a `text` widget is relative to the font size of the `text` widget. The width must be at least 1.7 times wider than the font size.\nFor example, if the font size of the `text` item is `14`, the minimum `width` is `24`."
                }
              },
              "inner_properties": null,
              "description": "Contains geometrical information about the item, such as its width or rotation. You can only specify the width of the text item as the height is dynamically updated based on the content."
            },
            "parent": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Unique identifier (ID) of the parent frame for the item."
                }
              },
              "inner_properties": null,
              "description": "Contains information about the parent frame for the item."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"description\": \"Contains text item data, such as the title, content, or description. For more information on the JSON properties, see [Data](https://developers.miro.com/reference/data).\",\n            \"properties\": {\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"The actual text (content) that appears in the text item.\",\n                \"example\": \"Hello\"\n              }\n            },\n            \"required\": [\n              \"content\"\n            ]\n          },\n          \"style\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the style of a text item, such as the fill color or font family.\",\n            \"properties\": {\n              \"color\": {\n                \"type\": \"string\",\n                \"description\": \"Hex value representing the color for the text within the text item.\",\n                \"example\": \"#1a1a1a\"\n              },\n              \"fillColor\": {\n                \"type\": \"string\",\n                \"description\": \"Background color of the text item.\",\n                \"example\": \"#e6e6e6\"\n              },\n              \"fillOpacity\": {\n                \"type\": \"string\",\n                \"description\": \"Opacity level of the background color.\\nPossible values: any number between `0.0` and `1.0`, where:\\n`0.0`: the background color is completely transparent or invisible\\n`1.0`: the background color is completely opaque or solid\",\n                \"maximum\": 1,\n                \"minimum\": 0\n              },\n              \"fontFamily\": {\n                \"type\": \"string\",\n                \"description\": \"Font type for the text in the text item.\",\n                \"enum\": [\n                  \"arial\",\n                  \"abril_fatface\",\n                  \"bangers\",\n                  \"eb_garamond\",\n                  \"georgia\",\n                  \"graduate\",\n                  \"gravitas_one\",\n                  \"fredoka_one\",\n                  \"nixie_one\",\n                  \"open_sans\",\n                  \"permanent_marker\",\n                  \"pt_sans\",\n                  \"pt_sans_narrow\",\n                  \"pt_serif\",\n                  \"rammetto_one\",\n                  \"roboto\",\n                  \"roboto_condensed\",\n                  \"roboto_slab\",\n                  \"caveat\",\n                  \"times_new_roman\",\n                  \"titan_one\",\n                  \"lemon_tuesday\",\n                  \"roboto_mono\",\n                  \"noto_sans\",\n                  \"plex_sans\",\n                  \"plex_serif\",\n                  \"plex_mono\",\n                  \"spoof\",\n                  \"tiempos_text\",\n                  \"formular\"\n                ]\n              },\n              \"fontSize\": {\n                \"type\": \"string\",\n                \"description\": \"Font size, in dp.\",\n                \"minimum\": 1\n              },\n              \"textAlign\": {\n                \"type\": \"string\",\n                \"description\": \"Horizontal alignment for the item's content.\",\n                \"enum\": [\n                  \"left\",\n                  \"right\",\n                  \"center\"\n                ]\n              }\n            }\n          },\n          \"position\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the item's position on the board, such as its `x` coordinate, `y` coordinate, and the origin of the `x` and `y` coordinates.\",\n            \"properties\": {\n              \"x\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"X-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              },\n              \"y\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Y-axis coordinate of the location of the item on the board.\\nBy default, all items have absolute positioning to the board, not the current viewport. Default: `0`.\\nThe center point of the board has `x: 0` and `y: 0` coordinates.\",\n                \"default\": 0,\n                \"example\": 100\n              }\n            }\n          },\n          \"geometry\": {\n            \"type\": \"object\",\n            \"description\": \"Contains geometrical information about the item, such as its width or rotation. You can only specify the width of the text item as the height is dynamically updated based on the content.\",\n            \"properties\": {\n              \"rotation\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Rotation angle of an item, in degrees, relative to the board. You can rotate items clockwise (right) and counterclockwise (left) by specifying positive and negative values, respectively.\"\n              },\n              \"width\": {\n                \"type\": \"number\",\n                \"format\": \"double\",\n                \"description\": \"Width of the item, in pixels.\\nThe minimum `width` of a `text` widget is relative to the font size of the `text` widget. The width must be at least 1.7 times wider than the font size.\\nFor example, if the font size of the `text` item is `14`, the minimum `width` is `24`.\"\n              }\n            }\n          },\n          \"parent\": {\n            \"type\": \"object\",\n            \"description\": \"Contains information about the parent frame for the item.\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"format\": \"int64\",\n                \"description\": \"Unique identifier (ID) of the parent frame for the item.\",\n                \"example\": \"3074457362577955300\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
