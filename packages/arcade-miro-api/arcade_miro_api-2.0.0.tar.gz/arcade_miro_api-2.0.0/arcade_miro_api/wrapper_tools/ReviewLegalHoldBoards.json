{
  "name": "ReviewLegalHoldBoards",
  "fully_qualified_name": "MiroApi.ReviewLegalHoldBoards@2.0.0",
  "description": "Review Miro boards under legal hold for legal proceedings.\n\nThis tool retrieves all Miro board content items under a specific legal hold for an organization. Use it to ensure relevant data is preserved for legal processes. The legal hold must be in an 'ACTIVE' state and available only to Enterprise plan users with appropriate admin roles.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "maximum_items_in_result",
        "required": true,
        "description": "The maximum number of items to include in the result list. Use to limit response size.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of items in the result list."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "organization_id",
        "required": true,
        "description": "The ID of the organization to retrieve the list of content items under hold.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the organization for which you want to retrieve the list of content items under hold."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "org_id"
      },
      {
        "name": "case_id",
        "required": true,
        "description": "The unique identifier for the case associated with the legal hold items you wish to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the case for which you want to retrieve the list of content items under hold."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "case_id"
      },
      {
        "name": "legal_hold_identifier",
        "required": true,
        "description": "The unique identifier for the legal hold to retrieve content items under hold.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the legal hold for which you want to retrieve the list of content items under hold."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "legal_hold_id"
      },
      {
        "name": "page_cursor",
        "required": false,
        "description": "An indicator for pagination. Leave empty for the first page or use a value from the previous request's cursor field for next pages.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request.\n"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "cursor"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-legal-hold-content-items'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/orgs/{org_id}/cases/{case_id}/legal-holds/{legal_hold_id}/content-items",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "limit",
        "tool_parameter_name": "maximum_items_in_result",
        "description": "The maximum number of items in the result list.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of items in the result list."
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": 100,
        "documentation_urls": []
      },
      {
        "name": "cursor",
        "tool_parameter_name": "page_cursor",
        "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request.\n",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request.\n"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "org_id",
        "tool_parameter_name": "organization_id",
        "description": "The ID of the organization for which you want to retrieve the list of content items under hold.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the organization for which you want to retrieve the list of content items under hold."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "case_id",
        "tool_parameter_name": "case_id",
        "description": "The ID of the case for which you want to retrieve the list of content items under hold.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the case for which you want to retrieve the list of content items under hold."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "legal_hold_id",
        "tool_parameter_name": "legal_hold_identifier",
        "description": "The ID of the legal hold for which you want to retrieve the list of content items under hold.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the legal hold for which you want to retrieve the list of content items under hold."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
