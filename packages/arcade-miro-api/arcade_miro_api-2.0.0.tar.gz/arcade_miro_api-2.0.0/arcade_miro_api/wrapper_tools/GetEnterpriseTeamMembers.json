{
  "name": "GetEnterpriseTeamMembers",
  "fully_qualified_name": "MiroApi.GetEnterpriseTeamMembers@2.0.0",
  "description": "Retrieve team members for an enterprise organization team.\n\nThis tool retrieves the list of team members for a specific team within an enterprise organization on Miro. It should be used when needing to access the team member details for organizational purposes. This tool is only available to users with an Enterprise plan and the role of Company Admin.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "organization_id",
        "required": true,
        "description": "The unique identifier for the organization whose team members are being retrieved.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The id of the Organization."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "org_id"
      },
      {
        "name": "team_identifier",
        "required": true,
        "description": "The unique identifier for the team whose members are being retrieved.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The id of the Team."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "team_id"
      },
      {
        "name": "member_retrieval_limit",
        "required": false,
        "description": "The maximum number of team members to retrieve in one call. Leave empty for default.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "Indicates the page position for fetching results. Leave empty for the first page or use the value from the previous cursor field for subsequent pages.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "cursor"
      },
      {
        "name": "filter_by_role",
        "required": false,
        "description": "Filter team members by their role. Accepted values: 'member', 'admin', 'non_team', 'team_guest'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "\nRole query. Filters members by role using full word match. Accepted values are:\n* \"member\":     Team member with full member permissions.\n* \"admin\":      Admin of a team. Team member with permission to manage team.\n* \"non_team\":   External user, non-team user.\n* \"team_guest\": Team-guest user, user with access only to a team without access to organization.\n"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "role"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'enterprise-get-team-members'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/orgs/{org_id}/teams/{team_id}/members",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "limit",
        "tool_parameter_name": "member_retrieval_limit",
        "description": "",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 100,
        "documentation_urls": []
      },
      {
        "name": "cursor",
        "tool_parameter_name": "pagination_cursor",
        "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An indicator of the position of a page in the full set of results. To obtain the first page leave it empty. To obtain subsequent pages set it to the value returned in the cursor field of the previous request."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "role",
        "tool_parameter_name": "filter_by_role",
        "description": "\nRole query. Filters members by role using full word match. Accepted values are:\n* \"member\":     Team member with full member permissions.\n* \"admin\":      Admin of a team. Team member with permission to manage team.\n* \"non_team\":   External user, non-team user.\n* \"team_guest\": Team-guest user, user with access only to a team without access to organization.\n",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "\nRole query. Filters members by role using full word match. Accepted values are:\n* \"member\":     Team member with full member permissions.\n* \"admin\":      Admin of a team. Team member with permission to manage team.\n* \"non_team\":   External user, non-team user.\n* \"team_guest\": Team-guest user, user with access only to a team without access to organization.\n"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "org_id",
        "tool_parameter_name": "organization_id",
        "description": "The id of the Organization.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The id of the Organization."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "team_id",
        "tool_parameter_name": "team_identifier",
        "description": "The id of the Team.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The id of the Team."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
