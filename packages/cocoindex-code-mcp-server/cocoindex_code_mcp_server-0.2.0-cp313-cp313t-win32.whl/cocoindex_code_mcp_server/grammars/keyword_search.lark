// SPDX-License-Identifier: AGPL-3.0-or-later
// SPDX-FileCopyrightText: 2025 aanno <aanno@users.noreply.github.com>
//
// This file is part of cocoindex_code_mcp_server from
// https://github.com/aanno/cocoindex-code-mcp-server
//
// Copyright (C) 2025 aanno <aanno@users.noreply.github.com>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// Lark grammar for keyword search syntax
// Supports field:value, exists(field), value_contains(field, string), and boolean operators

start: or_expr

or_expr: and_expr ("or"? and_expr)*

// make "and" default
and_expr: condition (("and"? condition)*)

?condition: field_condition
          | exists_condition
          | value_contains_condition
          | "(" or_expr ")"
          | text_search

// Field value matching: field:value or field:"quoted value"
field_condition: FIELD ":" value

// Existence check: exists(field)
exists_condition: "exists" "(" FIELD ")"

// Value contains check: value_contains(field, "search_string")
value_contains_condition: "value_contains" "(" FIELD "," value ")"

// General text search (no field specified) - multiple words allowed
text_search: word+

// Values can be quoted or unquoted
?value: QUOTED_VALUE | UNQUOTED_VALUE

// Single word that can be field or text search word
word: FIELD

// Terminals
FIELD: /[a-zA-Z_][a-zA-Z0-9_]*/

QUOTED_VALUE: /("([^"\\]|\\.)*"|'([^'\\]|\\.)*')/

UNQUOTED_VALUE: /[^\s(),:]+/

// Keywords (case insensitive)
%import common.WS
%ignore WS

// Make keywords case insensitive
%declare _CASE_INSENSITIVE
