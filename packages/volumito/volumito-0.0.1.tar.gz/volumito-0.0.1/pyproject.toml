[build-system]
requires = [
    "setuptools>=68.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "volumito"
version = "0.0.1"
description = "Python client library and CLI tool for Volumio"
authors = [
    {name = "Alberto Pettarin", email = "alberto@albertopettarin.it"}
]
readme = "README.md"
requires-python = ">=3.13"
license = {text = "GPL-3.0-or-later"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "click>=8.1.0",
    "python-mpd2>=3.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "build>=1.3.0",
    "coverage>=7.0.0",
    "mypy>=1.13.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest>=8.0.0",
    "ruff>=0.8.0",
    "setuptools>=80.9.0",
    "types-requests>=2.31.0",
    "wheel>=0.45.1",
]

[project.scripts]
volumito = "volumito.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ANN", # flake8-annotations
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ANN"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=volumito --cov-report=term-missing"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
extra_checks = true
disable_error_code = ["import-untyped"]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
