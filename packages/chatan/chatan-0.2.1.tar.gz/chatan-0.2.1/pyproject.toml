[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chatan"
dynamic = ["version"]
description = "Create synthetic datasets with LLM generators and samplers"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["synthetic data", "llm", "dataset generation", "machine learning"]
authors = [
    { name = "Christian Reetz", email = "cdreetz@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "datasets>=2.0.0",
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "pydantic>=2.0.0",
    "tqdm>=4.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.14.0",
]

[pyproject.optional-dependencies]
# Local model support
local = [
    "transformers>=4.0.0",
    "torch>=2.5.1",
]

# Evaluation features
eval = [
    "sentence-transformers>=3.2.1",
    "scikit-learn>=1.3.2",
    "nltk>=3.9.1",
]

# All optional
all = [
    "transformers>=4.0.0",
    "torch>=2.5.1",
    "sentence-transformers>=3.2.1",
    "scikit-learn>=1.3.2",
    "nltk>=3.9.1",
]



[dependency-groups]
dev = [
    "pytest>=7.0",
    "mypy>=1.0",
    "pytest-cov>=4.0",
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autodoc-typehints>=2.0.1",
]

docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
]


[project.urls]
Documentation = "https://github.com/cdreetz/chatan#readme"
Issues = "https://github.com/cdreetz/chatan/issues"
Source = "https://github.com/cdreetz/chatan"

[tool.hatch.version]
path = "src/chatan/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/chatan"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
