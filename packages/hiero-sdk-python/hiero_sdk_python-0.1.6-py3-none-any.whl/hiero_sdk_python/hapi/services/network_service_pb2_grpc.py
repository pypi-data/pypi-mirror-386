# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings
from . import query_pb2 as services_dot_query__pb2
from . import response_pb2 as services_dot_response__pb2
from . import transaction_pb2 as services_dot_transaction__pb2
from . import transaction_response_pb2 as services_dot_transaction__response__pb2
GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in services/network_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NetworkServiceStub(object):
    """*
    Basic "network information" queries.

    This service supports queries for the active services and API versions,
    and a query for account details.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getVersionInfo = channel.unary_unary(
                '/proto.NetworkService/getVersionInfo',
                request_serializer=services_dot_query__pb2.Query.SerializeToString,
                response_deserializer=services_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.getAccountDetails = channel.unary_unary(
                '/proto.NetworkService/getAccountDetails',
                request_serializer=services_dot_query__pb2.Query.SerializeToString,
                response_deserializer=services_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.getExecutionTime = channel.unary_unary(
                '/proto.NetworkService/getExecutionTime',
                request_serializer=services_dot_query__pb2.Query.SerializeToString,
                response_deserializer=services_dot_response__pb2.Response.FromString,
                _registered_method=True)
        self.uncheckedSubmit = channel.unary_unary(
                '/proto.NetworkService/uncheckedSubmit',
                request_serializer=services_dot_transaction__pb2.Transaction.SerializeToString,
                response_deserializer=services_dot_transaction__response__pb2.TransactionResponse.FromString,
                _registered_method=True)


class NetworkServiceServicer(object):
    """*
    Basic "network information" queries.

    This service supports queries for the active services and API versions,
    and a query for account details.
    """

    def getVersionInfo(self, request, context):
        """*
        Retrieve the active versions of Hedera Services and API messages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccountDetails(self, request, context):
        """*
        Request detail information about an account.
        <p>
        The returned information SHALL include balance and allowances.<br/>
        The returned information SHALL NOT include a list of account records.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getExecutionTime(self, request, context):
        """*
        Retrieve the time, in nanoseconds, spent in direct processing for one or
        more recent transactions.
        <p>
        For each transaction identifier provided, if that transaction is
        sufficiently recent (that is, it is within the range of the
        configuration value `stats.executionTimesToTrack`), the node SHALL
        return the time, in nanoseconds, spent to directly process that
        transaction (that is, excluding time to reach consensus).<br/>
        Note that because each node processes every transaction for the Hedera
        network, this query MAY be sent to any node.
        <p>
        <blockquote>Important<blockquote>
        This query is obsolete, not supported, and SHALL fail with a pre-check
        result of `NOT_SUPPORTED`.</blockquote></blockquote>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uncheckedSubmit(self, request, context):
        """*
        Submit a transaction that wraps another transaction which will
        skip most validation.
        <p>
        <blockquote>Important<blockquote>
        This query is obsolete, not supported, and SHALL fail with a pre-check
        result of `NOT_SUPPORTED`.
        </blockquote></blockquote>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getVersionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getVersionInfo,
                    request_deserializer=services_dot_query__pb2.Query.FromString,
                    response_serializer=services_dot_response__pb2.Response.SerializeToString,
            ),
            'getAccountDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.getAccountDetails,
                    request_deserializer=services_dot_query__pb2.Query.FromString,
                    response_serializer=services_dot_response__pb2.Response.SerializeToString,
            ),
            'getExecutionTime': grpc.unary_unary_rpc_method_handler(
                    servicer.getExecutionTime,
                    request_deserializer=services_dot_query__pb2.Query.FromString,
                    response_serializer=services_dot_response__pb2.Response.SerializeToString,
            ),
            'uncheckedSubmit': grpc.unary_unary_rpc_method_handler(
                    servicer.uncheckedSubmit,
                    request_deserializer=services_dot_transaction__pb2.Transaction.FromString,
                    response_serializer=services_dot_transaction__response__pb2.TransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.NetworkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.NetworkService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NetworkService(object):
    """*
    Basic "network information" queries.

    This service supports queries for the active services and API versions,
    and a query for account details.
    """

    @staticmethod
    def getVersionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.NetworkService/getVersionInfo',
            services_dot_query__pb2.Query.SerializeToString,
            services_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getAccountDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.NetworkService/getAccountDetails',
            services_dot_query__pb2.Query.SerializeToString,
            services_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getExecutionTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.NetworkService/getExecutionTime',
            services_dot_query__pb2.Query.SerializeToString,
            services_dot_response__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def uncheckedSubmit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.NetworkService/uncheckedSubmit',
            services_dot_transaction__pb2.Transaction.SerializeToString,
            services_dot_transaction__response__pb2.TransactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
