[tool.poetry]
name          = "dtpyfw"
description   = "DealerTower Python Framework: reusable buildingâ€‘blocks for DealerTower services"
version       = "0.6.7"
authors       = ["Reza Shirazi <reza@dealertower.com>"]
readme        = "README.md"
license       = "DealerTower Proprietary License"
homepage      = "https://github.com/datgate/dtpyfw"
repository    = "https://github.com/datgate/dtpyfw"
keywords      = ["framework", "microservices", "fastapi", "sqlalchemy", "celery"]
classifiers   = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: Other/Proprietary License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Typing :: Typed",
]
include       = [
  "README.md",
  "LICENSE",
  "CHANGELOG.md",
  "py.typed",
  { path = "docs" }
]
exclude       = [
  { path = ".github" }
]

packages     = [
  { include = "dtpyfw" }
]

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
requests = "~=2.32.3"
pydantic = "~=2.11.8"

python-jose       = { version = "~=3.5.0",    optional = true }
passlib           = { version = "~=1.7.4",    optional = true, extras = ["bcrypt", "argon2"] }
bcrypt            = { version = "~=4.3.0",    optional = true }
fastapi           = { version = "~=0.116.1", optional = true }
gunicorn          = { version = "~=23.0.0",   optional = true }
uvicorn           = { version = "~=0.35.0",   optional = true }
python-multipart  = { version = "~=0.0.20",   optional = true }
boto3             = { version = "~=1.40.4",  optional = true }
SQLAlchemy        = { version = "~=2.0.42",   optional = true }
psycopg2          = { version = "~=2.9.10",   optional = true }
PyMySQL           = { version = "~=1.1.2",   optional = true }
aiomysql          = { version = "~=0.2.0",   optional = true }
asyncpg           = { version = "~=0.30.0",   optional = true }
paramiko          = { version = "~=4.0.0",   optional = true }
python-dateutil   = { version = "~=2.9.0",   optional = true }
redis             = { version = "~=6.4.0",   optional = true }
celery            = { version = "~=5.5.3",   optional = true }
celery-redbeat    = { version = "~=2.3.3",   optional = true }
celery_once       = { version = "~=3.0.1",   optional = true }
kafka-python      = { version = "~=2.2.15",   optional = true }

[tool.poetry.extras]
all = [
  "python-jose", "passlib", "bcrypt",
  "fastapi", "gunicorn", "uvicorn", "python-multipart",
  "boto3",
  "SQLAlchemy", "psycopg2", "asyncpg",
  "paramiko", "python-dateutil",
  "redis", "celery", "celery-redbeat", "celery_once",
  "kafka-python",
]
normal  = [
  "fastapi", "gunicorn", "uvicorn", "python-multipart",
  "SQLAlchemy", "psycopg2", "asyncpg",
  "redis", "celery", "celery-redbeat", "celery_once",
]
slim-api  = [
  "fastapi", "gunicorn", "uvicorn", "python-multipart",
  "SQLAlchemy", "psycopg2", "asyncpg"
]
slim-task  = [
  "SQLAlchemy", "psycopg2", "asyncpg",
  "redis", "celery", "celery-redbeat", "celery_once",
]
encrypt  = ["python-jose", "passlib", "bcrypt"]
api      = ["fastapi", "gunicorn", "uvicorn", "python-multipart"]
bucket   = ["boto3"]
db       = ["SQLAlchemy", "psycopg2", "asyncpg"]
db-mysql = ["SQLAlchemy", "PyMySQL", "aiomysql"]
ftp      = ["paramiko", "python-dateutil"]
redis    = ["redis"]
kafka    = ["kafka-python"]
worker   = ["redis", "celery", "celery-redbeat", "celery_once"]

[tool.poetry.group.dev.dependencies]
types-requests = "*"
types-passlib = "*"
types-python-dateutil = "*"
boto3-stubs = "*"
types-paramiko = "*"
types-redis = "*"
types-python-jose = "*"
types-psycopg2 = "*"
types-PyMySQL = "*"
celery-types = "*"
types-SQLAlchemy = "*"
sqlalchemy-stubs = "*"

[build-system]
requires    = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
