[build-system]
requires = [
    "scikit-build-core>=0.3.3",
    "pybind11>=2.10.0",
]
build-backend = "scikit_build_core.build"

[project]
name = "py-lap-solver"
version = "0.1.1"
description = "Unified Python framework for Linear Assignment Problem solvers"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "Nikita Pond", email = "nikita.pond@icloud.com" }
]
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",  # For ScipySolver
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
]
dev = [
    "pytest>=7.0",
    "black",
    "ruff",
]

[project.urls]
Homepage = "https://github.com/nikitapond/py-lap-solver"
Repository = "https://github.com/nikitapond/py-lap-solver"

[tool.scikit-build]
cmake.minimum-version = "3.24"
cmake.build-type = "Release"
wheel.packages = ["src/py_lap_solver"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.scikit-build.cmake.define]
CMAKE_BUILD_TYPE = "Release"
# Use generic flags for portability, users can override for specific architectures
CMAKE_C_FLAGS_RELEASE = "-O3 -fPIC"
CMAKE_CXX_FLAGS_RELEASE = "-O3 -fPIC"

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude build artifacts
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "SIM",    # flake8-simplify
]
ignore = [
    "E501",   # line too long (handled by black)
    "B008",   # do not perform function calls in argument defaults
    "N803",   # argument name should be lowercase (conflicts with numpy conventions)
    "N806",   # variable in function should be lowercase (conflicts with numpy conventions)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files

[tool.ruff.lint.isort]
known-first-party = ["py_lap_solver"]
force-single-line = false
lines-after-imports = 2
