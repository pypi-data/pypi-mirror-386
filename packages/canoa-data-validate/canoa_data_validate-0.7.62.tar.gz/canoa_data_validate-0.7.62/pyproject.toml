[project]
name = "canoa_data_validate"
version = "0.7.62"

description = "O data_validate é um validador e processador de planilhas, que automatiza a checagem de integridade e estrutura de arquivos de dados da plataforma AdaptaBrasil. Ele é especialmente útil para projetos que exigem padronização e validação rigorosa de dados tabulares, como pesquisas científicas, bancos de dados ambientais e sistemas de indicadores."
authors = [
    {name = "Mário de Araújo Carvalho", email = "mariodearaujocarvalho@gmail.com"},
    {name = "Mauro Assis", email = "assismauro@hotmail.com"},
    {name = "Miguel Gastelumendi", email = "miguelgastelumendi@gmail.com"},
    {name = "Pedro Andrade", email = "pedro.andrade@inpe.br"}
]

readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*"]
keywords = ["data validation", "data processing", "spreadsheet validation", "data integrity", "tabular data", "scientific research", "environmental data", "indicator systems"]
classifiers = [
  "Programming Language :: Python"
]

requires-python = ">=3.12"
dependencies = [
    "pandas (>=2.2.3,<3.0.0)",
    "chardet (>=5.2.0,<6.0.0)",
    "pandas-stubs (>=2.2.3.250527,<3.0.0)",
    "pyenchant (>=3.2.2,<4.0.0)",
    "pdfkit (>=1.0.0,<2.0.0)",
    "babel (>=2.17.0,<3.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)",
    "networkx (>=3.5,<4.0)",
    "python-calamine (>=0.5.4,<0.6.0)",
]

[project.urls]
Homepage = "https://github.com/AdaptaBrasil/"
Documentation = "https://github.com/AdaptaBrasil/data_validate/docs"
Repository = "https://github.com/AdaptaBrasil/data_validate.git"
"Bug Tracker" = "https://github.com/AdaptaBrasil/data_validate/issues"
Changelog = "https://github.com/AdaptaBrasil/data_validate/blob/dev/CHANGELOG.md"


[build-system]
requires = ["poetry-core>=2.2.1,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{include = "data_validate"}]

[tool.poetry.scripts]
canoa-data-validate = "data_validate.main:main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
coverage = "^7.10.6"
pytest-cov = "^6.2.1"
flake8 = "^7.3.0"
black = "^25.1.0"
pre-commit = "^4.3.0"
pdoc = "^15.0.4"
flake8-html = "^0.4.3"
genbadge = {extras = ["all"], version = "^1.1.2"}
pytest-mock = "^3.15.0"
ruff = "^0.14.0"

[tool.coverage.run]
source = ["data_validate"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "*/.venv/*",
    "*/.env/*",
    "__init__.py",
    "*/__init__.py",
    "setup.py",
    "conftest.py",
    "generate_readme.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@\\(abc\\\\.\\)?abstractmethod",
    "def __init_subclass__",
    "pass",
    "continue",
    "break",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "dev-reports/htmlcov"
title = "Data Validate Coverage Report"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "--cov=data_validate --cov-report=term-missing --cov-report=html:dev-reports/htmlcov --cov-report=xml:dev-reports/coverage.xml --cov-fail-under=4 --junitxml=dev-reports/junit/junit.xml -v --tb=short"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.black]
# Define o comprimento máximo da linha. O padrão é 88.
# Um valor comum e mais permissivo é 99 ou 119.
# Vamos usar 99 como um bom ponto de partida.
line-length = 150

# Opcional, mas recomendado: exclui diretórios que não devem ser formatados.
# Usa o mesmo formato do .gitignore.
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
