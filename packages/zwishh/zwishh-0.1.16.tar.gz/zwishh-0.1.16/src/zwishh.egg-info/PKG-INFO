Metadata-Version: 2.4
Name: zwishh
Version: 0.1.16
Summary: Internal utils and SDKs for Zwishh services
Author-email: Backend Team <dev@zwishh.com>
License: MIT
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENCE
Requires-Dist: httpx>=0.26
Requires-Dist: pydantic>=2.7
Requires-Dist: typing-extensions>=4.0
Requires-Dist: fastapi>=0.110
Requires-Dist: tenacity>=8.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: respx; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Dynamic: license-file

# ðŸ§° zwishh â€“ Internal SDK and Utilities

This package provides shared utilities and client SDKs for Zwishh's internal microservices.

It is intended for **internal use only** and should be used by trusted services inside the Zwishh platform infrastructure.

---

## ðŸ“¦ What's Included

### ðŸ”‘ Authentication & Security
- `verify_service_api_key_dep`: FastAPI dependency for verifying internal service API keys
- `get_current_user_id_dep`: Extracts and validates the current authenticated user from headers

### ðŸ§¬ SDK Clients
Clients for accessing core Zwishh services:

- `OrdersClient` â€“ create & fetch orders
- `CartClient` â€“ manage cart state
- `DeliveryClient` â€“ manage delivery state
- `CouponClient` â€“ manage coupon state
- `InteractionClient` â€“ manage interaction state
- `UserServiceClient` â€“ manage user state
- `SellerServiceClient` â€“ manage seller state


Each client:
- Uses async `httpx`
- Injects service-to-service API key headers
- Handles standard error responses
- Retries the request with exponential backoff

---

## ðŸ›  Installation

You can install it directly from PyPI:

```bash
pip install zwishh
