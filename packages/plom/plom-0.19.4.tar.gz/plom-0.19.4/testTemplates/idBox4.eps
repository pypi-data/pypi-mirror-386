%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 23.08.0 (http://poppler.freedesktop.org)
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 403 191
%%HiResBoundingBox: 0 0 403 191
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMR12
%!FontType1-1.0: CMR12
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(c\) 1997, 2009 American Mathematical Society \(<htt\
p://www.ams.org>\), with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -205 793 704] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
F95CB8F8CEBD4396C74A37E2724CD63F484F47C6447F507C11793B061A71C2EB
7D651F93505835EBF9032E361AE5C694F562A11D768CB4FB2540B4281CECEE7D
3A31CE697DC0DEFB6C96B38A970EDFE1B25B852DF4F12D7FA0932E9DE6181BBE
DCD1306A9EB0AFEF37E8FCBE25FB1A843A2D67AB2CEB0D8AAC217FEAE0C1F3A9
6EA27594AD85747780D7B015C4E8064EEDC329E82E9BF096E7CE83A8493E591B
ED192F9E0BBC812B8A27B7C34952D4D896884F29DFEB2063EDB7B46EB17365B0
A9700E0A44E4C0D9BEED9F901C464B35F32CC44470BA12C2112535A436B584AC
5E08162500842D6C918630F65EEC0F2CF92460555647337F30C59A7A2193C629
8C2747B4E6702906DBA9FE3DDFF6341C1731492B7F44F94B18F88A31FF819726
971D3EEC77E0EC1012B2A2EA79C59DA558601AE4D8E8C7844F96AC54CFF92C75
CECECECEB9FBCC4950BDB84E7045429A1238D13A88EE00F9547F2D1E96246044
8451DDA0E84415C96967C9C23BAD6CBACFE266A267DADE3EB12FD35F1ED14100
A0D65BF56A4E8217F4AF05341CF03A0E6CA63C72EEC526FFB5B5869296970D12
29FCC3DB01E5EE423C204C6A023D89AA842FD55C9EDA51AE531B545403156966
B0A573025EE52D518748CB222D121AB1E19A387D67D81711A953B8390F6961EB
99BFA0C40A6B9BEF4131179B970926551693C18C6AE13F91ECD13D629BA88348
BC80B292455A78F06A135D9F7B53233332750024CF1874EFAA8E6B7E31B6DC95
74F5349A28896168031BD0853B24F738676E889A9BAD0E64C3427676EE73E06B
0DBC599C8FED91ABEE442CAFB4EB0D3156E4E0B6F915DCC1502AF7D897BDC2DE
A61075AE089D27BB4F16A7E645F53868E800425009201BAF581865977D3E4F4A
A94D30CFE8865D59163AB78EA7C6BE0293BD16B3958D59AC5C5F2FDF846FC53C
ADD091EDE773EFC7BDA0E692B7E6D5DF091B366603BF9B0084938EF112122C00
02BAA123347DE7795A2593AFE37532A71F28A1B2F2B767F45CE81EE88D1B0D51
25149B32369C07EF050C9D626114DFB4A4AE0494B203FEC9752DB263951A5A2D
92EF018FACC0CAA4245031C0AA5B6F2D0AB8DEB9A7CC7CE1725156FD490BB1CF
664CDF6AAC4C3DADFFDC4FCFCECAF9E89DFCB98C3EA66AA537F8D6FBACC7CA44
355AF746F079501A88AFC78E4A9FEEA730E619655760A2F9B75B4EC4D29C055B
DA7091E224590DC637712F550F1B0CCB1B248D02EA7C649232D0D226B75E0754
E04A2F2959A928B675723B664194B1CAB64A3F74EA76952E8240524EE768DB66
FC65DB0B354DE96450789A4C719ADF48BA6DAF6803762E5164344A74311E4B97
AEB93DA0EFCC67F46F843D222A9CF8FC29B0036203B9DAD0F393DECB1D4DA9FC
75D68CE856ECCE987DFE4C5529040190E70851AAF6B9E1E66984C270523E7595
90602DC3CCF5E6729BB8715A93D4353DD0451AB7F24DCE72E417964E03A297CD
7FA11367ECEF576C01039396C34CDE08C6EA67F3FC454472595AFCAE986B8EEF
1CB74967210E75B939422B150B2B33761B68D9821E4E32DA5482A059C09227A0
8C151DDE006E72A8A2FC73C37DBAC0485A75B5F32D7AE5213C34BC8B6A28DAFD
41236BA465725DF5C55DE74BFA7D9204AAFD2EACFBBB4D229D153185BE20D1F5
FD53C384699864513CC98D13323D3667F6C89A5C272BB6973969D71EF31A78C5
4BEA8F7FE7C91B23C3DCC0F8478FCECEBE46D19E02A2650A5322947551B3E0D9
59B03DAF34868706613A1793897102512BFCDD3A65316F5B92212CF1641A8D37
2139E897D273E72DF9E9F59C930046C094098C41C7CAC7F3B759EFBB931803C8
E98A9BB95B8429EC0814394554844FFFA605759276D25B5697F592BCB9C4EB2C
70D028F062AA5D66F19280BD0B3306C24E972A07814468CCB8D6E86239DDDAA3
E460451846AFA1D4F997EB9197D93D231506FBD066D1A61FCF7C24AE54B0FF15
8E22270484D3C296584135D86C6193BC4288A1373EAB66F50D924E5EBB11C167
2A1A3C24963383ABCCBD0AEDCA57BB709BBB0A0D4D9A8F4706B0F20B8AE2A7CF
81495466F6BEF9ACEF2A5DB5DFF7E3F16FDEE76D50FE2B6C783C24E1D3EBC25F
0964C5D616010639F8A250518D5DCBB27FA3BBBF36B07CA29C395B72EBCEB423
FB7DBF12353CBE391A1B056DC5841983AB2E103DEFBB9B9B0331241B06BA4E6D
F235047188B8333B1061D3E9C2E6C0A581D1A90B3658C8C5F6622624348B38D3
A76FF617F21C9B04C75FBBC2156F8FCC500BC6DDC48A54DD586A457607A12374
D0901F175DD33CA4FEB34BA21C177921018CAA416B7248887740A228064E7378
4BE87B13FD6A0BAC4C99B2F6459C983B0B42F7814A51995A8EA7AFB89B411BC9
DDE28CA9A9F7F32D1D2C00F4463465245DC75709C60ED2BAE89345D91106E5AD
829FD758978F68DA670CD8F3A96A75472187C56384DEFF5B896845E87648E16B
408329132B49E2B4708581AA72A5E257F2F8C42B0897D9BFC336D70F766CB8D9
1FB1D4D3D830D34D24C58963CB908CF6BEEB03BAB66A44F32DFC6C7563AF999B
1221D52DCD49C6DA54F9546D59086CF70982D384A1E0AE55367E30F7294E8A99
D83FDFBE22A602BCC057B8D088A4B3E9CFA1445D6A5D0A5E6CA45BB2CA35078A
AE920FA1376FA1E64D84BC2B22A11D083DDEBD5F59EE02827A40EED625886697
4E64F7BCAEBDD7048FB420F524394F0C74B4B147098C6DD7067D710C97F100A3
9682C55495447BA6AB324FDF561781DC6B8E11B1E7FE4554482E4657D7707ADA
68CBCE5FDDE9C5C89796F9FB0B6D26483B5DB1C559CB85E5A76C50B5EE367B24
440CF3BB2898EA821F0B2EE54876A91B1578EB796205997FF83C6ED8B0F330A9
7318D5954FBFBAF7E86DE21866F84FCF76767167F52E34ED61B106FF6DC6A17D
17FA408C429CD25CEBB2AD1003AC6AD0C71645508E4787D5EF23EFA91431D41B
A0F21EC6614FB0EBC64A0FEB42A253213FD0B5D031C355EF29438CFF020CBB0E
5EA7B359BE5D60477B5F89E41475D5E91C77C14F96E86BA541CEBECF577DE46E
33C083EDAEE82DF32478B8C8D1E5FAE890FF01901EE415ECECBFD11479380ACA
BF14167D53E4F959D38DE91B1AAB0DF28F68A588CB8A5048A439930005842A08
87D0C026B43D2EE5D94E7CD66BD9527A3B42DD55E220736533F113BC48FD8581
F15F46156E278DA2A52CD570BB94046A12DD024A26645D9B029FA0B5647D863E
585F17CEFEB60E9833740EE566C9C875CEA0B2F303983E258B0E4EB65716E0EC
35C8D1B928007B63CCF845EB80CA30BB8EAFF56D3B07691FDF16BAAB24D6D2BA
48D72BD77F099B3750415CA847963590744075F740103A0DB1ECDA329D9D0CD9
B0C133A22532B1A8C541EBE670EC4FADE3A37C9642427D466E95696F5812935D
88BFEDE02D5BE08309800DBFE75B2A65198CD5E17FC5F33AC90B0ED028B8A137
8B443B7F69C43E4855527BBC26BAF8F642BD1ED8F3EBD86711A28063388C1A7C
5DDF9D41B514D841CA7800C7A8A78E76B6FA3048364F847F48383F71BD87ED23
D91F6B28CD3D1859A70113875FC7462DAF9DCF999BE31BE342F06674F556C2AC
8CDE72516624FDB3B84A043580DD93047E72E69F9D5D185D536018F62B824D23
617087D1B83743F138DE46089A944872220EEA13206816AFD75C0EF13A6BCDBF
D347617772CDCF04143B1855E4BDD88B707AA64B171D78D14164A08A4477C464
FA76BF5894138266D3B9DA14AF49450A54F5A684F103EBBDDFA46D1FF9FAEC62
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F9_0 /CMR12 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 403 191 re
W
q
q
[1 0 0 1 -1 -1] cm
q
[1 0 0 1 0 0] cm
0 0 405 192.5 re
W
q
[0.1 0 0 0.1 0 0] cm
39.851 w
/DeviceGray {} CS
[0] SC
23.6523 24.0703 4005.7 1878.61 re
S
3.985 w
78.1992 77.5352 1063.01 531.504 re
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 43.2184 29.427] Tm
0 0 Td
/F9_0 14.3462 Tf
(N)
[10.530111
0] Tj
-2.08127 TJm
(a)
[7.015292
0] Tj
-4.50885 TJm
(m)
[11.692153
0] Tj
-4.72668 TJm
(e)
[6.240597
0] Tj
0.042544 TJm
Q
[3.985 39.851] 0 d
1212.07 183.836 m
3905.02 183.836 l
S
[] 0 d
1141.21 77.5352 2834.68 531.504 re
S
78.1992 609.039 1063.01 531.5 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 31.7051 83.9719] Tm
0 0 Td
/F9_0 14.3462 Tf
(S)
[7.789987
0] Tj
-0.696451 TJm
(i)
[3.88782
0] Tj
-5.03045 TJm
(g)
[7.015292
0] Tj
-4.50906 TJm
(n)
[7.789987
0] Tj
-0.696451 TJm
(a)
[7.015292
0] Tj
-4.50885 TJm
(t)
[5.451556
0] Tj
-4.77007 TJm
(u)
[7.789987
0] Tj
-0.696026 TJm
(r)
[5.451556
0] Tj
-4.77007 TJm
(e)
[6.240597
0] Tj
0.042544 TJm
Q
[3.985 39.851] 0 d
1212.07 715.34 m
3905.02 715.34 l
S
[] 0 d
1141.21 609.039 2834.68 531.5 re
S
78.1992 1140.54 1063.01 354.336 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.7285 126.869] Tm
0 0 Td
/F9_0 14.3462 Tf
(S)
[7.789987
0] Tj
-0.696451 TJm
(e)
[6.240597
0] Tj
0.04297 TJm
(c)
[6.240597
0] Tj
0.042544 TJm
(t)
[5.451556
0] Tj
-4.76965 TJm
(i)
[3.88782
0] Tj
-5.03087 TJm
(o)
[7.015292
0] Tj
-4.50885 TJm
(n)
[7.789987
0] Tj
-0.696026 TJm
Q
1141.21 1140.54 354.332 354.336 re
S
1495.54 1140.54 354.336 354.336 re
S
1849.88 1140.54 354.336 354.336 re
S
78.1992 1494.88 1063.01 354.336 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 11.4145 162.223] Tm
0 0 Td
/F9_0 14.3462 Tf
(S)
[7.789987
0] Tj
-0.696345 TJm
(t)
[5.451556
0] Tj
-4.76986 TJm
(u)
[7.789987
0] Tj
-0.696238 TJm
(d)
[7.789987
0] Tj
-0.696451 TJm
(e)
[6.240597
0] Tj
0.042757 TJm
(n)
[7.789987
0] Tj
24.3966 TJm
(t)
[5.451556
0] Tj
-322.629 TJm
(n)
[7.789987
0] Tj
24.4081 TJm
(u)
[7.789987
0] Tj
-0.696451 TJm
(m)
[11.692153
0] Tj
20.3668 TJm
(b)
[7.789987
0] Tj
-25.801 TJm
(e)
[6.240597
0] Tj
0.042544 TJm
(r)
[5.451556
0] Tj
-4.76922 TJm
Q
1141.21 1494.88 354.332 354.336 re
S
1495.54 1494.88 354.336 354.336 re
S
1849.88 1494.88 354.336 354.336 re
S
2204.21 1494.88 354.336 354.336 re
S
2558.55 1494.88 354.336 354.336 re
S
2912.88 1494.88 354.332 354.336 re
S
3267.21 1494.88 354.336 354.336 re
S
3621.55 1494.88 354.336 354.336 re
S
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMR12
%%EOF
