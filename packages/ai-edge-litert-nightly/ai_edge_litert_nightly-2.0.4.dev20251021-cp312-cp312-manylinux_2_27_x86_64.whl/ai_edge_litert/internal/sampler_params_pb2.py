# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: litert/python/internal/sampler_params.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'litert/python/internal/sampler_params.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+litert/python/internal/sampler_params.proto\x12\x0flitert.lm.proto\"\xd1\x01\n\x11SamplerParameters\x12\x35\n\x04type\x18\x01 \x01(\x0e\x32\'.litert.lm.proto.SamplerParameters.Type\x12\t\n\x01k\x18\x02 \x01(\x05\x12\t\n\x01p\x18\x03 \x01(\x02\x12\x13\n\x0btemperature\x18\x04 \x01(\x02\x12\x11\n\x04seed\x18\x05 \x01(\x05H\x00\x88\x01\x01\">\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\t\n\x05TOP_K\x10\x01\x12\t\n\x05TOP_P\x10\x02\x12\n\n\x06GREEDY\x10\x03\x42\x07\n\x05_seedB4\n\x1a\x63om.google.litert.lm.protoB\x16SamplerParametersProtob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'litert.python.internal.sampler_params_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\032com.google.litert.lm.protoB\026SamplerParametersProto'
  _globals['_SAMPLERPARAMETERS']._serialized_start=65
  _globals['_SAMPLERPARAMETERS']._serialized_end=274
  _globals['_SAMPLERPARAMETERS_TYPE']._serialized_start=203
  _globals['_SAMPLERPARAMETERS_TYPE']._serialized_end=265
# @@protoc_insertion_point(module_scope)
