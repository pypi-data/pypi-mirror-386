# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import analysis_pb2 as analysis__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in analysis_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AnalysisServiceStub(object):
    """AnalysisService is a gRPC service providing RPCs that analyze objects in a repository.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckBlobsGenerated = channel.stream_stream(
                '/gitaly.AnalysisService/CheckBlobsGenerated',
                request_serializer=analysis__pb2.CheckBlobsGeneratedRequest.SerializeToString,
                response_deserializer=analysis__pb2.CheckBlobsGeneratedResponse.FromString,
                _registered_method=True)


class AnalysisServiceServicer(object):
    """AnalysisService is a gRPC service providing RPCs that analyze objects in a repository.
    """

    def CheckBlobsGenerated(self, request_iterator, context):
        """CheckBlobsGenerated checks a provided set of blobs in a specified repository to determine
        whether the file is considered generated. This RPC supports bidirectional streaming because the
        client may specify any number of files to check across multiple request messages and the server
        responds to each request with a separate set of response messages.

        Each provided blob in the request is validated when received. Improperly formatted requests
        result in RPC termination and an error being returned to the client. The RPC also aborts and
        returns an error if requests are made that list Git revisions which do not resolve to a blob
        and/or cannot be found in the repository.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnalysisServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckBlobsGenerated': grpc.stream_stream_rpc_method_handler(
                    servicer.CheckBlobsGenerated,
                    request_deserializer=analysis__pb2.CheckBlobsGeneratedRequest.FromString,
                    response_serializer=analysis__pb2.CheckBlobsGeneratedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gitaly.AnalysisService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('gitaly.AnalysisService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AnalysisService(object):
    """AnalysisService is a gRPC service providing RPCs that analyze objects in a repository.
    """

    @staticmethod
    def CheckBlobsGenerated(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/gitaly.AnalysisService/CheckBlobsGenerated',
            analysis__pb2.CheckBlobsGeneratedRequest.SerializeToString,
            analysis__pb2.CheckBlobsGeneratedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
