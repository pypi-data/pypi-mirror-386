---
text: Review for functions identified in a binary produced by GNU build
group: METHOD_REVIEWS
exe_type: genericbinary
rules:
  - id: GIT_METHODS
    title: Git library used
    summary: Can perform Git Read and Write operations
    description: |
      Git library is used for performing various operations against repository.
    patterns:
      - git_libgit2_init
      - git_repository_discover
      - git_repository_workdir
      - git_repository_open
      - git_status_byindex
      - git_status_list_free
      - git_status_list_new
      - git_annotated_commit_free
      - git_annotated_commit_from_fetchhead
      - git_annotated_commit_from_ref
      - git_annotated_commit_from_revspec
      - git_annotated_commit_id
      - git_annotated_commit_lookup
      - git_annotated_commit_ref
      - git_apply
      - git_apply_to_tree
      - git_blame_buffer
      - git_blame_file
      - git_blame_free
      - git_blame_get_hunk_byindex
      - git_blame_get_hunk_byline
      - git_blame_get_hunk_count
      - git_blame_init_options
      - git_blame_options_init
      - git_branch_create
      - git_branch_create_from_annotated
      - git_branch_delete
      - git_branch_is_checked_out
      - git_branch_is_head
      - git_branch_iterator_free
      - git_branch_iterator_new
      - git_branch_lookup
      - git_branch_move
      - git_branch_name
      - git_branch_name_is_valid
      - git_branch_next
      - git_branch_remote_name
      - git_branch_set_upstream
      - git_branch_upstream
      - git_branch_upstream_merge
      - git_branch_upstream_name
      - git_branch_upstream_remote
      - git_checkout_head
      - git_checkout_index
      - git_checkout_options_init
      - git_checkout_tree
      - git_clone
      - git_clone_options_init
      - git_commit_amend
      - git_commit_author
      - git_commit_author_with_mailmap
      - git_commit_body
      - git_commit_committer
      - git_commit_committer_with_mailmap
      - git_commit_create
      - git_commit_create_buffer
      - git_commit_create_v
      - git_commit_create_with_signature
      - git_commit_dup
      - git_commit_extract_signature
      - git_commit_free
      - git_commit_header_field
      - git_commit_id
      - git_commit_lookup
      - git_commit_lookup_prefix
      - git_commit_message
      - git_commit_message_encoding
      - git_commit_message_raw
      - git_commit_nth_gen_ancestor
      - git_commit_owner
      - git_commit_parent
      - git_commit_parent_id
      - git_commit_parentcount
      - git_commit_raw_header
      - git_commit_summary
      - git_commit_time
      - git_commit_time_offset
      - git_commit_tree
      - git_commit_tree_id
      - git_libgit2_features
      - git_libgit2_init
      - git_libgit2_opts
      - git_libgit2_shutdown
      - git_libgit2_version
      - git_remote_add_fetch
      - git_remote_add_push
      - git_remote_autotag
      - git_remote_connect
      - git_repository_commondir
      - git_repository_config
      - git_repository_config_snapshot
      - git_status_byindex
      - git_status_file
      - git_status_foreach
      - git_status_foreach_ext
      - git_status_list_entrycount
  - id: GIT_CREDENTIALS
    title: Git credentials used
    summary: Can read Git credentials
    description: |
      Git library is used for reading and creating Git credentials.
    patterns:
      - git_credential_default_new
      - git_credential_free
      - git_credential_get_username
      - git_credential_has_username
      - git_credential_ssh_custom_new
      - git_credential_ssh_interactive_new
      - git_credential_ssh_key_from_agent
      - git_credential_ssh_key_memory_new
      - git_credential_ssh_key_new
      - git_credential_username_new
      - git_credential_userpass
      - git_credential_userpass_plaintext_new
  - id: HTTP_METHODS
    title: HTTP server functions used
    summary: Can run an HTTP server
    description: |
      Known http libraries are used to implement an http server.
    patterns:
      - server_options
      - io_service
      - reuse_address
      - non_blocking_io
      - receive_low_watermark
      - send_low_watermark
      - set_headers
      - openssl_certificate
      - openssl_verify_path
      - openssl_certificate_file
      - openssl_private_key_file
      - openssl_ciphers
      - openssl_sni_hostname
      - openssl_options
      - getResponseChunk
      - buildBufferedResponse
      - getAuthorization
      - processHTTPRequest
      - processHTTPRequestAsync
      - onConnectionOpen
      - onConnectionClosed
      - validateAuthentication
      - onFramingError
      - onClientConnected
      - onClientDisconnected
      - onClientMessage
      - WebServer
      - processAsyncQueue
      - processAccept
      - processReceive
      - processSend
      - processControl
      - EasyHttp
      - getCrlCheckPolicy
      - getRootCaDirectory
      - getRootCaFile
      - setRootCaFile
      - getConnectionPool
      - getCorePoolSizeOfAsyncThreadPool
      - getMaximumPoolSizeOfAsyncThreadPool
      - setRootCaDirectory
      - getRootCaDirectory
      - addNetworkInterceptor
      - getNetworkInterceptors
      - setCorePoolSizeOfAsyncThreadPool
      - HttpAuthenticatorCallback
      - getNetworkResponse
      - getPriorResponse
      - Http2Handler
      - submit_file_response
      - submit_rst_stream
      - submit_response
      - get_status_page
      - nghttp2
      - verbose_on_header_callback
      - verbose_on_frame_recv_callback
      - verbose_on_invalid_frame_recv_callback
      - verbose_on_frame_send_callback
      - verbose_on_data_chunk_recv_callback
      - verbose_error_callback
      - deflate_data
      - asio_http2
      - listen_and_serve
      - bind_and_listen
      - http2_handler
      - start_accept
      - create_ssl_client_context
      - create_quic_ssl_client_context
      - accept_connection
      - cert_lookup_tree_add_ssl_ctx
      - check_http2_requirement
      - create_tls_proto_mask
      - setup_server_ssl_context
      - setup_quic_server_ssl_context
      - setup_downstream_client_ssl_context
      - setup_downstream_http2_alpn
      - setup_downstream_http1_alpn
      - create_cert_lookup_tree
      - create_ssl
      - upstream_tls_enabled
      - tls_hostname_match
      - try_cache_tls_session
      - reuse_tls_session
      - load_certificate
      - proto_version_from_string
      - verify_ocsp_response
      - get_x509_fingerprint
      - get_x509_subject_name
      - get_x509_issuer_name
      - get_x509_serial
      - get_x509_not_before
      - get_x509_not_after
  - id: WEB_SOCKET_API
    title: HTTP Web Socket api functions used
    summary: Uses Web Sockets
    description: |
      Web Socket api functions are used.
    patterns:
      - HTTPProtocolParser
      - parseIncoming
      - switchProtocol
      - WSProtocolParser
      - parseWSMessage
      - abortWebSocket
      - closeWebSocket
      - processWholeWSPacket
      - WebSocket
      - sendBinary
      - WebSocketServer
      - setOnWebSocketRequest
      - setOnNewConnection
      - setOnConnectionClosed
      - setOnMessage
      - addFdToEpoll
      - setOnMessageCallback
      - ix::initNetSystem
  - id: FTP_METHODS
    title: FTP server functions used
    summary: Can run an FTP server
    description: |
      Known ftp libraries are used to implement a ftp server.
    patterns:
      - FtpServer
      - addUserAnonymous
  - id: RPC_METHODS
    title: RPC functions used
    summary: Can Execute Remote Procedures
    description: |
      RPC libraries such as jsonrpc and grpc is used.
    patterns:
      - RpcProtocolServerV2
      - HandleJsonRequest
      - ValidateRequestFields
      - RpcProtocolServerV1
      - RpcProtocolServer12
      - createProtocolHandler
      - ProcedureInvokationHandler
      - HandleMethodCall
      - HandleNotificationCall
      - ClientConnectionHandler
      - RpcProtocolClient
      - jsonrpc
      - RpcProtocolClient
      - SendRPCMessage
      - procedureToJsonValue
      - SpecificationParser
      - GetProceduresFromFile
      - GetProceduresFromString
