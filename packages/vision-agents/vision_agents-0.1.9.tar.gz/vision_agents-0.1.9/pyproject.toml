[build-system]
requires = ["hatchling", "hatch-vcs", "setuptools-scm"]
build-backend = "hatchling.build"

[project]
name = "vision-agents"
description = "Open video agents. Build low latency video and voice agents on any realtime edge network."
readme = "README.md"
keywords = ["video AI", "AI", "voice AI", "video agents", "voice agents", "agents", "AI"]
dynamic = ["version"]

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: OS Independent",
]

requires-python = ">=3.10"
dependencies = [
    "getstream[webrtc,telemetry]>=2.5.5",
    "python-dotenv>=1.1.1",
    "pillow>=11.3.0",
    "numpy>=1.24.0",
    "mcp>=1.16.0",
]

[project.urls]
Documentation = "https://visionagents.ai/"
Website = "https://visionagents.ai/"
Source = "https://github.com/GetStream/Vision-Agents"

[project.optional-dependencies]
dev = ["pytest", "mypy", "ruff", "click"]
anthropic = ["vision-agents-plugins-anthropic"]
cartesia = ["vision-agents-plugins-cartesia"]
deepgram = ["vision-agents-plugins-deepgram"]
elevenlabs = ["vision-agents-plugins-elevenlabs"]
gemini = ["vision-agents-plugins-gemini"]
getstream = ["vision-agents-plugins-getstream"]
kokoro = ["vision-agents-plugins-kokoro"]
krisp = ["vision-agents-plugins-krisp"]
moonshine = ["vision-agents-plugins-moonshine"]
openai = ["vision-agents-plugins-openai"]
silero = ["vision-agents-plugins-silero"]
smart_turn = ["vision-agents-plugins-smart-turn"]
ultralytics = ["vision-agents-plugins-ultralytics"]
wizper = ["vision-agents-plugins-wizper"]
xai = ["vision-agents-plugins-xai"]
all-plugins = [
  "vision-agents-plugins-anthropic",
  "vision-agents-plugins-cartesia",
  "vision-agents-plugins-deepgram",
  "vision-agents-plugins-elevenlabs",
  "vision-agents-plugins-gemini",
  "vision-agents-plugins-getstream",
  "vision-agents-plugins-kokoro",
  "vision-agents-plugins-krisp",
  "vision-agents-plugins-moonshine",
  "vision-agents-plugins-openai",
  "vision-agents-plugins-silero",
  "vision-agents-plugins-smart-turn",
  "vision-agents-plugins-ultralytics",
  "vision-agents-plugins-wizper",
  "vision-agents-plugins-xai",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.version]
source = "vcs"
raw-options = { root = "..", search_parent_directories = true, fallback_version = "0.0.0" }

[tool.hatch.build.targets.wheel]
packages = ["vision_agents"]

[tool.hatch.build.targets.sdist]
include = ["vision_agents"]

#[tool.uv.sources]
#krisp-audio = [
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-macosx_12_0_arm64.whl", marker = "sys_platform == 'darwin' and platform_machine == 'aarch64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-linux_aarch64.whl", marker = "sys_platform == 'linux' and platform_machine == 'aarch64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-linux_x86_64.whl", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
#    { path = "./vision_agents/core/turn_detection/krisp/krisp_audio-1.4.0-cp313-cp313-win_amd64.whl", marker = "sys_platform == 'win32'" }
#]
# for local development
# getstream = { path = "../../stream-py/", editable = true }
# aiortc = { path = "../stream-py/", editable = true }
