[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-blocks-registry"
version = "0.1.0"
description = "A modular scaffolding system for FastAPI backends"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Jan Madeyski", email = "jan.madeyski@gmail.com"}
]
keywords = ["fastapi", "scaffolding", "cli", "backend", "boilerplate", "templates", "code-generator"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "typer[all]>=0.20.0",
    "rich>=14.2.0",
    "pydantic>=2.12.0",
    "pydantic-settings>=2.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=6.0.0",
    "black>=24.10.0",
    "ruff>=0.8.4",
    "mypy>=1.14.0",
]

[project.scripts]
fastapi-registry = "fastapi_registry.cli:app"

[project.urls]
Homepage = "https://github.com/jm-sky/fastapi-blocks-registry"
Documentation = "https://github.com/jm-sky/fastapi-blocks-registry#readme"
Repository = "https://github.com/jm-sky/fastapi-blocks-registry"
Issues = "https://github.com/jm-sky/fastapi-blocks-registry/issues"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["fastapi_registry*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
fastapi_registry = ["registry.json", "modules/**/*", "templates/**/*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=fastapi_registry --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
