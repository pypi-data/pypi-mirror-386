// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client';
import type { CommentsData, CommentsResponses, CommentsErrors } from './types.gen';
import { client } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Serve Path Comments
 * Serves the comments to be rendered on the static site.
 */
export const comments = <ThrowOnError extends boolean = false>(options: Options<CommentsData, ThrowOnError>) => {
    return (options.client ?? client).get<CommentsResponses, CommentsErrors, ThrowOnError>({
        url: '/{path}',
        ...options
    });
};
