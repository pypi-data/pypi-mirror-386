// This file is auto-generated by @hey-api/openapi-ts

/**
 * ActorHeaderInfo
 * Derived information suitable to be displayed in a header line.
 */
export type ActorHeaderInfo = {
    /**
     * id of the actor, can be assumed to be globally unique.
     */
    id: string;
    /**
     * The url of the avatar to use for the actor
     */
    avatarUrl?: string | null;
    /**
     * Display name of the actor
     */
    name?: string | null;
    /**
     * Identifier to display for the actor
     */
    identifier: string;
    /**
     * Location of a html representation of the actor
     */
    htmlUrl?: string | null;
};

/**
 * CommentData
 * Information about a single comment
 */
export type CommentData = {
    /**
     * Content
     * Content of the comment
     */
    content: string;
    /**
     * Information about the actor
     */
    actorInfo: ActorHeaderInfo;
    /**
     * meta information about the object, e.g. its publishing date
     */
    metaInfo: ObjectMetaInfo;
    /**
     * Replyof
     * URI the post is a reply of
     */
    replyOf: string;
};

/**
 * CommentsResponse
 * Used to render information on interactions on the site
 */
export type CommentsResponse = {
    /**
     * Comments
     * List of comments
     */
    comments: Array<CommentData>;
    /**
     * Sharedby
     * List of actors that announced this page
     */
    sharedBy: Array<ActorHeaderInfo>;
    /**
     * Likedby
     * List of actors that liked this page
     */
    likedBy: Array<ActorHeaderInfo>;
    /**
     * Rooturi
     * URI of the root element
     */
    rootUri: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * ObjectMetaInfo
 * Derived information suitable to be displayed in a header line.
 */
export type ObjectMetaInfo = {
    /**
     * id of the object, can be assumed to be globally unique.
     */
    id: string;
    /**
     * Location of a html representation of the object
     */
    htmlUrl?: string | null;
    /**
     * Moment of this object being published
     */
    published?: string | null;
    /**
     * Moment of this object being updated
     */
    updated?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type CommentsData = {
    body?: never;
    headers?: {
        /**
         * Referer
         */
        referer?: string | null;
    };
    path: {
        /**
         * Path
         */
        path: string;
    };
    query?: never;
    url: '/{path}';
};

export type CommentsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CommentsError = CommentsErrors[keyof CommentsErrors];

export type CommentsResponses = {
    /**
     * Successful Response
     */
    200: CommentsResponse;
};

export type CommentsResponse2 = CommentsResponses[keyof CommentsResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};
