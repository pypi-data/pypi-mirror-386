# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .rate_limit_attempt import RateLimitAttempt


class RateLimitTarget(UniversalBaseModel):
    target: str
    start_timestamp: dt.datetime = pydantic.Field(alias="startTimestamp")
    end_timestamp: dt.datetime = pydantic.Field(alias="endTimestamp")
    detected_request: typing.Optional[RateLimitAttempt] = pydantic.Field(alias="detectedRequest", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
