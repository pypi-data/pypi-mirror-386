# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .nuclei_dast_config import NucleiDastConfig
from .nuclei_run_mode import NucleiRunMode


class NucleiConfig(UniversalBaseModel):
    targets: typing.List[str]
    run_mode: NucleiRunMode = pydantic.Field(alias="runMode")
    dast: typing.Optional[NucleiDastConfig] = None
    template_paths: typing.Optional[typing.List[str]] = pydantic.Field(alias="templatePaths", default=None)
    workflow_paths: typing.Optional[typing.List[str]] = pydantic.Field(alias="workflowPaths", default=None)
    timeout: int
    threads: int
    proxy: typing.Optional[str] = None
    verbose_logs: bool = pydantic.Field(alias="verboseLogs")
    global_rate_limit: int = pydantic.Field(alias="globalRateLimit")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
