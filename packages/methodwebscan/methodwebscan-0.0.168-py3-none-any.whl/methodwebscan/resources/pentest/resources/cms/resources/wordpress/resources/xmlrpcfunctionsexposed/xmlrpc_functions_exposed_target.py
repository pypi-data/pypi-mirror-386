# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ........common.resources.http.http_request_response import HttpRequestResponse
from .xmlrpc_functions_exposed_attempt import XmlrpcFunctionsExposedAttempt


class XmlrpcFunctionsExposedTarget(UniversalBaseModel):
    target: str
    function_grab_request: HttpRequestResponse = pydantic.Field(alias="functionGrabRequest")
    functions_exposed_attempts: typing.Optional[typing.List[XmlrpcFunctionsExposedAttempt]] = pydantic.Field(
        alias="functionsExposedAttempts", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
