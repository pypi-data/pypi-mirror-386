# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....common.resources.http.web_protocol import WebProtocol
from ....common.resources.method.browserbase_request_config import BrowserbaseRequestConfig
from ....common.resources.method.headless_request_config import HeadlessRequestConfig
from ....common.resources.method.request_method import RequestMethod


class DiscoverProbeConfig(UniversalBaseModel):
    targets: typing.List[str]
    protocol: typing.Optional[WebProtocol] = None
    max_redirects: int = pydantic.Field(alias="maxRedirects")
    verify_tls: bool = pydantic.Field(alias="verifyTls")
    timeout: int
    request_method: RequestMethod = pydantic.Field(alias="requestMethod")
    headless_config: typing.Optional[HeadlessRequestConfig] = pydantic.Field(alias="headlessConfig", default=None)
    browserbase_config: typing.Optional[BrowserbaseRequestConfig] = pydantic.Field(
        alias="browserbaseConfig", default=None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
