{% from "nhsuk/macros/attributes.jinja" import nhsukAttributes %}
{% from "nhsuk/components/error-message/macro.jinja" import errorMessage %}
{% from "nhsuk/components/hint/macro.jinja" import hint %}
{% from "nhsuk/components/label/macro.jinja" import label %}

{#- a record of other elements that we need to associate with the input using
  aria-describedby â€“ for example hints or error messages -#}
{% set ns = namespace() %}
{% set ns.describedBy = params.describedBy if params.describedBy else "" %}
{%- set id = params.id if params.id else params.name -%}

<div class="nhsuk-form-group {%- if params.errorMessage %} nhsuk-form-group--error{% endif %} {%- if params.formGroup.classes %} {{ params.formGroup.classes }}{% endif %}"
  {{- nhsukAttributes(params.formGroup.attributes) }}>
  {{ label({
    "html": params.label.html,
    "text": params.label.text,
    "classes": params.label.classes,
    "isPageHeading": params.label.isPageHeading,
    "attributes": params.label.attributes,
    "for": id
  }) | trim | indent(2) }}
{% if params.hint %}
  {% set hintId = id ~ '-hint' %}
  {% set ns.describedBy = ns.describedBy ~ ' ' ~ hintId if ns.describedBy else hintId %}
  {{ hint({
    "id": hintId,
    "classes": params.hint.classes,
    "attributes": params.hint.attributes,
    "html": params.hint.html,
    "text": params.hint.text
  }) | trim | indent(2) }}
{% endif %}
{% if params.errorMessage %}
  {% set errorId = id ~ '-error' %}
  {% set ns.describedBy = ns.describedBy ~ ' ' ~ errorId if ns.describedBy else errorId %}
  {{ errorMessage({
    "id": errorId,
    "classes": params.errorMessage.classes,
    "attributes": params.errorMessage.attributes,
    "html": params.errorMessage.html,
    "text": params.errorMessage.text,
    "visuallyHiddenText": params.errorMessage.visuallyHiddenText
  }) | trim | indent(2) }}
{% endif %}
{% if params.formGroup.beforeInput %}
  {{ params.formGroup.beforeInput.html | safe | trim | indent(2) if params.formGroup.beforeInput.html else params.formGroup.beforeInput.text }}
{% endif %}
  <textarea class="nhsuk-textarea {%- if params.errorMessage %} nhsuk-textarea--error{% endif %} {%- if params.classes %} {{ params.classes }}{% endif %}" id="{{ id }}" name="{{ params.name }}" rows="{{ params.rows | default(5, true) }}"
  {%- if params.spellcheck | lower in ["true", "false"] %} spellcheck="{{ params.spellcheck | lower }}"{% endif %}
  {%- if params.disabled %} disabled{% endif %}
  {%- if ns.describedBy %} aria-describedby="{{ ns.describedBy }}"{% endif %}
  {%- if params.autocomplete %} autocomplete="{{ params.autocomplete }}"{% endif %}
  {{- nhsukAttributes(params.attributes) }}>{{ params.value }}</textarea>
{% if params.formGroup.afterInput %}
  {{ params.formGroup.afterInput.html | safe | trim | indent(2) if params.formGroup.afterInput.html else params.formGroup.afterInput.text }}
{% endif %}
</div>
