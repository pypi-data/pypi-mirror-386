"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from postivo_client.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)
from pydantic import model_serializer
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class GroupResponseTypedDict(TypedDict):
    r"""Address Book group details returned by the API."""

    name: str
    r"""Group name."""
    id: int
    r"""Unique system-assigned group ID."""
    description: NotRequired[Nullable[str]]
    r"""Optional group description."""
    inherited: NotRequired[bool]
    r"""Indicates whether the group data was inherited from a main account’s shared Address Book."""


class GroupResponse(BaseModel):
    r"""Address Book group details returned by the API."""

    name: str
    r"""Group name."""

    id: int
    r"""Unique system-assigned group ID."""

    description: OptionalNullable[str] = UNSET
    r"""Optional group description."""

    inherited: Optional[bool] = None
    r"""Indicates whether the group data was inherited from a main account’s shared Address Book."""

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = ["description", "inherited"]
        nullable_fields = ["description"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
