Metadata-Version: 2.4
Name: orchestrator-core
Version: 4.6.0rc1
Summary: This is the orchestrator workflow engine.
Author-email: SURF <automation-beheer@surf.nl>
Requires-Python: >=3.11,<3.14
Description-Content-Type: text/markdown
License-Expression: Apache-2.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: AsyncIO
Classifier: Framework :: FastAPI
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Telecommunications Industry
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development
Classifier: Typing :: Typed
License-File: LICENSE
Requires-Dist: alembic==1.16.1
Requires-Dist: anyio>=3.7.0
Requires-Dist: apscheduler>=3.11.0
Requires-Dist: click==8.*
Requires-Dist: deepmerge==2.0
Requires-Dist: deprecated>=1.2.18
Requires-Dist: fastapi~=0.115.14
Requires-Dist: fastapi-etag==0.4.0
Requires-Dist: itsdangerous>=2.2.0
Requires-Dist: jinja2==3.1.6
Requires-Dist: more-itertools~=10.7.0
Requires-Dist: nwa-stdlib~=1.9.2
Requires-Dist: oauth2-lib==2.4.2
Requires-Dist: orjson==3.10.18
Requires-Dist: pgvector>=0.4.1
Requires-Dist: prometheus-client==0.22.1
Requires-Dist: psycopg2-binary==2.9.10
Requires-Dist: pydantic-forms>=1.4.0
Requires-Dist: pydantic-settings~=2.9.1
Requires-Dist: pydantic[email]~=2.11.7
Requires-Dist: python-dateutil==2.8.2
Requires-Dist: python-rapidjson>=1.18,<1.21
Requires-Dist: pytz==2025.2
Requires-Dist: redis==5.1.1
Requires-Dist: semver==3.0.4
Requires-Dist: sentry-sdk[fastapi]>=2.29.1
Requires-Dist: sqlalchemy==2.0.41
Requires-Dist: sqlalchemy-utils==0.41.2
Requires-Dist: strawberry-graphql>=0.281.0
Requires-Dist: structlog>=25.4.0
Requires-Dist: tabulate==0.9.0
Requires-Dist: typer==0.15.4
Requires-Dist: uvicorn[standard]~=0.34.0
Requires-Dist: pydantic-ai-slim >=1.3.0 ; extra == "agent"
Requires-Dist: ag-ui-protocol>=0.1.8 ; extra == "agent"
Requires-Dist: litellm>=1.75.7 ; extra == "agent"
Requires-Dist: celery~=5.5.1 ; extra == "celery"
Requires-Dist: litellm>=1.75.7 ; extra == "search"
Project-URL: Documentation, https://workfloworchestrator.org/orchestrator-core
Project-URL: Homepage, https://workfloworchestrator.org/orchestrator-core
Project-URL: Source, https://github.com/workfloworchestrator/orchestrator-core
Provides-Extra: agent
Provides-Extra: celery
Provides-Extra: search

# Orchestrator-Core

[![Downloads](https://pepy.tech/badge/orchestrator-core/month)](https://pepy.tech/project/orchestrator-core)
[![codecov](https://codecov.io/gh/workfloworchestrator/orchestrator-core/branch/main/graph/badge.svg?token=5ANQFI2DHS)](https://codecov.io/gh/workfloworchestrator/orchestrator-core)
[![pypi_version](https://img.shields.io/pypi/v/orchestrator-core?color=%2334D058&label=pypi%20package)](https://pypi.org/project/orchestrator-core)
[![Supported python versions](https://img.shields.io/pypi/pyversions/orchestrator-core.svg?color=%2334D058)](https://pypi.org/project/orchestrator-core)
![Discord](https://img.shields.io/discord/1295834294270558280?style=flat&logo=discord&label=discord&link=https%3A%2F%2Fdiscord.gg%fQkQn5ajFR)

<p style="text-align: center"><em>Production ready Orchestration Framework to manage product lifecycle and workflows. Easy to use, built on top of FastAPI and Pydantic</em></p>

## Documentation

The documentation can be found at [workfloworchestrator.org](https://workfloworchestrator.org/orchestrator-core/).

## Installation (quick start)

Simplified steps to install and use the orchestrator-core.
For more details, read the [Getting started](https://workfloworchestrator.org/orchestrator-core/getting-started/base/) documentation.

### Step 1 - Install the package

Create a virtualenv and install the orchestrator-core.

```shell
python -m venv .venv
source .venv/bin/activate
pip install orchestrator-core
```

### Step 2 - Setup the database

Create a postgres database:

```shell
createuser -sP nwa
createdb orchestrator-core -O nwa  # set password to 'nwa'
```

Configure the database URI in your local environment:

```
export DATABASE_URI=postgresql://nwa:nwa@localhost:5432/orchestrator-core
```

### Step 3 - Create main.py

Create a `main.py` file.

```python
from orchestrator import OrchestratorCore
from orchestrator.cli.main import app as core_cli
from orchestrator.settings import AppSettings

app = OrchestratorCore(base_settings=AppSettings())

if __name__ == "__main__":
    core_cli()
```

### Step 4 - Run the database migrations

Initialize the migration environment and database tables.

```shell
python main.py db init
python main.py db upgrade heads
```

### Step 5 - Run the app

```shell
export OAUTH2_ACTIVE=False
uvicorn --reload --host 127.0.0.1 --port 8080 main:app
```

Visit the [ReDoc](http://127.0.0.1:8080/api/redoc) or [OpenAPI](http://127.0.0.1:8080/api/docs) page to view and interact with the API.

## Contributing

We use [uv](https://docs.astral.sh/uv/getting-started/installation/) to manage dependencies.

To get started, follow these steps:

```shell
# in your postgres database
createdb orchestrator-core-test -O nwa  # set password to 'nwa'

# on your local machine
git clone https://github.com/workfloworchestrator/orchestrator-core
cd orchestrator-core
export DATABASE_URI=postgresql://nwa:nwa@localhost:5432/orchestrator-core-test
uv sync --all-extras --all-groups
uv run pytest
```

For more details please read the [development docs](https://workfloworchestrator.org/orchestrator-core/contributing/development/).

