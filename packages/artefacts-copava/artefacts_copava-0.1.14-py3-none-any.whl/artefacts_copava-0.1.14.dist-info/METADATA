Metadata-Version: 2.4
Name: artefacts_copava
Version: 0.1.14
Author-email: TN <tomo@artefacts.com>, EP <eric@artefacts.com>
Project-URL: Homepage, https://github.com/art-e-fact/copava
Project-URL: Bug Tracker, https://github.com/art-e-fact/copava/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cerberus
Requires-Dist: pyyaml
Requires-Dist: requests
Requires-Dist: artefacts-c2d
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: pyre-check; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-env; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: setuptools-scm; extra == "dev"
Requires-Dist: twine; extra == "dev"
Dynamic: license-file

# COPAVA

Warp Configuration Parser &amp; Validator

## Usage

```
import artefacts_copava as copava

copava.parse("path/to/config.yaml")
```

Parsing returns a `copava.Config` object, instance of a Python `dataclass`.

Validation is for now "entangled" shamefully with parsing. A bit more time and it will get extracted, so parsing and validation can be used independently and evolve efficiently.
