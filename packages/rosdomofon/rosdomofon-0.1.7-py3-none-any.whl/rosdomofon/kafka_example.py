"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Kafka –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –†–æ—Å–î–æ–º–æ—Ñ–æ–Ω
"""
import time
from .rosdomofon import RosDomofonAPI
from .models import KafkaIncomingMessage, SignUpEvent
from dotenv import load_dotenv
import os
load_dotenv()
USERNAME = os.getenv("USERNAME")
PASSWORD = os.getenv("PASSWORD")
KAFKA_BOOTSTRAP_SERVERS = os.getenv("KAFKA_BOOTSTRAP_SERVERS")
KAFKA_USERNAME = os.getenv("KAFKA_USERNAME")
KAFKA_PASSWORD = os.getenv("KAFKA_PASSWORD")
KAFKA_GROUP_ID = os.getenv("KAFKA_GROUP_ID")
KAFKA_SSL_CA_CERT_PATH = os.getenv("KAFKA_SSL_CA_CERT_PATH")
COMPANY_SHORT_NAME = os.getenv("COMPANY_SHORT_NAME")
print(f'{KAFKA_SSL_CA_CERT_PATH=}')



def handle_incoming_message(message: KafkaIncomingMessage):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Kafka
    
    Args:
        message: –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–±–æ–Ω–µ–Ω—Ç–∞
    """
    print(f"\nüì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–±–æ–Ω–µ–Ω—Ç–∞ {message.from_abonent.phone}:")
    print(f"   –¢–µ–∫—Å—Ç: {message.text}")
    print(f"   –ö–∞–Ω–∞–ª: {message.channel}")
    print(f"   ID –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {message.from_abonent.id}")
    print(f"   Company ID: {message.from_abonent.company_id}")
    
    # –ü—Ä–∏–º–µ—Ä –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ REST API
    # api.send_message_to_abonent(
    #     message.from_abonent.id,
    #     'support',
    #     f'–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ü–æ–ª—É—á–µ–Ω–æ: "{message.message}"'
    # )


def handle_signup(signup: SignUpEvent):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ Kafka (–æ–±—â–∏–π —Ç–æ–ø–∏–∫ SIGN_UPS_ALL)
    
    Args:
        signup: –°–æ–±—ã—Ç–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∞–±–æ–Ω–µ–Ω—Ç–∞
    """
    print(f"\nüìù [–û–±—â–∏–π —Ç–æ–ø–∏–∫] –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–∞:")
    print(f"   ID: {signup.abonent.id}")
    print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {signup.abonent.phone}")
    print(f"   –°—Ç—Ä–∞–Ω–∞: {signup.address.country.name} ({signup.address.country.short_name})")
    print(f"   –ê–¥—Ä–µ—Å: {signup.address.city}, —É–ª.{signup.address.street.name}, –¥.{signup.address.house.number}")
    print(f"   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {signup.application.name} ({signup.application.provider})")
    print(f"   –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ç—Ä—É–±–∫–∞: {signup.virtual}")
    print(f"   –û—Ñ–µ—Ä—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∞: {signup.offer_signed}")
    print(f"   –ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞: {signup.contract_number or '–Ω–µ —É–∫–∞–∑–∞–Ω'}")
    print(f"   –°—Ç–∞—Ç—É—Å: {signup.status}")
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ REST API
    # api.send_message_to_abonent(
    #     signup.abonent.id,
    #     'support',
    #     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –†–æ—Å–î–æ–º–æ—Ñ–æ–Ω!'
    # )


def handle_company_signup(signup: SignUpEvent):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ Kafka (—Ç–æ–ø–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ SIGN_UPS_<company_short_name>)
    
    Args:
        signup: –°–æ–±—ã—Ç–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∞–±–æ–Ω–µ–Ω—Ç–∞ –≤ –∫–æ–º–ø–∞–Ω–∏–∏
    """
    print(f"\nüìù [–¢–æ–ø–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏] –ù–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–±–æ–Ω–µ–Ω—Ç–∞:")
    print(f"   ID: {signup.abonent.id}")
    print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {signup.abonent.phone}")
    print(f"   –°—Ç—Ä–∞–Ω–∞: {signup.address.country.name} ({signup.address.country.short_name})")
    print(f"   –ê–¥—Ä–µ—Å: {signup.address.city}, —É–ª.{signup.address.street.name}, –¥.{signup.address.house.number}")
    print(f"   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {signup.application.name} ({signup.application.provider})")
    print(f"   –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è —Ç—Ä—É–±–∫–∞: {signup.virtual}")
    print(f"   –û—Ñ–µ—Ä—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∞: {signup.offer_signed}")
    print(f"   –ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞: {signup.contract_number or '–Ω–µ —É–∫–∞–∑–∞–Ω'}")
    print(f"   –°—Ç–∞—Ç—É—Å: {signup.status}")
    
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ REST API
    # api.send_message_to_abonent(
    #     signup.abonent.id,
    #     'support',
    #     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–º–ø–∞–Ω–∏—é!'
    # )


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ—Ä–∞"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Kafka
    api = RosDomofonAPI(
            username=USERNAME,
        password=PASSWORD,
        kafka_bootstrap_servers=KAFKA_BOOTSTRAP_SERVERS,  # –ê–¥—Ä–µ—Å Kafka –±—Ä–æ–∫–µ—Ä–∞
        company_short_name=COMPANY_SHORT_NAME,    # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è —Ç–æ–ø–∏–∫–æ–≤
        kafka_group_id=KAFKA_GROUP_ID,  # ID –≥—Ä—É–ø–ø—ã –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π
        kafka_username=KAFKA_USERNAME,
        kafka_password=KAFKA_PASSWORD,
        kafka_ssl_ca_cert_path=KAFKA_SSL_CA_CERT_PATH

    )
    
    try:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ API –†–æ—Å–î–æ–º–æ—Ñ–æ–Ω...")
        auth = api.authenticate()
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω.")
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ Kafka —Å–æ–æ–±—â–µ–Ω–∏–π
        print("üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ Kafka —Å–æ–æ–±—â–µ–Ω–∏–π...")
        api.set_kafka_message_handler(handle_incoming_message)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫)
        print("üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫ SIGN_UPS_ALL)...")
        api.set_signup_handler(handle_signup)
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏
        print("üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏ (SIGN_UPS_<company>)...")
        api.set_company_signup_handler(handle_company_signup)
        
        # –ó–∞–ø—É—Å–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        print("üöÄ –ó–∞–ø—É—Å–∫ Kafka consumer...")
        api.start_kafka_consumer()
        print("‚úÖ Kafka consumer –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        # –ó–∞–ø—É—Å–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫)
        print("üöÄ –ó–∞–ø—É—Å–∫ Kafka consumer –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫)...")
        api.start_signup_consumer()
        print("‚úÖ Kafka consumer —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∑–∞–ø—É—â–µ–Ω!")
        
        # –ó–∞–ø—É—Å–∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏
        print("üöÄ –ó–∞–ø—É—Å–∫ Kafka consumer –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏...")
        api.start_company_signup_consumer()
        print("‚úÖ Kafka consumer —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞–ø—É—â–µ–Ω!")
        
        # –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Kafka
        # print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Kafka...")
        # success = api.send_kafka_message(
        #     to_abonent_id=1574870,
        #     to_abonent_phone=79308312222,
        #     message="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Kafka",
        #     # company_id=1292
        # )
        
        # if success:
        #     print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ Kafka!")
        # else:
        #     print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Kafka")
        
        # –ü—Ä–∏–º–µ—Ä –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        # print("\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        # recipients = [
        #     {"id": 1574870, "phone": 79308312222, "company_id": 1292}
        #     # {"id": 1480844, "phone": 79061343115, "company_id": 1292}
        # ]
        
        # success = api.send_kafka_message_to_multiple(
        #     to_abonents=recipients,
        #     message="–ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Kafka"
        # )
        
        # if success:
        #     print("‚úÖ –ì—Ä—É–ø–ø–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        # else:
        #     print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
        
        # –†–∞–±–æ—Ç–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        print("\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (30 —Å–µ–∫—É–Ω–¥)...")
        print("   –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –†–æ—Å–î–æ–º–æ—Ñ–æ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        time.sleep(30)
        
    except KeyboardInterrupt:
        print("\n‚õî –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        
    finally:
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer...")
        api.stop_kafka_consumer()
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫)
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π (–æ–±—â–∏–π —Ç–æ–ø–∏–∫)...")
        api.stop_signup_consumer()
        
        # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Kafka consumer —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏...")
        api.stop_company_signup_consumer()
        
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
        print("üîí –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π...")
        api.close()
        
        print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã")


if __name__ == "__main__":
    print("üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ Kafka –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –†–æ—Å–î–æ–º–æ—Ñ–æ–Ω")
    print("=" * 50)
    main()

