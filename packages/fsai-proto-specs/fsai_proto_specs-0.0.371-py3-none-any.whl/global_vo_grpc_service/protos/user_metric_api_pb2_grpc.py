# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from global_vo_grpc_service.protos import user_metric_api_pb2 as global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class UserMetricApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAllLeaderboardConfigs = channel.unary_unary(
                '/UserMetricApi/ListAllLeaderboardConfigs',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.ListAllLeaderboardConfigsResponse.FromString,
                )
        self.GetLeaderboardResults = channel.unary_unary(
                '/UserMetricApi/GetLeaderboardResults',
                request_serializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsResponse.FromString,
                )


class UserMetricApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAllLeaderboardConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLeaderboardResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserMetricApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAllLeaderboardConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllLeaderboardConfigs,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.ListAllLeaderboardConfigsResponse.SerializeToString,
            ),
            'GetLeaderboardResults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLeaderboardResults,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserMetricApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserMetricApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAllLeaderboardConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserMetricApi/ListAllLeaderboardConfigs',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.ListAllLeaderboardConfigsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLeaderboardResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserMetricApi/GetLeaderboardResults',
            global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_user__metric__api__pb2.GetLeaderboardResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
