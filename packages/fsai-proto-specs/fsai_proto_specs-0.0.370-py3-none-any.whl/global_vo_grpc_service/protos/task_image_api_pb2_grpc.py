# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from global_vo_grpc_service.protos import task_image_api_pb2 as global__vo__grpc__service_dot_protos_dot_task__image__api__pb2


class TaskImageApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrentStateByTaskIdAndImageId = channel.unary_unary(
                '/TaskImageApi/GetCurrentStateByTaskIdAndImageId',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdResponse.FromString,
                )
        self.GetPaginatedTaskImagesFromTaskId = channel.unary_unary(
                '/TaskImageApi/GetPaginatedTaskImagesFromTaskId',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdResponse.FromString,
                )
        self.FindNextTaskImageForReview = channel.unary_unary(
                '/TaskImageApi/FindNextTaskImageForReview',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewResponse.FromString,
                )
        self.UpdateTaskImageState = channel.unary_unary(
                '/TaskImageApi/UpdateTaskImageState',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateResponse.FromString,
                )
        self.GetTaskImageProgress = channel.unary_unary(
                '/TaskImageApi/GetTaskImageProgress',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressResponse.FromString,
                )
        self.GetTaskImageAuditCountByDateRange = channel.unary_unary(
                '/TaskImageApi/GetTaskImageAuditCountByDateRange',
                request_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeRequest.SerializeToString,
                response_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeResponse.FromString,
                )


class TaskImageApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCurrentStateByTaskIdAndImageId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaginatedTaskImagesFromTaskId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindNextTaskImageForReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTaskImageState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskImageProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskImageAuditCountByDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskImageApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrentStateByTaskIdAndImageId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentStateByTaskIdAndImageId,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdResponse.SerializeToString,
            ),
            'GetPaginatedTaskImagesFromTaskId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaginatedTaskImagesFromTaskId,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdResponse.SerializeToString,
            ),
            'FindNextTaskImageForReview': grpc.unary_unary_rpc_method_handler(
                    servicer.FindNextTaskImageForReview,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewResponse.SerializeToString,
            ),
            'UpdateTaskImageState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTaskImageState,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateResponse.SerializeToString,
            ),
            'GetTaskImageProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskImageProgress,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressResponse.SerializeToString,
            ),
            'GetTaskImageAuditCountByDateRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskImageAuditCountByDateRange,
                    request_deserializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeRequest.FromString,
                    response_serializer=global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TaskImageApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaskImageApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCurrentStateByTaskIdAndImageId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/GetCurrentStateByTaskIdAndImageId',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetCurrentStateByTaskIdAndImageIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaginatedTaskImagesFromTaskId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/GetPaginatedTaskImagesFromTaskId',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetPaginatedTaskImagesFromTaskIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindNextTaskImageForReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/FindNextTaskImageForReview',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.FindNextTaskImageForReviewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTaskImageState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/UpdateTaskImageState',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.UpdateTaskImageStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskImageProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/GetTaskImageProgress',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageProgressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskImageAuditCountByDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TaskImageApi/GetTaskImageAuditCountByDateRange',
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeRequest.SerializeToString,
            global__vo__grpc__service_dot_protos_dot_task__image__api__pb2.GetTaskImageAuditCountByDateRangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
