[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "nustattools"
authors = [
  { name = "Lukas Koch", email = "lukas.koch@mailbox.org" },
]
description = "Statistical tools for neutrino physics"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "numpy >= 1.22.3",
  "numba >= 0.58.1",
  "scipy >= 1.8.0",
]

[project.optional-dependencies]
plotting = [
  "matplotlib >= 3",
]
test = [
  "pytest >=6",
  "pytest-cov >=3",
  "matplotlib >= 3",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
  "intersphinx_registry",
  "matplotlib >= 3",
]

[project.urls]
Homepage = "https://github.com/ast0815/nustattools"
"Bug Tracker" = "https://github.com/ast0815/nustattools/issues"
Discussions = "https://github.com/ast0815/nustattools/discussions"
Changelog = "https://github.com/ast0815/nustattools/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/nustattools/_version.py"

[tool.hatch.envs.default]
features = ["test"]
scripts.test = "pytest {args}"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "default::DeprecationWarning",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["nustattools"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
  '@njit',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.8"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "nustattools.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "nustattools.stats.gx2.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = [
    "numba.*",
    "scipy.*",
]
ignore_missing_imports = true

[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "SIM108",   # Opinion: if-else-blocks are more readable
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["nustattools._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.8"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
]
# Allow non-snake_case variables names as long as they are short
basic.variable-rgx = "[a-zA-Z_][a-zA-Z0-9]{0,3}[a-z0-9_]{0,30}$"
