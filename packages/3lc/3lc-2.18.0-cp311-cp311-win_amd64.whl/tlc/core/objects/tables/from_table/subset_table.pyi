from _typeshed import Incomplete
from tlc.core.builtins.constants.number_roles import NUMBER_ROLE_FRACTION as NUMBER_ROLE_FRACTION, NUMBER_ROLE_PROBABILITY as NUMBER_ROLE_PROBABILITY
from tlc.core.builtins.constants.string_roles import STRING_ROLE_TABLE_URL as STRING_ROLE_TABLE_URL
from tlc.core.object_reference import ObjectReference as ObjectReference
from tlc.core.object_type_registry import ObjectTypeRegistry as ObjectTypeRegistry
from tlc.core.objects.table import Table as Table, TableRow as TableRow
from tlc.core.objects.tables.in_memory_rows_table import SkipRow as SkipRow, _InMemoryRowsTable
from tlc.core.schema import Float64Value as Float64Value, Schema as Schema, StringValue as StringValue
from tlc.core.url import Url as Url
from typing import Any

class SubsetTable(_InMemoryRowsTable):
    """
    A procedural table where rows in an input table are optionally included
    given

    - An include range factor min/max (where 0 mean start of table, and 1 means end)
    - An 'include_probability' which determines the ratio of rows in the range
      to include. The actual probabilities are generated by a pseudo-random generator
      which guarantees identical outputs for identical configurations

    """
    input_table_url: ObjectReference
    range_factor_min: Incomplete
    range_factor_max: Incomplete
    include_probability: Incomplete
    def __init__(self, *, url: Url | None = None, created: str | None = None, description: str | None = None, init_parameters: Any = None, row_cache_url: Url | None = None, row_cache_populated: bool | None = None, input_table_url: Url | Table | None = None, range_factor_min: float | None = None, range_factor_max: float | None = None, include_probability: float | None = None, input_tables: list[Url] | None = None) -> None: ...
    @property
    def seed(self) -> int:
        """A deterministic seed for random number generation determined from object properties


            To be used when including rows based on probability.

        Returns:
            int: A random number seed
        """
