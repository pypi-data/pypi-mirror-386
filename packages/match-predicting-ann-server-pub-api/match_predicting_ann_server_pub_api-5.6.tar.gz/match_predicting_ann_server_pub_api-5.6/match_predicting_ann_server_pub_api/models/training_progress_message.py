from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from match_predicting_ann_server_pub_api.models.base_model import Model
from match_predicting_ann_server_pub_api import util


class TrainingProgressMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, progress=None, precision=None):  # noqa: E501
        """TrainingProgressMessage - a model defined in OpenAPI

        :param progress: The progress of this TrainingProgressMessage.  # noqa: E501
        :type progress: float
        :param precision: The precision of this TrainingProgressMessage.  # noqa: E501
        :type precision: float
        """
        self.openapi_types = {
            'progress': float,
            'precision': float
        }

        self.attribute_map = {
            'progress': 'progress',
            'precision': 'precision'
        }

        self._progress = progress
        self._precision = precision

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingProgressMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrainingProgressMessage of this TrainingProgressMessage.  # noqa: E501
        :rtype: TrainingProgressMessage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def progress(self) -> float:
        """Gets the progress of this TrainingProgressMessage.


        :return: The progress of this TrainingProgressMessage.
        :rtype: float
        """
        return self._progress

    @progress.setter
    def progress(self, progress: float):
        """Sets the progress of this TrainingProgressMessage.


        :param progress: The progress of this TrainingProgressMessage.
        :type progress: float
        """

        self._progress = progress

    @property
    def precision(self) -> float:
        """Gets the precision of this TrainingProgressMessage.


        :return: The precision of this TrainingProgressMessage.
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision: float):
        """Sets the precision of this TrainingProgressMessage.


        :param precision: The precision of this TrainingProgressMessage.
        :type precision: float
        """

        self._precision = precision
