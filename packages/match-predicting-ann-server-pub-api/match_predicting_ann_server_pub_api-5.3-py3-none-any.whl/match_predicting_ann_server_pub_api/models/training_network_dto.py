from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from match_predicting_ann_server_pub_api.models.base_model import Model
from match_predicting_ann_server_pub_api import util


class TrainingNetworkDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_version=None, ignore_matches_with_insufficient_data=None, number_of_last_matches=None, number_of_last_common_matches=None, number_of_matches_for_team_hard_factor=None, number_of_matches_for_player_hard_factor=None):  # noqa: E501
        """TrainingNetworkDTO - a model defined in OpenAPI

        :param network_version: The network_version of this TrainingNetworkDTO.  # noqa: E501
        :type network_version: int
        :param ignore_matches_with_insufficient_data: The ignore_matches_with_insufficient_data of this TrainingNetworkDTO.  # noqa: E501
        :type ignore_matches_with_insufficient_data: bool
        :param number_of_last_matches: The number_of_last_matches of this TrainingNetworkDTO.  # noqa: E501
        :type number_of_last_matches: int
        :param number_of_last_common_matches: The number_of_last_common_matches of this TrainingNetworkDTO.  # noqa: E501
        :type number_of_last_common_matches: int
        :param number_of_matches_for_team_hard_factor: The number_of_matches_for_team_hard_factor of this TrainingNetworkDTO.  # noqa: E501
        :type number_of_matches_for_team_hard_factor: int
        :param number_of_matches_for_player_hard_factor: The number_of_matches_for_player_hard_factor of this TrainingNetworkDTO.  # noqa: E501
        :type number_of_matches_for_player_hard_factor: int
        """
        self.openapi_types = {
            'network_version': int,
            'ignore_matches_with_insufficient_data': bool,
            'number_of_last_matches': int,
            'number_of_last_common_matches': int,
            'number_of_matches_for_team_hard_factor': int,
            'number_of_matches_for_player_hard_factor': int
        }

        self.attribute_map = {
            'network_version': 'networkVersion',
            'ignore_matches_with_insufficient_data': 'ignoreMatchesWithInsufficientData',
            'number_of_last_matches': 'numberOfLastMatches',
            'number_of_last_common_matches': 'numberOfLastCommonMatches',
            'number_of_matches_for_team_hard_factor': 'numberOfMatchesForTeamHardFactor',
            'number_of_matches_for_player_hard_factor': 'numberOfMatchesForPlayerHardFactor'
        }

        self._network_version = network_version
        self._ignore_matches_with_insufficient_data = ignore_matches_with_insufficient_data
        self._number_of_last_matches = number_of_last_matches
        self._number_of_last_common_matches = number_of_last_common_matches
        self._number_of_matches_for_team_hard_factor = number_of_matches_for_team_hard_factor
        self._number_of_matches_for_player_hard_factor = number_of_matches_for_player_hard_factor

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingNetworkDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrainingNetworkDTO of this TrainingNetworkDTO.  # noqa: E501
        :rtype: TrainingNetworkDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_version(self) -> int:
        """Gets the network_version of this TrainingNetworkDTO.


        :return: The network_version of this TrainingNetworkDTO.
        :rtype: int
        """
        return self._network_version

    @network_version.setter
    def network_version(self, network_version: int):
        """Sets the network_version of this TrainingNetworkDTO.


        :param network_version: The network_version of this TrainingNetworkDTO.
        :type network_version: int
        """

        self._network_version = network_version

    @property
    def ignore_matches_with_insufficient_data(self) -> bool:
        """Gets the ignore_matches_with_insufficient_data of this TrainingNetworkDTO.


        :return: The ignore_matches_with_insufficient_data of this TrainingNetworkDTO.
        :rtype: bool
        """
        return self._ignore_matches_with_insufficient_data

    @ignore_matches_with_insufficient_data.setter
    def ignore_matches_with_insufficient_data(self, ignore_matches_with_insufficient_data: bool):
        """Sets the ignore_matches_with_insufficient_data of this TrainingNetworkDTO.


        :param ignore_matches_with_insufficient_data: The ignore_matches_with_insufficient_data of this TrainingNetworkDTO.
        :type ignore_matches_with_insufficient_data: bool
        """

        self._ignore_matches_with_insufficient_data = ignore_matches_with_insufficient_data

    @property
    def number_of_last_matches(self) -> int:
        """Gets the number_of_last_matches of this TrainingNetworkDTO.


        :return: The number_of_last_matches of this TrainingNetworkDTO.
        :rtype: int
        """
        return self._number_of_last_matches

    @number_of_last_matches.setter
    def number_of_last_matches(self, number_of_last_matches: int):
        """Sets the number_of_last_matches of this TrainingNetworkDTO.


        :param number_of_last_matches: The number_of_last_matches of this TrainingNetworkDTO.
        :type number_of_last_matches: int
        """

        self._number_of_last_matches = number_of_last_matches

    @property
    def number_of_last_common_matches(self) -> int:
        """Gets the number_of_last_common_matches of this TrainingNetworkDTO.


        :return: The number_of_last_common_matches of this TrainingNetworkDTO.
        :rtype: int
        """
        return self._number_of_last_common_matches

    @number_of_last_common_matches.setter
    def number_of_last_common_matches(self, number_of_last_common_matches: int):
        """Sets the number_of_last_common_matches of this TrainingNetworkDTO.


        :param number_of_last_common_matches: The number_of_last_common_matches of this TrainingNetworkDTO.
        :type number_of_last_common_matches: int
        """

        self._number_of_last_common_matches = number_of_last_common_matches

    @property
    def number_of_matches_for_team_hard_factor(self) -> int:
        """Gets the number_of_matches_for_team_hard_factor of this TrainingNetworkDTO.


        :return: The number_of_matches_for_team_hard_factor of this TrainingNetworkDTO.
        :rtype: int
        """
        return self._number_of_matches_for_team_hard_factor

    @number_of_matches_for_team_hard_factor.setter
    def number_of_matches_for_team_hard_factor(self, number_of_matches_for_team_hard_factor: int):
        """Sets the number_of_matches_for_team_hard_factor of this TrainingNetworkDTO.


        :param number_of_matches_for_team_hard_factor: The number_of_matches_for_team_hard_factor of this TrainingNetworkDTO.
        :type number_of_matches_for_team_hard_factor: int
        """

        self._number_of_matches_for_team_hard_factor = number_of_matches_for_team_hard_factor

    @property
    def number_of_matches_for_player_hard_factor(self) -> int:
        """Gets the number_of_matches_for_player_hard_factor of this TrainingNetworkDTO.


        :return: The number_of_matches_for_player_hard_factor of this TrainingNetworkDTO.
        :rtype: int
        """
        return self._number_of_matches_for_player_hard_factor

    @number_of_matches_for_player_hard_factor.setter
    def number_of_matches_for_player_hard_factor(self, number_of_matches_for_player_hard_factor: int):
        """Sets the number_of_matches_for_player_hard_factor of this TrainingNetworkDTO.


        :param number_of_matches_for_player_hard_factor: The number_of_matches_for_player_hard_factor of this TrainingNetworkDTO.
        :type number_of_matches_for_player_hard_factor: int
        """

        self._number_of_matches_for_player_hard_factor = number_of_matches_for_player_hard_factor
