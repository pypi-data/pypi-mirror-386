from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from match_predicting_ann_server_pub_api.models.base_model import Model
from match_predicting_ann_server_pub_api.models.training_network_dto import TrainingNetworkDTO
from match_predicting_ann_server_pub_api import util

from match_predicting_ann_server_pub_api.models.training_network_dto import TrainingNetworkDTO  # noqa: E501

class TrainingRequestDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, competition_ids=None, seasons=None, number_of_epochs=None, learning_rate=None, training_network=None):  # noqa: E501
        """TrainingRequestDTO - a model defined in OpenAPI

        :param competition_ids: The competition_ids of this TrainingRequestDTO.  # noqa: E501
        :type competition_ids: List[int]
        :param seasons: The seasons of this TrainingRequestDTO.  # noqa: E501
        :type seasons: List[int]
        :param number_of_epochs: The number_of_epochs of this TrainingRequestDTO.  # noqa: E501
        :type number_of_epochs: int
        :param learning_rate: The learning_rate of this TrainingRequestDTO.  # noqa: E501
        :type learning_rate: float
        :param training_network: The training_network of this TrainingRequestDTO.  # noqa: E501
        :type training_network: TrainingNetworkDTO
        """
        self.openapi_types = {
            'competition_ids': List[int],
            'seasons': List[int],
            'number_of_epochs': int,
            'learning_rate': float,
            'training_network': TrainingNetworkDTO
        }

        self.attribute_map = {
            'competition_ids': 'competitionIds',
            'seasons': 'seasons',
            'number_of_epochs': 'numberOfEpochs',
            'learning_rate': 'learningRate',
            'training_network': 'trainingNetwork'
        }

        self._competition_ids = competition_ids
        self._seasons = seasons
        self._number_of_epochs = number_of_epochs
        self._learning_rate = learning_rate
        self._training_network = training_network

    @classmethod
    def from_dict(cls, dikt) -> 'TrainingRequestDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrainingRequestDTO of this TrainingRequestDTO.  # noqa: E501
        :rtype: TrainingRequestDTO
        """
        return util.deserialize_model(dikt, cls)

    @property
    def competition_ids(self) -> List[int]:
        """Gets the competition_ids of this TrainingRequestDTO.


        :return: The competition_ids of this TrainingRequestDTO.
        :rtype: List[int]
        """
        return self._competition_ids

    @competition_ids.setter
    def competition_ids(self, competition_ids: List[int]):
        """Sets the competition_ids of this TrainingRequestDTO.


        :param competition_ids: The competition_ids of this TrainingRequestDTO.
        :type competition_ids: List[int]
        """

        self._competition_ids = competition_ids

    @property
    def seasons(self) -> List[int]:
        """Gets the seasons of this TrainingRequestDTO.


        :return: The seasons of this TrainingRequestDTO.
        :rtype: List[int]
        """
        return self._seasons

    @seasons.setter
    def seasons(self, seasons: List[int]):
        """Sets the seasons of this TrainingRequestDTO.


        :param seasons: The seasons of this TrainingRequestDTO.
        :type seasons: List[int]
        """

        self._seasons = seasons

    @property
    def number_of_epochs(self) -> int:
        """Gets the number_of_epochs of this TrainingRequestDTO.


        :return: The number_of_epochs of this TrainingRequestDTO.
        :rtype: int
        """
        return self._number_of_epochs

    @number_of_epochs.setter
    def number_of_epochs(self, number_of_epochs: int):
        """Sets the number_of_epochs of this TrainingRequestDTO.


        :param number_of_epochs: The number_of_epochs of this TrainingRequestDTO.
        :type number_of_epochs: int
        """

        self._number_of_epochs = number_of_epochs

    @property
    def learning_rate(self) -> float:
        """Gets the learning_rate of this TrainingRequestDTO.


        :return: The learning_rate of this TrainingRequestDTO.
        :rtype: float
        """
        return self._learning_rate

    @learning_rate.setter
    def learning_rate(self, learning_rate: float):
        """Sets the learning_rate of this TrainingRequestDTO.


        :param learning_rate: The learning_rate of this TrainingRequestDTO.
        :type learning_rate: float
        """

        self._learning_rate = learning_rate

    @property
    def training_network(self) -> TrainingNetworkDTO:
        """Gets the training_network of this TrainingRequestDTO.


        :return: The training_network of this TrainingRequestDTO.
        :rtype: TrainingNetworkDTO
        """
        return self._training_network

    @training_network.setter
    def training_network(self, training_network: TrainingNetworkDTO):
        """Sets the training_network of this TrainingRequestDTO.


        :param training_network: The training_network of this TrainingRequestDTO.
        :type training_network: TrainingNetworkDTO
        """

        self._training_network = training_network
