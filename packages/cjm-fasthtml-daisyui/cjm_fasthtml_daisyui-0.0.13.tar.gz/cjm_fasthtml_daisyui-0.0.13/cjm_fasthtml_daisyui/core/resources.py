"""CDN resources and headers for daisyUI and Tailwind CSS"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/core/resources.ipynb.

# %% auto 0
__all__ = ['DAISYUI_CDN', 'DAISYUI_THEMES_CDN', 'DAISYUI_COLOR_PROPERTIES', 'DAISYUI_COLOR_PROPERTIES_EXT', 'get_daisyui_headers',
           'create_css_link', 'create_js_script', 'build_headers']

# %% ../../nbs/core/resources.ipynb 3
from fasthtml.common import Link, Script, Style
from typing import List, Optional, Union, Literal
from pathlib import Path

from cjm_fasthtml_tailwind.core.resources import get_tailwind_headers

# %% ../../nbs/core/resources.ipynb 5
# Core daisyUI and Tailwind CSS CDN resources
DAISYUI_CDN = "https://cdn.jsdelivr.net/npm/daisyui@5"
DAISYUI_THEMES_CDN = "https://cdn.jsdelivr.net/npm/daisyui@5/themes.css"
DAISYUI_COLOR_PROPERTIES = "https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties.css"
DAISYUI_COLOR_PROPERTIES_EXT = "https://cdn.jsdelivr.net/npm/daisyui@5/colors/properties-extended.css"

# %% ../../nbs/core/resources.ipynb 6
def get_daisyui_headers(
    include_themes: bool = True  # Include the daisyUI themes CSS file
) -> List[Union[Link, Script]]:  # List of Link and Script elements for daisyUI and Tailwind CSS
    """Get the standard daisyUI and Tailwind CSS CDN headers."""
    headers = [
        Link(rel="stylesheet", href=DAISYUI_CDN, type="text/css"),
        Link(rel="stylesheet", href=DAISYUI_COLOR_PROPERTIES, type="text/css"),
        Link(rel="stylesheet", href=DAISYUI_COLOR_PROPERTIES_EXT, type="text/css"),
        get_tailwind_headers()
    ]
    
    if include_themes:
        headers.insert(1, Link(rel="stylesheet", href=DAISYUI_THEMES_CDN, type="text/css"))
    
    return headers

# %% ../../nbs/core/resources.ipynb 12
def create_css_link(
    href: str,  # URL or path to CSS file
    media: Optional[str] = None,  # Media query (e.g., "screen", "print")
    crossorigin: Optional[Literal["anonymous", "use-credentials"]] = None
) -> Link:  # Link element for CSS stylesheet
    """Create a CSS link element with optional attributes."""
    attrs = {"rel": "stylesheet", "href": href, "type": "text/css"}
    
    if media:
        attrs["media"] = media
    if crossorigin:
        attrs["crossorigin"] = crossorigin
        
    return Link(**attrs)

# %% ../../nbs/core/resources.ipynb 13
def create_js_script(
    src: str,  # URL or path to JavaScript file
    async_: bool = False,  # Load script asynchronously
    defer: bool = False,  # Defer script execution
    module: bool = False,  # ES6 module
    crossorigin: Optional[Literal["anonymous", "use-credentials"]] = None
) -> Script:  # Script element for JavaScript file
    """Create a JavaScript script element with optional attributes."""
    attrs = {"src": src}
    
    if async_:
        attrs["async"] = ""
    if defer:
        attrs["defer"] = ""
    if module:
        attrs["type"] = "module"
    if crossorigin:
        attrs["crossorigin"] = crossorigin
        
    return Script(**attrs)

# %% ../../nbs/core/resources.ipynb 15
def build_headers(
    include_themes: bool = True,  # Include daisyUI themes
    custom_css: Optional[List[Union[str, Link]]] = None,  # Additional CSS files
    custom_js: Optional[List[Union[str, Script]]] = None,  # Additional JS files
    custom_theme_css: Optional[str] = None,  # Custom theme CSS as a string
    custom_theme_paths: Optional[List[Union[str, Path]]] = None  # List of paths to custom theme CSS files
) -> List[Union[Link, Script, Style]]:  # List of Link, Script, and Style elements for complete app headers
    """
    Build a complete set of headers for a FastHTML app with daisyUI and Tailwind.
    
    The order of headers is:
    1. daisyUI CSS
    2. daisyUI themes CSS (if included)
    3. Custom theme CSS (if provided as string)
    4. Custom theme CSS files (if provided as Path objects)
    5. Custom CSS files
    6. Tailwind CSS JavaScript
    7. Custom JavaScript files
    """
    headers = []
    
    # Core daisyUI CSS
    headers.append(Link(rel="stylesheet", href=DAISYUI_CDN, type="text/css"))
    headers.append(Link(rel="stylesheet", href=DAISYUI_COLOR_PROPERTIES_EXT, type="text/css"))
    
    # daisyUI themes
    if include_themes:
        headers.append(Link(rel="stylesheet", href=DAISYUI_THEMES_CDN, type="text/css"))
    
    # Custom theme CSS as inline style
    if custom_theme_css:
        headers.append(Style(custom_theme_css))
    
    # Custom theme paths - load CSS content as Style elements
    if custom_theme_paths:
        for theme_path in custom_theme_paths:
            path = Path(theme_path)
            if path.exists() and path.is_file():
                with open(path, 'r', encoding='utf-8') as f:
                    headers.append(Style(f.read()))
    
    # Custom CSS files
    if custom_css:
        for css in custom_css:
            if isinstance(css, str):
                headers.append(create_css_link(css))
            else:
                headers.append(css)
    
    # Tailwind CSS (must come after daisyUI for proper initialization)
    headers.append(get_tailwind_headers())
    
    # Custom JavaScript files
    if custom_js:
        for js in custom_js:
            if isinstance(js, str):
                headers.append(create_js_script(js))
            else:
                headers.append(js)
    
    return headers
