"""CLI tool for exploring cjm-fasthtml-daisyui components and builders"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/cli/explorer.ipynb.

# %% auto 0
__all__ = ['initialize_daisyui_cli', 'setup_argument_parser', 'main']

# %% ../../nbs/cli/explorer.ipynb 3
import argparse

# %% ../../nbs/cli/explorer.ipynb 4
# Import all the CLI functionality from the cjm-fasthtml-tailwind package
from typing import Optional
from cjm_fasthtml_tailwind.cli.utils import load_code_from_file
from cjm_fasthtml_tailwind.cli.search import search_all
from cjm_fasthtml_tailwind.cli.test_code import execute_test_code
from cjm_fasthtml_tailwind.cli.pattern_scanner import (
    analyze_and_suggest_input, display_input_analysis, 
    InputType
)
from cjm_fasthtml_tailwind.cli.cli_config import LibraryConfig, get_active_config

from cjm_fasthtml_tailwind.cli.display import (
    display_modules, display_module_factories, display_all_factories, 
    display_module_examples, display_all_examples, display_example_source, 
    display_module_helpers, display_helper_source,
    display_all_helpers, display_factory_info, display_search_results, 
    display_core_utility_source, display_core_utilities, display_imports, display_test_code_result
)

from cjm_fasthtml_tailwind.cli.dynamic_examples import (
    get_example_modules, get_example_factories, get_example_features, get_example_helpers, 
    get_example_core_utils, get_combine_classes_example, get_example_test_code
)

from cjm_fasthtml_tailwind.cli.explorer import (
    dispatch_command, handle_search_command, handle_test_code_command,
    handle_scan_command, create_help_description, create_example_usage_flow, create_help_epilogue, 
)

from cjm_fasthtml_tailwind.cli.explorer import ( 
    add_modules_parser, add_factories_parser, add_factory_parser, 
    add_examples_parser, add_example_parser, add_helpers_parser, 
    add_helper_parser, add_search_parser, add_test_code_parser,
    add_core_utils_parser, add_core_util_parser, add_imports_parser, 
    add_scan_parser
)

# %% ../../nbs/cli/explorer.ipynb 5
# Import configuration management from tailwind
from cjm_fasthtml_tailwind.cli.cli_config import set_active_config, get_tailwind_config

# Import our local DaisyUI configuration
from .cli_config import get_daisyui_config

# %% ../../nbs/cli/explorer.ipynb 7
def initialize_daisyui_cli() -> LibraryConfig: # Configuration for the CLI
    """Initialize the CLI with DaisyUI configuration."""
    config = get_daisyui_config()
    set_active_config(config)
    return config

# %% ../../nbs/cli/explorer.ipynb 9
def setup_argument_parser(
    config: Optional[LibraryConfig] = None  # Optional configuration to use
) -> argparse.ArgumentParser: # Main argument parser with all subcommands
    """Set up the main argument parser with all subcommands."""
    if config is None:
        config = get_active_config()

    tailwind_config = get_tailwind_config()

    description = create_help_description()
    epilog = create_help_epilogue()
    epilog += f"\n\n{tailwind_config.display_name} Usage:"
    epilog += f"\n⚠️  Important: Use the {tailwind_config.package_name} library for adding {tailwind_config.display_name} utility classes."
    epilog += f"\nYou can learn about the {tailwind_config.package_name} library with the {tailwind_config.cli_command} CLI tool."
    
    parser = argparse.ArgumentParser(
        description=description,
        epilog=epilog,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        prog=config.cli_command
    )
    
    # Create subcommands
    subparsers = parser.add_subparsers(dest='command', help='Available commands')
    
    # Add all subcommand parsers
    add_modules_parser(subparsers)
    add_factories_parser(subparsers)
    add_factory_parser(subparsers)
    add_examples_parser(subparsers)
    add_example_parser(subparsers)
    # add_helpers_parser(subparsers)
    # add_helper_parser(subparsers)
    add_search_parser(subparsers)
    add_test_code_parser(subparsers)
    add_core_utils_parser(subparsers)
    add_core_util_parser(subparsers)
    add_imports_parser(subparsers)
    add_scan_parser(subparsers)
    
    return parser

# %% ../../nbs/cli/explorer.ipynb 12
def main() -> None: # CLI entry point
    """CLI entry point for exploring cjm-fasthtml-daisyui components."""
    # Initialize with DaisyUI configuration
    initialize_daisyui_cli();
    
    # Set up the argument parser (will use DaisyUI config)
    parser = setup_argument_parser()
    
    # Parse arguments
    args = parser.parse_args()
    
    # If no command specified, show help
    if args.command is None:
        parser.print_help()
        return
    
    # Dispatch to the appropriate command handler
    dispatch_command(args)
