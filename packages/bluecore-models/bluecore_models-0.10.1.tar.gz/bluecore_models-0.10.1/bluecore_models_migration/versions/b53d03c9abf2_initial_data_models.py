"""Initial Data Models

Revision ID: b53d03c9abf2
Revises:
Create Date: 2025-02-14 09:46:22.075751

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b53d03c9abf2"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bibframe_classes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("uri", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uri"),
    )
    op.create_table(
        "resource_base",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("uri", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uri"),
    )
    op.create_table(
        "other_resources",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_profile", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["resource_base.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "resource_bibframe_classes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bf_class_id", sa.Integer(), nullable=False),
        sa.Column("resource_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bf_class_id"],
            ["bibframe_classes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource_base.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "versions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("resource_id", sa.Integer(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["resource_base.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "works",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["resource_base.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bibframe_other_resources",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("other_resource_id", sa.Integer(), nullable=False),
        sa.Column("bibframe_resource_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["bibframe_resource_id"],
            ["resource_base.id"],
        ),
        sa.ForeignKeyConstraint(
            ["other_resource_id"],
            ["other_resources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "instances",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("work_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id"],
            ["resource_base.id"],
        ),
        sa.ForeignKeyConstraint(
            ["work_id"],
            ["works.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("instances")
    op.drop_table("bibframe_other_resources")
    op.drop_table("works")
    op.drop_table("versions")
    op.drop_table("resource_bibframe_classes")
    op.drop_table("other_resources")
    op.drop_table("resource_base")
    op.drop_table("bibframe_classes")
    # ### end Alembic commands ###
