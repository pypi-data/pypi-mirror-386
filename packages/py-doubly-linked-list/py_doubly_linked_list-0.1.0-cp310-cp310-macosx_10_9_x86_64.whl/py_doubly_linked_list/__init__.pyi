from typing import Iterable, Any

class DoublyLinkedList:
    def __init__(self, Iterable: Iterable) -> None: ...
    def append(self, object: Any, forward: bool = True) -> None: ...
    def clear(self) -> None: ...
    def copy(self) -> DoublyLinkedList: ...
    def count(self, value: Any) -> int: ...
    def extend(self, iterable: Iterable, forward: bool = True) -> None: ...
    def index(self, value: Any, start: int, stop: int) -> int: ...
    def insert(self, object: Any, index: int, forward: bool = True) -> None: ...
    def pop(self, index: int = -1) -> Any: ...
    def remove(self, value: Any) -> None: ...
    def reverse(self) -> None: ...
    def __add__(self, Iterable: Iterable) -> DoublyLinkedList: ...
    def __contains__(self, Any: Any) -> bool: ...
    def __delitem__(self, Any: Any) -> None: ...
    def __getitem__(self, Index: int) -> Any: ...
    def __iadd__(self, Iterable: Iterable) -> None: ...
    def __len__(self) -> int: ...
    def __setitem__(self, Index: int, Object: Any) -> None: ...