name: Secure Integration test

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  authorization-check:
    permissions: read-all
    runs-on: ubuntu-latest
    outputs:
      approval-env: ${{ steps.collab-check.outputs.result }}
    steps:
      - name: Collaborator Check
        uses: actions/github-script@v7
        id: collab-check
        with:
          result-encoding: string
          script: |
            try {
              let username;
              if (context.payload.pull_request) {
                username = context.payload.pull_request.user.login;
              } else {
                // For non-PRs (eg. merge), check the actor (person who merged)
                username = context.actor;
                console.log(`No pull request context found, checking permissions for actor: ${username}`);
              }

              const permissionResponse = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: username,
              });
              const permission = permissionResponse.data.permission;
              const hasWriteAccess = ['write', 'admin'].includes(permission);
              if (!hasWriteAccess) {
                console.log(`User ${username} does not have write access to the repository (permission: ${permission})`);
                return "manual-approval"
              } else {
                console.log(`Verifed ${username} has write access. Auto Approving PR Checks.`)
                return "auto-approve"
              }
            } catch (error) {
              console.log(`${username} does not have write access. Requiring Manual Approval to run PR Checks.`)
              return "manual-approval"
            }
  check-access-and-checkout:
    runs-on: ubuntu-latest
    needs: authorization-check
    environment: ${{ needs.authorization-check.outputs.approval-env }}
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - name: Configure Credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
         role-to-assume: ${{ secrets.AGENTCORE_INTEG_TEST_ROLE }}
         aws-region: us-west-2
         mask-aws-account-id: true
      - name: Checkout head commit
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Pull the commit from the forked repo
          persist-credentials: false  # Don't persist credentials for subsequent actions
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install -e .
          pip install --no-cache-dir pytest requests strands-agents uvicorn httpx starlette
      - name: Run integration tests
        env:
          AWS_REGION: us-west-2
          PYTHONUNBUFFERED: 1
        id: tests
        timeout-minutes: 5
        run: |
          pytest tests_integ/runtime -s --log-cli-level=INFO
