# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .billing_plan_credit_grant_response_data import BillingPlanCreditGrantResponseData
from .billing_price_response_data import BillingPriceResponseData
from .billing_product_detail_response_data import BillingProductDetailResponseData
from .custom_plan_view_config_response_data import CustomPlanViewConfigResponseData
from .feature_detail_response_data import FeatureDetailResponseData
from .plan_entitlement_response_data import PlanEntitlementResponseData


class PlanGroupPlanDetailResponseData(UniversalBaseModel):
    audience_type: typing.Optional[str] = None
    billing_product: typing.Optional[BillingProductDetailResponseData] = None
    charge_type: str
    company_count: int
    compatible_plan_ids: typing.List[str]
    controlled_by: str
    created_at: dt.datetime
    custom_plan_config: typing.Optional[CustomPlanViewConfigResponseData] = None
    description: str
    entitlements: typing.List[PlanEntitlementResponseData]
    features: typing.List[FeatureDetailResponseData]
    icon: str
    id: str
    included_credit_grants: typing.Optional[typing.List[BillingPlanCreditGrantResponseData]] = None
    is_custom: bool
    is_default: bool
    is_free: bool
    is_trialable: bool
    monthly_price: typing.Optional[BillingPriceResponseData] = None
    name: str
    one_time_price: typing.Optional[BillingPriceResponseData] = None
    plan_type: str
    trial_days: typing.Optional[int] = None
    updated_at: dt.datetime
    yearly_price: typing.Optional[BillingPriceResponseData] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
