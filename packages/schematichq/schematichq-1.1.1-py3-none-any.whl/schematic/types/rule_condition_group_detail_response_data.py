# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .rule_condition_detail_response_data import RuleConditionDetailResponseData


class RuleConditionGroupDetailResponseData(UniversalBaseModel):
    conditions: typing.List[RuleConditionDetailResponseData]
    created_at: dt.datetime
    environment_id: str
    flag_id: typing.Optional[str] = None
    id: str
    plan_id: typing.Optional[str] = None
    rule_id: str
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
