# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class BillingProductResponseData(UniversalBaseModel):
    account_id: str
    created_at: dt.datetime
    currency: typing.Optional[str] = pydantic.Field(default=None)
    """
    Deprecated; currencies are associated with prices, not products
    """

    environment_id: str
    external_id: str
    is_active: bool
    name: str
    price: float
    price_decimal: typing.Optional[str] = None
    product_id: str
    quantity: float
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
