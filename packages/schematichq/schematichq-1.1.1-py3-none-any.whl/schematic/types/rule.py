# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .condition import Condition
from .condition_group import ConditionGroup


class Rule(UniversalBaseModel):
    account_id: str
    condition_groups: typing.List[ConditionGroup]
    conditions: typing.List[Condition]
    environment_id: str
    flag_id: typing.Optional[str] = None
    id: str
    name: str
    priority: int
    rule_type: str
    value: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
