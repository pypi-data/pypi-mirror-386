# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .credit_grant_detail import CreditGrantDetail


class CreditUsage(UniversalBaseModel):
    credit_consumption_rate: typing.Optional[float] = None
    credit_grant_counts: typing.Optional[typing.Dict[str, float]] = None
    credit_grant_details: typing.Optional[typing.List[CreditGrantDetail]] = None
    credit_remaining: typing.Optional[float] = None
    credit_total: typing.Optional[float] = None
    credit_type_icon: typing.Optional[str] = None
    credit_type_name: typing.Optional[str] = None
    credit_used: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
