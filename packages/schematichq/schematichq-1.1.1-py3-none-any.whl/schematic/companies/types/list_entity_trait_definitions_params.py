# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .list_entity_trait_definitions_response_params_entity_type import (
    ListEntityTraitDefinitionsResponseParamsEntityType,
)
from .list_entity_trait_definitions_response_params_trait_type import ListEntityTraitDefinitionsResponseParamsTraitType


class ListEntityTraitDefinitionsParams(UniversalBaseModel):
    """
    Input parameters
    """

    entity_type: typing.Optional[ListEntityTraitDefinitionsResponseParamsEntityType] = None
    ids: typing.Optional[typing.List[str]] = None
    limit: typing.Optional[int] = pydantic.Field(default=None)
    """
    Page limit (default 100)
    """

    offset: typing.Optional[int] = pydantic.Field(default=None)
    """
    Page offset (default 0)
    """

    q: typing.Optional[str] = None
    trait_type: typing.Optional[ListEntityTraitDefinitionsResponseParamsTraitType] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
