[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pipecat-ai-tail"
dynamic = ["version"]
description = "A pipeline runner for Pipecat"
license = "BSD-2-Clause"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["pipecat", "ai"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Communications :: Conferencing",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "pipecat-ai>=0.0.87",
    "textual>=6.0.0,<7",
    "textual-plotext>=1.0.0,<2",
    "typer>=0.20.0,<1",
    "websockets>=13.1,<15.0",
]

[project.urls]
Source = "https://github.com/pipecat-ai/tail"
Website = "https://pipecat.ai"

[project.entry-points."pipecat_cli.extensions"]
tail = "pipecat_tail.cli:entrypoint_cli_typer"

[dependency-groups]
dev = [
    "build~=1.2.2",
    "pip-tools~=7.4.1",
    "pre-commit~=4.2.0",
    "pyright>=1.1.404,<1.2",
    "ruff>=0.12.11,<1",
    "setuptools~=78.1.1",
    "setuptools_scm~=8.3.1",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"pipecat_tail" = ["py.typed"]

[tool.setuptools_scm]
local_scheme = "no-local-version"
fallback_version = "0.0.0-dev"

[tool.ruff]
exclude = [".git"]
line-length = 100

[tool.ruff.lint]
select = [
    "D", # Docstring rules
    "I", # Import rules
]
ignore = [
    "D105",  # Missing docstring in magic methods (__str__, __repr__, etc.)
]

[tool.ruff.lint.per-file-ignores]
# Skip D104 (missing docstring in public package) for __init__.py files
"**/__init__.py" = ["D104"]

[tool.ruff.lint.pydocstyle]
convention = "google"
