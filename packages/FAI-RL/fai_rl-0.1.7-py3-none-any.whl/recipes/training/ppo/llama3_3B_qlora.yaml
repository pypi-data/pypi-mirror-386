# Model Configuration
# Defines the base model and its loading parameters
model:
  base_model_name: "meta-llama/Llama-3.2-3B-Instruct"   # HuggingFace model name or local path
  value_model_name: "meta-llama/Llama-3.2-3B-Instruct"  # Model for value function (typically same as base_model)
  torch_dtype: "bfloat16"                               # Data type for model weights (bfloat16/float16/float32)
  low_cpu_mem_usage: true                               # Reduce CPU memory usage during model loading
  load_in_8bit: false                                   # Enable 8-bit quantization
  load_in_4bit: true                                    # Enable 4-bit quantization (for QLoRA)
  use_flash_attention: false                            # Use Flash Attention for faster training (if supported)
  
  # QLoRA-specific quantization parameters (only when load_in_4bit: true)
  bnb_4bit_compute_dtype: "bfloat16"                    # Compute dtype for 4-bit quantization
  bnb_4bit_quant_type: "nf4"                            # Quantization type: "nf4" or "fp4"
  bnb_4bit_use_double_quant: true                       # Use double quantization for better accuracy
  
  # LoRA configuration (for parameter-efficient fine-tuning)
  use_lora: true                                        # Enable LoRA
  lora_r: 16                                            # LoRA rank (8 for LoRA, 16 for QLoRA)
  lora_alpha: 32                                        # LoRA alpha scaling factor (typically 2x rank)
  lora_dropout: 0.05                                    # LoRA dropout rate
  lora_target_modules:                                  # Target modules for LoRA
    - q_proj
    - v_proj
    - k_proj
    - o_proj
    - gate_proj
    - up_proj
    - down_proj
  lora_bias: "none"                                     # Bias handling: "none", "all", or "lora_only"

# Data Configuration
# Specifies datasets and preprocessing settings
data:
  datasets: # YOUR TRAINING DATASET
    # Supports multiple datasets.
    # Add additional entries here for combined training across datasets.
    # For PPO (preference-based methods):
    - name: "trl-internal-testing/descriptiveness-sentiment-trl-style"  # HuggingFace dataset name/path (required)
      split: "descriptiveness"                          # Dataset split to use (default: "train")
      prompt_column: "prompt"                           # Name of prompt column (default: "prompt")
      chosen_column: "chosen"                           # Name of chosen/preferred response column (default: "chosen")
      rejected_column: "rejected"                       # Name of rejected response column (default: "rejected")
  
  # Text processing settings
  max_length: 2048                                      # Maximum sequence length for model input
  max_prompt_length: 1024                               # Maximum length for prompts (rest reserved for responses)
  remove_unused_columns: false                          # Keep all dataset columns (set true to save memory)
  dataset_num_proc: 1                                   # Number of processes for dataset preprocessing (optional)

# Training Configuration
# Controls the training process and optimization settings
training:
  algorithm: "ppo"                                      # Training algorithm: sft, dpo, ppo, grpo, gspo
  output_dir: "models/llama3_3B_Inst_PPO_qlora_v1"      # Directory to save trained model and checkpoints
  
  # Core training hyperparameters
  per_device_train_batch_size: 1                        # Batch size per GPU (adjust based on GPU memory)
  gradient_accumulation_steps: 16                       # Steps to accumulate gradients (effective batch = batch_size × accum_steps × num_gpus)
  learning_rate: 2.0e-4                                 # Learning rate (1e-5 for full/LoRA, 1e-4 to 2e-4 for QLoRA)
  num_train_epochs: 1                                   # Number of complete passes through the dataset
  max_steps: -1                                         # Maximum number of training steps (-1 = train for num_train_epochs)
  
  # PPO-specific parameters (only used when algorithm: "ppo")
  gamma: 1.0                                            # Discount factor for rewards
  lam: 0.95                                             # GAE (Generalized Advantage Estimation) lambda
  cliprange: 0.2                                        # PPO clipping range for policy updates
  cliprange_value: 0.2                                  # Value function clipping range
  vf_coef: 0.1                                          # Value function loss coefficient
  
  # Logging and checkpointing
  logging_steps: 5                                      # Log training metrics every N steps
  save_steps: 100                                       # Save model checkpoint every N steps
  
  # Memory and precision optimization
  bf16: true                                            # Use bfloat16 precision (recommended for modern GPUs)
  gradient_checkpointing: true                          # Trade compute for memory (enables larger models/batch sizes)

# Weights & Biases Integration
# Optional experiment tracking and monitoring
wandb:
  enabled: false                                        # Enable W&B logging
  project: "rl"                                         # W&B project name
  entity: "fai-llmaas"                                  # W&B username or team name
  name: "Llama-3.2-3B-Inst-QLoRA-PPO"                   # Experiment name in W&B
  tags: ["PPO", "llama3", "3B-Inst", "QLoRA", "4-bit"]  # Tags for organizing experiments
