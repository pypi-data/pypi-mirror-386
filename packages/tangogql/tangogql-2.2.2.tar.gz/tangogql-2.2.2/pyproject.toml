[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "tangogql/_version.py"

[project]
name = "tangogql"
description = "TangoGQL implementation using Ariadne"
dynamic = ["version"]
requires-python = ">=3.10"
readme = "README.md"
license = {file = "LICENSE.txt"}
dependencies = [
    "pytango",
    "ariadne",
    "uvicorn",
    "python-dateutil",
    "aiocache",
    "aiodataloader",
    "pyjwt",
    "pydantic-settings",
    "websockets",
    # "taurus",
]

[project.optional-dependencies]
tests = [
    "pytest",
    # integration tests fail with pytest-asyncio >= 1.0.0
    "pytest-asyncio==0.26.0",
    "pytest-cov",
    "httpx",
    "requests",
    "pytango-db",
]

[project.urls]
Repository = "https://gitlab.com/tango-controls/web/tangogql-ariadne"

[tool.setuptools.package-data]
tangogql = ["*.graphql"]

[tool.pytest.ini_options]
addopts = "--cov=tangogql --cov-report html --cov-report term-missing"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "tangodb: test requires a running Tango database server",
]

[tool.coverage.run]
omit = [
     "tangogql/subscription/taurus_attributes.py"  # Not in use presently
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # isort
    "I",
]

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.ruff]
exclude = [
    "tests/integration/databaseds"  # This is external code only used for tests
]
