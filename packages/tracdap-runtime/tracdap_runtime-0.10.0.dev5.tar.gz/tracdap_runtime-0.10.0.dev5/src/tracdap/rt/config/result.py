# Code generated by TRAC

import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

import tracdap.rt.metadata as metadata



@_dc.dataclass
class JobResultAttrs:

    attrs: "_tp.List[metadata.TagUpdate]" = _dc.field(default_factory=list)


@_dc.dataclass
class JobResult:

    jobId: "metadata.TagHeader" = _dc.field(default_factory=lambda: metadata.TagHeader())

    resultId: "metadata.TagHeader" = _dc.field(default_factory=lambda: metadata.TagHeader())

    result: "metadata.ResultDefinition" = _dc.field(default_factory=lambda: metadata.ResultDefinition())

    objectIds: "_tp.List[metadata.TagHeader]" = _dc.field(default_factory=list)

    objects: "_tp.Dict[str, metadata.ObjectDefinition]" = _dc.field(default_factory=dict)

    attrs: "_tp.Dict[str, JobResultAttrs]" = _dc.field(default_factory=dict)
