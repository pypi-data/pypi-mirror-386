# Code generated by TRAC

import typing as _tp  # noqa
import dataclasses as _dc  # noqa
import enum as _enum  # noqa

import tracdap.rt.metadata as metadata



@_dc.dataclass
class DynamicConfig:

    """
    Represent config that is normally held in the metadata store
    
    This can be used to supply config to isolated processes, including
    the runtime when operating in batch mode. It can also be used to
    to supply config for testing or to bootstrap the metadata store.
    """

    configClass: "str" = ""

    resourceClass: "str" = ""

    config: "_tp.Dict[str, metadata.ConfigDefinition]" = _dc.field(default_factory=dict)

    resources: "_tp.Dict[str, metadata.ResourceDefinition]" = _dc.field(default_factory=dict)
