name: Deploy Documentation

on:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - "src/lean_interact/**"
      - ".github/workflows/docs.yml"
    tags:
      - "v*" # Deploy on version tags
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy (e.g., v0.7.0, latest, dev)"
        required: false
        default: "dev"
      alias:
        description: "Alias for this version (e.g., stable, latest)"
        required: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for mike

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Install Lean
        run: |
          uv run install-lean
          echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch gh-pages branch
        run: |
          git fetch origin gh-pages --depth=1 || echo "gh-pages branch doesn't exist yet"

      - name: Generate changelog
        run: |
          # First wait a bit to ensure changelogs from the last release are available
          sleep 120
          uv run python docs/generate_changelog.py

      - name: Determine version and alias
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
            ALIAS="${{ github.event.inputs.alias }}"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION="${{ github.ref_name }}"
            # Only set stable for release versions (not pre-release)
            if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              ALIAS="stable"
            else
              ALIAS=""  # Pre-release versions don't get stable alias
            fi
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            VERSION="dev"
            ALIAS=""
          else
            VERSION="dev"
            ALIAS=""
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "alias=$ALIAS" >> $GITHUB_OUTPUT
          echo "Deploying version: $VERSION with alias: $ALIAS"

      - name: Deploy with mike
        run: |
          if [[ -n "${{ steps.version.outputs.alias }}" ]]; then
            uv run mike deploy --push --update-aliases ${{ steps.version.outputs.version }} ${{ steps.version.outputs.alias }}
            # Set default version if this is a stable release
            if [[ "${{ steps.version.outputs.alias }}" == "stable" ]]; then
              uv run mike set-default --push stable
            fi
          else
            uv run mike deploy --push ${{ steps.version.outputs.version }}
          fi
