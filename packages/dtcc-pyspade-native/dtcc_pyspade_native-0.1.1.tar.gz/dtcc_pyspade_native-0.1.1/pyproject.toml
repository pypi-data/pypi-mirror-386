[build-system]
requires = [
    "scikit-build-core>=0.4.3",
    "cmake>=3.15",
]
build-backend = "scikit_build_core.build"

[project]
name = "dtcc-pyspade-native"
version = "0.1.1"
description = "Spade C++ triangulation library packaged for Python projects (C++ only, no Python bindings)"
readme = "README.md"
license = {text = "MIT OR Apache-2.0"}
authors = [
    {name = "Vasilis Naserentin", email = "vasilis.naserentin@chalmers.se"},
]
maintainers = [
    {name = "DTCC Dev Team", email = "dtcc@chalmers.se"},
]
keywords = [
    "triangulation",
    "delaunay",
    "mesh",
    "geometry",
    "cdt",
    "constrained-delaunay",
    "cpp",
    "native",
    "spade",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: C++",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "build>=0.10",
    "twine>=4.0",
]

[project.urls]
Homepage = "https://github.com/dtcc-platform/dtcc-pyspade-native"
Documentation = "https://dtcc-platform.github.io/dtcc-pyspade-native/"
Repository = "https://github.com/dtcc-platform/dtcc-pyspade-native"
Issues = "https://github.com/dtcc-platform/dtcc-pyspade-native/issues"
Changelog = "https://github.com/dtcc-platform/dtcc-pyspade-native/blob/main/CHANGELOG.md"

[tool.scikit-build]
cmake.version = ">=3.15"
cmake.build-type = "Release"
wheel.packages = ["src/pyspade_native"]
wheel.install-dir = "pyspade_native"
install.components = ["spade_cpp"]
sdist.include = [
    "cppspade/cmake/*.cmake",
    "cppspade/cmake/*.cmake.in",
    "cmake/*.cmake.in",
]

[tool.scikit-build.cmake.define]
SPADE_BUILD_EXAMPLES = "OFF"
SPADE_BUILD_PYTHON = "OFF"
SPADE_AUTO_BUILD = "ON"
SPADE_AUTO_DOWNLOAD = "ON"

[tool.cibuildwheel]
build = "cp38-* cp39-* cp310-* cp311-* cp312-*"
skip = "*-musllinux_*"  # Skip musl builds
archs = ["auto"]

[tool.cibuildwheel.linux]
before-all = [
    "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y",
    "source $HOME/.cargo/env"
]
environment = { PATH = "$HOME/.cargo/bin:$PATH" }

[tool.cibuildwheel.macos]
before-all = [
    "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y",
    "source $HOME/.cargo/env"
]
environment = { PATH = "$HOME/.cargo/bin:$PATH", MACOSX_DEPLOYMENT_TARGET = "10.12", CMAKE_OSX_DEPLOYMENT_TARGET = "10.12" }

[tool.cibuildwheel.windows]
before-all = "rustup-init -y"
environment = { PATH = "$HOME\\.cargo\\bin;$PATH" }

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
