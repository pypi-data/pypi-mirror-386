{
  "type": "record",
  "Aspect": {
    "name": "testInfo"
  },
  "name": "TestInfo",
  "namespace": "com.linkedin.pegasus2avro.test",
  "fields": [
    {
      "Searchable": {
        "fieldType": "TEXT_PARTIAL"
      },
      "type": "string",
      "name": "name",
      "doc": "The name of the test"
    },
    {
      "Searchable": {
        "addToFilters": true,
        "fieldType": "KEYWORD"
      },
      "type": "string",
      "name": "category",
      "doc": "Category of the test - Operational, Governance, etc."
    },
    {
      "Searchable": {
        "fieldType": "TEXT"
      },
      "type": [
        "null",
        "string"
      ],
      "name": "description",
      "default": null,
      "doc": "Description of the test"
    },
    {
      "type": {
        "type": "record",
        "name": "TestDefinition",
        "namespace": "com.linkedin.pegasus2avro.test",
        "fields": [
          {
            "type": {
              "type": "enum",
              "symbolDocs": {
                "JSON": "JSON / YAML test def"
              },
              "name": "TestDefinitionType",
              "namespace": "com.linkedin.pegasus2avro.test",
              "symbols": [
                "JSON"
              ]
            },
            "name": "type",
            "doc": "The Test Definition Type"
          },
          {
            "type": [
              "null",
              "string"
            ],
            "name": "json",
            "default": null,
            "doc": "JSON format configuration for the test"
          },
          {
            "type": [
              "null",
              "string"
            ],
            "name": "md5",
            "default": null,
            "doc": "MD5 hash of the test definition.\nComputed by the server.\nUsed to stamp test results accurately.\nSee TestResult for more details."
          },
          {
            "type": [
              "null",
              "string"
            ],
            "name": "onQuery",
            "default": null,
            "doc": "Optional search query to execute to get the assets this test applies to.\nThis only works with elastic search test executor and when evaluating a single test."
          }
        ]
      },
      "name": "definition",
      "doc": "Configuration for the Test"
    },
    {
      "Searchable": {
        "fieldType": "DATETIME"
      },
      "type": [
        "null",
        "long"
      ],
      "name": "lastUpdatedTimestamp",
      "default": null,
      "doc": "Timestamp when the test was last updated"
    },
    {
      "Searchable": {
        "/time": {
          "fieldName": "createdTime",
          "fieldType": "DATETIME"
        }
      },
      "type": [
        "null",
        {
          "type": "record",
          "name": "AuditStamp",
          "namespace": "com.linkedin.pegasus2avro.common",
          "fields": [
            {
              "type": "long",
              "name": "time",
              "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
            },
            {
              "java": {
                "class": "com.linkedin.pegasus2avro.common.urn.Urn"
              },
              "type": "string",
              "name": "actor",
              "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change.",
              "Urn": "Urn"
            },
            {
              "java": {
                "class": "com.linkedin.pegasus2avro.common.urn.Urn"
              },
              "type": [
                "null",
                "string"
              ],
              "name": "impersonator",
              "default": null,
              "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor.",
              "Urn": "Urn"
            },
            {
              "type": [
                "null",
                "string"
              ],
              "name": "message",
              "default": null,
              "doc": "Additional context around how DataHub was informed of the particular change. For example: was the change created by an automated process, or manually."
            }
          ],
          "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."
        }
      ],
      "name": "created",
      "default": null,
      "doc": "Created Audit stamp"
    },
    {
      "Searchable": {
        "/time": {
          "fieldName": "lastUpdatedTime",
          "fieldType": "DATETIME"
        }
      },
      "type": [
        "null",
        "com.linkedin.pegasus2avro.common.AuditStamp"
      ],
      "name": "lastUpdated",
      "default": null,
      "doc": "Created Audit stamp"
    },
    {
      "type": [
        "null",
        {
          "type": "record",
          "name": "TestStatus",
          "namespace": "com.linkedin.pegasus2avro.test",
          "fields": [
            {
              "Searchable": {},
              "type": {
                "type": "enum",
                "symbolDocs": {
                  "ACTIVE": "The test is running on a schedule in the default running mode.",
                  "INACTIVE": "The test is paused, disabled, not running."
                },
                "name": "TestMode",
                "namespace": "com.linkedin.pegasus2avro.test",
                "symbols": [
                  "ACTIVE",
                  "INACTIVE"
                ]
              },
              "name": "mode",
              "doc": "The evaluation mode of the Metadata Test."
            }
          ],
          "doc": "The status of a Metadata Test"
        }
      ],
      "name": "status",
      "default": null,
      "doc": "The current status of the Metadata Test, e.g. whether it is actively running."
    },
    {
      "type": [
        "null",
        {
          "type": "record",
          "name": "TestSource",
          "namespace": "com.linkedin.pegasus2avro.test",
          "fields": [
            {
              "Searchable": {
                "fieldName": "sourceType"
              },
              "type": {
                "type": "enum",
                "symbolDocs": {
                  "BULK_FORM_SUBMISSION": "The test was system-generated to complete a bulk form submission task",
                  "FORMS": "The test was system-generated by the system for the FORMs feature.",
                  "FORM_PROMPT": "The test was system-generated by the system for the FORMs feature to test\nfor form prompt completion."
                },
                "name": "TestSourceType",
                "namespace": "com.linkedin.pegasus2avro.test",
                "symbols": [
                  "FORMS",
                  "BULK_FORM_SUBMISSION",
                  "FORM_PROMPT"
                ]
              },
              "name": "type",
              "doc": "The source type of the metadata test"
            },
            {
              "Searchable": {
                "fieldType": "URN"
              },
              "java": {
                "class": "com.linkedin.pegasus2avro.common.urn.Urn"
              },
              "type": [
                "null",
                "string"
              ],
              "name": "sourceEntity",
              "default": null,
              "doc": "An optional source 'entity' that is responsible for this test.\n\nThis is currently only used for keeping track of the Form which owns a set of metadata tests.",
              "Urn": "Urn"
            }
          ],
          "doc": "The source of a metadata test"
        }
      ],
      "name": "source",
      "default": null,
      "doc": "The source of the metadata test, e.g. whether the test is user generated or system generated."
    },
    {
      "type": [
        "null",
        {
          "type": "record",
          "name": "TestSchedule",
          "namespace": "com.linkedin.pegasus2avro.test",
          "fields": [
            {
              "type": {
                "type": "enum",
                "symbolDocs": {
                  "DAILY": "This test runs once a day",
                  "NONE": "This test does not run on a schedule"
                },
                "name": "TestInterval",
                "namespace": "com.linkedin.pegasus2avro.test",
                "symbols": [
                  "DAILY",
                  "NONE"
                ]
              },
              "name": "interval",
              "default": "DAILY",
              "doc": "The interval at which this metadata test is scheduled"
            }
          ],
          "doc": "The result of running a batch metadata test"
        }
      ],
      "name": "schedule",
      "default": null,
      "doc": "Information about the schedule at which this test runs"
    }
  ],
  "doc": "Information about a DataHub Test"
}