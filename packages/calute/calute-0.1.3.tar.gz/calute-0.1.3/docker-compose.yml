version: '3.8'

services:
  calute:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: calute-app
    environment:
      - CALUTE_ENV=development
      - DATABASE_URL=postgresql://calute:calute_pass@postgres:5432/calute_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./calute:/app/calute:ro
      - ./config:/app/config
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - calute-network
    ports:
      - "8000:8000"

  postgres:
    image: postgres:15-alpine
    container_name: calute-postgres
    environment:
      - POSTGRES_USER=calute
      - POSTGRES_PASSWORD=calute_pass
      - POSTGRES_DB=calute_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U calute"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - calute-network
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: calute-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - calute-network
    ports:
      - "6379:6379"

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: calute-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - calute-network
    ports:
      - "9090:9090"

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: calute-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - calute-network
    ports:
      - "3000:3000"

  # Optional: Jupyter for development
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: calute-jupyter
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - DATABASE_URL=postgresql://calute:calute_pass@postgres:5432/calute_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./notebooks:/app/notebooks
      - ./calute:/app/calute:ro
      - ./data:/app/data
    networks:
      - calute-network
    ports:
      - "8888:8888"

networks:
  calute-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: