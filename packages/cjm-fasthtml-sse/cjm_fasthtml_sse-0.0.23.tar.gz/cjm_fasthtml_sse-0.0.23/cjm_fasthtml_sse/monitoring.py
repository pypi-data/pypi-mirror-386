"""Connection monitoring and debugging tools for SSE applications. Provides configurable status indicators, automatic reconnection, and visibility change handling."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/monitoring.ipynb.

# %% auto 0
__all__ = ['SSEMonitorConfig', 'create_sse_monitor']

# %% ../nbs/monitoring.ipynb 3
from dataclasses import dataclass
from typing import Dict, Optional

from fasthtml.common import FT

from .htmx import HTMXSSEConnector

# %% ../nbs/monitoring.ipynb 4
@dataclass
class SSEMonitorConfig:
    """Configuration for SSE connection monitoring."""
    sse_element_id: str = "sse-connection"
    status_element_id: str = "connection-status"
    auto_reconnect: bool = True
    reconnect_delay: int = 3000
    debug: bool = False
    heartbeat_timeout: int = 30000
    status_indicators: Optional[Dict[str, str]] = None

# %% ../nbs/monitoring.ipynb 5
def create_sse_monitor(
    htmx_sse: HTMXSSEConnector,
    config: SSEMonitorConfig  # SSEMonitorConfig instance
) -> FT:  # Script element with monitoring code
    """Create a connection monitor with the specified configuration."""
    return htmx_sse.create_sse_monitor_script({
        'sse_element_id': config.sse_element_id,
        'status_element_id': config.status_element_id,
        'auto_reconnect': config.auto_reconnect,
        'debug': config.debug,
        'status_indicators': config.status_indicators or {
            'active': '<span style="color: green;">●</span> Connected',
            'disconnected': '<span style="color: red;">●</span> Disconnected',
            'error': '<span style="color: orange;">●</span> Error',
            'reconnecting': '<span style="color: blue;">●</span> Reconnecting'
        }
    })
