Metadata-Version: 2.4
Name: eth-ape
Version: 0.8.41
Summary: Ape Ethereum Framework
Home-page: https://apeworx.io
Author: ApeWorX Ltd.
Author-email: admin@apeworx.io
License: Apache-2.0
Project-URL: Documentation, https://docs.apeworx.io/ape/
Project-URL: Funding, https://gitcoin.co/grants/5958/ape-maintenance-fund
Project-URL: Source, https://github.com/ApeWorX/ape
Project-URL: Tracker, https://github.com/ApeWorX/ape/issues
Project-URL: Twitter, https://twitter.com/ApeFramework
Keywords: ethereum
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9,<4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click<8.2,>=8.1.6
Requires-Dist: ijson<4,>=3.1.4
Requires-Dist: ipython<9,>=8.18.1
Requires-Dist: lazyasd>=0.1.4
Requires-Dist: asttokens<3,>=2.4.1
Requires-Dist: cchecksum<1,>=0.0.3
Requires-Dist: numpy<2
Requires-Dist: packaging<24,>=23.0
Requires-Dist: pandas<3,>=2.2.2
Requires-Dist: pluggy<2,>=1.3
Requires-Dist: pydantic<3,>=2.10
Requires-Dist: pydantic-settings<3,>=2.5.2
Requires-Dist: pytest<9.0,>=8.0
Requires-Dist: python-dateutil<3,>=2.8.2
Requires-Dist: PyYAML<7,>=5.1
Requires-Dist: requests<3,>=2.28.1
Requires-Dist: rich<14,>=13.9
Requires-Dist: SQLAlchemy>=1.4.35
Requires-Dist: toml; python_version < "3.11"
Requires-Dist: tqdm<5.0,>=4.67
Requires-Dist: traitlets>=5.3.0
Requires-Dist: urllib3<3,>=2.3
Requires-Dist: watchdog<4,>=3.0
Requires-Dist: eth-abi<6,>=5.1.0
Requires-Dist: eth-account<0.14,>=0.11.3
Requires-Dist: eth-typing<6,>=3.5.2
Requires-Dist: eth-utils<6,>=2.1.0
Requires-Dist: hexbytes<2,>=1.2.0
Requires-Dist: py-geth<6,>=5.4.0
Requires-Dist: trie<4,>=3.0.1
Requires-Dist: web3[tester]<8,>=7.12.1
Requires-Dist: ethpm-types<0.7,>=0.6.28
Requires-Dist: eip712<0.3,>=0.2.14
Requires-Dist: eth_pydantic_types<0.3,>=0.2.1
Requires-Dist: evmchains<0.2,>=0.1.0
Requires-Dist: evm-trace<0.3,>=0.2.6
Provides-Extra: test
Requires-Dist: pytest-xdist<4,>=3.6.1; extra == "test"
Requires-Dist: pytest-cov<5,>=4.0.0; extra == "test"
Requires-Dist: pytest-mock; extra == "test"
Requires-Dist: pytest-benchmark; extra == "test"
Requires-Dist: pytest-rerunfailures; extra == "test"
Requires-Dist: pytest-timeout<3,>=2.2.0; extra == "test"
Requires-Dist: hypothesis<7.0,>=6.2.0; extra == "test"
Requires-Dist: hypothesis-jsonschema==0.19.0; extra == "test"
Requires-Dist: ape-vyper<0.9,>=0.8.9; extra == "test"
Requires-Dist: vyper<0.5,>=0.4.3; extra == "test"
Requires-Dist: ape-solidity<0.9,>=0.8.5; extra == "test"
Provides-Extra: lint
Requires-Dist: ruff>=0.12.0; extra == "lint"
Requires-Dist: mypy<1.17.0,>=1.16.1; extra == "lint"
Requires-Dist: types-PyYAML; extra == "lint"
Requires-Dist: types-requests; extra == "lint"
Requires-Dist: types-setuptools; extra == "lint"
Requires-Dist: pandas-stubs>=2.2.1.240316; extra == "lint"
Requires-Dist: types-toml; extra == "lint"
Requires-Dist: types-SQLAlchemy>=1.4.49; extra == "lint"
Requires-Dist: types-python-dateutil; extra == "lint"
Requires-Dist: mdformat>=0.7.22; extra == "lint"
Requires-Dist: mdformat-gfm>=0.3.5; extra == "lint"
Requires-Dist: mdformat-frontmatter>=0.4.1; extra == "lint"
Requires-Dist: mdformat-pyproject>=0.0.2; extra == "lint"
Provides-Extra: doc
Requires-Dist: sphinx-ape; extra == "doc"
Provides-Extra: release
Requires-Dist: setuptools>=75; extra == "release"
Requires-Dist: wheel; extra == "release"
Requires-Dist: twine==3.8.0; extra == "release"
Provides-Extra: dev
Requires-Dist: pytest-xdist<4,>=3.6.1; extra == "dev"
Requires-Dist: pytest-cov<5,>=4.0.0; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: pytest-benchmark; extra == "dev"
Requires-Dist: pytest-rerunfailures; extra == "dev"
Requires-Dist: pytest-timeout<3,>=2.2.0; extra == "dev"
Requires-Dist: hypothesis<7.0,>=6.2.0; extra == "dev"
Requires-Dist: hypothesis-jsonschema==0.19.0; extra == "dev"
Requires-Dist: ape-vyper<0.9,>=0.8.9; extra == "dev"
Requires-Dist: vyper<0.5,>=0.4.3; extra == "dev"
Requires-Dist: ape-solidity<0.9,>=0.8.5; extra == "dev"
Requires-Dist: ruff>=0.12.0; extra == "dev"
Requires-Dist: mypy<1.17.0,>=1.16.1; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Requires-Dist: types-requests; extra == "dev"
Requires-Dist: types-setuptools; extra == "dev"
Requires-Dist: pandas-stubs>=2.2.1.240316; extra == "dev"
Requires-Dist: types-toml; extra == "dev"
Requires-Dist: types-SQLAlchemy>=1.4.49; extra == "dev"
Requires-Dist: types-python-dateutil; extra == "dev"
Requires-Dist: mdformat>=0.7.22; extra == "dev"
Requires-Dist: mdformat-gfm>=0.3.5; extra == "dev"
Requires-Dist: mdformat-frontmatter>=0.4.1; extra == "dev"
Requires-Dist: mdformat-pyproject>=0.0.2; extra == "dev"
Requires-Dist: sphinx-ape; extra == "dev"
Requires-Dist: setuptools>=75; extra == "dev"
Requires-Dist: wheel; extra == "dev"
Requires-Dist: twine==3.8.0; extra == "dev"
Requires-Dist: commitizen<2.41,>=2.40; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: pytest-watch; extra == "dev"
Requires-Dist: ipdb; extra == "dev"
Provides-Extra: recommended-plugins
Requires-Dist: ape-alchemy; extra == "recommended-plugins"
Requires-Dist: ape-ens; extra == "recommended-plugins"
Requires-Dist: ape-etherscan; extra == "recommended-plugins"
Requires-Dist: ape-foundry; extra == "recommended-plugins"
Requires-Dist: ape-hardhat; extra == "recommended-plugins"
Requires-Dist: ape-infura; extra == "recommended-plugins"
Requires-Dist: ape-solidity; extra == "recommended-plugins"
Requires-Dist: ape-template; extra == "recommended-plugins"
Requires-Dist: ape-tokens; extra == "recommended-plugins"
Requires-Dist: ape-vyper; extra == "recommended-plugins"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

[![Pypi.org][pypi-badge]][pypi-url]
[![Apache licensed][licence-badge]][licence-url]
[![Build Status][actions-badge]][actions-url]
[![Discord chat][discord-badge]][discord-url]
[![Twitter][twitter-badge]][twitter-url]

# Overview

[Ape Framework](https://apeworx.io/framework/) is an easy-to-use Web3 development tool.
Users can compile, test, and interact with smart contracts all in one command line session.
With our [modular plugin system](#plugin-system), Ape supports multiple contract languages and chains.

Ape is built by [ApeWorX LTD](https://www.apeworx.io/).

Join our [ApeWorX Discord server][discord-url] to stay up to date on new releases, plugins, and tutorials.

If you want to get started now, see the [Quickstart](#quickstart) section.

## Documentation

Read our [technical documentation](https://docs.apeworx.io/ape/stable/) to get a deeper understanding of our open source Framework.

Read our [academic platform](https://academy.apeworx.io/) which will help you master Ape Framework with tutorials and challenges.

## Prerequisite

In the latest release, Ape requires:

- Linux or macOS
- Python 3.9 up to 3.12
- **Windows**: Install Windows Subsystem Linux [(WSL)](https://docs.microsoft.com/en-us/windows/wsl/install)

Check your python version in a terminal with `python3 --version`.

## Installation

There are three ways to install ape: `pipx`, `pip`, or `Docker`.

### Considerations for Installing

- If using `pip`, we advise using the most up-to-date version of `pip` to increase the chance of a successful installation.

  - See issue https://github.com/ApeWorX/ape/issues/1558.
  - To upgrade `pip` from the command line, run: `pip install --upgrade pip`.

- We advise installing in a [virtualenv](https://pypi.org/project/virtualenv/) or [venv](https://docs.python.org/3/library/venv.html) to avoid interfering with *OS-level site packages*.

- We advise installing **`ape`** with recommended plugins `pip install eth-ape'[recommended-plugins]'`.

- We advise for **macOS** users to install virtual env via [homebrew](https://formulae.brew.sh/formula/virtualenv).

### Installing with `pipx` or `pip`

1. Install `pipx` via their [installation instructions](https://pypa.github.io/pipx/) or `pip` via their [installation instructions](https://pip.pypa.io/en/stable/cli/pip_install/).

2. Install **`ape`** via `pipx install eth-ape` or `pip install eth-ape`.

### Installing with `docker`

Ape can also run in a docker container.

You can pull our images from [ghcr](https://ghcr.io/apeworx/ape).
This image is built using our `recommended-plugins` extra, so it is a great starting point for running ape in a containerized environment.

We also have a `slim` docker image that is built without any installed plugins.
This image is meant for production support and must be further configured if any plugins are in use.

You can pull the image:

```bash
$ docker pull ghcr.io/apeworx/ape:latest  # installs with recommended-plugins
```

or pull the slim if you have specific needs that you'd like to build from:

```bash
$ docker pull ghcr.io/apeworx/ape:latest-slim  # installs ape with required packages
```

or build the image locally from source:

```bash
$ docker build -t ape:latest-slim -f Dockerfile.slim .
$ docker build -t ape:latest .
```

An example of running a command from the container would be:

```bash
docker run \
  --volume $HOME/.ape:/home/harambe/.ape \
  --volume $HOME/.vvm:/home/harambe/.vvm \
  --volume $HOME/.solcx:/home/harambe/.solcx \
  --volume $PWD:/home/harambe/project \
  apeworx/ape compile
```

> **Note:**
> The above command requires the full install which includes `recommended-plugins` installation extra.

## Quickstart

After you have installed Ape, run `ape --version` to verify the installation was successful.

You can interact with Ape using the [command line](https://docs.apeworx.io/ape/stable/userguides/clis.html) or the [Ape console](https://docs.apeworx.io/ape/stable/userguides/console.html).

See the following user-guides for more in-depth tutorials:

- [Accounts][accounts-guide]
- [Networks][networks-guide]
- [Projects][projects-guide]
- [Compiling][compile-guide]
- [Testing][testing-guide]
- [Console][console-guide]
- [Scripting][scripting-guide]
- [Logging][logging-guide]

## Plugin System

Ape's modular plugin system allows users to have an interoperable experience with Web3.

- Learn about **installing** plugins from following this [installing user guide](https://docs.apeworx.io/ape/stable/userguides/installing_plugins.html).

- Learn more about **developing** your own plugins from this [developing user guide](https://docs.apeworx.io/ape/stable/userguides/developing_plugins.html).

```{note}
If a plugin does not originate from the [ApeWorX GitHub Organization](https://github.com/ApeWorX?q=ape&type=all), you will get a warning about installing 3rd-party plugins.
Install 3rd party plugins at your own risk.
```

[accounts-guide]: https://docs.apeworx.io/ape/stable/userguides/accounts.html
[actions-badge]: https://github.com/ApeWorX/ape/actions/workflows/test.yaml/badge.svg
[actions-url]: https://github.com/ApeWorX/ape/actions?query=branch%3Amain+event%3Apush
[compile-guide]: https://docs.apeworx.io/ape/stable/userguides/compile.html
[console-guide]: https://docs.apeworx.io/ape/stable/userguides/console.html
[discord-badge]: https://img.shields.io/discord/922917176040640612.svg?logo=discord&style=flat-square
[discord-url]: https://discord.gg/apeworx
[licence-badge]: https://img.shields.io/github/license/ApeWorX/ape?color=blue
[licence-url]: https://github.com/ApeWorX/ape/blob/main/LICENSE
[logging-guide]: https://docs.apeworx.io/ape/stable/userguides/logging.html
[networks-guide]: https://docs.apeworx.io/ape/stable/userguides/networks.html
[projects-guide]: https://docs.apeworx.io/ape/stable/userguides/projects.html
[pypi-badge]: https://img.shields.io/pypi/dm/eth-ape?label=pypi.org
[pypi-url]: https://pypi.org/project/eth-ape/
[scripting-guide]: https://docs.apeworx.io/ape/stable/userguides/scripts.html
[testing-guide]: https://docs.apeworx.io/ape/stable/userguides/testing.html
[twitter-badge]: https://img.shields.io/twitter/follow/ApeFramework
[twitter-url]: https://twitter.com/ApeFramework
