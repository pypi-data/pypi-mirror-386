from typing import Any, overload

class AnalyzeTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aLoadModelAndInput: bool) -> None: ...
    @overload
    def __init__(self, aObject: AnalyzeTool) -> None: ...
    @overload
    def __init__(self, aModel: Model) -> None: ...
    def addAnalysisSetToModel(self, *args, **kwargs) -> Any: ...
    def addControllerSetToModel(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def createStatesStorageFromCoordinatesAndSpeeds(self, aModel: Model, aQStore: Storage, aUStore: Storage) -> Any: ...
    def disableIntegrationOnlyProbes(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAnalysisSet(self) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getControllerSet(self) -> Any: ...
    def getControlsFileName(self) -> str: ...
    def getCoordinatesFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getErrorTolerance(self) -> float: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getFinalTime(self) -> float: ...
    def getForceSetFiles(self) -> Any: ...
    def getInitialTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getLoadModelAndInput(self) -> bool: ...
    def getLowpassCutoffFrequency(self) -> float: ...
    def getMaxDT(self) -> float: ...
    def getMaximumNumberOfSteps(self) -> int: ...
    def getMinDT(self) -> float: ...
    def getModel(self) -> Any: ...
    def getModelFilename(self) -> str: ...
    def getName(self) -> str: ...
    def getNextAvailableForceName(self, prefix: Any) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputPrecision(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getReplaceForceSet(self) -> bool: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSolveForEquilibrium(self) -> bool: ...
    def getSpeedsFileName(self) -> str: ...
    def getStartTime(self) -> float: ...
    def getStatesFileName(self) -> str: ...
    def getStatesStorage(self) -> Any: ...
    def getToolOwnsModel(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def loadModel(self, *args, **kwargs) -> Any: ...
    def loadQStorage(self, *args, **kwargs) -> Any: ...
    def loadStatesFromFile(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printResults(self, *args, **kwargs) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def removeAnalysisSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeControllerSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    @overload
    def run(self, plotting: bool) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setControlsFileName(self, *args, **kwargs) -> Any: ...
    def setCoordinatesFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setErrorTolerance(self, *args, **kwargs) -> Any: ...
    def setExternalLoads(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setFinalTime(self, *args, **kwargs) -> Any: ...
    def setForceSetFiles(self, *args, **kwargs) -> Any: ...
    def setInitialTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setLoadModelAndInput(self, *args, **kwargs) -> Any: ...
    def setLowpassCutoffFrequency(self, *args, **kwargs) -> Any: ...
    def setMaxDT(self, *args, **kwargs) -> Any: ...
    def setMaximumNumberOfSteps(self, *args, **kwargs) -> Any: ...
    def setMinDT(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFilename(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputPrecision(self, *args, **kwargs) -> Any: ...
    def setPrintResultFiles(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setReplaceForceSet(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSolveForEquilibrium(self, *args, **kwargs) -> Any: ...
    def setSpeedsFileName(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def setStatesFileName(self, *args, **kwargs) -> Any: ...
    def setStatesFromMotion(self, *args, **kwargs) -> Any: ...
    def setStatesStorage(self, *args, **kwargs) -> Any: ...
    def setToolOwnsModel(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updAnalysisSet(self) -> Any: ...
    def updControllerSet(self) -> Any: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateModelForces(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...
    def verifyControlsStates(self, *args, **kwargs) -> Any: ...

class CMCTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aLoadModel: bool) -> None: ...
    @overload
    def __init__(self, aObject: CMCTool) -> None: ...
    def addAnalysisSetToModel(self, *args, **kwargs) -> Any: ...
    def addControllerSetToModel(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def dump(self) -> str: ...
    def getAnalysisSet(self) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getConstraintsFileName(self) -> str: ...
    def getControllerSet(self) -> Any: ...
    def getControlsFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredKinematicsFileName(self) -> str: ...
    def getDesiredPointsFileName(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getErrorTolerance(self) -> float: ...
    def getExcludedActuators(self) -> Any: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getFinalTime(self) -> float: ...
    def getForceSetFiles(self) -> Any: ...
    def getForceStorage(self) -> Any: ...
    def getInitialTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getLowpassCutoffFrequency(self) -> float: ...
    def getMaxDT(self) -> float: ...
    def getMaximumNumberOfSteps(self) -> int: ...
    def getMinDT(self) -> float: ...
    def getModel(self) -> Any: ...
    def getModelFilename(self) -> str: ...
    def getName(self) -> str: ...
    def getNextAvailableForceName(self, prefix: Any) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputPrecision(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getRRAControlsFileName(self) -> str: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getReplaceForceSet(self) -> bool: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSolveForEquilibrium(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def getTaskSetFileName(self) -> str: ...
    def getTimeWindow(self) -> float: ...
    def getToolOwnsModel(self) -> bool: ...
    def getUseFastTarget(self) -> bool: ...
    def getUseVerbosePrinting(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def loadModel(self, *args, **kwargs) -> Any: ...
    def loadQStorage(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printResults(self, *args, **kwargs) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def removeAnalysisSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeControllerSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setConstraintsFileName(self, *args, **kwargs) -> Any: ...
    def setControlsFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setDesiredKinematicsFileName(self, *args, **kwargs) -> Any: ...
    def setDesiredPointsFileName(self, *args, **kwargs) -> Any: ...
    def setErrorTolerance(self, *args, **kwargs) -> Any: ...
    def setExcludedActuators(self, *args, **kwargs) -> Any: ...
    def setExternalLoads(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setFinalTime(self, *args, **kwargs) -> Any: ...
    def setForceSetFiles(self, *args, **kwargs) -> Any: ...
    def setInitialTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setLowpassCutoffFrequency(self, *args, **kwargs) -> Any: ...
    def setMaxDT(self, *args, **kwargs) -> Any: ...
    def setMaximumNumberOfSteps(self, *args, **kwargs) -> Any: ...
    def setMinDT(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFilename(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOriginalForceSet(self, *args, **kwargs) -> Any: ...
    def setOutputPrecision(self, *args, **kwargs) -> Any: ...
    def setRRAControlsFileName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setReplaceForceSet(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSolveForEquilibrium(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def setTaskSetFileName(self, *args, **kwargs) -> Any: ...
    def setTimeWindow(self, *args, **kwargs) -> Any: ...
    def setToolOwnsModel(self, *args, **kwargs) -> Any: ...
    def setUseFastTarget(self, *args, **kwargs) -> Any: ...
    def setUseVerbosePrinting(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updAnalysisSet(self) -> Any: ...
    def updControllerSet(self) -> Any: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateModelForces(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class CMC_Joint:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, aCoordinateName: str) -> None: ...
    @overload
    def __init__(self, aTask: CMC_Joint) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def computeAccelerations(self, *args, **kwargs) -> Any: ...
    def computeDesiredAccelerations(self, *args, **kwargs) -> Any: ...
    def computeEffectiveMassMatrix(self, *args, **kwargs) -> Any: ...
    def computeErrors(self, *args, **kwargs) -> Any: ...
    def computeJacobian(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAcceleration(self, aWhich: int) -> float: ...
    def getActive(self, aWhich: int) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getCoordinateName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredAcceleration(self, aWhich: int) -> float: ...
    def getDirection_0(self, *args, **kwargs) -> Any: ...
    def getDirection_1(self, *args, **kwargs) -> Any: ...
    def getDirection_2(self, *args, **kwargs) -> Any: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getExpressBodyName(self) -> str: ...
    def getInlined(self) -> bool: ...
    def getKA(self, aWhich: int) -> float: ...
    def getKP(self, aWhich: int) -> float: ...
    def getKV(self, aWhich: int) -> float: ...
    def getLimit(self) -> float: ...
    def getModel(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getNumTaskFunctions(self) -> int: ...
    def getOn(self) -> bool: ...
    def getPositionError(self, aWhich: int) -> float: ...
    def getPositionErrorLast(self, aWhich: int) -> float: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getTaskAcceleration(self, aWhich: int, aT: float) -> float: ...
    def getTaskFunction(self, aWhich: int) -> Any: ...
    def getTaskFunctionForAcceleration(self, aWhich: int) -> Any: ...
    def getTaskFunctionForVelocity(self, aWhich: int) -> Any: ...
    def getTaskPosition(self, aWhich: int, aT: float) -> float: ...
    def getTaskVelocity(self, aWhich: int, aT: float) -> float: ...
    def getVelocityError(self, aWhich: int) -> float: ...
    def getVelocityErrorLast(self, aWhich: int) -> float: ...
    def getWRTBodyName(self) -> str: ...
    def getWeight(self, aWhich: int) -> float: ...
    def getWeights(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setActive(self, *args, **kwargs) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setCoordinateName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setDirection_0(self, *args, **kwargs) -> Any: ...
    def setDirection_1(self, *args, **kwargs) -> Any: ...
    def setDirection_2(self, *args, **kwargs) -> Any: ...
    def setExpressBodyName(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setKA(self, *args, **kwargs) -> Any: ...
    def setKP(self, *args, **kwargs) -> Any: ...
    def setKV(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOn(self, *args, **kwargs) -> Any: ...
    def setPositionErrorLast(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setTaskFunctions(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForAcceleration(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForVelocity(self, *args, **kwargs) -> Any: ...
    def setVelocityErrorLast(self, *args, **kwargs) -> Any: ...
    def setWRTBodyName(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    def setWeights(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class CMC_Point:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, aPoint: Vec3) -> None: ...
    @overload
    def __init__(self, aTask: CMC_Point) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def computeAccelerations(self, *args, **kwargs) -> Any: ...
    def computeDesiredAccelerations(self, *args, **kwargs) -> Any: ...
    def computeEffectiveMassMatrix(self, *args, **kwargs) -> Any: ...
    def computeErrors(self, *args, **kwargs) -> Any: ...
    def computeJacobian(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAcceleration(self, aWhich: int) -> float: ...
    def getActive(self, aWhich: int) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredAcceleration(self, aWhich: int) -> float: ...
    def getDirection_0(self, *args, **kwargs) -> Any: ...
    def getDirection_1(self, *args, **kwargs) -> Any: ...
    def getDirection_2(self, *args, **kwargs) -> Any: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getExpressBodyName(self) -> str: ...
    def getInlined(self) -> bool: ...
    def getKA(self, aWhich: int) -> float: ...
    def getKP(self, aWhich: int) -> float: ...
    def getKV(self, aWhich: int) -> float: ...
    def getModel(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getNumTaskFunctions(self) -> int: ...
    def getOn(self) -> bool: ...
    def getPoint(self) -> Any: ...
    def getPositionError(self, aWhich: int) -> float: ...
    def getPositionErrorLast(self, aWhich: int) -> float: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getTaskAcceleration(self, aWhich: int, aT: float) -> float: ...
    def getTaskFunction(self, aWhich: int) -> Any: ...
    def getTaskFunctionForAcceleration(self, aWhich: int) -> Any: ...
    def getTaskFunctionForVelocity(self, aWhich: int) -> Any: ...
    def getTaskPosition(self, aWhich: int, aT: float) -> float: ...
    def getTaskVelocity(self, aWhich: int, aT: float) -> float: ...
    def getVelocityError(self, aWhich: int) -> float: ...
    def getVelocityErrorLast(self, aWhich: int) -> float: ...
    def getWRTBodyName(self) -> str: ...
    def getWeight(self, aWhich: int) -> float: ...
    def getWeights(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setActive(self, *args, **kwargs) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setDirection_0(self, *args, **kwargs) -> Any: ...
    def setDirection_1(self, *args, **kwargs) -> Any: ...
    def setDirection_2(self, *args, **kwargs) -> Any: ...
    def setExpressBodyName(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setKA(self, *args, **kwargs) -> Any: ...
    def setKP(self, *args, **kwargs) -> Any: ...
    def setKV(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOn(self, *args, **kwargs) -> Any: ...
    def setPoint(self, *args, **kwargs) -> Any: ...
    def setPositionErrorLast(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setTaskFunctions(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForAcceleration(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForVelocity(self, *args, **kwargs) -> Any: ...
    def setVelocityErrorLast(self, *args, **kwargs) -> Any: ...
    def setWRTBodyName(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    def setWeights(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class CMC_Task:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def computeAccelerations(self, *args, **kwargs) -> Any: ...
    def computeDesiredAccelerations(self, *args, **kwargs) -> Any: ...
    def computeEffectiveMassMatrix(self, *args, **kwargs) -> Any: ...
    def computeErrors(self, *args, **kwargs) -> Any: ...
    def computeJacobian(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAcceleration(self, aWhich: int) -> float: ...
    def getActive(self, aWhich: int) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredAcceleration(self, aWhich: int) -> float: ...
    def getDirection_0(self, *args, **kwargs) -> Any: ...
    def getDirection_1(self, *args, **kwargs) -> Any: ...
    def getDirection_2(self, *args, **kwargs) -> Any: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getExpressBodyName(self) -> str: ...
    def getInlined(self) -> bool: ...
    def getKA(self, aWhich: int) -> float: ...
    def getKP(self, aWhich: int) -> float: ...
    def getKV(self, aWhich: int) -> float: ...
    def getModel(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getNumTaskFunctions(self) -> int: ...
    def getOn(self) -> bool: ...
    def getPositionError(self, aWhich: int) -> float: ...
    def getPositionErrorLast(self, aWhich: int) -> float: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getTaskAcceleration(self, aWhich: int, aT: float) -> float: ...
    def getTaskFunction(self, aWhich: int) -> Any: ...
    def getTaskFunctionForAcceleration(self, aWhich: int) -> Any: ...
    def getTaskFunctionForVelocity(self, aWhich: int) -> Any: ...
    def getTaskPosition(self, aWhich: int, aT: float) -> float: ...
    def getTaskVelocity(self, aWhich: int, aT: float) -> float: ...
    def getVelocityError(self, aWhich: int) -> float: ...
    def getVelocityErrorLast(self, aWhich: int) -> float: ...
    def getWRTBodyName(self) -> str: ...
    def getWeight(self, aWhich: int) -> float: ...
    def getWeights(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setActive(self, *args, **kwargs) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setDirection_0(self, *args, **kwargs) -> Any: ...
    def setDirection_1(self, *args, **kwargs) -> Any: ...
    def setDirection_2(self, *args, **kwargs) -> Any: ...
    def setExpressBodyName(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setKA(self, *args, **kwargs) -> Any: ...
    def setKP(self, *args, **kwargs) -> Any: ...
    def setKV(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOn(self, *args, **kwargs) -> Any: ...
    def setPositionErrorLast(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setTaskFunctions(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForAcceleration(self, *args, **kwargs) -> Any: ...
    def setTaskFunctionsForVelocity(self, *args, **kwargs) -> Any: ...
    def setVelocityErrorLast(self, *args, **kwargs) -> Any: ...
    def setWRTBodyName(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    def setWeights(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class CMC_TaskSet:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str) -> None: ...
    @overload
    def __init__(self, aCMCTaskSet: CMC_TaskSet) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: TrackingTask) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: TrackingTask) -> bool: ...
    def computeAccelerations(self, *args, **kwargs) -> Any: ...
    def computeDesiredAccelerations(self, *args, **kwargs) -> Any: ...
    def computeErrors(self, *args, **kwargs) -> Any: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAccelerationGains(self) -> Any: ...
    def getAccelerations(self) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDataFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredAccelerations(self) -> Any: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: TrackingTask, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getModel(self) -> Any: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumActiveTaskFunctions(self) -> int: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPositionErrors(self) -> Any: ...
    def getPositionErrorsLast(self) -> Any: ...
    def getPositionGains(self) -> Any: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def getTaskAccelerations(self, aT: float) -> Any: ...
    def getTaskPositions(self, aT: float) -> Any: ...
    def getTaskVelocities(self, aT: float) -> Any: ...
    def getVelocityErrors(self) -> Any: ...
    def getVelocityErrorsLast(self) -> Any: ...
    def getVelocityGains(self) -> Any: ...
    def getWeights(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: TrackingTask) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def recordErrorsAsLastErrors(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: TrackingTask) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: TrackingTask, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setFunctions(self, *args, **kwargs) -> Any: ...
    def setFunctionsForAcceleration(self, *args, **kwargs) -> Any: ...
    def setFunctionsForVelocity(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class DynamicsTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def append_results_directory(self, value: str) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def disableModelForces(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getEndTime(self) -> float: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getInlined(self) -> bool: ...
    def getModelFileName(self) -> str: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setEndTime(self, *args, **kwargs) -> Any: ...
    def setExcludedForces(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFileName(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class ForwardTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def SigmaDn(self, tau: float, to: float, t: float) -> float: ...
    def SigmaUp(self, tau: float, to: float, t: float) -> float: ...
    def Step(self, t: float, t0: float, t1: float) -> float: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aUpdateFromXMLNode: bool, aLoadModel: bool) -> None: ...
    @overload
    def __init__(self, aObject: ForwardTool) -> None: ...
    def addAnalysisSetToModel(self, *args, **kwargs) -> Any: ...
    def addControllerSetToModel(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def dump(self) -> str: ...
    def getAnalysisSet(self) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getControllerSet(self) -> Any: ...
    def getControlsFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getErrorTolerance(self) -> float: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getFinalTime(self) -> float: ...
    def getForceSetFiles(self) -> Any: ...
    def getInitialTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getManager(self) -> Any: ...
    def getMaxDT(self) -> float: ...
    def getMaximumNumberOfSteps(self) -> int: ...
    def getMinDT(self) -> float: ...
    def getModel(self) -> Any: ...
    def getModelFilename(self) -> str: ...
    def getName(self) -> str: ...
    def getNextAvailableForceName(self, prefix: Any) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputPrecision(self) -> int: ...
    def getParsingLog(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getReplaceForceSet(self) -> bool: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSolveForEquilibrium(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def getStatesFileName(self) -> str: ...
    def getToolOwnsModel(self) -> bool: ...
    def getUseSpecifiedDt(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def loadModel(self, *args, **kwargs) -> Any: ...
    def loadQStorage(self, *args, **kwargs) -> Any: ...
    def loadStatesStorage(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printResults(self, *args, **kwargs) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def removeAnalysisSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeControllerSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setControlsFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setErrorTolerance(self, *args, **kwargs) -> Any: ...
    def setExternalLoads(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setFinalTime(self, *args, **kwargs) -> Any: ...
    def setForceSetFiles(self, *args, **kwargs) -> Any: ...
    def setInitialTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setManager(self, *args, **kwargs) -> Any: ...
    def setMaxDT(self, *args, **kwargs) -> Any: ...
    def setMaximumNumberOfSteps(self, *args, **kwargs) -> Any: ...
    def setMinDT(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFilename(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputPrecision(self, *args, **kwargs) -> Any: ...
    def setPrintResultFiles(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setReplaceForceSet(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSolveForEquilibrium(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def setStatesFileName(self, *args, **kwargs) -> Any: ...
    def setToolOwnsModel(self, *args, **kwargs) -> Any: ...
    def setUseSpecifiedDt(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updAnalysisSet(self) -> Any: ...
    def updControllerSet(self) -> Any: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateModelForces(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class GenericModelMaker:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aGenericModelMaker: GenericModelMaker) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getMarkerSetFileName(self) -> str: ...
    def getModelFileName(self) -> str: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def processModel(self, aPathToSubject: str) -> Any: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def registerTypes(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMarkerSetFileName(self, *args, **kwargs) -> Any: ...
    def setModelFileName(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class IKCoordinateTask:
    DefaultValue: Any
    FromFile: Any
    ManualValue: Any
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def StringToValueType(self, str: str) -> IKCoordinateTask: ...
    def ValueTypeToString(self, type: IKCoordinateTask) -> str: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aIKCoordinateTask: IKCoordinateTask) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getValue(self) -> float: ...
    def getValueType(self) -> IKCoordinateTask: ...
    def getWeight(self) -> float: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setValue(self, *args, **kwargs) -> Any: ...
    def setValueType(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class IKMarkerTask:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg2: IKMarkerTask) -> None: ...
    @overload
    def __init__(self, arg2: IKMarkerTask) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getWeight(self) -> float: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class IKTask:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getWeight(self) -> float: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class IKTaskSet:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aIKTaskSet: IKTaskSet) -> None: ...
    @overload
    def __init__(self, aFileName: str) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: IKTask) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def createMarkerWeightSet(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: IKTask, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: IKTask) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: IKTask) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: IKTask, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class IMUInverseKinematicsTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, setupFile: str) -> None: ...
    def append_accuracy(self, value: Any) -> int: ...
    def append_constraint_weight(self, value: Any) -> int: ...
    def append_model_file(self, value: str) -> int: ...
    def append_orientation_weights(self, value: OrientationWeightSet) -> int: ...
    def append_orientations_file(self, value: str) -> int: ...
    def append_output_motion_file(self, value: str) -> int: ...
    def append_report_errors(self, value: Any) -> int: ...
    def append_results_directory(self, value: str) -> int: ...
    def append_sensor_to_opensim_rotations(self, value: Vec3) -> int: ...
    def append_time_range(self, value: Any) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def constructProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def constructProperty_model_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_orientation_weights(self, *args, **kwargs) -> Any: ...
    def constructProperty_orientations_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def constructProperty_sensor_to_opensim_rotations(self, *args, **kwargs) -> Any: ...
    def copyProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def copyProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def copyProperty_model_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_orientation_weights(self, *args, **kwargs) -> Any: ...
    def copyProperty_orientations_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_sensor_to_opensim_rotations(self, *args, **kwargs) -> Any: ...
    def copyProperty_time_range(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getEndTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputMotionFileName(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def get_accuracy(self, i: int) -> Any: ...
    @overload
    def get_accuracy(self) -> Any: ...
    def get_constraint_weight(self, i: int) -> Any: ...
    @overload
    def get_constraint_weight(self) -> Any: ...
    def get_model_file(self, i: int) -> Any: ...
    @overload
    def get_model_file(self) -> str: ...
    def get_orientation_weights(self, i: int) -> Any: ...
    @overload
    def get_orientation_weights(self) -> Any: ...
    def get_orientations_file(self, i: int) -> Any: ...
    @overload
    def get_orientations_file(self) -> str: ...
    def get_output_motion_file(self, i: int) -> Any: ...
    @overload
    def get_output_motion_file(self) -> str: ...
    def get_report_errors(self, i: int) -> Any: ...
    @overload
    def get_report_errors(self) -> Any: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def get_sensor_to_opensim_rotations(self, i: int) -> Any: ...
    @overload
    def get_sensor_to_opensim_rotations(self) -> Any: ...
    def get_time_range(self, i: int) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def loadMarkersFile(self, markerFile: str) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self, visualizeResults: bool) -> bool: ...
    @overload
    def run(self) -> bool: ...
    def runInverseKinematicsWithOrientationsFromFile(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setEndTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputMotionFileName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def set_accuracy(self, *args, **kwargs) -> Any: ...
    def set_constraint_weight(self, *args, **kwargs) -> Any: ...
    def set_model_file(self, *args, **kwargs) -> Any: ...
    def set_orientation_weights(self, *args, **kwargs) -> Any: ...
    def set_orientations_file(self, *args, **kwargs) -> Any: ...
    def set_output_motion_file(self, *args, **kwargs) -> Any: ...
    def set_report_errors(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    def set_sensor_to_opensim_rotations(self, *args, **kwargs) -> Any: ...
    def set_time_range(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_accuracy(self, i: int) -> float: ...
    @overload
    def upd_accuracy(self) -> Any: ...
    def upd_constraint_weight(self, i: int) -> float: ...
    @overload
    def upd_constraint_weight(self) -> Any: ...
    def upd_model_file(self, i: int) -> str: ...
    @overload
    def upd_model_file(self) -> Any: ...
    def upd_orientation_weights(self, i: int) -> Any: ...
    @overload
    def upd_orientation_weights(self) -> Any: ...
    def upd_orientations_file(self, i: int) -> str: ...
    @overload
    def upd_orientations_file(self) -> Any: ...
    def upd_output_motion_file(self, i: int) -> str: ...
    @overload
    def upd_output_motion_file(self) -> Any: ...
    def upd_report_errors(self, i: int) -> bool: ...
    @overload
    def upd_report_errors(self) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def upd_sensor_to_opensim_rotations(self, i: int) -> Any: ...
    @overload
    def upd_sensor_to_opensim_rotations(self) -> Any: ...
    def upd_time_range(self, i: int) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class InverseDynamicsTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aLoadModel: bool) -> None: ...
    @overload
    def __init__(self, aObject: InverseDynamicsTool) -> None: ...
    def append_results_directory(self, value: str) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def disableModelForces(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getCoordinatesFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getEndTime(self) -> float: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getInlined(self) -> bool: ...
    def getLowpassCutoffFrequency(self) -> float: ...
    def getModelFileName(self) -> str: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputGenForceFileName(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def registerTypes(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setCoordinateValues(self, *args, **kwargs) -> Any: ...
    def setCoordinatesFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setEndTime(self, *args, **kwargs) -> Any: ...
    def setExcludedForces(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setLowpassCutoffFrequency(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFileName(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputGenForceFileName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class InverseKinematicsTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aLoadModel: bool) -> None: ...
    def append_IKTaskSet(self, value: IKTaskSet) -> int: ...
    def append_accuracy(self, value: Any) -> int: ...
    def append_constraint_weight(self, value: Any) -> int: ...
    def append_coordinate_file(self, value: str) -> int: ...
    def append_marker_file(self, value: str) -> int: ...
    def append_model_file(self, value: str) -> int: ...
    def append_output_motion_file(self, value: str) -> int: ...
    def append_report_errors(self, value: Any) -> int: ...
    def append_report_marker_locations(self, value: Any) -> int: ...
    def append_results_directory(self, value: str) -> int: ...
    def append_time_range(self, value: Any) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_IKTaskSet(self, *args, **kwargs) -> Any: ...
    def constructProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def constructProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def constructProperty_coordinate_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_marker_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_model_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def constructProperty_report_marker_locations(self, *args, **kwargs) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_IKTaskSet(self, *args, **kwargs) -> Any: ...
    def copyProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def copyProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def copyProperty_coordinate_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_marker_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_model_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def copyProperty_report_marker_locations(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_time_range(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getCoordinateFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getEndTime(self) -> float: ...
    def getIKTaskSet(self) -> Any: ...
    def getInlined(self) -> bool: ...
    def getMarkerDataFileName(self) -> str: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputMotionFileName(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def get_IKTaskSet(self, i: int) -> Any: ...
    @overload
    def get_IKTaskSet(self) -> Any: ...
    def get_accuracy(self, i: int) -> Any: ...
    @overload
    def get_accuracy(self) -> Any: ...
    def get_constraint_weight(self, i: int) -> Any: ...
    @overload
    def get_constraint_weight(self) -> Any: ...
    def get_coordinate_file(self, i: int) -> Any: ...
    @overload
    def get_coordinate_file(self) -> str: ...
    def get_marker_file(self, i: int) -> Any: ...
    @overload
    def get_marker_file(self) -> str: ...
    def get_model_file(self, i: int) -> Any: ...
    @overload
    def get_model_file(self) -> str: ...
    def get_output_motion_file(self, i: int) -> Any: ...
    @overload
    def get_output_motion_file(self) -> str: ...
    def get_report_errors(self, i: int) -> Any: ...
    @overload
    def get_report_errors(self) -> Any: ...
    def get_report_marker_locations(self, i: int) -> Any: ...
    @overload
    def get_report_marker_locations(self) -> Any: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def get_time_range(self, i: int) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def populateReferences(self, *args, **kwargs) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setCoordinateFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setEndTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMarkerDataFileName(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputMotionFileName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def set_IKTaskSet(self, *args, **kwargs) -> Any: ...
    def set_accuracy(self, *args, **kwargs) -> Any: ...
    def set_constraint_weight(self, *args, **kwargs) -> Any: ...
    def set_coordinate_file(self, *args, **kwargs) -> Any: ...
    def set_marker_file(self, *args, **kwargs) -> Any: ...
    def set_model_file(self, *args, **kwargs) -> Any: ...
    def set_output_motion_file(self, *args, **kwargs) -> Any: ...
    def set_report_errors(self, *args, **kwargs) -> Any: ...
    def set_report_marker_locations(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    def set_time_range(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_IKTaskSet(self, i: int) -> Any: ...
    @overload
    def upd_IKTaskSet(self) -> Any: ...
    def upd_accuracy(self, i: int) -> float: ...
    @overload
    def upd_accuracy(self) -> Any: ...
    def upd_constraint_weight(self, i: int) -> float: ...
    @overload
    def upd_constraint_weight(self) -> Any: ...
    def upd_coordinate_file(self, i: int) -> str: ...
    @overload
    def upd_coordinate_file(self) -> Any: ...
    def upd_marker_file(self, i: int) -> str: ...
    @overload
    def upd_marker_file(self) -> Any: ...
    def upd_model_file(self, i: int) -> str: ...
    @overload
    def upd_model_file(self) -> Any: ...
    def upd_output_motion_file(self, i: int) -> str: ...
    @overload
    def upd_output_motion_file(self) -> Any: ...
    def upd_report_errors(self, i: int) -> bool: ...
    @overload
    def upd_report_errors(self) -> Any: ...
    def upd_report_marker_locations(self, i: int) -> bool: ...
    @overload
    def upd_report_marker_locations(self) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def upd_time_range(self, i: int) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class InverseKinematicsToolBase:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def append_accuracy(self, value: Any) -> int: ...
    def append_constraint_weight(self, value: Any) -> int: ...
    def append_model_file(self, value: str) -> int: ...
    def append_output_motion_file(self, value: str) -> int: ...
    def append_report_errors(self, value: Any) -> int: ...
    def append_results_directory(self, value: str) -> int: ...
    def append_time_range(self, value: Any) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def constructProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def constructProperty_model_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def constructProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_accuracy(self, *args, **kwargs) -> Any: ...
    def copyProperty_constraint_weight(self, *args, **kwargs) -> Any: ...
    def copyProperty_model_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_output_motion_file(self, *args, **kwargs) -> Any: ...
    def copyProperty_report_errors(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_time_range(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getEndTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputMotionFileName(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def get_accuracy(self, i: int) -> Any: ...
    @overload
    def get_accuracy(self) -> Any: ...
    def get_constraint_weight(self, i: int) -> Any: ...
    @overload
    def get_constraint_weight(self) -> Any: ...
    def get_model_file(self, i: int) -> Any: ...
    @overload
    def get_model_file(self) -> str: ...
    def get_output_motion_file(self, i: int) -> Any: ...
    @overload
    def get_output_motion_file(self) -> str: ...
    def get_report_errors(self, i: int) -> Any: ...
    @overload
    def get_report_errors(self) -> Any: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def get_time_range(self, i: int) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setEndTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputMotionFileName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def set_accuracy(self, *args, **kwargs) -> Any: ...
    def set_constraint_weight(self, *args, **kwargs) -> Any: ...
    def set_model_file(self, *args, **kwargs) -> Any: ...
    def set_output_motion_file(self, *args, **kwargs) -> Any: ...
    def set_report_errors(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    def set_time_range(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_accuracy(self, i: int) -> float: ...
    @overload
    def upd_accuracy(self) -> Any: ...
    def upd_constraint_weight(self, i: int) -> float: ...
    @overload
    def upd_constraint_weight(self) -> Any: ...
    def upd_model_file(self, i: int) -> str: ...
    @overload
    def upd_model_file(self) -> Any: ...
    def upd_output_motion_file(self, i: int) -> str: ...
    @overload
    def upd_output_motion_file(self) -> Any: ...
    def upd_report_errors(self, i: int) -> bool: ...
    @overload
    def upd_report_errors(self) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def upd_time_range(self, i: int) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class MarkerPair:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aMarkerPair: MarkerPair) -> None: ...
    @overload
    def __init__(self, aName1: str, aName2: str) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getMarkerName(self, i: int) -> str: ...
    def getMarkerNames(self, *args, **kwargs) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMarkerName(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class MarkerPairSet:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aSimmMarkerPairSet: MarkerPairSet) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: MarkerPair) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: MarkerPair, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: MarkerPair) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: MarkerPair) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: MarkerPair, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class MarkerPlacer:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aMarkerPlacementParams: MarkerPlacer) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getCoordinateFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getIKTaskSet(self) -> Any: ...
    def getInlined(self) -> bool: ...
    def getMarkerFileName(self) -> str: ...
    def getMaxMarkerMovement(self) -> float: ...
    def getMoveModelMarkers(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputMarkerFileName(self) -> str: ...
    def getOutputModelFileName(self) -> str: ...
    def getOutputMotionFileName(self) -> str: ...
    def getOutputStorage(self) -> Any: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getStaticPoseFileName(self) -> str: ...
    def getTimeRange(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def processModel(self, aModel: Model, aPathToSubject: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setCoordinateFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMarkerFileName(self, *args, **kwargs) -> Any: ...
    def setMaxMarkerMovement(self, *args, **kwargs) -> Any: ...
    def setMoveModelMarkers(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputMarkerFileName(self, *args, **kwargs) -> Any: ...
    def setOutputModelFileName(self, *args, **kwargs) -> Any: ...
    def setOutputMotionFileName(self, *args, **kwargs) -> Any: ...
    def setPrintResultFiles(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setStaticPoseFileName(self, *args, **kwargs) -> Any: ...
    def setTimeRange(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class Measurement:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aMeasurement: Measurement) -> None: ...
    def applyScaleFactor(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getBodyScaleSet(self) -> Any: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getMarkerPair(self, aIndex: int) -> Any: ...
    def getMarkerPairSet(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumMarkerPairs(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def registerTypes(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class MeasurementSet:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aSimmMeasurementSet: MeasurementSet) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: Measurement) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: Measurement, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: Measurement) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: Measurement) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: Measurement, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class ModelScaler:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aModelScaler: ModelScaler) -> None: ...
    def addMeasurement(self, *args, **kwargs) -> Any: ...
    def addScale(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def computeMeasurementScaleFactor(self, s: State, aModel: Model, aMarkerData: MarkerData, aMeasurement: Measurement) -> float: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getApply(self) -> bool: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getMarkerFileName(self) -> str: ...
    def getMeasurementSet(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputModelFileName(self) -> str: ...
    def getOutputScaleFileName(self) -> str: ...
    def getPreserveMassDist(self) -> bool: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getScaleSet(self) -> Any: ...
    def getScalingOrder(self) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getTimeRange(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def processModel(self, aModel: Model, aPathToSubject: str, aFinalMass: float) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def registerTypes(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setApply(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMarkerFileName(self, *args, **kwargs) -> Any: ...
    def setMeasurementSet(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOutputModelFileName(self, *args, **kwargs) -> Any: ...
    def setOutputScaleFileName(self, *args, **kwargs) -> Any: ...
    def setPreserveMassDist(self, *args, **kwargs) -> Any: ...
    def setPrintResultFiles(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setScaleSetFile(self, *args, **kwargs) -> Any: ...
    def setScalingOrder(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setTimeRange(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class OrientationWeightSet:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg2: OrientationWeightSet) -> None: ...
    @overload
    def __init__(self, arg2: OrientationWeightSet) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: OrientationWeight) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: OrientationWeight) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: OrientationWeight, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: OrientationWeight) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: OrientationWeight) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: OrientationWeight, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class RRATool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aLoadModel: bool) -> None: ...
    @overload
    def __init__(self, aObject: RRATool) -> None: ...
    def addAnalysisSetToModel(self, *args, **kwargs) -> Any: ...
    def addControllerSetToModel(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def createExternalLoads(self, externalLoadsFileName: str, model: Model) -> bool: ...
    def dump(self) -> str: ...
    def getAdjustCOMToReduceResiduals(self) -> bool: ...
    def getAdjustedCOMBody(self) -> str: ...
    def getAnalysisSet(self) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getConstraintsFileName(self) -> str: ...
    def getControllerSet(self) -> Any: ...
    def getControlsFileName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDesiredKinematicsFileName(self) -> str: ...
    def getDesiredPointsFileName(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getErrorTolerance(self) -> float: ...
    def getExternalLoads(self) -> Any: ...
    def getExternalLoadsFileName(self) -> str: ...
    def getFinalTime(self) -> float: ...
    def getForceSetFiles(self) -> Any: ...
    def getForceStorage(self) -> Any: ...
    def getInitialTime(self) -> float: ...
    def getInlined(self) -> bool: ...
    def getLowpassCutoffFrequency(self) -> float: ...
    def getMaxDT(self) -> float: ...
    def getMaximumNumberOfSteps(self) -> int: ...
    def getMinDT(self) -> float: ...
    def getModel(self) -> Any: ...
    def getModelFilename(self) -> str: ...
    def getName(self) -> str: ...
    def getNextAvailableForceName(self, prefix: Any) -> str: ...
    def getNumProperties(self) -> int: ...
    def getOutputModelFileName(self) -> str: ...
    def getOutputPrecision(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getReplaceForceSet(self) -> bool: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSolveForEquilibrium(self) -> bool: ...
    def getStartTime(self) -> float: ...
    def getTaskSetFileName(self) -> str: ...
    def getToolOwnsModel(self) -> bool: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def loadModel(self, *args, **kwargs) -> Any: ...
    def loadQStorage(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def modelHasExternalLoads(self) -> bool: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printResults(self, *args, **kwargs) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def removeAnalysisSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeControllerSetFromModel(self, *args, **kwargs) -> Any: ...
    def removeExternalLoadsFromModel(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAdjustCOMToReduceResiduals(self, *args, **kwargs) -> Any: ...
    def setAdjustedCOMBody(self, *args, **kwargs) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setConstraintsFileName(self, *args, **kwargs) -> Any: ...
    def setControlsFileName(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setDesiredKinematicsFileName(self, *args, **kwargs) -> Any: ...
    def setDesiredPointsFileName(self, *args, **kwargs) -> Any: ...
    def setErrorTolerance(self, *args, **kwargs) -> Any: ...
    def setExternalLoads(self, *args, **kwargs) -> Any: ...
    def setExternalLoadsFileName(self, *args, **kwargs) -> Any: ...
    def setFinalTime(self, *args, **kwargs) -> Any: ...
    def setForceSetFiles(self, *args, **kwargs) -> Any: ...
    def setInitialTime(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setLowpassCutoffFrequency(self, *args, **kwargs) -> Any: ...
    def setMaxDT(self, *args, **kwargs) -> Any: ...
    def setMaximumNumberOfSteps(self, *args, **kwargs) -> Any: ...
    def setMinDT(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setModelFilename(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOriginalForceSet(self, *args, **kwargs) -> Any: ...
    def setOutputModelFileName(self, *args, **kwargs) -> Any: ...
    def setOutputPrecision(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setReplaceForceSet(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSolveForEquilibrium(self, *args, **kwargs) -> Any: ...
    def setStartTime(self, *args, **kwargs) -> Any: ...
    def setTaskSetFileName(self, *args, **kwargs) -> Any: ...
    def setToolOwnsModel(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updAnalysisSet(self) -> Any: ...
    def updControllerSet(self) -> Any: ...
    def updExternalLoads(self) -> Any: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateModelForces(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class ScaleTool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str) -> None: ...
    @overload
    def __init__(self, aSubject: ScaleTool) -> None: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def copyData(self, *args, **kwargs) -> Any: ...
    def createModel(self) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGenericModelMaker(self) -> Any: ...
    def getInlined(self) -> bool: ...
    def getMarkerPlacer(self) -> Any: ...
    def getModelScaler(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPathToSubject(self) -> str: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSubjectAge(self) -> float: ...
    def getSubjectHeight(self) -> float: ...
    def getSubjectMass(self) -> float: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isDefaultGenericModelMaker(self) -> bool: ...
    def isDefaultMarkerPlacer(self) -> bool: ...
    def isDefaultModelScaler(self) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def registerTypes(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setPathToSubject(self, *args, **kwargs) -> Any: ...
    def setPrintResultFiles(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSubjectAge(self, *args, **kwargs) -> Any: ...
    def setSubjectHeight(self, *args, **kwargs) -> Any: ...
    def setSubjectMass(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class SetIKTasks:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aUpdateFromXMLNode: bool) -> None: ...
    @overload
    def __init__(self, aSet: Set) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: IKTask) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: IKTask) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: IKTask, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: IKTask) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: IKTask) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: IKTask, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class SetMarkerPairs:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aUpdateFromXMLNode: bool) -> None: ...
    @overload
    def __init__(self, aSet: Set) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: MarkerPair) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: MarkerPair) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: MarkerPair, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: MarkerPair) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: MarkerPair) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: MarkerPair, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class SetMeasurements:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aUpdateFromXMLNode: bool) -> None: ...
    @overload
    def __init__(self, aSet: Set) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: Measurement) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: Measurement) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: Measurement, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: Measurement) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: Measurement) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: Measurement, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class SetTrackingTasks:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    SetIterator: Any
    def __init__(self) -> None: ...
    @overload
    def __init__(self, aFileName: str, aUpdateFromXMLNode: bool) -> None: ...
    @overload
    def __init__(self, aSet: Set) -> None: ...
    def addGroup(self, *args, **kwargs) -> Any: ...
    def addObjectToGroup(self, *args, **kwargs) -> Any: ...
    def adoptAndAppend(self, aObject: TrackingTask) -> bool: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clearAndDestroy(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def cloneAndAppend(self, aObject: TrackingTask) -> bool: ...
    def contains(self, aName: str) -> bool: ...
    def dump(self) -> str: ...
    def get(self, aIndex: int) -> Any: ...
    @overload
    def get(self, aName: str) -> Any: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getGroup(self, aGroupName: str) -> Any: ...
    @overload
    def getGroup(self, aIndex: int) -> Any: ...
    def getGroupNames(self, *args, **kwargs) -> Any: ...
    def getGroupNamesContaining(self, *args, **kwargs) -> Any: ...
    def getIndex(self, aObject: TrackingTask, aStartIndex: int) -> int: ...
    @overload
    def getIndex(self, aName: str, aStartIndex: int) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNames(self, *args, **kwargs) -> Any: ...
    def getNumGroups(self) -> int: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getSize(self) -> int: ...
    def hasProperty(self, name: str) -> bool: ...
    def insert(self, aIndex: int, aObject: TrackingTask) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def items(self, *args, **kwargs) -> Any: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def remove(self, aIndex: int) -> bool: ...
    @overload
    def remove(self, aObject: TrackingTask) -> bool: ...
    def removeGroup(self, *args, **kwargs) -> Any: ...
    def renameGroup(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def set(self, aIndex: int, aObject: TrackingTask, preserveGroups: bool) -> bool: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setMemoryOwner(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setSize(self, aSize: int) -> bool: ...
    def setupGroups(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class SwigPyIterator:
    def __init__(self, *args, **kwargs) -> Any: ...
    def advance(self, n: Any) -> Any: ...
    def copy(self) -> Any: ...
    def decr(self, n: Any) -> Any: ...
    def distance(self, x: Any) -> Any: ...
    def equal(self, x: Any) -> bool: ...
    def incr(self, n: Any) -> Any: ...
    def next(self) -> Any: ...
    def previous(self) -> Any: ...
    thisown: Any
    def value(self) -> Any: ...

class Tool:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def append_results_directory(self, value: str) -> int: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def constructProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def copyProperty_results_directory(self, *args, **kwargs) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getResultsDir(self) -> str: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def get_results_directory(self, i: int) -> Any: ...
    @overload
    def get_results_directory(self) -> str: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def run(self) -> bool: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setResultsDir(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def set_results_directory(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def upd_results_directory(self, i: int) -> str: ...
    @overload
    def upd_results_directory(self) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

class TrackingTask:
    def PrintPropertyInfo(self, os: Any, classNameDotPropertyName: str, printFlagInfo: bool) -> bool: ...
    @overload
    def PrintPropertyInfo(self, os: Any, className: str, propertyName: str, printFlagInfo: bool) -> bool: ...
    def RegisterType(self, *args, **kwargs) -> Any: ...
    def RenameType(self, *args, **kwargs) -> Any: ...
    def SafeCopy(self, aObject: Object) -> Any: ...
    def __init__(self, *args, **kwargs) -> Any: ...
    def assign(self, *args, **kwargs) -> Any: ...
    def clone(self) -> Any: ...
    def dump(self) -> str: ...
    def getAuthors(self) -> str: ...
    def getClassName(self) -> str: ...
    def getConcreteClassName(self) -> str: ...
    def getDebugLevel(self) -> int: ...
    def getDefaultInstanceOfType(self, concreteClassName: str) -> Any: ...
    def getDescription(self) -> str: ...
    def getDocumentFileName(self) -> str: ...
    def getDocumentFileVersion(self) -> int: ...
    def getInlined(self) -> bool: ...
    def getModel(self) -> Any: ...
    def getName(self) -> str: ...
    def getNumProperties(self) -> int: ...
    def getNumTaskFunctions(self) -> int: ...
    def getOn(self) -> bool: ...
    def getPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def getPropertyByName(self, name: str) -> Any: ...
    def getReferences(self) -> str: ...
    def getRegisteredTypenames(self, *args, **kwargs) -> Any: ...
    def getSerializeAllDefaults(self) -> bool: ...
    def getWeight(self, aWhich: int) -> float: ...
    def getWeights(self) -> Any: ...
    def hasProperty(self, name: str) -> bool: ...
    def isA(self, type: str) -> bool: ...
    def isEqualTo(self, aObject: Object) -> bool: ...
    def isKindOf(self, type: str) -> bool: ...
    def isObjectUpToDateWithProperties(self) -> bool: ...
    def makeObjectFromFile(self, fileName: str) -> Any: ...
    def newInstanceOfType(self, concreteClassName: str) -> Any: ...
    def printToXML(self, fileName: str) -> bool: ...
    def readObjectFromXMLNodeOrFile(self, *args, **kwargs) -> Any: ...
    def registerType(self, *args, **kwargs) -> Any: ...
    def renameType(self, *args, **kwargs) -> Any: ...
    def safeDownCast(self, obj: Object) -> Any: ...
    def setAllPropertiesUseDefault(self, *args, **kwargs) -> Any: ...
    def setAuthors(self, *args, **kwargs) -> Any: ...
    def setDebugLevel(self, *args, **kwargs) -> Any: ...
    def setDescription(self, *args, **kwargs) -> Any: ...
    def setInlined(self, *args, **kwargs) -> Any: ...
    def setModel(self, *args, **kwargs) -> Any: ...
    def setName(self, *args, **kwargs) -> Any: ...
    def setOn(self, *args, **kwargs) -> Any: ...
    def setReferences(self, *args, **kwargs) -> Any: ...
    def setSerializeAllDefaults(self, *args, **kwargs) -> Any: ...
    def setTaskFunctions(self, *args, **kwargs) -> Any: ...
    def setWeight(self, *args, **kwargs) -> Any: ...
    def setWeights(self, *args, **kwargs) -> Any: ...
    thisown: Any
    def toString(self) -> str: ...
    def updPropertyByIndex(self, propertyIndex: int) -> Any: ...
    def updPropertyByName(self, name: str) -> Any: ...
    def updateFromXMLNode(self, *args, **kwargs) -> Any: ...
    def updateXMLNode(self, *args, **kwargs) -> Any: ...

