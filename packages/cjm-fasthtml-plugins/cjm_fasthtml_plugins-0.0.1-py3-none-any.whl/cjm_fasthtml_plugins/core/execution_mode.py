"""Enum definitions for plugin execution modes (in-process, subprocess, Docker, cloud, etc.)"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/core/execution_mode.ipynb.

# %% auto 0
__all__ = ['PluginExecutionMode', 'CloudProviderType']

# %% ../../nbs/core/execution_mode.ipynb 3
from enum import Enum

# %% ../../nbs/core/execution_mode.ipynb 5
class PluginExecutionMode(Enum):
    """How a plugin executes.
    
    This enum categorizes plugins by their execution environment,
    from simple in-process execution to complex cloud deployments.
    
    Examples:
        >>> # Simple in-process plugin
        >>> mode = PluginExecutionMode.IN_PROCESS
        >>> 
        >>> # Plugin that spawns subprocesses (like vLLM server)
        >>> mode = PluginExecutionMode.SUBPROCESS
        >>> 
        >>> # Plugin running on cloud GPU
        >>> mode = PluginExecutionMode.CLOUD_GPU
    """
    IN_PROCESS = "in_process"          # Runs in same process
    SUBPROCESS = "subprocess"           # Spawns subprocess(es)
    DOCKER = "docker"                   # Runs in Docker container
    CONDA_ENV = "conda_env"            # Runs in separate conda environment
    EXTERNAL_SERVICE = "external"       # Connects to external service (local)
    
    # Cloud/Remote execution modes
    REMOTE_SSH = "remote_ssh"          # SSH to remote machine
    CLOUD_VM = "cloud_vm"              # Cloud VM (AWS EC2, GCP Compute, etc.)
    CLOUD_CONTAINER = "cloud_container" # Cloud container service (ECS, Cloud Run, etc.)
    CLOUD_SERVERLESS = "cloud_serverless" # Serverless (Lambda, Cloud Functions, etc.)
    CLOUD_GPU = "cloud_gpu"            # Cloud GPU service (SageMaker, Vertex AI, etc.)
    KUBERNETES = "kubernetes"          # Kubernetes cluster

# %% ../../nbs/core/execution_mode.ipynb 9
class CloudProviderType(Enum):
    """Supported cloud providers.
    
    Identifies which cloud provider or GPU rental service is being used
    for remote execution.
    
    Examples:
        >>> # Major cloud providers
        >>> provider = CloudProviderType.AWS
        >>> provider = CloudProviderType.GCP
        >>> 
        >>> # GPU rental services
        >>> provider = CloudProviderType.LAMBDA_LABS
        >>> provider = CloudProviderType.RUNPOD
    """
    AWS = "aws"
    GCP = "gcp"
    AZURE = "azure"
    LAMBDA_LABS = "lambda_labs"
    RUNPOD = "runpod"
    VAST_AI = "vast_ai"
    PAPERSPACE = "paperspace"
    TOGETHER_AI = "together_ai"
    CUSTOM = "custom"  # Custom/self-hosted infrastructure
