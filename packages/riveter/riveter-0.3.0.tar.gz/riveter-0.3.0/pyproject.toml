[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "riveter"
version = "0.3.0"
authors = [
    { name = "Riveter Team" },
]
description = "Infrastructure Drift Detection as Code - Define custom drift detection rules"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "pyyaml>=6.0",
    "click>=8.0",
    "rich>=13.0",
    "python-hcl2>=4.0",
    "cryptography>=41.0",
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=24.0",
    "isort>=5.13",
    "mypy>=1.13",
    "ruff>=0.8.0",
    "types-PyYAML>=6.0",
    "bandit>=1.7.10",
    "pre-commit>=3.0.0",
    "tomli-w>=1.0.0",
]

[project.scripts]
riveter = "riveter.cli:main"

[tool.black]
line-length = 100
target-version = [
    "py312",
]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
strict = true
ignore_missing_imports = false
warn_return_any = true
warn_unused_configs = true
disable_error_code = [
    "import-untyped",
    "attr-defined",
]

[[tool.mypy.overrides]]
module = "hcl2"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tomli_w"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "riveter.toml_handler"
disable_error_code = [
    "assignment",
]

[[tool.mypy.overrides]]
module = "riveter.cli"
disable_error_code = [
    "misc",
]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",
    "F",
    "B",
    "I",
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src/riveter",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = [
    "src/riveter",
]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.tox/*",
    "*/cli.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
