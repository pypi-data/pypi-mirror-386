[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-copycat-upmex"
version = "1.6.5"
description = "Universal Package Metadata Extractor - Extract metadata from various package formats"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Oscar Valenzuela B.", email = "oscar.valenzuela.b@gmail.com"}
]
maintainers = [
    {name = "Oscar Valenzuela B.", email = "oscar.valenzuela.b@gmail.com"}
]
keywords = [
    "package", "metadata", "extractor", "license", "detection",
    "python", "npm", "maven", "jar", "wheel", "pypi"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving :: Packaging",
]
dependencies = [
    "requests>=2.28.0",
    "click>=8.0.0",
    "typing-extensions>=4.0.0;python_version<'3.10'",
    "semantic-copycat-oslili>=1.5.5",
    "toml>=0.10.0",
    "zstandard>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests",
]
ml = [
    "scikit-learn>=1.0.0",
    "numpy>=1.21.0",
]
all = [
    "semantic-copycat-upmex[dev,ml]",
]

[project.scripts]
upmex = "upmex.cli:main"

[project.urls]
Homepage = "https://github.com/oscarvalenzuelab/semantic-copycat-upmex"
Repository = "https://github.com/oscarvalenzuelab/semantic-copycat-upmex"
Issues = "https://github.com/oscarvalenzuelab/semantic-copycat-upmex/issues"
Documentation = "https://github.com/oscarvalenzuelab/semantic-copycat-upmex#readme"
Changelog = "https://github.com/oscarvalenzuelab/semantic-copycat-upmex/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
upmex = ["licenses/data/**/*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true