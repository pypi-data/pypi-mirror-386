"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk import utils
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import validate_open_enum
from enum import Enum
from pydantic.functional_validators import PlainValidator
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class IdentifierType1(str, Enum, metaclass=utils.OpenEnumMeta):
    r"""The type of identifier"""

    IDENTIFIER_TYPE_UNSPECIFIED = "IDENTIFIER_TYPE_UNSPECIFIED"
    ORIGINATING_ACCOUNT_ID = "ORIGINATING_ACCOUNT_ID"
    ORIGINATING_FDID = "ORIGINATING_FDID"
    ORIGINATING_CAT_REPORTER_CRD = "ORIGINATING_CAT_REPORTER_CRD"
    CLIENT_ACCOUNT_ID = "CLIENT_ACCOUNT_ID"


class IdentifierTypedDict(TypedDict):
    r"""An identifier associated with an account"""

    type: NotRequired[IdentifierType1]
    r"""The type of identifier"""
    value: NotRequired[str]
    r"""The value of the identifier"""


class Identifier(BaseModel):
    r"""An identifier associated with an account"""

    type: Annotated[
        Optional[IdentifierType1], PlainValidator(validate_open_enum(False))
    ] = None
    r"""The type of identifier"""

    value: Optional[str] = None
    r"""The value of the identifier"""
