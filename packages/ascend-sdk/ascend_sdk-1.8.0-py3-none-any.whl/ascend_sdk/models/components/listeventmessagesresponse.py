"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .eventmessage import EventMessage, EventMessageTypedDict
from ascend_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ListEventMessagesResponseTypedDict(TypedDict):
    r"""A response to a list events method"""

    event_messages: NotRequired[List[EventMessageTypedDict]]
    r"""The returned collection of events"""
    next_page_token: NotRequired[str]
    r"""Page token used for pagination; Supplying a page token returns the next page of results"""


class ListEventMessagesResponse(BaseModel):
    r"""A response to a list events method"""

    event_messages: Optional[List[EventMessage]] = None
    r"""The returned collection of events"""

    next_page_token: Optional[str] = None
    r"""Page token used for pagination; Supplying a page token returns the next page of results"""
