"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .snapshot import Snapshot, SnapshotTypedDict
from ascend_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ListSnapshotsResponseTypedDict(TypedDict):
    r"""Returns the requested snapshots."""

    next_page_token: NotRequired[str]
    r"""The token for retrieving the next page of snapshots. This is only returned where total_size is greater than page_size."""
    snapshots: NotRequired[List[SnapshotTypedDict]]
    r"""The returned snapshots, with pagination and filtering applied."""
    total_size: NotRequired[str]
    r"""The total number of snapshots matching the request criteria. All available snapshots may not be contained in a single response. If this number is greater than the page_size in the request, pagination will need to be applied to retrieve all snapshots."""


class ListSnapshotsResponse(BaseModel):
    r"""Returns the requested snapshots."""

    next_page_token: Optional[str] = None
    r"""The token for retrieving the next page of snapshots. This is only returned where total_size is greater than page_size."""

    snapshots: Optional[List[Snapshot]] = None
    r"""The returned snapshots, with pagination and filtering applied."""

    total_size: Optional[str] = None
    r"""The total number of snapshots matching the request criteria. All available snapshots may not be contained in a single response. If this number is greater than the page_size in the request, pagination will need to be applied to retrieve all snapshots."""
