"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk import utils
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import validate_open_enum
from enum import Enum
from pydantic.functional_validators import PlainValidator
from typing_extensions import Annotated, TypedDict


class RetrieveFixedIncomeMarksRequestSecurityIdentifiersCreateIdentifierType(
    str, Enum, metaclass=utils.OpenEnumMeta
):
    r"""The identifier type of the asset being sought"""

    ASSET_ID = "ASSET_ID"
    CUSIP = "CUSIP"
    ISIN = "ISIN"


class RetrieveFixedIncomeMarksRequestSecurityIdentifiersCreateTypedDict(TypedDict):
    r"""The identifier for the asset."""

    identifier: str
    r"""Identifier of the asset (of the type specified in `identifier_type`)."""
    identifier_type: (
        RetrieveFixedIncomeMarksRequestSecurityIdentifiersCreateIdentifierType
    )
    r"""The identifier type of the asset being sought"""


class RetrieveFixedIncomeMarksRequestSecurityIdentifiersCreate(BaseModel):
    r"""The identifier for the asset."""

    identifier: str
    r"""Identifier of the asset (of the type specified in `identifier_type`)."""

    identifier_type: Annotated[
        RetrieveFixedIncomeMarksRequestSecurityIdentifiersCreateIdentifierType,
        PlainValidator(validate_open_enum(False)),
    ]
    r"""The identifier type of the asset being sought"""
