"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .investigation import Investigation, InvestigationTypedDict
from ascend_sdk.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class ListInvestigationsResponseTypedDict(TypedDict):
    r"""ListInvestigationStatesResponse"""

    investigations: NotRequired[List[InvestigationTypedDict]]
    r"""List of investigations matching request search criteria"""
    next_page_token: NotRequired[str]
    r"""The next pagination token in the Search response; an empty value means no more results"""
    total_size: NotRequired[int]
    r"""The total number of investigations matching the search criteria. This is the total number of results available across all pages of the query, not the number of investigations returned in the current page. For example, if the search query matches 1,000 investigations but only 50 results are returned per page, `total_size` will be 1,000."""


class ListInvestigationsResponse(BaseModel):
    r"""ListInvestigationStatesResponse"""

    investigations: Optional[List[Investigation]] = None
    r"""List of investigations matching request search criteria"""

    next_page_token: Optional[str] = None
    r"""The next pagination token in the Search response; an empty value means no more results"""

    total_size: Optional[int] = None
    r"""The total number of investigations matching the search criteria. This is the total number of results available across all pages of the query, not the number of investigations returned in the current page. For example, if the search query matches 1,000 investigations but only 50 results are returned per page, `total_size` will be 1,000."""
