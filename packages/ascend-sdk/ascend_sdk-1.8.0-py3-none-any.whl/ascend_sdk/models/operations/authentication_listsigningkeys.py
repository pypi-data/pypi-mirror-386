"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import (
    httpmetadata as components_httpmetadata,
    listsigningkeysresponse as components_listsigningkeysresponse,
    status as components_status,
)
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import FieldMetadata, QueryParamMetadata, SecurityMetadata
import pydantic
from typing import Callable, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AuthenticationListSigningKeysSecurityTypedDict(TypedDict):
    api_key_auth: str


class AuthenticationListSigningKeysSecurity(BaseModel):
    api_key_auth: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="x-api-key",
            )
        ),
    ]


class AuthenticationListSigningKeysRequestTypedDict(TypedDict):
    page_size: NotRequired[int]
    r"""The number of entries to return in a single page; Default = 100; Maximum = 1000"""
    page_token: NotRequired[str]
    r"""Page token used for pagination; Supplying a page token returns the next page of results"""


class AuthenticationListSigningKeysRequest(BaseModel):
    page_size: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The number of entries to return in a single page; Default = 100; Maximum = 1000"""

    page_token: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Page token used for pagination; Supplying a page token returns the next page of results"""


class AuthenticationListSigningKeysResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    list_signing_keys_response: NotRequired[
        components_listsigningkeysresponse.ListSigningKeysResponseTypedDict
    ]
    r"""OK"""
    status: NotRequired[components_status.StatusTypedDict]
    r"""INTERNAL: An internal server error occurred."""


class AuthenticationListSigningKeysResponse(BaseModel):
    next: Callable[[], Optional[AuthenticationListSigningKeysResponse]]

    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    list_signing_keys_response: Optional[
        components_listsigningkeysresponse.ListSigningKeysResponse
    ] = None
    r"""OK"""

    status: Optional[components_status.Status] = None
    r"""INTERNAL: An internal server error occurred."""
