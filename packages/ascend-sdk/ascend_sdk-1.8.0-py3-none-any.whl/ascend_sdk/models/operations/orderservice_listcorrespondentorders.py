"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import (
    httpmetadata as components_httpmetadata,
    listcorrespondentordersresponse as components_listcorrespondentordersresponse,
    status as components_status,
)
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class OrderServiceListCorrespondentOrdersRequestTypedDict(TypedDict):
    correspondent_id: str
    r"""The correspondent id."""
    filter_: NotRequired[str]
    r"""CEL filter string expressing what orders should be listed. The only properties available for filtering are the boolean `open` and `order_date`. Each of these represent fields on the Orders object, and more details about each can be found attached to the properties.

    If `open` is not provided, both \"open\" and \"not open\" orders will be returned. All `order_date` searches are limited to orders within the most recent 365 days. If no `order_date` is specified, the default will search between now and 365 days ago.
    """
    page_size: NotRequired[int]
    r"""The number of records to return in a single page. The maximum page size is 100. If a value is not provided, the default of 100 will be used. If a value less than one, or greater than the maximum, is provided, the default value will be used."""
    page_token: NotRequired[str]
    r"""The token for the next page of content to fetch. When paginating, all other parameters provided to `ListOrders` must match the call that provided the page token."""


class OrderServiceListCorrespondentOrdersRequest(BaseModel):
    correspondent_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The correspondent id."""

    filter_: Annotated[
        Optional[str],
        pydantic.Field(alias="filter"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""CEL filter string expressing what orders should be listed. The only properties available for filtering are the boolean `open` and `order_date`. Each of these represent fields on the Orders object, and more details about each can be found attached to the properties.

    If `open` is not provided, both \"open\" and \"not open\" orders will be returned. All `order_date` searches are limited to orders within the most recent 365 days. If no `order_date` is specified, the default will search between now and 365 days ago.
    """

    page_size: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The number of records to return in a single page. The maximum page size is 100. If a value is not provided, the default of 100 will be used. If a value less than one, or greater than the maximum, is provided, the default value will be used."""

    page_token: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The token for the next page of content to fetch. When paginating, all other parameters provided to `ListOrders` must match the call that provided the page token."""


class OrderServiceListCorrespondentOrdersResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    list_correspondent_orders_response: NotRequired[
        components_listcorrespondentordersresponse.ListCorrespondentOrdersResponseTypedDict
    ]
    r"""OK"""
    status: NotRequired[components_status.StatusTypedDict]
    r"""INVALID_ARGUMENT: There was an issue with one or more fields in the request. The message field will contain details about which field failed validation and why."""


class OrderServiceListCorrespondentOrdersResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    list_correspondent_orders_response: Optional[
        components_listcorrespondentordersresponse.ListCorrespondentOrdersResponse
    ] = None
    r"""OK"""

    status: Optional[components_status.Status] = None
    r"""INVALID_ARGUMENT: There was an issue with one or more fields in the request. The message field will contain details about which field failed validation and why."""
