"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import (
    httpmetadata as components_httpmetadata,
    rebookexecutionrequestcreate as components_rebookexecutionrequestcreate,
    rebookexecutionresponse as components_rebookexecutionresponse,
    status as components_status,
)
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class BookingRebookExecutionRequestTypedDict(TypedDict):
    account_id: str
    r"""The account id."""
    trade_id: str
    r"""The trade id."""
    execution_id: str
    r"""The execution id."""
    rebook_execution_request_create: (
        components_rebookexecutionrequestcreate.RebookExecutionRequestCreateTypedDict
    )


class BookingRebookExecutionRequest(BaseModel):
    account_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The account id."""

    trade_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The trade id."""

    execution_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The execution id."""

    rebook_execution_request_create: Annotated[
        components_rebookexecutionrequestcreate.RebookExecutionRequestCreate,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


class BookingRebookExecutionResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    rebook_execution_response: NotRequired[
        components_rebookexecutionresponse.RebookExecutionResponseTypedDict
    ]
    r"""OK"""
    status: NotRequired[components_status.StatusTypedDict]
    r"""INVALID_ARGUMENT: The request is not valid.
    FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
    """


class BookingRebookExecutionResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    rebook_execution_response: Optional[
        components_rebookexecutionresponse.RebookExecutionResponse
    ] = None
    r"""OK"""

    status: Optional[components_status.Status] = None
    r"""INVALID_ARGUMENT: The request is not valid.
    FAILED_PRECONDITION: The operation was rejected because the system is not in a state required for the operation's processing.
    """
