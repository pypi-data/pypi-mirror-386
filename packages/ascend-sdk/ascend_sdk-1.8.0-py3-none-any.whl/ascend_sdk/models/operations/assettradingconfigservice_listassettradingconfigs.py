"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import (
    httpmetadata as components_httpmetadata,
    listassettradingconfigsresponse as components_listassettradingconfigsresponse,
    status as components_status,
)
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AssetTradingConfigServiceListAssetTradingConfigsRequestTypedDict(TypedDict):
    correspondent_id: str
    r"""The correspondent id."""
    asset_id: str
    r"""The asset id."""
    page_size: NotRequired[int]
    r"""The maximum number of asset trading configs to return. The service may return fewer than this value. Default is 100 (subject to change) The maximum is 1000, values exceeding this will be set to 1000 (subject to change)"""
    page_token: NotRequired[str]
    r"""A page token, received from a previous `ListAssetTradingConfigRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAssetTradingConfigRequest` must match the call that provided the page token in order to maintain a stable result set."""
    filter_: NotRequired[str]
    r"""A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; symbol, cusip, isin, and asset_type are available in the CEL string. Additional fields will be available in the future. This is subject to change."""


class AssetTradingConfigServiceListAssetTradingConfigsRequest(BaseModel):
    correspondent_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The correspondent id."""

    asset_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The asset id."""

    page_size: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The maximum number of asset trading configs to return. The service may return fewer than this value. Default is 100 (subject to change) The maximum is 1000, values exceeding this will be set to 1000 (subject to change)"""

    page_token: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A page token, received from a previous `ListAssetTradingConfigRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAssetTradingConfigRequest` must match the call that provided the page token in order to maintain a stable result set."""

    filter_: Annotated[
        Optional[str],
        pydantic.Field(alias="filter"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; symbol, cusip, isin, and asset_type are available in the CEL string. Additional fields will be available in the future. This is subject to change."""


class AssetTradingConfigServiceListAssetTradingConfigsResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    list_asset_trading_configs_response: NotRequired[
        components_listassettradingconfigsresponse.ListAssetTradingConfigsResponseTypedDict
    ]
    r"""OK"""
    status: NotRequired[components_status.StatusTypedDict]
    r"""INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details."""


class AssetTradingConfigServiceListAssetTradingConfigsResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    list_asset_trading_configs_response: Optional[
        components_listassettradingconfigsresponse.ListAssetTradingConfigsResponse
    ] = None
    r"""OK"""

    status: Optional[components_status.Status] = None
    r"""INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details."""
