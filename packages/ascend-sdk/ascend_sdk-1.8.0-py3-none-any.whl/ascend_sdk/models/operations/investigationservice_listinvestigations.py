"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import (
    httpmetadata as components_httpmetadata,
    listinvestigationsresponse as components_listinvestigationsresponse,
    status as components_status,
)
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import Callable, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class InvestigationServiceListInvestigationsRequestTypedDict(TypedDict):
    page_size: NotRequired[int]
    r"""The maximum number of records to return. Default is 50 The maximum is 200, values exceeding this will be set to 200"""
    page_token: NotRequired[str]
    r"""The page token used to request a specific page of the search results"""
    filter_: NotRequired[str]
    r"""A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; Filter options include:
    ListInvestigationStatesResponse.investigation_states
    """
    order_by: NotRequired[str]
    r"""The order in which investigations are listed. Only one field and direction can be specified. Supported fields (followed by 'asc' or 'desc'; 'asc' is default if left blank):
    - investigation_request_state
    - correspondent_id
    - scope
    - identity_verification
    - watchlist_screen
    - person.given_name
    - person.family_name
    - entity.legal_name
    - created_at
    - updated_at
    """


class InvestigationServiceListInvestigationsRequest(BaseModel):
    page_size: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The maximum number of records to return. Default is 50 The maximum is 200, values exceeding this will be set to 200"""

    page_token: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The page token used to request a specific page of the search results"""

    filter_: Annotated[
        Optional[str],
        pydantic.Field(alias="filter"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A CEL string to filter results; See the [CEL Search](https://developer.apexclearing.com/apex-fintech-solutions/docs/cel-search) page in Guides for more information; Filter options include:
    ListInvestigationStatesResponse.investigation_states
    """

    order_by: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The order in which investigations are listed. Only one field and direction can be specified. Supported fields (followed by 'asc' or 'desc'; 'asc' is default if left blank):
    - investigation_request_state
    - correspondent_id
    - scope
    - identity_verification
    - watchlist_screen
    - person.given_name
    - person.family_name
    - entity.legal_name
    - created_at
    - updated_at
    """


class InvestigationServiceListInvestigationsResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    list_investigations_response: NotRequired[
        components_listinvestigationsresponse.ListInvestigationsResponseTypedDict
    ]
    r"""OK"""
    status: NotRequired[components_status.StatusTypedDict]
    r"""INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details."""


class InvestigationServiceListInvestigationsResponse(BaseModel):
    next: Callable[[], Optional[InvestigationServiceListInvestigationsResponse]]

    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    list_investigations_response: Optional[
        components_listinvestigationsresponse.ListInvestigationsResponse
    ] = None
    r"""OK"""

    status: Optional[components_status.Status] = None
    r"""INVALID_ARGUMENT: The request is not valid, additional information may be present in the BadRequest details."""
