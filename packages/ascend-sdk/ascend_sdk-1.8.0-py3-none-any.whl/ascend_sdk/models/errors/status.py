"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from ascend_sdk.models.components import any as components_any
from ascend_sdk.models.errors import SDKBaseError
from ascend_sdk.types import BaseModel
import httpx
from typing import List, Optional


class StatusData(BaseModel):
    code: Optional[int] = None
    r"""The code field contains an enum value of google.rpc.Code."""

    details: Optional[List[components_any.AnyT]] = None
    r"""The details field contains one or more technical error details."""

    message: Optional[str] = None
    r"""The message field contains human-friendly messages about the error."""


class Status(SDKBaseError):
    r"""The status message serves as the general-purpose service error message. Each status message includes a gRPC error code, error message, and error details."""

    data: StatusData

    def __init__(
        self, data: StatusData, raw_response: httpx.Response, body: Optional[str] = None
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        self.data = data
