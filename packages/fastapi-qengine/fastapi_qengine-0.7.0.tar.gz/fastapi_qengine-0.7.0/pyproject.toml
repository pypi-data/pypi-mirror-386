[project]
name = "fastapi-qengine"
version = "0.7.0"
description = "fastapi-qengine is an advanced query engine for FastAPI, inspired by Loopback 4's filtering system. It allows building complex queries directly from URLs with a flexible syntax."
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Uriel Curiel", email = "kratoz.00616@gmail.com" }]

urls = { Repository = "https://github.com/urielcuriel/fastapi-qengine" }

classifiers = [
    "Framework :: FastAPI",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["fastapi", "beanie", "mongodb", "query", "filter", "engine"]
dependencies = []

[project.optional-dependencies]
dev = [
    "fastapi",
    "beanie",
    "pydantic>=2.11.3",
    "uvicorn[standard]",
    "fastapi-pagination",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx",                  # Para probar los endpoints
    "pymongo>=4.0.0",         # MongoDB driver
    "pyrefly",
    "ruff",
    "basedpyright>=1.31.7",
]

test = ["pytest>=7.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "httpx"]

docs = ["pydoc-markdown>=4.8.2", "pydoc-markdown-nuxt==0.2.1"]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.package-data]
"fastapi_qengine" = ["py.typed"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=fastapi_qengine",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["fastapi_qengine"]
omit = ["tests/*", "example.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
