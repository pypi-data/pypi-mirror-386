{
  "name": "GetMemberNotifications",
  "fully_qualified_name": "TrelloApi.GetMemberNotifications@2.0.0",
  "description": "Retrieve a Trello member's notifications.\n\nUse this tool to fetch notifications for a specific Trello member by their ID. Call this when you need to access recent alerts or updates for a member on Trello.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "member_identifier",
        "required": true,
        "description": "The ID or username of the Trello member to fetch notifications for.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "notification_filter",
        "required": false,
        "description": "Specify the type of notifications to retrieve: all, createCard, commentCard, etc.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "notification_read_status_filter",
        "required": false,
        "description": "Specify read status to filter notifications: `all`, `read`, or `unread`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `read`, `unread`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "read_filter"
      },
      {
        "name": "notification_fields",
        "required": false,
        "description": "Specify `all` or a comma-separated list of notification fields to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "notification_limit",
        "required": false,
        "description": "The maximum number of notifications to retrieve, capped at 1000.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Max 1000"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "page_number",
        "required": false,
        "description": "The page number for pagination. Maximum value is 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Max 100"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "notification_id_before",
        "required": false,
        "description": "Set to retrieve notifications sent before this specific notification ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A notification ID"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "before"
      },
      {
        "name": "since_notification_id",
        "required": false,
        "description": "A notification ID to start retrieving notifications from. Useful for fetching notifications after a specific point.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A notification ID"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "since"
      },
      {
        "name": "member_creator_fields",
        "required": false,
        "description": "Specify 'all' or provide a comma-separated list of member fields to include in the response.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "memberCreator_fields"
      },
      {
        "name": "include_entities",
        "required": false,
        "description": "Include entities in the member's notifications when set to true.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "entities"
      },
      {
        "name": "include_display",
        "required": false,
        "description": "Boolean to include display-related data in the response.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "display"
      },
      {
        "name": "include_member_creator_details",
        "required": false,
        "description": "A boolean to include details of the member who created the notifications. True to include, False to exclude.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "memberCreator"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-members-id-notifications'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/members/{id}/notifications",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "entities",
        "tool_parameter_name": "include_entities",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "display",
        "tool_parameter_name": "include_display",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "filter",
        "tool_parameter_name": "notification_filter",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "read_filter",
        "tool_parameter_name": "notification_read_status_filter",
        "description": "One of: `all`, `read`, `unread`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `all`, `read`, `unread`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "fields",
        "tool_parameter_name": "notification_fields",
        "description": "`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of notification [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "notification_limit",
        "description": "Max 1000",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Max 1000"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "50",
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "page_number",
        "description": "Max 100",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Max 100"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "0",
        "documentation_urls": []
      },
      {
        "name": "before",
        "tool_parameter_name": "notification_id_before",
        "description": "A notification ID",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A notification ID"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "since",
        "tool_parameter_name": "since_notification_id",
        "description": "A notification ID",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A notification ID"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "memberCreator",
        "tool_parameter_name": "include_member_creator_details",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": true,
        "documentation_urls": []
      },
      {
        "name": "memberCreator_fields",
        "tool_parameter_name": "member_creator_fields",
        "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of member [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "avatarHash,fullName,initials,username",
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "member_identifier",
        "description": "The ID or username of the member",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
