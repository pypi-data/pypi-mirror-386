{
  "name": "GetBoardMemberships",
  "fully_qualified_name": "TrelloApi.GetBoardMemberships@2.0.0",
  "description": "Retrieve user membership details for a Trello board.\n\nUse this tool to get detailed information about the memberships users have on a specific Trello board. This is helpful for understanding who has access and what roles they have on the board.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "board_id",
        "required": true,
        "description": "The unique identifier for the Trello board to retrieve membership details.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the board"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "membership_filter",
        "required": false,
        "description": "Specifies the type of memberships to retrieve: `admins`, `all`, `none`, or `normal`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "admins",
            "all",
            "none",
            "normal"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of `admins`, `all`, `none`, `normal`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "member_fields_to_show",
        "required": false,
        "description": "Specify which fields to display if 'member' is set to true. Valid values are fields from the nested member resource.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_fields"
      },
      {
        "name": "include_activity",
        "required": false,
        "description": "Set to true to include activity data for premium organizations only.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Works for premium organizations only."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "activity"
      },
      {
        "name": "show_org_member_type",
        "required": false,
        "description": "Set to true to show the type of member (e.g., 'admin') a user is to the organization.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "orgMemberType"
      },
      {
        "name": "include_member_object",
        "required": false,
        "description": "Set to true to include a nested member object in the response.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-boards-id-memberships'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/boards/{id}/memberships",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "filter",
        "tool_parameter_name": "membership_filter",
        "description": "One of `admins`, `all`, `none`, `normal`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "admins",
            "all",
            "none",
            "normal"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "One of `admins`, `all`, `none`, `normal`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "activity",
        "tool_parameter_name": "include_activity",
        "description": "Works for premium organizations only.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Works for premium organizations only."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "orgMemberType",
        "tool_parameter_name": "show_org_member_type",
        "description": "Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Shows the type of member to the org the user is. For instance, an org admin will have a `orgMemberType` of `admin`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "member",
        "tool_parameter_name": "include_member_object",
        "description": "Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/).",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Determines whether to include a [nested member object](/cloud/trello/guides/rest-api/nested-resources/)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "member_fields",
        "tool_parameter_name": "member_fields_to_show",
        "description": "Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Fields to show if `member=true`. Valid values: [nested member resource fields](/cloud/trello/guides/rest-api/nested-resources/)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "board_id",
        "description": "The ID of the board",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the board"
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
