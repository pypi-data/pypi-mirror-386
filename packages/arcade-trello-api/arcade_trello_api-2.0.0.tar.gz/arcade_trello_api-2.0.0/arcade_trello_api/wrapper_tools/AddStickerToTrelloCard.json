{
  "name": "AddStickerToTrelloCard",
  "fully_qualified_name": "TrelloApi.AddStickerToTrelloCard@2.0.0",
  "description": "Add a sticker to a specific Trello card.\n\nUse this tool to attach a sticker to a Trello card by specifying the card's ID. Ideal for organizing and visually enhancing your Trello boards.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "sticker_identifier",
        "required": true,
        "description": "Specify the sticker ID for custom stickers or use default string identifiers like 'taco-cool' for default stickers.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "image"
      },
      {
        "name": "sticker_top_position",
        "required": true,
        "description": "Specify the vertical position of the sticker on the card, ranging from -60 to 100.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The top position of the sticker, from -60 to 100"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "top"
      },
      {
        "name": "sticker_left_position",
        "required": true,
        "description": "The left position of the sticker. Acceptable values range from -60 to 100.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The left position of the sticker, from -60 to 100"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "left"
      },
      {
        "name": "sticker_z_index",
        "required": true,
        "description": "Specify the z-index of the sticker to determine overlay order. Use integers to set layer depth.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The z-index of the sticker"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "zIndex"
      },
      {
        "name": "card_id",
        "required": true,
        "description": "The unique identifier of the Trello card to which the sticker will be added.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the Card"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "sticker_rotation",
        "required": false,
        "description": "The rotation angle of the sticker in degrees, allowing for visual adjustment.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The rotation of the sticker"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "rotate"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'post-cards-id-stickers'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/cards/{id}/stickers",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "image",
        "tool_parameter_name": "sticker_identifier",
        "description": "For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For custom stickers, the id of the sticker. For default stickers, the string identifier (like 'taco-cool', see below)"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "top",
        "tool_parameter_name": "sticker_top_position",
        "description": "The top position of the sticker, from -60 to 100",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The top position of the sticker, from -60 to 100"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "left",
        "tool_parameter_name": "sticker_left_position",
        "description": "The left position of the sticker, from -60 to 100",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The left position of the sticker, from -60 to 100"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "zIndex",
        "tool_parameter_name": "sticker_z_index",
        "description": "The z-index of the sticker",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The z-index of the sticker"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "rotate",
        "tool_parameter_name": "sticker_rotation",
        "description": "The rotation of the sticker",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The rotation of the sticker"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 0,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "card_id",
        "description": "The ID of the Card",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the Card"
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
