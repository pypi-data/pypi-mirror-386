_version: 1.0.x
_class: open_ticket_ai.base.ticket_system_pipes.UpdateTicketPipe
_extends: open_ticket_ai.core.pipeline.ConfigurablePipe

_title: Update Ticket
_summary: Updates an existing ticket in the connected system with new data.
_category: ticket-system

_inputs:
  placement: flat
  alongside: [ id, use ]
  params:
    ticket_system_id: Target ticket system ID from registry
    ticket_id: Target ticket ID
    updated_ticket: Ticket data to update (UnifiedTicket object or dict)
_defaults: { }

_output:
  state_enum: [ ok, skipped, failed ]
  description: Pipe returns a state and optional payload.
  payload_schema_ref: OpenTicketAI.Pipes.UpdateTicket.Result
  examples:
    ok:
      state: ok
      payload:
        ticket_id: 12345
        updated_fields: [ "subject", "priority" ]
    skipped:
      state: skipped
      payload:
        reason: no_changes_needed
    failed:
      state: failed
      error: ticket_not_found

_errors:
  fail:
    - code: ticket_not_found
      when: Ticket ID does not exist
    - code: backend_unauthorized
      when: Adapter cannot authenticate
    - code: update_failed
      when: Backend rejected the update operation
  break:
    - code: config_invalid
      when: Required config missing or invalid type
    - code: invalid_ticket_data
      when: Updated ticket data is malformed
  continue:
    - code: no_changes
      when: No actual changes to apply â†’ pipe returns skipped

_engine_support:
  on_failure: false
  on_success: false

_examples:
  minimal: |
    - id: update_ticket
      use: open_ticket_ai.base.ticket_system_pipes.UpdateTicketPipe
      ticket_system_id: "otobo_znuny"
      ticket_id: "{{ context.ticket.id }}"
      updated_ticket:
        subject: "Updated subject"

  full: |
    - id: update_ticket_priority
      use: open_ticket_ai.base.ticket_system_pipes.UpdateTicketPipe
      ticket_system_id: "otobo_znuny"
      ticket_id: "{{ context.ticket.id }}"
      updated_ticket:
        subject: "{{ context.updated_subject }}"
        priority: "high"
        queue: "L2_Support"

  large: |
    - id: update_ticket_classification
      use: open_ticket_ai.base.ticket_system_pipes.UpdateTicketPipe
      ticket_system_id: "otobo_znuny"
      ticket_id: "{{ context.ticket.id }}"
      updated_ticket:
        subject: "CLASSIFIED: {{ context.classification.category }}"
        priority: "{{ context.classification.priority }}"
        queue: "{{ context.classification.queue }}"
        custom_fields:
          classification_confidence: "{{ context.classification.confidence }}"
          auto_classified: true
