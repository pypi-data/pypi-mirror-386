[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "britekit"
dynamic = ["version"]
description = 'Core functions for bioacoustic recognizers.'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Jan Huus", email = "jhuus1@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "click>=8.1,<8.3",
  "numpy>=2.0,<2.4",
  "onnx>=1.18,<2.0",
  "pandas>=2.0,<2.3",
  "pyinaturalist>=0.20,<1.0",
  "soundfile>=0.13,<1.0",
  "torch>=2.5,<2.9",
  "torchaudio>=2.5,<2.9",
  "librosa>=0.10,<2.0",
  "lightning>=2.5,<2.6",
  "matplotlib>=3.8,<3.11",
  "omegaconf>=2.3,<2.4",
  "pytorch_lightning>=2.5,<2.6",
  "scipy>=1.13,<2.0",
  "tensorboard>=2.19,<3.0",
  "timm>=1.0.17,<2.0",
  "yt-dlp>=2025.6.25",
]

[project.scripts]
britekit = "britekit.cli:cli"

[project.urls]
Documentation = "https://github.com/jhuus/BriteKit#readme"
Issues = "https://github.com/jhuus/BriteKit/issues"
Source = "https://github.com/jhuus/BriteKit"

[tool.hatch.version]
path = "src/britekit/__about__.py"

[tool.hatch.envs.dev]
dependencies = [
  "pytest>=8.3.5",
  "black>=25.0.0",
  "ruff>=0.11.12",
  "mypy>=1.0.0",
  "twine>=6.1.0",
]

[tool.hatch.envs.dev.scripts]
test = "pytest {args:tests}"
check = "mypy --install-types --non-interactive {args:src/britekit tests}"

[tool.hatch.build.targets.wheel]
packages = ["src/britekit"]

# Ensure non-Python sample assets are included in the wheel so
# importlib.resources.files("britekit.install") can access them.
[tool.hatch.build.targets.wheel.force-include]
"install" = "britekit/install"
"src/britekit/__about__.py" = "britekit/__about__.py"
"src/britekit/__init__.py" = "britekit/__init__.py"
"src/britekit/commands/__init__.py" = "britekit/commands/__init__.py"
"src/britekit/core/__init__.py" = "britekit/core/__init__.py"
"src/britekit/commands/_analyze.py" = "britekit/commands/_analyze.py"
"src/britekit/commands/_audioset.py" = "britekit/commands/_audioset.py"
"src/britekit/commands/_calibrate.py" = "britekit/commands/_calibrate.py"
"src/britekit/commands/_ckpt_ops.py" = "britekit/commands/_ckpt_ops.py"
"src/britekit/commands/_db_add.py" = "britekit/commands/_db_add.py"
"src/britekit/commands/_db_delete.py" = "britekit/commands/_db_delete.py"
"src/britekit/commands/_embed.py" = "britekit/commands/_embed.py"
"src/britekit/commands/_ensemble.py" = "britekit/commands/_ensemble.py"
"src/britekit/commands/_extract.py" = "britekit/commands/_extract.py"
"src/britekit/commands/_find_dup.py" = "britekit/commands/_find_dup.py"
"src/britekit/commands/_inat.py" = "britekit/commands/_inat.py"
"src/britekit/commands/_init.py" = "britekit/commands/_init.py"
"src/britekit/commands/_pickle.py" = "britekit/commands/_pickle.py"
"src/britekit/commands/_plot.py" = "britekit/commands/_plot.py"
"src/britekit/commands/_reextract.py" = "britekit/commands/_reextract.py"
"src/britekit/commands/_reports.py" = "britekit/commands/_reports.py"
"src/britekit/commands/_search.py" = "britekit/commands/_search.py"
"src/britekit/commands/_train.py" = "britekit/commands/_train.py"
"src/britekit/commands/_tune.py" = "britekit/commands/_tune.py"
"src/britekit/commands/_wav2mp3.py" = "britekit/commands/_wav2mp3.py"
"src/britekit/commands/_xeno.py" = "britekit/commands/_xeno.py"
"src/britekit/commands/_youtube.py" = "britekit/commands/_youtube.py"

[tool.hatch.build.targets.sdist]
only-include = [
  "src/britekit",
  "install",
]

[tool.hatch.build.targets.sdist.force-include]
"install" = "britekit/install"
"src/britekit/__about__.py" = "britekit/__about__.py"
"src/britekit/__init__.py" = "britekit/__init__.py"
"src/britekit/commands/__init__.py" = "britekit/commands/__init__.py"
"src/britekit/core/__init__.py" = "britekit/core/__init__.py"
"src/britekit/commands/_analyze.py" = "britekit/commands/_analyze.py"
"src/britekit/commands/_audioset.py" = "britekit/commands/_audioset.py"
"src/britekit/commands/_calibrate.py" = "britekit/commands/_calibrate.py"
"src/britekit/commands/_ckpt_ops.py" = "britekit/commands/_ckpt_ops.py"
"src/britekit/commands/_db_add.py" = "britekit/commands/_db_add.py"
"src/britekit/commands/_db_delete.py" = "britekit/commands/_db_delete.py"
"src/britekit/commands/_embed.py" = "britekit/commands/_embed.py"
"src/britekit/commands/_ensemble.py" = "britekit/commands/_ensemble.py"
"src/britekit/commands/_extract.py" = "britekit/commands/_extract.py"
"src/britekit/commands/_find_dup.py" = "britekit/commands/_find_dup.py"
"src/britekit/commands/_inat.py" = "britekit/commands/_inat.py"
"src/britekit/commands/_init.py" = "britekit/commands/_init.py"
"src/britekit/commands/_pickle.py" = "britekit/commands/_pickle.py"
"src/britekit/commands/_plot.py" = "britekit/commands/_plot.py"
"src/britekit/commands/_reextract.py" = "britekit/commands/_reextract.py"
"src/britekit/commands/_reports.py" = "britekit/commands/_reports.py"
"src/britekit/commands/_search.py" = "britekit/commands/_search.py"
"src/britekit/commands/_train.py" = "britekit/commands/_train.py"
"src/britekit/commands/_tune.py" = "britekit/commands/_tune.py"
"src/britekit/commands/_wav2mp3.py" = "britekit/commands/_wav2mp3.py"
"src/britekit/commands/_xeno.py" = "britekit/commands/_xeno.py"
"src/britekit/commands/_youtube.py" = "britekit/commands/_youtube.py"


[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/britekit tests}"

[tool.coverage.run]
source_pkgs = ["britekit", "tests"]
branch = true
parallel = true
omit = [
  "src/britekit/__about__.py",
]

[tool.coverage.paths]
britekit = ["src/britekit", "*/britekit/src/britekit"]
tests = ["tests", "*/britekit/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
