[tool.poetry]
name = "pyramid-mcp"
version = "0.0.27"
description = "Model Context Protocol (MCP) integration for Pyramid web framework"
authors = ["pyramid-mcp contributors"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/cartaorobbin/pyramid-mcp"
repository = "https://github.com/cartaorobbin/pyramid-mcp"
documentation = "https://github.com/cartaorobbin/pyramid-mcp"
keywords = ["pyramid", "mcp", "model-context-protocol", "web", "framework", "ai", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Pyramid",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: OS Independent",
]
packages = [{include = "pyramid_mcp"}]

[tool.poetry.scripts]
pstdio = "pyramid_mcp.cli:pstdio"

[tool.poetry.dependencies]
python = "^3.10"
pyramid = "^2.0"
marshmallow = "^3.22.0"
click = "^8.1.0"
cornice = "^6.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.0"
webtest = "^3.0.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
httpx = "^0.28.1"
pyjwt = "^2.10.1"
tox = "^4.0.0"
pyramid-tm = "^2.6"
openai-agents = "^0.2.3"
logassert = "^8.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--cov=pyramid_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=40",
    "--strict-markers",
    "--strict-config",
    "-v"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["pyramid_mcp"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pyramid_mcp"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "pyramid.*"
ignore_missing_imports = true


