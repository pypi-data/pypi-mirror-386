// q3dscatter.sip generated by MetaSIP
//
// This file is part of the QtDataVisualization Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-DataVisualization.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class Q3DScatter : public QAbstract3DGraph
{
%TypeHeaderCode
#include <q3dscatter.h>
%End

public:
    Q3DScatter(const QSurfaceFormat *format = 0, QWindow *parent /TransferThis/ = 0);
    virtual ~Q3DScatter();
    void addSeries(QScatter3DSeries *series /Transfer/);
    void removeSeries(QScatter3DSeries *series /TransferBack/);
    QList<QScatter3DSeries *> seriesList() const;
    void setAxisX(QValue3DAxis *axis /Transfer/);
    QValue3DAxis *axisX() const;
    void setAxisY(QValue3DAxis *axis /Transfer/);
    QValue3DAxis *axisY() const;
    void setAxisZ(QValue3DAxis *axis /Transfer/);
    QValue3DAxis *axisZ() const;
    void addAxis(QValue3DAxis *axis /Transfer/);
    void releaseAxis(QValue3DAxis *axis /TransferBack/);
    QList<QValue3DAxis *> axes() const;
    QScatter3DSeries *selectedSeries() const;

signals:
    void axisXChanged(QValue3DAxis *axis);
    void axisYChanged(QValue3DAxis *axis);
    void axisZChanged(QValue3DAxis *axis);
    void selectedSeriesChanged(QScatter3DSeries *series);
};
