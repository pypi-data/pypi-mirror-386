// qbar3dseries.sip generated by MetaSIP
//
// This file is part of the QtDataVisualization Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-DataVisualization.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QBar3DSeries : public QAbstract3DSeries
{
%TypeHeaderCode
#include <qbar3dseries.h>
%End

public:
    QBar3DSeries(QBarDataProxy *dataProxy /Transfer/, QObject *parent /TransferThis/ = 0);
    explicit QBar3DSeries(QObject *parent /TransferThis/ = 0);
    virtual ~QBar3DSeries();
    void setDataProxy(QBarDataProxy *proxy /Transfer/);
    QBarDataProxy *dataProxy() const;
    void setSelectedBar(const QPoint &position);
    QPoint selectedBar() const;
    static QPoint invalidSelectionPosition();
    void setMeshAngle(float angle);
    float meshAngle() const;

signals:
    void dataProxyChanged(QBarDataProxy *proxy);
    void selectedBarChanged(const QPoint &position);
    void meshAngleChanged(float angle);

public:
%If (QtDataVisualization_6_3_0 -)
    QList<QColor> rowColors() const;
%End
%If (QtDataVisualization_6_3_0 -)
    void setRowColors(const QList<QColor> &colors);
%End

signals:
%If (QtDataVisualization_6_3_0 -)
    void rowColorsChanged(const QList<QColor> &rowcolors);
%End
};
