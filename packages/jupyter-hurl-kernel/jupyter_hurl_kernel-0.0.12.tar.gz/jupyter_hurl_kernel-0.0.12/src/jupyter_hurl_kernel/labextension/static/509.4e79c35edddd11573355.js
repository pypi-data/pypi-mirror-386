"use strict";(self.webpackChunkjupyterlab_hurl_extension=self.webpackChunkjupyterlab_hurl_extension||[]).push([[509],{509:(t,e,a)=>{a.r(e),a.d(e,{default:()=>s});var i=a(655),n=a(84);const r={name:"hurl",startState:()=>({inSection:null,inMultilineString:!1,lineStart:!0}),token:(t,e)=>(t.sol()&&(e.lineStart=!0,e.inSection=null),t.eatSpace()?null:t.match(/#.*/)?"comment":e.lineStart&&t.match(/%%\s*(include|verbose)\s*$/)?(e.lineStart=!1,"meta"):e.lineStart&&t.match(/\b(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)\b/)?(e.lineStart=!1,"keyword"):t.match(/https?:\/\/[^\s]+/)?"url":t.match(/\[(QueryStringParams|FormParams|MultipartFormData|Cookies|Captures|Asserts|Options|BasicAuth)\]/)?(e.inSection=t.current().slice(1,-1),"heading"):t.match(/HTTP\/[\d.]+/)?"keyword":t.match(/\b\d{3}\b/)?"number":t.match(/[A-Za-z][A-Za-z0-9-]*\s*:/)?"propertyName":t.match(/\b(status|header|cookie|body|bytes|xpath|jsonpath|regex|variable|duration|sha256|md5|count|isInteger|isFloat|isBoolean|isString|isCollection|exists|includes|startsWith|endsWith|contains|matches|equals)\b/)?"typeName":t.match(/==|!=|>=|<=|>|<|\b(not\s+)?(contains|startsWith|endsWith|matches|exists|includes|isInteger|isFloat|isBoolean|isString|isCollection)\b/)?"operator":t.match(/\b\d+\.?\d*([eE][+-]?\d+)?\b/)?"number":t.match(/\b(true|false|null)\b/)?"bool":t.match(/"([^"\\]|\\.)*"/)||t.match(/'([^'\\]|\\.)*'/)?"string":t.match(/```/)?(e.inMultilineString=!e.inMultilineString,"string"):e.inMultilineString?(t.skipToEnd(),"string"):t.match(/\$\.[a-zA-Z_][\w\[\].]*/)||t.match(/\/\/[^\s]+|\/[a-zA-Z][^\s]*/)?"variableName":t.match(/[{}\[\]()]/)?"bracket":t.match(/:/)?"operator":t.match(/,/)?null:t.match(/\{\{[^}]+\}\}/)?"variableName":t.match(/[a-zA-Z_][\w]*/)?(e.lineStart=!1,"variableName"):(t.next(),e.lineStart=!1,null))},s={id:"jupyterlab-hurl-extension:plugin",description:"Adds Hurl syntax highlighting to JupyterLab",autoStart:!0,requires:[i.IEditorLanguageRegistry],activate:(t,e)=>{console.log("JupyterLab Hurl extension is activated!");const a=n.StreamLanguage.define(r);e.addLanguage({name:"hurl",mime:"text/x-hurl",extensions:[".hurl"],support:new n.LanguageSupport(a)}),console.log("Hurl language registered with MIME type: text/x-hurl")}}}}]);