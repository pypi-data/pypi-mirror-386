datastore:
  cls: lsst.daf.butler.datastores.fileDatastore.FileDatastore
  root: <butlerRoot>/datastore
  records:
    table: file_datastore_records
  create: true
  templates:
    default: "{run:/}/{datasetType}.{component:?}/{tract:?}/{patch:?}/{day_obs|visit.day_obs|exposure.day_obs:?}/{band:?}/{subfilter:?}/{physical_filter:?}/{visit:?}/{exposure.obs_id|group:?}/{datasetType}_{component:?}_{instrument:?}_{tract:?}_{patch:?}_{band:?}_{physical_filter:?}_{visit:?}_{exposure.obs_id|group:?}_{detector.full_name:?}_{skymap:?}_{skypix:?}_{run}"
    # For raw-type files do not include band or filter in hierarchy
    # and remove band from file name
    physical_filter+detector+exposure: "{run:/}/{datasetType}.{component:?}/{day_obs|exposure.day_obs}/{exposure.obs_id}/{datasetType}_{component:?}_{instrument:?}_{physical_filter}_{exposure.obs_id}_{detector.full_name}_{run}"
  formatters: !include formatters.yaml
  composites: !include composites.yaml
  cached:
    # Explicit location of a cache directory root that can be shared
    # between multiple Butler instantiations. Without this the Butler
    # will use a new temporary location each time.
    # Instantiating a Butler from another Butler could propagate temporary
    # location. This can be left out or null used
    # to indicate a temporary directory.
    root: null
    expiry:
      # Expiry mode and associated threshold.
      # Options are:
      # - null (no expiry)
      # - disabled (no caching)
      # - files (threshold is number of files)
      # - datasets (threshold is number of datasets)
      # - size (threshold is size in bytes)
      # - age (threshold is oldest file in seconds)
      # Default for everyone is to limit the cache size to 4 datasets.
      mode: datasets
      threshold: 4
    # Default cache value. This will be the default decision if no specific
    # match is found in the "cacheable" section later on.
    default: true
    # Use a dict over list to simplify merging logic.
    cacheable:
      Exposure: true
      ExposureF: true
