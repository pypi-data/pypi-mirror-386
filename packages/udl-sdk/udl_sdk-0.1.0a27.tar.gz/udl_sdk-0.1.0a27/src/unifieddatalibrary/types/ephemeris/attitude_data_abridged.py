# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from ..._models import BaseModel

__all__ = ["AttitudeDataAbridged"]


class AttitudeDataAbridged(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    ts: datetime
    """
    Time associated with this attitude record, in ISO 8601 UTC format, with
    microsecond precision.
    """

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    as_id: Optional[str] = FieldInfo(alias="asId", default=None)
    """Unique identifier of the parent AttitudeSet associated with this record."""

    coning_angle: Optional[float] = FieldInfo(alias="coningAngle", default=None)
    """Coning angle in degrees."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    declination: Optional[float] = None
    """Precession axis declination (ECI J2000 frame) in degrees."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """
    Unique identifier of the on-orbit satellite to which this attitude record
    applies.
    """

    motion_type: Optional[str] = FieldInfo(alias="motionType", default=None)
    """Label specifying type of rotational motion of target."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier provided by the record source to indicate the target object
    of this attitude record. This may be an internal identifier and not necessarily
    map to a valid satellite number.
    """

    prec_period: Optional[float] = FieldInfo(alias="precPeriod", default=None)
    """Precession period in seconds."""

    q1: Optional[float] = None
    """Quaternion vector component 1."""

    q1_dot: Optional[float] = FieldInfo(alias="q1Dot", default=None)
    """Derivative of quaternion vector component 1."""

    q2: Optional[float] = None
    """Quaternion vector component 2."""

    q2_dot: Optional[float] = FieldInfo(alias="q2Dot", default=None)
    """Derivative of quaternion vector component 2."""

    q3: Optional[float] = None
    """Quaternion vector component 3."""

    q3_dot: Optional[float] = FieldInfo(alias="q3Dot", default=None)
    """Derivative of quaternion vector component 3."""

    qc: Optional[float] = None
    """Quaternion scalar component."""

    qc_dot: Optional[float] = FieldInfo(alias="qcDot", default=None)
    """Derivative of quaternion scalar component."""

    ra: Optional[float] = None
    """Precession axis right ascension (ECI J2000 frame) in degrees."""

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """
    Satellite/catalog number of the on-orbit object to which this attitude record
    applies.
    """

    spin_period: Optional[float] = FieldInfo(alias="spinPeriod", default=None)
    """Spin period in seconds."""

    x_angle: Optional[List[float]] = FieldInfo(alias="xAngle", default=None)
    """Array of X body rotation Euler angle(s), in degrees (-180 to 180).

    For repeated axis rotations, the array elements should be placed in the order
    that the angles apply in the sequence.
    """

    x_rate: Optional[List[float]] = FieldInfo(alias="xRate", default=None)
    """Array of X body rotation rate(s), in degrees per second.

    For repeated axis rotations, the array elements should be placed in the order
    that the rates apply in the sequence. Attitude rates are expressed in frame1
    with respect to frame2.
    """

    y_angle: Optional[List[float]] = FieldInfo(alias="yAngle", default=None)
    """Array of Y body rotation Euler angle(s), in degrees (-180 to 180).

    For repeated axis rotations, the array elements should be placed in the order
    that the angles apply in the sequence.
    """

    y_rate: Optional[List[float]] = FieldInfo(alias="yRate", default=None)
    """Array of Y body rotation rate(s), in degrees per second.

    For repeated axis rotations, the array elements should be placed in the order
    that the rates apply in the sequence. Attitude rates are expressed in frame1
    with respect to frame2.
    """

    z_angle: Optional[List[float]] = FieldInfo(alias="zAngle", default=None)
    """Array of Z body rotation Euler angle(s), in degrees (-180 to 180).

    For repeated axis rotations, the array elements should be placed in the order
    that the angles apply in the sequence.
    """

    z_rate: Optional[List[float]] = FieldInfo(alias="zRate", default=None)
    """Array of Z body rotation rate(s), in degrees per second.

    For repeated axis rotations, the array elements should be placed in the order
    that the rates apply in the sequence Attitude rates are expressed in frame1 with
    respect to frame2.
    """
