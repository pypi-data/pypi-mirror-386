# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["OnboardnavigationCreateBulkParams", "Body"]


class OnboardnavigationCreateBulkParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    start_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="startTime", format="iso8601")]]
    """Start time of the sensor data, in ISO 8601 UTC format."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    delta_pos: Annotated[Iterable[Iterable[float]], PropertyInfo(alias="deltaPos")]
    """
    Arrays of spacecraft delta position (X, Y, Z), in km, in the specified
    referenceFrame, between the onboard state and the last accepted sensor position.
    """

    end_time: Annotated[Union[str, datetime], PropertyInfo(alias="endTime", format="iso8601")]
    """End time of the sensor data, in ISO 8601 UTC format."""

    es_id: Annotated[str, PropertyInfo(alias="esId")]
    """
    Unique identifier of the parent EphemerisSet, if this data is correlated with an
    Ephemeris. If multiple nav sensor records are required, this ID may be
    associated with each of those records if each is synced to the ephemeris points.
    """

    id_state_vector: Annotated[str, PropertyInfo(alias="idStateVector")]
    """Unique identifier of the last onboard state vector."""

    mag: Iterable[Iterable[float]]
    """
    Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame,
    based on the onboard magnetometer, at each epoch.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Optional identifier provided by the data source to indicate the target object of
    this record. This may be an internal identifier and not necessarily map to a
    valid satellite number.
    """

    reference_frame: Annotated[
        Literal["J2000", "EFG/TDR", "ECR/ECEF", "TEME", "ITRF", "GCRF"], PropertyInfo(alias="referenceFrame")
    ]
    """The reference frame in which the sensor derived positions are provided.

    If the referenceFrame is null it is assumed to be J2000. Note that this frame is
    assumed to apply to all of the sensor data in this record. If onboard sensors
    process positional estimates in different frames then separate records should be
    generated.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/catalog number of the target on-orbit object."""

    star_cat_load_time: Annotated[Union[str, datetime], PropertyInfo(alias="starCatLoadTime", format="iso8601")]
    """The last load time of the current star catalog onboard this spacecraft."""

    star_cat_name: Annotated[str, PropertyInfo(alias="starCatName")]
    """The name or identifier the star catalog in use."""

    star_tracker: Annotated[Iterable[Iterable[float]], PropertyInfo(alias="starTracker")]
    """
    Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame,
    based on the onboard star tracker, at each epoch.
    """

    sun_sensor: Annotated[Iterable[Iterable[float]], PropertyInfo(alias="sunSensor")]
    """
    Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame,
    based on the onboard sun sensor, at each epoch.
    """

    ts: Annotated[SequenceNotStr[Union[str, datetime]], PropertyInfo(format="iso8601")]
    """Array of epochs of the observations, in ISO 8601 UTC format.

    The epochs are assumed to correspond to all sensor data in this record. If
    sensors do not share a common epoch then separate records should be generated.
    """
