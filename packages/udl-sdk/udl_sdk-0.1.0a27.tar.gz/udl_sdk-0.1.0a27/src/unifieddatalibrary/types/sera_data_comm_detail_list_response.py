# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SeraDataCommDetailListResponse"]


class SeraDataCommDetailListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    band: Optional[str] = None
    """Name of the band of this RF range (e.g.

    X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more
    details and descriptions of each band name.
    """

    bandwidth: Optional[float] = None
    """Comm bandwidth in Mhz."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    eirp: Optional[float] = None
    """Effective isotropic radiated power in dB."""

    est_hts_total_capacity: Optional[float] = FieldInfo(alias="estHtsTotalCapacity", default=None)
    """Comm estimated HtsTotalCapacity in Gbps."""

    est_hts_total_user_downlink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="estHtsTotalUserDownlinkBandwidthPerBeam", default=None
    )
    """Comm estimated HtsTotalUserDownlinkBandwidthPerBeam in Mhz."""

    est_hts_total_user_uplink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="estHtsTotalUserUplinkBandwidthPerBeam", default=None
    )
    """Comm estimated HtsTotalUserUplinkBandwidthPerBeam in Mhz."""

    gateway_downlink_from: Optional[float] = FieldInfo(alias="gatewayDownlinkFrom", default=None)
    """Comm gatewayDownlinkFrom in Ghz."""

    gateway_downlink_to: Optional[float] = FieldInfo(alias="gatewayDownlinkTo", default=None)
    """Comm gatewayDownlinkTo in Ghz."""

    gateway_uplink_from: Optional[float] = FieldInfo(alias="gatewayUplinkFrom", default=None)
    """Comm gatewayUplinkFrom in Ghz."""

    gateway_uplink_to: Optional[float] = FieldInfo(alias="gatewayUplinkTo", default=None)
    """Comm gatewayUplinkTo in Ghz."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Comm hostedForCompanyOrgId."""

    hts_num_user_spot_beams: Optional[int] = FieldInfo(alias="htsNumUserSpotBeams", default=None)
    """Comm htsNumUserSpotBeams."""

    hts_user_downlink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="htsUserDownlinkBandwidthPerBeam", default=None
    )
    """Comm htsUserDownlinkBandwidthPerBeam in Mhz."""

    hts_user_uplink_bandwidth_per_beam: Optional[float] = FieldInfo(alias="htsUserUplinkBandwidthPerBeam", default=None)
    """Comm htsUserUplinkBandwidthPerBeam in Mhz."""

    id_comm: Optional[str] = FieldInfo(alias="idComm", default=None)
    """UUID of the parent Comm record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Comm manufacturerOrgId."""

    num36_mhz_equivalent_transponders: Optional[int] = FieldInfo(alias="num36MhzEquivalentTransponders", default=None)
    """Comm num36MhzEquivalentTransponders."""

    num_operational_transponders: Optional[int] = FieldInfo(alias="numOperationalTransponders", default=None)
    """Comm numOperationalTransponders."""

    num_spare_transponders: Optional[int] = FieldInfo(alias="numSpareTransponders", default=None)
    """Comm numSpareTransponders."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    payload_notes: Optional[str] = FieldInfo(alias="payloadNotes", default=None)
    """Payload notes."""

    polarization: Optional[str] = None
    """Comm polarization."""

    solid_state_power_amp: Optional[float] = FieldInfo(alias="solidStatePowerAmp", default=None)
    """Solid state power amplifier, in Watts."""

    spacecraft_id: Optional[str] = FieldInfo(alias="spacecraftId", default=None)
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    trade_lease_org_id: Optional[str] = FieldInfo(alias="tradeLeaseOrgId", default=None)
    """Comm tradeLeaseOrgId."""

    traveling_wave_tube_amplifier: Optional[float] = FieldInfo(alias="travelingWaveTubeAmplifier", default=None)
    """Comm travelingWaveTubeAmplifier in Watts."""

    user_downlink_from: Optional[float] = FieldInfo(alias="userDownlinkFrom", default=None)
    """Comm userDownlinkFrom in Ghz."""

    user_downlink_to: Optional[float] = FieldInfo(alias="userDownlinkTo", default=None)
    """Comm userDownlinkTo in Ghz."""

    user_uplink_from: Optional[float] = FieldInfo(alias="userUplinkFrom", default=None)
    """Comm userUplinkFrom in Ghz."""

    user_uplink_to: Optional[float] = FieldInfo(alias="userUplinkTo", default=None)
    """Comm userUplinkTo in Ghz."""
