# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["BeamcontourAbridged"]


class BeamcontourAbridged(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_beam: str = FieldInfo(alias="idBeam")
    """ID of the beam."""

    source: str
    """Source of the data."""

    type: Literal["BORESIGHT", "CONTOUR", "SVC AREA"]
    """The type of object represented in this record (BORESIGHT, CONTOUR, SVC AREA).

    Boresight refers to the point of maximum/peak gain, and should not be confused
    with the 'aim point' of the related beam. Gain contours are regions of coverage
    referenced to the relative gain of the related beam. Service Areas are composed
    of one or more service regions, with each region being either discrete point(s)
    or a continuous contour.
    """

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    contour_idx: Optional[int] = FieldInfo(alias="contourIdx", default=None)
    """The index number of this contour. The value is required if type = CONTOUR."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """
    Time the row was created in the database, auto-populated by the system, example
    = 2018-01-01T16:00:00.123Z.
    """

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    gain: Optional[float] = None
    """The relative gain level in dB associated with this boresight or contour.

    Gain does not apply to service area records. The value is required if type =
    BORESIGHT or CONTOUR.
    """

    geography_json: Optional[str] = FieldInfo(alias="geographyJson", default=None)
    """
    Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON
    representation of the geometry/geography, of the image as projected on the
    ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST
    or PUT request that also specifies a valid 'area' or 'atext' field.
    """

    geography_ndims: Optional[int] = FieldInfo(alias="geographyNdims", default=None)
    """Number of dimensions of the geometry depicted by region."""

    geography_srid: Optional[int] = FieldInfo(alias="geographySrid", default=None)
    """Geographical spatial_ref_sys for region."""

    geography_text: Optional[str] = FieldInfo(alias="geographyText", default=None)
    """
    Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known
    Text representation of the geometry/geography, of the image as projected on the
    ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored
    if included with a POST or PUT request that also specifies a valid 'area' field.
    """

    geography_type: Optional[str] = FieldInfo(alias="geographyType", default=None)
    """Type of region as projected."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    region_name: Optional[str] = FieldInfo(alias="regionName", default=None)
    """The region name within the service area."""
