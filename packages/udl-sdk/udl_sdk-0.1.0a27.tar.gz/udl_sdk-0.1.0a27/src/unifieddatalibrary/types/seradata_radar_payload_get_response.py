# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SeradataRadarPayloadGetResponse"]


class SeradataRadarPayloadGetResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    bandwidth: Optional[float] = None
    """Radar bandwidth in mega hertz."""

    best_resolution: Optional[float] = FieldInfo(alias="bestResolution", default=None)
    """Best resolution in meters."""

    category: Optional[str] = None
    """Radar category, e.g. SAR, Surface Search, etc."""

    constellation_interferometric_capability: Optional[str] = FieldInfo(
        alias="constellationInterferometricCapability", default=None
    )
    """Constellation interferometric capability."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    duty_cycle: Optional[str] = FieldInfo(alias="dutyCycle", default=None)
    """Duty cycle."""

    field_of_regard: Optional[float] = FieldInfo(alias="fieldOfRegard", default=None)
    """Field of regard of this radar in degrees."""

    field_of_view: Optional[float] = FieldInfo(alias="fieldOfView", default=None)
    """Field of view of this radar in kilometers."""

    frequency: Optional[float] = None
    """Frequency in giga hertz."""

    frequency_band: Optional[str] = FieldInfo(alias="frequencyBand", default=None)
    """Name of the band of this RF range (e.g.

    X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more
    details and descriptions of each band name.
    """

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this payload."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this payload."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """UUID of the Sensor record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g.

    ALT (Radar Altimeter), COSI (Corea SAR Instrument), etc.
    """

    notes: Optional[str] = None
    """Payload notes."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    partner_spacecraft: Optional[str] = FieldInfo(alias="partnerSpacecraft", default=None)
    """Partner seradata-spacecraft."""

    pointing_method: Optional[str] = FieldInfo(alias="pointingMethod", default=None)
    """Point method for this radar, e.g. Spacecraft."""

    receive_polarization: Optional[str] = FieldInfo(alias="receivePolarization", default=None)
    """Receive polarization, e.g. Lin Dual, Lin vert, etc."""

    recorder_size: Optional[str] = FieldInfo(alias="recorderSize", default=None)
    """Recorder size, e.g. 256."""

    swath_width: Optional[float] = FieldInfo(alias="swathWidth", default=None)
    """Swath width in kilometers."""

    transmit_polarization: Optional[str] = FieldInfo(alias="transmitPolarization", default=None)
    """Transmit polarization, e.g. Lin Dual, Lin vert, etc."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    wave_length: Optional[float] = FieldInfo(alias="waveLength", default=None)
    """Wave length in meters."""
