# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["AirfieldSlotConsumptionCreateParams"]


class AirfieldSlotConsumptionCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_airfield_slot: Required[Annotated[str, PropertyInfo(alias="idAirfieldSlot")]]
    """
    Unique identifier of the airfield slot for which this slot consumption record is
    referencing.
    """

    num_aircraft: Required[Annotated[int, PropertyInfo(alias="numAircraft")]]
    """Number of aircraft using this slot for this time."""

    source: Required[str]
    """Source of the data."""

    start_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="startTime", format="iso8601")]]
    """The start of the slot window, in ISO 8601 UTC format."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    alt_arr_sortie_id: Annotated[str, PropertyInfo(alias="altArrSortieId")]
    """
    Alternate identifier of the sortie arriving at the slot start time provided by
    the source.
    """

    alt_dep_sortie_id: Annotated[str, PropertyInfo(alias="altDepSortieId")]
    """
    Alternate identifier of the sortie departing at the slot end time provided by
    the source.
    """

    app_comment: Annotated[str, PropertyInfo(alias="appComment")]
    """Comments from the approver."""

    app_initials: Annotated[str, PropertyInfo(alias="appInitials")]
    """Initials of the person approving the use of this slot.

    Use SYSTEM if auto-approved without human involvement.
    """

    app_org: Annotated[str, PropertyInfo(alias="appOrg")]
    """Short name of the organization approving the use of this slot."""

    call_signs: Annotated[SequenceNotStr[str], PropertyInfo(alias="callSigns")]
    """Array of call signs of the aircraft using this slot."""

    consumer: str
    """Identifying name of the aircraft using this slot.

    Names are often Prior Permission Required (PPR) numbers or other similar
    human-readable identifiers.
    """

    end_time: Annotated[Union[str, datetime], PropertyInfo(alias="endTime", format="iso8601")]
    """The end of the slot window, in ISO 8601 UTC format."""

    id_arr_sortie: Annotated[str, PropertyInfo(alias="idArrSortie")]
    """Unique identifier of the sortie arriving at the slot start time."""

    id_dep_sortie: Annotated[str, PropertyInfo(alias="idDepSortie")]
    """Unique identifier of the sortie departing at the slot end time."""

    mission_id: Annotated[str, PropertyInfo(alias="missionId")]
    """
    Mission identifier using this slot according to Mobility Air Forces (MAF)
    Encode/Decode procedures.
    """

    occ_aircraft_mds: Annotated[str, PropertyInfo(alias="occAircraftMDS")]
    """
    The aircraft Model Design Series designation of the aircraft occupying this
    slot.
    """

    occ_start_time: Annotated[Union[str, datetime], PropertyInfo(alias="occStartTime", format="iso8601")]
    """
    Time the aircraft began occupying this slot, in ISO 8601 UTC format with
    millisecond precision.
    """

    occ_tail_number: Annotated[str, PropertyInfo(alias="occTailNumber")]
    """The tail number of the aircraft occupying this slot."""

    occupied: bool
    """Flag indicating if the slot is occupied."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    req_comment: Annotated[str, PropertyInfo(alias="reqComment")]
    """Comments from the requester."""

    req_initials: Annotated[str, PropertyInfo(alias="reqInitials")]
    """Initials of the person requesting the use of this slot.

    Use SYSTEM if this request is auto-generated by an auto-planning system.
    """

    req_org: Annotated[str, PropertyInfo(alias="reqOrg")]
    """Short name of the organization requesting use of this slot."""

    res_aircraft_mds: Annotated[str, PropertyInfo(alias="resAircraftMDS")]
    """
    The aircraft Model Design Series designation of the aircraft this slot is
    reserved for.
    """

    res_mission_id: Annotated[str, PropertyInfo(alias="resMissionId")]
    """
    Mission identifier reserving this slot according to Mobility Air Forces (MAF)
    Encode/Decode procedures.
    """

    res_reason: Annotated[str, PropertyInfo(alias="resReason")]
    """The reason the slot reservation was made."""

    res_tail_number: Annotated[str, PropertyInfo(alias="resTailNumber")]
    """The tail number of the aircraft this slot is reserved for."""

    res_type: Annotated[str, PropertyInfo(alias="resType")]
    """Indicates the type of reservation (e.g.

    M for Mission, A for Aircraft, O for Other).
    """

    status: Literal["REQUESTED", "APPROVED", "DENIED", "BLOCKED", "OTHER"]
    """Current status of this slot (REQUESTED / APPROVED / DENIED / BLOCKED / OTHER)."""

    target_time: Annotated[Union[str, datetime], PropertyInfo(alias="targetTime", format="iso8601")]
    """
    The desired time for aircraft action such as landing, take off, parking, etc.,
    in ISO 8601 UTC format.
    """
