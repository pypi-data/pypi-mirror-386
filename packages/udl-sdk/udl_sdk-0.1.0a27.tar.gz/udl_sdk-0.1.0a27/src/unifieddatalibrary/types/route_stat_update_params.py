# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["RouteStatUpdateParams"]


class RouteStatUpdateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    location_end: Required[Annotated[str, PropertyInfo(alias="locationEnd")]]
    """End location of the vehicle."""

    location_start: Required[Annotated[str, PropertyInfo(alias="locationStart")]]
    """Starting location of the vehicle."""

    source: Required[str]
    """Source of the data."""

    body_id: Annotated[str, PropertyInfo(alias="id")]
    """Unique identifier of the record, auto-generated by the system."""

    avg_duration: Annotated[float, PropertyInfo(alias="avgDuration")]
    """
    Average travel duration for the indicated distance and type of vehicle in hours.
    """

    avg_speed: Annotated[float, PropertyInfo(alias="avgSpeed")]
    """Average speed during travel in the indicated unit of measurement, speedUnit."""

    data_pts_used: Annotated[int, PropertyInfo(alias="dataPtsUsed")]
    """The number of data points used in this travel duration calculation."""

    distance: float
    """
    Distance between the departure and arrival locations in the indicated unit of
    measurement, distUnit.
    """

    dist_unit: Annotated[str, PropertyInfo(alias="distUnit")]
    """The unit of measurement used for distance in this calculation."""

    first_pt: Annotated[Union[str, datetime], PropertyInfo(alias="firstPt", format="iso8601")]
    """
    Date of the first data point used in this calculation, in ISO8601 UTC format
    with millisecond precision.
    """

    ideal_desc: Annotated[str, PropertyInfo(alias="idealDesc")]
    """
    Description of the portion of travel used to estimate the value of the
    idealDuration field.
    """

    ideal_duration: Annotated[float, PropertyInfo(alias="idealDuration")]
    """
    Estimated ideal travel duration in hours for the full distance using the
    indicated vehicle type. The field "idealDesc" should be used to describe the
    ideal travel route.
    """

    id_site_end: Annotated[str, PropertyInfo(alias="idSiteEnd")]
    """Unique identifier of the Site at the route's end location.

    This ID can be used to obtain additional information on a Site using the 'get by
    ID' operation (e.g. /udl/site/{id}). For example, the Site object with idSite =
    abc would be queried as /udl/site/abc.
    """

    id_site_start: Annotated[str, PropertyInfo(alias="idSiteStart")]
    """Unique identifier of the Site at the route's starting location.

    This ID can be used to obtain additional information on a Site using the 'get by
    ID' operation (e.g. /udl/site/{id}). For example, the Site object with idSite =
    abc would be queried as /udl/site/abc.
    """

    last_pt: Annotated[Union[str, datetime], PropertyInfo(alias="lastPt", format="iso8601")]
    """
    Date of the last data point used in this calculation, in ISO8601 UTC format with
    millisecond precision.
    """

    location_type: Annotated[str, PropertyInfo(alias="locationType")]
    """Type of location used for route start and end points (e.g., ICAO, PORT, etc.)."""

    max_duration: Annotated[float, PropertyInfo(alias="maxDuration")]
    """
    Maximum travel duration for the indicated distance and type of vehicle in hours.
    """

    max_speed: Annotated[float, PropertyInfo(alias="maxSpeed")]
    """Maximum speed during travel in the indicated unit of measurement, speedUnit."""

    min_duration: Annotated[float, PropertyInfo(alias="minDuration")]
    """
    Minimum travel duration for the indicated distance and type of vehicle in hours.
    """

    min_speed: Annotated[float, PropertyInfo(alias="minSpeed")]
    """Minimum speed during travel in the indicated unit of measurement, speedUnit."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    partial_desc: Annotated[str, PropertyInfo(alias="partialDesc")]
    """
    Description of the portion of travel used to estimate the value of the
    partialDuration field.
    """

    partial_duration: Annotated[float, PropertyInfo(alias="partialDuration")]
    """
    Estimated ideal travel duration in hours for a partial distance using the
    indicated vehicle type. The field "partialDesc" should be used to specify the
    intended portion of travel.
    """

    speed_unit: Annotated[str, PropertyInfo(alias="speedUnit")]
    """The unit of measurement used for speed in this calculation."""

    time_period: Annotated[str, PropertyInfo(alias="timePeriod")]
    """The time period this data was collected."""

    vehicle_category: Annotated[str, PropertyInfo(alias="vehicleCategory")]
    """
    The vehicle category that is the subject of this calculation (e.g., AIRCRAFT,
    CAR, BOAT, etc.).
    """

    vehicle_type: Annotated[str, PropertyInfo(alias="vehicleType")]
    """
    The vehicle type that is the subject of this calculation (e.g., C-17, F-15,
    etc.).
    """
