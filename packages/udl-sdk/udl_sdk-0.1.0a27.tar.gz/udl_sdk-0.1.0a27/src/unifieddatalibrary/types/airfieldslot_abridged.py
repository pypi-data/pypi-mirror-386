# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["AirfieldslotAbridged"]


class AirfieldslotAbridged(BaseModel):
    airfield_name: str = FieldInfo(alias="airfieldName")
    """The name of the airfield where this slot is located."""

    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: str
    """Name of this slot."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    ac_slot_cat: Optional[Literal["WIDE", "NARROW", "HELO", "ALL", "OTHER"]] = FieldInfo(
        alias="acSlotCat", default=None
    )
    """
    Largest category of aircraft supported in this slot (WIDE, NARROW, HELO, ALL,
    OTHER).
    """

    alt_airfield_id: Optional[str] = FieldInfo(alias="altAirfieldId", default=None)
    """Alternate airfield identifier provided by the source."""

    capacity: Optional[int] = None
    """Number of aircraft that can fit in this slot at the same time."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    end_time: Optional[str] = FieldInfo(alias="endTime", default=None)
    """Latest zulu time this slot is available based on daily standard hours.

    Not applicable to slots with type PARKING. Abnormal hours, such as holidays,
    should be marked via the AirfieldSlotConsumption schema.
    """

    icao: Optional[str] = None
    """The International Civil Aviation Organization (ICAO) code of the airfield."""

    id_airfield: Optional[str] = FieldInfo(alias="idAirfield", default=None)
    """Unique identifier of the Airfield for which this slot information applies."""

    min_separation: Optional[int] = FieldInfo(alias="minSeparation", default=None)
    """
    Minimum time that must elapse between different aircraft leaving and entering
    this slot, in minutes.
    """

    notes: Optional[str] = None
    """Optional notes/comments for this airfield slot."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    start_time: Optional[str] = FieldInfo(alias="startTime", default=None)
    """Zulu time this slot is first available based on daily standard hours.

    Not applicable to slots with type PARKING. Abnormal hours, such as holidays,
    should be marked via the AirfieldSlotConsumption schema.
    """

    type: Optional[Literal["WORKING", "PARKING", "TAKEOFF", "LANDING", "OTHER"]] = None
    """
    Designates how this slot can be used (WORKING, PARKING, TAKEOFF, LANDING,
    OTHER).
    """
