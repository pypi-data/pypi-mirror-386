# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["EventEvolutionCreateParams"]


class EventEvolutionCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    event_id: Required[Annotated[str, PropertyInfo(alias="eventId")]]
    """User-provided unique identifier of this activity or event.

    This ID should remain the same on subsequent updates in order to associate all
    records pertaining to the activity or event.
    """

    source: Required[str]
    """Source of the data."""

    start_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="startTime", format="iso8601")]]
    """
    The actual or estimated start time of the activity or event, in ISO 8601 UTC
    format.
    """

    summary: Required[str]
    """Summary or description of the activity or event."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    agjson: str
    """
    Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON
    representation of the geometry/geography, of the image as projected on the
    ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST
    or PUT request that also specifies a valid 'area' or 'atext' field.
    """

    andims: int
    """Number of dimensions of the geometry depicted by region."""

    area: str
    """
    Optional geographical region or polygon (lat/lon pairs) of the area surrounding
    the point of interest as projected on the ground.
    """

    asrid: int
    """Geographical spatial_ref_sys for region."""

    atext: str
    """
    Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known
    Text representation of the geometry/geography, of the image as projected on the
    ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored
    if included with a POST or PUT request that also specifies a valid 'area' field.
    """

    atype: str
    """Type of region as projected on the ground."""

    category: str
    """The activity or event type associated with this record (e.g.

    BREAKUP, DIRECT FIRE, IED, LAUNCH, PROTEST, etc.). For Significant Activities,
    recommended but not constrained to, CAMEO.Manual.1.1b3 Chapter 6. Note that the
    evolution of an event may incorporate records of various types, for example, a
    LAUNCH event may evolve into a BREAKUP event.
    """

    country_code: Annotated[str, PropertyInfo(alias="countryCode")]
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDLâ€™s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    data_description: Annotated[str, PropertyInfo(alias="dataDescription")]
    """
    Optional description of the relationship between the records provided in the
    srcTyps/srcIds and the activity or event.
    """

    end_time: Annotated[Union[str, datetime], PropertyInfo(alias="endTime", format="iso8601")]
    """
    The actual or estimated start time of the activity or event, in ISO 8601 UTC
    format.
    """

    geo_admin_level1: Annotated[str, PropertyInfo(alias="geoAdminLevel1")]
    """Administrative boundaries of the first sub-national level.

    Level 1 is simply the largest demarcation under whatever demarcation criteria
    has been determined by the governing body. For example this may be the
    state/province in which a terrestrial event takes place, or with which the event
    is attributed for non-localized or non-terrestrial activity.
    """

    geo_admin_level2: Annotated[str, PropertyInfo(alias="geoAdminLevel2")]
    """Administrative boundaries of the second sub-national level.

    Level 2 is simply the second largest demarcation under whatever demarcation
    criteria has been determined by the governing body. For example this may be the
    city/district in which a terrestrial event takes place, or with which the event
    is attributed for non-localized or non-terrestrial activity.
    """

    geo_admin_level3: Annotated[str, PropertyInfo(alias="geoAdminLevel3")]
    """Administrative boundaries of the third sub-national level.

    Level 3 is simply the third largest demarcation under whatever demarcation
    criteria has been determined by the governing body.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    redact: bool
    """
    Flag indicating that this record is for the purpose of redacting one or more
    previously specified records from association with this activity or event. If
    this flag is set then all records indicated in srcTyps/srcIds should be removed
    from event association.
    """

    src_ids: Annotated[SequenceNotStr[str], PropertyInfo(alias="srcIds")]
    """
    Array of UUIDs of the UDL data records that are related to the determination of
    this activity or event. See the associated 'srcTyps' array for the specific
    types of data, positionally corresponding to the UUIDs in this array. The
    'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps
    array element for the data type of the UUID and use the appropriate API
    operation to retrieve that object.
    """

    src_typs: Annotated[SequenceNotStr[str], PropertyInfo(alias="srcTyps")]
    """
    Array of UDL record types (AIS, CONJUNCTION, DOA, ELSET, EO, ESID, GROUNDIMAGE,
    POI, MANEUVER, MTI, NOTIFICATION, RADAR, RF, SIGACT, SKYIMAGE, SV, TRACK) that
    are related to this activity or event. See the associated 'srcIds' array for the
    record UUIDs, positionally corresponding to the record types in this array. The
    'srcTyps' and 'srcIds' arrays must match in size.
    """

    status: str
    """The status of this activity or event. (ACTIVE, CONCLUDED, UNKNOWN)."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    url: SequenceNotStr[str]
    """List of URLs to before/after images of this point of interest entity."""
