# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import date, datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo
from .location_ingest_param import LocationIngestParam

__all__ = ["EntityUpdateParams", "OnOrbit"]


class EntityUpdateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: Required[str]
    """Unique entity name."""

    source: Required[str]
    """Source of the data."""

    type: Required[
        Literal[
            "AIRCRAFT",
            "BUS",
            "COMM",
            "IR",
            "LASEREMITTER",
            "NAVIGATION",
            "ONORBIT",
            "RFEMITTER",
            "SCIENTIFIC",
            "SENSOR",
            "SITE",
            "VESSEL",
        ]
    ]
    """
    The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR,
    LASEREMITTER, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).
    """

    country_code: Annotated[str, PropertyInfo(alias="countryCode")]
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDL’s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    id_entity: Annotated[str, PropertyInfo(alias="idEntity")]
    """Unique identifier of the record."""

    id_location: Annotated[str, PropertyInfo(alias="idLocation")]
    """Unique identifier of the entity location, if terrestrial/fixed."""

    id_on_orbit: Annotated[str, PropertyInfo(alias="idOnOrbit")]
    """Onorbit identifier if this entity is part of an on-orbit object.

    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites.
    """

    id_operating_unit: Annotated[str, PropertyInfo(alias="idOperatingUnit")]
    """Unique identifier of the associated operating unit object."""

    location: LocationIngestParam
    """
    Model representation of a location, which is a specific fixed point on the earth
    and is used to denote the locations of fixed sensors, operating units, etc.
    """

    on_orbit: Annotated[OnOrbit, PropertyInfo(alias="onOrbit")]
    """Model object representing on-orbit objects or satellites in the system."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    owner_type: Annotated[
        Literal["Commercial", "Government", "Academic", "Consortium", "Other"], PropertyInfo(alias="ownerType")
    ]
    """Type of organization which owns this entity (e.g.

    Commercial, Government, Academic, Consortium, etc).
    """

    taskable: bool
    """Boolean indicating if this entity is taskable."""

    urls: SequenceNotStr[str]
    """List of URLs to additional details/documents for this entity."""


class OnOrbit(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    sat_no: Required[Annotated[int, PropertyInfo(alias="satNo")]]
    """Satellite/Catalog number of the target on-orbit object."""

    source: Required[str]
    """Source of the data."""

    alt_name: Annotated[str, PropertyInfo(alias="altName")]
    """Alternate name of the on-orbit object."""

    category: Literal[
        "Unknown",
        "On-Orbit",
        "Decayed",
        "Cataloged Without State",
        "Launch Nominal",
        "Analyst Satellite",
        "Cislunar",
        "Lunar",
        "Hyperbolic",
        "Heliocentric",
        "Interplanetary",
        "Lagrangian",
        "Docked",
    ]
    """Category of the on-orbit object.

    (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst
    Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary,
    Lagrangian, Docked).
    """

    common_name: Annotated[str, PropertyInfo(alias="commonName")]
    """Common name of the on-orbit object."""

    constellation: str
    """Constellation to which this satellite belongs."""

    country_code: Annotated[str, PropertyInfo(alias="countryCode")]
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDL’s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    decay_date: Annotated[Union[str, datetime], PropertyInfo(alias="decayDate", format="iso8601")]
    """Date of decay."""

    id_on_orbit: Annotated[str, PropertyInfo(alias="idOnOrbit")]
    """
    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites,
    auto-generated by the system.
    """

    intl_des: Annotated[str, PropertyInfo(alias="intlDes")]
    """
    International Designator, typically of the format YYYYLLLAAA, where YYYY is the
    launch year, LLL is the sequential launch number of that year, and AAA is an
    optional launch piece designator for the launch.
    """

    launch_date: Annotated[Union[str, date], PropertyInfo(alias="launchDate", format="iso8601")]
    """Date of launch."""

    launch_site_id: Annotated[str, PropertyInfo(alias="launchSiteId")]
    """Id of the associated launchSite entity."""

    lifetime_years: Annotated[int, PropertyInfo(alias="lifetimeYears")]
    """Estimated lifetime of the on-orbit payload, if known."""

    mission_number: Annotated[str, PropertyInfo(alias="missionNumber")]
    """Mission number of the on-orbit object."""

    object_type: Annotated[
        Literal["ROCKET BODY", "DEBRIS", "PAYLOAD", "PLATFORM", "MANNED", "UNKNOWN"], PropertyInfo(alias="objectType")
    ]
    """
    Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED,
    UNKNOWN.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """
