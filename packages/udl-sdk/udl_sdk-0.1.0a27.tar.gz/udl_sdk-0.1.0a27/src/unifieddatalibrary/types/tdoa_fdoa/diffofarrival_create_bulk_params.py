# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from ..._types import SequenceNotStr
from ..._utils import PropertyInfo

__all__ = ["DiffofarrivalCreateBulkParams", "Body"]


class DiffofarrivalCreateBulkParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    ob_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="obTime", format="iso8601")]]
    """Ob detection time in ISO 8601 UTC with microsecond precision."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    bandwidth: float
    """Bandwidth of the signal in Hz."""

    collection_mode: Annotated[str, PropertyInfo(alias="collectionMode")]
    """Collection mode (e.g.

    SURVEY, SPOT_SEARCH, NEIGHBORHOOD_WATCH, DIRECTED_SEARCH, MANUAL, etc).
    """

    delta_range: Annotated[float, PropertyInfo(alias="deltaRange")]
    """Delta range, in km. Delta range calculation convention is (sensor2 - sensor1)."""

    delta_range_rate: Annotated[float, PropertyInfo(alias="deltaRangeRate")]
    """Delta range rate, in km/sec.

    Delta range rate calculation convention is (sensor2 - sensor1).
    """

    delta_range_rate_unc: Annotated[float, PropertyInfo(alias="deltaRangeRateUnc")]
    """One sigma uncertainty in the delta range rate, in km/sec."""

    delta_range_unc: Annotated[float, PropertyInfo(alias="deltaRangeUnc")]
    """One sigma uncertainty in delta range, in km."""

    descriptor: str
    """Optional source-provided and searchable metadata or descriptor of the data."""

    fdoa: float
    """Frequency difference of arrival of the center frequency signal, in Hz.

    FDOA calculation convention is (sensor2 - sensor1).
    """

    fdoa_unc: Annotated[float, PropertyInfo(alias="fdoaUnc")]
    """
    One sigma uncertainty in frequency difference of arrival of the center frequency
    signal, in Hz.
    """

    frequency: float
    """Center frequency of the collect in Hz."""

    id_sensor1: Annotated[str, PropertyInfo(alias="idSensor1")]
    """Sensor ID of the primary/1st sensor used for this measurement."""

    id_sensor2: Annotated[str, PropertyInfo(alias="idSensor2")]
    """Sensor ID of the secondary/2nd sensor used for this measurement."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Optional identifier provided by observation source to indicate the target
    onorbit object of this observation. This may be an internal identifier and not
    necessarily a valid satellite number.
    """

    orig_sensor_id1: Annotated[str, PropertyInfo(alias="origSensorId1")]
    """
    Optional identifier provided by DOA source to indicate the primary/1st sensor
    identifier used for this measurement. This may be an internal identifier and not
    necessarily a valid sensor ID.
    """

    orig_sensor_id2: Annotated[str, PropertyInfo(alias="origSensorId2")]
    """
    Optional identifier provided by DOA source to indicate the secondary/2nd sensor
    identifier used for this this observation. This may be an internal identifier
    and not necessarily a valid sensor ID.
    """

    raw_file_uri: Annotated[str, PropertyInfo(alias="rawFileURI")]
    """
    Optional URI location in the document repository of the raw file parsed by the
    system to produce this record. To download the raw file, prepend
    https://udl-hostname/scs/download?id= to this value.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Catalog number of the target on-orbit object."""

    sen2alt: float
    """Sensor 2 altitude at obTime (if mobile/onorbit) in km.

    If null, can be obtained from sensor info.
    """

    sen2lat: float
    """Sensor 2 WGS84 latitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info.
    """

    sen2lon: float
    """Sensor 2 WGS84 longitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info.
    """

    senalt: float
    """Sensor altitude at obTime (if mobile/onorbit) in km.

    If null, can be obtained from sensor info.
    """

    senlat: float
    """Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info. -90 to 90 degrees (negative values
    south of equator).
    """

    senlon: float
    """Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info. -180 to 180 degrees (negative values
    west of Prime Meridian).
    """

    sensor1_delay: Annotated[float, PropertyInfo(alias="sensor1Delay")]
    """The signal arrival delay relative to sensor 1 in seconds."""

    sensor2_delay: Annotated[float, PropertyInfo(alias="sensor2Delay")]
    """The signal arrival delay relative to sensor 2 in seconds."""

    snr: float
    """Signal to noise ratio, in dB."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    task_id: Annotated[str, PropertyInfo(alias="taskId")]
    """
    Optional identifier to indicate the specific tasking which produced this
    observation.
    """

    tdoa: float
    """Time difference of arrival of the center frequency signal, in seconds.

    TDOA calculation convention is (sensor2 - sensor1).
    """

    tdoa_unc: Annotated[float, PropertyInfo(alias="tdoaUnc")]
    """
    One sigma uncertainty in time difference of arrival of the center frequency
    signal, in seconds.
    """

    transaction_id: Annotated[str, PropertyInfo(alias="transactionId")]
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    uct: bool
    """
    Boolean indicating this observation is part of an uncorrelated track or was
    unable to be correlated to a known object. This flag should only be set to true
    by data providers after an attempt to correlate to an on-orbit object was made
    and failed. If unable to correlate, the 'origObjectId' field may be populated
    with an internal data provider specific identifier.
    """
