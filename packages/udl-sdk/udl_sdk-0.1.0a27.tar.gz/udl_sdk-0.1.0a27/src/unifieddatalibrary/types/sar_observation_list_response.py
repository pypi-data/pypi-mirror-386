# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SarObservationListResponse"]


class SarObservationListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    collection_end: datetime = FieldInfo(alias="collectionEnd")
    """Collection end time in ISO 8601 UTC format with microsecond precision."""

    collection_start: datetime = FieldInfo(alias="collectionStart")
    """Collection start time in ISO 8601 UTC format with microsecond precision."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    sar_mode: str = FieldInfo(alias="sarMode")
    """Collection mode setting for this collection (e.g.

    AREA, SPOTLIGHT, STRIP, etc.).
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    agjson: Optional[str] = None
    """
    Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON
    representation of the geometry/geography, of the image as projected on the
    ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST
    or PUT request that also specifies a valid 'area' or 'atext' field.
    """

    andims: Optional[int] = None
    """Number of dimensions of the geometry depicted by region."""

    asrid: Optional[int] = None
    """Geographical spatial_ref_sys for region."""

    atext: Optional[str] = None
    """
    Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known
    Text representation of the geometry/geography, of the image as projected on the
    ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored
    if included with a POST or PUT request that also specifies a valid 'area' field.
    """

    atype: Optional[str] = None
    """Type of region as projected on the ground (POLYGON, POINT, LINE)."""

    azimuth_angle: Optional[float] = FieldInfo(alias="azimuthAngle", default=None)
    """
    The azimuth angle, in degrees, of the SAR satellite nadir subpoint measured
    clockwise from true north at the subpoint.
    """

    center_time: Optional[datetime] = FieldInfo(alias="centerTime", default=None)
    """
    The datetime at the center point of the collection in ISO 8601 UTC format with
    microsecond precision.
    """

    collection_id: Optional[str] = FieldInfo(alias="collectionId", default=None)
    """
    Optional identifier to indicate the specific collection tasking which produced
    this observation.
    """

    continuous_spot_angle: Optional[float] = FieldInfo(alias="continuousSpotAngle", default=None)
    """Required sweep angle for the continuous spot scene in degrees."""

    coord_sys: Optional[str] = FieldInfo(alias="coordSys", default=None)
    """
    The coordinate system used for the sensor velocity and target position vectors
    for the collection.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    detection_end: Optional[datetime] = FieldInfo(alias="detectionEnd", default=None)
    """The detection end time in ISO 8601 UTC format, with microsecond precision."""

    detection_id: Optional[str] = FieldInfo(alias="detectionId", default=None)
    """
    Identifier of the specific detection within a collection which produced this
    observation.
    """

    detection_start: Optional[datetime] = FieldInfo(alias="detectionStart", default=None)
    """The detection start time in ISO 8601 UTC format, with microsecond precision."""

    dwell_time: Optional[float] = FieldInfo(alias="dwellTime", default=None)
    """The duration, in seconds, of this detection."""

    external_id: Optional[str] = FieldInfo(alias="externalId", default=None)
    """Optional ID from external systems.

    This field has no meaning within UDL and is provided as a convenience for
    systems that require tracking of an internal system generated ID.
    """

    far_range: Optional[float] = FieldInfo(alias="farRange", default=None)
    """
    Specifies the farthest range, in kilometers, from the flight path to target
    during the collection.
    """

    graze_angle: Optional[float] = FieldInfo(alias="grazeAngle", default=None)
    """The graze angle (also referred to as look angle) for the collection in degrees."""

    ground_resolution_projection: Optional[float] = FieldInfo(alias="groundResolutionProjection", default=None)
    """
    Distance between independent measurements, representing the physical dimension
    that represents a pixel of the image.
    """

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """
    Unique identifier of the spacecraft hosting the sensor associated with this
    collection.
    """

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """Unique identifier of the reporting sensor."""

    incidence_angle: Optional[float] = FieldInfo(alias="incidenceAngle", default=None)
    """The center incidence angle in degrees."""

    looks_azimuth: Optional[int] = FieldInfo(alias="looksAzimuth", default=None)
    """The number of looks in the azimuth direction."""

    looks_range: Optional[int] = FieldInfo(alias="looksRange", default=None)
    """The number of looks in the range direction."""

    multilook_number: Optional[float] = FieldInfo(alias="multilookNumber", default=None)
    """
    Averages the input synthetic aperture radar (SAR) data by looks in range and
    azimuth to approximate square pixels, mitigates speckle, and reduces SAR tool
    processing time.
    """

    near_range: Optional[float] = FieldInfo(alias="nearRange", default=None)
    """
    Specifies the closest range, in kilometers, from the flight path to target
    during the collection.
    """

    ob_direction: Optional[str] = FieldInfo(alias="obDirection", default=None)
    """The antenna pointing direction (LEFT, RIGHT)."""

    operating_band: Optional[str] = FieldInfo(alias="operatingBand", default=None)
    """Name of the band containing operating frequency for the collection (e.g.

    C, E, EHF, HF, K, Ka, Ku, L, Q, S, SHF, UNK, UHF, V, VHF, VLF, W, X). See
    RFBandType for more details and descriptions of each band name.
    """

    operating_freq: Optional[float] = FieldInfo(alias="operatingFreq", default=None)
    """The operating frequency, in Mhz, for the collection."""

    orbit_state: Optional[str] = FieldInfo(alias="orbitState", default=None)
    """
    The orbital direction (ASCENDING, DESCENDING) of the platform during the
    collection.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier provided by the source to indicate the onorbit object
    hosting the sensor associated with this collection. This may be an internal
    identifier and not necessarily a valid satellite number.
    """

    orig_sensor_id: Optional[str] = FieldInfo(alias="origSensorId", default=None)
    """
    Optional identifier provided by the source to indicate the sensor for this
    collection. This may be an internal identifier and not necessarily a valid
    sensor ID.
    """

    pulse_bandwidth: Optional[float] = FieldInfo(alias="pulseBandwidth", default=None)
    """The bandwidth frequency of the pulse in Mhz."""

    pulse_duration: Optional[float] = FieldInfo(alias="pulseDuration", default=None)
    """The duration of a pulse in seconds."""

    resolution_azimuth: Optional[float] = FieldInfo(alias="resolutionAzimuth", default=None)
    """The resolution in the azimuth direction measured in meters."""

    resolution_range: Optional[float] = FieldInfo(alias="resolutionRange", default=None)
    """The resolution in the range direction measured in meters."""

    rx_polarization: Optional[str] = FieldInfo(alias="rxPolarization", default=None)
    """Receive polarization e.g.

    H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically
    Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized)
    Rotating left relative to the earth's surface, R - (Right Hand Circularly
    Polarized) Rotating right relative to the earth's surface.
    """

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """
    Satellite/Catalog number of the spacecraft hosting the sensor associated with
    this collection.
    """

    senalt: Optional[float] = None
    """Sensor altitude during collection in kilometers."""

    senlat_end: Optional[float] = FieldInfo(alias="senlatEnd", default=None)
    """
    WGS-84 sensor latitude sub-point at collect end time (collectionEnd),
    represented as -90 to 90 degrees (negative values south of equator).
    """

    senlat_start: Optional[float] = FieldInfo(alias="senlatStart", default=None)
    """
    WGS-84 sensor latitude sub-point at collect start time (collectionStart),
    represented as -90 to 90 degrees (negative values south of equator).
    """

    senlon_end: Optional[float] = FieldInfo(alias="senlonEnd", default=None)
    """
    WGS-84 sensor longitude sub-point at collect end time (collectionEnd),
    represented as -180 to 180 degrees (negative values west of Prime Meridian).
    """

    senlon_start: Optional[float] = FieldInfo(alias="senlonStart", default=None)
    """
    WGS-84 sensor longitude sub-point at collect start time (collectionStart),
    represented as -180 to 180 degrees (negative values west of Prime Meridian).
    """

    senvelx: Optional[float] = None
    """Sensor platform X-velocity during collection in kilometers/second."""

    senvely: Optional[float] = None
    """Sensor platform Y-velocity during collection in kilometers/second."""

    senvelz: Optional[float] = None
    """Sensor platform Z-velocity during collection in kilometers/second."""

    slant_range: Optional[float] = FieldInfo(alias="slantRange", default=None)
    """Slant distance from sensor to center point of imaging event in kilometers."""

    snr: Optional[float] = None
    """Signal to noise ratio, in dB."""

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    spacing_azimuth: Optional[float] = FieldInfo(alias="spacingAzimuth", default=None)
    """The pixel spacing in the azimuth direction measured in meters."""

    spacing_range: Optional[float] = FieldInfo(alias="spacingRange", default=None)
    """The pixel spacing in the range direction measured in meters."""

    squint_angle: Optional[float] = FieldInfo(alias="squintAngle", default=None)
    """The squint angle for the collection in degrees."""

    src_ids: Optional[List[str]] = FieldInfo(alias="srcIds", default=None)
    """Array of UUIDs of the UDL data records that are related to the SAR Observation.

    See the associated 'srcTyps' array for the specific types of data, positionally
    corresponding to the UUIDs in this array. The 'srcTyps' and 'srcIds' arrays must
    match in size. See the corresponding srcTyps array element for the data type of
    the UUID and use the appropriate API operation to retrieve that object (e.g.
    /udl/sarobservation/{uuid}).
    """

    src_typs: Optional[List[str]] = FieldInfo(alias="srcTyps", default=None)
    """Array of UDL record types (e.g.

    ANALYTICMAGERY, ESID, GROUNDIMAGE, NOTIFICATION, POI, SV, TRACK) that are
    related to the SAR Observation. See the associated 'srcIds' array for the record
    UUIDs, positionally corresponding to the record types in this array. The
    'srcTyps' and 'srcIds' arrays must match in size.
    """

    swath_length: Optional[float] = FieldInfo(alias="swathLength", default=None)
    """The length of the collection as projected on the ground in kilometers."""

    targetposx: Optional[float] = None
    """The collection target X position in kilometers."""

    targetposy: Optional[float] = None
    """The collection target Y position in kilometers."""

    targetposz: Optional[float] = None
    """The collection target Z position in kilometers."""

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    tx_polarization: Optional[str] = FieldInfo(alias="txPolarization", default=None)
    """Transmit polarization e.g.

    H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically
    Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized)
    Rotating left relative to the earth's surface, R - (Right Hand Circularly
    Polarized) Rotating right relative to the earth's surface.
    """
