# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal, TypeAlias

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = [
    "DeconflictsetTupleResponse",
    "DeconflictsetTupleResponseItem",
    "DeconflictsetTupleResponseItemDeconflictWindow",
]


class DeconflictsetTupleResponseItemDeconflictWindow(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    event_start_time: datetime = FieldInfo(alias="eventStartTime")
    """
    The start time of the event associated with the set of DeconflictWindow records,
    in ISO 8601 UTC format with millisecond precision.
    """

    source: str
    """Source of the data."""

    start_time: datetime = FieldInfo(alias="startTime")
    """The window start time, in ISO 8601 UTC format with millisecond precision."""

    stop_time: datetime = FieldInfo(alias="stopTime")
    """The window stop time, in ISO 8601 UTC format with millisecond precision."""

    id: Optional[str] = None
    """
    Unique identifier of the record, auto-generated by the system if not provided on
    create operations.
    """

    angle_of_entry: Optional[float] = FieldInfo(alias="angleOfEntry", default=None)
    """
    The angle at which the victim enters the target zone in reference to the emitter
    source location, in degrees.
    """

    angle_of_exit: Optional[float] = FieldInfo(alias="angleOfExit", default=None)
    """
    The angle at which the victim exits the target zone in reference to the emitter
    source location, in degrees.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    entry_coords: Optional[List[float]] = FieldInfo(alias="entryCoords", default=None)
    """
    The X, Y, Z coordinates of entry, in the reference frame specified by the parent
    DeconflictSet record, in meters.
    """

    event_type: Optional[str] = FieldInfo(alias="eventType", default=None)
    """The type of event associated with the window status."""

    exit_coords: Optional[List[float]] = FieldInfo(alias="exitCoords", default=None)
    """
    The X, Y, Z coordinates of exit, in the reference frame specified by the parent
    DeconflictSet record, in meters.
    """

    id_deconflict_set: Optional[str] = FieldInfo(alias="idDeconflictSet", default=None)
    """Unique identifier of the parent DeconflictSet, auto-generated by the system.

    The idDeconflictSet is used to identify all individual windows associated with a
    parent DeconflictSet record.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    target: Optional[str] = None
    """The target identifier.

    If the target is a satellite, the target is the satellite/catalog number of the
    target on-orbit object.
    """

    target_type: Optional[str] = FieldInfo(alias="targetType", default=None)
    """The target type associated with this window (e.g. VICTIM, EARTH, etc.)."""

    victim: Optional[str] = None
    """The victim identifier associated with this window.

    If the victim is a satellite, the victim is the satellite/catalog number of the
    target on-orbit object.
    """

    window_type: Optional[str] = FieldInfo(alias="windowType", default=None)
    """The window status indicating whether possibility of action may occur.

    In other words, OPEN is akin to a "green light," during which taking action is
    warranted or authorized (though not necessarily required) over this timeframe,
    while CLOSED represents a "red light," meaning that absolutely no action is
    warranted or authorized to take place during this timeframe.
    """


class DeconflictsetTupleResponseItem(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    event_start_time: datetime = FieldInfo(alias="eventStartTime")
    """
    The start time of the event associated with the set of DeconflictWindow records,
    in ISO 8601 UTC format with millisecond precision.
    """

    num_windows: int = FieldInfo(alias="numWindows")
    """The number of windows provided by this DeconflictSet record."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """
    Unique identifier of the record, auto-generated by the system if not provided on
    create operations.
    """

    calculation_end_time: Optional[datetime] = FieldInfo(alias="calculationEndTime", default=None)
    """
    The time at which the window calculations completed, in ISO 8601 UTC format with
    millisecond precision.
    """

    calculation_id: Optional[str] = FieldInfo(alias="calculationId", default=None)
    """
    The algorithm execution id associated with the generation of this DeconflictSet.
    """

    calculation_start_time: Optional[datetime] = FieldInfo(alias="calculationStartTime", default=None)
    """
    The time at which the window calculations started, in ISO 8601 UTC format with
    millisecond precision.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    deconflict_windows: Optional[List[DeconflictsetTupleResponseItemDeconflictWindow]] = FieldInfo(
        alias="deconflictWindows", default=None
    )
    """Array of DeconflictWindow records associated with this DeconflictSet."""

    errors: Optional[List[str]] = None
    """
    Array of error messages that potentially contain information about the reasons
    this deconflict response calculation may be inaccurate, or why it failed.
    """

    event_end_time: Optional[datetime] = FieldInfo(alias="eventEndTime", default=None)
    """
    The end time of the event associated with the set of DeconflictWindow records,
    in ISO 8601 UTC format with millisecond precision.
    """

    event_type: Optional[str] = FieldInfo(alias="eventType", default=None)
    """The type of event associated with this DeconflictSet record."""

    id_laser_deconflict_request: Optional[str] = FieldInfo(alias="idLaserDeconflictRequest", default=None)
    """
    The id of the LaserDeconflictRequest record used as input in the generation of
    this DeconflictSet, if applicable.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    reference_frame: Optional[str] = FieldInfo(alias="referenceFrame", default=None)
    """The reference frame of the cartesian orbital states.

    If the referenceFrame is null it is assumed to be J2000.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    tags: Optional[List[str]] = None
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    warnings: Optional[List[str]] = None
    """
    Array of warning messages that potentially contain information about the reasons
    this deconflict response calculation may be inaccurate, or why it failed.
    """


DeconflictsetTupleResponse: TypeAlias = List[DeconflictsetTupleResponseItem]
