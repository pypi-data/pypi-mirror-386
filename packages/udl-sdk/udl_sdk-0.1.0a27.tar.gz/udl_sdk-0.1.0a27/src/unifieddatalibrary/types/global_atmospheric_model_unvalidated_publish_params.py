# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["GlobalAtmosphericModelUnvalidatedPublishParams"]


class GlobalAtmosphericModelUnvalidatedPublishParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    ts: Required[Annotated[Union[str, datetime], PropertyInfo(format="iso8601")]]
    """Target time of the model in ISO 8601 UTC format with millisecond precision."""

    type: Required[str]
    """Type of data associated with this record (e.g.

    Global Total Electron Density, Global Total Electron Content).
    """

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    cadence: int
    """Model execution cadence, in minutes."""

    data_source_identifier: Annotated[str, PropertyInfo(alias="dataSourceIdentifier")]
    """
    A unique identification code or label assigned to a particular source from which
    atmospheric data originates.
    """

    end_alt: Annotated[float, PropertyInfo(alias="endAlt")]
    """Ending altitude of model outputs, in kilometers."""

    end_lat: Annotated[float, PropertyInfo(alias="endLat")]
    """WGS-84 ending latitude of model output, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    end_lon: Annotated[float, PropertyInfo(alias="endLon")]
    """WGS-84 ending longitude of model output, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    filename: str
    """The file name of the uploaded file."""

    filesize: int
    """The uploaded file size, in bytes.

    The maximum file size for this service is 104857600 bytes (100MB). Files
    exceeding the maximum size will be rejected.
    """

    num_alt: Annotated[int, PropertyInfo(alias="numAlt")]
    """Number of altitude points."""

    num_lat: Annotated[int, PropertyInfo(alias="numLat")]
    """Number of latitude points."""

    num_lon: Annotated[int, PropertyInfo(alias="numLon")]
    """Number of longitude points."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    report_time: Annotated[Union[str, datetime], PropertyInfo(alias="reportTime", format="iso8601")]
    """
    The time that this record was created, in ISO 8601 UTC format with millisecond
    precision.
    """

    start_alt: Annotated[float, PropertyInfo(alias="startAlt")]
    """Starting altitude of model outputs, in kilometers."""

    start_lat: Annotated[float, PropertyInfo(alias="startLat")]
    """WGS-84 starting latitude of model output, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    start_lon: Annotated[float, PropertyInfo(alias="startLon")]
    """WGS-84 starting longitude of model output, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    state: str
    """
    State value indicating whether the values in this record are PREDICTED or
    OBSERVED.
    """

    step_lat: Annotated[float, PropertyInfo(alias="stepLat")]
    """Separation in latitude between subsequent model outputs, in degrees."""

    step_lon: Annotated[float, PropertyInfo(alias="stepLon")]
    """Separation in longitude between subsequent model outputs, in degrees."""
