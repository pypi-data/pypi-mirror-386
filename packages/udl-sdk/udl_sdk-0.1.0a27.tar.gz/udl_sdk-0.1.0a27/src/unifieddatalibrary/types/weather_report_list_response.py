# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["WeatherReportListResponse"]


class WeatherReportListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    lat: float
    """The central WGS-84 latitude of the weather report, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    lon: float
    """The central WGS-84 longitude of the weather report, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    ob_time: datetime = FieldInfo(alias="obTime")
    """
    Datetime when a weather observation was made or forecast was issued in ISO 8601
    UTC datetime format with microsecond precision.
    """

    report_type: str = FieldInfo(alias="reportType")
    """Identifies the type of weather report (e.g. OBSERVATION, FORECAST, etc.)."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    act_weather: Optional[str] = FieldInfo(alias="actWeather", default=None)
    """Describes the actual weather at position.

    Intended as, but not constrained to, MIL-STD-6016 actual weather (e.g. NO
    STATEMENT, NO SIGNIFICANT WEATHER, DRIZZLE, RAIN, SNOW, SNOW GRAINS, DIAMOND
    DUST, ICE PELLETS, HAIL, SMALL HAIL, MIST, FOG, SMOKE, VOLCANIC ASH, WIDESPREAD
    DUST, SAND, HAZE, WELL DEVELOPED DUST, SQUALLS, FUNNEL CLOUDS, SANDSTORM,
    DUSTSTORM, LOW CLOUDS, CLOUDY, GROUND FOG, DUST, HEAVY RAIN, THUNDERSTORMS AWT,
    HEAVY THUNDERSTORMS, HURRICANE TYPHOON CYCLONE, TROPICAL STORM, TORNADO, HIGH
    WINDS, LIGHTNING, FREEZING DRIZZLE, FREEZING RAIN, HEAVY SNOW, ICING, SNOW OR
    RAIN AND SNOW MIXED, SHOWERS, CLEAR).
    """

    agjson: Optional[str] = None
    """
    Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON
    representation of the geometry/geography, of the image as projected on the
    ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST
    or PUT request that also specifies a valid 'area' or 'atext' field.
    """

    alt: Optional[float] = None
    """Point height above ellipsoid (WGS-84), in meters."""

    andims: Optional[int] = None
    """Number of dimensions of the geometry depicted by region."""

    asrid: Optional[int] = None
    """Geographical spatial_ref_sys for region."""

    atext: Optional[str] = None
    """
    Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known
    Text representation of the geometry/geography, of the image as projected on the
    ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored
    if included with a POST or PUT request that also specifies a valid 'area' field.
    """

    atype: Optional[str] = None
    """Type of region as projected on the ground."""

    bar_press: Optional[float] = FieldInfo(alias="barPress", default=None)
    """The measurement of air pressure in the atmosphere in kilopascals."""

    cc_event: Optional[bool] = FieldInfo(alias="ccEvent", default=None)
    """Flag indicating detection of a cloud-to-cloud lightning event."""

    cloud_cover: Optional[List[str]] = FieldInfo(alias="cloudCover", default=None)
    """
    Array of cloud cover descriptions - each element can be maximum of 16 characters
    long. Intended as, but not constrained to, MIL-STD-6016 cloud cover designations
    (e.g. SKY CLEAR, SCATTERED, BROKEN, OVERCAST, SKY OBSCURED). Each element of the
    array corresponds to the elements in the cloudHght array specified respectively.
    """

    cloud_hght: Optional[List[float]] = FieldInfo(alias="cloudHght", default=None)
    """Array of cloud base heights in meters described by the cloudHght array.

    Each element of the array corresponds to the elements in the cloudCover array
    specified respectively.
    """

    contrail_hght_lower: Optional[float] = FieldInfo(alias="contrailHghtLower", default=None)
    """Reports the lowest altitude at which contrails are occurring, in meters."""

    contrail_hght_upper: Optional[float] = FieldInfo(alias="contrailHghtUpper", default=None)
    """Reports the highest altitude at which contrails are occurring, in meters."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """Application user who created the row in the database."""

    data_level: Optional[str] = FieldInfo(alias="dataLevel", default=None)
    """
    Specific pressures or heights where measurements are taken, labeled as either
    MANDATORY or SIGNIFICANT levels. Mandatory levels are at particular pressures at
    geopotential heights. Significant levels are at particular geometric heights.
    """

    dew_point: Optional[float] = FieldInfo(alias="dewPoint", default=None)
    """The temperature at which air is saturated with water vapor, in degrees C."""

    dif_rad: Optional[float] = FieldInfo(alias="difRad", default=None)
    """
    The amount of radiation that reaches earth's surface after being scattered by
    the atmosphere, in Watts per square meter.
    """

    dir_dev: Optional[float] = FieldInfo(alias="dirDev", default=None)
    """The difference in wind direction recorded over a period of time, in degrees."""

    en_route_weather: Optional[str] = FieldInfo(alias="enRouteWeather", default=None)
    """
    Describes the flight conditions in route to the target (NO STATEMENT, MAINLY
    IFR, MAINLY VFR, THUNDERSTORMS).

    MAINLY IFR:&nbsp;&nbsp;Predominantly Instrument Flight Rules.

    MAINLY VFR:&nbsp;&nbsp;Predominantly Visual Flight Rules.

    THUNDERSTORMS:&nbsp;&nbsp;Thunderstorms expected in route.
    """

    external_id: Optional[str] = FieldInfo(alias="externalId", default=None)
    """Optional observation or forecast ID from external systems.

    This field has no meaning within UDL and is provided as a convenience for
    systems that require tracking of an internal system generated ID.
    """

    external_location_id: Optional[str] = FieldInfo(alias="externalLocationId", default=None)
    """Optional location ID from external systems.

    This field has no meaning within UDL and is provided as a convenience for
    systems that require tracking of an internal system generated ID.
    """

    forecast_end_time: Optional[datetime] = FieldInfo(alias="forecastEndTime", default=None)
    """
    Valid end time of a weather forecast in ISO 8601 UTC datetime format with
    millisecond precision.
    """

    forecast_start_time: Optional[datetime] = FieldInfo(alias="forecastStartTime", default=None)
    """
    Valid start time of a weather forecast in ISO 8601 UTC datetime format with
    millisecond precision.
    """

    geo_potential_alt: Optional[float] = FieldInfo(alias="geoPotentialAlt", default=None)
    """
    Altitude of a pressure surface in the atmosphere above mean sea level, in
    meters.
    """

    hshear: Optional[float] = None
    """
    The change in wind speed between two different lateral positions at a given
    altitude divided by the horizontal distance between them, in units of 1/sec.
    """

    icao: Optional[str] = None
    """
    The International Civil Aviation Organization (ICAO) code of the airfield
    associated with this weather report.
    """

    icing_lower_limit: Optional[float] = FieldInfo(alias="icingLowerLimit", default=None)
    """
    Reports the lowest altitude at which icing or freezing rain is occurring, in
    meters.
    """

    icing_upper_limit: Optional[float] = FieldInfo(alias="icingUpperLimit", default=None)
    """
    Reports the highest altitude at which icing or freezing rain is occurring, in
    meters.
    """

    id_airfield: Optional[str] = FieldInfo(alias="idAirfield", default=None)
    """Identifier of the Airfield associated with this weather report."""

    id_ground_imagery: Optional[str] = FieldInfo(alias="idGroundImagery", default=None)
    """
    Identifier of the ground imagery associated for this weather over target report.
    """

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """Unique identifier of the sensor making the weather measurement."""

    id_site: Optional[str] = FieldInfo(alias="idSite", default=None)
    """Identifier of the Site that is associated with this weather report."""

    index_refraction: Optional[float] = FieldInfo(alias="indexRefraction", default=None)
    """An indication of how much the atmosphere refracts light."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_sensor_id: Optional[str] = FieldInfo(alias="origSensorId", default=None)
    """Optional identifier provided by the record source.

    This may be an internal identifier and not necessarily a valid sensor ID.
    """

    precip_rate: Optional[float] = FieldInfo(alias="precipRate", default=None)
    """
    The speed at which water is being applied to a specific area in millimeters per
    hour.
    """

    qnh: Optional[float] = None
    """Altimeter set to read zero at mean sea level in kilopascals."""

    rad_vel: Optional[float] = FieldInfo(alias="radVel", default=None)
    """
    Average radial velocity of wind as measured by radar with multi-beam
    configurations. Radial velocity is the component of wind velocity moving
    directly toward or away from a sensor's radar beam, in meters per second. Values
    can either be positive (wind is moving away from the radar) or negative (wind is
    moving toward the radar).
    """

    rad_vel_beam1: Optional[float] = FieldInfo(alias="radVelBeam1", default=None)
    """
    Component of wind velocity moving directly toward or away from radar beam 1, in
    meters per second. Radial velocity values can either be positive (wind is moving
    away from the radar) or negative (wind is moving toward the radar). The beam
    number designation is defined by the data source.
    """

    rad_vel_beam2: Optional[float] = FieldInfo(alias="radVelBeam2", default=None)
    """
    Component of wind velocity moving directly toward or away from radar beam 2, in
    meters per second. Radial velocity values can either be positive (wind is moving
    away from the radar) or negative (wind is moving toward the radar). The beam
    number designation is defined by the data source.
    """

    rad_vel_beam3: Optional[float] = FieldInfo(alias="radVelBeam3", default=None)
    """
    Component of wind velocity moving directly toward or away from radar beam 3, in
    meters per second. Radial velocity values can either be positive (wind is moving
    away from the radar) or negative (wind is moving toward the radar). The beam
    number designation is defined by the data source.
    """

    rad_vel_beam4: Optional[float] = FieldInfo(alias="radVelBeam4", default=None)
    """
    Component of wind velocity moving directly toward or away from radar beam 4, in
    meters per second. Radial velocity values can either be positive (wind is moving
    away from the radar) or negative (wind is moving toward the radar). The beam
    number designation is defined by the data source.
    """

    rad_vel_beam5: Optional[float] = FieldInfo(alias="radVelBeam5", default=None)
    """
    Component of wind velocity moving directly toward or away from radar beam 5, in
    meters per second. Radial velocity values can either be positive (wind is moving
    away from the radar) or negative (wind is moving toward the radar). The beam
    number designation is defined by the data source.
    """

    rain_hour: Optional[float] = FieldInfo(alias="rainHour", default=None)
    """The amount of rain that has fallen in the past hour, in centimeters."""

    raw_metar: Optional[str] = FieldInfo(alias="rawMETAR", default=None)
    """The Raw Meteorological Aerodrome Report (METAR) string."""

    raw_taf: Optional[str] = FieldInfo(alias="rawTAF", default=None)
    """
    Terminal Aerodrome Forecast (TAF) containing detailed weather predictions for a
    specific airport or aerodrome.
    """

    ref_rad: Optional[float] = FieldInfo(alias="refRad", default=None)
    """
    The amount of radiation that changes direction as a function of atmospheric
    density, in Watts per square meter.
    """

    rel_humidity: Optional[float] = FieldInfo(alias="relHumidity", default=None)
    """The percentage of water vapor in the atmosphere."""

    senalt: Optional[float] = None
    """Sensor altitude at obTime in km.

    This includes pilot reports or other means of weather observation.
    """

    senlat: Optional[float] = None
    """Sensor WGS84 latitude at obTime in degrees.

    -90 to 90 degrees (negative values south of equator). This includes pilot
    reports or other means of weather observation.
    """

    senlon: Optional[float] = None
    """Sensor WGS84 longitude at obTime in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian). This includes
    pilot reports or other means of weather observation.
    """

    soil_moisture: Optional[float] = FieldInfo(alias="soilMoisture", default=None)
    """The volumetric percentage of soil water contained in a given volume of soil."""

    soil_temp: Optional[float] = FieldInfo(alias="soilTemp", default=None)
    """The measurement of soil temperature in degrees C."""

    solar_rad: Optional[float] = FieldInfo(alias="solarRad", default=None)
    """
    The power per unit area received from the Sun in the form of electromagnetic
    radiation as measured in the wavelength range of the measuring instrument. The
    solar irradiance is measured in watt per square meter (W/m2).
    """

    src_ids: Optional[List[str]] = FieldInfo(alias="srcIds", default=None)
    """
    Array of UUID(s) of the UDL data record(s) that are related to this
    WeatherReport record. See the associated 'srcTyps' array for the specific types
    of data, positionally corresponding to the UUIDs in this array. The 'srcTyps'
    and 'srcIds' arrays must match in size. See the corresponding srcTyps array
    element for the data type of the UUID and use the appropriate API operation to
    retrieve that object.
    """

    src_typs: Optional[List[str]] = FieldInfo(alias="srcTyps", default=None)
    """
    Array of UDL record types (SENSOR, WEATHERDATA) that are related to this
    WeatherReport record. See the associated 'srcIds' array for the record UUIDs,
    positionally corresponding to the record types in this array. The 'srcTyps' and
    'srcIds' arrays must match in size.
    """

    surrounding_weather: Optional[str] = FieldInfo(alias="surroundingWeather", default=None)
    """Describes in which direction (if any) that better weather conditions exist.

    Intended as, but not constrained to, MIL-STD-6016 surrounding weather
    designations (e.g. NO STATEMENT, BETTER TO NORTH, BETTER TO EAST, BETTER TO
    SOUTH, BETTER TO WEST).
    """

    temperature: Optional[float] = None
    """The measurement of air temperature in degrees C."""

    visibility: Optional[float] = None
    """Visual distance in meters."""

    vshear: Optional[float] = None
    """
    The change in wind speed between two different altitudes divided by the vertical
    distance between them, in units of 1/sec.
    """

    weather_amp: Optional[str] = FieldInfo(alias="weatherAmp", default=None)
    """Amplifies the actual weather being reported.

    Intended as, but not constrained to, MIL-STD-6016 weather amplification
    designations (e.g. NO STATEMENT, NO SCATTERED BROKEN MEDIUM CLOUD, SCATTERED
    BROKEN MEDIUM CLOUDS, GUSTY WINDS AT SERVICE, FOG IN VALLEYS, HIGHER TERRAIN
    OBSCURED, SURFACE CONDITIONS VARIABLE, SURFACE WIND NE, SURFACE WIND SE, SURFACE
    WIND SW, SURFACE WIND NW, PRESENCE OF CUMULONIMBUS).
    """

    weather_desc: Optional[str] = FieldInfo(alias="weatherDesc", default=None)
    """Used in conjunction with actWeather and weatherInt.

    Intended as, but not constrained to, MIL-STD-6016 actual weather descriptor
    (e.g. NO STATEMENT, SHALLOW, PATCHES, LOW DRIFTING, BLOWING, SHOWERS,
    THUNDERSTORMS, SUPERCOOLED).
    """

    weather_id: Optional[str] = FieldInfo(alias="weatherId", default=None)
    """
    Identifier of the weather over target, which should remain the same on
    subsequent Weather Over Target records.
    """

    weather_int: Optional[str] = FieldInfo(alias="weatherInt", default=None)
    """Weather Intensity.

    Used in conjunction with actWeather and weatherDesc. Intended as, but not
    constrained to, MIL-STD-6016 weather intensity (e.g. NO STATEMENT, LIGHT,
    MODERATE, HEAVY, IN VICINITY).
    """

    wind_chill: Optional[float] = FieldInfo(alias="windChill", default=None)
    """The perceived temperature in degrees C."""

    wind_cov: Optional[List[float]] = FieldInfo(alias="windCov", default=None)
    """Covariance matrix, in knots and second based units.

    The array values represent the lower triangular half of the covariance matrix.
    The size of the covariance matrix is 2x2. The covariance elements are position
    dependent within the array with values ordered as follows:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y

    x&nbsp;&nbsp;&nbsp;&nbsp;1

    y&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;3

    The cov array should contain only the lower left triangle values from top left
    down to bottom right, in order.
    """

    wind_dir: Optional[float] = FieldInfo(alias="windDir", default=None)
    """Direction the wind is blowing, in degrees clockwise from true north."""

    wind_dir_avg: Optional[float] = FieldInfo(alias="windDirAvg", default=None)
    """
    Average wind direction over a 1 minute period, in degrees clockwise from true
    north.
    """

    wind_dir_peak: Optional[float] = FieldInfo(alias="windDirPeak", default=None)
    """
    Wind direction corresponding to the peak wind speed during a 1 minute period, in
    degrees clockwise from true north.
    """

    wind_dir_peak10: Optional[float] = FieldInfo(alias="windDirPeak10", default=None)
    """
    Wind direction corresponding to the peak wind speed during a 10 minute period,
    in degrees clockwise from true north.
    """

    wind_gust: Optional[float] = FieldInfo(alias="windGust", default=None)
    """Expresses the max gust speed of the wind, in meters/second."""

    wind_gust10: Optional[float] = FieldInfo(alias="windGust10", default=None)
    """
    Expresses the max gust speed of the wind recorded in a 10 minute period, in
    meters/second.
    """

    wind_spd: Optional[float] = FieldInfo(alias="windSpd", default=None)
    """Expresses the speed of the wind in meters/second."""

    wind_spd_avg: Optional[float] = FieldInfo(alias="windSpdAvg", default=None)
    """Average wind speed over a 1 minute period, in meters/second."""

    wind_var: Optional[bool] = FieldInfo(alias="windVar", default=None)
    """Boolean describing whether or not the wind direction and/or speed is variable."""
