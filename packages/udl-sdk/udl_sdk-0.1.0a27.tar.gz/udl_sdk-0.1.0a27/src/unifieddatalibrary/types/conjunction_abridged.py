# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["ConjunctionAbridged", "StateVector1", "StateVector2"]


class StateVector1(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    epoch: datetime
    """
    Time of validity for state vector in ISO 8601 UTC datetime format, with
    microsecond precision.
    """

    source: str
    """Source of the data."""

    actual_od_span: Optional[float] = FieldInfo(alias="actualODSpan", default=None)
    """The actual time span used for the OD of the object, expressed in days."""

    algorithm: Optional[str] = None
    """Optional algorithm used to produce this record."""

    alt1_reference_frame: Optional[str] = FieldInfo(alias="alt1ReferenceFrame", default=None)
    """The reference frame of the alternate1 (Alt1) cartesian orbital state."""

    alt2_reference_frame: Optional[str] = FieldInfo(alias="alt2ReferenceFrame", default=None)
    """The reference frame of the alternate2 (Alt2) cartesian orbital state."""

    area: Optional[float] = None
    """
    The actual area of the object at it's largest cross-section, expressed in
    meters^2.
    """

    b_dot: Optional[float] = FieldInfo(alias="bDot", default=None)
    """First derivative of drag/ballistic coefficient (m2/kg-s)."""

    cm_offset: Optional[float] = FieldInfo(alias="cmOffset", default=None)
    """Model parameter value for center of mass offset (m)."""

    cov: Optional[List[float]] = None
    """
    Covariance matrix, in kilometer and second based units, in the specified
    covReferenceFrame. If the covReferenceFrame is null it is assumed to be J2000.
    The array values (1-21) represent the lower triangular half of the
    position-velocity covariance matrix. The size of the covariance matrix is
    dynamic, depending on whether the covariance for position only or position &
    velocity. The covariance elements are position dependent within the array with
    values ordered as follows:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR&nbsp;&nbsp;

    x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1

    y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;3

    z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;6

    x'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;10

    y'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15

    z'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;

    The cov array should contain only the lower left triangle values from top left
    down to bottom right, in order.

    If additional covariance terms are included for DRAG, SRP, and/or THRUST, the
    matrix can be extended with the following order of elements:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR

    DRG&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;23&nbsp;&nbsp;24&nbsp;&nbsp;25&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;

    SRP&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;30&nbsp;&nbsp;31&nbsp;&nbsp;32&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;

    THR&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;38&nbsp;&nbsp;39&nbsp;&nbsp;40&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45&nbsp;
    """

    cov_method: Optional[str] = FieldInfo(alias="covMethod", default=None)
    """
    The method used to generate the covariance during the orbit determination (OD)
    that produced the state vector, or whether an arbitrary, non-calculated default
    value was used (CALCULATED, DEFAULT).
    """

    cov_reference_frame: Optional[Literal["J2000", "UVW", "EFG/TDR", "ECR/ECEF", "TEME", "GCRF"]] = FieldInfo(
        alias="covReferenceFrame", default=None
    )
    """The reference frame of the covariance matrix elements.

    If the covReferenceFrame is null it is assumed to be J2000.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    descriptor: Optional[str] = None
    """Optional source-provided and searchable metadata or descriptor of the data."""

    drag_area: Optional[float] = FieldInfo(alias="dragArea", default=None)
    """
    The effective area of the object exposed to atmospheric drag, expressed in
    meters^2.
    """

    drag_coeff: Optional[float] = FieldInfo(alias="dragCoeff", default=None)
    """Area-to-mass ratio coefficient for atmospheric ballistic drag (m2/kg)."""

    drag_model: Optional[str] = FieldInfo(alias="dragModel", default=None)
    """The Drag Model used for this vector (e.g.

    HARRIS-PRIESTER, JAC70, JBH09, MSIS90, NONE, etc.).
    """

    edr: Optional[float] = None
    """Model parameter value for energy dissipation rate (EDR) (w/kg)."""

    eq_cov: Optional[List[float]] = FieldInfo(alias="eqCov", default=None)
    """
    The covariance matrix values represent the lower triangular half of the
    covariance matrix in terms of equinoctial elements.&nbsp; The size of the
    covariance matrix is dynamic.&nbsp; The values are outputted in order across
    each row, i.e.:

    1&nbsp;&nbsp; 2&nbsp;&nbsp; 3&nbsp;&nbsp; 4&nbsp;&nbsp; 5

    6&nbsp;&nbsp; 7&nbsp;&nbsp; 8&nbsp;&nbsp; 9&nbsp; 10

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    51&nbsp; 52&nbsp; 53&nbsp; 54&nbsp; 55

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    The ordering of values is as follows:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Af&nbsp;&nbsp;
    Ag&nbsp;&nbsp; L&nbsp;&nbsp;&nbsp; N&nbsp;&nbsp; Chi&nbsp; Psi&nbsp;&nbsp;
    B&nbsp;&nbsp; BDOT AGOM&nbsp; T&nbsp;&nbsp; C1&nbsp;&nbsp; C2&nbsp; ...

    Af&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1

    Ag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 3

    L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    4&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp; 6

    N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    7&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp; 9&nbsp;&nbsp; 10

    Chi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp; 12&nbsp;&nbsp;
    13&nbsp;&nbsp; 14&nbsp;&nbsp; 15

    Psi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16&nbsp;&nbsp; 17&nbsp;&nbsp;
    18&nbsp;&nbsp; 19&nbsp;&nbsp; 20&nbsp;&nbsp; 21

    B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22&nbsp;&nbsp;
    23&nbsp;&nbsp; 24 &nbsp;&nbsp;25&nbsp;&nbsp; 26&nbsp;&nbsp; 27&nbsp;&nbsp; 28

    BDOT&nbsp;&nbsp; 29&nbsp;&nbsp; 30&nbsp;&nbsp; 31&nbsp;&nbsp; 32&nbsp;&nbsp;
    33&nbsp;&nbsp; 34&nbsp;&nbsp; 35&nbsp;&nbsp; 36

    AGOM&nbsp; 37&nbsp;&nbsp; 38&nbsp;&nbsp; 39&nbsp;&nbsp; 40&nbsp;&nbsp;
    41&nbsp;&nbsp; 42&nbsp;&nbsp; 43&nbsp;&nbsp; 44&nbsp;&nbsp; 45

    T&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 46&nbsp;&nbsp;
    47&nbsp;&nbsp; 48&nbsp;&nbsp; 49&nbsp;&nbsp; 50&nbsp;&nbsp; 51&nbsp;&nbsp;
    52&nbsp;&nbsp; 53&nbsp;&nbsp; 54&nbsp;&nbsp; 55

    C1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp; 57&nbsp;&nbsp;
    58&nbsp;&nbsp; 59&nbsp;&nbsp; 60&nbsp;&nbsp; 61&nbsp;&nbsp; 62&nbsp;&nbsp;
    63&nbsp;&nbsp; 64&nbsp;&nbsp; 65&nbsp;&nbsp; 66

    C2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 67&nbsp;&nbsp; 68&nbsp;&nbsp;
    69&nbsp;&nbsp; 70&nbsp;&nbsp; 71&nbsp; &nbsp;72&nbsp;&nbsp; 73&nbsp;&nbsp;
    74&nbsp;&nbsp; 75&nbsp;&nbsp; 76&nbsp;&nbsp; 77&nbsp;&nbsp; 78

    :

    :

    where C1, C2, etc, are the "consider parameters" that may be added to the
    covariance matrix.&nbsp; The covariance matrix will be as large as the last
    element/model parameter needed.&nbsp; In other words, if the DC solved for all 6
    elements plus AGOM, the covariance matrix will be 9x9 (and the rows for B and
    BDOT will be all zeros).&nbsp; If the covariance matrix is unavailable, the size
    will be set to 0x0, and no data will follow.&nbsp; The cov field should contain
    only the lower left triangle values from top left down to bottom right, in
    order.
    """

    error_control: Optional[float] = FieldInfo(alias="errorControl", default=None)
    """Integrator error control."""

    fixed_step: Optional[bool] = FieldInfo(alias="fixedStep", default=None)
    """Boolean indicating use of fixed step size for this vector."""

    geopotential_model: Optional[str] = FieldInfo(alias="geopotentialModel", default=None)
    """Geopotential model used for this vector (e.g.

    EGM-96, WGS-84, WGS-72, JGM-2, or GEM-T3), including mm degree zonals, nn
    degree/order tesserals. E.g. EGM-96 24Z,24T.
    """

    iau1980_terms: Optional[int] = FieldInfo(alias="iau1980Terms", default=None)
    """Number of terms used in the IAU 1980 nutation model (4, 50, or 106)."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """Unique identifier of the satellite on-orbit object, if correlated.

    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites.
    """

    id_orbit_determination: Optional[str] = FieldInfo(alias="idOrbitDetermination", default=None)
    """Unique identifier of the OD solution record that produced this state vector.

    This ID can be used to obtain additional information on an OrbitDetermination
    object using the 'get by ID' operation (e.g. /udl/orbitdetermination/{id}). For
    example, the OrbitDetermination with idOrbitDetermination = abc would be queries
    as /udl/orbitdetermination/abc.
    """

    id_state_vector: Optional[str] = FieldInfo(alias="idStateVector", default=None)
    """Unique identifier of the record, auto-generated by the system."""

    integrator_mode: Optional[str] = FieldInfo(alias="integratorMode", default=None)
    """Integrator Mode."""

    in_track_thrust: Optional[bool] = FieldInfo(alias="inTrackThrust", default=None)
    """Boolean indicating use of in-track thrust perturbations for this vector."""

    last_ob_end: Optional[datetime] = FieldInfo(alias="lastObEnd", default=None)
    """
    The end of the time interval containing the time of the last accepted
    observation, in ISO 8601 UTC format with microsecond precision. For an exact
    observation time, the firstObTime and lastObTime are the same.
    """

    last_ob_start: Optional[datetime] = FieldInfo(alias="lastObStart", default=None)
    """
    The start of the time interval containing the time of the last accepted
    observation, in ISO 8601 UTC format with microsecond precision. For an exact
    observation time, the firstObTime and lastObTime are the same.
    """

    leap_second_time: Optional[datetime] = FieldInfo(alias="leapSecondTime", default=None)
    """Time of the next leap second after epoch in ISO 8601 UTC time.

    If the next leap second is not known, the time of the previous leap second is
    used.
    """

    lunar_solar: Optional[bool] = FieldInfo(alias="lunarSolar", default=None)
    """Boolean indicating use of lunar/solar perturbations for this vector."""

    mass: Optional[float] = None
    """The mass of the object, in kilograms."""

    msg_ts: Optional[datetime] = FieldInfo(alias="msgTs", default=None)
    """
    Time when message was generated in ISO 8601 UTC format with microsecond
    precision.
    """

    obs_available: Optional[int] = FieldInfo(alias="obsAvailable", default=None)
    """The number of observations available for the OD of the object."""

    obs_used: Optional[int] = FieldInfo(alias="obsUsed", default=None)
    """The number of observations accepted for the OD of the object."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier provided by state vector source to indicate the target
    onorbit object of this state vector. This may be an internal identifier and not
    necessarily map to a valid satellite number.
    """

    partials: Optional[str] = None
    """Type of partial derivatives used (ANALYTIC, FULL NUM, or FAST NUM)."""

    pedigree: Optional[str] = None
    """
    The pedigree of state vector, or methods used for its generation to include
    state update/orbit determination, propagation from another state, or a state
    from a calibration satellite (e.g. ORBIT_UPDATE, PROPAGATION, CALIBRATION,
    CONJUNCTION, FLIGHT_PLAN).
    """

    polar_motion_x: Optional[float] = FieldInfo(alias="polarMotionX", default=None)
    """Polar Wander Motion X (arc seconds)."""

    polar_motion_y: Optional[float] = FieldInfo(alias="polarMotionY", default=None)
    """Polar Wander Motion Y (arc seconds)."""

    pos_unc: Optional[float] = FieldInfo(alias="posUnc", default=None)
    """One sigma position uncertainty, in kilometers."""

    rec_od_span: Optional[float] = FieldInfo(alias="recODSpan", default=None)
    """The recommended OD time span calculated for the object, expressed in days."""

    reference_frame: Optional[Literal["J2000", "EFG/TDR", "ECR/ECEF", "TEME", "ITRF", "GCRF"]] = FieldInfo(
        alias="referenceFrame", default=None
    )
    """The reference frame of the cartesian orbital states.

    If the referenceFrame is null it is assumed to be J2000.
    """

    residuals_acc: Optional[float] = FieldInfo(alias="residualsAcc", default=None)
    """The percentage of residuals accepted in the OD of the object."""

    rev_no: Optional[int] = FieldInfo(alias="revNo", default=None)
    """Epoch revolution number."""

    rms: Optional[float] = None
    """
    The Weighted Root Mean Squared (RMS) of the differential correction on the
    target object that produced this vector. WRMS is a quality indicator of the
    state vector update, with a value of 1.00 being optimal. WRMS applies to Batch
    Least Squares (BLS) processes.
    """

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """Satellite/Catalog number of the target OnOrbit object."""

    sigma_pos_uvw: Optional[List[float]] = FieldInfo(alias="sigmaPosUVW", default=None)
    """
    Array containing the standard deviation of error in target object position, U, V
    and W direction respectively (km).
    """

    sigma_vel_uvw: Optional[List[float]] = FieldInfo(alias="sigmaVelUVW", default=None)
    """
    Array containing the standard deviation of error in target object velocity, U, V
    and W direction respectively (km/sec).
    """

    solar_flux_ap_avg: Optional[float] = FieldInfo(alias="solarFluxAPAvg", default=None)
    """Average solar flux geomagnetic index."""

    solar_flux_f10: Optional[float] = FieldInfo(alias="solarFluxF10", default=None)
    """F10 (10.7 cm) solar flux value."""

    solar_flux_f10_avg: Optional[float] = FieldInfo(alias="solarFluxF10Avg", default=None)
    """F10 (10.7 cm) solar flux 81-day average value."""

    solar_rad_press: Optional[bool] = FieldInfo(alias="solarRadPress", default=None)
    """
    Boolean indicating use of solar radiation pressure perturbations for this
    vector.
    """

    solar_rad_press_coeff: Optional[float] = FieldInfo(alias="solarRadPressCoeff", default=None)
    """Area-to-mass ratio coefficient for solar radiation pressure."""

    solid_earth_tides: Optional[bool] = FieldInfo(alias="solidEarthTides", default=None)
    """Boolean indicating use of solid earth tide perturbations for this vector."""

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    srp_area: Optional[float] = FieldInfo(alias="srpArea", default=None)
    """
    The effective area of the object exposed to solar radiation pressure, expressed
    in meters^2.
    """

    step_mode: Optional[str] = FieldInfo(alias="stepMode", default=None)
    """Integrator step mode (AUTO, TIME, or S)."""

    step_size: Optional[float] = FieldInfo(alias="stepSize", default=None)
    """Initial integration step size (seconds)."""

    step_size_selection: Optional[str] = FieldInfo(alias="stepSizeSelection", default=None)
    """Initial step size selection (AUTO or MANUAL)."""

    tai_utc: Optional[float] = FieldInfo(alias="taiUtc", default=None)
    """
    TAI (Temps Atomique International) minus UTC (Universal Time Coordinates) offset
    in seconds.
    """

    thrust_accel: Optional[float] = FieldInfo(alias="thrustAccel", default=None)
    """Model parameter value for thrust acceleration (m/s2)."""

    tracks_avail: Optional[int] = FieldInfo(alias="tracksAvail", default=None)
    """The number of sensor tracks available for the OD of the object."""

    tracks_used: Optional[int] = FieldInfo(alias="tracksUsed", default=None)
    """The number of sensor tracks accepted for the OD of the object."""

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    uct: Optional[bool] = None
    """
    Boolean indicating this state vector was unable to be correlated to a known
    object. This flag should only be set to true by data providers after an attempt
    to correlate to an OnOrbit object was made and failed. If unable to correlate,
    the 'origObjectId' field may be populated with an internal data provider
    specific identifier.
    """

    ut1_rate: Optional[float] = FieldInfo(alias="ut1Rate", default=None)
    """Rate of change of UT1 (milliseconds/day) - first derivative of ut1Utc."""

    ut1_utc: Optional[float] = FieldInfo(alias="ut1Utc", default=None)
    """Universal Time-1 (UT1) minus UTC offset, in seconds."""

    vel_unc: Optional[float] = FieldInfo(alias="velUnc", default=None)
    """One sigma velocity uncertainty, in kilometers/second."""

    xaccel: Optional[float] = None
    """
    Cartesian X acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xpos: Optional[float] = None
    """
    Cartesian X position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xpos_alt1: Optional[float] = FieldInfo(alias="xposAlt1", default=None)
    """
    Cartesian X position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xpos_alt2: Optional[float] = FieldInfo(alias="xposAlt2", default=None)
    """
    Cartesian X position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xvel: Optional[float] = None
    """
    Cartesian X velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xvel_alt1: Optional[float] = FieldInfo(alias="xvelAlt1", default=None)
    """
    Cartesian X velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xvel_alt2: Optional[float] = FieldInfo(alias="xvelAlt2", default=None)
    """
    Cartesian X velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yaccel: Optional[float] = None
    """
    Cartesian Y acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    ypos: Optional[float] = None
    """
    Cartesian Y position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    ypos_alt1: Optional[float] = FieldInfo(alias="yposAlt1", default=None)
    """
    Cartesian Y position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    ypos_alt2: Optional[float] = FieldInfo(alias="yposAlt2", default=None)
    """
    Cartesian Y position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yvel: Optional[float] = None
    """
    Cartesian Y velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    yvel_alt1: Optional[float] = FieldInfo(alias="yvelAlt1", default=None)
    """
    Cartesian Y velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yvel_alt2: Optional[float] = FieldInfo(alias="yvelAlt2", default=None)
    """
    Cartesian Y velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zaccel: Optional[float] = None
    """
    Cartesian Z acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zpos: Optional[float] = None
    """
    Cartesian Z position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zpos_alt1: Optional[float] = FieldInfo(alias="zposAlt1", default=None)
    """
    Cartesian Z position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zpos_alt2: Optional[float] = FieldInfo(alias="zposAlt2", default=None)
    """
    Cartesian Z position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zvel: Optional[float] = None
    """
    Cartesian Z velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zvel_alt1: Optional[float] = FieldInfo(alias="zvelAlt1", default=None)
    """
    Cartesian Z velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zvel_alt2: Optional[float] = FieldInfo(alias="zvelAlt2", default=None)
    """
    Cartesian Z velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """


class StateVector2(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    epoch: datetime
    """
    Time of validity for state vector in ISO 8601 UTC datetime format, with
    microsecond precision.
    """

    source: str
    """Source of the data."""

    actual_od_span: Optional[float] = FieldInfo(alias="actualODSpan", default=None)
    """The actual time span used for the OD of the object, expressed in days."""

    algorithm: Optional[str] = None
    """Optional algorithm used to produce this record."""

    alt1_reference_frame: Optional[str] = FieldInfo(alias="alt1ReferenceFrame", default=None)
    """The reference frame of the alternate1 (Alt1) cartesian orbital state."""

    alt2_reference_frame: Optional[str] = FieldInfo(alias="alt2ReferenceFrame", default=None)
    """The reference frame of the alternate2 (Alt2) cartesian orbital state."""

    area: Optional[float] = None
    """
    The actual area of the object at it's largest cross-section, expressed in
    meters^2.
    """

    b_dot: Optional[float] = FieldInfo(alias="bDot", default=None)
    """First derivative of drag/ballistic coefficient (m2/kg-s)."""

    cm_offset: Optional[float] = FieldInfo(alias="cmOffset", default=None)
    """Model parameter value for center of mass offset (m)."""

    cov: Optional[List[float]] = None
    """
    Covariance matrix, in kilometer and second based units, in the specified
    covReferenceFrame. If the covReferenceFrame is null it is assumed to be J2000.
    The array values (1-21) represent the lower triangular half of the
    position-velocity covariance matrix. The size of the covariance matrix is
    dynamic, depending on whether the covariance for position only or position &
    velocity. The covariance elements are position dependent within the array with
    values ordered as follows:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR&nbsp;&nbsp;

    x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1

    y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;3

    z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;6

    x'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;10

    y'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15

    z'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;

    The cov array should contain only the lower left triangle values from top left
    down to bottom right, in order.

    If additional covariance terms are included for DRAG, SRP, and/or THRUST, the
    matrix can be extended with the following order of elements:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR

    DRG&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;23&nbsp;&nbsp;24&nbsp;&nbsp;25&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;

    SRP&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;30&nbsp;&nbsp;31&nbsp;&nbsp;32&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;

    THR&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;38&nbsp;&nbsp;39&nbsp;&nbsp;40&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45&nbsp;
    """

    cov_method: Optional[str] = FieldInfo(alias="covMethod", default=None)
    """
    The method used to generate the covariance during the orbit determination (OD)
    that produced the state vector, or whether an arbitrary, non-calculated default
    value was used (CALCULATED, DEFAULT).
    """

    cov_reference_frame: Optional[Literal["J2000", "UVW", "EFG/TDR", "ECR/ECEF", "TEME", "GCRF"]] = FieldInfo(
        alias="covReferenceFrame", default=None
    )
    """The reference frame of the covariance matrix elements.

    If the covReferenceFrame is null it is assumed to be J2000.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    descriptor: Optional[str] = None
    """Optional source-provided and searchable metadata or descriptor of the data."""

    drag_area: Optional[float] = FieldInfo(alias="dragArea", default=None)
    """
    The effective area of the object exposed to atmospheric drag, expressed in
    meters^2.
    """

    drag_coeff: Optional[float] = FieldInfo(alias="dragCoeff", default=None)
    """Area-to-mass ratio coefficient for atmospheric ballistic drag (m2/kg)."""

    drag_model: Optional[str] = FieldInfo(alias="dragModel", default=None)
    """The Drag Model used for this vector (e.g.

    HARRIS-PRIESTER, JAC70, JBH09, MSIS90, NONE, etc.).
    """

    edr: Optional[float] = None
    """Model parameter value for energy dissipation rate (EDR) (w/kg)."""

    eq_cov: Optional[List[float]] = FieldInfo(alias="eqCov", default=None)
    """
    The covariance matrix values represent the lower triangular half of the
    covariance matrix in terms of equinoctial elements.&nbsp; The size of the
    covariance matrix is dynamic.&nbsp; The values are outputted in order across
    each row, i.e.:

    1&nbsp;&nbsp; 2&nbsp;&nbsp; 3&nbsp;&nbsp; 4&nbsp;&nbsp; 5

    6&nbsp;&nbsp; 7&nbsp;&nbsp; 8&nbsp;&nbsp; 9&nbsp; 10

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    51&nbsp; 52&nbsp; 53&nbsp; 54&nbsp; 55

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :

    The ordering of values is as follows:

    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Af&nbsp;&nbsp;
    Ag&nbsp;&nbsp; L&nbsp;&nbsp;&nbsp; N&nbsp;&nbsp; Chi&nbsp; Psi&nbsp;&nbsp;
    B&nbsp;&nbsp; BDOT AGOM&nbsp; T&nbsp;&nbsp; C1&nbsp;&nbsp; C2&nbsp; ...

    Af&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1

    Ag&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 3

    L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    4&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp; 6

    N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    7&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp; 9&nbsp;&nbsp; 10

    Chi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp; 12&nbsp;&nbsp;
    13&nbsp;&nbsp; 14&nbsp;&nbsp; 15

    Psi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16&nbsp;&nbsp; 17&nbsp;&nbsp;
    18&nbsp;&nbsp; 19&nbsp;&nbsp; 20&nbsp;&nbsp; 21

    B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22&nbsp;&nbsp;
    23&nbsp;&nbsp; 24 &nbsp;&nbsp;25&nbsp;&nbsp; 26&nbsp;&nbsp; 27&nbsp;&nbsp; 28

    BDOT&nbsp;&nbsp; 29&nbsp;&nbsp; 30&nbsp;&nbsp; 31&nbsp;&nbsp; 32&nbsp;&nbsp;
    33&nbsp;&nbsp; 34&nbsp;&nbsp; 35&nbsp;&nbsp; 36

    AGOM&nbsp; 37&nbsp;&nbsp; 38&nbsp;&nbsp; 39&nbsp;&nbsp; 40&nbsp;&nbsp;
    41&nbsp;&nbsp; 42&nbsp;&nbsp; 43&nbsp;&nbsp; 44&nbsp;&nbsp; 45

    T&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 46&nbsp;&nbsp;
    47&nbsp;&nbsp; 48&nbsp;&nbsp; 49&nbsp;&nbsp; 50&nbsp;&nbsp; 51&nbsp;&nbsp;
    52&nbsp;&nbsp; 53&nbsp;&nbsp; 54&nbsp;&nbsp; 55

    C1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp; 57&nbsp;&nbsp;
    58&nbsp;&nbsp; 59&nbsp;&nbsp; 60&nbsp;&nbsp; 61&nbsp;&nbsp; 62&nbsp;&nbsp;
    63&nbsp;&nbsp; 64&nbsp;&nbsp; 65&nbsp;&nbsp; 66

    C2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 67&nbsp;&nbsp; 68&nbsp;&nbsp;
    69&nbsp;&nbsp; 70&nbsp;&nbsp; 71&nbsp; &nbsp;72&nbsp;&nbsp; 73&nbsp;&nbsp;
    74&nbsp;&nbsp; 75&nbsp;&nbsp; 76&nbsp;&nbsp; 77&nbsp;&nbsp; 78

    :

    :

    where C1, C2, etc, are the "consider parameters" that may be added to the
    covariance matrix.&nbsp; The covariance matrix will be as large as the last
    element/model parameter needed.&nbsp; In other words, if the DC solved for all 6
    elements plus AGOM, the covariance matrix will be 9x9 (and the rows for B and
    BDOT will be all zeros).&nbsp; If the covariance matrix is unavailable, the size
    will be set to 0x0, and no data will follow.&nbsp; The cov field should contain
    only the lower left triangle values from top left down to bottom right, in
    order.
    """

    error_control: Optional[float] = FieldInfo(alias="errorControl", default=None)
    """Integrator error control."""

    fixed_step: Optional[bool] = FieldInfo(alias="fixedStep", default=None)
    """Boolean indicating use of fixed step size for this vector."""

    geopotential_model: Optional[str] = FieldInfo(alias="geopotentialModel", default=None)
    """Geopotential model used for this vector (e.g.

    EGM-96, WGS-84, WGS-72, JGM-2, or GEM-T3), including mm degree zonals, nn
    degree/order tesserals. E.g. EGM-96 24Z,24T.
    """

    iau1980_terms: Optional[int] = FieldInfo(alias="iau1980Terms", default=None)
    """Number of terms used in the IAU 1980 nutation model (4, 50, or 106)."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """Unique identifier of the satellite on-orbit object, if correlated.

    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites.
    """

    id_orbit_determination: Optional[str] = FieldInfo(alias="idOrbitDetermination", default=None)
    """Unique identifier of the OD solution record that produced this state vector.

    This ID can be used to obtain additional information on an OrbitDetermination
    object using the 'get by ID' operation (e.g. /udl/orbitdetermination/{id}). For
    example, the OrbitDetermination with idOrbitDetermination = abc would be queries
    as /udl/orbitdetermination/abc.
    """

    id_state_vector: Optional[str] = FieldInfo(alias="idStateVector", default=None)
    """Unique identifier of the record, auto-generated by the system."""

    integrator_mode: Optional[str] = FieldInfo(alias="integratorMode", default=None)
    """Integrator Mode."""

    in_track_thrust: Optional[bool] = FieldInfo(alias="inTrackThrust", default=None)
    """Boolean indicating use of in-track thrust perturbations for this vector."""

    last_ob_end: Optional[datetime] = FieldInfo(alias="lastObEnd", default=None)
    """
    The end of the time interval containing the time of the last accepted
    observation, in ISO 8601 UTC format with microsecond precision. For an exact
    observation time, the firstObTime and lastObTime are the same.
    """

    last_ob_start: Optional[datetime] = FieldInfo(alias="lastObStart", default=None)
    """
    The start of the time interval containing the time of the last accepted
    observation, in ISO 8601 UTC format with microsecond precision. For an exact
    observation time, the firstObTime and lastObTime are the same.
    """

    leap_second_time: Optional[datetime] = FieldInfo(alias="leapSecondTime", default=None)
    """Time of the next leap second after epoch in ISO 8601 UTC time.

    If the next leap second is not known, the time of the previous leap second is
    used.
    """

    lunar_solar: Optional[bool] = FieldInfo(alias="lunarSolar", default=None)
    """Boolean indicating use of lunar/solar perturbations for this vector."""

    mass: Optional[float] = None
    """The mass of the object, in kilograms."""

    msg_ts: Optional[datetime] = FieldInfo(alias="msgTs", default=None)
    """
    Time when message was generated in ISO 8601 UTC format with microsecond
    precision.
    """

    obs_available: Optional[int] = FieldInfo(alias="obsAvailable", default=None)
    """The number of observations available for the OD of the object."""

    obs_used: Optional[int] = FieldInfo(alias="obsUsed", default=None)
    """The number of observations accepted for the OD of the object."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier provided by state vector source to indicate the target
    onorbit object of this state vector. This may be an internal identifier and not
    necessarily map to a valid satellite number.
    """

    partials: Optional[str] = None
    """Type of partial derivatives used (ANALYTIC, FULL NUM, or FAST NUM)."""

    pedigree: Optional[str] = None
    """
    The pedigree of state vector, or methods used for its generation to include
    state update/orbit determination, propagation from another state, or a state
    from a calibration satellite (e.g. ORBIT_UPDATE, PROPAGATION, CALIBRATION,
    CONJUNCTION, FLIGHT_PLAN).
    """

    polar_motion_x: Optional[float] = FieldInfo(alias="polarMotionX", default=None)
    """Polar Wander Motion X (arc seconds)."""

    polar_motion_y: Optional[float] = FieldInfo(alias="polarMotionY", default=None)
    """Polar Wander Motion Y (arc seconds)."""

    pos_unc: Optional[float] = FieldInfo(alias="posUnc", default=None)
    """One sigma position uncertainty, in kilometers."""

    rec_od_span: Optional[float] = FieldInfo(alias="recODSpan", default=None)
    """The recommended OD time span calculated for the object, expressed in days."""

    reference_frame: Optional[Literal["J2000", "EFG/TDR", "ECR/ECEF", "TEME", "ITRF", "GCRF"]] = FieldInfo(
        alias="referenceFrame", default=None
    )
    """The reference frame of the cartesian orbital states.

    If the referenceFrame is null it is assumed to be J2000.
    """

    residuals_acc: Optional[float] = FieldInfo(alias="residualsAcc", default=None)
    """The percentage of residuals accepted in the OD of the object."""

    rev_no: Optional[int] = FieldInfo(alias="revNo", default=None)
    """Epoch revolution number."""

    rms: Optional[float] = None
    """
    The Weighted Root Mean Squared (RMS) of the differential correction on the
    target object that produced this vector. WRMS is a quality indicator of the
    state vector update, with a value of 1.00 being optimal. WRMS applies to Batch
    Least Squares (BLS) processes.
    """

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """Satellite/Catalog number of the target OnOrbit object."""

    sigma_pos_uvw: Optional[List[float]] = FieldInfo(alias="sigmaPosUVW", default=None)
    """
    Array containing the standard deviation of error in target object position, U, V
    and W direction respectively (km).
    """

    sigma_vel_uvw: Optional[List[float]] = FieldInfo(alias="sigmaVelUVW", default=None)
    """
    Array containing the standard deviation of error in target object velocity, U, V
    and W direction respectively (km/sec).
    """

    solar_flux_ap_avg: Optional[float] = FieldInfo(alias="solarFluxAPAvg", default=None)
    """Average solar flux geomagnetic index."""

    solar_flux_f10: Optional[float] = FieldInfo(alias="solarFluxF10", default=None)
    """F10 (10.7 cm) solar flux value."""

    solar_flux_f10_avg: Optional[float] = FieldInfo(alias="solarFluxF10Avg", default=None)
    """F10 (10.7 cm) solar flux 81-day average value."""

    solar_rad_press: Optional[bool] = FieldInfo(alias="solarRadPress", default=None)
    """
    Boolean indicating use of solar radiation pressure perturbations for this
    vector.
    """

    solar_rad_press_coeff: Optional[float] = FieldInfo(alias="solarRadPressCoeff", default=None)
    """Area-to-mass ratio coefficient for solar radiation pressure."""

    solid_earth_tides: Optional[bool] = FieldInfo(alias="solidEarthTides", default=None)
    """Boolean indicating use of solid earth tide perturbations for this vector."""

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    srp_area: Optional[float] = FieldInfo(alias="srpArea", default=None)
    """
    The effective area of the object exposed to solar radiation pressure, expressed
    in meters^2.
    """

    step_mode: Optional[str] = FieldInfo(alias="stepMode", default=None)
    """Integrator step mode (AUTO, TIME, or S)."""

    step_size: Optional[float] = FieldInfo(alias="stepSize", default=None)
    """Initial integration step size (seconds)."""

    step_size_selection: Optional[str] = FieldInfo(alias="stepSizeSelection", default=None)
    """Initial step size selection (AUTO or MANUAL)."""

    tai_utc: Optional[float] = FieldInfo(alias="taiUtc", default=None)
    """
    TAI (Temps Atomique International) minus UTC (Universal Time Coordinates) offset
    in seconds.
    """

    thrust_accel: Optional[float] = FieldInfo(alias="thrustAccel", default=None)
    """Model parameter value for thrust acceleration (m/s2)."""

    tracks_avail: Optional[int] = FieldInfo(alias="tracksAvail", default=None)
    """The number of sensor tracks available for the OD of the object."""

    tracks_used: Optional[int] = FieldInfo(alias="tracksUsed", default=None)
    """The number of sensor tracks accepted for the OD of the object."""

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    uct: Optional[bool] = None
    """
    Boolean indicating this state vector was unable to be correlated to a known
    object. This flag should only be set to true by data providers after an attempt
    to correlate to an OnOrbit object was made and failed. If unable to correlate,
    the 'origObjectId' field may be populated with an internal data provider
    specific identifier.
    """

    ut1_rate: Optional[float] = FieldInfo(alias="ut1Rate", default=None)
    """Rate of change of UT1 (milliseconds/day) - first derivative of ut1Utc."""

    ut1_utc: Optional[float] = FieldInfo(alias="ut1Utc", default=None)
    """Universal Time-1 (UT1) minus UTC offset, in seconds."""

    vel_unc: Optional[float] = FieldInfo(alias="velUnc", default=None)
    """One sigma velocity uncertainty, in kilometers/second."""

    xaccel: Optional[float] = None
    """
    Cartesian X acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xpos: Optional[float] = None
    """
    Cartesian X position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xpos_alt1: Optional[float] = FieldInfo(alias="xposAlt1", default=None)
    """
    Cartesian X position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xpos_alt2: Optional[float] = FieldInfo(alias="xposAlt2", default=None)
    """
    Cartesian X position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xvel: Optional[float] = None
    """
    Cartesian X velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    xvel_alt1: Optional[float] = FieldInfo(alias="xvelAlt1", default=None)
    """
    Cartesian X velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    xvel_alt2: Optional[float] = FieldInfo(alias="xvelAlt2", default=None)
    """
    Cartesian X velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yaccel: Optional[float] = None
    """
    Cartesian Y acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    ypos: Optional[float] = None
    """
    Cartesian Y position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    ypos_alt1: Optional[float] = FieldInfo(alias="yposAlt1", default=None)
    """
    Cartesian Y position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    ypos_alt2: Optional[float] = FieldInfo(alias="yposAlt2", default=None)
    """
    Cartesian Y position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yvel: Optional[float] = None
    """
    Cartesian Y velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    yvel_alt1: Optional[float] = FieldInfo(alias="yvelAlt1", default=None)
    """
    Cartesian Y velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    yvel_alt2: Optional[float] = FieldInfo(alias="yvelAlt2", default=None)
    """
    Cartesian Y velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zaccel: Optional[float] = None
    """
    Cartesian Z acceleration of target, in kilometers/second^2, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zpos: Optional[float] = None
    """
    Cartesian Z position of the target, in kilometers, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zpos_alt1: Optional[float] = FieldInfo(alias="zposAlt1", default=None)
    """
    Cartesian Z position of the target, in kilometers, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zpos_alt2: Optional[float] = FieldInfo(alias="zposAlt2", default=None)
    """
    Cartesian Z position of the target, in kilometers, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zvel: Optional[float] = None
    """
    Cartesian Z velocity of target, in kilometers/second, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    zvel_alt1: Optional[float] = FieldInfo(alias="zvelAlt1", default=None)
    """
    Cartesian Z velocity of the target, in kilometers/second, in the specified
    alt1ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """

    zvel_alt2: Optional[float] = FieldInfo(alias="zvelAlt2", default=None)
    """
    Cartesian Z velocity of the target, in kilometers/second, in the specified
    alt2ReferenceFrame. Alternate reference frames are optional and are intended to
    allow a data source to provide an equivalent vector in a different cartesian
    frame than the primary vector.
    """


class ConjunctionAbridged(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    tca: datetime
    """Time of closest approach (TCA) in UTC."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    ccir: Optional[str] = None
    """Commander's critical information requirements notes."""

    cd_ao_m1: Optional[float] = FieldInfo(alias="cdAoM1", default=None)
    """
    The value of the primary (object1) Area times the drag coefficient over the
    object Mass, expressed in m^2/kg, used for propagation of the primary state
    vector and covariance to TCA.
    """

    cd_ao_m2: Optional[float] = FieldInfo(alias="cdAoM2", default=None)
    """
    The value of the secondary (object2) Area times the drag coefficient over the
    object Mass, expressed in m^2/kg, used for propagation of the primary state
    vector and covariance to TCA.
    """

    collision_prob: Optional[float] = FieldInfo(alias="collisionProb", default=None)
    """
    Probability of Collision is the probability (denoted p, where 0.0<=p<=1.0), that
    Object1 and Object2 will collide.
    """

    collision_prob_method: Optional[str] = FieldInfo(alias="collisionProbMethod", default=None)
    """The method that was used to calculate the collision probability, ex.

    FOSTER-1992.
    """

    comments: Optional[str] = None
    """Additional notes from data providers."""

    concern_notes: Optional[str] = FieldInfo(alias="concernNotes", default=None)
    """Emergency comments."""

    cr_ao_m1: Optional[float] = FieldInfo(alias="crAoM1", default=None)
    """
    The value of the primary (object1) Area times the solar radiation pressure
    coefficient over the object Mass, expressed in m^2/kg, used for propagation of
    the primary state vector and covariance to TCA. This parameter is sometimes
    referred to as AGOM.
    """

    cr_ao_m2: Optional[float] = FieldInfo(alias="crAoM2", default=None)
    """
    The value of the secondary (object2) Area times the solar radiation pressure
    coefficient over the object Mass, expressed in m^2/kg, used for propagation of
    the primary state vector and covariance to TCA. This parameter is sometimes
    referred to as AGOM.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """Application user who created the row in the database."""

    descriptor: Optional[str] = None
    """Optional source-provided and searchable metadata or descriptor of the data."""

    ephem_name1: Optional[str] = FieldInfo(alias="ephemName1", default=None)
    """
    The filename of the primary (object1) ephemeris used in the screening, if
    applicable.
    """

    ephem_name2: Optional[str] = FieldInfo(alias="ephemName2", default=None)
    """
    The filename of the secondary (object2) ephemeris used in the screening, if
    applicable.
    """

    es_id1: Optional[str] = FieldInfo(alias="esId1", default=None)
    """
    Unique identifier of the parent Ephemeris Set of the primary (object1) ephemeris
    used in the screening, if applicable.
    """

    es_id2: Optional[str] = FieldInfo(alias="esId2", default=None)
    """
    Unique identifier of the parent Ephemeris Set of the secondary (object2)
    ephemeris used in the screening, if applicable.
    """

    event_id: Optional[str] = FieldInfo(alias="eventId", default=None)
    """Optional source-provided identifier for this conjunction event.

    In the case where multiple conjunction records are submitted for the same event,
    this field can be used to tie them together to the same event.
    """

    id_on_orbit1: Optional[str] = FieldInfo(alias="idOnOrbit1", default=None)
    """Unique identifier of the primary satellite on-orbit object, if correlated."""

    id_on_orbit2: Optional[str] = FieldInfo(alias="idOnOrbit2", default=None)
    """Unique identifier of the secondary satellite on-orbit object, if correlated."""

    id_state_vector1: Optional[str] = FieldInfo(alias="idStateVector1", default=None)
    """Optional ID of the UDL State Vector at TCA of the primary object.

    When performing a create, this id will be ignored in favor of the UDL generated
    id of the stateVector1.
    """

    id_state_vector2: Optional[str] = FieldInfo(alias="idStateVector2", default=None)
    """Optional ID of the UDL State Vector at TCA of the secondary object.

    When performing a create, this id will be ignored in favor of the UDL generated
    id of the stateVector2.
    """

    large_cov_warning: Optional[bool] = FieldInfo(alias="largeCovWarning", default=None)
    """
    Used for probability of collision calculation, not Warning/Alert Threshold
    notifications.
    """

    large_rel_pos_warning: Optional[bool] = FieldInfo(alias="largeRelPosWarning", default=None)
    """
    Used for probability of collision calculation, not Warning/Alert Threshold
    notifications.
    """

    last_ob_time1: Optional[datetime] = FieldInfo(alias="lastObTime1", default=None)
    """Time of last positive metric observation of the primary satellite."""

    last_ob_time2: Optional[datetime] = FieldInfo(alias="lastObTime2", default=None)
    """Time of last positive metric observation of the secondary satellite."""

    message_for: Optional[str] = FieldInfo(alias="messageFor", default=None)
    """Spacecraft name(s) for which the Collision message is provided."""

    message_id: Optional[str] = FieldInfo(alias="messageId", default=None)
    """JMS provided message ID link."""

    miss_distance: Optional[float] = FieldInfo(alias="missDistance", default=None)
    """Distance between objects at Time of Closest Approach (TCA) in meters."""

    orig_id_on_orbit1: Optional[str] = FieldInfo(alias="origIdOnOrbit1", default=None)
    """Optional place holder for an OnOrbit ID that does not exist in UDL."""

    orig_id_on_orbit2: Optional[str] = FieldInfo(alias="origIdOnOrbit2", default=None)
    """Optional place holder for an OnOrbit ID that does not exist in UDL."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    originator: Optional[str] = None
    """
    Creating agency or owner/operator (may be different than provider who submitted
    the conjunction message).
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    owner_contacted: Optional[bool] = FieldInfo(alias="ownerContacted", default=None)
    """Flag indicating if owner was contacted."""

    penetration_level_sigma: Optional[float] = FieldInfo(alias="penetrationLevelSigma", default=None)
    """Penetration Level Sigma."""

    raw_file_uri: Optional[str] = FieldInfo(alias="rawFileURI", default=None)
    """Link to filename associated with JMS record."""

    rel_pos_n: Optional[float] = FieldInfo(alias="relPosN", default=None)
    """Distance between objects along Normal vector in meters."""

    rel_pos_r: Optional[float] = FieldInfo(alias="relPosR", default=None)
    """
    Distance between objects along Radial Vector at Time of Closest Approach in
    meters.
    """

    rel_pos_t: Optional[float] = FieldInfo(alias="relPosT", default=None)
    """Distance between objects along Tangential Vector in meters."""

    rel_vel_mag: Optional[float] = FieldInfo(alias="relVelMag", default=None)
    """
    Closing velocity magnitude (relative speed) at Time of Closest Approach in
    meters/sec.
    """

    rel_vel_n: Optional[float] = FieldInfo(alias="relVelN", default=None)
    """Closing velocity between objects along Normal Vector in meters/sec."""

    rel_vel_r: Optional[float] = FieldInfo(alias="relVelR", default=None)
    """
    Closing velocity between objects along Radial Vector at Time of Closest Approach
    in meters/sec.
    """

    rel_vel_t: Optional[float] = FieldInfo(alias="relVelT", default=None)
    """Closing velocity between objects along Tangential Vector in meters/sec."""

    sat_no1: Optional[int] = FieldInfo(alias="satNo1", default=None)
    """Satellite/catalog number of the target on-orbit primary object."""

    sat_no2: Optional[int] = FieldInfo(alias="satNo2", default=None)
    """Satellite/catalog number of the target on-orbit secondary object."""

    screen_entry_time: Optional[datetime] = FieldInfo(alias="screenEntryTime", default=None)
    """The start time in UTC of the screening period for the conjunction assessment."""

    screen_exit_time: Optional[datetime] = FieldInfo(alias="screenExitTime", default=None)
    """The stop time in UTC of the screening period for the conjunction assessment."""

    screen_volume_x: Optional[float] = FieldInfo(alias="screenVolumeX", default=None)
    """
    Component size of screen in X component of RTN (Radial, Transverse and Normal)
    frame in meters.
    """

    screen_volume_y: Optional[float] = FieldInfo(alias="screenVolumeY", default=None)
    """
    Component size of screen in Y component of RTN (Radial, Transverse and Normal)
    frame in meters.
    """

    screen_volume_z: Optional[float] = FieldInfo(alias="screenVolumeZ", default=None)
    """
    Component size of screen in Z component of RTN (Radial, Transverse and Normal)
    frame in meters.
    """

    small_cov_warning: Optional[bool] = FieldInfo(alias="smallCovWarning", default=None)
    """
    Used for probability of collision calculation, not Warning/Alert Threshold
    notifications.
    """

    small_rel_vel_warning: Optional[bool] = FieldInfo(alias="smallRelVelWarning", default=None)
    """
    Used for probability of collision calculation, not Warning/Alert Threshold
    notifications.
    """

    state_dept_notified: Optional[bool] = FieldInfo(alias="stateDeptNotified", default=None)
    """Flag indicating if State department was notified."""

    state_vector1: Optional[StateVector1] = FieldInfo(alias="stateVector1", default=None)
    """
    This service provides operations for querying and manipulation of state vectors
    for OnOrbit objects. State vectors are cartesian vectors of position (r) and
    velocity (v) that, together with their time (epoch) (t), uniquely determine the
    trajectory of the orbiting body in space. J2000 is the preferred coordinate
    frame for all state vector positions/velocities in UDL, but in some cases data
    may be in another frame depending on the provider and/or datatype. Please see
    the 'Discover' tab in the storefront to confirm coordinate frames by data
    provider.
    """

    state_vector2: Optional[StateVector2] = FieldInfo(alias="stateVector2", default=None)
    """
    This service provides operations for querying and manipulation of state vectors
    for OnOrbit objects. State vectors are cartesian vectors of position (r) and
    velocity (v) that, together with their time (epoch) (t), uniquely determine the
    trajectory of the orbiting body in space. J2000 is the preferred coordinate
    frame for all state vector positions/velocities in UDL, but in some cases data
    may be in another frame depending on the provider and/or datatype. Please see
    the 'Discover' tab in the storefront to confirm coordinate frames by data
    provider.
    """

    thrust_accel1: Optional[float] = FieldInfo(alias="thrustAccel1", default=None)
    """
    The primary (object1) acceleration, expressed in m/s^2, due to in-track thrust
    used to propagate the primary state vector and covariance to TCA.
    """

    thrust_accel2: Optional[float] = FieldInfo(alias="thrustAccel2", default=None)
    """
    The secondary (object2) acceleration, expressed in m/s^2, due to in-track thrust
    used to propagate the primary state vector and covariance to TCA.
    """

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    type: Optional[str] = None
    """The type of data represented in this conjunction record (e.g.

    CONJUNCTION, CARA-WORKLIST, etc.). If type is null the record is assumed to be a
    Conjunction.
    """

    uvw_warn: Optional[bool] = FieldInfo(alias="uvwWarn", default=None)
    """
    Used for probability of collision calculation, not Warning/Alert Threshold
    notifications.
    """

    vol_entry_time: Optional[datetime] = FieldInfo(alias="volEntryTime", default=None)
    """
    The time at which the secondary (object2) enters the screening volume, in ISO
    8601 UTC format with microsecond precision.
    """

    vol_exit_time: Optional[datetime] = FieldInfo(alias="volExitTime", default=None)
    """
    The time at which the secondary (object2) exits the screening volume, in ISO
    8601 UTC format with microsecond precision.
    """

    vol_shape: Optional[str] = FieldInfo(alias="volShape", default=None)
    """The shape (BOX, ELLIPSOID) of the screening volume."""
