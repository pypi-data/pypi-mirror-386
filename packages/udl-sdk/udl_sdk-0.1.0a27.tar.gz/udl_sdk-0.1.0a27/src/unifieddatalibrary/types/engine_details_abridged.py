# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["EngineDetailsAbridged"]


class EngineDetailsAbridged(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_engine: str = FieldInfo(alias="idEngine")
    """Identifier of the parent engine record."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    burn_time: Optional[float] = FieldInfo(alias="burnTime", default=None)
    """Launch engine maximum burn time in seconds."""

    chamber_pressure: Optional[float] = FieldInfo(alias="chamberPressure", default=None)
    """Engine chamber pressure in bars."""

    characteristic_type: Optional[str] = FieldInfo(alias="characteristicType", default=None)
    """Engine characteristic type (e.g.

    Electric, Mono-propellant, Bi-propellant, etc.).
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    cycle_type: Optional[str] = FieldInfo(alias="cycleType", default=None)
    """Engine cycle type (e.g.

    Electrostatic Ion, Pressure Fed, Hall, Catalytic Decomposition, etc.).
    """

    family: Optional[str] = None
    """Engine type or family."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Organization ID of the engine manufacturer."""

    max_firings: Optional[int] = FieldInfo(alias="maxFirings", default=None)
    """Engine maximum number of firings."""

    notes: Optional[str] = None
    """Notes/Description of the engine."""

    nozzle_expansion_ratio: Optional[float] = FieldInfo(alias="nozzleExpansionRatio", default=None)
    """Engine nozzle expansion ratio."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    oxidizer: Optional[str] = None
    """Oxidizer type (e.g. Nitrogen Tetroxide, Liquid Oxygen, etc)."""

    propellant: Optional[str] = None
    """Propellant/fuel type of the engine (e.g.

    Liquid Hydrogen, Kerosene, Aerozine, etc).
    """

    sea_level_thrust: Optional[float] = FieldInfo(alias="seaLevelThrust", default=None)
    """Engine maximum thrust at sea level in Kilo-Newtons."""

    specific_impulse: Optional[float] = FieldInfo(alias="specificImpulse", default=None)
    """Launch engine specific impulse in seconds."""

    vacuum_thrust: Optional[float] = FieldInfo(alias="vacuumThrust", default=None)
    """Engine maximum thrust in a vacuum in Kilo-Newtons."""
