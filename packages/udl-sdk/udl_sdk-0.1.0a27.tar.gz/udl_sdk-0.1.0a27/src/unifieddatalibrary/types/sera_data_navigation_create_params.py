# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["SeraDataNavigationCreateParams"]


class SeraDataNavigationCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    spacecraft_id: Required[Annotated[str, PropertyInfo(alias="spacecraftId")]]
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    area_coverage: Annotated[str, PropertyInfo(alias="areaCoverage")]
    """Area of coverage, e.g. Worldwide, India, etc."""

    clock_type: Annotated[str, PropertyInfo(alias="clockType")]
    """Type of clock, e.g. Rubidium, Hydrogen Maser, etc."""

    hosted_for_company_org_id: Annotated[str, PropertyInfo(alias="hostedForCompanyOrgId")]
    """Hosted for company/Organization Id."""

    id_navigation: Annotated[str, PropertyInfo(alias="idNavigation")]
    """UUID of the parent Navigation record."""

    location_accuracy: Annotated[float, PropertyInfo(alias="locationAccuracy")]
    """Location accuracy in meters."""

    manufacturer_org_id: Annotated[str, PropertyInfo(alias="manufacturerOrgId")]
    """Manufacturer Organization Id."""

    mode_frequency: Annotated[str, PropertyInfo(alias="modeFrequency")]
    """Frequency for this payload."""

    modes: str
    """Modes of operation."""

    name: str
    """Sensor name from Seradata, e.g. WAAS GEO-5, etc."""

    notes: str
    """Payload notes."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    partner_spacecraft_id: Annotated[str, PropertyInfo(alias="partnerSpacecraftId")]
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    payload_type: Annotated[str, PropertyInfo(alias="payloadType")]
    """Navigation payload type, e.g. WAAS, GAGAN, etc."""
