# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SeraDataEarlyWarningListResponse"]


class SeraDataEarlyWarningListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    best_resolution: Optional[float] = FieldInfo(alias="bestResolution", default=None)
    """Best resolution for this IR in meters."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    earth_pointing: Optional[bool] = FieldInfo(alias="earthPointing", default=None)
    """Is the sensor Earth Pointing."""

    frequency_limits: Optional[str] = FieldInfo(alias="frequencyLimits", default=None)
    """Frequency Limits for this IR."""

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this IR."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this IR."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_ir: Optional[str] = FieldInfo(alias="idIR", default=None)
    """UUID of the parent IR record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    missile_launch_phase_detection_ability: Optional[str] = FieldInfo(
        alias="missileLaunchPhaseDetectionAbility", default=None
    )
    """Missile Launch Phase Detection Ability."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g. Infra red telescope, Schmidt Telescope, etc."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    partner_spacecraft_id: Optional[str] = FieldInfo(alias="partnerSpacecraftId", default=None)
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    payload_notes: Optional[str] = FieldInfo(alias="payloadNotes", default=None)
    """Payload notes."""

    spectral_bands: Optional[str] = FieldInfo(alias="spectralBands", default=None)
    """Spectral Bands, e.g. Infra-Red."""
