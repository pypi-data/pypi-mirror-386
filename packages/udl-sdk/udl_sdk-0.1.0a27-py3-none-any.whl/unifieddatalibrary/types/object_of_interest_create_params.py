# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["ObjectOfInterestCreateParams"]


class ObjectOfInterestCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_on_orbit: Required[Annotated[str, PropertyInfo(alias="idOnOrbit")]]
    """UUID of the parent Onorbit record."""

    sensor_tasking_start_time: Required[
        Annotated[Union[str, datetime], PropertyInfo(alias="sensorTaskingStartTime", format="iso8601")]
    ]
    """Sensor tasking start time for object of interest."""

    source: Required[str]
    """Source of the data."""

    status_date: Required[Annotated[Union[str, datetime], PropertyInfo(alias="statusDate", format="iso8601")]]
    """Time of last status change of the object of interest event."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    affected_objects: Annotated[SequenceNotStr[str], PropertyInfo(alias="affectedObjects")]
    """
    Optional array of Onorbit IDs (idOnOrbit) representing satellites potentially
    affected by this object of interest.
    """

    apogee: float
    """Last reported apogee.

    The Orbit point furthest from the center of the earth in kilometers.
    """

    arg_of_perigee: Annotated[float, PropertyInfo(alias="argOfPerigee")]
    """Last reported argument of perigee.

    The argument of perigee is the angle in degrees formed between the perigee and
    the ascending node. If the perigee would occur at the ascending node, the
    argument of perigee would be 0.
    """

    b_star: Annotated[float, PropertyInfo(alias="bStar")]
    """
    Last reported drag term for SGP4 orbital model, used for calculating decay
    constants for altitude, eccentricity etc, measured in inverse earth radii.
    """

    delta_ts: Annotated[Iterable[float], PropertyInfo(alias="deltaTs")]
    """Possible delta time applications for the object of interest, in seconds."""

    delta_vs: Annotated[Iterable[float], PropertyInfo(alias="deltaVs")]
    """Possible delta V applications for the object of interest, in km/sec."""

    description: str
    """Description of the object of interest event."""

    eccentricity: float
    """Last reported eccentricity of the object.

    The orbital eccentricity of an astronomical object is a parameter that
    determines the amount by which its orbit around another body deviates from a
    perfect circle. A value of 0 is a circular orbit, values between 0 and 1 form an
    elliptic orbit, 1 is a parabolic escape orbit, and greater than 1 is a
    hyperbolic escape orbit.
    """

    elset_epoch: Annotated[Union[str, datetime], PropertyInfo(alias="elsetEpoch", format="iso8601")]
    """
    Last reported elset epoch time in ISO 8601 UTC time, with microsecond precision.
    """

    inclination: float
    """Last reported inclination of the object.

    Inclination is the angle between the equator and the orbit when looking from the
    center of the Earth. If the orbit went exactly around the equator from left to
    right, then the inclination would be 0. The inclination ranges from 0 to 180
    degrees.
    """

    last_ob_time: Annotated[Union[str, datetime], PropertyInfo(alias="lastObTime", format="iso8601")]
    """
    Last reported observation time in ISO 8601 UTC time, with microsecond precision.
    """

    mean_anomaly: Annotated[float, PropertyInfo(alias="meanAnomaly")]
    """Last reported meanAnomaly.

    Mean anomoly is where the satellite is in its orbital path. The mean anomaly
    ranges from 0 to 360 degrees. The mean anomaly is referenced to the perigee. If
    the satellite were at the perigee, the mean anomaly would be 0.
    """

    mean_motion: Annotated[float, PropertyInfo(alias="meanMotion")]
    """Last reported mean motion of the object.

    Mean motion is the angular speed required for a body to complete one orbit,
    assuming constant speed in a circular orbit which completes in the same time as
    the variable speed, elliptical orbit of the actual body. Measured in revolutions
    per day.
    """

    mean_motion_d_dot: Annotated[float, PropertyInfo(alias="meanMotionDDot")]
    """Last reported 2nd derivative of the mean motion with respect to time.

    Units are revolutions per day cubed.
    """

    mean_motion_dot: Annotated[float, PropertyInfo(alias="meanMotionDot")]
    """Last reported 1st derivative of the mean motion with respect to time.

    Units are revolutions per day squared.
    """

    missed_ob_time: Annotated[Union[str, datetime], PropertyInfo(alias="missedObTime", format="iso8601")]
    """
    The time at which an attempted observation of the object of interest noticed it
    was missing, in ISO 8601 UTC time, with microsecond precision.
    """

    name: str
    """Unique name of the object of interest event."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    perigee: float
    """Last reported perigee.

    The orbit point nearest to the center of the earth in kilometers.
    """

    period: float
    """Last reported orbit period.

    Period of the orbit is equal to inverse of mean motion.
    """

    priority: int
    """Priority of the object of interest as an integer (1=highest priority)."""

    raan: float
    """Last reported raan.

    Right ascension of the ascending node, or RAAN is the angle as measured in
    degrees eastwards (or, as seen from the north, counterclockwise) from the First
    Point of Aries to the ascending node, which is where the orbit crosses the
    equator when traveling north.
    """

    rev_no: Annotated[int, PropertyInfo(alias="revNo")]
    """The last reported revolution number.

    The value is incremented when a satellite crosses the equator on an ascending
    pass.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/Catalog number of the target on-orbit object."""

    semi_major_axis: Annotated[float, PropertyInfo(alias="semiMajorAxis")]
    """
    Last reported semi major axis, which is the sum of the periapsis and apoapsis
    distances divided by two. For circular orbits, the semimajor axis is the
    distance between the centers of the bodies, not the distance of the bodies from
    the center of mass.
    """

    sensor_tasking_stop_time: Annotated[
        Union[str, datetime], PropertyInfo(alias="sensorTaskingStopTime", format="iso8601")
    ]
    """Sensor tasking stop time for object of interest."""

    status: str
    """Status of the object of interest event (e.g. OPEN, CLOSED, CANCELLED)."""

    sv_epoch: Annotated[Union[str, datetime], PropertyInfo(alias="svEpoch", format="iso8601")]
    """
    Last reported state vector epoch time in ISO 8601 UTC time, with microsecond
    precision.
    """

    x: float
    """Last reported x position of the object in km, in J2000 coordinates."""

    xvel: float
    """Last reported x velocity of the object in km/sec, in J2000 coordinates."""

    y: float
    """Last reported y position of the object in km, in J2000 coordinates."""

    yvel: float
    """Last reported y velocity of the object in km/sec, in J2000 coordinates."""

    z: float
    """Last reported z position of the object in km, in J2000 coordinates."""

    zvel: float
    """Last reported z velocity of the object in km/sec, in J2000 coordinates."""
