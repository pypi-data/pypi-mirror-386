# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["OnorbiteventUpdateParams"]


class OnorbiteventUpdateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    event_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="eventTime", format="iso8601")]]
    """Date/Time of the event.

    See eventTimeNotes for remarks on the accuracy of the date time.
    """

    source: Required[str]
    """Source of the data."""

    body_id: Annotated[str, PropertyInfo(alias="id")]
    """Unique identifier of the record, auto-generated by the system."""

    achieved_flight_phase: Annotated[str, PropertyInfo(alias="achievedFlightPhase")]
    """Achieved phase of flight prior to the event."""

    age_at_event: Annotated[float, PropertyInfo(alias="ageAtEvent")]
    """Spacecraft age at the event in years."""

    capability_loss: Annotated[float, PropertyInfo(alias="capabilityLoss")]
    """Spacecraft capability loss incurred, as a fraction of 1."""

    capability_loss_notes: Annotated[str, PropertyInfo(alias="capabilityLossNotes")]
    """Notes on capability loss at the time of event."""

    capacity_loss: Annotated[float, PropertyInfo(alias="capacityLoss")]
    """Spacecraft capacity loss incurred, as a fraction of 1."""

    consequential_equipment_failure: Annotated[str, PropertyInfo(alias="consequentialEquipmentFailure")]
    """
    Additional equipment which failed as a result of faulty equipment on the
    spacecraft during the event.
    """

    declassification_date: Annotated[Union[str, datetime], PropertyInfo(alias="declassificationDate", format="iso8601")]
    """The declassification date of this data, in ISO 8601 UTC format."""

    declassification_string: Annotated[str, PropertyInfo(alias="declassificationString")]
    """Declassification string of this data."""

    derived_from: Annotated[str, PropertyInfo(alias="derivedFrom")]
    """
    The sources or SCG references from which the classification of this data is
    derived.
    """

    description: str
    """Notes/description of the event."""

    equipment_at_fault: Annotated[str, PropertyInfo(alias="equipmentAtFault")]
    """Equipment on the spacecraft which caused the event."""

    equipment_causing_loss_notes: Annotated[str, PropertyInfo(alias="equipmentCausingLossNotes")]
    """Additional notes on the equipment causing the event/loss."""

    equipment_part_at_fault: Annotated[str, PropertyInfo(alias="equipmentPartAtFault")]
    """Specific part of the equipment on the spacecraft which caused the event."""

    equipment_type_at_fault: Annotated[str, PropertyInfo(alias="equipmentTypeAtFault")]
    """Type of the equipment on the spacecraft which caused the event."""

    event_result: Annotated[str, PropertyInfo(alias="eventResult")]
    """The result of the reported event."""

    event_time_notes: Annotated[str, PropertyInfo(alias="eventTimeNotes")]
    """Notes/remarks on the validity/accuracy of the eventTime."""

    event_type: Annotated[str, PropertyInfo(alias="eventType")]
    """The type of on-orbit event being reported."""

    geo_position: Annotated[float, PropertyInfo(alias="geoPosition")]
    """GEO position longitude at event time if applicable. Negative values are west."""

    id_on_orbit: Annotated[str, PropertyInfo(alias="idOnOrbit")]
    """Unique identifier of the on-orbit object for this event."""

    inclined: bool
    """Boolean indicating if the spacecraft is inclined."""

    injured: int
    """Number of humans injured in the event."""

    insurance_carried_notes: Annotated[str, PropertyInfo(alias="insuranceCarriedNotes")]
    """Additional insurance notes on coverages at the time of event."""

    insurance_loss: Annotated[float, PropertyInfo(alias="insuranceLoss")]
    """Insurance loss incurred, as a fraction of 1."""

    insurance_loss_notes: Annotated[str, PropertyInfo(alias="insuranceLossNotes")]
    """Additional insurance notes if the event is an official loss."""

    killed: int
    """Number of humans killed in the event."""

    lessee_org_id: Annotated[str, PropertyInfo(alias="lesseeOrgId")]
    """Unique identifier of the organization which leases this on-orbit spacecraft."""

    life_lost: Annotated[float, PropertyInfo(alias="lifeLost")]
    """Spacecraft life lost due to the event as a percent/fraction of 1."""

    net_amount: Annotated[float, PropertyInfo(alias="netAmount")]
    """Net amount of the insurance claim for the event, in USD."""

    object_status: Annotated[str, PropertyInfo(alias="objectStatus")]
    """The status of the on-orbit object."""

    occurrence_flight_phase: Annotated[str, PropertyInfo(alias="occurrenceFlightPhase")]
    """Phase of flight during which the event occurred."""

    official_loss_date: Annotated[Union[str, datetime], PropertyInfo(alias="officialLossDate", format="iso8601")]
    """Date time of official loss of the spacecraft."""

    operated_on_behalf_of_org_id: Annotated[str, PropertyInfo(alias="operatedOnBehalfOfOrgId")]
    """
    Unique identifier of the organization on whose behalf the on-orbit spacecraft is
    operated.
    """

    operator_org_id: Annotated[str, PropertyInfo(alias="operatorOrgId")]
    """
    Organization ID of the operator of the on-orbit spacecraft at the time of the
    event.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Original object ID or Catalog Number provided by source (may not map to an
    existing idOnOrbit in UDL).
    """

    owner_org_id: Annotated[str, PropertyInfo(alias="ownerOrgId")]
    """
    Organization ID of the owner of the on-orbit spacecraft at the time of the
    event.
    """

    plane_number: Annotated[str, PropertyInfo(alias="planeNumber")]
    """GEO slot plane number/designator of the spacecraft at event time."""

    plane_slot: Annotated[str, PropertyInfo(alias="planeSlot")]
    """GEO plane slot of the spacecraft at event time."""

    position_status: Annotated[str, PropertyInfo(alias="positionStatus")]
    """Position status of the spacecraft at event time (e.g.

    Stable, Drifting/Tumbling, etc).
    """

    remarks: str
    """Additional remarks on the event description."""

    satellite_position: Annotated[str, PropertyInfo(alias="satellitePosition")]
    """Description of the satellite orbital position or regime."""

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/Catalog number of the target on-orbit object."""

    stage_at_fault: Annotated[str, PropertyInfo(alias="stageAtFault")]
    """Faulty stage of flight for the event."""

    third_party_insurance_loss: Annotated[float, PropertyInfo(alias="thirdPartyInsuranceLoss")]
    """Insurance loss incurred by 3rd party insurance, in USD."""

    underlying_cause: Annotated[str, PropertyInfo(alias="underlyingCause")]
    """Underlying cause of the event."""

    until_time: Annotated[Union[str, datetime], PropertyInfo(alias="untilTime", format="iso8601")]
    """Maximum validity time of the event."""
