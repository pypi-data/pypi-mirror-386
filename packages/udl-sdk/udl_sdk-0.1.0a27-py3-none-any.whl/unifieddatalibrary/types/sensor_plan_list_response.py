# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SensorPlanListResponse"]


class SensorPlanListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    rec_type: str = FieldInfo(alias="recType")
    """The type of records that comprise this parent set (COLLECT, CONTACT)."""

    source: str
    """Source of the data."""

    start_time: datetime = FieldInfo(alias="startTime")
    """The start time of the plan or schedule, in ISO 8601 UTC format."""

    type: str
    """The type of this sensor plan/schedule (PLAN, REQUEST, SCHEDULE)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    customer: Optional[str] = None
    """The customer for this plan or schedule."""

    end_time: Optional[datetime] = FieldInfo(alias="endTime", default=None)
    """The end time of the plan or schedule, in ISO 8601 UTC format."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """
    Unique identifier of the requested/schedule/planned sensor associated with this
    request.
    """

    name: Optional[str] = None
    """Name associated with this plan or schedule."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_sensor_id: Optional[str] = FieldInfo(alias="origSensorId", default=None)
    """
    Optional identifier provided by the source to indicate the sensor identifier
    requested/scheduled/planned for this request. This may be an internal identifier
    and not necessarily a valid sensor ID.
    """

    purpose: Optional[str] = None
    """The purpose/description of this plan or schedule."""

    req_total: Optional[int] = FieldInfo(alias="reqTotal", default=None)
    """The total number of requests contained in this plan or schedule.

    Value of this field must match the size of collectRequest list if the list is
    provided and can be null or any value otherwise.
    """

    sen_network: Optional[str] = FieldInfo(alias="senNetwork", default=None)
    """The sensor or ground network associated with this plan or schedule."""

    status: Optional[str] = None
    """
    The status of this plan or schedule (ACCEPTED, APPROVED, COMPLETED, PROPOSED,
    REJECTED, REQUESTED, SCHEDULED).
    """
