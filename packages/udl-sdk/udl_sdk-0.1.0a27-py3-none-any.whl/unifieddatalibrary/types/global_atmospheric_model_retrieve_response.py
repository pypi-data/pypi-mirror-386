# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["GlobalAtmosphericModelRetrieveResponse"]


class GlobalAtmosphericModelRetrieveResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    ts: datetime
    """Target time of the model in ISO 8601 UTC format with millisecond precision."""

    type: str
    """Type of data associated with this record (e.g.

    Global Total Electron Density, Global Total Electron Content).
    """

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    cadence: Optional[int] = None
    """Model execution cadence, in minutes."""

    checksum_value: Optional[str] = FieldInfo(alias="checksumValue", default=None)
    """MD5 value of the data file.

    If not provided, the ingest/create operation will automatically generate the
    value.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    data_source_identifier: Optional[str] = FieldInfo(alias="dataSourceIdentifier", default=None)
    """
    A unique identification code or label assigned to a particular source from which
    atmospheric data originates.
    """

    end_alt: Optional[float] = FieldInfo(alias="endAlt", default=None)
    """Ending altitude of model outputs, in kilometers."""

    end_lat: Optional[float] = FieldInfo(alias="endLat", default=None)
    """WGS-84 ending latitude of model output, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    end_lon: Optional[float] = FieldInfo(alias="endLon", default=None)
    """WGS-84 ending longitude of model output, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    filename: Optional[str] = None
    """The file name of the uploaded file."""

    filesize: Optional[int] = None
    """The uploaded file size, in bytes.

    The maximum file size for this service is 104857600 bytes (100MB). Files
    exceeding the maximum size will be rejected.
    """

    num_alt: Optional[int] = FieldInfo(alias="numAlt", default=None)
    """Number of altitude points."""

    num_lat: Optional[int] = FieldInfo(alias="numLat", default=None)
    """Number of latitude points."""

    num_lon: Optional[int] = FieldInfo(alias="numLon", default=None)
    """Number of longitude points."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    report_time: Optional[datetime] = FieldInfo(alias="reportTime", default=None)
    """
    The time that this record was created, in ISO 8601 UTC format with millisecond
    precision.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    start_alt: Optional[float] = FieldInfo(alias="startAlt", default=None)
    """Starting altitude of model outputs, in kilometers."""

    start_lat: Optional[float] = FieldInfo(alias="startLat", default=None)
    """WGS-84 starting latitude of model output, in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    start_lon: Optional[float] = FieldInfo(alias="startLon", default=None)
    """WGS-84 starting longitude of model output, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    state: Optional[str] = None
    """
    State value indicating whether the values in this record are PREDICTED or
    OBSERVED.
    """

    step_lat: Optional[float] = FieldInfo(alias="stepLat", default=None)
    """Separation in latitude between subsequent model outputs, in degrees."""

    step_lon: Optional[float] = FieldInfo(alias="stepLon", default=None)
    """Separation in longitude between subsequent model outputs, in degrees."""
