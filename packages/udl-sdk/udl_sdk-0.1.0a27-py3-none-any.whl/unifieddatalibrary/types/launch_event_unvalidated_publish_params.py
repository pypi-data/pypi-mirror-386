# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo

__all__ = ["LaunchEventUnvalidatedPublishParams", "Body"]


class LaunchEventUnvalidatedPublishParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    msg_create_date: Required[Annotated[Union[str, datetime], PropertyInfo(alias="msgCreateDate", format="iso8601")]]
    """Timestamp of the originating message in ISO8601 UTC format."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    be_number: Annotated[str, PropertyInfo(alias="beNumber")]
    """The Basic Encyclopedia Number, if applicable."""

    declassification_date: Annotated[Union[str, datetime], PropertyInfo(alias="declassificationDate", format="iso8601")]
    """The declassification date of this data, in ISO 8601 UTC format."""

    declassification_string: Annotated[str, PropertyInfo(alias="declassificationString")]
    """Declassification string of this data."""

    derived_from: Annotated[str, PropertyInfo(alias="derivedFrom")]
    """
    The sources or SCG references from which the classification of this data is
    derived.
    """

    launch_date: Annotated[Union[str, datetime], PropertyInfo(alias="launchDate", format="iso8601")]
    """The launch date, in ISO8601 UTC format."""

    launch_facility_name: Annotated[str, PropertyInfo(alias="launchFacilityName")]
    """The Launch facility name."""

    launch_failure_code: Annotated[str, PropertyInfo(alias="launchFailureCode")]
    """The DISOB launch Failure Code, if applicable."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """Optional target-id, if missing in UDL."""

    o_suffix: Annotated[str, PropertyInfo(alias="oSuffix")]
    """The OSuffix, if applicable."""

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/catalog number of the target on-orbit object."""
