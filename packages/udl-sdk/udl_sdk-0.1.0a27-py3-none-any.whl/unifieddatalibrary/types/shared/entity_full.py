# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import date, datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from ..._models import BaseModel
from .status_full import StatusFull
from .rf_band_full import RfBandFull
from .location_full import LocationFull
from .operatingunit_full import OperatingunitFull
from .onorbit_antenna_full import OnorbitAntennaFull
from .onorbit_battery_full import OnorbitBatteryFull
from .onorbit_details_full import OnorbitDetailsFull
from .onorbit_thruster_full import OnorbitThrusterFull
from .onorbit_solar_array_full import OnorbitSolarArrayFull

__all__ = ["EntityFull", "OnOrbit"]


class OnOrbit(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    sat_no: int = FieldInfo(alias="satNo")
    """Satellite/Catalog number of the target on-orbit object."""

    source: str
    """Source of the data."""

    alt_name: Optional[str] = FieldInfo(alias="altName", default=None)
    """Alternate name of the on-orbit object."""

    antennas: Optional[List[OnorbitAntennaFull]] = None
    """Read-only collection of antennas on this on-orbit object."""

    batteries: Optional[List[OnorbitBatteryFull]] = None
    """Read-only collection of batteries on this on-orbit object."""

    category: Optional[
        Literal[
            "Unknown",
            "On-Orbit",
            "Decayed",
            "Cataloged Without State",
            "Launch Nominal",
            "Analyst Satellite",
            "Cislunar",
            "Lunar",
            "Hyperbolic",
            "Heliocentric",
            "Interplanetary",
            "Lagrangian",
            "Docked",
        ]
    ] = None
    """Category of the on-orbit object.

    (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst
    Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary,
    Lagrangian, Docked).
    """

    common_name: Optional[str] = FieldInfo(alias="commonName", default=None)
    """Common name of the on-orbit object."""

    constellation: Optional[str] = None
    """Constellation to which this satellite belongs."""

    country_code: Optional[str] = FieldInfo(alias="countryCode", default=None)
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDL’s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    decay_date: Optional[datetime] = FieldInfo(alias="decayDate", default=None)
    """Date of decay."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """
    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites,
    auto-generated by the system.
    """

    intl_des: Optional[str] = FieldInfo(alias="intlDes", default=None)
    """
    International Designator, typically of the format YYYYLLLAAA, where YYYY is the
    launch year, LLL is the sequential launch number of that year, and AAA is an
    optional launch piece designator for the launch.
    """

    launch_date: Optional[date] = FieldInfo(alias="launchDate", default=None)
    """Date of launch."""

    launch_site_id: Optional[str] = FieldInfo(alias="launchSiteId", default=None)
    """Id of the associated launchSite entity."""

    lifetime_years: Optional[int] = FieldInfo(alias="lifetimeYears", default=None)
    """Estimated lifetime of the on-orbit payload, if known."""

    mission_number: Optional[str] = FieldInfo(alias="missionNumber", default=None)
    """Mission number of the on-orbit object."""

    object_type: Optional[Literal["ROCKET BODY", "DEBRIS", "PAYLOAD", "PLATFORM", "MANNED", "UNKNOWN"]] = FieldInfo(
        alias="objectType", default=None
    )
    """
    Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED,
    UNKNOWN.
    """

    onorbit_details: Optional[List[OnorbitDetailsFull]] = FieldInfo(alias="onorbitDetails", default=None)
    """Read-only collection of details for this on-orbit object."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    solar_arrays: Optional[List[OnorbitSolarArrayFull]] = FieldInfo(alias="solarArrays", default=None)
    """Read-only collection of solar arrays on this on-orbit object."""

    thrusters: Optional[List[OnorbitThrusterFull]] = None
    """Read-only collection of thrusters (engines) on this on-orbit object."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class EntityFull(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: str
    """Unique entity name."""

    source: str
    """Source of the data."""

    type: Literal[
        "AIRCRAFT",
        "BUS",
        "COMM",
        "IR",
        "LASEREMITTER",
        "NAVIGATION",
        "ONORBIT",
        "RFEMITTER",
        "SCIENTIFIC",
        "SENSOR",
        "SITE",
        "VESSEL",
    ]
    """
    The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR,
    LASEREMITTER, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).
    """

    country_code: Optional[str] = FieldInfo(alias="countryCode", default=None)
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDL’s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    id_entity: Optional[str] = FieldInfo(alias="idEntity", default=None)
    """Unique identifier of the record."""

    id_location: Optional[str] = FieldInfo(alias="idLocation", default=None)
    """Unique identifier of the entity location, if terrestrial/fixed."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """Onorbit identifier if this entity is part of an on-orbit object.

    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites.
    """

    id_operating_unit: Optional[str] = FieldInfo(alias="idOperatingUnit", default=None)
    """Unique identifier of the associated operating unit object."""

    location: Optional[LocationFull] = None
    """
    Model representation of a location, which is a specific fixed point on the earth
    and is used to denote the locations of fixed sensors, operating units, etc.
    """

    on_orbit: Optional[OnOrbit] = FieldInfo(alias="onOrbit", default=None)
    """Model object representing on-orbit objects or satellites in the system."""

    operating_unit: Optional[OperatingunitFull] = FieldInfo(alias="operatingUnit", default=None)
    """
    Model representation of a unit or organization which operates or controls a
    space-related Entity such as an on-orbit payload, a sensor, etc. A contact may
    belong to an organization.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    owner_type: Optional[Literal["Commercial", "Government", "Academic", "Consortium", "Other"]] = FieldInfo(
        alias="ownerType", default=None
    )
    """Type of organization which owns this entity (e.g.

    Commercial, Government, Academic, Consortium, etc).
    """

    rf_bands: Optional[List[RfBandFull]] = FieldInfo(alias="rfBands", default=None)
    """
    Read-only collection of RF bands utilized by this entity for communication
    and/or operation.
    """

    status_collection: Optional[List[StatusFull]] = FieldInfo(alias="statusCollection", default=None)
    """Read-only collection of statuses which can be collected by multiple sources."""

    taskable: Optional[bool] = None
    """Boolean indicating if this entity is taskable."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    urls: Optional[List[str]] = None
    """List of URLs to additional details/documents for this entity."""
