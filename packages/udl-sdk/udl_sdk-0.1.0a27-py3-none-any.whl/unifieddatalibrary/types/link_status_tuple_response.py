# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal, TypeAlias

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["LinkStatusTupleResponse", "LinkStatusTupleResponseItem"]


class LinkStatusTupleResponseItem(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    end_point1_lat: float = FieldInfo(alias="endPoint1Lat")
    """Latitude of link endpoint-1, WGS-84 in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    end_point1_lon: float = FieldInfo(alias="endPoint1Lon")
    """Longitude of link endpoint-1, WGS-84 longitude in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    end_point1_name: str = FieldInfo(alias="endPoint1Name")
    """The name or description of link endpoint-1, corresponding to beam-1."""

    end_point2_lat: float = FieldInfo(alias="endPoint2Lat")
    """Latitude of link endpoint-2, WGS-84 in degrees.

    -90 to 90 degrees (negative values south of equator).
    """

    end_point2_lon: float = FieldInfo(alias="endPoint2Lon")
    """Longitude of link endpoint-2, WGS-84 longitude in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    end_point2_name: str = FieldInfo(alias="endPoint2Name")
    """The name or description of link endpoint-2, corresponding to beam-2."""

    link_name: str = FieldInfo(alias="linkName")
    """The name or description of the link."""

    link_start_time: datetime = FieldInfo(alias="linkStartTime")
    """
    The link establishment time, or the time that the link becomes available for
    use, in ISO8601 UTC format.
    """

    link_stop_time: datetime = FieldInfo(alias="linkStopTime")
    """
    The link termination time, or the time that the link becomes unavailable for
    use, in ISO8601 UTC format.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    band: Optional[str] = None
    """The RF band employed by the link (e.g. MIL-KA, COM-KA, X-BAND, C-BAND, etc.)."""

    constellation: Optional[str] = None
    """The constellation name if the link is established over a LEO/MEO constellation.

    In this case, idOnOrbit1 and idOnOrbit2 will be null.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    data_rate1_to2: Optional[float] = FieldInfo(alias="dataRate1To2", default=None)
    """The endpoint-1 to endpoint-2 data rate, in kbps."""

    data_rate2_to1: Optional[float] = FieldInfo(alias="dataRate2To1", default=None)
    """The endpoint-2 to endpoint-1 data rate, in kbps."""

    id_beam1: Optional[str] = FieldInfo(alias="idBeam1", default=None)
    """The ID of beam-1 forming the link.

    In the case of two sat link, beam-1 corresponds to Sat-1.
    """

    id_beam2: Optional[str] = FieldInfo(alias="idBeam2", default=None)
    """The ID of beam-2 forming the link.

    In the case of two sat link, beam-2 corresponds to Sat-2.
    """

    id_on_orbit1: Optional[str] = FieldInfo(alias="idOnOrbit1", default=None)
    """Unique ID of the on-orbit satellite (Sat-1) forming the link.

    A null value for idOnOrbit1 indicates that the link is formed over a LEO/MEO
    constellation.
    """

    id_on_orbit2: Optional[str] = FieldInfo(alias="idOnOrbit2", default=None)
    """Unique ID of the on-orbit satellite (Sat-2) forming the link.

    A null value for idOnOrbit2 indicates either a link employing only Sat-1 or a
    link formed over a LEO/MEO constellation.
    """

    link_state: Optional[str] = FieldInfo(alias="linkState", default=None)
    """The state of the link (e.g. OK, DEGRADED-WEATHER, DEGRADED-EMI, etc.)."""

    link_type: Optional[str] = FieldInfo(alias="linkType", default=None)
    """The type of the link."""

    ops_cap: Optional[str] = FieldInfo(alias="opsCap", default=None)
    """The OPSCAP mission status of the system(s) forming the link."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    sat_no1: Optional[int] = FieldInfo(alias="satNo1", default=None)
    """Satellite/catalog number of the target on-orbit primary object."""

    sat_no2: Optional[int] = FieldInfo(alias="satNo2", default=None)
    """Satellite/catalog number of the target on-orbit secondary object."""

    snr: Optional[float] = None
    """Signal to noise ratio, in dB."""

    sys_cap: Optional[str] = FieldInfo(alias="sysCap", default=None)
    """The SYSCAP mission status of the system(s) forming the link."""


LinkStatusTupleResponse: TypeAlias = List[LinkStatusTupleResponseItem]
