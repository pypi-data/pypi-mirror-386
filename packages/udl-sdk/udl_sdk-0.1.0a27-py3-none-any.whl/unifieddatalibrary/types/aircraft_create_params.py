# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo
from .entity_ingest_param import EntityIngestParam

__all__ = ["AircraftCreateParams"]


class AircraftCreateParams(TypedDict, total=False):
    aircraft_mds: Required[Annotated[str, PropertyInfo(alias="aircraftMDS")]]
    """The aircraft Model Design Series (MDS) designation (e.g.

    E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as,
    but not constrained to, MIL-STD-6016 environment dependent specific type
    designations.
    """

    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    category: str
    """The category of aircraft (e.g. M = Military, C = Commercial)."""

    command: str
    """The Air Force major command (MAJCOM) overseeing the aircraft."""

    cruise_speed: Annotated[float, PropertyInfo(alias="cruiseSpeed")]
    """The cruise speed of the aircraft, in kilometers/hour."""

    dtd: str
    """Military data network data transfer device ID for this aircraft."""

    entity: EntityIngestParam
    """
    An entity is a generic representation of any object within a space/SSA system
    such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An
    entity can have an operating unit, a location (if terrestrial), and statuses.
    """

    id_entity: Annotated[str, PropertyInfo(alias="idEntity")]
    """ID of the parent entity for this aircraft."""

    max_speed: Annotated[float, PropertyInfo(alias="maxSpeed")]
    """The maximum air speed of the aircraft, in kilometers/hour."""

    min_req_runway_ft: Annotated[int, PropertyInfo(alias="minReqRunwayFt")]
    """The minimum length of runway required to land this aircraft, in feet.

    Note: The corresponding equivalent field is not converted by the UDL and may or
    may not be supplied by the provider. The provider/consumer is responsible for
    all unit conversions.
    """

    min_req_runway_m: Annotated[int, PropertyInfo(alias="minReqRunwayM")]
    """The minimum length of runway required to land this aircraft, in meters.

    Note: The corresponding equivalent field is not converted by the UDL and may or
    may not be supplied by the provider. The provider/consumer is responsible for
    all unit conversions.
    """

    nominal_ta_time: Annotated[int, PropertyInfo(alias="nominalTATime")]
    """The nominal turnaround time for this aircraft, in minutes."""

    notes: str
    """Optional notes/comments for this aircraft."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    owner: str
    """The wing or unit that owns the aircraft."""

    serial_number: Annotated[str, PropertyInfo(alias="serialNumber")]
    """Full serial number of the aircraft."""

    tail_number: Annotated[str, PropertyInfo(alias="tailNumber")]
    """The tail number of this aircraft."""
