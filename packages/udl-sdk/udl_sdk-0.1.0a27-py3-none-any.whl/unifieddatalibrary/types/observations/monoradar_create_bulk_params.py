# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from ..._types import SequenceNotStr
from ..._utils import PropertyInfo

__all__ = ["MonoradarCreateBulkParams", "Body"]


class MonoradarCreateBulkParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    msgfmt: Required[str]
    """Message format received (i.e. 'ASR9', 'CAT48', 'TPS70', etc..)."""

    msgts: Required[Annotated[Union[str, datetime], PropertyInfo(format="iso8601")]]
    """Message time, in ISO 8601 UTC format with microsecond precision.

    This is the time that the data message was released from the site.
    """

    msgtyp: Required[str]
    """Message report type received (i.e.

    'SRCH', 'BCN', 'REINF', 'BRTQC', 'PSR', etc..).
    """

    source: Required[str]
    """Source of the data."""

    ts: Required[Annotated[Union[str, datetime], PropertyInfo(format="iso8601")]]
    """Target detection time, in ISO 8601 UTC format with microsecond precision."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    acp: int
    """Azimuth Change Pulse count at target detection."""

    addr: str
    """Aircraft address (24-bits Mode S address) assigned uniquely to each aircraft."""

    af: bool
    """Flag indicating military message."""

    aims: bool
    """Flag indicating whether AIMS present."""

    alt3d: float
    """Measured height of the target, in km. (for 3D radars)."""

    artsqual: str
    """ARTS quality."""

    az: float
    """Target azimuth, measured from the observing site, in degrees from true North.

    If Azimuth Change Pulse (acp) count is provided, az represents the computed
    angle.
    """

    azdelt: float
    """Target azimuth delta between PSR and SSR (reference PSR-SSR), in degrees."""

    bcnhits: int
    """Number of beacon hits received on the target."""

    cartpos: Iterable[float]
    """Array of local 2d-cartesian [x, y] coordinates of target, in km."""

    cdm: str
    """Climbing/Descending mode indicator."""

    code7500: bool
    """7500 squawk present (hijack)."""

    code7600: bool
    """7600 squawk present (loss of comm)."""

    code7700: bool
    """7700 squawk present (general emergency)."""

    faa: bool
    """Flag indicating FAA/Civ message."""

    grndspd: float
    """Target ground speed, in meters/second."""

    hdng: float
    """Target heading, in degrees from true North at the target position."""

    id_sensor: Annotated[str, PropertyInfo(alias="idSensor")]
    """ID of the radar site or station providing the data."""

    m1: str
    """Mode-1 interrogation response (mission code)."""

    m1g: bool
    """Indicator that the mode-1 response was garbled."""

    m1v: str
    """Status of the mode-1 validity bit."""

    m2: str
    """Mode-2 interrogation response (military identification code)."""

    m2g: bool
    """Indicator that the mode-2 response was garbled."""

    m2v: str
    """Status of the mode-2 validity bit."""

    m2xv: str
    """Status of the mode-2 X-Pulse response validation."""

    m3a: str
    """Mode-3/A interrogation response (aircraft identification)."""

    m3ag: bool
    """Indicator that the mode-3/A response was garbled."""

    m3av: str
    """Status of the mode-3/A validity bit."""

    m3axv: str
    """Status of the mode-3 X-Pulse response validation."""

    m4: str
    """Mode-4 interrogation response (Identification Friend/Foe)."""

    m4d1d2: str
    """Mode-4 D1 & D2 response status."""

    m4v: str
    """Status of the mode-4 validity bit."""

    mah: str
    """Indication of Horizontal Maneuver detection."""

    mc: float
    """Mode-C altitude (uncorrected pressure altitude), in km."""

    mcg: bool
    """Indicator that the mode-C response was garbled."""

    mcv: str
    """Status of the mode-C validity bit."""

    milemrgcy: bool
    """Flag indicating military emergency."""

    mrgrpt: bool
    """Flag indicating report separated from different responses at same range.

    Azimuth may have larger than normal error when present.
    """

    mscommb: str
    """Mode-S Comm B message data."""

    mti: bool
    """Flag indicating that target was detected using data from an MTI receiver."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_sensor_id: Annotated[str, PropertyInfo(alias="origSensorId")]
    """
    Optional identifier provided by observation source to indicate the sensor
    identifier which produced this observation.This may be an internal identifier
    and not necessarily a valid sensor ID.
    """

    psrrl: float
    """Runlength of the primary surveillance radar track, in degrees."""

    rad: str
    """Type of sensor(s) maintaining track."""

    rng: float
    """Measured slant range to target from the observing site, in km."""

    rngdelt: float
    """Target range delta between PSR and SSR (reference PSR-SSR), in km."""

    sac: int
    """System Area Code."""

    senalt: float
    """Sensor altitude, in kilometers, at time of observation (ts)."""

    senlat: float
    """Sensor WGS84 latitude, in degrees, at time of observation (ts).

    -90 to 90 degrees (negative values south of equator).
    """

    senlon: float
    """Sensor WGS84 longitude, in degrees, at time of observation (ts).

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    sic: int
    """System Identification Code."""

    spi: bool
    """
    Flag indicating whether Special Position Indicator (SPI) present in
    interrogation response.
    """

    ssrl: float
    """Runlength of the secondary surveillance radar track, in degrees."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    tgtconf: str
    """Target confidence."""

    tgtcorr: str
    """Target correlation flag."""

    tgtid: str
    """Aircraft identification from an aircraft equipped with a Mode S transponder."""

    tis: float
    """Data time-in-storage, in seconds.

    This is the amount of time elapsed between target detection and message
    transmission.
    """

    trkelig: str
    """Track eligibility flag."""

    trknum: int
    """
    Value representing a unique reference to a track record within a particular
    track file. Included when the radar station outputs tracks.
    """

    tti: str
    """Test target indicator."""

    wectc: SequenceNotStr[str]
    """Warning/Error Conditions and Target Classification."""
