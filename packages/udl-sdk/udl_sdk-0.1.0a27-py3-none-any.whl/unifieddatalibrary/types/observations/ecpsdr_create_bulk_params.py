# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from ..._utils import PropertyInfo

__all__ = ["EcpsdrCreateBulkParams", "Body"]


class EcpsdrCreateBulkParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    msg_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="msgTime", format="iso8601")]]
    """
    Time stamp of time packet receipt on ground, in ISO 8601 UTC format with
    millisecond precision.
    """

    source: Required[str]
    """Source of the data."""

    type: Required[str]
    """The type of data associated with this record (STANDARD, TRANSIENT)."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    asl5_v_curr_mon: Annotated[int, PropertyInfo(alias="asl5VCurrMon")]
    """Internal 5V current monitor for analog supply line.

    This is sensor status telemetry. See vRef for conversion factor to Volts.
    """

    cds_plate_v_mon: Annotated[int, PropertyInfo(alias="cdsPlateVMon")]
    """CDS Charge Plate voltage monitor. See vRef for conversion factor to Volts."""

    cds_ref_v_mon: Annotated[int, PropertyInfo(alias="cdsRefVMon")]
    """CDS reference voltage monitor. See vRef for conversion factor to Volts."""

    cds_threshold: Annotated[int, PropertyInfo(alias="cdsThreshold")]
    """CDS Threshold setting for ESD detection threshold.

    The CDS Threshold is the adjustable sensitivity of recording/digitizing an ESD
    as a transient packet.
    """

    cds_throttle: Annotated[int, PropertyInfo(alias="cdsThrottle")]
    """CDS throttle number of seconds between CDS transient capture readouts."""

    checksum: int
    """Two byte CRC-16-CCITT checksum (ordered as first byte, second byte)."""

    dos_bias: Annotated[int, PropertyInfo(alias="dosBias")]
    """Unitless dosimeter detector bias for MedLET and HiLET.

    MedLET (Linear Energy Transfer) and HiLET subsensors detect particles above LET
    thresholds, 300keV and 1MeV, respectively.
    """

    dsl5_v_curr_mon: Annotated[int, PropertyInfo(alias="dsl5VCurrMon")]
    """Internal 5V current monitor for digital supply line.

    This is sensor status telemetry. See vRef for conversion factor to Volts.
    """

    esd_trig_count_h: Annotated[int, PropertyInfo(alias="esdTrigCountH")]
    """Number of ESD triggers, high byte of 2-byte counter."""

    esd_trig_count_l: Annotated[int, PropertyInfo(alias="esdTrigCountL")]
    """Number of ESD triggers, low byte of 2-byte counter."""

    hi_let_l: Annotated[int, PropertyInfo(alias="hiLetL")]
    """HiLET dosimeter low range output. Low byte of scaler (HiLET) dosimeter output."""

    hi_let_m: Annotated[int, PropertyInfo(alias="hiLetM")]
    """Unitless HiLET dosimeter medium range output.

    Medium byte of (HiLET) dosimeter output.
    """

    id_sensor: Annotated[str, PropertyInfo(alias="idSensor")]
    """Unique identifier of the reporting sensor."""

    low_let_l: Annotated[int, PropertyInfo(alias="lowLetL")]
    """LowLET dosimeter low range output. Low byte of (LowLET) dosimeter output."""

    low_let_m: Annotated[int, PropertyInfo(alias="lowLetM")]
    """LowLET dosimeter medium range output. Medium byte of (LowLET) dosimeter output."""

    med_let1_l: Annotated[int, PropertyInfo(alias="medLet1L")]
    """MedLET1 dosimeter low range output.

    Low byte of the 1st (MedLET) dosimeter output.
    """

    med_let1_m: Annotated[int, PropertyInfo(alias="medLet1M")]
    """MedLET1 dosimeter medium range output.

    Medium byte of the 1st (MedLET) dosimeter output.
    """

    med_let2_l: Annotated[int, PropertyInfo(alias="medLet2L")]
    """MedLET2 dosimeter low range output.

    Low byte of the 2nd (MedLET) dosimeter output.
    """

    med_let2_m: Annotated[int, PropertyInfo(alias="medLet2M")]
    """MedLET2 dosimeter medium range output.

    Medium byte of the 2nd (MedLET) dosimeter output.
    """

    med_let3_l: Annotated[int, PropertyInfo(alias="medLet3L")]
    """MedLET3 dosimeter low range output.

    Low byte of the 3rd (MedLET) dosimeter output.
    """

    med_let3_m: Annotated[int, PropertyInfo(alias="medLet3M")]
    """MedLET3 dosimeter medium range output.

    Medium byte of the 3rd (MedLET) dosimeter output.
    """

    med_let4_l: Annotated[int, PropertyInfo(alias="medLet4L")]
    """MedLET4 dosimeter low range output.

    Low byte of the 4th (MedLET) dosimeter output.
    """

    med_let4_m: Annotated[int, PropertyInfo(alias="medLet4M")]
    """MedLET4 dosimeter medium range output.

    Medium byte of the 4th (MedLET) dosimeter output.
    """

    mp_temp: Annotated[int, PropertyInfo(alias="mpTemp")]
    """Unitless sensor mounting plate temperature."""

    ob_time: Annotated[Union[str, datetime], PropertyInfo(alias="obTime", format="iso8601")]
    """Time of the observation, in ISO 8601 UTC format with millisecond precision."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Optional identifier provided by the record source to indicate the satellite
    hosting the sensor. This may be an internal identifier and not necessarily map
    to a valid satellite number.
    """

    orig_sensor_id: Annotated[str, PropertyInfo(alias="origSensorId")]
    """
    Optional identifier provided by the record source to indicate the sensor
    identifier which produced this data. This may be an internal identifier and not
    necessarily a valid sensor ID.
    """

    pd1_sig_lev: Annotated[int, PropertyInfo(alias="pd1SigLev")]
    """Photodiode 1 signal level."""

    pd2_sig_lev: Annotated[int, PropertyInfo(alias="pd2SigLev")]
    """Photodiode 2 signal level."""

    ps_temp_mon: Annotated[int, PropertyInfo(alias="psTempMon")]
    """Power supply temperature monitor. This is sensor status telemetry."""

    retransmit: bool
    """
    Flag indicating whether this record is an original or re-transmitted dataset
    (TRUE indicates a retransmit from the host).
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/catalog number of the on-orbit satellite hosting the sensor."""

    sen_mode: Annotated[str, PropertyInfo(alias="senMode")]
    """The sensor mode associated with this measurements (NORMAL, TEST)."""

    surf_dos_charge_h: Annotated[int, PropertyInfo(alias="surfDosChargeH")]
    """Surface dosimeter charge rate high output (converts to pico-amps/bit).

    High byte of 2 bytes.
    """

    surf_dos_charge_l: Annotated[int, PropertyInfo(alias="surfDosChargeL")]
    """Surface dosimeter charge rate low output (converts to pico-amps/bit).

    Low byte of 2 bytes.
    """

    surf_dos_h: Annotated[int, PropertyInfo(alias="surfDosH")]
    """Surface dosimeter high range output (converts to pico-coulombs/bit).

    High byte of 3 bytes.
    """

    surf_dos_l: Annotated[int, PropertyInfo(alias="surfDosL")]
    """Surface dosimeter low range output (converts to pico-coulombs/bit).

    Low byte of 3 bytes.
    """

    surf_dos_m: Annotated[int, PropertyInfo(alias="surfDosM")]
    """Surface dosimeter medium range output (converts to pico-coulombs/bit).

    Middle byte of 3 bytes.
    """

    surf_dos_stat: Annotated[int, PropertyInfo(alias="surfDosStat")]
    """Surface dosimeter status byte."""

    transient_data: Annotated[Iterable[int], PropertyInfo(alias="transientData")]
    """Array of 144 digitized samples of ESD waveform for transient packets."""

    v_ref: Annotated[int, PropertyInfo(alias="vRef")]
    """Reference voltage (volts/bit).

    Conversion factor used to convert analog V monitor data from bytes to volts.
    """
