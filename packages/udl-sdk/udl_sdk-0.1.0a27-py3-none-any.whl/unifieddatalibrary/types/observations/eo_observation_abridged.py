# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from ..._models import BaseModel

__all__ = ["EoObservationAbridged"]


class EoObservationAbridged(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    ob_time: datetime = FieldInfo(alias="obTime")
    """Ob detection time in ISO 8601 UTC, up to microsecond precision.

    Consumers should contact the provider for details on their obTime
    specifications.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    azimuth: Optional[float] = None
    """Line of sight azimuth angle in degrees and topocentric frame.

    Reported value should include all applicable corrections as specified on the
    source provider data card. If uncertain, consumers should contact the provider
    for details on the applied corrections.
    """

    azimuth_bias: Optional[float] = FieldInfo(alias="azimuthBias", default=None)
    """Sensor line of sight azimuth angle bias in degrees."""

    azimuth_measured: Optional[bool] = FieldInfo(alias="azimuthMeasured", default=None)
    """
    Optional flag indicating whether the azimuth value is measured (true) or
    computed (false). If null, consumers may consult the data provider for
    information regarding whether the corresponding value is computed or measured.
    """

    azimuth_rate: Optional[float] = FieldInfo(alias="azimuthRate", default=None)
    """Rate of change of the line of sight azimuth in degrees per second."""

    azimuth_unc: Optional[float] = FieldInfo(alias="azimuthUnc", default=None)
    """One sigma uncertainty in the line of sight azimuth angle, in degrees."""

    bg_intensity: Optional[float] = FieldInfo(alias="bgIntensity", default=None)
    """Background intensity for IR observations, in kw/sr/um."""

    collect_method: Optional[str] = FieldInfo(alias="collectMethod", default=None)
    """
    Method indicating telescope movement during collection (AUTOTRACK, MANUAL
    AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE TRACK).
    """

    corr_quality: Optional[float] = FieldInfo(alias="corrQuality", default=None)
    """
    Object Correlation Quality score of the observation when compared to a known
    orbit state, (non-standardized). Users should consult data providers regarding
    the expected range of values.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    declination: Optional[float] = None
    """Line of sight declination, in degrees, in the specified referenceFrame.

    If referenceFrame is null then J2K should be assumed. Reported value should
    include all applicable corrections as specified on the source provider data
    card. If uncertain, consumers should contact the provider for details on the
    applied corrections.
    """

    declination_bias: Optional[float] = FieldInfo(alias="declinationBias", default=None)
    """Sensor line of sight declination angle bias in degrees."""

    declination_measured: Optional[bool] = FieldInfo(alias="declinationMeasured", default=None)
    """
    Optional flag indicating whether the declination value is measured (true) or
    computed (false). If null, consumers may consult the data provider for
    information regarding whether the corresponding value is computed or measured.
    """

    declination_rate: Optional[float] = FieldInfo(alias="declinationRate", default=None)
    """
    Line of sight declination rate of change, in degrees/sec, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    declination_unc: Optional[float] = FieldInfo(alias="declinationUnc", default=None)
    """One sigma uncertainty in the line of sight declination angle, in degrees."""

    descriptor: Optional[str] = None
    """Optional source-provided and searchable metadata or descriptor of the data."""

    elevation: Optional[float] = None
    """Line of sight elevation in degrees and topocentric frame.

    Reported value should include all applicable corrections as specified on the
    source provider data card. If uncertain, consumers should contact the provider
    for details on the applied corrections.
    """

    elevation_bias: Optional[float] = FieldInfo(alias="elevationBias", default=None)
    """Sensor line of sight elevation bias in degrees."""

    elevation_measured: Optional[bool] = FieldInfo(alias="elevationMeasured", default=None)
    """
    Optional flag indicating whether the elevation value is measured (true) or
    computed (false). If null, consumers may consult the data provider for
    information regarding whether the corresponding value is computed or measured.
    """

    elevation_rate: Optional[float] = FieldInfo(alias="elevationRate", default=None)
    """Rate of change of the line of sight elevation in degrees per second."""

    elevation_unc: Optional[float] = FieldInfo(alias="elevationUnc", default=None)
    """One sigma uncertainty in the line of sight elevation angle, in degrees."""

    exp_duration: Optional[float] = FieldInfo(alias="expDuration", default=None)
    """Image exposure duration in seconds.

    For observations performed using frame stacking or synthetic tracking methods,
    the exposure duration should be the total integration time. This field is highly
    recommended / required if the observations are going to be used for photometric
    processing.
    """

    fov_count: Optional[int] = FieldInfo(alias="fovCount", default=None)
    """The number of RSOs detected in the sensor field of view."""

    fov_count_uct: Optional[int] = FieldInfo(alias="fovCountUCT", default=None)
    """The number of uncorrelated tracks in the field of view."""

    geoalt: Optional[float] = None
    """For GEO detections, the altitude in km."""

    geolat: Optional[float] = None
    """For GEO detections, the latitude in degrees north."""

    geolon: Optional[float] = None
    """For GEO detections, the longitude in degrees east."""

    georange: Optional[float] = None
    """For GEO detections, the range in km."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """Unique identifier of the target on-orbit object, if correlated."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """Unique identifier of the reporting sensor."""

    id_sky_imagery: Optional[str] = FieldInfo(alias="idSkyImagery", default=None)
    """Unique identifier of the Sky Imagery."""

    intensity: Optional[float] = None
    """Intensity of the target for IR observations, in kw/sr/um."""

    los_unc: Optional[float] = FieldInfo(alias="losUnc", default=None)
    """One sigma uncertainty in the line of sight pointing in micro-radians."""

    losx: Optional[float] = None
    """
    Line-of-sight cartesian X position of the target, in km, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    losxvel: Optional[float] = None
    """
    Line-of-sight cartesian X velocity of target, in km/sec, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    losy: Optional[float] = None
    """
    Line-of-sight cartesian Y position of the target, in km, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    losyvel: Optional[float] = None
    """
    Line-of-sight cartesian Y velocity of target, in km/sec, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    losz: Optional[float] = None
    """
    Line-of-sight cartesian Z position of the target, in km, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    loszvel: Optional[float] = None
    """
    Line-of-sight cartesian Z velocity of target, in km/sec, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    mag: Optional[float] = None
    """
    Measure of observed brightness calibrated against the Gaia G-band in units of
    magnitudes.
    """

    mag_norm_range: Optional[float] = FieldInfo(alias="magNormRange", default=None)
    """Formula: mag - 5.0 \\** log_10(geo_range / 1000000.0)."""

    mag_unc: Optional[float] = FieldInfo(alias="magUnc", default=None)
    """Uncertainty of the observed brightness in units of magnitudes."""

    net_obj_sig: Optional[float] = FieldInfo(alias="netObjSig", default=None)
    """Net object signature = counts / expDuration."""

    net_obj_sig_unc: Optional[float] = FieldInfo(alias="netObjSigUnc", default=None)
    """Net object signature uncertainty = counts uncertainty / expDuration."""

    ob_position: Optional[str] = FieldInfo(alias="obPosition", default=None)
    """The position of this observation within a track (FENCE, FIRST, IN, LAST,
    SINGLE).

    This identifier is optional and, if null, no assumption should be made regarding
    whether other observations may or may not exist to compose a track.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    orig_object_id: Optional[str] = FieldInfo(alias="origObjectId", default=None)
    """
    Optional identifier provided by observation source to indicate the target
    onorbit object of this observation. This may be an internal identifier and not
    necessarily a valid satellite number.
    """

    orig_sensor_id: Optional[str] = FieldInfo(alias="origSensorId", default=None)
    """
    Optional identifier provided by observation source to indicate the sensor
    identifier which produced this observation. This may be an internal identifier
    and not necessarily a valid sensor ID.
    """

    penumbra: Optional[bool] = None
    """
    Boolean indicating that the target object was in a penumbral eclipse at the time
    of this observation.
    """

    primary_extinction: Optional[float] = FieldInfo(alias="primaryExtinction", default=None)
    """Primary Extinction Coefficient, in Magnitudes.

    Primary Extinction is the coefficient applied to the airmass to determine how
    much the observed visual magnitude has been attenuated by the atmosphere.
    Extinction, in general, describes the absorption and scattering of
    electromagnetic radiation by dust and gas between an emitting astronomical
    object and the observer. See the EOObservationDetails API for specification of
    extinction coefficients for multiple spectral filters.
    """

    primary_extinction_unc: Optional[float] = FieldInfo(alias="primaryExtinctionUnc", default=None)
    """Primary Extinction Coefficient Uncertainty, in Magnitudes."""

    ra: Optional[float] = None
    """Line of sight right ascension, in degrees, in the specified referenceFrame.

    If referenceFrame is null then J2K should be assumed. Reported value should
    include all applicable corrections as specified on the source provider data
    card. If uncertain, consumers should contact the provider for details on the
    applied corrections.
    """

    ra_bias: Optional[float] = FieldInfo(alias="raBias", default=None)
    """Sensor line of sight right ascension bias in degrees."""

    ra_measured: Optional[bool] = FieldInfo(alias="raMeasured", default=None)
    """
    Optional flag indicating whether the ra value is measured (true) or computed
    (false). If null, consumers may consult the data provider for information
    regarding whether the corresponding value is computed or measured.
    """

    range: Optional[float] = None
    """Line of sight range in km.

    If referenceFrame is null then J2K should be assumed. Reported value should
    include all applicable corrections as specified on the source provider data
    card. If uncertain, consumers should contact the provider for details on the
    applied corrections.
    """

    range_bias: Optional[float] = FieldInfo(alias="rangeBias", default=None)
    """Sensor line of sight range bias in km."""

    range_measured: Optional[bool] = FieldInfo(alias="rangeMeasured", default=None)
    """
    Optional flag indicating whether the range value is measured (true) or computed
    (false). If null, consumers may consult the data provider for information
    regarding whether the corresponding value is computed or measured.
    """

    range_rate: Optional[float] = FieldInfo(alias="rangeRate", default=None)
    """Range rate in km/s.

    If referenceFrame is null then J2K should be assumed. Reported value should
    include all applicable corrections as specified on the source provider data
    card. If uncertain, consumers should contact the provider for details on the
    applied corrections.
    """

    range_rate_measured: Optional[bool] = FieldInfo(alias="rangeRateMeasured", default=None)
    """
    Optional flag indicating whether the rangeRate value is measured (true) or
    computed (false). If null, consumers may consult the data provider for
    information regarding whether the corresponding value is computed or measured.
    """

    range_rate_unc: Optional[float] = FieldInfo(alias="rangeRateUnc", default=None)
    """One sigma uncertainty in the line of sight range rate, in kilometers/second."""

    range_unc: Optional[float] = FieldInfo(alias="rangeUnc", default=None)
    """One sigma uncertainty in the line of sight range, in kilometers."""

    ra_rate: Optional[float] = FieldInfo(alias="raRate", default=None)
    """
    Line of sight right ascension rate of change, in degrees/sec, in the specified
    referenceFrame. If referenceFrame is null then J2K should be assumed.
    """

    ra_unc: Optional[float] = FieldInfo(alias="raUnc", default=None)
    """One sigma uncertainty in the line of sight right ascension angle, in degrees."""

    raw_file_uri: Optional[str] = FieldInfo(alias="rawFileURI", default=None)
    """
    Optional URI location in the document repository of the raw file parsed by the
    system to produce this record. To download the raw file, prepend
    https://udl-hostname/scs/download?id= to this value.
    """

    reference_frame: Optional[Literal["J2000", "GCRF", "ITRF", "TEME"]] = FieldInfo(
        alias="referenceFrame", default=None
    )
    """The reference frame of the EOObservation measurements.

    If the referenceFrame is null it is assumed to be J2000.
    """

    sat_no: Optional[int] = FieldInfo(alias="satNo", default=None)
    """Satellite/Catalog number of the target on-orbit object."""

    senalt: Optional[float] = None
    """Sensor altitude at obTime (if mobile/onorbit) in km."""

    senlat: Optional[float] = None
    """Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info. -90 to 90 degrees (negative values
    south of equator).
    """

    senlon: Optional[float] = None
    """Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees.

    If null, can be obtained from sensor info. -180 to 180 degrees (negative values
    west of Prime Meridian).
    """

    sen_quat: Optional[List[float]] = FieldInfo(alias="senQuat", default=None)
    """
    The quaternion describing the rotation of the sensor in relation to the
    body-fixed frame used for this system into the local geodetic frame, at
    observation time (obTime). The array element order convention is scalar
    component first, followed by the three vector components (qc, q1, q2, q3).
    """

    sen_reference_frame: Optional[Literal["J2000", "EFG/TDR", "ECR/ECEF", "TEME", "ITRF", "GCRF"]] = FieldInfo(
        alias="senReferenceFrame", default=None
    )
    """The reference frame of the observing sensor state.

    If the senReferenceFrame is null it is assumed to be J2000.
    """

    senvelx: Optional[float] = None
    """
    Cartesian X velocity of the observing mobile/onorbit sensor at obTime, in
    km/sec, in the specified senReferenceFrame. If senReferenceFrame is null then
    J2K should be assumed.
    """

    senvely: Optional[float] = None
    """
    Cartesian Y velocity of the observing mobile/onorbit sensor at obTime, in
    km/sec, in the specified senReferenceFrame. If senReferenceFrame is null then
    J2K should be assumed.
    """

    senvelz: Optional[float] = None
    """
    Cartesian Z velocity of the observing mobile/onorbit sensor at obTime, in
    km/sec, in the specified senReferenceFrame. If senReferenceFrame is null then
    J2K should be assumed.
    """

    senx: Optional[float] = None
    """
    Cartesian X position of the observing mobile/onorbit sensor at obTime, in km, in
    the specified senReferenceFrame. If senReferenceFrame is null then J2K should be
    assumed.
    """

    seny: Optional[float] = None
    """
    Cartesian Y position of the observing mobile/onorbit sensor at obTime, in km, in
    the specified senReferenceFrame. If senReferenceFrame is null then J2K should be
    assumed.
    """

    senz: Optional[float] = None
    """
    Cartesian Z position of the observing mobile/onorbit sensor at obTime, in km, in
    the specified senReferenceFrame. If senReferenceFrame is null then J2K should be
    assumed.
    """

    shutter_delay: Optional[float] = FieldInfo(alias="shutterDelay", default=None)
    """Shutter delay in seconds."""

    sky_bkgrnd: Optional[float] = FieldInfo(alias="skyBkgrnd", default=None)
    """Average Sky Background signal, in Magnitudes.

    Sky Background refers to the incoming light from an apparently empty part of the
    night sky.
    """

    solar_dec_angle: Optional[float] = FieldInfo(alias="solarDecAngle", default=None)
    """Angle from the sun to the equatorial plane."""

    solar_eq_phase_angle: Optional[float] = FieldInfo(alias="solarEqPhaseAngle", default=None)
    """
    The angle, in degrees, between the projections of the target-to-observer vector
    and the target-to-sun vector onto the equatorial plane. The angle is represented
    as negative when closing (i.e. before the opposition) and positive when opening
    (after the opposition).
    """

    solar_phase_angle: Optional[float] = FieldInfo(alias="solarPhaseAngle", default=None)
    """
    The angle, in degrees, between the target-to-observer vector and the
    target-to-sun vector.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    task_id: Optional[str] = FieldInfo(alias="taskId", default=None)
    """
    Optional identifier to indicate the specific tasking which produced this
    observation.
    """

    timing_bias: Optional[float] = FieldInfo(alias="timingBias", default=None)
    """Sensor timing bias in seconds."""

    track_id: Optional[str] = FieldInfo(alias="trackId", default=None)
    """Optional identifier of the track to which this observation belongs."""

    transaction_id: Optional[str] = FieldInfo(alias="transactionId", default=None)
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    type: Optional[str] = None
    """Read only field specifying the type of observation (e.g.

    OPTICAL, OPTICAL_IR, LASER_RANGING, etc).
    """

    uct: Optional[bool] = None
    """
    Boolean indicating this observation is part of an uncorrelated track or was
    unable to be correlated to a known object. This flag should only be set to true
    by data providers after an attempt to correlate to an on-orbit object was made
    and failed. If unable to correlate, the 'origObjectId' field may be populated
    with an internal data provider specific identifier.
    """

    umbra: Optional[bool] = None
    """
    Boolean indicating that the target object was in umbral eclipse at the time of
    this observation.
    """

    zeroptd: Optional[float] = None
    """Formula: 2.5 \\** log_10 (zero_mag_counts / expDuration)."""
