# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from ..._types import SequenceNotStr
from ..._utils import PropertyInfo

__all__ = ["PassiveRadarObservationFileCreateParams", "Body"]


class PassiveRadarObservationFileCreateParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    ob_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="obTime", format="iso8601")]]
    """Ob detection time in ISO 8601 UTC with microsecond precision."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    accel: float
    """The target Acceleration measurement in kilometers/sec^2 for this observation."""

    accel_unc: Annotated[float, PropertyInfo(alias="accelUnc")]
    """
    The target Acceleration uncertainty measurement in kilometers/sec^2 for this
    observation.
    """

    alt: float
    """
    The target altitude relative to WGS-84 ellipsoid, in kilometers for this
    observation.
    """

    azimuth: float
    """Line of sight azimuth angle in degrees and topocentric frame."""

    azimuth_bias: Annotated[float, PropertyInfo(alias="azimuthBias")]
    """Sensor azimuth angle bias in degrees."""

    azimuth_rate: Annotated[float, PropertyInfo(alias="azimuthRate")]
    """Rate of change of the line of sight azimuth in degrees per second."""

    azimuth_unc: Annotated[float, PropertyInfo(alias="azimuthUnc")]
    """
    One sigma uncertainty in the line of sight azimuth angle measurement, in
    degrees.
    """

    bistatic_range: Annotated[float, PropertyInfo(alias="bistaticRange")]
    """Target bistatic path distance in kilometers.

    This is the transmitter-to-target-to-surveillance site distance.
    """

    bistatic_range_accel: Annotated[float, PropertyInfo(alias="bistaticRangeAccel")]
    """Bistatic range acceleration in kilometers/sec^2."""

    bistatic_range_accel_unc: Annotated[float, PropertyInfo(alias="bistaticRangeAccelUnc")]
    """
    One sigma uncertainty in the bistatic range acceleration measurement, in
    kilometers/sec^2.
    """

    bistatic_range_bias: Annotated[float, PropertyInfo(alias="bistaticRangeBias")]
    """Sensor bistatic range bias in kilometers."""

    bistatic_range_rate: Annotated[float, PropertyInfo(alias="bistaticRangeRate")]
    """Rate of change of the bistatic path in kilometers/sec."""

    bistatic_range_rate_unc: Annotated[float, PropertyInfo(alias="bistaticRangeRateUnc")]
    """One sigma uncertainty in rate of change of the bistatic path in kilometers/sec."""

    bistatic_range_unc: Annotated[float, PropertyInfo(alias="bistaticRangeUnc")]
    """One sigma uncertainty in bistatic range in kilometers."""

    coning: float
    """Coning angle in degrees."""

    coning_unc: Annotated[float, PropertyInfo(alias="coningUnc")]
    """One sigma uncertainty in the coning angle measurement, in degrees."""

    declination: float
    """Line of sight declination angle in degrees and J2000 coordinate frame."""

    delay: float
    """
    The time difference, in seconds, between the signal collected at the
    surveillance site (after being reflected from the target) and the reference site
    (direct path line-of-sight signal).
    """

    delay_bias: Annotated[float, PropertyInfo(alias="delayBias")]
    """Delay bias in seconds."""

    delay_unc: Annotated[float, PropertyInfo(alias="delayUnc")]
    """One sigma uncertainty in the delay measurement, in seconds."""

    descriptor: str
    """Optional source-provided and searchable metadata or descriptor of the data."""

    doppler: float
    """Doppler measurement in hertz."""

    doppler_unc: Annotated[float, PropertyInfo(alias="dopplerUnc")]
    """One sigma uncertainty in the Doppler measurement in hertz."""

    elevation: float
    """Line of sight elevation in degrees and topocentric frame."""

    elevation_bias: Annotated[float, PropertyInfo(alias="elevationBias")]
    """Sensor elevation bias in degrees."""

    elevation_rate: Annotated[float, PropertyInfo(alias="elevationRate")]
    """Rate of change of the line of sight elevation in degrees per second."""

    elevation_unc: Annotated[float, PropertyInfo(alias="elevationUnc")]
    """
    One sigma uncertainty in the line of sight elevation angle measurement, in
    degrees.
    """

    ext_observation_id: Annotated[str, PropertyInfo(alias="extObservationId")]
    """Optional external observation identifier provided by the source."""

    id_rf_emitter: Annotated[str, PropertyInfo(alias="idRFEmitter")]
    """Unique identifier of the transmitter.

    This ID can be used to obtain additional information on an RFEmitter using the
    'get by ID' operation (e.g. /udl/rfemitter/{id}). For example, the RFEmitter
    with idRFEmitter = abc would be queried as /udl/rfemitter/abc.
    """

    id_sensor: Annotated[str, PropertyInfo(alias="idSensor")]
    """Unique identifier of the reporting surveillance sensor.

    This ID can be used to obtain additional information on a sensor using the 'get
    by ID' operation (e.g. /udl/sensor/{id}). For example, the sensor with idSensor
    = abc would be queried as /udl/sensor/abc.
    """

    id_sensor_ref_receiver: Annotated[str, PropertyInfo(alias="idSensorRefReceiver")]
    """Unique identifier of the reference receiver sensor.

    This ID can be used to obtain additional information on a sensor using the 'get
    by ID' operation (e.g. /udl/sensor/{id}). For example, the sensor with idSensor
    = abc would be queried as /udl/sensor/abc.
    """

    lat: float
    """
    WGS-84 target latitude sub-point at observation time (obTime), represented as
    -90 to 90 degrees (negative values south of equator).
    """

    lon: float
    """
    WGS-84 target longitude sub-point at observation time (obTime), represented as
    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    ob_position: Annotated[str, PropertyInfo(alias="obPosition")]
    """The position of this observation within a track (FENCE, FIRST, IN, LAST,
    SINGLE).

    This identifier is optional and, if null, no assumption should be made regarding
    whether other observations may or may not exist to compose a track.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Optional identifier provided by observation source to indicate the target
    onorbit object of this observation. This may be an internal identifier and not
    necessarily a valid satellite number.
    """

    orig_sensor_id: Annotated[str, PropertyInfo(alias="origSensorId")]
    """
    Optional identifier provided by observation source to indicate the sensor
    identifier which produced this observation. This may be an internal identifier
    and not necessarily a valid sensor ID.
    """

    orthogonal_rcs: Annotated[float, PropertyInfo(alias="orthogonalRcs")]
    """Radar cross section in meters squared for orthogonal polarization."""

    orthogonal_rcs_unc: Annotated[float, PropertyInfo(alias="orthogonalRcsUnc")]
    """
    One sigma uncertainty in orthogonal polarization Radar Cross Section, in
    meters^2.
    """

    ra: float
    """Line of sight right ascension in degrees and J2000 coordinate frame."""

    rcs: float
    """Radar cross section in meters squared for polarization principal."""

    rcs_unc: Annotated[float, PropertyInfo(alias="rcsUnc")]
    """
    One sigma uncertainty in principal polarization Radar Cross Section, in
    meters^2.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """Satellite/Catalog number of the target on-orbit object."""

    snr: float
    """Signal to noise ratio, in dB."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    task_id: Annotated[str, PropertyInfo(alias="taskId")]
    """
    Optional identifier to indicate the specific tasking which produced this
    observation.
    """

    timing_bias: Annotated[float, PropertyInfo(alias="timingBias")]
    """Sensor timing bias in seconds."""

    tof: float
    """Time of flight (TOF) in seconds.

    This is the calculated propagation time from
    transmitter-to-target-to-surveillance site.
    """

    tof_bias: Annotated[float, PropertyInfo(alias="tofBias")]
    """The Time of Flight (TOF) bias in seconds."""

    tof_unc: Annotated[float, PropertyInfo(alias="tofUnc")]
    """One sigma uncertainty in time of flight in seconds."""

    track_id: Annotated[str, PropertyInfo(alias="trackId")]
    """Unique identifier of a track that represents a tracklet for this observation."""

    transaction_id: Annotated[str, PropertyInfo(alias="transactionId")]
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """

    uct: bool
    """
    Boolean indicating this observation is part of an uncorrelated track or was
    unable to be correlated to a known object. This flag should only be set to true
    by data providers after an attempt to correlate to an on-orbit object was made
    and failed. If unable to correlate, the 'origObjectId' field may be populated
    with an internal data provider specific identifier.
    """

    xvel: float
    """X velocity of target in kilometers/sec in J2000 coordinate frame."""

    yvel: float
    """Y velocity of target in kilometers/sec in J2000 coordinate frame."""

    zvel: float
    """Z velocity of target in kilometers/sec in J2000 coordinate frame."""
