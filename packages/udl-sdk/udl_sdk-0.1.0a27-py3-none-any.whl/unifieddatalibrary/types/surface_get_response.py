# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SurfaceGetResponse", "SurfaceObstruction"]


class SurfaceObstruction(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data."""

    id_surface: str = FieldInfo(alias="idSurface")
    """The unique identifier of the associated surface record.

    This field is required when posting, updating, or deleting a SurfaceObstruction
    record.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    advisory_required: Optional[List[str]] = FieldInfo(alias="advisoryRequired", default=None)
    """
    Array of all vehicles that are affected by this obstruction at the surface
    end-point, and require an advisory for usage.
    """

    approval_required: Optional[List[str]] = FieldInfo(alias="approvalRequired", default=None)
    """
    Array of all vehicles that are affected by this obstruction at the surface
    end-point, and require an approval for usage.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    distance_from_center_line: Optional[float] = FieldInfo(alias="distanceFromCenterLine", default=None)
    """The distance from the surface center line to this obstruction, in feet."""

    distance_from_edge: Optional[float] = FieldInfo(alias="distanceFromEdge", default=None)
    """The distance from the surface edge to this obstruction, in feet."""

    distance_from_threshold: Optional[float] = FieldInfo(alias="distanceFromThreshold", default=None)
    """The distance from the surface threshold to this obstruction, in feet."""

    id_navigational_obstruction: Optional[str] = FieldInfo(alias="idNavigationalObstruction", default=None)
    """The unique identifier of the associated NavigationalObstruction record."""

    obstruction_desc: Optional[str] = FieldInfo(alias="obstructionDesc", default=None)
    """Description of this surface obstruction."""

    obstruction_height: Optional[float] = FieldInfo(alias="obstructionHeight", default=None)
    """The height above ground level of the surface obstruction, in feet."""

    obstruction_side_code: Optional[str] = FieldInfo(alias="obstructionSideCode", default=None)
    """
    A code that indicates which side of the surface end is affected by this
    obstruction.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SurfaceGetResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data."""

    name: str
    """The surface name or identifier."""

    source: str
    """Source of the data."""

    type: str
    """The surface type of this record (e.g. RUNWAY, TAXIWAY, PARKING)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    alt_site_id: Optional[str] = FieldInfo(alias="altSiteId", default=None)
    """Alternate site identifier provided by the source."""

    condition: Optional[str] = None
    """The surface condition (e.g.

    GOOD, FAIR, POOR, SERIOUS, FAILED, CLOSED, UNKNOWN).
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    ddt_wt_kip: Optional[float] = FieldInfo(alias="ddtWtKip", default=None)
    """
    The max weight allowable on this surface type for a DDT-type (double dual
    tandem) landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    ddt_wt_kip_mod: Optional[float] = FieldInfo(alias="ddtWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for a DDT-type (double
    dual tandem) landing gear configuration, in kilopounds (kip).
    """

    ddt_wt_kip_mod_note: Optional[str] = FieldInfo(alias="ddtWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for a DDT-type (double dual
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    ddt_wt_kn: Optional[float] = FieldInfo(alias="ddtWtKN", default=None)
    """
    The max weight allowable on this surface type for a DDT-type (double dual
    tandem) landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    dd_wt_kip: Optional[float] = FieldInfo(alias="ddWtKip", default=None)
    """
    The max weight allowable on this surface type for an FAA 2D-type (twin tandem)
    landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    dd_wt_kip_mod: Optional[float] = FieldInfo(alias="ddWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for an FAA 2D-type (twin
    tandem) landing gear configuration, in kilopounds (kip).
    """

    dd_wt_kip_mod_note: Optional[str] = FieldInfo(alias="ddWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for an FAA 2D-type (twin
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    dd_wt_kn: Optional[float] = FieldInfo(alias="ddWtKN", default=None)
    """
    The max weight allowable on this surface type for an FAA 2D-type (twin tandem)
    landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    end_lat: Optional[float] = FieldInfo(alias="endLat", default=None)
    """
    WGS-84 latitude of the coordinate representing the end-point of a surface, in
    degrees. -90 to 90 degrees (negative values south of equator).
    """

    end_lon: Optional[float] = FieldInfo(alias="endLon", default=None)
    """
    WGS-84 longitude of the coordinate representing the end-point of a surface, in
    degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    """

    id_site: Optional[str] = FieldInfo(alias="idSite", default=None)
    """
    The unique identifier of the Site record that contains location information
    about this surface.
    """

    lcn: Optional[int] = None
    """
    Load classification number or pavement rating which ranks aircraft on a scale of
    1 to 120.
    """

    lda_ft: Optional[float] = FieldInfo(alias="ldaFt", default=None)
    """The landing distance available for the runway, in feet.

    Applicable for runway surface types only.
    """

    lda_m: Optional[float] = FieldInfo(alias="ldaM", default=None)
    """The landing distance available for the runway, in meters.

    Applicable for runway surface types only.
    """

    length_ft: Optional[float] = FieldInfo(alias="lengthFt", default=None)
    """The length of the surface type, in feet.

    Applicable for runway and parking surface types.
    """

    length_m: Optional[float] = FieldInfo(alias="lengthM", default=None)
    """The length of the surface type, in meters.

    Applicable for runway and parking surface types.
    """

    lighting: Optional[bool] = None
    """Flag indicating the surface has lighting."""

    lights_aprch: Optional[bool] = FieldInfo(alias="lightsAPRCH", default=None)
    """Flag indicating the runway has approach lights.

    Applicable for runway surface types only.
    """

    lights_cl: Optional[bool] = FieldInfo(alias="lightsCL", default=None)
    """Flag indicating the runway has centerline lights.

    Applicable for runway surface types only.
    """

    lights_ols: Optional[bool] = FieldInfo(alias="lightsOLS", default=None)
    """Flag indicating the runway has Optical Landing System (OLS) lights.

    Applicable for runway surface types only.
    """

    lights_papi: Optional[bool] = FieldInfo(alias="lightsPAPI", default=None)
    """Flag indicating the runway has Precision Approach Path Indicator (PAPI) lights.

    Applicable for runway surface types only.
    """

    lights_reil: Optional[bool] = FieldInfo(alias="lightsREIL", default=None)
    """Flag indicating the runway has Runway End Identifier Lights (REIL).

    Applicable for runway surface types only.
    """

    lights_rwy: Optional[bool] = FieldInfo(alias="lightsRWY", default=None)
    """Flag indicating the runway has edge lighting.

    Applicable for runway surface types only.
    """

    lights_seqfl: Optional[bool] = FieldInfo(alias="lightsSEQFL", default=None)
    """Flag indicating the runway has Sequential Flashing (SEQFL) lights.

    Applicable for runway surface types only.
    """

    lights_tdzl: Optional[bool] = FieldInfo(alias="lightsTDZL", default=None)
    """Flag indicating the runway has Touchdown Zone lights.

    Applicable for runway surface types only.
    """

    lights_unkn: Optional[bool] = FieldInfo(alias="lightsUNKN", default=None)
    """Flag indicating the runway lighting is unknown.

    Applicable for runway surface types only.
    """

    lights_vasi: Optional[bool] = FieldInfo(alias="lightsVASI", default=None)
    """Flag indicating the runway has Visual Approach Slope Indicator (VASI) lights.

    Applicable for runway surface types only.
    """

    material: Optional[str] = None
    """The surface material (e.g. Asphalt, Concrete, Dirt)."""

    obstacle: Optional[bool] = None
    """
    Flag indicating that one or more obstacles or obstructions exist in the
    proximity of this surface.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    pcn: Optional[str] = None
    """Pavement classification number (PCN) and tire pressure code."""

    point_reference: Optional[str] = FieldInfo(alias="pointReference", default=None)
    """
    Description of the surface and its dimensions or how it is measured or oriented.
    """

    primary: Optional[bool] = None
    """Flag indicating this is the primary runway.

    Applicable for runway surface types only.
    """

    raw_wbc: Optional[str] = FieldInfo(alias="rawWBC", default=None)
    """Raw weight bearing capacity value or pavement strength."""

    sbtt_wt_kip: Optional[float] = FieldInfo(alias="sbttWtKip", default=None)
    """
    The max weight allowable on this surface type for an SBTT-type (single belly
    twin tandem) landing gear configuration, in kilopounds (kip).Note: The
    corresponding equivalent field is not converted by the UDL and may or may not be
    supplied by the provider. The provider/consumer is responsible for all unit
    conversions.
    """

    sbtt_wt_kip_mod: Optional[float] = FieldInfo(alias="sbttWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for an SBTT-type (single
    belly twin tandem) landing gear configuration, in kilopounds (kip).
    """

    sbtt_wt_kip_mod_note: Optional[str] = FieldInfo(alias="sbttWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for an SBTT-type (single
    belly twin tandem) landing gear configuration. For more information, contact the
    provider source.
    """

    sbtt_wt_kn: Optional[float] = FieldInfo(alias="sbttWtKN", default=None)
    """
    The max weight allowable on this surface type for an SBTT-type (single belly
    twin tandem) landing gear configuration, in kilonewtons (kN).Note: The
    corresponding equivalent field is not converted by the UDL and may or may not be
    supplied by the provider. The provider/consumer is responsible for all unit
    conversions.
    """

    start_lat: Optional[float] = FieldInfo(alias="startLat", default=None)
    """
    WGS-84 latitude of the coordinate representing the start-point of a surface, in
    degrees. -90 to 90 degrees (negative values south of equator).
    """

    start_lon: Optional[float] = FieldInfo(alias="startLon", default=None)
    """
    WGS-84 longitude of the coordinate representing the start-point of a surface, in
    degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    """

    st_wt_kip: Optional[float] = FieldInfo(alias="stWtKip", default=None)
    """
    The max weight allowable on this surface type for an ST-type (single tandem)
    landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    st_wt_kip_mod: Optional[float] = FieldInfo(alias="stWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for an ST-type (single
    tandem) landing gear configuration, in kilopounds (kip).
    """

    st_wt_kip_mod_note: Optional[str] = FieldInfo(alias="stWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for an ST-type (single
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    st_wt_kn: Optional[float] = FieldInfo(alias="stWtKN", default=None)
    """
    The max weight allowable on this surface type for an ST-type (single tandem)
    landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    surface_obstructions: Optional[List[SurfaceObstruction]] = FieldInfo(alias="surfaceObstructions", default=None)
    """
    An array of SurfaceNavigation objects representing information about
    obstructions proximal to this surface. This is a read-only field that will be
    populated with any associated SurfaceObstruction objects for queries that return
    the full schema.
    """

    s_wt_kip: Optional[float] = FieldInfo(alias="sWtKip", default=None)
    """
    The max weight allowable on this surface type for an S-type (single) landing
    gear configuration, in kilopounds (kip). Note: The corresponding equivalent
    field is not converted by the UDL and may or may not be supplied by the
    provider. The provider/consumer is responsible for all unit conversions.
    """

    s_wt_kip_mod: Optional[float] = FieldInfo(alias="sWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for an S-type (single)
    landing gear configuration, in kilopounds (kip).
    """

    s_wt_kip_mod_note: Optional[str] = FieldInfo(alias="sWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for an S-type (single)
    landing gear configuration. For more information, contact the provider source.
    """

    s_wt_kn: Optional[float] = FieldInfo(alias="sWtKN", default=None)
    """
    The max weight allowable on this surface type for an S-type (single) landing
    gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field
    is not converted by the UDL and may or may not be supplied by the provider. The
    provider/consumer is responsible for all unit conversions.
    """

    tdt_wtkip: Optional[float] = FieldInfo(alias="tdtWtkip", default=None)
    """
    The max weight allowable on this surface type for a TDT-type (twin delta tandem)
    landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    tdt_wt_kip_mod: Optional[float] = FieldInfo(alias="tdtWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for a TDT-type (twin
    delta tandem) landing gear configuration, in kilopounds (kip).
    """

    tdt_wt_kip_mod_note: Optional[str] = FieldInfo(alias="tdtWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for a TDT-type (twin delta
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    tdt_wt_kn: Optional[float] = FieldInfo(alias="tdtWtKN", default=None)
    """
    The max weight allowable on this surface type for a TDT-type (twin delta tandem)
    landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    trt_wt_kip: Optional[float] = FieldInfo(alias="trtWtKip", default=None)
    """
    The max weight allowable on this surface type for a TRT-type (triple tandem)
    landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    trt_wt_kip_mod: Optional[float] = FieldInfo(alias="trtWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for a TRT-type (triple
    tandem) landing gear configuration, in kilopounds (kip).
    """

    trt_wt_kip_mod_note: Optional[str] = FieldInfo(alias="trtWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for a TRT-type (triple
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    trt_wt_kn: Optional[float] = FieldInfo(alias="trtWtKN", default=None)
    """
    The max weight allowable on this surface type for a TRT-type (triple tandem)
    landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    tt_wt_kip: Optional[float] = FieldInfo(alias="ttWtKip", default=None)
    """
    The max weight allowable on this surface type for a GDSS TT-type (twin tandem)
    landing gear configuration, in kilopounds (kip).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    tt_wt_kip_mod: Optional[float] = FieldInfo(alias="ttWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for a GDSS TT-type (twin
    tandem) landing gear configuration, in kilopounds (kip).
    """

    tt_wt_kip_mod_note: Optional[str] = FieldInfo(alias="ttWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for a GDSS TT-type (twin
    tandem) landing gear configuration. For more information, contact the provider
    source.
    """

    tt_wt_kn: Optional[float] = FieldInfo(alias="ttWtKN", default=None)
    """
    The max weight allowable on this surface type for a GDSS TT-type (twin tandem)
    landing gear configuration, in kilonewtons (kN).Note: The corresponding
    equivalent field is not converted by the UDL and may or may not be supplied by
    the provider. The provider/consumer is responsible for all unit conversions.
    """

    t_wt_kip: Optional[float] = FieldInfo(alias="tWtKip", default=None)
    """
    The max weight allowable on this surface type for a T-type (twin (dual)) landing
    gear configuration, in kilopounds (kip).Note: The corresponding equivalent field
    is not converted by the UDL and may or may not be supplied by the provider. The
    provider/consumer is responsible for all unit conversions.
    """

    t_wt_kip_mod: Optional[float] = FieldInfo(alias="tWtKipMod", default=None)
    """
    The modified max weight allowable on this surface type for a T-type (twin
    (dual)) landing gear configuration, in kilopounds (kip).
    """

    t_wt_kip_mod_note: Optional[str] = FieldInfo(alias="tWtKipModNote", default=None)
    """
    User input rationale for the manual modification of the prescribed value
    indicating the max weight allowable on this surface for a T-type (twin(dual))
    landing gear configuration. For more information, contact the provider source.
    """

    t_wt_kn: Optional[float] = FieldInfo(alias="tWtKN", default=None)
    """
    The max weight allowable on this surface type for a T-type (twin (dual)) landing
    gear configuration, in kilonewtons (kN).Note: The corresponding equivalent field
    is not converted by the UDL and may or may not be supplied by the provider. The
    provider/consumer is responsible for all unit conversions.
    """

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    width_ft: Optional[float] = FieldInfo(alias="widthFt", default=None)
    """The width of the surface type, in feet."""

    width_m: Optional[float] = FieldInfo(alias="widthM", default=None)
    """The width of the surface type, in meters."""
