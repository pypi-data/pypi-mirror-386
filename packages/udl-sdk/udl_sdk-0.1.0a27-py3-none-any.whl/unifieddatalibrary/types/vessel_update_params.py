# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._utils import PropertyInfo
from .entity_ingest_param import EntityIngestParam

__all__ = ["VesselUpdateParams"]


class VesselUpdateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    body_id: Annotated[str, PropertyInfo(alias="id")]
    """Unique identifier of the record, auto-generated by the system."""

    alt_vessel_id: Annotated[str, PropertyInfo(alias="altVesselId")]
    """The original source Id for this vessel."""

    callsign: str
    """A uniquely designated identifier for the vessel's transmitter station.

    All radio transmissions must be individually identified by the call sign.
    Merchant and naval vessels are assigned call signs by their national licensing
    authorities.
    """

    entity: EntityIngestParam
    """
    An entity is a generic representation of any object within a space/SSA system
    such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An
    entity can have an operating unit, a location (if terrestrial), and statuses.
    """

    first_seen: Annotated[Union[str, datetime], PropertyInfo(alias="firstSeen", format="iso8601")]
    """The date this vessel was first seen."""

    hull_num: Annotated[str, PropertyInfo(alias="hullNum")]
    """The vessel hull number designation of this maritime vessel.

    The hull number is a 1-6 character alphanumeric entry assigned to a ship and
    painted on the hull.
    """

    id_entity: Annotated[str, PropertyInfo(alias="idEntity")]
    """Unique identifier of the parent entity. idEntity is required for Put."""

    id_organization: Annotated[str, PropertyInfo(alias="idOrganization")]
    """The UDL ID of the organization that owns the vessel."""

    imon: int
    """The International Maritime Organization Number of the vessel.

    IMON is a seven-digit number that uniquely identifies the vessel.
    """

    length: float
    """The overall length of the vessel, in meters.

    A value of 511 indicates a vessel length of 511 meters or greater.
    """

    max_draught: Annotated[float, PropertyInfo(alias="maxDraught")]
    """
    The maximum static draught, in meters, of the vessel defined as the distance
    between the shipâ€™s keel and the waterline of the vessel.
    """

    max_speed: Annotated[float, PropertyInfo(alias="maxSpeed")]
    """The maximum possible speed of this vessel in meters per second."""

    mmsi: str
    """The Maritime Mobile Service Identity of the vessel.

    MMSI is a nine-digit number that identifies the transmitter station of the
    vessel.
    """

    num_blades: Annotated[int, PropertyInfo(alias="numBlades")]
    """The number of blades per shaft for this vessel."""

    num_shafts: Annotated[int, PropertyInfo(alias="numShafts")]
    """The number of shafts on this vessel."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    prop_type: Annotated[str, PropertyInfo(alias="propType")]
    """The type of propulsion employed by this vessel."""

    sconum: str
    """
    The Ship Control Number (SCONUM) is a naval vessel identification number
    (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is
    sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####,
    where A is an alpha character and # is numerical.
    """

    status: str
    """The status of this vessel."""

    stern_type: Annotated[str, PropertyInfo(alias="sternType")]
    """The stern type code (Counter, Cruiser) associated with this vessel."""

    vessel_builder: Annotated[str, PropertyInfo(alias="vesselBuilder")]
    """The shipbuilder who built this vessel."""

    vessel_class: Annotated[str, PropertyInfo(alias="vesselClass")]
    """
    The common name for a group of ships with similar design, usually named for the
    first vessel of the class.
    """

    vessel_description: Annotated[str, PropertyInfo(alias="vesselDescription")]
    """Further description or explanation of the vessel or type."""

    vessel_flag: Annotated[str, PropertyInfo(alias="vesselFlag")]
    """The flag of the subject vessel."""

    vessel_name: Annotated[str, PropertyInfo(alias="vesselName")]
    """The name of this vessel.

    Vessel names that exceed the AIS 20 character are shortened (not truncated) to
    15 character-spaces, followed by an underscore and the last 4 characters-spaces
    of the vessel full name.
    """

    vessel_type: Annotated[str, PropertyInfo(alias="vesselType")]
    """The reported ship type (e.g. Passenger, Tanker, Cargo, Other, etc.)."""

    vsl_wt: Annotated[float, PropertyInfo(alias="vslWt")]
    """The weight in tons, of this vessel."""

    width: float
    """The breadth of the vessel, in meters.

    A value of 63 indicates a vessel breadth of 63 meters or greater.
    """

    year_built: Annotated[str, PropertyInfo(alias="yearBuilt")]
    """Year the vessel went into service."""
