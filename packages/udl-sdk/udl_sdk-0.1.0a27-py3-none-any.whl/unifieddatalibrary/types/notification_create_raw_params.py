# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["NotificationCreateRawParams"]


class NotificationCreateRawParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[str, PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE: Data pertaining to a government or military exercise. The data may
    include both real and simulated data.

    REAL: Data collected or produced that pertains to real-world objects, events,
    and analysis.

    SIMULATED: Synthetic data generated by a model to mimic real-world datasets.

    TEST: Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    msg_type: Required[Annotated[str, PropertyInfo(alias="msgType")]]
    """Source provided message type."""

    origin: Required[str]
    """Origin of the data."""

    source: Required[str]
    """Source of the data."""

    body: Required[str]

    msg_id: Annotated[str, PropertyInfo(alias="msgId")]
    """
    Optional message identifier...if not provided an id will be automatically
    created.
    """

    tags: SequenceNotStr[str]
    """Optional list of provider/source specific tags for this data."""
