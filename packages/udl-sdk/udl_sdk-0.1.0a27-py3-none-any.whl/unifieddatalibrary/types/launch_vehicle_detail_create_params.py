# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["LaunchVehicleDetailCreateParams"]


class LaunchVehicleDetailCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_launch_vehicle: Required[Annotated[str, PropertyInfo(alias="idLaunchVehicle")]]
    """Identifier of the parent launch vehicle record."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    attitude_accuracy: Annotated[float, PropertyInfo(alias="attitudeAccuracy")]
    """Launch vehicle attitude accuracy (degrees)."""

    category: str
    """Vehicle category."""

    deployment_rotation_rate: Annotated[float, PropertyInfo(alias="deploymentRotationRate")]
    """Launch vehicle deployment rotation rate in RPM."""

    diameter: float
    """Vehicle diameter in meters."""

    est_launch_price: Annotated[float, PropertyInfo(alias="estLaunchPrice")]
    """Launch vehicle estimated launch price in US dollars."""

    est_launch_price_typical: Annotated[float, PropertyInfo(alias="estLaunchPriceTypical")]
    """Launch vehicle typical estimated launch price in US dollars."""

    fairing_external_diameter: Annotated[float, PropertyInfo(alias="fairingExternalDiameter")]
    """Vehicle fairing maximum external diameter in meters."""

    fairing_internal_diameter: Annotated[float, PropertyInfo(alias="fairingInternalDiameter")]
    """Vehicle fairing maximum internal diameter in meters."""

    fairing_length: Annotated[float, PropertyInfo(alias="fairingLength")]
    """Vehicle fairing length in meters."""

    fairing_mass: Annotated[float, PropertyInfo(alias="fairingMass")]
    """Vehicle fairing mass in kg."""

    fairing_material: Annotated[str, PropertyInfo(alias="fairingMaterial")]
    """Fairing material."""

    fairing_name: Annotated[str, PropertyInfo(alias="fairingName")]
    """Name of the fairing."""

    fairing_notes: Annotated[str, PropertyInfo(alias="fairingNotes")]
    """Notes/Description of the launch vehicle fairing."""

    family: str
    """Vehicle family."""

    geo_payload_mass: Annotated[float, PropertyInfo(alias="geoPayloadMass")]
    """Maximum vehicle payload mass to GEO orbit in kg."""

    gto_inj3_sig_accuracy_apogee_margin: Annotated[float, PropertyInfo(alias="gtoInj3SigAccuracyApogeeMargin")]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Apogee Margin (degrees)."""

    gto_inj3_sig_accuracy_apogee_target: Annotated[float, PropertyInfo(alias="gtoInj3SigAccuracyApogeeTarget")]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Apogee Target (degrees)."""

    gto_inj3_sig_accuracy_inclination_margin: Annotated[
        float, PropertyInfo(alias="gtoInj3SigAccuracyInclinationMargin")
    ]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Inclination Margin (degrees)."""

    gto_inj3_sig_accuracy_inclination_target: Annotated[
        float, PropertyInfo(alias="gtoInj3SigAccuracyInclinationTarget")
    ]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Inclination Target (degrees)."""

    gto_inj3_sig_accuracy_perigee_margin: Annotated[float, PropertyInfo(alias="gtoInj3SigAccuracyPerigeeMargin")]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Perigee Margin (degrees)."""

    gto_inj3_sig_accuracy_perigee_target: Annotated[float, PropertyInfo(alias="gtoInj3SigAccuracyPerigeeTarget")]
    """Launch vehicle GTO Injection 3 Sigma Accuracy Perigee Target (degrees)."""

    gto_payload_mass: Annotated[float, PropertyInfo(alias="gtoPayloadMass")]
    """Max vehicle payload mass to Geo-Transfer Orbit in kg."""

    launch_mass: Annotated[float, PropertyInfo(alias="launchMass")]
    """Vehicle total mass at launch time in kg (including all boosters)."""

    launch_prefix: Annotated[str, PropertyInfo(alias="launchPrefix")]
    """Vehicle launch prefix."""

    length: float
    """Vehicle length in meters."""

    leo_payload_mass: Annotated[float, PropertyInfo(alias="leoPayloadMass")]
    """Max vehicle payload mass to LEO orbit in kg."""

    manufacturer_org_id: Annotated[str, PropertyInfo(alias="manufacturerOrgId")]
    """ID of the organization that manufactures the launch vehicle."""

    max_accel_load: Annotated[float, PropertyInfo(alias="maxAccelLoad")]
    """Vehicle maximum acceleration load in g."""

    max_acoustic_level: Annotated[float, PropertyInfo(alias="maxAcousticLevel")]
    """Vehicle maximum acoustic level in dB."""

    max_acoustic_level_range: Annotated[float, PropertyInfo(alias="maxAcousticLevelRange")]
    """Vehicle maximum acoustic level range in Hz."""

    max_fairing_pressure_change: Annotated[float, PropertyInfo(alias="maxFairingPressureChange")]
    """Vehicle fairing maximum pressure change in kPa/sec."""

    max_flight_shock_force: Annotated[float, PropertyInfo(alias="maxFlightShockForce")]
    """Vehicle maximum flight shock force in g."""

    max_flight_shock_freq: Annotated[float, PropertyInfo(alias="maxFlightShockFreq")]
    """Vehicle maximum flight shock frequency in Hz."""

    max_payload_freq_lat: Annotated[float, PropertyInfo(alias="maxPayloadFreqLat")]
    """Vehicle maximum payload lateral frequency in Hz."""

    max_payload_freq_lon: Annotated[float, PropertyInfo(alias="maxPayloadFreqLon")]
    """Vehicle maximum payload longitudinal frequency in Hz."""

    minor_variant: Annotated[str, PropertyInfo(alias="minorVariant")]
    """Vehicle minor variant."""

    notes: str
    """Notes/Description of the launch vehicle."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    oxidizer: str
    """Oxidizer type."""

    payload_notes: Annotated[str, PropertyInfo(alias="payloadNotes")]
    """Notes/Description of the launch vehicle payload."""

    payload_separation_rate: Annotated[float, PropertyInfo(alias="payloadSeparationRate")]
    """Launch vehicle payload separation rate in m/s."""

    propellant: str
    """Propellant type."""

    sound_pressure_level: Annotated[float, PropertyInfo(alias="soundPressureLevel")]
    """Vehicle overall sound pressure level in dB."""

    source_url: Annotated[str, PropertyInfo(alias="sourceURL")]
    """Optional URL for additional information on the vehicle."""

    sso_payload_mass: Annotated[float, PropertyInfo(alias="ssoPayloadMass")]
    """Max vehicle payload mass to Sun-Synchronous Orbit in kg."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    variant: str
    """Vehicle variant."""
