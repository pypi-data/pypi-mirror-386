# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import date, datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel
from .shared.entity_full import EntityFull
from .shared.onorbit_antenna_full import OnorbitAntennaFull
from .shared.onorbit_battery_full import OnorbitBatteryFull
from .shared.onorbit_details_full import OnorbitDetailsFull
from .shared.onorbit_thruster_full import OnorbitThrusterFull
from .shared.onorbit_solar_array_full import OnorbitSolarArrayFull

__all__ = [
    "SeradataSpacecraftDetailGetResponse",
    "OnOrbit",
    "Scientific",
    "SeradataCommDetail",
    "SeradataEarlyWarning",
    "SeradataNavigation",
    "SeradataOpticalPayload",
    "SeradataRadarPayload",
    "SeradataSigIntPayload",
]


class OnOrbit(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    sat_no: int = FieldInfo(alias="satNo")
    """Satellite/Catalog number of the target on-orbit object."""

    source: str
    """Source of the data."""

    alt_name: Optional[str] = FieldInfo(alias="altName", default=None)
    """Alternate name of the on-orbit object."""

    antennas: Optional[List[OnorbitAntennaFull]] = None
    """Read-only collection of antennas on this on-orbit object."""

    batteries: Optional[List[OnorbitBatteryFull]] = None
    """Read-only collection of batteries on this on-orbit object."""

    category: Optional[
        Literal[
            "Unknown",
            "On-Orbit",
            "Decayed",
            "Cataloged Without State",
            "Launch Nominal",
            "Analyst Satellite",
            "Cislunar",
            "Lunar",
            "Hyperbolic",
            "Heliocentric",
            "Interplanetary",
            "Lagrangian",
            "Docked",
        ]
    ] = None
    """Category of the on-orbit object.

    (Unknown, On-Orbit, Decayed, Cataloged Without State, Launch Nominal, Analyst
    Satellite, Cislunar, Lunar, Hyperbolic, Heliocentric, Interplanetary,
    Lagrangian, Docked).
    """

    common_name: Optional[str] = FieldInfo(alias="commonName", default=None)
    """Common name of the on-orbit object."""

    constellation: Optional[str] = None
    """Constellation to which this satellite belongs."""

    country_code: Optional[str] = FieldInfo(alias="countryCode", default=None)
    """The country code.

    This value is typically the ISO 3166 Alpha-2 two-character country code, however
    it can also represent various consortiums that do not appear in the ISO
    document. The code must correspond to an existing country in the UDLâ€™s country
    API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code,
    or alternate code values that exist for the specified country code.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    decay_date: Optional[datetime] = FieldInfo(alias="decayDate", default=None)
    """Date of decay."""

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """
    For the public catalog, the idOnOrbit is typically the satellite number as a
    string, but may be a UUID for analyst or other unknown or untracked satellites,
    auto-generated by the system.
    """

    intl_des: Optional[str] = FieldInfo(alias="intlDes", default=None)
    """
    International Designator, typically of the format YYYYLLLAAA, where YYYY is the
    launch year, LLL is the sequential launch number of that year, and AAA is an
    optional launch piece designator for the launch.
    """

    launch_date: Optional[date] = FieldInfo(alias="launchDate", default=None)
    """Date of launch."""

    launch_site_id: Optional[str] = FieldInfo(alias="launchSiteId", default=None)
    """Id of the associated launchSite entity."""

    lifetime_years: Optional[int] = FieldInfo(alias="lifetimeYears", default=None)
    """Estimated lifetime of the on-orbit payload, if known."""

    mission_number: Optional[str] = FieldInfo(alias="missionNumber", default=None)
    """Mission number of the on-orbit object."""

    object_type: Optional[Literal["ROCKET BODY", "DEBRIS", "PAYLOAD", "PLATFORM", "MANNED", "UNKNOWN"]] = FieldInfo(
        alias="objectType", default=None
    )
    """
    Type of on-orbit object: ROCKET BODY, DEBRIS, PAYLOAD, PLATFORM, MANNED,
    UNKNOWN.
    """

    onorbit_details: Optional[List[OnorbitDetailsFull]] = FieldInfo(alias="onorbitDetails", default=None)
    """Read-only collection of details for this on-orbit object."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    solar_arrays: Optional[List[OnorbitSolarArrayFull]] = FieldInfo(alias="solarArrays", default=None)
    """Read-only collection of solar arrays on this on-orbit object."""

    thrusters: Optional[List[OnorbitThrusterFull]] = None
    """Read-only collection of thrusters (engines) on this on-orbit object."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class Scientific(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: str
    """Sensor name from sera data, e.g. SEM/MAG (SEM / Magnetometer)."""

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    entity: Optional[EntityFull] = None
    """
    An entity is a generic representation of any object within a space/SSA system
    such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An
    entity can have an operating unit, a location (if terrestrial), and statuses.
    """

    frequency_band: Optional[str] = FieldInfo(alias="frequencyBand", default=None)
    """Frequency band, e.g. Gamma."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_entity: Optional[str] = FieldInfo(alias="idEntity", default=None)
    """ID of the parent entity for this Scientific."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Unique identifier of the organization which manufactures this bus."""

    notes: Optional[str] = None
    """Notes associated with the payload."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    payload_category: Optional[str] = FieldInfo(alias="payloadCategory", default=None)
    """Payload category, e.g. Magnetometer, Radiometer, Sensor, etc."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SeradataCommDetail(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    band: Optional[str] = None
    """Name of the band of this RF range (e.g.

    X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more
    details and descriptions of each band name.
    """

    bandwidth: Optional[float] = None
    """Comm bandwidth in Mhz."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    eirp: Optional[float] = None
    """Effective isotropic radiated power in dB."""

    est_hts_total_capacity: Optional[float] = FieldInfo(alias="estHtsTotalCapacity", default=None)
    """Comm estimated HtsTotalCapacity in Gbps."""

    est_hts_total_user_downlink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="estHtsTotalUserDownlinkBandwidthPerBeam", default=None
    )
    """Comm estimated HtsTotalUserDownlinkBandwidthPerBeam in Mhz."""

    est_hts_total_user_uplink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="estHtsTotalUserUplinkBandwidthPerBeam", default=None
    )
    """Comm estimated HtsTotalUserUplinkBandwidthPerBeam in Mhz."""

    gateway_downlink_from: Optional[float] = FieldInfo(alias="gatewayDownlinkFrom", default=None)
    """Comm gatewayDownlinkFrom in Ghz."""

    gateway_downlink_to: Optional[float] = FieldInfo(alias="gatewayDownlinkTo", default=None)
    """Comm gatewayDownlinkTo in Ghz."""

    gateway_uplink_from: Optional[float] = FieldInfo(alias="gatewayUplinkFrom", default=None)
    """Comm gatewayUplinkFrom in Ghz."""

    gateway_uplink_to: Optional[float] = FieldInfo(alias="gatewayUplinkTo", default=None)
    """Comm gatewayUplinkTo in Ghz."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Comm hostedForCompanyOrgId."""

    hts_num_user_spot_beams: Optional[int] = FieldInfo(alias="htsNumUserSpotBeams", default=None)
    """Comm htsNumUserSpotBeams."""

    hts_user_downlink_bandwidth_per_beam: Optional[float] = FieldInfo(
        alias="htsUserDownlinkBandwidthPerBeam", default=None
    )
    """Comm htsUserDownlinkBandwidthPerBeam in Mhz."""

    hts_user_uplink_bandwidth_per_beam: Optional[float] = FieldInfo(alias="htsUserUplinkBandwidthPerBeam", default=None)
    """Comm htsUserUplinkBandwidthPerBeam in Mhz."""

    id_comm: Optional[str] = FieldInfo(alias="idComm", default=None)
    """UUID of the parent Comm record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Comm manufacturerOrgId."""

    num36_mhz_equivalent_transponders: Optional[int] = FieldInfo(alias="num36MhzEquivalentTransponders", default=None)
    """Comm num36MhzEquivalentTransponders."""

    num_operational_transponders: Optional[int] = FieldInfo(alias="numOperationalTransponders", default=None)
    """Comm numOperationalTransponders."""

    num_spare_transponders: Optional[int] = FieldInfo(alias="numSpareTransponders", default=None)
    """Comm numSpareTransponders."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    payload_notes: Optional[str] = FieldInfo(alias="payloadNotes", default=None)
    """Payload notes."""

    polarization: Optional[str] = None
    """Comm polarization."""

    solid_state_power_amp: Optional[float] = FieldInfo(alias="solidStatePowerAmp", default=None)
    """Solid state power amplifier, in Watts."""

    spacecraft_id: Optional[str] = FieldInfo(alias="spacecraftId", default=None)
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    trade_lease_org_id: Optional[str] = FieldInfo(alias="tradeLeaseOrgId", default=None)
    """Comm tradeLeaseOrgId."""

    traveling_wave_tube_amplifier: Optional[float] = FieldInfo(alias="travelingWaveTubeAmplifier", default=None)
    """Comm travelingWaveTubeAmplifier in Watts."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    user_downlink_from: Optional[float] = FieldInfo(alias="userDownlinkFrom", default=None)
    """Comm userDownlinkFrom in Ghz."""

    user_downlink_to: Optional[float] = FieldInfo(alias="userDownlinkTo", default=None)
    """Comm userDownlinkTo in Ghz."""

    user_uplink_from: Optional[float] = FieldInfo(alias="userUplinkFrom", default=None)
    """Comm userUplinkFrom in Ghz."""

    user_uplink_to: Optional[float] = FieldInfo(alias="userUplinkTo", default=None)
    """Comm userUplinkTo in Ghz."""


class SeradataEarlyWarning(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    best_resolution: Optional[float] = FieldInfo(alias="bestResolution", default=None)
    """Best resolution for this IR in meters."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    earth_pointing: Optional[bool] = FieldInfo(alias="earthPointing", default=None)
    """Is the sensor Earth Pointing."""

    frequency_limits: Optional[str] = FieldInfo(alias="frequencyLimits", default=None)
    """Frequency Limits for this IR."""

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this IR."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this IR."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_ir: Optional[str] = FieldInfo(alias="idIR", default=None)
    """UUID of the parent IR record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    missile_launch_phase_detection_ability: Optional[str] = FieldInfo(
        alias="missileLaunchPhaseDetectionAbility", default=None
    )
    """Missile Launch Phase Detection Ability."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g. Infra red telescope, Schmidt Telescope, etc."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    partner_spacecraft_id: Optional[str] = FieldInfo(alias="partnerSpacecraftId", default=None)
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    payload_notes: Optional[str] = FieldInfo(alias="payloadNotes", default=None)
    """Payload notes."""

    spectral_bands: Optional[str] = FieldInfo(alias="spectralBands", default=None)
    """Spectral Bands, e.g. Infra-Red."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SeradataNavigation(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    area_coverage: Optional[str] = FieldInfo(alias="areaCoverage", default=None)
    """Area of coverage, e.g. Worldwide, India, etc."""

    clock_type: Optional[str] = FieldInfo(alias="clockType", default=None)
    """Type of clock, e.g. Rubidium, Hydrogen Maser, etc."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_navigation: Optional[str] = FieldInfo(alias="idNavigation", default=None)
    """UUID of the parent Navigation record."""

    location_accuracy: Optional[float] = FieldInfo(alias="locationAccuracy", default=None)
    """Location accuracy in meters."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    mode_frequency: Optional[str] = FieldInfo(alias="modeFrequency", default=None)
    """Frequency for this payload."""

    modes: Optional[str] = None
    """Modes of operation."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g. WAAS GEO-5, etc."""

    notes: Optional[str] = None
    """Payload notes."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    partner_spacecraft_id: Optional[str] = FieldInfo(alias="partnerSpacecraftId", default=None)
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    payload_type: Optional[str] = FieldInfo(alias="payloadType", default=None)
    """Navigation payload type, e.g. WAAS, GAGAN, etc."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SeradataOpticalPayload(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    best_resolution: Optional[float] = FieldInfo(alias="bestResolution", default=None)
    """Best resolution."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    field_of_regard: Optional[float] = FieldInfo(alias="fieldOfRegard", default=None)
    """Field of regard of this radar in degrees."""

    field_of_view: Optional[float] = FieldInfo(alias="fieldOfView", default=None)
    """Field of view of this radar in kilometers."""

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this payload."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this payload."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """UUID of the Sensor record."""

    imaging_payload_category: Optional[str] = FieldInfo(alias="imagingPayloadCategory", default=None)
    """Imaging category for this payload, e.g. Multispectral, Infrared, Panchromatic."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g.

    TOURNESOL, MESSR (Multispectral Self-Scanning Radiometer), AWFI, etc.
    """

    notes: Optional[str] = None
    """Payload notes."""

    number_of_film_return_canisters: Optional[int] = FieldInfo(alias="numberOfFilmReturnCanisters", default=None)
    """Number of film return canisters."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    pointing_method: Optional[str] = FieldInfo(alias="pointingMethod", default=None)
    """Point method for this radar, e.g. Spacecraft."""

    recorder_size: Optional[str] = FieldInfo(alias="recorderSize", default=None)
    """Recorder size."""

    spectral_band: Optional[str] = FieldInfo(alias="spectralBand", default=None)
    """Spectral Band supported by this payload, e.g.

    Green, Red, Mid-wave infrared, etc.
    """

    spectral_frequency_limits: Optional[str] = FieldInfo(alias="spectralFrequencyLimits", default=None)
    """Frequency limit for this payload, e.g. 0.51 - 0.59."""

    swath_width: Optional[float] = FieldInfo(alias="swathWidth", default=None)
    """Swath width in kilometers."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SeradataRadarPayload(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    bandwidth: Optional[float] = None
    """Radar bandwidth in mega hertz."""

    best_resolution: Optional[float] = FieldInfo(alias="bestResolution", default=None)
    """Best resolution in meters."""

    category: Optional[str] = None
    """Radar category, e.g. SAR, Surface Search, etc."""

    constellation_interferometric_capability: Optional[str] = FieldInfo(
        alias="constellationInterferometricCapability", default=None
    )
    """Constellation interferometric capability."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    duty_cycle: Optional[str] = FieldInfo(alias="dutyCycle", default=None)
    """Duty cycle."""

    field_of_regard: Optional[float] = FieldInfo(alias="fieldOfRegard", default=None)
    """Field of regard of this radar in degrees."""

    field_of_view: Optional[float] = FieldInfo(alias="fieldOfView", default=None)
    """Field of view of this radar in kilometers."""

    frequency: Optional[float] = None
    """Frequency in giga hertz."""

    frequency_band: Optional[str] = FieldInfo(alias="frequencyBand", default=None)
    """Name of the band of this RF range (e.g.

    X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more
    details and descriptions of each band name.
    """

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this payload."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this payload."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """UUID of the Sensor record."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    name: Optional[str] = None
    """Sensor name from Seradata, e.g.

    ALT (Radar Altimeter), COSI (Corea SAR Instrument), etc.
    """

    notes: Optional[str] = None
    """Payload notes."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    partner_spacecraft: Optional[str] = FieldInfo(alias="partnerSpacecraft", default=None)
    """Partner seradata-spacecraft."""

    pointing_method: Optional[str] = FieldInfo(alias="pointingMethod", default=None)
    """Point method for this radar, e.g. Spacecraft."""

    receive_polarization: Optional[str] = FieldInfo(alias="receivePolarization", default=None)
    """Receive polarization, e.g. Lin Dual, Lin vert, etc."""

    recorder_size: Optional[str] = FieldInfo(alias="recorderSize", default=None)
    """Recorder size, e.g. 256."""

    swath_width: Optional[float] = FieldInfo(alias="swathWidth", default=None)
    """Swath width in kilometers."""

    transmit_polarization: Optional[str] = FieldInfo(alias="transmitPolarization", default=None)
    """Transmit polarization, e.g. Lin Dual, Lin vert, etc."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    wave_length: Optional[float] = FieldInfo(alias="waveLength", default=None)
    """Wave length in meters."""


class SeradataSigIntPayload(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: str
    """Source of the data."""

    spacecraft_id: str = FieldInfo(alias="spacecraftId")
    """Seradata ID of the spacecraft (SeradataSpacecraftDetails ID)."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    frequency_coverage: Optional[str] = FieldInfo(alias="frequencyCoverage", default=None)
    """Frequency coverage for this payload."""

    ground_station_locations: Optional[str] = FieldInfo(alias="groundStationLocations", default=None)
    """Ground Station Locations for this payload."""

    ground_stations: Optional[str] = FieldInfo(alias="groundStations", default=None)
    """Ground Station info for this payload."""

    hosted_for_company_org_id: Optional[str] = FieldInfo(alias="hostedForCompanyOrgId", default=None)
    """Hosted for company/Organization Id."""

    id_sensor: Optional[str] = FieldInfo(alias="idSensor", default=None)
    """UUID of the Sensor record."""

    intercept_parameters: Optional[str] = FieldInfo(alias="interceptParameters", default=None)
    """Intercept parameters."""

    manufacturer_org_id: Optional[str] = FieldInfo(alias="manufacturerOrgId", default=None)
    """Manufacturer Organization Id."""

    name: Optional[str] = None
    """Sensor name from Seradata."""

    notes: Optional[str] = None
    """Payload notes."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    positional_accuracy: Optional[str] = FieldInfo(alias="positionalAccuracy", default=None)
    """Positional Accuracy for this payload."""

    swath_width: Optional[float] = FieldInfo(alias="swathWidth", default=None)
    """Swath Width in kilometers."""

    type: Optional[str] = None
    """SIGINT Payload type, e.g. Comint, Elint, etc."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """


class SeradataSpacecraftDetailGetResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    name: str
    """Spacecraft name."""

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    additional_missions_groups: Optional[str] = FieldInfo(alias="additionalMissionsGroups", default=None)
    """Spacecraft additional missions and groups."""

    altitude: Optional[float] = None
    """Spacecraft latest altitude in km."""

    annual_insured_depreciation_factor: Optional[float] = FieldInfo(
        alias="annualInsuredDepreciationFactor", default=None
    )
    """Annual insured depreciaion factor as a percent fraction."""

    annual_insured_depreciation_factor_estimated: Optional[bool] = FieldInfo(
        alias="annualInsuredDepreciationFactorEstimated", default=None
    )
    """
    Boolean indicating if the spacecraft annualInsuredDepreciationFactor is
    estimated.
    """

    apogee: Optional[float] = None
    """Apogee in km."""

    bus_id: Optional[str] = FieldInfo(alias="busId", default=None)
    """Spacecraft Bus ID."""

    capability_lost: Optional[float] = FieldInfo(alias="capabilityLost", default=None)
    """Total capability lost as a percent fraction."""

    capacity_lost: Optional[float] = FieldInfo(alias="capacityLost", default=None)
    """Total capacity lost as a percent fraction."""

    catalog_number: Optional[int] = FieldInfo(alias="catalogNumber", default=None)
    """NORAD satellite number if available."""

    collision_risk_cm: Optional[float] = FieldInfo(alias="collisionRiskCM", default=None)
    """Spacecraft collision risk 1cm sqm latest."""

    collision_risk_mm: Optional[float] = FieldInfo(alias="collisionRiskMM", default=None)
    """Spacecraft collision risk 1mm sqm latest."""

    combined_cost_estimated: Optional[bool] = FieldInfo(alias="combinedCostEstimated", default=None)
    """Boolean indicating if the spacecraft combined new cost is estimated."""

    combined_new_cost: Optional[float] = FieldInfo(alias="combinedNewCost", default=None)
    """Combined cost of spacecraft at new in M USD."""

    commercial_launch: Optional[bool] = FieldInfo(alias="commercialLaunch", default=None)
    """Boolean indicating if the launch was commercial."""

    constellation: Optional[str] = None
    """Spacecraft constellation."""

    cost_estimated: Optional[bool] = FieldInfo(alias="costEstimated", default=None)
    """Boolean indicating if the spacecraft cost is estimated."""

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    cubesat_dispenser_type: Optional[str] = FieldInfo(alias="cubesatDispenserType", default=None)
    """Cubesat dispenser type."""

    current_age: Optional[float] = FieldInfo(alias="currentAge", default=None)
    """Current age in years."""

    date_of_observation: Optional[datetime] = FieldInfo(alias="dateOfObservation", default=None)
    """Spacecraft date of observation."""

    description: Optional[str] = None
    """Description associated with the spacecraft."""

    design_life: Optional[int] = FieldInfo(alias="designLife", default=None)
    """Spacecraft design life in days."""

    dry_mass: Optional[float] = FieldInfo(alias="dryMass", default=None)
    """Mass dry in kg."""

    expected_life: Optional[int] = FieldInfo(alias="expectedLife", default=None)
    """Spacecraft expected life in days."""

    geo_position: Optional[float] = FieldInfo(alias="geoPosition", default=None)
    """WGS84 longitude of the spacecraftâ€™s latest GEO position, in degrees.

    -180 to 180 degrees (negative values west of Prime Meridian).
    """

    id_on_orbit: Optional[str] = FieldInfo(alias="idOnOrbit", default=None)
    """UUID of the parent Onorbit record, if available."""

    inclination: Optional[float] = None
    """Seradata provided inclination in degrees."""

    insurance_losses_total: Optional[float] = FieldInfo(alias="insuranceLossesTotal", default=None)
    """Spacecraft total insurance losses as a fraction."""

    insurance_notes: Optional[str] = FieldInfo(alias="insuranceNotes", default=None)
    """Insurance notes for the spacecraft."""

    insurance_premium_at_launch: Optional[float] = FieldInfo(alias="insurancePremiumAtLaunch", default=None)
    """Insurance premium at launch in M USD."""

    insurance_premium_at_launch_estimated: Optional[bool] = FieldInfo(
        alias="insurancePremiumAtLaunchEstimated", default=None
    )
    """Boolean indicating if the spacecraft insurancePremiumAtLaunch is estimated."""

    insured_at_launch: Optional[bool] = FieldInfo(alias="insuredAtLaunch", default=None)
    """Boolean indicating if the spacecraft was insured at launch."""

    insured_value_at_launch: Optional[float] = FieldInfo(alias="insuredValueAtLaunch", default=None)
    """Insured value of spacecraft at launch in M USD."""

    insured_value_launch_estimated: Optional[bool] = FieldInfo(alias="insuredValueLaunchEstimated", default=None)
    """Boolean indicating if the spacecraft insured value at launch is estimated."""

    intl_number: Optional[str] = FieldInfo(alias="intlNumber", default=None)
    """Seradata international number."""

    lat: Optional[float] = None
    """Spacecraft latest latitude in degrees."""

    launch_arranger: Optional[str] = FieldInfo(alias="launchArranger", default=None)
    """Spacecraft launch arranger."""

    launch_arranger_country: Optional[str] = FieldInfo(alias="launchArrangerCountry", default=None)
    """Spacecraft launch arranger country."""

    launch_characteristic: Optional[str] = FieldInfo(alias="launchCharacteristic", default=None)
    """Seradata launch characteristic (e.g. Expendable, Reusable (New), etc)."""

    launch_cost: Optional[float] = FieldInfo(alias="launchCost", default=None)
    """Cost of launch in M USD."""

    launch_cost_estimated: Optional[bool] = FieldInfo(alias="launchCostEstimated", default=None)
    """Boolean indicating if the spacecraft launch cost is estimated."""

    launch_country: Optional[str] = FieldInfo(alias="launchCountry", default=None)
    """Seradata launch country."""

    launch_date: Optional[datetime] = FieldInfo(alias="launchDate", default=None)
    """Launch date."""

    launch_date_remarks: Optional[str] = FieldInfo(alias="launchDateRemarks", default=None)
    """Seradata remarks on launch date."""

    launch_id: Optional[str] = FieldInfo(alias="launchId", default=None)
    """Seradata launch ID."""

    launch_mass: Optional[float] = FieldInfo(alias="launchMass", default=None)
    """Mass at launch in kg."""

    launch_notes: Optional[str] = FieldInfo(alias="launchNotes", default=None)
    """Insurance notes for the spacecraft."""

    launch_number: Optional[str] = FieldInfo(alias="launchNumber", default=None)
    """Seradata launch number."""

    launch_provider: Optional[str] = FieldInfo(alias="launchProvider", default=None)
    """Seradata launch provider."""

    launch_provider_country: Optional[str] = FieldInfo(alias="launchProviderCountry", default=None)
    """Seradata launch provider country."""

    launch_provider_flight_number: Optional[str] = FieldInfo(alias="launchProviderFlightNumber", default=None)
    """Seradata launch vehicle family."""

    launch_site_id: Optional[str] = FieldInfo(alias="launchSiteId", default=None)
    """Seradata Launch Site ID."""

    launch_site_name: Optional[str] = FieldInfo(alias="launchSiteName", default=None)
    """Launch Site Name."""

    launch_type: Optional[str] = FieldInfo(alias="launchType", default=None)
    """Seradata launch type (e.g. Launched, Future, etc)."""

    launch_vehicle_id: Optional[str] = FieldInfo(alias="launchVehicleId", default=None)
    """Seradata launch ID."""

    leased: Optional[bool] = None
    """Boolean indicating if the spacecraft was leased."""

    life_lost: Optional[float] = FieldInfo(alias="lifeLost", default=None)
    """Spacecraft life lost as a percent fraction."""

    lon: Optional[float] = None
    """Spacecraft latest longitude in degrees."""

    mass_category: Optional[str] = FieldInfo(alias="massCategory", default=None)
    """Mass category (e.g.

    2500 - 3500kg - Large Satellite, 10 - 100 kg - Microsatellite, etc).
    """

    name_at_launch: Optional[str] = FieldInfo(alias="nameAtLaunch", default=None)
    """Spacecraft name at launch."""

    new_cost: Optional[float] = FieldInfo(alias="newCost", default=None)
    """Cost of spacecraft at new in M USD."""

    notes: Optional[str] = None
    """Notes on the spacecraft."""

    num_humans: Optional[int] = FieldInfo(alias="numHumans", default=None)
    """Number of humans carried on spacecraft."""

    on_orbit: Optional[OnOrbit] = FieldInfo(alias="onOrbit", default=None)
    """Model object representing on-orbit objects or satellites in the system."""

    operator: Optional[str] = None
    """Spacecraft operator name."""

    operator_country: Optional[str] = FieldInfo(alias="operatorCountry", default=None)
    """Spacecraft operator country."""

    orbit_category: Optional[str] = FieldInfo(alias="orbitCategory", default=None)
    """Spacecraft orbit category (e.g GEO, LEO, etc)."""

    orbit_sub_category: Optional[str] = FieldInfo(alias="orbitSubCategory", default=None)
    """Spacecraft sub orbit category (e.g LEO - Sun-synchronous, Geostationary, etc)."""

    order_date: Optional[datetime] = FieldInfo(alias="orderDate", default=None)
    """Spacecraft order date."""

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    owner: Optional[str] = None
    """Spacecraft owner name."""

    owner_country: Optional[str] = FieldInfo(alias="ownerCountry", default=None)
    """Spacecraft owner country."""

    perigee: Optional[float] = None
    """Perigee in km."""

    period: Optional[float] = None
    """Spacecraft period in minutes."""

    primary_mission_group: Optional[str] = FieldInfo(alias="primaryMissionGroup", default=None)
    """Spacecraft primary mission and group."""

    prime_manufacturer_org_id: Optional[str] = FieldInfo(alias="primeManufacturerOrgId", default=None)
    """UUID of the prime manufacturer organization, if available."""

    program_name: Optional[str] = FieldInfo(alias="programName", default=None)
    """Spacecraft program name."""

    quantity: Optional[int] = None
    """Spacecraft quantity."""

    reusable_flights: Optional[str] = FieldInfo(alias="reusableFlights", default=None)
    """Spacecraft reusable flights."""

    reused_hull_name: Optional[str] = FieldInfo(alias="reusedHullName", default=None)
    """Spacecraft reused hull name."""

    scientific: Optional[List[Scientific]] = None
    """
    Read-only details of the Scientific object, only used during detail queries (not
    to be provided on create/update operations).
    """

    sector: Optional[str] = None
    """Seradata sector (e.g. Commercial, Military, Civil/Other)."""

    seradata_comm_details: Optional[List[SeradataCommDetail]] = FieldInfo(alias="seradataCommDetails", default=None)
    """
    Read-only details of the SeradataCommDetails object, only used during detail
    queries (not to be provided on create/update operations).
    """

    seradata_early_warning: Optional[List[SeradataEarlyWarning]] = FieldInfo(alias="seradataEarlyWarning", default=None)
    """
    Read-only details of the SeradataEarlyWarning object, only used during detail
    queries (not to be provided on create/update operations).
    """

    seradata_navigation: Optional[List[SeradataNavigation]] = FieldInfo(alias="seradataNavigation", default=None)
    """
    Read-only details of the SeradataNavigation object, only used during detail
    queries (not to be provided on create/update operations).
    """

    seradata_optical_payload: Optional[List[SeradataOpticalPayload]] = FieldInfo(
        alias="seradataOpticalPayload", default=None
    )
    """
    Read-only details of the SeradataOpticalPayload object, only used during detail
    queries (not to be provided on create/update operations).
    """

    seradata_radar_payload: Optional[List[SeradataRadarPayload]] = FieldInfo(alias="seradataRadarPayload", default=None)
    """
    Read-only details of the SeradataRadarPayload object, only used during detail
    queries (not to be provided on create/update operations).
    """

    seradata_sig_int_payload: Optional[List[SeradataSigIntPayload]] = FieldInfo(
        alias="seradataSigIntPayload", default=None
    )
    """
    Read-only details of the SeradataSigIntPayload object, only used during detail
    queries (not to be provided on create/update operations).
    """

    serial_number: Optional[str] = FieldInfo(alias="serialNumber", default=None)
    """Spacecraft serial number."""

    stabilizer: Optional[str] = None
    """Spacecraft stabilizer (e.g. 3-Axis, Gravity Gradiant, etc)."""

    status: Optional[str] = None
    """Spacecraft status (e.g.

    Inactive - Retired, Inactive - Re-entered, Active, etc).
    """

    total_claims: Optional[int] = FieldInfo(alias="totalClaims", default=None)
    """Number of insurance claims for this spacecraft."""

    total_fatalities: Optional[int] = FieldInfo(alias="totalFatalities", default=None)
    """Number of fatalities related to this spacecraft."""

    total_injuries: Optional[int] = FieldInfo(alias="totalInjuries", default=None)
    """Number of injuries related to this spacecraft."""

    total_payload_power: Optional[float] = FieldInfo(alias="totalPayloadPower", default=None)
    """Mass dry in kg."""

    updated_at: Optional[datetime] = FieldInfo(alias="updatedAt", default=None)
    """Time the row was last updated in the database, auto-populated by the system."""

    updated_by: Optional[str] = FieldInfo(alias="updatedBy", default=None)
    """
    Application user who updated the row in the database, auto-populated by the
    system.
    """

    youtube_launch_link: Optional[str] = FieldInfo(alias="youtubeLaunchLink", default=None)
    """Youtube link of launch."""
