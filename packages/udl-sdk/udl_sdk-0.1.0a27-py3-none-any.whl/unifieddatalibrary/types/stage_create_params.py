# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["StageCreateParams"]


class StageCreateParams(TypedDict, total=False):
    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    id_engine: Required[Annotated[str, PropertyInfo(alias="idEngine")]]
    """Identifier of the Engine record for this stage."""

    id_launch_vehicle: Required[Annotated[str, PropertyInfo(alias="idLaunchVehicle")]]
    """Identifier of the launch vehicle record for this stage."""

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    avionics_notes: Annotated[str, PropertyInfo(alias="avionicsNotes")]
    """Description/notes of the stage avionics."""

    burn_time: Annotated[float, PropertyInfo(alias="burnTime")]
    """Total burn time of the stage engines in seconds."""

    control_thruster1: Annotated[str, PropertyInfo(alias="controlThruster1")]
    """Control thruster 1 type."""

    control_thruster2: Annotated[str, PropertyInfo(alias="controlThruster2")]
    """Control thruster 2 type."""

    diameter: float
    """Stage maximum external diameter in meters."""

    length: float
    """Stage length in meters."""

    main_engine_thrust_sea_level: Annotated[float, PropertyInfo(alias="mainEngineThrustSeaLevel")]
    """Thrust of the stage main engine at sea level in kN."""

    main_engine_thrust_vacuum: Annotated[float, PropertyInfo(alias="mainEngineThrustVacuum")]
    """Thrust of the stage main engine in a vacuum in kN."""

    manufacturer_org_id: Annotated[str, PropertyInfo(alias="manufacturerOrgId")]
    """ID of the organization that manufactures this launch stage."""

    mass: float
    """Stage gross mass in kg."""

    notes: str
    """Description/notes of the stage."""

    num_burns: Annotated[int, PropertyInfo(alias="numBurns")]
    """Number of burns for the stage engines."""

    num_control_thruster1: Annotated[int, PropertyInfo(alias="numControlThruster1")]
    """Number of type control thruster 1."""

    num_control_thruster2: Annotated[int, PropertyInfo(alias="numControlThruster2")]
    """Number of type control thruster 2."""

    num_engines: Annotated[int, PropertyInfo(alias="numEngines")]
    """The number of the specified engines on this launch stage."""

    num_stage_elements: Annotated[int, PropertyInfo(alias="numStageElements")]
    """Number of launch stage elements used in this stage."""

    num_vernier: Annotated[int, PropertyInfo(alias="numVernier")]
    """Number of vernier or additional engines."""

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    photo_urls: Annotated[SequenceNotStr[str], PropertyInfo(alias="photoURLs")]
    """Array of URLs of photos of the stage."""

    restartable: bool
    """Boolean indicating if this launch stage can be restarted."""

    reusable: bool
    """Boolean indicating if this launch stage is reusable."""

    stage_number: Annotated[int, PropertyInfo(alias="stageNumber")]
    """The stage number of this launch stage."""

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    thrust_sea_level: Annotated[float, PropertyInfo(alias="thrustSeaLevel")]
    """Total thrust of the stage at sea level in kN."""

    thrust_vacuum: Annotated[float, PropertyInfo(alias="thrustVacuum")]
    """Total thrust of the stage in a vacuum in kN."""

    type: str
    """Engine cycle type (e.g.

    Electrostatic Ion, Pressure Fed, Hall, Catalytic Decomposition, etc.).
    """

    vernier: str
    """Engine vernier or additional engine type."""

    vernier_burn_time: Annotated[float, PropertyInfo(alias="vernierBurnTime")]
    """Total burn time of the vernier or additional stage engines in seconds."""

    vernier_num_burns: Annotated[int, PropertyInfo(alias="vernierNumBurns")]
    """Total number of burns of the vernier or additional stage engines."""

    vernier_thrust_sea_level: Annotated[float, PropertyInfo(alias="vernierThrustSeaLevel")]
    """Total thrust of one of the vernier or additional engines at sea level in kN."""

    vernier_thrust_vacuum: Annotated[float, PropertyInfo(alias="vernierThrustVacuum")]
    """Total thrust of one of the vernier or additional engines in a vacuum in kN."""
