# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Union, Iterable
from datetime import datetime
from typing_extensions import Literal, Required, Annotated, TypedDict

from .._types import SequenceNotStr
from .._utils import PropertyInfo

__all__ = ["OnorbitassessmentUnvalidatedPublishParams", "Body"]


class OnorbitassessmentUnvalidatedPublishParams(TypedDict, total=False):
    body: Required[Iterable[Body]]


class Body(TypedDict, total=False):
    assmt_time: Required[Annotated[Union[str, datetime], PropertyInfo(alias="assmtTime", format="iso8601")]]
    """The time of the assessment, in ISO 8601 UTC format with millisecond precision."""

    classification_marking: Required[Annotated[str, PropertyInfo(alias="classificationMarking")]]
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Required[Annotated[Literal["REAL", "TEST", "SIMULATED", "EXERCISE"], PropertyInfo(alias="dataMode")]]
    """Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:

    EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
    may include both real and simulated data.

    REAL:&nbsp;Data collected or produced that pertains to real-world objects,
    events, and analysis.

    SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
    datasets.

    TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
    requirements, and for validating technical, functional, and performance
    characteristics.
    """

    source: Required[str]
    """Source of the data."""

    id: str
    """Unique identifier of the record, auto-generated by the system."""

    assessment: str
    """The overall assessment of the on-orbit object.

    The assessment will vary depending on the assessment level. If assmtLevel =
    SATELLITE, then expected values include HEALTHY, NO DATA, UNHEALTHY, and
    UNKNOWN. If assmtLevel = SIGNATURE, then expected values include ANOMALOUS, BAD,
    NOMINAL, and UNKNOWN.
    """

    assmt_details: Annotated[str, PropertyInfo(alias="assmtDetails")]
    """Comments and details concerning this assessment."""

    assmt_level: Annotated[str, PropertyInfo(alias="assmtLevel")]
    """The level (SATELLITE, SIGNATURE) of this assessment."""

    assmt_rot_period: Annotated[float, PropertyInfo(alias="assmtRotPeriod")]
    """
    The rotational period, in seconds, determined in the assessment of the on-orbit
    object.
    """

    assmt_sub_type: Annotated[str, PropertyInfo(alias="assmtSubType")]
    """The sub-type for this assessment.

    The sub-type provides an additional level of specification when the assessment
    level = SIGNATURE, and will vary based on the overall assessment. If assessment
    = ANOMALOUS, then expected values include ACTIVITY OBSERVED, BAD CONFIGURATION,
    MANEUVERING, OTHER, POSSIBLE SAFE MODE, UNSTABLE, and WRONG ATTITUDE. If
    assessment = BAD, then expected values include BAD-MISSING STATE VECTOR,
    CORRUPT-NOISY, CROSS-TAG, DROPOUTS, INSUFFICIENT DATA, INSUFFICIENT LOOK ANGLE,
    NO CROSSOVER, and SHORT. If assessment = NOMINAL, then expected values include
    ACTIVITY OBSERVED, GRAVITY GRADIENT, HORIZON STABLE, INERTIAL, MANEUVERING, SPIN
    STABLE, and STABLE. If assessment = UNKNOWN, then expected values include NO
    COHORT, and OTHER.
    """

    assmt_url: Annotated[str, PropertyInfo(alias="assmtURL")]
    """URL to an external location containing additional assessment information."""

    auto_assmt: Annotated[bool, PropertyInfo(alias="autoAssmt")]
    """
    Flag indicating whether this assessment was auto-generated (true) or produced by
    an analyst.
    """

    collection_url: Annotated[str, PropertyInfo(alias="collectionURL")]
    """
    URL to an external location containing the data that was used to make this
    assessment.
    """

    components: SequenceNotStr[str]
    """
    Array of the affected spacecraft component(s) relevant to this assessment, if
    non-nominal.
    """

    id_on_orbit: Annotated[str, PropertyInfo(alias="idOnOrbit")]
    """
    Unique identifier of the target satellite on-orbit object to which this
    assessment applies. This ID can be used to obtain additional information on an
    OnOrbit object using the 'get by ID' operation (e.g. /udl/onorbit/{id}). For
    example, the OnOrbit with idOnOrbit = 25544 would be queried as
    /udl/onorbit/25544.
    """

    id_sensor: Annotated[str, PropertyInfo(alias="idSensor")]
    """
    Unique identifier of the sensor from which the signature data applied in this
    assessment was collected. This ID can be used to obtain additional information
    on a sensor using the 'get by ID' operation (e.g. /udl/sensor/{id}). For
    example, the sensor with idSensor = abc would be queried as /udl/sensor/abc.
    """

    ob_duration: Annotated[float, PropertyInfo(alias="obDuration")]
    """
    The total duration, in hours, of the signature or set of signatures used to
    create this assessment.
    """

    ob_time: Annotated[Union[str, datetime], PropertyInfo(alias="obTime", format="iso8601")]
    """The observation time, in ISO 8601 UTC format with millisecond precision.

    For non-instantaneous collections, the observation time will correspond to the
    earliest timestamp in the signature or signature set data.
    """

    origin: str
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_object_id: Annotated[str, PropertyInfo(alias="origObjectId")]
    """
    Optional identifier provided by the source to indicate the target on-orbit
    object to which this assessment applies. This may be an internal identifier and
    not necessarily map to a valid satellite number.
    """

    orig_sensor_id: Annotated[str, PropertyInfo(alias="origSensorId")]
    """
    Optional identifier provided by the observation source to indicate the sensor
    which produced this observation. This may be an internal identifier and not
    necessarily a valid sensor ID.
    """

    sat_no: Annotated[int, PropertyInfo(alias="satNo")]
    """
    Satellite/Catalog number of the target on-orbit object to which this assessment
    applies.
    """

    sig_data_type: Annotated[str, PropertyInfo(alias="sigDataType")]
    """
    The observation data type (LONG DWELL, NARROWBAND, PHOTOMETRIC POL, PHOTOMETRY,
    RANGE PROFILER, WIDEBAND, etc.) contained in the signature. Applies when
    assmtLevel = SIGNATURE.
    """

    src_ids: Annotated[SequenceNotStr[str], PropertyInfo(alias="srcIds")]
    """Array of UUIDs of the UDL data records that are related to this assessment.

    See the associated 'srcTyps' array for the specific types of data, positionally
    corresponding to the UUIDs in this array. The 'srcTyps' and 'srcIds' arrays must
    match in size. See the corresponding srcTyps array element for the data type of
    the UUID and use the appropriate API operation to retrieve that object.
    """

    src_typs: Annotated[SequenceNotStr[str], PropertyInfo(alias="srcTyps")]
    """
    Array of UDL record types (DOA, ELSET, EO, ESID, GROUNDIMAGE, POI, MANEUVER,
    MTI, RADAR, RF, SIGACT, SKYIMAGE, SV, TRACK, etc.) that are related to this
    assessment. See the associated 'srcIds' array for the record UUIDs, positionally
    corresponding to the record types in this array. The 'srcTyps' and 'srcIds'
    arrays must match in size.
    """

    tags: SequenceNotStr[str]
    """
    Optional array of provider/source specific tags for this data, where each
    element is no longer than 32 characters, used for implementing data owner
    conditional access controls to restrict access to the data. Should be left null
    by data providers unless conditional access controls are coordinated with the
    UDL team.
    """

    transaction_id: Annotated[str, PropertyInfo(alias="transactionId")]
    """
    Optional identifier to track a commercial or marketplace transaction executed to
    produce this data.
    """
