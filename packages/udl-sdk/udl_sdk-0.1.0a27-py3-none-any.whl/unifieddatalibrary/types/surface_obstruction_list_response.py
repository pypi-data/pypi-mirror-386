# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import List, Optional
from datetime import datetime
from typing_extensions import Literal

from pydantic import Field as FieldInfo

from .._models import BaseModel

__all__ = ["SurfaceObstructionListResponse"]


class SurfaceObstructionListResponse(BaseModel):
    classification_marking: str = FieldInfo(alias="classificationMarking")
    """Classification marking of the data in IC/CAPCO Portion-marked format."""

    data_mode: Literal["REAL", "TEST", "SIMULATED", "EXERCISE"] = FieldInfo(alias="dataMode")
    """Indicator of whether the data is REAL, TEST, SIMULATED, or EXERCISE data."""

    id_surface: str = FieldInfo(alias="idSurface")
    """The unique identifier of the associated surface record.

    This field is required when posting, updating, or deleting a SurfaceObstruction
    record.
    """

    source: str
    """Source of the data."""

    id: Optional[str] = None
    """Unique identifier of the record, auto-generated by the system."""

    advisory_required: Optional[List[str]] = FieldInfo(alias="advisoryRequired", default=None)
    """
    Array of all vehicles that are affected by this obstruction at the surface
    end-point, and require an advisory for usage.
    """

    approval_required: Optional[List[str]] = FieldInfo(alias="approvalRequired", default=None)
    """
    Array of all vehicles that are affected by this obstruction at the surface
    end-point, and require an approval for usage.
    """

    created_at: Optional[datetime] = FieldInfo(alias="createdAt", default=None)
    """Time the row was created in the database, auto-populated by the system."""

    created_by: Optional[str] = FieldInfo(alias="createdBy", default=None)
    """
    Application user who created the row in the database, auto-populated by the
    system.
    """

    distance_from_center_line: Optional[float] = FieldInfo(alias="distanceFromCenterLine", default=None)
    """The distance from the surface center line to this obstruction, in feet."""

    distance_from_edge: Optional[float] = FieldInfo(alias="distanceFromEdge", default=None)
    """The distance from the surface edge to this obstruction, in feet."""

    distance_from_threshold: Optional[float] = FieldInfo(alias="distanceFromThreshold", default=None)
    """The distance from the surface threshold to this obstruction, in feet."""

    id_navigational_obstruction: Optional[str] = FieldInfo(alias="idNavigationalObstruction", default=None)
    """The unique identifier of the associated NavigationalObstruction record."""

    obstruction_desc: Optional[str] = FieldInfo(alias="obstructionDesc", default=None)
    """Description of this surface obstruction."""

    obstruction_height: Optional[float] = FieldInfo(alias="obstructionHeight", default=None)
    """The height above ground level of the surface obstruction, in feet."""

    obstruction_side_code: Optional[str] = FieldInfo(alias="obstructionSideCode", default=None)
    """
    A code that indicates which side of the surface end is affected by this
    obstruction.
    """

    origin: Optional[str] = None
    """
    Originating system or organization which produced the data, if different from
    the source. The origin may be different than the source if the source was a
    mediating system which forwarded the data on behalf of the origin system. If
    null, the source may be assumed to be the origin.
    """

    orig_network: Optional[str] = FieldInfo(alias="origNetwork", default=None)
    """
    The originating source network on which this record was created, auto-populated
    by the system.
    """

    source_dl: Optional[str] = FieldInfo(alias="sourceDL", default=None)
    """The source data library from which this record was received.

    This could be a remote or tactical UDL or another data library. If null, the
    record should be assumed to have originated from the primary Enterprise UDL.
    """
