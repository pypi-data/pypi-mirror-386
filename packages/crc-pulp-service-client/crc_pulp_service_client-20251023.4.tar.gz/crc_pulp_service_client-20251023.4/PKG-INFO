Metadata-Version: 2.4
Name: crc-pulp_service-client
Version: 20251023.4
Summary: Pulp 3 API
Home-page: 
Author: Pulp Team
Author-email: pulp-list@redhat.com
License: GPLv2+
Keywords: pulp,pulpcore,client,Pulp 3 API
Description-Content-Type: text/markdown
Requires-Dist: urllib3<3.0.0,>=1.25.3
Requires-Dist: python-dateutil<2.10.0,>=2.8.1
Requires-Dist: pydantic>=2
Requires-Dist: typing-extensions>=4.7.1
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: keywords
Dynamic: license
Dynamic: requires-dist
Dynamic: summary

# pulpcore.client.pulp_service.ApiCreateDomainApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**post**](ApiCreateDomainApi.md#post) | **POST** /api/pulp/create-domain/ | Create domain


# **post**
> DomainResponse post(domain, x_task_diagnostics=x_task_diagnostics)

Create domain

Create a new domain for from S3 template domain, self-service path

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.domain import Domain
from pulpcore.client.pulp_service.models.domain_response import DomainResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ApiCreateDomainApi(api_client)
    domain = pulpcore.client.pulp_service.Domain() # Domain | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Create domain
        api_response = api_instance.post(domain, x_task_diagnostics=x_task_diagnostics)
        print("The response of ApiCreateDomainApi->post:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ApiCreateDomainApi->post: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **domain** | [**Domain**](Domain.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**DomainResponse**](DomainResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**201** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# pulpcore.client.pulp_service.ApiDebugAuthHeaderApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**get**](ApiDebugAuthHeaderApi.md#get) | **GET** /api/pulp/debug_auth_header/ | 


# **get**
> get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)



Returns the content of the authentication headers.

### Example


```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)


# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ApiDebugAuthHeaderApi(api_client)
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        api_instance.get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
    except Exception as e:
        print("Exception when calling ApiDebugAuthHeaderApi->get: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

void (empty response body)

### Authorization

No authorization required

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: Not defined

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** | No response body |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# pulpcore.client.pulp_service.ApiTestRandomLockTasksApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**get**](ApiTestRandomLockTasksApi.md#get) | **GET** /api/pulp/test/random_lock_tasks/ | 


# **get**
> get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)



### Example


```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)


# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ApiTestRandomLockTasksApi(api_client)
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        api_instance.get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
    except Exception as e:
        print("Exception when calling ApiTestRandomLockTasksApi->get: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

void (empty response body)

### Authorization

No authorization required

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: Not defined

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** | No response body |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# pulpcore.client.pulp_service.ApiTestTasksApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**get**](ApiTestTasksApi.md#get) | **GET** /api/pulp/test/tasks/ | 


# **get**
> get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)



### Example


```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)


# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ApiTestTasksApi(api_client)
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        api_instance.get(x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
    except Exception as e:
        print("Exception when calling ApiTestTasksApi->get: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

void (empty response body)

### Authorization

No authorization required

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: Not defined

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** | No response body |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# AsyncOperationResponse

Serializer for asynchronous operations.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**task** | **str** | The href of the task. | 

## Example

```python
from pulpcore.client.pulp_service.models.async_operation_response import AsyncOperationResponse

# TODO update the JSON string below
json = "{}"
# create an instance of AsyncOperationResponse from a JSON string
async_operation_response_instance = AsyncOperationResponse.from_json(json)
# print the JSON string representation of the object
print(AsyncOperationResponse.to_json())

# convert the object into a dict
async_operation_response_dict = async_operation_response_instance.to_dict()
# create an instance of AsyncOperationResponse from a dict
async_operation_response_from_dict = AsyncOperationResponse.from_dict(async_operation_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# pulpcore.client.pulp_service.ContentguardsFeatureApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**add_role**](ContentguardsFeatureApi.md#add_role) | **POST** {service_feature_content_guard_href}add_role/ | Add a role
[**create**](ContentguardsFeatureApi.md#create) | **POST** /api/pulp/{pulp_domain}/api/v3/contentguards/service/feature/ | Create a feature content guard
[**delete**](ContentguardsFeatureApi.md#delete) | **DELETE** {service_feature_content_guard_href} | Delete a feature content guard
[**list**](ContentguardsFeatureApi.md#list) | **GET** /api/pulp/{pulp_domain}/api/v3/contentguards/service/feature/ | List feature content guards
[**list_roles**](ContentguardsFeatureApi.md#list_roles) | **GET** {service_feature_content_guard_href}list_roles/ | List roles
[**my_permissions**](ContentguardsFeatureApi.md#my_permissions) | **GET** {service_feature_content_guard_href}my_permissions/ | List user permissions
[**partial_update**](ContentguardsFeatureApi.md#partial_update) | **PATCH** {service_feature_content_guard_href} | Update a feature content guard
[**read**](ContentguardsFeatureApi.md#read) | **GET** {service_feature_content_guard_href} | Inspect a feature content guard
[**remove_role**](ContentguardsFeatureApi.md#remove_role) | **POST** {service_feature_content_guard_href}remove_role/ | Remove a role
[**update**](ContentguardsFeatureApi.md#update) | **PUT** {service_feature_content_guard_href} | Update a feature content guard


# **add_role**
> NestedRoleResponse add_role(service_feature_content_guard_href, nested_role, x_task_diagnostics=x_task_diagnostics)

Add a role

Add a role for this object to users/groups.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.nested_role import NestedRole
from pulpcore.client.pulp_service.models.nested_role_response import NestedRoleResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    nested_role = pulpcore.client.pulp_service.NestedRole() # NestedRole | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Add a role
        api_response = api_instance.add_role(service_feature_content_guard_href, nested_role, x_task_diagnostics=x_task_diagnostics)
        print("The response of ContentguardsFeatureApi->add_role:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->add_role: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **nested_role** | [**NestedRole**](NestedRole.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**NestedRoleResponse**](NestedRoleResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**201** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **create**
> ServiceFeatureContentGuardResponse create(pulp_domain, service_feature_content_guard, x_task_diagnostics=x_task_diagnostics)

Create a feature content guard

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.service_feature_content_guard import ServiceFeatureContentGuard
from pulpcore.client.pulp_service.models.service_feature_content_guard_response import ServiceFeatureContentGuardResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    pulp_domain = 'pulp_domain_example' # str | 
    service_feature_content_guard = pulpcore.client.pulp_service.ServiceFeatureContentGuard() # ServiceFeatureContentGuard | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Create a feature content guard
        api_response = api_instance.create(pulp_domain, service_feature_content_guard, x_task_diagnostics=x_task_diagnostics)
        print("The response of ContentguardsFeatureApi->create:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->create: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **pulp_domain** | **str**|  | 
 **service_feature_content_guard** | [**ServiceFeatureContentGuard**](ServiceFeatureContentGuard.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**ServiceFeatureContentGuardResponse**](ServiceFeatureContentGuardResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**201** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **delete**
> delete(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics)

Delete a feature content guard

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Delete a feature content guard
        api_instance.delete(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->delete: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

void (empty response body)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: Not defined

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**204** | No response body |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **list**
> PaginatedserviceFeatureContentGuardResponseList list(pulp_domain, x_task_diagnostics=x_task_diagnostics, limit=limit, name=name, name__contains=name__contains, name__icontains=name__icontains, name__iexact=name__iexact, name__in=name__in, name__iregex=name__iregex, name__istartswith=name__istartswith, name__regex=name__regex, name__startswith=name__startswith, offset=offset, ordering=ordering, prn__in=prn__in, pulp_href__in=pulp_href__in, pulp_id__in=pulp_id__in, q=q, fields=fields, exclude_fields=exclude_fields)

List feature content guards

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.paginatedservice_feature_content_guard_response_list import PaginatedserviceFeatureContentGuardResponseList
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    pulp_domain = 'pulp_domain_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    limit = 56 # int | Number of results to return per page. (optional)
    name = 'name_example' # str | Filter results where name matches value (optional)
    name__contains = 'name__contains_example' # str | Filter results where name contains value (optional)
    name__icontains = 'name__icontains_example' # str | Filter results where name contains value (optional)
    name__iexact = 'name__iexact_example' # str | Filter results where name matches value (optional)
    name__in = ['name__in_example'] # List[str] | Filter results where name is in a comma-separated list of values (optional)
    name__iregex = 'name__iregex_example' # str | Filter results where name matches regex value (optional)
    name__istartswith = 'name__istartswith_example' # str | Filter results where name starts with value (optional)
    name__regex = 'name__regex_example' # str | Filter results where name matches regex value (optional)
    name__startswith = 'name__startswith_example' # str | Filter results where name starts with value (optional)
    offset = 56 # int | The initial index from which to return the results. (optional)
    ordering = ['ordering_example'] # List[str] | Ordering  * `pulp_id` - Pulp id * `-pulp_id` - Pulp id (descending) * `pulp_created` - Pulp created * `-pulp_created` - Pulp created (descending) * `pulp_last_updated` - Pulp last updated * `-pulp_last_updated` - Pulp last updated (descending) * `pulp_type` - Pulp type * `-pulp_type` - Pulp type (descending) * `name` - Name * `-name` - Name (descending) * `description` - Description * `-description` - Description (descending) * `pk` - Pk * `-pk` - Pk (descending) (optional)
    prn__in = ['prn__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    pulp_href__in = ['pulp_href__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    pulp_id__in = ['pulp_id__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    q = 'q_example' # str | Filter results by using NOT, AND and OR operations on other filters (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # List feature content guards
        api_response = api_instance.list(pulp_domain, x_task_diagnostics=x_task_diagnostics, limit=limit, name=name, name__contains=name__contains, name__icontains=name__icontains, name__iexact=name__iexact, name__in=name__in, name__iregex=name__iregex, name__istartswith=name__istartswith, name__regex=name__regex, name__startswith=name__startswith, offset=offset, ordering=ordering, prn__in=prn__in, pulp_href__in=pulp_href__in, pulp_id__in=pulp_id__in, q=q, fields=fields, exclude_fields=exclude_fields)
        print("The response of ContentguardsFeatureApi->list:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->list: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **pulp_domain** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **limit** | **int**| Number of results to return per page. | [optional] 
 **name** | **str**| Filter results where name matches value | [optional] 
 **name__contains** | **str**| Filter results where name contains value | [optional] 
 **name__icontains** | **str**| Filter results where name contains value | [optional] 
 **name__iexact** | **str**| Filter results where name matches value | [optional] 
 **name__in** | [**List[str]**](str.md)| Filter results where name is in a comma-separated list of values | [optional] 
 **name__iregex** | **str**| Filter results where name matches regex value | [optional] 
 **name__istartswith** | **str**| Filter results where name starts with value | [optional] 
 **name__regex** | **str**| Filter results where name matches regex value | [optional] 
 **name__startswith** | **str**| Filter results where name starts with value | [optional] 
 **offset** | **int**| The initial index from which to return the results. | [optional] 
 **ordering** | [**List[str]**](str.md)| Ordering  * &#x60;pulp_id&#x60; - Pulp id * &#x60;-pulp_id&#x60; - Pulp id (descending) * &#x60;pulp_created&#x60; - Pulp created * &#x60;-pulp_created&#x60; - Pulp created (descending) * &#x60;pulp_last_updated&#x60; - Pulp last updated * &#x60;-pulp_last_updated&#x60; - Pulp last updated (descending) * &#x60;pulp_type&#x60; - Pulp type * &#x60;-pulp_type&#x60; - Pulp type (descending) * &#x60;name&#x60; - Name * &#x60;-name&#x60; - Name (descending) * &#x60;description&#x60; - Description * &#x60;-description&#x60; - Description (descending) * &#x60;pk&#x60; - Pk * &#x60;-pk&#x60; - Pk (descending) | [optional] 
 **prn__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **pulp_href__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **pulp_id__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **q** | **str**| Filter results by using NOT, AND and OR operations on other filters | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**PaginatedserviceFeatureContentGuardResponseList**](PaginatedserviceFeatureContentGuardResponseList.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **list_roles**
> ObjectRolesResponse list_roles(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)

List roles

List roles assigned to this object.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.object_roles_response import ObjectRolesResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # List roles
        api_response = api_instance.list_roles(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
        print("The response of ContentguardsFeatureApi->list_roles:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->list_roles: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**ObjectRolesResponse**](ObjectRolesResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **my_permissions**
> MyPermissionsResponse my_permissions(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)

List user permissions

List permissions available to the current user on this object.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.my_permissions_response import MyPermissionsResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # List user permissions
        api_response = api_instance.my_permissions(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
        print("The response of ContentguardsFeatureApi->my_permissions:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->my_permissions: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**MyPermissionsResponse**](MyPermissionsResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **partial_update**
> ServiceFeatureContentGuardResponse partial_update(service_feature_content_guard_href, patchedservice_feature_content_guard, x_task_diagnostics=x_task_diagnostics)

Update a feature content guard

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.patchedservice_feature_content_guard import PatchedserviceFeatureContentGuard
from pulpcore.client.pulp_service.models.service_feature_content_guard_response import ServiceFeatureContentGuardResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    patchedservice_feature_content_guard = pulpcore.client.pulp_service.PatchedserviceFeatureContentGuard() # PatchedserviceFeatureContentGuard | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Update a feature content guard
        api_response = api_instance.partial_update(service_feature_content_guard_href, patchedservice_feature_content_guard, x_task_diagnostics=x_task_diagnostics)
        print("The response of ContentguardsFeatureApi->partial_update:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->partial_update: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **patchedservice_feature_content_guard** | [**PatchedserviceFeatureContentGuard**](PatchedserviceFeatureContentGuard.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**ServiceFeatureContentGuardResponse**](ServiceFeatureContentGuardResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **read**
> ServiceFeatureContentGuardResponse read(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)

Inspect a feature content guard

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.service_feature_content_guard_response import ServiceFeatureContentGuardResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # Inspect a feature content guard
        api_response = api_instance.read(service_feature_content_guard_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
        print("The response of ContentguardsFeatureApi->read:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->read: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**ServiceFeatureContentGuardResponse**](ServiceFeatureContentGuardResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **remove_role**
> NestedRoleResponse remove_role(service_feature_content_guard_href, nested_role, x_task_diagnostics=x_task_diagnostics)

Remove a role

Remove a role for this object from users/groups.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.nested_role import NestedRole
from pulpcore.client.pulp_service.models.nested_role_response import NestedRoleResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    nested_role = pulpcore.client.pulp_service.NestedRole() # NestedRole | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Remove a role
        api_response = api_instance.remove_role(service_feature_content_guard_href, nested_role, x_task_diagnostics=x_task_diagnostics)
        print("The response of ContentguardsFeatureApi->remove_role:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->remove_role: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **nested_role** | [**NestedRole**](NestedRole.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**NestedRoleResponse**](NestedRoleResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**201** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **update**
> ServiceFeatureContentGuardResponse update(service_feature_content_guard_href, service_feature_content_guard, x_task_diagnostics=x_task_diagnostics)

Update a feature content guard

Content guard to protect the content guarded by Subscription Features.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.service_feature_content_guard import ServiceFeatureContentGuard
from pulpcore.client.pulp_service.models.service_feature_content_guard_response import ServiceFeatureContentGuardResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.ContentguardsFeatureApi(api_client)
    service_feature_content_guard_href = 'service_feature_content_guard_href_example' # str | 
    service_feature_content_guard = pulpcore.client.pulp_service.ServiceFeatureContentGuard() # ServiceFeatureContentGuard | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Update a feature content guard
        api_response = api_instance.update(service_feature_content_guard_href, service_feature_content_guard, x_task_diagnostics=x_task_diagnostics)
        print("The response of ContentguardsFeatureApi->update:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling ContentguardsFeatureApi->update: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_feature_content_guard_href** | **str**|  | 
 **service_feature_content_guard** | [**ServiceFeatureContentGuard**](ServiceFeatureContentGuard.md)|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

[**ServiceFeatureContentGuardResponse**](ServiceFeatureContentGuardResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: application/json, application/x-www-form-urlencoded, multipart/form-data
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# Domain

Serializer for Domain.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**name** | **str** | A name for this domain. | 
**description** | **str** | An optional description. | [optional] 
**pulp_labels** | **Dict[str, Optional[str]]** |  | [optional] 
**storage_class** | [**StorageClassEnum**](StorageClassEnum.md) | Backend storage class for domain.  * &#x60;pulpcore.app.models.storage.FileSystem&#x60; - Use local filesystem as storage * &#x60;storages.backends.s3boto3.S3Boto3Storage&#x60; - Use Amazon S3 as storage * &#x60;storages.backends.azure_storage.AzureStorage&#x60; - Use Azure Blob as storage * &#x60;pulp_service.app.storage.OCIStorage&#x60; - Use OCI as storage | 
**storage_settings** | **object** | Settings for storage class. | 
**redirect_to_object_storage** | **bool** | Boolean to have the content app redirect to object storage. | [optional] [default to True]
**hide_guarded_distributions** | **bool** | Boolean to hide distributions with a content guard in the content app. | [optional] [default to False]

## Example

```python
from pulpcore.client.pulp_service.models.domain import Domain

# TODO update the JSON string below
json = "{}"
# create an instance of Domain from a JSON string
domain_instance = Domain.from_json(json)
# print the JSON string representation of the object
print(Domain.to_json())

# convert the object into a dict
domain_dict = domain_instance.to_dict()
# create an instance of Domain from a dict
domain_from_dict = Domain.from_dict(domain_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# DomainResponse

Serializer for Domain.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**pulp_href** | **str** |  | [optional] [readonly] 
**prn** | **str** | The Pulp Resource Name (PRN). | [optional] [readonly] 
**pulp_created** | **datetime** | Timestamp of creation. | [optional] [readonly] 
**pulp_last_updated** | **datetime** | Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same. | [optional] [readonly] 
**name** | **str** | A name for this domain. | 
**description** | **str** | An optional description. | [optional] 
**pulp_labels** | **Dict[str, Optional[str]]** |  | [optional] 
**storage_class** | [**StorageClassEnum**](StorageClassEnum.md) | Backend storage class for domain.  * &#x60;pulpcore.app.models.storage.FileSystem&#x60; - Use local filesystem as storage * &#x60;storages.backends.s3boto3.S3Boto3Storage&#x60; - Use Amazon S3 as storage * &#x60;storages.backends.azure_storage.AzureStorage&#x60; - Use Azure Blob as storage * &#x60;pulp_service.app.storage.OCIStorage&#x60; - Use OCI as storage | 
**storage_settings** | **object** | Settings for storage class. | 
**redirect_to_object_storage** | **bool** | Boolean to have the content app redirect to object storage. | [optional] [default to True]
**hide_guarded_distributions** | **bool** | Boolean to hide distributions with a content guard in the content app. | [optional] [default to False]

## Example

```python
from pulpcore.client.pulp_service.models.domain_response import DomainResponse

# TODO update the JSON string below
json = "{}"
# create an instance of DomainResponse from a JSON string
domain_response_instance = DomainResponse.from_json(json)
# print the JSON string representation of the object
print(DomainResponse.to_json())

# convert the object into a dict
domain_response_dict = domain_response_instance.to_dict()
# create an instance of DomainResponse from a dict
domain_response_from_dict = DomainResponse.from_dict(domain_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# MyPermissionsResponse


## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**permissions** | **List[str]** |  | 

## Example

```python
from pulpcore.client.pulp_service.models.my_permissions_response import MyPermissionsResponse

# TODO update the JSON string below
json = "{}"
# create an instance of MyPermissionsResponse from a JSON string
my_permissions_response_instance = MyPermissionsResponse.from_json(json)
# print the JSON string representation of the object
print(MyPermissionsResponse.to_json())

# convert the object into a dict
my_permissions_response_dict = my_permissions_response_instance.to_dict()
# create an instance of MyPermissionsResponse from a dict
my_permissions_response_from_dict = MyPermissionsResponse.from_dict(my_permissions_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# NestedRole

Serializer to add/remove object roles to/from users/groups.  This is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the underlying object to be passed as ``content_object`` in the context.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**users** | **List[str]** |  | [optional] [default to []]
**groups** | **List[str]** |  | [optional] [default to []]
**role** | **str** |  | 

## Example

```python
from pulpcore.client.pulp_service.models.nested_role import NestedRole

# TODO update the JSON string below
json = "{}"
# create an instance of NestedRole from a JSON string
nested_role_instance = NestedRole.from_json(json)
# print the JSON string representation of the object
print(NestedRole.to_json())

# convert the object into a dict
nested_role_dict = nested_role_instance.to_dict()
# create an instance of NestedRole from a dict
nested_role_from_dict = NestedRole.from_dict(nested_role_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# NestedRoleResponse

Serializer to add/remove object roles to/from users/groups.  This is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the underlying object to be passed as ``content_object`` in the context.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**users** | **List[str]** |  | [optional] [default to []]
**groups** | **List[str]** |  | [optional] [default to []]
**role** | **str** |  | 

## Example

```python
from pulpcore.client.pulp_service.models.nested_role_response import NestedRoleResponse

# TODO update the JSON string below
json = "{}"
# create an instance of NestedRoleResponse from a JSON string
nested_role_response_instance = NestedRoleResponse.from_json(json)
# print the JSON string representation of the object
print(NestedRoleResponse.to_json())

# convert the object into a dict
nested_role_response_dict = nested_role_response_instance.to_dict()
# create an instance of NestedRoleResponse from a dict
nested_role_response_from_dict = NestedRoleResponse.from_dict(nested_role_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# ObjectRolesResponse


## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**roles** | [**List[NestedRoleResponse]**](NestedRoleResponse.md) |  | 

## Example

```python
from pulpcore.client.pulp_service.models.object_roles_response import ObjectRolesResponse

# TODO update the JSON string below
json = "{}"
# create an instance of ObjectRolesResponse from a JSON string
object_roles_response_instance = ObjectRolesResponse.from_json(json)
# print the JSON string representation of the object
print(ObjectRolesResponse.to_json())

# convert the object into a dict
object_roles_response_dict = object_roles_response_instance.to_dict()
# create an instance of ObjectRolesResponse from a dict
object_roles_response_from_dict = ObjectRolesResponse.from_dict(object_roles_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# PaginatedserviceFeatureContentGuardResponseList


## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**count** | **int** |  | 
**next** | **str** |  | [optional] 
**previous** | **str** |  | [optional] 
**results** | [**List[ServiceFeatureContentGuardResponse]**](ServiceFeatureContentGuardResponse.md) |  | 

## Example

```python
from pulpcore.client.pulp_service.models.paginatedservice_feature_content_guard_response_list import PaginatedserviceFeatureContentGuardResponseList

# TODO update the JSON string below
json = "{}"
# create an instance of PaginatedserviceFeatureContentGuardResponseList from a JSON string
paginatedservice_feature_content_guard_response_list_instance = PaginatedserviceFeatureContentGuardResponseList.from_json(json)
# print the JSON string representation of the object
print(PaginatedserviceFeatureContentGuardResponseList.to_json())

# convert the object into a dict
paginatedservice_feature_content_guard_response_list_dict = paginatedservice_feature_content_guard_response_list_instance.to_dict()
# create an instance of PaginatedserviceFeatureContentGuardResponseList from a dict
paginatedservice_feature_content_guard_response_list_from_dict = PaginatedserviceFeatureContentGuardResponseList.from_dict(paginatedservice_feature_content_guard_response_list_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# PaginatedserviceVulnerabilityReportResponseList


## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**count** | **int** |  | 
**next** | **str** |  | [optional] 
**previous** | **str** |  | [optional] 
**results** | [**List[ServiceVulnerabilityReportResponse]**](ServiceVulnerabilityReportResponse.md) |  | 

## Example

```python
from pulpcore.client.pulp_service.models.paginatedservice_vulnerability_report_response_list import PaginatedserviceVulnerabilityReportResponseList

# TODO update the JSON string below
json = "{}"
# create an instance of PaginatedserviceVulnerabilityReportResponseList from a JSON string
paginatedservice_vulnerability_report_response_list_instance = PaginatedserviceVulnerabilityReportResponseList.from_json(json)
# print the JSON string representation of the object
print(PaginatedserviceVulnerabilityReportResponseList.to_json())

# convert the object into a dict
paginatedservice_vulnerability_report_response_list_dict = paginatedservice_vulnerability_report_response_list_instance.to_dict()
# create an instance of PaginatedserviceVulnerabilityReportResponseList from a dict
paginatedservice_vulnerability_report_response_list_from_dict = PaginatedserviceVulnerabilityReportResponseList.from_dict(paginatedservice_vulnerability_report_response_list_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# PaginatedTaskResponseList


## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**count** | **int** |  | 
**next** | **str** |  | [optional] 
**previous** | **str** |  | [optional] 
**results** | [**List[TaskResponse]**](TaskResponse.md) |  | 

## Example

```python
from pulpcore.client.pulp_service.models.paginated_task_response_list import PaginatedTaskResponseList

# TODO update the JSON string below
json = "{}"
# create an instance of PaginatedTaskResponseList from a JSON string
paginated_task_response_list_instance = PaginatedTaskResponseList.from_json(json)
# print the JSON string representation of the object
print(PaginatedTaskResponseList.to_json())

# convert the object into a dict
paginated_task_response_list_dict = paginated_task_response_list_instance.to_dict()
# create an instance of PaginatedTaskResponseList from a dict
paginated_task_response_list_from_dict = PaginatedTaskResponseList.from_dict(paginated_task_response_list_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# PatchedserviceFeatureContentGuard

A serializer for FeatureContentGuard.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**name** | **str** | The unique name. | [optional] 
**description** | **str** | An optional description. | [optional] 
**header_name** | **str** |  | [optional] 
**jq_filter** | **str** |  | [optional] 
**features** | **List[str]** | The list of features required to access the content. | [optional] 

## Example

```python
from pulpcore.client.pulp_service.models.patchedservice_feature_content_guard import PatchedserviceFeatureContentGuard

# TODO update the JSON string below
json = "{}"
# create an instance of PatchedserviceFeatureContentGuard from a JSON string
patchedservice_feature_content_guard_instance = PatchedserviceFeatureContentGuard.from_json(json)
# print the JSON string representation of the object
print(PatchedserviceFeatureContentGuard.to_json())

# convert the object into a dict
patchedservice_feature_content_guard_dict = patchedservice_feature_content_guard_instance.to_dict()
# create an instance of PatchedserviceFeatureContentGuard from a dict
patchedservice_feature_content_guard_from_dict = PatchedserviceFeatureContentGuard.from_dict(patchedservice_feature_content_guard_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# ProgressReportResponse

Base serializer for use with [pulpcore.app.models.Model][]  This ensures that all Serializers provide values for the 'pulp_href` field.  The class provides a default for the ``ref_name`` attribute in the ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions of plugins are namespaced properly.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**message** | **str** | The message shown to the user for the progress report. | [optional] [readonly] 
**code** | **str** | Identifies the type of progress report&#39;. | [optional] [readonly] 
**state** | **str** | The current state of the progress report. The possible values are: &#39;waiting&#39;, &#39;skipped&#39;, &#39;running&#39;, &#39;completed&#39;, &#39;failed&#39;, &#39;canceled&#39; and &#39;canceling&#39;. The default is &#39;waiting&#39;. | [optional] [readonly] 
**total** | **int** | The total count of items. | [optional] [readonly] 
**done** | **int** | The count of items already processed. Defaults to 0. | [optional] [readonly] 
**suffix** | **str** | The suffix to be shown with the progress report. | [optional] [readonly] 

## Example

```python
from pulpcore.client.pulp_service.models.progress_report_response import ProgressReportResponse

# TODO update the JSON string below
json = "{}"
# create an instance of ProgressReportResponse from a JSON string
progress_report_response_instance = ProgressReportResponse.from_json(json)
# print the JSON string representation of the object
print(ProgressReportResponse.to_json())

# convert the object into a dict
progress_report_response_dict = progress_report_response_instance.to_dict()
# create an instance of ProgressReportResponse from a dict
progress_report_response_from_dict = ProgressReportResponse.from_dict(progress_report_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# ServiceFeatureContentGuard

A serializer for FeatureContentGuard.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**name** | **str** | The unique name. | 
**description** | **str** | An optional description. | [optional] 
**header_name** | **str** |  | 
**jq_filter** | **str** |  | [optional] 
**features** | **List[str]** | The list of features required to access the content. | 

## Example

```python
from pulpcore.client.pulp_service.models.service_feature_content_guard import ServiceFeatureContentGuard

# TODO update the JSON string below
json = "{}"
# create an instance of ServiceFeatureContentGuard from a JSON string
service_feature_content_guard_instance = ServiceFeatureContentGuard.from_json(json)
# print the JSON string representation of the object
print(ServiceFeatureContentGuard.to_json())

# convert the object into a dict
service_feature_content_guard_dict = service_feature_content_guard_instance.to_dict()
# create an instance of ServiceFeatureContentGuard from a dict
service_feature_content_guard_from_dict = ServiceFeatureContentGuard.from_dict(service_feature_content_guard_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# ServiceFeatureContentGuardResponse

A serializer for FeatureContentGuard.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**pulp_href** | **str** |  | [optional] [readonly] 
**prn** | **str** | The Pulp Resource Name (PRN). | [optional] [readonly] 
**pulp_created** | **datetime** | Timestamp of creation. | [optional] [readonly] 
**pulp_last_updated** | **datetime** | Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same. | [optional] [readonly] 
**name** | **str** | The unique name. | 
**description** | **str** | An optional description. | [optional] 
**header_name** | **str** |  | 
**jq_filter** | **str** |  | [optional] 
**features** | **List[str]** | The list of features required to access the content. | 

## Example

```python
from pulpcore.client.pulp_service.models.service_feature_content_guard_response import ServiceFeatureContentGuardResponse

# TODO update the JSON string below
json = "{}"
# create an instance of ServiceFeatureContentGuardResponse from a JSON string
service_feature_content_guard_response_instance = ServiceFeatureContentGuardResponse.from_json(json)
# print the JSON string representation of the object
print(ServiceFeatureContentGuardResponse.to_json())

# convert the object into a dict
service_feature_content_guard_response_dict = service_feature_content_guard_response_instance.to_dict()
# create an instance of ServiceFeatureContentGuardResponse from a dict
service_feature_content_guard_response_from_dict = ServiceFeatureContentGuardResponse.from_dict(service_feature_content_guard_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# ServiceVulnerabilityReportResponse

A serializer for the VulnerabilityReport Model.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**pulp_href** | **str** |  | [optional] [readonly] 
**prn** | **str** | The Pulp Resource Name (PRN). | [optional] [readonly] 
**pulp_created** | **datetime** | Timestamp of creation. | [optional] [readonly] 
**pulp_last_updated** | **datetime** | Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same. | [optional] [readonly] 
**vulns** | **object** |  | 

## Example

```python
from pulpcore.client.pulp_service.models.service_vulnerability_report_response import ServiceVulnerabilityReportResponse

# TODO update the JSON string below
json = "{}"
# create an instance of ServiceVulnerabilityReportResponse from a JSON string
service_vulnerability_report_response_instance = ServiceVulnerabilityReportResponse.from_json(json)
# print the JSON string representation of the object
print(ServiceVulnerabilityReportResponse.to_json())

# convert the object into a dict
service_vulnerability_report_response_dict = service_vulnerability_report_response_instance.to_dict()
# create an instance of ServiceVulnerabilityReportResponse from a dict
service_vulnerability_report_response_from_dict = ServiceVulnerabilityReportResponse.from_dict(service_vulnerability_report_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# StorageClassEnum

* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage * `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage * `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage * `pulp_service.app.storage.OCIStorage` - Use OCI as storage

## Enum

* `PULPCORE_DOT_APP_DOT_MODELS_DOT_STORAGE_DOT_FILE_SYSTEM` (value: `'pulpcore.app.models.storage.FileSystem'`)

* `STORAGES_DOT_BACKENDS_DOT_S3BOTO3_DOT_S3_BOTO3_STORAGE` (value: `'storages.backends.s3boto3.S3Boto3Storage'`)

* `STORAGES_DOT_BACKENDS_DOT_AZURE_STORAGE_DOT_AZURE_STORAGE` (value: `'storages.backends.azure_storage.AzureStorage'`)

* `PULP_SERVICE_DOT_APP_DOT_STORAGE_DOT_OCI_STORAGE` (value: `'pulp_service.app.storage.OCIStorage'`)

[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# TaskResponse

Base serializer for use with [pulpcore.app.models.Model][]  This ensures that all Serializers provide values for the 'pulp_href` field.  The class provides a default for the ``ref_name`` attribute in the ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions of plugins are namespaced properly.

## Properties

Name | Type | Description | Notes
------------ | ------------- | ------------- | -------------
**pulp_href** | **str** |  | [optional] [readonly] 
**prn** | **str** | The Pulp Resource Name (PRN). | [optional] [readonly] 
**pulp_created** | **datetime** | Timestamp of creation. | [optional] [readonly] 
**pulp_last_updated** | **datetime** | Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same. | [optional] [readonly] 
**state** | **str** | The current state of the task. The possible values include: &#39;waiting&#39;, &#39;skipped&#39;, &#39;running&#39;, &#39;completed&#39;, &#39;failed&#39;, &#39;canceled&#39; and &#39;canceling&#39;. | [optional] [readonly] 
**name** | **str** | The name of task. | 
**logging_cid** | **str** | The logging correlation id associated with this task | 
**created_by** | **str** | User who dispatched this task. | [optional] [readonly] 
**unblocked_at** | **datetime** | Timestamp of when this task was identified ready for pickup. | [optional] [readonly] 
**started_at** | **datetime** | Timestamp of when this task started execution. | [optional] [readonly] 
**finished_at** | **datetime** | Timestamp of when this task stopped execution. | [optional] [readonly] 
**error** | **object** | A JSON Object of a fatal error encountered during the execution of this task. | [optional] [readonly] 
**worker** | **str** | DEPRECATED - Always null | [optional] [readonly] 
**parent_task** | **str** | The parent task that spawned this task. | [optional] [readonly] 
**child_tasks** | **List[str]** | Any tasks spawned by this task. | [optional] [readonly] 
**task_group** | **str** | The task group that this task is a member of. | [optional] [readonly] 
**progress_reports** | [**List[ProgressReportResponse]**](ProgressReportResponse.md) |  | [optional] [readonly] 
**created_resources** | **List[str]** | Resources created by this task. | [optional] [readonly] 
**reserved_resources_record** | **List[str]** | A list of resources required by that task. | [optional] [readonly] 
**result** | **object** | The result of this task. | [optional] [readonly] 

## Example

```python
from pulpcore.client.pulp_service.models.task_response import TaskResponse

# TODO update the JSON string below
json = "{}"
# create an instance of TaskResponse from a JSON string
task_response_instance = TaskResponse.from_json(json)
# print the JSON string representation of the object
print(TaskResponse.to_json())

# convert the object into a dict
task_response_dict = task_response_instance.to_dict()
# create an instance of TaskResponse from a dict
task_response_from_dict = TaskResponse.from_dict(task_response_dict)
```
[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)


# pulpcore.client.pulp_service.TasksApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**admin_tasks**](TasksApi.md#admin_tasks) | **GET** /api/pulp/admin/tasks/ | 


# **admin_tasks**
> PaginatedTaskResponseList admin_tasks(x_task_diagnostics=x_task_diagnostics, child_tasks=child_tasks, created_resources=created_resources, exclusive_resources=exclusive_resources, exclusive_resources__in=exclusive_resources__in, finished_at=finished_at, finished_at__gt=finished_at__gt, finished_at__gte=finished_at__gte, finished_at__isnull=finished_at__isnull, finished_at__lt=finished_at__lt, finished_at__lte=finished_at__lte, finished_at__range=finished_at__range, limit=limit, logging_cid=logging_cid, logging_cid__contains=logging_cid__contains, name=name, name__contains=name__contains, name__in=name__in, name__ne=name__ne, offset=offset, ordering=ordering, parent_task=parent_task, prn__in=prn__in, pulp_created=pulp_created, pulp_created__gt=pulp_created__gt, pulp_created__gte=pulp_created__gte, pulp_created__isnull=pulp_created__isnull, pulp_created__lt=pulp_created__lt, pulp_created__lte=pulp_created__lte, pulp_created__range=pulp_created__range, pulp_href__in=pulp_href__in, pulp_id__in=pulp_id__in, q=q, reserved_resources=reserved_resources, reserved_resources__in=reserved_resources__in, shared_resources=shared_resources, shared_resources__in=shared_resources__in, started_at=started_at, started_at__gt=started_at__gt, started_at__gte=started_at__gte, started_at__isnull=started_at__isnull, started_at__lt=started_at__lt, started_at__lte=started_at__lte, started_at__range=started_at__range, state=state, state__in=state__in, state__ne=state__ne, task_group=task_group, unblocked_at=unblocked_at, unblocked_at__gt=unblocked_at__gt, unblocked_at__gte=unblocked_at__gte, unblocked_at__isnull=unblocked_at__isnull, unblocked_at__lt=unblocked_at__lt, unblocked_at__lte=unblocked_at__lte, unblocked_at__range=unblocked_at__range, worker=worker, fields=fields, exclude_fields=exclude_fields)



A customized named ModelViewSet that knows how to register itself with the Pulp API router.  This viewset is discoverable by its name. \"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.  Attributes:     lookup_field (str): The name of the field by which an object should be looked up, in         addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'     endpoint_name (str): The name of the final path segment that should identify the ViewSet's         collection endpoint.     nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must         correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.         None indicates this ViewSet should not be nested.     parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs         to django model filter expressions that can be used with the corresponding value from         self.kwargs, used only by a nested ViewSet to filter based on the parent object's         identity.     schema (DefaultSchema): The schema class to use by default in a viewset.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.paginated_task_response_list import PaginatedTaskResponseList
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.TasksApi(api_client)
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    child_tasks = 'child_tasks_example' # str | Filter results where child_tasks matches value (optional)
    created_resources = 'created_resources_example' # str |  (optional)
    exclusive_resources = 'exclusive_resources_example' # str |  (optional)
    exclusive_resources__in = ['exclusive_resources__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    finished_at = '2013-10-20T19:20:30+01:00' # datetime | Filter results where finished_at matches value (optional)
    finished_at__gt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where finished_at is greater than value (optional)
    finished_at__gte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where finished_at is greater than or equal to value (optional)
    finished_at__isnull = True # bool | Filter results where finished_at has a null value (optional)
    finished_at__lt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where finished_at is less than value (optional)
    finished_at__lte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where finished_at is less than or equal to value (optional)
    finished_at__range = ['2013-10-20T19:20:30+01:00'] # List[datetime] | Filter results where finished_at is between two comma separated values (optional)
    limit = 56 # int | Number of results to return per page. (optional)
    logging_cid = 'logging_cid_example' # str | Filter results where logging_cid matches value (optional)
    logging_cid__contains = 'logging_cid__contains_example' # str | Filter results where logging_cid contains value (optional)
    name = 'name_example' # str | Filter results where name matches value (optional)
    name__contains = 'name__contains_example' # str | Filter results where name contains value (optional)
    name__in = ['name__in_example'] # List[str] | Filter results where name is in a comma-separated list of values (optional)
    name__ne = 'name__ne_example' # str | Filter results where name not equal to value (optional)
    offset = 56 # int | The initial index from which to return the results. (optional)
    ordering = ['ordering_example'] # List[str] | Ordering  * `pulp_id` - Pulp id * `-pulp_id` - Pulp id (descending) * `pulp_created` - Pulp created * `-pulp_created` - Pulp created (descending) * `pulp_last_updated` - Pulp last updated * `-pulp_last_updated` - Pulp last updated (descending) * `state` - State * `-state` - State (descending) * `name` - Name * `-name` - Name (descending) * `logging_cid` - Logging cid * `-logging_cid` - Logging cid (descending) * `unblocked_at` - Unblocked at * `-unblocked_at` - Unblocked at (descending) * `started_at` - Started at * `-started_at` - Started at (descending) * `finished_at` - Finished at * `-finished_at` - Finished at (descending) * `error` - Error * `-error` - Error (descending) * `enc_args` - Enc args * `-enc_args` - Enc args (descending) * `enc_kwargs` - Enc kwargs * `-enc_kwargs` - Enc kwargs (descending) * `reserved_resources_record` - Reserved resources record * `-reserved_resources_record` - Reserved resources record (descending) * `versions` - Versions * `-versions` - Versions (descending) * `profile_options` - Profile options * `-profile_options` - Profile options (descending) * `immediate` - Immediate * `-immediate` - Immediate (descending) * `deferred` - Deferred * `-deferred` - Deferred (descending) * `result` - Result * `-result` - Result (descending) * `pk` - Pk * `-pk` - Pk (descending) (optional)
    parent_task = 'parent_task_example' # str | Filter results where parent_task matches value (optional)
    prn__in = ['prn__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    pulp_created = '2013-10-20T19:20:30+01:00' # datetime | Filter results where pulp_created matches value (optional)
    pulp_created__gt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where pulp_created is greater than value (optional)
    pulp_created__gte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where pulp_created is greater than or equal to value (optional)
    pulp_created__isnull = True # bool | Filter results where pulp_created has a null value (optional)
    pulp_created__lt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where pulp_created is less than value (optional)
    pulp_created__lte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where pulp_created is less than or equal to value (optional)
    pulp_created__range = ['2013-10-20T19:20:30+01:00'] # List[datetime] | Filter results where pulp_created is between two comma separated values (optional)
    pulp_href__in = ['pulp_href__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    pulp_id__in = ['pulp_id__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    q = 'q_example' # str | Filter results by using NOT, AND and OR operations on other filters (optional)
    reserved_resources = 'reserved_resources_example' # str |  (optional)
    reserved_resources__in = ['reserved_resources__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    shared_resources = 'shared_resources_example' # str |  (optional)
    shared_resources__in = ['shared_resources__in_example'] # List[str] | Multiple values may be separated by commas. (optional)
    started_at = '2013-10-20T19:20:30+01:00' # datetime | Filter results where started_at matches value (optional)
    started_at__gt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where started_at is greater than value (optional)
    started_at__gte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where started_at is greater than or equal to value (optional)
    started_at__isnull = True # bool | Filter results where started_at has a null value (optional)
    started_at__lt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where started_at is less than value (optional)
    started_at__lte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where started_at is less than or equal to value (optional)
    started_at__range = ['2013-10-20T19:20:30+01:00'] # List[datetime] | Filter results where started_at is between two comma separated values (optional)
    state = 'state_example' # str | Filter results where state matches value  * `waiting` - Waiting * `skipped` - Skipped * `running` - Running * `completed` - Completed * `failed` - Failed * `canceled` - Canceled * `canceling` - Canceling (optional)
    state__in = ['state__in_example'] # List[str] | Filter results where state is in a comma-separated list of values (optional)
    state__ne = 'state__ne_example' # str | Filter results where state not equal to value (optional)
    task_group = 'task_group_example' # str | Filter results where task_group matches value (optional)
    unblocked_at = '2013-10-20T19:20:30+01:00' # datetime | Filter results where unblocked_at matches value (optional)
    unblocked_at__gt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where unblocked_at is greater than value (optional)
    unblocked_at__gte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where unblocked_at is greater than or equal to value (optional)
    unblocked_at__isnull = True # bool | Filter results where unblocked_at has a null value (optional)
    unblocked_at__lt = '2013-10-20T19:20:30+01:00' # datetime | Filter results where unblocked_at is less than value (optional)
    unblocked_at__lte = '2013-10-20T19:20:30+01:00' # datetime | Filter results where unblocked_at is less than or equal to value (optional)
    unblocked_at__range = ['2013-10-20T19:20:30+01:00'] # List[datetime] | Filter results where unblocked_at is between two comma separated values (optional)
    worker = 'worker_example' # str |  (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        api_response = api_instance.admin_tasks(x_task_diagnostics=x_task_diagnostics, child_tasks=child_tasks, created_resources=created_resources, exclusive_resources=exclusive_resources, exclusive_resources__in=exclusive_resources__in, finished_at=finished_at, finished_at__gt=finished_at__gt, finished_at__gte=finished_at__gte, finished_at__isnull=finished_at__isnull, finished_at__lt=finished_at__lt, finished_at__lte=finished_at__lte, finished_at__range=finished_at__range, limit=limit, logging_cid=logging_cid, logging_cid__contains=logging_cid__contains, name=name, name__contains=name__contains, name__in=name__in, name__ne=name__ne, offset=offset, ordering=ordering, parent_task=parent_task, prn__in=prn__in, pulp_created=pulp_created, pulp_created__gt=pulp_created__gt, pulp_created__gte=pulp_created__gte, pulp_created__isnull=pulp_created__isnull, pulp_created__lt=pulp_created__lt, pulp_created__lte=pulp_created__lte, pulp_created__range=pulp_created__range, pulp_href__in=pulp_href__in, pulp_id__in=pulp_id__in, q=q, reserved_resources=reserved_resources, reserved_resources__in=reserved_resources__in, shared_resources=shared_resources, shared_resources__in=shared_resources__in, started_at=started_at, started_at__gt=started_at__gt, started_at__gte=started_at__gte, started_at__isnull=started_at__isnull, started_at__lt=started_at__lt, started_at__lte=started_at__lte, started_at__range=started_at__range, state=state, state__in=state__in, state__ne=state__ne, task_group=task_group, unblocked_at=unblocked_at, unblocked_at__gt=unblocked_at__gt, unblocked_at__gte=unblocked_at__gte, unblocked_at__isnull=unblocked_at__isnull, unblocked_at__lt=unblocked_at__lt, unblocked_at__lte=unblocked_at__lte, unblocked_at__range=unblocked_at__range, worker=worker, fields=fields, exclude_fields=exclude_fields)
        print("The response of TasksApi->admin_tasks:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling TasksApi->admin_tasks: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **child_tasks** | **str**| Filter results where child_tasks matches value | [optional] 
 **created_resources** | **str**|  | [optional] 
 **exclusive_resources** | **str**|  | [optional] 
 **exclusive_resources__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **finished_at** | **datetime**| Filter results where finished_at matches value | [optional] 
 **finished_at__gt** | **datetime**| Filter results where finished_at is greater than value | [optional] 
 **finished_at__gte** | **datetime**| Filter results where finished_at is greater than or equal to value | [optional] 
 **finished_at__isnull** | **bool**| Filter results where finished_at has a null value | [optional] 
 **finished_at__lt** | **datetime**| Filter results where finished_at is less than value | [optional] 
 **finished_at__lte** | **datetime**| Filter results where finished_at is less than or equal to value | [optional] 
 **finished_at__range** | [**List[datetime]**](datetime.md)| Filter results where finished_at is between two comma separated values | [optional] 
 **limit** | **int**| Number of results to return per page. | [optional] 
 **logging_cid** | **str**| Filter results where logging_cid matches value | [optional] 
 **logging_cid__contains** | **str**| Filter results where logging_cid contains value | [optional] 
 **name** | **str**| Filter results where name matches value | [optional] 
 **name__contains** | **str**| Filter results where name contains value | [optional] 
 **name__in** | [**List[str]**](str.md)| Filter results where name is in a comma-separated list of values | [optional] 
 **name__ne** | **str**| Filter results where name not equal to value | [optional] 
 **offset** | **int**| The initial index from which to return the results. | [optional] 
 **ordering** | [**List[str]**](str.md)| Ordering  * &#x60;pulp_id&#x60; - Pulp id * &#x60;-pulp_id&#x60; - Pulp id (descending) * &#x60;pulp_created&#x60; - Pulp created * &#x60;-pulp_created&#x60; - Pulp created (descending) * &#x60;pulp_last_updated&#x60; - Pulp last updated * &#x60;-pulp_last_updated&#x60; - Pulp last updated (descending) * &#x60;state&#x60; - State * &#x60;-state&#x60; - State (descending) * &#x60;name&#x60; - Name * &#x60;-name&#x60; - Name (descending) * &#x60;logging_cid&#x60; - Logging cid * &#x60;-logging_cid&#x60; - Logging cid (descending) * &#x60;unblocked_at&#x60; - Unblocked at * &#x60;-unblocked_at&#x60; - Unblocked at (descending) * &#x60;started_at&#x60; - Started at * &#x60;-started_at&#x60; - Started at (descending) * &#x60;finished_at&#x60; - Finished at * &#x60;-finished_at&#x60; - Finished at (descending) * &#x60;error&#x60; - Error * &#x60;-error&#x60; - Error (descending) * &#x60;enc_args&#x60; - Enc args * &#x60;-enc_args&#x60; - Enc args (descending) * &#x60;enc_kwargs&#x60; - Enc kwargs * &#x60;-enc_kwargs&#x60; - Enc kwargs (descending) * &#x60;reserved_resources_record&#x60; - Reserved resources record * &#x60;-reserved_resources_record&#x60; - Reserved resources record (descending) * &#x60;versions&#x60; - Versions * &#x60;-versions&#x60; - Versions (descending) * &#x60;profile_options&#x60; - Profile options * &#x60;-profile_options&#x60; - Profile options (descending) * &#x60;immediate&#x60; - Immediate * &#x60;-immediate&#x60; - Immediate (descending) * &#x60;deferred&#x60; - Deferred * &#x60;-deferred&#x60; - Deferred (descending) * &#x60;result&#x60; - Result * &#x60;-result&#x60; - Result (descending) * &#x60;pk&#x60; - Pk * &#x60;-pk&#x60; - Pk (descending) | [optional] 
 **parent_task** | **str**| Filter results where parent_task matches value | [optional] 
 **prn__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **pulp_created** | **datetime**| Filter results where pulp_created matches value | [optional] 
 **pulp_created__gt** | **datetime**| Filter results where pulp_created is greater than value | [optional] 
 **pulp_created__gte** | **datetime**| Filter results where pulp_created is greater than or equal to value | [optional] 
 **pulp_created__isnull** | **bool**| Filter results where pulp_created has a null value | [optional] 
 **pulp_created__lt** | **datetime**| Filter results where pulp_created is less than value | [optional] 
 **pulp_created__lte** | **datetime**| Filter results where pulp_created is less than or equal to value | [optional] 
 **pulp_created__range** | [**List[datetime]**](datetime.md)| Filter results where pulp_created is between two comma separated values | [optional] 
 **pulp_href__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **pulp_id__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **q** | **str**| Filter results by using NOT, AND and OR operations on other filters | [optional] 
 **reserved_resources** | **str**|  | [optional] 
 **reserved_resources__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **shared_resources** | **str**|  | [optional] 
 **shared_resources__in** | [**List[str]**](str.md)| Multiple values may be separated by commas. | [optional] 
 **started_at** | **datetime**| Filter results where started_at matches value | [optional] 
 **started_at__gt** | **datetime**| Filter results where started_at is greater than value | [optional] 
 **started_at__gte** | **datetime**| Filter results where started_at is greater than or equal to value | [optional] 
 **started_at__isnull** | **bool**| Filter results where started_at has a null value | [optional] 
 **started_at__lt** | **datetime**| Filter results where started_at is less than value | [optional] 
 **started_at__lte** | **datetime**| Filter results where started_at is less than or equal to value | [optional] 
 **started_at__range** | [**List[datetime]**](datetime.md)| Filter results where started_at is between two comma separated values | [optional] 
 **state** | **str**| Filter results where state matches value  * &#x60;waiting&#x60; - Waiting * &#x60;skipped&#x60; - Skipped * &#x60;running&#x60; - Running * &#x60;completed&#x60; - Completed * &#x60;failed&#x60; - Failed * &#x60;canceled&#x60; - Canceled * &#x60;canceling&#x60; - Canceling | [optional] 
 **state__in** | [**List[str]**](str.md)| Filter results where state is in a comma-separated list of values | [optional] 
 **state__ne** | **str**| Filter results where state not equal to value | [optional] 
 **task_group** | **str**| Filter results where task_group matches value | [optional] 
 **unblocked_at** | **datetime**| Filter results where unblocked_at matches value | [optional] 
 **unblocked_at__gt** | **datetime**| Filter results where unblocked_at is greater than value | [optional] 
 **unblocked_at__gte** | **datetime**| Filter results where unblocked_at is greater than or equal to value | [optional] 
 **unblocked_at__isnull** | **bool**| Filter results where unblocked_at has a null value | [optional] 
 **unblocked_at__lt** | **datetime**| Filter results where unblocked_at is less than value | [optional] 
 **unblocked_at__lte** | **datetime**| Filter results where unblocked_at is less than or equal to value | [optional] 
 **unblocked_at__range** | [**List[datetime]**](datetime.md)| Filter results where unblocked_at is between two comma separated values | [optional] 
 **worker** | **str**|  | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**PaginatedTaskResponseList**](PaginatedTaskResponseList.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# pulpcore.client.pulp_service.VulnReportServiceApi

All URIs are relative to *https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com*

Method | HTTP request | Description
------------- | ------------- | -------------
[**create**](VulnReportServiceApi.md#create) | **POST** /api/pulp/{pulp_domain}/api/v3/vuln_report_service/ | Generate vulnerability report
[**delete**](VulnReportServiceApi.md#delete) | **DELETE** {service_vulnerability_report_href} | Delete a vulnerability report
[**list**](VulnReportServiceApi.md#list) | **GET** /api/pulp/{pulp_domain}/api/v3/vuln_report_service/ | List vulnerability reports
[**read**](VulnReportServiceApi.md#read) | **GET** {service_vulnerability_report_href} | Inspect a vulnerability report


# **create**
> AsyncOperationResponse create(pulp_domain, x_task_diagnostics=x_task_diagnostics, repo_version=repo_version, package_json=package_json)

Generate vulnerability report

Trigger a task to generate the package vulnerability report

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.async_operation_response import AsyncOperationResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.VulnReportServiceApi(api_client)
    pulp_domain = 'pulp_domain_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    repo_version = 'repo_version_example' # str | RepositoryVersion HREF with the packages to be checked. (optional)
    package_json = None # bytearray | package-lock.json file with the definition of dependencies to be checked. (optional)

    try:
        # Generate vulnerability report
        api_response = api_instance.create(pulp_domain, x_task_diagnostics=x_task_diagnostics, repo_version=repo_version, package_json=package_json)
        print("The response of VulnReportServiceApi->create:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling VulnReportServiceApi->create: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **pulp_domain** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **repo_version** | **str**| RepositoryVersion HREF with the packages to be checked. | [optional] 
 **package_json** | **bytearray**| package-lock.json file with the definition of dependencies to be checked. | [optional] 

### Return type

[**AsyncOperationResponse**](AsyncOperationResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: multipart/form-data, application/x-www-form-urlencoded
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**202** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **delete**
> delete(service_vulnerability_report_href, x_task_diagnostics=x_task_diagnostics)

Delete a vulnerability report

A customized named ModelViewSet that knows how to register itself with the Pulp API router.  This viewset is discoverable by its name. \"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.  Attributes:     lookup_field (str): The name of the field by which an object should be looked up, in         addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'     endpoint_name (str): The name of the final path segment that should identify the ViewSet's         collection endpoint.     nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must         correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.         None indicates this ViewSet should not be nested.     parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs         to django model filter expressions that can be used with the corresponding value from         self.kwargs, used only by a nested ViewSet to filter based on the parent object's         identity.     schema (DefaultSchema): The schema class to use by default in a viewset.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.VulnReportServiceApi(api_client)
    service_vulnerability_report_href = 'service_vulnerability_report_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)

    try:
        # Delete a vulnerability report
        api_instance.delete(service_vulnerability_report_href, x_task_diagnostics=x_task_diagnostics)
    except Exception as e:
        print("Exception when calling VulnReportServiceApi->delete: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_vulnerability_report_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 

### Return type

void (empty response body)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: Not defined

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**204** | No response body |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **list**
> PaginatedserviceVulnerabilityReportResponseList list(pulp_domain, x_task_diagnostics=x_task_diagnostics, limit=limit, offset=offset, fields=fields, exclude_fields=exclude_fields)

List vulnerability reports

A customized named ModelViewSet that knows how to register itself with the Pulp API router.  This viewset is discoverable by its name. \"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.  Attributes:     lookup_field (str): The name of the field by which an object should be looked up, in         addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'     endpoint_name (str): The name of the final path segment that should identify the ViewSet's         collection endpoint.     nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must         correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.         None indicates this ViewSet should not be nested.     parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs         to django model filter expressions that can be used with the corresponding value from         self.kwargs, used only by a nested ViewSet to filter based on the parent object's         identity.     schema (DefaultSchema): The schema class to use by default in a viewset.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.paginatedservice_vulnerability_report_response_list import PaginatedserviceVulnerabilityReportResponseList
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.VulnReportServiceApi(api_client)
    pulp_domain = 'pulp_domain_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    limit = 56 # int | Number of results to return per page. (optional)
    offset = 56 # int | The initial index from which to return the results. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # List vulnerability reports
        api_response = api_instance.list(pulp_domain, x_task_diagnostics=x_task_diagnostics, limit=limit, offset=offset, fields=fields, exclude_fields=exclude_fields)
        print("The response of VulnReportServiceApi->list:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling VulnReportServiceApi->list: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **pulp_domain** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **limit** | **int**| Number of results to return per page. | [optional] 
 **offset** | **int**| The initial index from which to return the results. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**PaginatedserviceVulnerabilityReportResponseList**](PaginatedserviceVulnerabilityReportResponseList.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

# **read**
> ServiceVulnerabilityReportResponse read(service_vulnerability_report_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)

Inspect a vulnerability report

A customized named ModelViewSet that knows how to register itself with the Pulp API router.  This viewset is discoverable by its name. \"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.  Attributes:     lookup_field (str): The name of the field by which an object should be looked up, in         addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'     endpoint_name (str): The name of the final path segment that should identify the ViewSet's         collection endpoint.     nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must         correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.         None indicates this ViewSet should not be nested.     parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs         to django model filter expressions that can be used with the corresponding value from         self.kwargs, used only by a nested ViewSet to filter based on the parent object's         identity.     schema (DefaultSchema): The schema class to use by default in a viewset.

### Example

* OAuth Authentication (json_header_remote_authentication):
* Basic Authentication (basicAuth):
* Api Key Authentication (cookieAuth):

```python
import pulpcore.client.pulp_service
from pulpcore.client.pulp_service.models.service_vulnerability_report_response import ServiceVulnerabilityReportResponse
from pulpcore.client.pulp_service.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com
# See configuration.py for a list of all supported configuration parameters.
configuration = pulpcore.client.pulp_service.Configuration(
    host = "https://env-ephemeral-qfzgn7.apps.crc-eph.r9lp.p1.openshiftapps.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

configuration.access_token = os.environ["ACCESS_TOKEN"]

# Configure HTTP basic authorization: basicAuth
configuration = pulpcore.client.pulp_service.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookieAuth
configuration.api_key['cookieAuth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookieAuth'] = 'Bearer'

# Enter a context with an instance of the API client
with pulpcore.client.pulp_service.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = pulpcore.client.pulp_service.VulnReportServiceApi(api_client)
    service_vulnerability_report_href = 'service_vulnerability_report_href_example' # str | 
    x_task_diagnostics = ['x_task_diagnostics_example'] # List[str] | List of profilers to use on tasks. (optional)
    fields = ['fields_example'] # List[str] | A list of fields to include in the response. (optional)
    exclude_fields = ['exclude_fields_example'] # List[str] | A list of fields to exclude from the response. (optional)

    try:
        # Inspect a vulnerability report
        api_response = api_instance.read(service_vulnerability_report_href, x_task_diagnostics=x_task_diagnostics, fields=fields, exclude_fields=exclude_fields)
        print("The response of VulnReportServiceApi->read:\n")
        pprint(api_response)
    except Exception as e:
        print("Exception when calling VulnReportServiceApi->read: %s\n" % e)
```



### Parameters


Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
 **service_vulnerability_report_href** | **str**|  | 
 **x_task_diagnostics** | [**List[str]**](str.md)| List of profilers to use on tasks. | [optional] 
 **fields** | [**List[str]**](str.md)| A list of fields to include in the response. | [optional] 
 **exclude_fields** | [**List[str]**](str.md)| A list of fields to exclude from the response. | [optional] 

### Return type

[**ServiceVulnerabilityReportResponse**](ServiceVulnerabilityReportResponse.md)

### Authorization

[json_header_remote_authentication](../README.md#json_header_remote_authentication), [basicAuth](../README.md#basicAuth), [cookieAuth](../README.md#cookieAuth)

### HTTP request headers

 - **Content-Type**: Not defined
 - **Accept**: application/json

### HTTP response details

| Status code | Description | Response headers |
|-------------|-------------|------------------|
**200** |  |  -  |

[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)

