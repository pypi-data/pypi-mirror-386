[project]
name = "bim2rdf"
dynamic = ["version"]
description = "Convert BIM data to RDF models"
authors = [
    { name = "Majid alDosari",  email = "majid.aldosari@pnnl.gov" },
    { name = "Trisha Gupta",    email =   "trisha.gupta@pnnl.gov" }, # mapping
]
readme = "README.md"
requires-python = ">=3.13"
# unfortunately not contained in their respective pyproject.tomls
# b/c then the distributable will refer to bim2rdf-*
# which does not exist in the global index
dependencies = [
    #'bim2rdf-core',# 'bim2rdf-core' taken as a global name from then index  
        'rdf_engine', 'pyoxigraph',
        'dynaconf', # 'python-dotenv', vendored in dyanconf https://www.dynaconf.com/#vendored
        "rdflib", # just to make a nice looking ttl bc pyoxigraph doesn't. otherwise dont want to use!
    # mapping
        # just importing from core
    # ontologies
        'pyontoenv==0.1.10', # pinned until https://github.com/gtfierro/ontoenv-rs/issues/ are resolved.
            #"oxrdflib",# https://github.com/gtfierro/ontoenv-rs/issues/10
        'rdflib',
    # rules
        "pytqshacl[java]",    
        "rdf-engine",         
        "json2rdf",
    # speckle
        "gql[requests]",
        "json2rdf>=67", "boltons",
    # validation
        "rdflib" # to parse sparql
]
[project.optional-dependencies]
cli = ["fire", "pyyaml"]
spklauto = [ "specklepy",
    "rdflib", # just to make a nice ttl
]
cache = ['cachier']

[project.scripts]
bim2rdf = "bim2rdf.cli.main:main"


# I. 'DEV' MODE stuff

[dependency-groups]
dev = ['project',
    'oxigraph', # cli
    "ipython", "ipdb",
    "icecream",
    #"marimo", use uv run --with marimo ...
    'bim2rdf[cache]',
    'bim2rdf[cli]',
    'bim2rdf[spklauto]',
]

[tool.uv.sources]
project =           {workspace = true}
# just listing the dirs alphabetically
bim2rdf-cli =       {workspace = true}
bim2rdf-cache =     {workspace = true}
bim2rdf-core =      {workspace = true}
bim2rdf-mapping =   {workspace = true}
# #ontologies =     { path = 'ontologies'      , editable = true} 
bim2rdf-rules =     {workspace = true}
bim2rdf-speckle =   {workspace = true}
bim2rdf-spklauto =  {workspace = true}
bim2rdf-validation ={workspace = true}
[tool.uv.workspace]
members = [
 "project", # same order as above
 'cache',
 'cli',
 'core',
 "mapping",
 'ontologies',
 "rules",
 "speckle",
 "spklauto",
 "validation",
]

# II. 'PROD' MODE stuff

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
[tool.hatch.version]
path = "core/src/bim2rdf/core/__init__.py"
[tool.hatch.build.targets.wheel]
# for distribution purposes,
# roll 'sub'pkgs into bim2rdf
packages = [#tools.uv.workspace.members minus project
     'cache/src/bim2rdf', # ~ 
       'cli/src/bim2rdf', # ~ 
      'core/src/bim2rdf',
   'mapping/src/bim2rdf',
'ontologies/src/bim2rdf',
     'rules/src/bim2rdf',
   'speckle/src/bim2rdf',
  'spklauto/src/bim2rdf', # ~
'validation/src/bim2rdf'  # ~
]
