[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bindu"
version = "0.3.16"
description = "A protocol framework for agent-to-agent communication"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = { text = "Apache-2.0" }
authors = [{ name = "Raahul Dutta", email = "raahul@saptha.me" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]
dependencies = [
    "uvicorn>=0.15.0",
    "pydantic>=1.8.2",
    "loguru>=0.7.3",
    "rich>=13.0.0",
    "didkit>=0.3.3",
    "cryptography>=44.0.2",
    "orjson>=3.10.18",
    "opentelemetry-instrumentation-httpx>=0.56b0",
    "opentelemetry-api>=1.35.0",
    "opentelemetry-exporter-otlp-proto-http>=1.35.0",
    "opentelemetry-instrumentation-fastapi>=0.56b0",
    "opentelemetry-sdk>=1.35.0",
    "psycopg2-binary>=2.9.10",
    "pyyaml>=6.0.2",
    "aiofiles>=24.1.0",
    "redis>=6.4.0",
    "sqlalchemy>=2.0.43",
    "opentelemetry-exporter-otlp>=1.35.0",
    "starlette>=0.48.0",
    "base58>=2.1.1",
    "ty>=0.0.1a14",
    "pyjwt[crypto]>=2.8.0",
    "requests>=2.31.0",
    "pyperclip>=1.11.0",
    "x402>=0.2.1",
    "agno>=2.1.9",
    "openai>=2.6.0",
]

[tool.hatch.build.targets.wheel]
packages = ["bindu"]

[tool.hatch.build.targets.sdist]
include = [
    "bindu",
    "README.md",
    "assets/*"
]

[dependency-groups]
dev = [
    "bindu",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.2.0",
    "pytest-xdist>=3.0.0",
    "pre-commit>=3.0.0",
    "ty>=0.0.1a14",
    "types-requests>=2.32.0.20250328",
    "pipreqs>=0.5.0",
    "twine>=6.1.0",
    "uvx<2.0",
]

[tool.coverage.run]
source = ["bindu"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
