{% if not cluster_networks %}
{% set cluster_network_ipv4 = {"cidr": cluster_network_ipv4, "hostPrefix": 23} %}
{% set cluster_network_ipv6 = {"cidr": cluster_network_ipv6, "hostPrefix": 64} %}
{% set cluster_networks = [cluster_network_ipv4] + [cluster_network_ipv6] if dualstack|default(False) else [cluster_network_ipv6] if ipv6 else [cluster_network_ipv4] %}
{% endif %}
{% if not service_networks %}
{% set service_network_ipv4 = [service_network_ipv4] %}
{% set service_network_ipv6 = [service_network_ipv6] %}
{% set service_networks = service_network_ipv4 + service_network_ipv6 if dualstack|default(False) else service_network_ipv6 if ipv6 else service_network_ipv4 %}
{% endif %}
{% set management_address = management_api_ip or "api." + cluster + "." + original_domain %}
{% if nodeport|default(False) %}
{% macro service() %}
      nodePort:
        address: {{ management_address }}
      type: NodePort
{%- endmacro %}
{% else %}
{% macro service() %}
      type: Route
{%- endmacro %}
{% endif %}
apiVersion: v1
data:
 .dockerconfigjson: {{ pull_secret|default('')|base64 }}
kind: Secret
metadata:
  name: {{ cluster }}-pull-secret
  namespace: {{ namespace }}
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ cluster }}-ssh-key
  namespace: {{ namespace }}
stringData:
  id_rsa.pub: {{ pub_key }}
---
apiVersion: hypershift.openshift.io/v1beta1
kind: HostedCluster
metadata:
  name: {{ cluster }}
  namespace: {{ namespace }}
{% if operator_disconnected_image is defined or image_overrides %}
  annotations:
{% if operator_disconnected_image is defined %}
   hypershift.openshift.io/control-plane-operator-image: {{ operator_disconnected_image }}
{% endif %}
{% if image_overrides != None %}
   hypershift.openshift.io/image-overrides: {{ image_overrides }}
{% endif %}
{% endif %}
spec:
  release:
    image: "{{ hosted_image }}"
  dns:
    baseDomain: {{ domain }}
  etcd:
    managed:
      storage:
        persistentVolume:
          size: {{ etcd_size }}Gi
        restoreSnapshotURL: null
        type: PersistentVolume
    managementType: Managed
  pullSecret:
    name: {{ cluster }}-pull-secret
  sshKey:
    name: {{ cluster }}-ssh-key
  fips: {{ fips }}
  controllerAvailabilityPolicy: {{ 'HighlyAvailable' if hosted_ha else 'SingleReplica' }}
  infrastructureAvailabilityPolicy: {{ 'HighlyAvailable' if hosted_ha else 'SingleReplica' }}
  networking:
    clusterNetwork:
{% for network in cluster_networks %}
    - cidr: {{ network['cidr'] }}
      hostPrefix: {{ network['hostPrefix'] }}
{% endfor %}
    serviceNetwork:
{% for network in service_networks %}
    - cidr: {{ network }}
{% endfor %}
    machineNetwork:
    - cidr: {{ cidr|default('') }}
    networkType: {{ network_type }}
  platform:
{% if assisted %}
    agent:
      agentNamespace: {{ namespace }}-{{ cluster }}
    type: Agent
{% elif kubevirt %}
    kubevirt:
      baseDomainPassthrough: true
    type: KubeVirt
{% else %}
    type: None
{% endif %}
  infraID: {{ cluster }}
  dns:
    baseDomain: {{ domain }}
  services:
  - service: APIServer
    servicePublishingStrategy:
{% if api_lb|default(False) %}
      type: LoadBalancer
{% else %}
      nodePort:
        address: {{ management_address }}
      type: NodePort
{% endif %}
  - service: OAuthServer
    servicePublishingStrategy:
{{ service() }}
  - service: OIDC
    servicePublishingStrategy:
{{ service() }}
  - service: Konnectivity
    servicePublishingStrategy:
{{ service() }}
  - service: Ignition
    servicePublishingStrategy:
{{ service() }}
{% if network_type == 'OVNKubernetes' %}
  - service: OVNSbDb
    servicePublishingStrategy:
{{ service() }}
{% endif %}
{% if ca is defined %}
  additionalTrustBundle:
    name: user-ca-bundle
{% endif %}
{% if imagecontentsources|default([]) %}
  imageContentSources:
{% for entry in imagecontentsources %}
  - mirrors:
    - {{ entry['mirror'] }}
    source: {{ entry['source'] }}
{% endfor %}
{% endif %}
---
{% if ca is defined %}
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: user-ca-bundle
  namespace: {{ namespace }}
data:
  ca-bundle.crt: |
    {{ ca | certificate | replace('\n', '\n    ') }}
---
{% endif %}
