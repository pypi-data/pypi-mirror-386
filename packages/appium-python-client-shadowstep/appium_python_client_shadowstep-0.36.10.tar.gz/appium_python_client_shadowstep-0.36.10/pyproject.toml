[project]
name = "appium-python-client-shadowstep"
version = "0.36.10"
description = "UI Testing Framework powered by Appium Python Client"
authors = [{ name = "Molokov Klim", email = "ultrakawaii9654449192@gmail.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "Appium-Python-Client>=5.2.2", # webdriver
    "selenium>=4.36", # webdriver
    "websocket-client>=1.8.0", # logcat
    "requests>=2.31.0", # http
    "opencv-python>=4.12.0.88", # image
    "numpy>=2.0.0", # image
    "Pillow>=11.3.0", # image
    "pytesseract>=0.3.10", # image (ocr)
    "allure-pytest>=2.13.2", # reports (decorators)
    "paramiko>=4.0.0", # terminal
    "scp>=0.14.5", # terminal
    "networkx>=3.2.1", # navigator
    "lxml>=6.0.2", # page object generator
    "jinja2>=3.1.6", # page object generator
    "anyascii>=0.3.3", # page object generator
    "eulxml>=1.1.3", # ast parsing xpath
    "setuptools==80.9.0", # nessecary dependency for eulxml
    "wheel>=0.45.1",
    "pyright>=1.1.405",
    "ruff>=0.13.2",
]

keywords = ["appium", "testing", "uiautomator2", "android", "automation", "framework"]

classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]


[project.urls]
Repository = "https://github.com/molokov-klim/Appium-Python-Client-Shadowstep"

# ---------- UV ----------
[tool.uv]
environments = [
    "sys_platform == 'win32'",
    "sys_platform == 'windows'",
    "sys_platform == 'linux'"
]

[dependency-groups]
dev = [
    "pre-commit",
    "pyright",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-rerunfailures"
]


# ---------- RUFF ----------
[tool.ruff]
# Общие настройки
target-version = "py39"
line-length = 100

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "D203", # conflict in D
    "D211", # conflict in D
    "D212", # conflict in D
    "D213", # conflict in D
    "D401", # annoying - First line should be in imperative mood
    "E501", # line too long
    "ANN401", # Any
    "S101", # assert
    "PGH004", # blanket-noqa
]


exclude = [
    "**/__pycache__",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "build",
    "dist",
    "debug*",
    "tests",
    "tests/*",
    "**/tests",
    "**/tests/*",
    "**/test*",
    "**/test*/*",
    "**/test*.py",
    "**/test*/*.py",
]

# ---------- PYRIGHT ----------

[tool.pyright]
include = ["."]
exclude = [
    "**/__pycache__",
    ".venv",
    "build",
    "dist",
    "debug*",
    "tests",
    "tests/*",
    "**/tests",
    "**/tests/*",
    "**/test*",
    "**/test*/*",
    "**/test*.py",
    "**/test*/*.py",
]
typeCheckingMode = "strict"

venvPath = "."
venv = ".venv"

# ---------- PYTEST ----------
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-svl --log-cli-level INFO --tb=short --setup-show"

# ---------- BUILD ----------
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# ---------- DEPLOY ----------
[tool.setuptools.packages.find]
include = ["shadowstep*"]

[tool.setuptools.package-data]
"shadowstep" = ["py.typed"]
"shadowstep.page_object.templates" = ["*.j2"]
