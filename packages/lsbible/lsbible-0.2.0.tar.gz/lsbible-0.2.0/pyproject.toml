[project]
name = "lsbible"
version = "0.2.0"
description = "LSBible API client - structured, type-safe Bible SDK"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    { name = "Kenny", email = "lsbiblegh.g8d9w@passmail.net" }
]
license = { text = "MIT" }
keywords = ["bible", "lsb", "legacy-standard-bible", "api", "client", "sdk", "scripture"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Religion",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "httpx>=0.27.0",
    "beautifulsoup4>=4.12.0",
    "pydantic>=2.0.0",
    "lxml>=5.0.0",
]

[project.optional-dependencies]
server = [
    "fastmcp>=1.0.0",
]

[project.scripts]
lsbible-mcp = "lsbible.mcp.server:main"

[project.urls]
Homepage = "https://github.com/kdcokenny/lsbible"
Documentation = "https://github.com/kdcokenny/lsbible/tree/main/packages/python-sdk"
Repository = "https://github.com/kdcokenny/lsbible"
Issues = "https://github.com/kdcokenny/lsbible/issues"
Changelog = "https://github.com/kdcokenny/lsbible/releases"

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.4.0",
    "respx>=0.21.0",
    "inline-snapshot>=0.7.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["lsbible"]

# Ruff configuration - Linting and formatting
[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # Line too long (handled by formatter)
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["lsbible"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Ty configuration - Type checking
[tool.ty.environment]
python-version = "3.12"
python = ".venv"

[tool.ty.rules]
# Critical type errors
possibly-unresolved-reference = "error"
invalid-argument-type = "error"
unsupported-operator = "error"
division-by-zero = "error"

# Code quality warnings
unused-ignore-comment = "warn"
redundant-cast = "warn"

[tool.ty.src]
include = ["lsbible", "tests"]
exclude = ["tests/fixtures/**"]

[tool.ty.terminal]
output-format = "full"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=lsbible",
    "--cov-report=term-missing",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

# Coverage configuration
[tool.coverage.run]
source = ["lsbible"]
omit = ["tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.uv]
dev-dependencies = [
    "respx>=0.22.0",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
