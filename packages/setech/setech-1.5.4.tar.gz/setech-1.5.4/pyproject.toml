[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "setech"
dynamic = ["version"]
description = "Setech utilities"
readme = "README.md"
requires-python = "~=3.11"
license = { file = "LICENSE" }
keywords = ["setech", "logging", "api-client", "utility", "utils"]
authors = [
  { name = "Eriks Karls", email = "eriks.karls@sefinance.lv" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "httpx[http2]~=0.28",
  "pydantic~=2.12",
  "num2words==0.5.14",
  "unidecode~=1.4"
]


[project.urls]
"Homepage" = "https://pypi.org/project/setech/"


[tool.setuptools.dynamic]
version = { attr = "setech.__version__" }


# ==== bumpversion ====
[tool.bumpversion]
current_version = "1.5.4"
commit = true
tag = true
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
message = "Bump version: {current_version} → {new_version}"


[[tool.bumpversion.files]]
filename = "src/setech/__init__.py"


# ==== ruff ====
[tool.ruff]
exclude = [
    '.git',
    '.git-rewrite',
    '.mypy_cache',
    '.pytest_cache',
    '.ruff_cache',
    '.venv',
    '.vscode',
    '__pypackages__',
    'media',
    'migrations',
    'site-packages',
    'venv',
]
line-length = 120
indent-width = 4
target-version = 'py313'

[tool.ruff.lint]
select = [
    'A',
    'B', 'BLE',
    'C4', 'COM',
    'DJ',
    'E', 'ERA',
    'F', 'FA', 'FLY',
    'I', 'ICN', 'INP', 'INT', 'ISC',
    'LOG',
    'N',
    'PERF', 'PGH', 'PIE', 'PL', 'PLE', 'PT', 'PTH', 'PYI',
    'Q',
    'RET', 'RSE', 'RUF',
    'SIM',
    'T20', 'TC', 'TID',
    'UP',
    'W'
]
ignore = [
    'C408', 'COM812',
    'DJ001', 'DJ007', 'DJ008',
    'E203', 'E501', 'E701',
    'PLC0415', 'PLR0911','PLR0912', 'PLR0913', 'PLR0915',
    'RET504', 'RUF001', 'RUF012',
    'SIM201',
    'W605',
]
fixable = ['ALL']
unfixable = []
dummy-variable-rgx = '^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$'

[tool.ruff.format]
quote-style = 'double'
indent-style = 'space'
skip-magic-trailing-comma = false
line-ending = 'auto'
docstring-code-format = false
docstring-code-line-length = 'dynamic'


# ==== mypy ====
[tool.mypy]
python_version = "3.11"
exclude = ['^\.?venv/',]
plugins = ["pydantic.mypy"]
warn_unused_configs = true
disallow_untyped_defs = true
implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
ignore_missing_imports = false
