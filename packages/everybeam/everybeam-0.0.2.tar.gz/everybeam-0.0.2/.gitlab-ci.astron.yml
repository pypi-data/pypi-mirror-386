# Copyright (C) 2021 ASTRON (Netherlands Institute for Radio Astronomy)
# SPDX-License-Identifier: GPL-3.0-or-later

# This file contains the pipelines that run on the Astron repository of EveryBeam,
# which is at https://git.astron.nl/RD/EveryBeam

.dind-requester:
  tags:
    - dind

# At Astron, the cibuild-python-wheels job needs this custom configuration.
.cibuildwheels-custom:
  extends: .dind-requester
  variables:
    DOCKER_HOST: tcp://docker:2375

include: .gitlab-ci.common.yml

deploy-package-2204:
  stage: deploy
  needs: ["prepare-base-2204","build-package-2204"]
  image: $BASE_IMAGE_2204
  allow_failure: true
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  script:
    - cd everybeam_package
    - export FILES=$(ls -1 $PWD/*.deb)
    - echo UPLOADING files $FILES
    # The following example command must be executed first or else the update will fail because there is no repository
    # create_repo.py -a amd64 -c testing -d bionic --gpg-key ${GPG_KEY} --gpg-passphrase ${GPG_PASS} schaap
    - ../external/schaap-packaging/update_repo.py --cleanup -d jammy --gpg-key ${GPG_KEY} --gpg-passphrase ${GPG_PASS} schaap ${FILES}
  rules:
    # Only deploy packages when building the default branch or a tag, or when UPLOAD_PACKAGE is set manually.
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
    - if: '$UPLOAD_PACKAGE'

.deploy-python-package:
  stage: deploy
  needs:
    - build-python-source-tarball
    - cibuild-python-wheels
  image: python:3.12
  before_script:
    - pip install twine
  script:
    - python -m twine upload --verbose dist/*.tar.gz wheelhouse/*.whl
  rules:
    # Only deploy when building a release tag, or when requested explicitly.
    - if: '$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"'

deploy_on_gitlab:
  extends: .deploy-python-package
  environment: gitlab
  variables:
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
    TWINE_REPOSITORY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi

deploy_on_test_pypi:
  extends: .deploy-python-package
  environment: pypi-test
  variables:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ${TESTPYPI_TOKEN}
    TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/

deploy_on_pypi:
  extends: .deploy-python-package
  environment: pypi
  variables:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ${PYPI_TOKEN}
    TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
