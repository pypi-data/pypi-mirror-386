// qvalue3daxis.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QValue3DAxis : public QAbstract3DAxis
{
%TypeHeaderCode
#include <qvalue3daxis.h>
%End

public:
    explicit QValue3DAxis(QObject *parent /TransferThis/ = 0);
    virtual ~QValue3DAxis();
    void setSegmentCount(qsizetype count);
    qsizetype segmentCount() const;
    void setSubSegmentCount(qsizetype count);
    qsizetype subSegmentCount() const;
    void setLabelFormat(const QString &format);
    QString labelFormat() const;
    void setFormatter(QValue3DAxisFormatter *formatter /Transfer/);
    QValue3DAxisFormatter *formatter() const;
    void setReversed(bool enable);
    bool reversed() const;

signals:
    void segmentCountChanged(qsizetype count);
    void subSegmentCountChanged(qsizetype count);
    void labelFormatChanged(const QString &format);
    void formatterChanged(QValue3DAxisFormatter *formatter);
    void reversedChanged(bool enable);
};
