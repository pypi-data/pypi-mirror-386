// qabstractaxis.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QAbstractAxis : public QObject /NoDefaultCtors/
{
%TypeHeaderCode
#include <qabstractaxis.h>
%End

public:
    enum class AxisType
    {
        Value,
        BarCategory,
        DateTime,
    };

    virtual ~QAbstractAxis();
    virtual QAbstractAxis::AxisType type() const = 0;
    bool isVisible() const;
    void setVisible(bool visible = true);
    void show();
    void hide();
    bool isLineVisible() const;
    void setLineVisible(bool visible = true);
    bool isGridVisible() const;
    void setGridVisible(bool visible = true);
    bool isSubGridVisible() const;
    void setSubGridVisible(bool visible = true);
    bool labelsVisible() const;
    void setLabelsVisible(bool visible = true);
    void setLabelsAngle(qreal angle);
    qreal labelsAngle() const;
    QQmlComponent *labelDelegate() const;
    void setLabelDelegate(QQmlComponent *newLabelDelegate);
    bool isTitleVisible() const;
    void setTitleVisible(bool visible = true);
    void setTitleColor(QColor color);
    QColor titleColor() const;
    void setTitleFont(const QFont &font);
    QFont titleFont() const;
    void setTitleText(const QString &title);
    QString titleText() const;
    void setMin(const QVariant &min);
    void setMax(const QVariant &max);
    void setRange(const QVariant &min, const QVariant &max);

signals:
    void visibleChanged(bool visible);
    void lineVisibleChanged(bool visible);
    void labelsVisibleChanged(bool visible);
    void labelsAngleChanged(qreal angle);
    void labelDelegateChanged();
    void gridVisibleChanged(bool visible);
    void subGridVisibleChanged(bool visible);
    void titleTextChanged(const QString &title);
    void titleColorChanged(QColor color);
    void titleVisibleChanged(bool visible);
    void titleFontChanged(const QFont &font);
    void update();

public:
%If (QtGraphs_6_9_0 -)
    Qt::Alignment alignment() const;
%End
%If (QtGraphs_6_9_0 -)
    void setAlignment(Qt::Alignment alignment);
%End

signals:
%If (QtGraphs_6_9_0 -)
    void alignmentChanged(Qt::Alignment alignment);
%End

public:
%If (QtGraphs_6_10_0 -)
    Qt::TextElideMode textElideMode() const;
%End
%If (QtGraphs_6_10_0 -)
    void setTextElideMode(Qt::TextElideMode elideMode);
%End

signals:
%If (QtGraphs_6_10_0 -)
    void textElideModeChanged(Qt::TextElideMode elideMode);
%End
};
