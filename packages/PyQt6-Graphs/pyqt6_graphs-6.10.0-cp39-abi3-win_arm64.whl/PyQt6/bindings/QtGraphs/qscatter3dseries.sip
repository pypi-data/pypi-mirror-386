// qscatter3dseries.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QScatter3DSeries : public QAbstract3DSeries
{
%TypeHeaderCode
#include <qscatter3dseries.h>
%End

public:
    explicit QScatter3DSeries(QObject *parent /TransferThis/ = 0);
    QScatter3DSeries(QScatterDataProxy *dataProxy /Transfer/, QObject *parent /TransferThis/ = 0);
    virtual ~QScatter3DSeries();
    void setDataProxy(QScatterDataProxy *proxy /Transfer/);
    QScatterDataProxy *dataProxy() const;
    void setSelectedItem(qsizetype index);
    qsizetype selectedItem() const;
    static qsizetype invalidSelectionIndex();
    void setItemSize(float size);
    float itemSize() const;
    void setDataArray(const QScatterDataArray &newDataArray);
    void clearArray();
    QScatterDataArray dataArray();

signals:
    void dataProxyChanged(QScatterDataProxy *proxy);
    void selectedItemChanged(qsizetype index);
    void itemSizeChanged(float size);
    void dataArrayChanged(const QScatterDataArray &array);

public:
%If (QtGraphs_6_10_0 -)
    void setScaleArray(const QList<QVector3D> &newScaleArray);
%End
%If (QtGraphs_6_10_0 -)
    void clearScaleArray();
%End
%If (QtGraphs_6_10_0 -)
    const QList<QVector3D> &scaleArray() const;
%End

signals:
%If (QtGraphs_6_10_0 -)
    void scaleArrayChanged(const QList<QVector3D> &scaleArray);
%End
};
