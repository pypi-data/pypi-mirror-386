// qcustom3dlabel.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QCustom3DLabel : public QCustom3DItem
{
%TypeHeaderCode
#include <qcustom3dlabel.h>
%End

public:
    explicit QCustom3DLabel(QObject *parent /TransferThis/ = 0);
    QCustom3DLabel(const QString &text, const QFont &font, QVector3D position, QVector3D scaling, const QQuaternion &rotation, QObject *parent /TransferThis/ = 0);
    virtual ~QCustom3DLabel();
    void setText(const QString &text);
    QString text() const;
    void setFont(const QFont &font);
    QFont font() const;
    void setTextColor(QColor color);
    QColor textColor() const;
    void setBackgroundColor(QColor color);
    QColor backgroundColor() const;
    void setBorderVisible(bool visible);
    bool isBorderVisible() const;
    void setBackgroundVisible(bool visible);
    bool isBackgroundVisible() const;
    void setFacingCamera(bool enabled);
    bool isFacingCamera() const;

signals:
    void textChanged(const QString &text);
    void fontChanged(const QFont &font);
    void textColorChanged(QColor color);
    void backgroundColorChanged(QColor color);
    void borderVisibleChanged(bool visible);
    void backgroundVisibleChanged(bool visible);
    void facingCameraChanged(bool enabled);
};
