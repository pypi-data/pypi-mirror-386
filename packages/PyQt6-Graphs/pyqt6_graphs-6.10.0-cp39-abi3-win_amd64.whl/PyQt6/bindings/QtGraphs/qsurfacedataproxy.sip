// qsurfacedataproxy.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


typedef QList<QSurfaceDataItem> QSurfaceDataRow;
typedef QList<QList<QSurfaceDataItem>> QSurfaceDataArray;

class QSurfaceDataProxy : public QAbstractDataProxy
{
%TypeHeaderCode
#include <qsurfacedataproxy.h>
%End

public:
    explicit QSurfaceDataProxy(QObject *parent /TransferThis/ = 0);
    virtual ~QSurfaceDataProxy();
    QSurface3DSeries *series() const;
    qsizetype rowCount() const;
    qsizetype columnCount() const;
    const QSurfaceDataItem &itemAt(qsizetype rowIndex, qsizetype columnIndex) const;
    const QSurfaceDataItem &itemAt(QPoint position) const;
    void resetArray();
    void resetArray(QSurfaceDataArray newArray);
    void setRow(qsizetype rowIndex, QSurfaceDataRow row);
    void setRows(qsizetype rowIndex, QSurfaceDataArray rows);
    void setItem(qsizetype rowIndex, qsizetype columnIndex, QSurfaceDataItem item);
    void setItem(QPoint position, QSurfaceDataItem item);
    qsizetype addRow(QSurfaceDataRow row);
    qsizetype addRows(QSurfaceDataArray rows);
    void insertRow(qsizetype rowIndex, QSurfaceDataRow row);
    void insertRows(qsizetype rowIndex, QSurfaceDataArray rows);
    void removeRows(qsizetype rowIndex, qsizetype removeCount);

signals:
    void arrayReset();
    void rowsAdded(qsizetype startIndex, qsizetype count);
    void rowsChanged(qsizetype startIndex, qsizetype count);
    void rowsRemoved(qsizetype startIndex, qsizetype count);
    void rowsInserted(qsizetype startIndex, qsizetype count);
    void itemChanged(qsizetype rowIndex, qsizetype columnIndex);
    void rowCountChanged(qsizetype count);
    void columnCountChanged(qsizetype count);
    void seriesChanged(QSurface3DSeries *series);
};
