// qvalue3daxisformatter.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QValue3DAxisFormatter : public QObject
{
%TypeHeaderCode
#include <qvalue3daxisformatter.h>
%End

public:
    explicit QValue3DAxisFormatter(QObject *parent /TransferThis/ = 0);
    virtual ~QValue3DAxisFormatter();

protected:
    void setAllowNegatives(bool allow);
    bool allowNegatives() const;
    void setAllowZero(bool allow);
    bool allowZero() const;
    virtual QValue3DAxisFormatter *createNewInstance() const /Factory/;
    virtual void recalculate();
    virtual QString stringForValue(qreal value, const QString &format);
    virtual float positionAt(float value) const;
    virtual float valueAt(float position) const;
    virtual void populateCopy(QValue3DAxisFormatter &copy);
    void markDirty(bool labelsChange = false);
    QValue3DAxis *axis() const;
    QList<float> gridPositions();
    void setGridPoitions(QList<float> gridPositions);
    QList<float> subGridPositions();
    void setSubGridPositions(QList<float> subGridPositions);
    QList<float> labelPositions();
    void setlabelPositions(QList<float> labelPositions);
    QStringList labelStrings();
    void setLabelStrings(QStringList labelStrings);
    void setLocale(const QLocale &locale);
    QLocale locale() const;
};
