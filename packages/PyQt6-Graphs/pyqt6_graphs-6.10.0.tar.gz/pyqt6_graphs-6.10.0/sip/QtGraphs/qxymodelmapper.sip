// qxymodelmapper.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QXYModelMapper : public QObject
{
%TypeHeaderCode
#include <qxymodelmapper.h>
%End

public:
    explicit QXYModelMapper(QObject *parent /TransferThis/ = 0);
    virtual ~QXYModelMapper();
    QAbstractItemModel *model() const;
    void setModel(QAbstractItemModel *model /KeepReference/);
    QXYSeries *series() const;
    void setSeries(QXYSeries *series);
    qsizetype first() const;
    void setFirst(qsizetype first);
    qsizetype count() const /__len__/;
    void setCount(qsizetype count);
    Qt::Orientation orientation() const;
    void setOrientation(Qt::Orientation orientation);
    qsizetype xSection() const;
    void setXSection(qsizetype xSection);
    qsizetype ySection() const;
    void setYSection(qsizetype ySection);

signals:
    void seriesChanged();
    void modelChanged();
    void xSectionChanged();
    void ySectionChanged();
    void firstChanged();
    void countChanged();
    void orientationChanged();
};
