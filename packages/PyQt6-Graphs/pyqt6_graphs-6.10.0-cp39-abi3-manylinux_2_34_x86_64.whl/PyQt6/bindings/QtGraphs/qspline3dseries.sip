// qspline3dseries.sip generated by MetaSIP
//
// This file is part of the QtGraphs Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6-Graphs.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (QtGraphs_6_9_0 -)

class QSpline3DSeries : public QScatter3DSeries
{
%TypeHeaderCode
#include <qspline3dseries.h>
%End

public:
    explicit QSpline3DSeries(QObject *parent /TransferThis/ = 0);
    QSpline3DSeries(QScatterDataProxy *dataProxy /Transfer/, QObject *parent /TransferThis/ = 0);
    virtual ~QSpline3DSeries();
    void setSplineVisible(bool draw);
    bool isSplineVisible() const;
    void setSplineTension(qreal tension);
    qreal splineTension() const;
    void setSplineKnotting(qreal knotting);
    qreal splineKnotting() const;
    void setSplineLooping(bool looping);
    bool isSplineLooping() const;
    void setSplineColor(QColor color);
    QColor splineColor() const;
    void setSplineResolution(int resolution);
    int splineResolution() const;

signals:
    void splineVisibilityChanged(bool visible);
    void splineTensionChanged(qreal tension);
    void splineKnottingChanged(qreal knotting);
    void splineLoopingChanged(bool looping);
    void splineColorChanged(QColor color);
    void splineResolutionChanged(int resolution);
};

%End
