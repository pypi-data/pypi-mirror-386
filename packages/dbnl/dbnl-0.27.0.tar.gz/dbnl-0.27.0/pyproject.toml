[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "dbnl"
authors = [
  {name="Distributional", email="support@distributional.com"},
]
description = "The dbnl Python client SDK"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
dynamic = ["version"]
dependencies = [
  "click>=8.0.0,<9",
  "dataclasses-json>=0.6.0",
  "docker>=7.0.0,<8",
  "requests>=2.26.0,<3.0.0",
  "pandas>=1.0.0",
  "pyarrow>=10.0.1",
  "PyYAML>=6.0.0",
  "typing_extensions>=1.0.0",
  "opentelemetry-api>=1,<2",
  "opentelemetry-proto>=1,<2",
  "opentelemetry-sdk>=1,<2",
]

[project.optional-dependencies]
dev = [
  "boto3-stubs",
  "sphinx-markdown-builder>=0.6.8,<1",
  "mypy>=1.7.1,<2",
  "mypy-extensions>=1.0.0,<2",
  "pandas-stubs>=2.0.3.230814",
  "pre-commit>=3.5.0,<4",
  "pyarrow-stubs>=10.0.1.7",
  "pytest>=7.4.3,<8",
  "pytest-mock>=3.0.0,<4",
  "ruff>=0.6.3,<0.7",
  "types-PyYAML>=6.0.12,<7",
  "types-requests<3.0.0; python_version >= '3.10'",
  "types-requests<2.31.0.7; python_version < '3.10'",
  "semver<4",
  "typing-extensions>=4.0.0",
  "setuptools>=69.0.2",
  "sphinx>=7.0.0,<8",
  "sphinx-click>=6.0.0,<7",
]

[project.scripts]
dbnl = "dbnl.cli:cli"

[project.urls]
"Homepage" = "https://distributional.com"
"Source Code" = "https://github.com/dbnlAI/dbnl"

[tool.mypy]
python_version = "3.9"
strict = true
warn_unreachable = true
# this exclusion list needs to be kept in sync with .pre-commit-config.yaml
exclude = [
    "^docs/",
    "^integration_tests/",
    "^setup\\.py$",
]

[tool.ruff]
line-length = 120
exclude = ["docs/*", "example_notebooks/*"]
force-exclude = true
preview = true
fix = true
show-fixes = true
output-format = "concise"
lint.select = [
  "F",      # pyflakes errors
  "I",      # isort errors
  "PLE",    # pylint errors
  "PLW",    # pylint warnings
  "PT",     # flake8-pytest-style
  "RUF027", # missing-f-string-syntax
  "T20",    # flake8-print
  "UP",     # pyupgrade
]
lint.ignore = [
  "E",       # pycodestyle errors
  "PLW0108", # unnecessary-lambda
  "PLW1514", # unspecified-encoding
  "PLW3201", # bad-dunder-method-name
  "PT013",   # pytest-incorrect-pytest-import
  "RUF",     # ruff-specific
]
lint.pyupgrade.keep-runtime-typing = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*"]

[tool.setuptools.dynamic]
version = {attr = "dbnl.__version__"}

[tool.pytest.ini_options]
pythonpath = [
  "src/"
]
testpaths = [
  "src/tests",
]
