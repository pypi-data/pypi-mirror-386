[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "taskpanel"
version = "1.0.2"
description = "A Robust Interactive Terminal Task Runner Library"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Wenutu"},
]
maintainers = [
    {name = "Wenutu"},
]
keywords = ["terminal", "task", "runner", "workflow", "parallel", "execution", "curses", "tui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Environment :: Console :: Curses",
]
requires-python = ">=3.6"
dependencies = [
    "pyyaml>=5.3.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
]
test = [
    "pytest>=6.0",
    "pytest-cov",
]

[project.urls]
Homepage = "https://github.com/Wenutu/TaskPanel"
Repository = "https://github.com/Wenutu/TaskPanel"
"Bug Reports" = "https://github.com/Wenutu/TaskPanel/issues"
Documentation = "https://github.com/Wenutu/TaskPanel#readme"

[project.scripts]
taskpanel = "taskpanel.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "taskpanel.__version__"}

[tool.setuptools.package-data]
taskpanel = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py36']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/taskpanel"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
