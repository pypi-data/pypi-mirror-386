# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Optional
from typing_extensions import Literal, Required, TypedDict

__all__ = ["ReasoningContentParam"]


class ReasoningContentParam(TypedDict, total=False):
    is_native: Required[bool]
    """
    Whether the reasoning content was generated by a reasoner model that processed
    this step.
    """

    reasoning: Required[str]
    """The intermediate reasoning or thought process content."""

    signature: Optional[str]
    """A unique identifier for this reasoning step."""

    type: Literal["reasoning"]
    """Indicates this is a reasoning/intermediate step."""
