[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ragdefender"
version = "0.1.0"
authors = [
    {name = "SecAI Lab", email = "for8821@g.skku.edu"}
]
maintainers = [
    {name = "Minseok Kim", email = "for8821@g.skku.edu"}
]
description = "Efficient defense against knowledge corruption attacks on RAG systems"
readme = "README_PYPI.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = [
    "rag",
    "retrieval-augmented-generation",
    "security",
    "adversarial-defense",
    "nlp",
    "machine-learning",
    "knowledge-corruption",
    "llm"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]

dependencies = [
    "torch>=1.9.0",
    "transformers>=4.20.0",
    "numpy>=1.19.0",
    "pandas>=1.2.0",
    "tqdm>=4.60.0",
    "scikit-learn>=0.24.0",
    "sentence-transformers>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "flake8>=3.9",
    "isort>=5.9",
    "mypy>=0.900",
    "pre-commit>=2.15",
]
cuda = [
    "faiss-gpu>=1.7.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "sphinx-autodoc-typehints>=1.12",
]
all = [
    "ragdefender[dev]",
    "ragdefender[cuda]",
    "ragdefender[docs]",
]

[project.urls]
Homepage = "https://github.com/SecAI-Lab/RAGDefender"
Documentation = "https://github.com/SecAI-Lab/RAGDefender/tree/main/docs"
Repository = "https://github.com/SecAI-Lab/RAGDefender.git"
"Bug Tracker" = "https://github.com/SecAI-Lab/RAGDefender/issues"
"Paper" = "https://arxiv.org/abs/YOUR_PAPER_URL"  # Add your paper URL when available

[project.scripts]
ragdefender = "ragdefender.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["ragdefender*"]
exclude = ["tests*", "docs*", "examples*", "claims*", "artifacts*"]

[tool.setuptools.package-data]
ragdefender = [
    "datasets/*.json",
    "datasets/*.csv",
    "model_configs/*.yaml",
    "model_configs/*.json",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | claims
  | artifacts
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q --strict-markers --cov=ragdefender"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "cuda: marks tests as requiring CUDA",
]

[tool.coverage.run]
source = ["ragdefender"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
