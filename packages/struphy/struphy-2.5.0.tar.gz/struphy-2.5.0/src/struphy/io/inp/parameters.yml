# Some hints on how to use this parameter file:

# 1. Strings can either be set as e.g. 'Cuboid' or Cuboid, i.e. with or without quotes - both works
# 2. The parameter null will be transformed to Python's None type
# 3. Available geometries: https://struphy.pages.mpcdf.de/struphy/sections/domains.html
# 4. Available MHD equilibria: https://struphy.pages.mpcdf.de/struphy/sections/subsections/mhd_equils.html
# 5. Available kinetic backgrounds: https://struphy.pages.mpcdf.de/struphy/sections/subsections/kinetic_backgrounds.html
# 6. Available perturbation functions: https://struphy.pages.mpcdf.de/struphy/sections/subsections/inits.html

grid :
    Nel          : [12, 14, 1] # number of grid cells, >=p
    p            : [2, 3, 1]  # spline degree
    spl_kind     : [False, True, True] # spline type: True=periodic, False=clamped
    dirichlet_bc : null #[[False, False], [False, False], [False, False]]  hom. Dirichlet boundary conditions for N-splines (spl_kind must be False)
    dims_mask    : [True, True, True] # True if the dimension is to be used in the mpi domain decomposition (=default for each dimension).
    nq_el        : [2, 2, 1] # quadrature points per grid cell
    nq_pr        : [2, 2, 1] # quadrature points per histopolation cell (for commuting projectors)
    polar_ck     : -1 # C^k smoothness at polar singularity at eta_1=0 (default: -1 --> standard tensor product, 1 : polar splines)
    local_projectors: False # Whether to build the local commuting projectors based on quasi-inter-/histopolation.

time :
    dt         : 0.005 # time step
    Tend       : 0.015 # simulation time interval is [0, Tend]
    split_algo : LieTrotter # LieTrotter | Strang

units : # units not stated here can be viewed via "struphy units -h"
    x : 1. # length scale unit in Meter (m)
    B : 1. # magnetic field unit in Tesla
    n : 1. # number density unit in 10^20 m^(-3)
    kBT : 1. # internal energy unit in keV (only if the velocity scale is set to 'thermal')

geometry :
    type : Cuboid
    Cuboid : {}

fluid_background :
    HomogenSlab : {}

em_fields :
    background: 
        var_1 : 
            LogicalConst :
                values : 1.3 # scalar-valued variable
        var_2 : 
            LogicalConst :
                values : [.3, .15, null] # vector-valued variable
    perturbation :
        var_1 : 
            TorusModesCos :
                given_in_basis : '0' # perturbation function given as 0-form 
                ms : [1] # one poloidal mode
        var_2 : 
            TorusModesCos :
                given_in_basis : [null, 'v', null] # second component given as vector field, others zero
                ms : [null, [1, 3], null] # two poloidal modes for the second component 

fluid :
    species_name :
        phys_params:
            A : 1 # mass number in units of proton mass
            Z : 1 # signed charge number in units of elementary charge
        background: 
            var_1 :
                LogicalConst :
                    values : 2.3 # scalar-valued variable
            var_2 :
                LogicalConst :
                    values : [null, 1.5, null] # vector-valued variable
        perturbation :
            var_1 :
                TorusModesCos :
                    given_in_basis : '0' # perturbation function given as 0-form 
                    ms : [1, 3] # two poloidal modes
            var_2 : 
                TorusModesCos :
                    given_in_basis : [null, 'v', null] # second component given as vector field, others zero
                    ms : [null, [1, 3], null] # two poloidal modes for the second component 

kinetic :
    species_name :
        phys_params :
            A : 1  # mass number in units of proton mass
            Z : 1 # signed charge number in units of elementary charge
        markers :
            Np      : 1000 # alternative if ppc = null, total number of markers
            ppc     : null  # number of markers per 3d grid cell
            ppb     : null  # number of markers per sorting box
            bc      : [periodic, periodic, periodic] # marker boundary conditions: remove, reflect or periodic
            bufsize : 2. # MPI send/receive buffer 
            loading : pseudo_random # particle loading mechanism 
            loading_params :
                seed          : 1234 # seed for random number generator
                # moments       : [0., 0., 0., 1., 1., 1.] # moments of Gaussian s3, see background/moms_spec. Are now automatically generated.
                spatial       : uniform # uniform or disc
                dir_particles : 'path_to_particles' # directory of particles if loaded externally
            control_variate: false
        weights : 
            reject_weights : False
            threshold : 0.0
        boxes_per_dim: [12, 8, 1] # for particle sorting and sph evaluations via smoothing kernels
        dims_mask: [True, True, True] # which directions to use in domain decomposition (for meshless methods, otherwise given under grid)
        save_data :
            n_markers : 3 # number of markers (int) to be saved during simulation; if float and <= 1.0, it is a perecentage of Np
            f :
                slices : [e1, e1_e2] # in which directions to bin (e.g. [e1_e2, v1_v2_v3])
                n_bins : [[32], [32, 32]] # number of bins in each direction (e.g. [[16, 20], [16, 18, 22]])
                ranges : [[[0., 1.]], [[0., 1.], [-5., 5.]]] # bin range in each direction (e.g. [[[0., 1.], [0., 1.]], [[-3., 3.], [-4., 4.], [-5., 5.]]])
            n_sph :
                plot_pts : [[32, 1, 1], [1, 16, 1]] # number of plot points in each direction
        background : # background is mandatory for kinetic species
            Maxwellian3D :
                n  : 1.0
                u2 : 2.5
        perturbation :
            n: 
                TorusModesCos :
                    given_in_basis: '0' # perturbation function given as 0-form 
                    ms : [1, 3] # two poloidal modes for the density
