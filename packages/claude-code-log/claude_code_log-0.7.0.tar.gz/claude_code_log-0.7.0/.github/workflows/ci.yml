name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.12", "3.13"]
        include:
          - os: "ubuntu-latest"
            python-version: "3.12"
            is-primary: true

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev && uv run playwright install chromium

    - name: Run unit tests with coverage
      run: uv run pytest -m "not (tui or browser)" --cov=claude_code_log --cov-report=xml --cov-report=html --cov-report=term

    - name: Run TUI tests with coverage append
      run: uv run pytest -m tui --cov=claude_code_log --cov-append --cov-report=xml --cov-report=html --cov-report=term

    - name: Run browser tests with coverage append
      run: uv run pytest -m browser --cov=claude_code_log --cov-append --cov-report=xml --cov-report=html --cov-report=term

    - name: Upload coverage HTML report as artifact
      uses: actions/upload-artifact@v4
      if: matrix.is-primary
      with:
        name: coverage-report-html
        path: htmlcov/
        retention-days: 30

    - name: Upload coverage XML as artifact
      uses: actions/upload-artifact@v4
      if: matrix.is-primary
      with:
        name: coverage-report-xml
        path: coverage.xml
        retention-days: 30

    - name: Coverage comment (PR only)
      if: github.event_name == 'pull_request' && matrix.is-primary
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 75
        MINIMUM_ORANGE: 60

    - name: Run linting
      run: uv run ruff check

    - name: Run formatting check
      run: uv run ruff format --check

    - name: Run type checking
      run: uv run pyright