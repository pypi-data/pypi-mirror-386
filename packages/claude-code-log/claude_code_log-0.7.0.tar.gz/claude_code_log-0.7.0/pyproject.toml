[project]
name = "claude-code-log"
version = "0.7.0"
description = "Convert Claude Code transcript JSONL files to HTML"
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = "MIT"
license-files = ["LICEN[CS]E*"]
authors = [
    { name = "Daniel Demmel", email = "hello@danieldemmel.me" },
    { name = "Edward Z. Yang", email = "ezyang@mit.edu" },
]

dependencies = [
    "click>=8.0.0",
    "dateparser>=1.0.0",
    "pydantic>=2.0.0",
    "jinja2>=3.0.0",
    "mistune>=3.1.3",
    "anthropic>=0.56.0",
    "toml>=0.10.2",
    "textual>=4.0.0",
    "packaging>=25.0",
    "gitpython>=3.1.45",
]

[project.urls]
Homepage = "https://github.com/daaain/claude-code-log"
Issues = "https://github.com/daaain/claude-code-log/issues"

[project.scripts]
claude-code-log = "claude_code_log.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = ["/docs", "/test", "/scripts"]

[tool.pytest.ini_options]
testpaths = ["test"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "tui: TUI tests using Textual framework (requires isolated event loop)",
    "browser: Browser integration tests using Playwright (requires Chromium)",
]

[tool.pyright]
# Pyright configuration with strict settings
include = ["claude_code_log"]           # TODO: , "test"
exclude = ["**/__pycache__", "dist"]
stubPath = "stubs"
venvPath = "."
venv = ".venv"
reportMissingImports = true
reportMissingTypeStubs = true
pythonVersion = "3.12"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportUnknownMemberType = true
reportUnknownParameterType = true
reportUnknownVariableType = true
reportUnknownArgumentType = true
reportPrivateImportUsage = true
reportUntypedFunctionDecorator = true
reportFunctionMemberAccess = true
reportIncompatibleMethodOverride = true

[tool.ruff]
target-version = "py312"

[tool.coverage.run]
source = ["claude_code_log"]
omit = ["*/tests/*", "*/test/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]
relative_files = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=5.0.0",
    "coverage[toml]>=7.6.0",
    "ruff>=0.11.2",
    "pytest-xdist>=3.6.1",
    "pyright>=1.1.350",
    "vulture>=2.14",
    "ty>=0.0.1a12",
    "pytest-playwright>=0.7.0",
]
