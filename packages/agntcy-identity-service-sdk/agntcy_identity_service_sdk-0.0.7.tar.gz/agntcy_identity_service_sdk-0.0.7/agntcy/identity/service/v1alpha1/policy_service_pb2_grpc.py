# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from agntcy.identity.service.v1alpha1 import policy_pb2 as agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2
from agntcy.identity.service.v1alpha1 import policy_service_pb2 as agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class PolicyServiceStub(object):
    """PolicyService manages policy.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPolicies = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/ListPolicies',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesResponse.FromString,
                _registered_method=True)
        self.GetPoliciesCount = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/GetPoliciesCount',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountResponse.FromString,
                _registered_method=True)
        self.GetPolicy = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/GetPolicy',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPolicyRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
                _registered_method=True)
        self.CreatePolicy = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/CreatePolicy',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreatePolicyRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
                _registered_method=True)
        self.UpdatePolicy = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/UpdatePolicy',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdatePolicyRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
                _registered_method=True)
        self.DeletePolicy = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/DeletePolicy',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeletePolicyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListRules = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/ListRules',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesResponse.FromString,
                _registered_method=True)
        self.GetRule = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/GetRule',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetRuleRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
                _registered_method=True)
        self.CreateRule = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/CreateRule',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreateRuleRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
                _registered_method=True)
        self.UpdateRule = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/UpdateRule',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdateRuleRequest.SerializeToString,
                response_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
                _registered_method=True)
        self.DeleteRule = channel.unary_unary(
                '/agntcy.identity.service.v1alpha1.PolicyService/DeleteRule',
                request_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeleteRuleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class PolicyServiceServicer(object):
    """PolicyService manages policy.
    """

    def ListPolicies(self, request, context):
        """List Policies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPoliciesCount(self, request, context):
        """Get policies total count.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPolicy(self, request, context):
        """Get Policy by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePolicy(self, request, context):
        """Create a new Policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePolicy(self, request, context):
        """Update a Policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePolicy(self, request, context):
        """Delete an existing Policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRules(self, request, context):
        """List Rules.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRule(self, request, context):
        """Get Rule by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRule(self, request, context):
        """Create a new Rule.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRule(self, request, context):
        """Update a Rule.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRule(self, request, context):
        """Delete an existing Rule.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PolicyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPolicies': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPolicies,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesResponse.SerializeToString,
            ),
            'GetPoliciesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPoliciesCount,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountResponse.SerializeToString,
            ),
            'GetPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPolicy,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPolicyRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'CreatePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePolicy,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreatePolicyRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'UpdatePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePolicy,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdatePolicyRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'DeletePolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePolicy,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeletePolicyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListRules': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRules,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesResponse.SerializeToString,
            ),
            'GetRule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRule,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetRuleRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.SerializeToString,
            ),
            'CreateRule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRule,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreateRuleRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.SerializeToString,
            ),
            'UpdateRule': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRule,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdateRuleRequest.FromString,
                    response_serializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.SerializeToString,
            ),
            'DeleteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRule,
                    request_deserializer=agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeleteRuleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agntcy.identity.service.v1alpha1.PolicyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('agntcy.identity.service.v1alpha1.PolicyService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PolicyService(object):
    """PolicyService manages policy.
    """

    @staticmethod
    def ListPolicies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/ListPolicies',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListPoliciesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPoliciesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/GetPoliciesCount',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPoliciesCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/GetPolicy',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetPolicyRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/CreatePolicy',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreatePolicyRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/UpdatePolicy',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdatePolicyRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Policy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/DeletePolicy',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeletePolicyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/ListRules',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.ListRulesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/GetRule',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.GetRuleRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/CreateRule',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.CreateRuleRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/UpdateRule',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.UpdateRuleRequest.SerializeToString,
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__pb2.Rule.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agntcy.identity.service.v1alpha1.PolicyService/DeleteRule',
            agntcy_dot_identity_dot_service_dot_v1alpha1_dot_policy__service__pb2.DeleteRuleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
