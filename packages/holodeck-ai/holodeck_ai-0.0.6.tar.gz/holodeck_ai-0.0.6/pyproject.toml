[project]
name = "holodeck-ai"
dynamic = ["version"]
description = "HoloDeck - Experimentation-driven agent experimentation and deployment"
requires-python = ">=3.14,<4.0"
dependencies = [
    "requests (>=2.32.5,<3.0.0)",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "click>=8.0.0,<9.0.0",
    "jinja2>=3.0.0,<4.0.0",
    "python-dotenv>=1.0.0",
    "python-dateutil>=2.8.0",
    "urllib3 (>=2.5.0,<3.0.0)",
    "cryptography (>=46.0.2,<47.0.0)",
    "mkdocs-material (>=9.6.22,<10.0.0)",
    "twine (>=6.2.0,<7.0.0)",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.13.0",
    "pre-commit>=3.3.0",
    "tox>=4.0.0",
    "bandit[toml]>=1.8.0",
    "safety>=3.0.0",
    "detect-secrets>=1.4.0",
    "poetry>=1.7.0",
    "types-PyYAML>=6.0.12",
    "mkdocstrings[python]>=0.25.0",
]

[build-system]
requires = ["setuptools>=61", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
tag_regex = "^v?(?P<version>\\d+\\.\\d+\\.\\d+)$"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "S",   # flake8-bandit (security)
]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S603", "S607"]  # Allow assert, subprocess in tests

[tool.mypy]
python_version = "3.14"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-ra",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = []
tests = []

[tool.pdoc]
output-dir = "docs/api"
