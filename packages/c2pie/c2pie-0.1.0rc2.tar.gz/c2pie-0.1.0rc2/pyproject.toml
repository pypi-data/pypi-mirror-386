[tool.poetry]
name = "c2pie"
version = "0.1.0-rc.2"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[project]
name = "c2pie"
description = "c2pie is a Python library that provides C2PA standard functionality."
readme = 'README.md'
authors = [ 
  { name="Tourmaline Core", email="contact@tourmalinecore.com" },
]
license = {file = 'LICENSE'}
requires-python = '>=3.9.2'
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    'Operating System :: Microsoft :: Windows',
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]

[project.urls]
Homepage = "https://github.com/TourmalineCore/c2pie"
Issues = "https://github.com/TourmalineCore/c2pie/issues"

[project.scripts]
c2pie = 'c2pie.main:main'

[tool.poetry.dependencies]
python = ">=3.9.2,<3.15"
cbor2 = "^5.6.3"
cryptography = ">=44.0.1"
pytz = "^2024.1"
cffi = "<=2.0.0"
pypdf = "^6.1.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^7.0.0"
ruff = "^0.13.2"

[tool.poetry.group.semantic-release.dependencies]
python-semantic-release = "^10.4.1"

[build-system]
requires = ["poetry>=1.8.3"]
build-backend = "poetry.masonry.api"

[tool.pytest.ini_options]
markers = [
    "e2e: marks tests as e2e",
]

[tool.coverage.run]
omit = [
  "*_test.py",
  "*/__init__.py",
]

[tool.coverage.report]
show_missing = true

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = "poetry build"
allow_zero_version = true
commit_parser = "conventional"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release\n\nskip-checks: true"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "docs"]
parse_squash_commits = true
ignore_merge_commits = true
allowed_tags = ['feat', 'fix', 'build', 'chore', 'ci', 'docs', 'style', 'refactor', 'test', 'config']

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Initial [Cc]ommit.*''',
    '''.*tweaks.*''',
    '''^[^:]+\(semantic-release\):.*''',
    '''.*try.*''',
    '''docs(readme): bring test coverage up to date''', 
]

[tool.semantic_release.branches.master]
match = "master"
prerelease = false

[tool.semantic_release.branches.prereleases]
match = "^(release)/.+"
prerelease = true
prerelease_token = "rc"

