/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package codeberg.org/slidge/slidge-whatsapp/slidge_whatsapp/generated */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 9 "whatsapp.go"





// #define Py_LIMITED_API // need full API for PyRun*
#include <Python.h>
typedef uint8_t bool;
// static inline is trick for avoiding need for extra .c file
// the following are used for build value -- switch on reflect.Kind
// or the types equivalent
static inline PyObject* gopy_build_bool(uint8_t val) {
	return Py_BuildValue("b", val);
}
static inline PyObject* gopy_build_int64(int64_t val) {
	return Py_BuildValue("k", val);
}
static inline PyObject* gopy_build_uint64(uint64_t val) {
	return Py_BuildValue("K", val);
}
static inline PyObject* gopy_build_float64(double val) {
	return Py_BuildValue("d", val);
}
static inline PyObject* gopy_build_string(const char* val) {
	return Py_BuildValue("s", val);
}
static inline void gopy_decref(PyObject* obj) { // macro
	Py_XDECREF(obj);
}
static inline void gopy_incref(PyObject* obj) { // macro
	Py_XINCREF(obj);
}
static inline int gopy_method_check(PyObject* obj) { // macro
	return PyMethod_Check(obj);
}
static inline void gopy_err_handle() {
	if(PyErr_Occurred() != NULL) {
		PyErr_Print();
	}
}


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void GoPyInit();

// DecRef decrements the reference count for the specified handle
// and deletes it it goes to zero.
//
extern void DecRef(long long int handle);

// IncRef increments the reference count for the specified handle.
//
extern void IncRef(long long int handle);

// NumHandles returns the number of handles currently in use.
//
extern GoInt NumHandles();

// --- wrapping slice: []bool ---
//
extern long long int Slice_bool_CTor();
extern GoInt Slice_bool_len(long long int handle);
extern char Slice_bool_elem(long long int handle, GoInt _idx);
extern long long int Slice_bool_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_bool_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_bool_append(long long int handle, char _vl);

// --- wrapping slice: []byte ---
//
extern long long int Slice_byte_CTor();
extern GoInt Slice_byte_len(long long int handle);
extern char Slice_byte_elem(long long int handle, GoInt _idx);
extern long long int Slice_byte_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_byte_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_byte_append(long long int handle, char _vl);
extern long long int Slice_byte_from_bytes(PyObject* o);
extern PyObject* Slice_byte_to_bytes(long long int handle);

// --- wrapping slice: []error ---
//
extern long long int Slice_error_CTor();
extern GoInt Slice_error_len(long long int handle);
extern char* Slice_error_elem(long long int handle, GoInt _idx);
extern long long int Slice_error_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_error_set(long long int handle, GoInt _idx, char* _vl);
extern void Slice_error_append(long long int handle, char* _vl);

// --- wrapping slice: []float32 ---
//
extern long long int Slice_float32_CTor();
extern GoInt Slice_float32_len(long long int handle);
extern float Slice_float32_elem(long long int handle, GoInt _idx);
extern long long int Slice_float32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_float32_set(long long int handle, GoInt _idx, float _vl);
extern void Slice_float32_append(long long int handle, float _vl);

// --- wrapping slice: []float64 ---
//
extern long long int Slice_float64_CTor();
extern GoInt Slice_float64_len(long long int handle);
extern double Slice_float64_elem(long long int handle, GoInt _idx);
extern long long int Slice_float64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_float64_set(long long int handle, GoInt _idx, double _vl);
extern void Slice_float64_append(long long int handle, double _vl);

// --- wrapping slice: []int ---
//
extern long long int Slice_int_CTor();
extern GoInt Slice_int_len(long long int handle);
extern long long int Slice_int_elem(long long int handle, GoInt _idx);
extern long long int Slice_int_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_int_append(long long int handle, long long int _vl);

// --- wrapping slice: []int16 ---
//
extern long long int Slice_int16_CTor();
extern GoInt Slice_int16_len(long long int handle);
extern short int Slice_int16_elem(long long int handle, GoInt _idx);
extern long long int Slice_int16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int16_set(long long int handle, GoInt _idx, short int _vl);
extern void Slice_int16_append(long long int handle, short int _vl);

// --- wrapping slice: []int32 ---
//
extern long long int Slice_int32_CTor();
extern GoInt Slice_int32_len(long long int handle);
extern long int Slice_int32_elem(long long int handle, GoInt _idx);
extern long long int Slice_int32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int32_set(long long int handle, GoInt _idx, long int _vl);
extern void Slice_int32_append(long long int handle, long int _vl);

// --- wrapping slice: []int64 ---
//
extern long long int Slice_int64_CTor();
extern GoInt Slice_int64_len(long long int handle);
extern long long int Slice_int64_elem(long long int handle, GoInt _idx);
extern long long int Slice_int64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int64_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_int64_append(long long int handle, long long int _vl);

// --- wrapping slice: []int8 ---
//
extern long long int Slice_int8_CTor();
extern GoInt Slice_int8_len(long long int handle);
extern char Slice_int8_elem(long long int handle, GoInt _idx);
extern long long int Slice_int8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_int8_set(long long int handle, GoInt _idx, char _vl);
extern void Slice_int8_append(long long int handle, char _vl);

// --- wrapping slice: []rune ---
//
extern long long int Slice_rune_CTor();
extern GoInt Slice_rune_len(long long int handle);
extern long int Slice_rune_elem(long long int handle, GoInt _idx);
extern long long int Slice_rune_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_rune_set(long long int handle, GoInt _idx, long int _vl);
extern void Slice_rune_append(long long int handle, long int _vl);

// --- wrapping slice: []string ---
//
extern long long int Slice_string_CTor();
extern GoInt Slice_string_len(long long int handle);
extern char* Slice_string_elem(long long int handle, GoInt _idx);
extern long long int Slice_string_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_string_set(long long int handle, GoInt _idx, char* _vl);
extern void Slice_string_append(long long int handle, char* _vl);

// --- wrapping slice: []uint ---
//
extern long long int Slice_uint_CTor();
extern GoInt Slice_uint_len(long long int handle);
extern long long unsigned int Slice_uint_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern void Slice_uint_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint16 ---
//
extern long long int Slice_uint16_CTor();
extern GoInt Slice_uint16_len(long long int handle);
extern short unsigned int Slice_uint16_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint16_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint16_set(long long int handle, GoInt _idx, short unsigned int _vl);
extern void Slice_uint16_append(long long int handle, short unsigned int _vl);

// --- wrapping slice: []uint32 ---
//
extern long long int Slice_uint32_CTor();
extern GoInt Slice_uint32_len(long long int handle);
extern long unsigned int Slice_uint32_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint32_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint32_set(long long int handle, GoInt _idx, long unsigned int _vl);
extern void Slice_uint32_append(long long int handle, long unsigned int _vl);

// --- wrapping slice: []uint64 ---
//
extern long long int Slice_uint64_CTor();
extern GoInt Slice_uint64_len(long long int handle);
extern long long unsigned int Slice_uint64_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint64_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint64_set(long long int handle, GoInt _idx, long long unsigned int _vl);
extern void Slice_uint64_append(long long int handle, long long unsigned int _vl);

// --- wrapping slice: []uint8 ---
//
extern long long int Slice_uint8_CTor();
extern GoInt Slice_uint8_len(long long int handle);
extern unsigned char Slice_uint8_elem(long long int handle, GoInt _idx);
extern long long int Slice_uint8_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_uint8_set(long long int handle, GoInt _idx, unsigned char _vl);
extern void Slice_uint8_append(long long int handle, unsigned char _vl);

// --- wrapping slice: []whatsapp.Attachment ---
//
extern long long int Slice_whatsapp_Attachment_CTor();
extern GoInt Slice_whatsapp_Attachment_len(long long int handle);
extern long long int Slice_whatsapp_Attachment_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_Attachment_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_Attachment_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_Attachment_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.Contact ---
//
extern long long int Slice_whatsapp_Contact_CTor();
extern GoInt Slice_whatsapp_Contact_len(long long int handle);
extern long long int Slice_whatsapp_Contact_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_Contact_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_Contact_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_Contact_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.Group ---
//
extern long long int Slice_whatsapp_Group_CTor();
extern GoInt Slice_whatsapp_Group_len(long long int handle);
extern long long int Slice_whatsapp_Group_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_Group_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_Group_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_Group_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.GroupParticipant ---
//
extern long long int Slice_whatsapp_GroupParticipant_CTor();
extern GoInt Slice_whatsapp_GroupParticipant_len(long long int handle);
extern long long int Slice_whatsapp_GroupParticipant_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_GroupParticipant_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_GroupParticipant_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_GroupParticipant_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.Message ---
//
extern long long int Slice_whatsapp_Message_CTor();
extern GoInt Slice_whatsapp_Message_len(long long int handle);
extern long long int Slice_whatsapp_Message_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_Message_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_Message_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_Message_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.PollOption ---
//
extern long long int Slice_whatsapp_PollOption_CTor();
extern GoInt Slice_whatsapp_PollOption_len(long long int handle);
extern long long int Slice_whatsapp_PollOption_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_PollOption_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_PollOption_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_PollOption_append(long long int handle, long long int _vl);

// --- wrapping slice: []whatsapp.Receipt ---
//
extern long long int Slice_whatsapp_Receipt_CTor();
extern GoInt Slice_whatsapp_Receipt_len(long long int handle);
extern long long int Slice_whatsapp_Receipt_elem(long long int handle, GoInt _idx);
extern long long int Slice_whatsapp_Receipt_subslice(long long int handle, GoInt _st, GoInt _ed);
extern void Slice_whatsapp_Receipt_set(long long int handle, GoInt _idx, long long int _vl);
extern void Slice_whatsapp_Receipt_append(long long int handle, long long int _vl);

// --- wrapping struct: whatsapp.Preview ---
//
extern long long int whatsapp_Preview_CTor();
extern long long int whatsapp_Preview_Kind_Get(long long int handle);
extern void whatsapp_Preview_Kind_Set(long long int handle, long long int val);
extern char* whatsapp_Preview_URL_Get(long long int handle);
extern void whatsapp_Preview_URL_Set(long long int handle, char* val);
extern char* whatsapp_Preview_Title_Get(long long int handle);
extern void whatsapp_Preview_Title_Set(long long int handle, char* val);
extern char* whatsapp_Preview_Description_Get(long long int handle);
extern void whatsapp_Preview_Description_Set(long long int handle, char* val);
extern long long int whatsapp_Preview_Thumbnail_Get(long long int handle);
extern void whatsapp_Preview_Thumbnail_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.Avatar ---
//
extern long long int whatsapp_Avatar_CTor();
extern char* whatsapp_Avatar_ID_Get(long long int handle);
extern void whatsapp_Avatar_ID_Set(long long int handle, char* val);
extern char* whatsapp_Avatar_URL_Get(long long int handle);
extern void whatsapp_Avatar_URL_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Gateway ---
//
extern long long int whatsapp_Gateway_CTor();
extern char* whatsapp_Gateway_DBPath_Get(long long int handle);
extern void whatsapp_Gateway_DBPath_Set(long long int handle, char* val);
extern char* whatsapp_Gateway_Name_Get(long long int handle);
extern void whatsapp_Gateway_Name_Set(long long int handle, char* val);
extern char* whatsapp_Gateway_LogLevel_Get(long long int handle);
extern void whatsapp_Gateway_LogLevel_Set(long long int handle, char* val);
extern char* whatsapp_Gateway_TempDir_Get(long long int handle);
extern void whatsapp_Gateway_TempDir_Set(long long int handle, char* val);
extern char* whatsapp_Gateway_Init(long long int _handle);
extern long long int whatsapp_Gateway_NewSession(long long int _handle, long long int device);
extern char* whatsapp_Gateway_CleanupSession(long long int _handle, long long int device);

// --- wrapping struct: whatsapp.Receipt ---
//
extern long long int whatsapp_Receipt_CTor();
extern long long int whatsapp_Receipt_Kind_Get(long long int handle);
extern void whatsapp_Receipt_Kind_Set(long long int handle, long long int val);
extern long long int whatsapp_Receipt_MessageIDs_Get(long long int handle);
extern void whatsapp_Receipt_MessageIDs_Set(long long int handle, long long int val);
extern char* whatsapp_Receipt_JID_Get(long long int handle);
extern void whatsapp_Receipt_JID_Set(long long int handle, char* val);
extern char* whatsapp_Receipt_GroupJID_Get(long long int handle);
extern void whatsapp_Receipt_GroupJID_Set(long long int handle, char* val);
extern long long int whatsapp_Receipt_Timestamp_Get(long long int handle);
extern void whatsapp_Receipt_Timestamp_Set(long long int handle, long long int val);
extern char whatsapp_Receipt_IsCarbon_Get(long long int handle);
extern void whatsapp_Receipt_IsCarbon_Set(long long int handle, char val);

// --- wrapping struct: whatsapp.Album ---
//
extern long long int whatsapp_Album_CTor();
extern char whatsapp_Album_IsAlbum_Get(long long int handle);
extern void whatsapp_Album_IsAlbum_Set(long long int handle, char val);
extern long long int whatsapp_Album_ImageCount_Get(long long int handle);
extern void whatsapp_Album_ImageCount_Set(long long int handle, long long int val);
extern long long int whatsapp_Album_VideoCount_Get(long long int handle);
extern void whatsapp_Album_VideoCount_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.Attachment ---
//
extern long long int whatsapp_Attachment_CTor();
extern char* whatsapp_Attachment_MIME_Get(long long int handle);
extern void whatsapp_Attachment_MIME_Set(long long int handle, char* val);
extern char* whatsapp_Attachment_Filename_Get(long long int handle);
extern void whatsapp_Attachment_Filename_Set(long long int handle, char* val);
extern char* whatsapp_Attachment_Caption_Get(long long int handle);
extern void whatsapp_Attachment_Caption_Set(long long int handle, char* val);
extern long long int whatsapp_Attachment_Data_Get(long long int handle);
extern void whatsapp_Attachment_Data_Set(long long int handle, long long int val);
extern long long int whatsapp_Attachment_GetSpec(long long int _handle, long long int ctx);

// --- wrapping struct: whatsapp.Call ---
//
extern long long int whatsapp_Call_CTor();
extern long long int whatsapp_Call_State_Get(long long int handle);
extern void whatsapp_Call_State_Set(long long int handle, long long int val);
extern char* whatsapp_Call_JID_Get(long long int handle);
extern void whatsapp_Call_JID_Set(long long int handle, char* val);
extern long long int whatsapp_Call_Timestamp_Get(long long int handle);
extern void whatsapp_Call_Timestamp_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.Connect ---
//
extern long long int whatsapp_Connect_CTor();
extern char* whatsapp_Connect_JID_Get(long long int handle);
extern void whatsapp_Connect_JID_Set(long long int handle, char* val);
extern char* whatsapp_Connect_Error_Get(long long int handle);
extern void whatsapp_Connect_Error_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.EventPayload ---
//
extern long long int whatsapp_EventPayload_CTor();
extern char* whatsapp_EventPayload_QRCode_Get(long long int handle);
extern void whatsapp_EventPayload_QRCode_Set(long long int handle, char* val);
extern char* whatsapp_EventPayload_PairDeviceID_Get(long long int handle);
extern void whatsapp_EventPayload_PairDeviceID_Set(long long int handle, char* val);
extern long long int whatsapp_EventPayload_Connect_Get(long long int handle);
extern void whatsapp_EventPayload_Connect_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_LoggedOut_Get(long long int handle);
extern void whatsapp_EventPayload_LoggedOut_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Contact_Get(long long int handle);
extern void whatsapp_EventPayload_Contact_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Presence_Get(long long int handle);
extern void whatsapp_EventPayload_Presence_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Message_Get(long long int handle);
extern void whatsapp_EventPayload_Message_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_ChatState_Get(long long int handle);
extern void whatsapp_EventPayload_ChatState_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Receipt_Get(long long int handle);
extern void whatsapp_EventPayload_Receipt_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Group_Get(long long int handle);
extern void whatsapp_EventPayload_Group_Set(long long int handle, long long int val);
extern long long int whatsapp_EventPayload_Call_Get(long long int handle);
extern void whatsapp_EventPayload_Call_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.GroupParticipant ---
//
extern long long int whatsapp_GroupParticipant_CTor();
extern char* whatsapp_GroupParticipant_JID_Get(long long int handle);
extern void whatsapp_GroupParticipant_JID_Set(long long int handle, char* val);
extern char* whatsapp_GroupParticipant_Nickname_Get(long long int handle);
extern void whatsapp_GroupParticipant_Nickname_Set(long long int handle, char* val);
extern long long int whatsapp_GroupParticipant_Affiliation_Get(long long int handle);
extern void whatsapp_GroupParticipant_Affiliation_Set(long long int handle, long long int val);
extern long long int whatsapp_GroupParticipant_Action_Get(long long int handle);
extern void whatsapp_GroupParticipant_Action_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.LinkedDevice ---
//
extern long long int whatsapp_LinkedDevice_CTor();
extern char* whatsapp_LinkedDevice_ID_Get(long long int handle);
extern void whatsapp_LinkedDevice_ID_Set(long long int handle, char* val);
extern long long int whatsapp_LinkedDevice_JID(long long int _handle);

// --- wrapping struct: whatsapp.Group ---
//
extern long long int whatsapp_Group_CTor();
extern char* whatsapp_Group_JID_Get(long long int handle);
extern void whatsapp_Group_JID_Set(long long int handle, char* val);
extern char* whatsapp_Group_Name_Get(long long int handle);
extern void whatsapp_Group_Name_Set(long long int handle, char* val);
extern long long int whatsapp_Group_Subject_Get(long long int handle);
extern void whatsapp_Group_Subject_Set(long long int handle, long long int val);
extern char* whatsapp_Group_Nickname_Get(long long int handle);
extern void whatsapp_Group_Nickname_Set(long long int handle, char* val);
extern long long int whatsapp_Group_Participants_Get(long long int handle);
extern void whatsapp_Group_Participants_Set(long long int handle, long long int val);
extern char* whatsapp_Group_InviteCode_Get(long long int handle);
extern void whatsapp_Group_InviteCode_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Message ---
//
extern long long int whatsapp_Message_CTor();
extern long long int whatsapp_Message_Kind_Get(long long int handle);
extern void whatsapp_Message_Kind_Set(long long int handle, long long int val);
extern char* whatsapp_Message_ID_Get(long long int handle);
extern void whatsapp_Message_ID_Set(long long int handle, char* val);
extern char* whatsapp_Message_JID_Get(long long int handle);
extern void whatsapp_Message_JID_Set(long long int handle, char* val);
extern char* whatsapp_Message_GroupJID_Get(long long int handle);
extern void whatsapp_Message_GroupJID_Set(long long int handle, char* val);
extern char* whatsapp_Message_OriginJID_Get(long long int handle);
extern void whatsapp_Message_OriginJID_Set(long long int handle, char* val);
extern char* whatsapp_Message_Body_Get(long long int handle);
extern void whatsapp_Message_Body_Set(long long int handle, char* val);
extern long long int whatsapp_Message_Timestamp_Get(long long int handle);
extern void whatsapp_Message_Timestamp_Set(long long int handle, long long int val);
extern char whatsapp_Message_IsCarbon_Get(long long int handle);
extern void whatsapp_Message_IsCarbon_Set(long long int handle, char val);
extern char whatsapp_Message_IsForwarded_Get(long long int handle);
extern void whatsapp_Message_IsForwarded_Set(long long int handle, char val);
extern char* whatsapp_Message_ReplyID_Get(long long int handle);
extern void whatsapp_Message_ReplyID_Set(long long int handle, char* val);
extern char* whatsapp_Message_ReplyBody_Get(long long int handle);
extern void whatsapp_Message_ReplyBody_Set(long long int handle, char* val);
extern long long int whatsapp_Message_Attachments_Get(long long int handle);
extern void whatsapp_Message_Attachments_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Preview_Get(long long int handle);
extern void whatsapp_Message_Preview_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Location_Get(long long int handle);
extern void whatsapp_Message_Location_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Poll_Get(long long int handle);
extern void whatsapp_Message_Poll_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Album_Get(long long int handle);
extern void whatsapp_Message_Album_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_GroupInvite_Get(long long int handle);
extern void whatsapp_Message_GroupInvite_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_MentionJIDs_Get(long long int handle);
extern void whatsapp_Message_MentionJIDs_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Receipts_Get(long long int handle);
extern void whatsapp_Message_Receipts_Set(long long int handle, long long int val);
extern long long int whatsapp_Message_Reactions_Get(long long int handle);
extern void whatsapp_Message_Reactions_Set(long long int handle, long long int val);
extern char whatsapp_Message_IsHistory_Get(long long int handle);
extern void whatsapp_Message_IsHistory_Set(long long int handle, char val);

// --- wrapping struct: whatsapp.Poll ---
//
extern long long int whatsapp_Poll_CTor();
extern char* whatsapp_Poll_Title_Get(long long int handle);
extern void whatsapp_Poll_Title_Set(long long int handle, char* val);
extern long long int whatsapp_Poll_Options_Get(long long int handle);
extern void whatsapp_Poll_Options_Set(long long int handle, long long int val);

// --- wrapping struct: whatsapp.PollOption ---
//
extern long long int whatsapp_PollOption_CTor();
extern char* whatsapp_PollOption_Title_Get(long long int handle);
extern void whatsapp_PollOption_Title_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Session ---
//
extern long long int whatsapp_Session_CTor();
extern char* whatsapp_Session_Login(long long int _handle);
extern char* whatsapp_Session_Logout(long long int _handle);
extern char* whatsapp_Session_Disconnect(long long int _handle);
extern char* whatsapp_Session_PairPhone(long long int _handle, char* phone);
extern char* whatsapp_Session_SendMessage(long long int _handle, long long int message);
extern char* whatsapp_Session_GenerateMessageID(long long int _handle);
extern char* whatsapp_Session_SendChatState(long long int _handle, long long int state);
extern char* whatsapp_Session_SendReceipt(long long int _handle, long long int receipt);
extern char* whatsapp_Session_SendPresence(long long int _handle, long long int presence, char* statusMessage);
extern long long int whatsapp_Session_GetContacts(long long int _handle, char refresh);
extern long long int whatsapp_Session_GetGroups(long long int _handle);
extern long long int whatsapp_Session_CreateGroup(long long int _handle, char* name, long long int participants);
extern char* whatsapp_Session_LeaveGroup(long long int _handle, char* resourceID);
extern long long int whatsapp_Session_GetAvatar(long long int _handle, char* resourceID, char* avatarID);
extern char* whatsapp_Session_SetAvatar(long long int _handle, char* resourceID, long long int avatar);
extern char* whatsapp_Session_SetGroupName(long long int _handle, char* resourceID, char* name);
extern char* whatsapp_Session_SetGroupTopic(long long int _handle, char* resourceID, char* topic);
extern long long int whatsapp_Session_UpdateGroupParticipants(long long int _handle, char* resourceID, long long int participants);
extern long long int whatsapp_Session_FindContact(long long int _handle, char* phone);
extern char* whatsapp_Session_RequestMessageHistory(long long int _handle, char* resourceID, long long int oldestMessage);
extern void whatsapp_Session_SetEventHandler(long long int _handle, PyObject* h, char goRun);

// --- wrapping struct: whatsapp.ChatState ---
//
extern long long int whatsapp_ChatState_CTor();
extern long long int whatsapp_ChatState_Kind_Get(long long int handle);
extern void whatsapp_ChatState_Kind_Set(long long int handle, long long int val);
extern char* whatsapp_ChatState_JID_Get(long long int handle);
extern void whatsapp_ChatState_JID_Set(long long int handle, char* val);
extern char* whatsapp_ChatState_GroupJID_Get(long long int handle);
extern void whatsapp_ChatState_GroupJID_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Contact ---
//
extern long long int whatsapp_Contact_CTor();
extern char* whatsapp_Contact_JID_Get(long long int handle);
extern void whatsapp_Contact_JID_Set(long long int handle, char* val);
extern char* whatsapp_Contact_Name_Get(long long int handle);
extern void whatsapp_Contact_Name_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.GroupSubject ---
//
extern long long int whatsapp_GroupSubject_CTor();
extern char* whatsapp_GroupSubject_Subject_Get(long long int handle);
extern void whatsapp_GroupSubject_Subject_Set(long long int handle, char* val);
extern long long int whatsapp_GroupSubject_SetAt_Get(long long int handle);
extern void whatsapp_GroupSubject_SetAt_Set(long long int handle, long long int val);
extern char* whatsapp_GroupSubject_SetBy_Get(long long int handle);
extern void whatsapp_GroupSubject_SetBy_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Location ---
//
extern long long int whatsapp_Location_CTor();
extern double whatsapp_Location_Latitude_Get(long long int handle);
extern void whatsapp_Location_Latitude_Set(long long int handle, double val);
extern double whatsapp_Location_Longitude_Get(long long int handle);
extern void whatsapp_Location_Longitude_Set(long long int handle, double val);
extern long long int whatsapp_Location_Accuracy_Get(long long int handle);
extern void whatsapp_Location_Accuracy_Set(long long int handle, long long int val);
extern char whatsapp_Location_IsLive_Get(long long int handle);
extern void whatsapp_Location_IsLive_Set(long long int handle, char val);
extern char* whatsapp_Location_Name_Get(long long int handle);
extern void whatsapp_Location_Name_Set(long long int handle, char* val);
extern char* whatsapp_Location_Address_Get(long long int handle);
extern void whatsapp_Location_Address_Set(long long int handle, char* val);
extern char* whatsapp_Location_URL_Get(long long int handle);
extern void whatsapp_Location_URL_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.LoggedOut ---
//
extern long long int whatsapp_LoggedOut_CTor();
extern char* whatsapp_LoggedOut_Reason_Get(long long int handle);
extern void whatsapp_LoggedOut_Reason_Set(long long int handle, char* val);

// --- wrapping struct: whatsapp.Presence ---
//
extern long long int whatsapp_Presence_CTor();
extern char* whatsapp_Presence_JID_Get(long long int handle);
extern void whatsapp_Presence_JID_Set(long long int handle, char* val);
extern long long int whatsapp_Presence_Kind_Get(long long int handle);
extern void whatsapp_Presence_Kind_Set(long long int handle, long long int val);
extern long long int whatsapp_Presence_LastSeen_Get(long long int handle);
extern void whatsapp_Presence_LastSeen_Set(long long int handle, long long int val);
extern long long int whatsapp_NewGateway();
extern char whatsapp_IsAnonymousJID(char* id);

#ifdef __cplusplus
}
#endif
