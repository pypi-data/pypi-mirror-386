[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "comet-mcp"
version = "1.0.0"
description = "MCP server for Comet ML API integration"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["comet", "ml", "mcp", "model-context-protocol", "machine-learning", "experiment-tracking"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "comet-ml>=3.0.0",
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/comet-ml/comet-mcp"
Repository = "https://github.com/comet-ml/comet-mcp"
Documentation = "https://github.com/comet-ml/comet-mcp#readme"
"Bug Tracker" = "https://github.com/comet-ml/comet-mcp/issues"

[project.scripts]
comet-mcp = "comet_mcp.server:main_sync"

[tool.setuptools.packages.find]
where = ["."]
include = ["comet_mcp*"]

[tool.setuptools.package-data]
comet_mcp = ["*.py", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["comet_mcp"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"
