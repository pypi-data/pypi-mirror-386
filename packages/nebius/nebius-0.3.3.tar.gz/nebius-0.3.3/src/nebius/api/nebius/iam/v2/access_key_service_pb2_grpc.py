# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from nebius.api.nebius.common.v1 import operation_pb2 as nebius_dot_common_dot_v1_dot_operation__pb2
from nebius.api.nebius.iam.v2 import access_key_pb2 as nebius_dot_iam_dot_v2_dot_access__key__pb2
from nebius.api.nebius.iam.v2 import access_key_service_pb2 as nebius_dot_iam_dot_v2_dot_access__key__service__pb2


class AccessKeyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Create',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.CreateAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.Get = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Get',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.FromString,
                )
        self.GetSecret = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/GetSecret',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretRequest.SerializeToString,
                response_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/List',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysRequest.SerializeToString,
                response_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Update',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.UpdateAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.Delete = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Delete',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.Activate = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Activate',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.Deactivate = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/Deactivate',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.ListByAccount = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/ListByAccount',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysByAccountRequest.SerializeToString,
                response_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.FromString,
                )
        self.GetByAwsId = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/GetByAwsId',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyByAwsIdRequest.SerializeToString,
                response_deserializer=nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.FromString,
                )
        self.DeleteByAwsId = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/DeleteByAwsId',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyByAwsIdRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.ActivateByAwsId = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/ActivateByAwsId',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyByAwsIdRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )
        self.DeactivateByAwsId = channel.unary_unary(
                '/nebius.iam.v2.AccessKeyService/DeactivateByAwsId',
                request_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyByAwsIdRequest.SerializeToString,
                response_deserializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
                )


class AccessKeyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Activate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Deactivate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByAwsId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteByAwsId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateByAwsId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateByAwsId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccessKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.CreateAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.SerializeToString,
            ),
            'GetSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecret,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretRequest.FromString,
                    response_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysRequest.FromString,
                    response_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.UpdateAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Activate': grpc.unary_unary_rpc_method_handler(
                    servicer.Activate,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'Deactivate': grpc.unary_unary_rpc_method_handler(
                    servicer.Deactivate,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'ListByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.ListByAccount,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysByAccountRequest.FromString,
                    response_serializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.SerializeToString,
            ),
            'GetByAwsId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByAwsId,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyByAwsIdRequest.FromString,
                    response_serializer=nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.SerializeToString,
            ),
            'DeleteByAwsId': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteByAwsId,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyByAwsIdRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'ActivateByAwsId': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateByAwsId,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyByAwsIdRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'DeactivateByAwsId': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateByAwsId,
                    request_deserializer=nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyByAwsIdRequest.FromString,
                    response_serializer=nebius_dot_common_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nebius.iam.v2.AccessKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccessKeyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Create',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.CreateAccessKeyRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Get',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyRequest.SerializeToString,
            nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/GetSecret',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretRequest.SerializeToString,
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeySecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/List',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysRequest.SerializeToString,
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Update',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.UpdateAccessKeyRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Delete',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Activate',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Deactivate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/Deactivate',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/ListByAccount',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysByAccountRequest.SerializeToString,
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ListAccessKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByAwsId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/GetByAwsId',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.GetAccessKeyByAwsIdRequest.SerializeToString,
            nebius_dot_iam_dot_v2_dot_access__key__pb2.AccessKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteByAwsId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/DeleteByAwsId',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeleteAccessKeyByAwsIdRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateByAwsId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/ActivateByAwsId',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.ActivateAccessKeyByAwsIdRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateByAwsId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nebius.iam.v2.AccessKeyService/DeactivateByAwsId',
            nebius_dot_iam_dot_v2_dot_access__key__service__pb2.DeactivateAccessKeyByAwsIdRequest.SerializeToString,
            nebius_dot_common_dot_v1_dot_operation__pb2.Operation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
