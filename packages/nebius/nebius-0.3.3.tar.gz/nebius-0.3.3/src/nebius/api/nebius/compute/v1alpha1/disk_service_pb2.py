# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nebius/compute/v1alpha1/disk_service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from nebius.api.nebius import annotations_pb2 as nebius_dot_annotations__pb2
from nebius.api.nebius.common.v1 import metadata_pb2 as nebius_dot_common_dot_v1_dot_metadata__pb2
from nebius.api.nebius.common.v1alpha1 import operation_pb2 as nebius_dot_common_dot_v1alpha1_dot_operation__pb2
from nebius.api.nebius.common.v1alpha1 import operation_service_pb2 as nebius_dot_common_dot_v1alpha1_dot_operation__service__pb2
from nebius.api.nebius.compute.v1alpha1 import disk_pb2 as nebius_dot_compute_dot_v1alpha1_dot_disk__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*nebius/compute/v1alpha1/disk_service.proto\x12\x17nebius.compute.v1alpha1\x1a\x18nebius/annotations.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a&nebius/common/v1alpha1/operation.proto\x1a.nebius/common/v1alpha1/operation_service.proto\x1a\"nebius/compute/v1alpha1/disk.proto\" \n\x0eGetDiskRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"\xd5\x01\n\x10ListDisksRequest\x12\x1b\n\tparent_id\x18\x01 \x01(\tR\x08parentId\x12\x1b\n\tpage_size\x18\x02 \x01(\x03R\x08pageSize\x12\x1d\n\npage_token\x18\x03 \x01(\tR\tpageToken\x12h\n\x06\x66ilter\x18\x04 \x01(\tBP\x18\x01\xd2JK\n\n2025-06-16\x12=it is not implemented, filtering could be done on client sideR\x06\x66ilter\"\x8a\x01\n\x11\x43reateDiskRequest\x12>\n\x08metadata\x18\x01 \x01(\x0b\x32\".nebius.common.v1.ResourceMetadataR\x08metadata\x12\x35\n\x04spec\x18\x02 \x01(\x0b\x32!.nebius.compute.v1alpha1.DiskSpecR\x04spec\"\x8a\x01\n\x11UpdateDiskRequest\x12>\n\x08metadata\x18\x01 \x01(\x0b\x32\".nebius.common.v1.ResourceMetadataR\x08metadata\x12\x35\n\x04spec\x18\x02 \x01(\x0b\x32!.nebius.compute.v1alpha1.DiskSpecR\x04spec\"#\n\x11\x44\x65leteDiskRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"p\n\x11ListDisksResponse\x12\x33\n\x05items\x18\x01 \x03(\x0b\x32\x1d.nebius.compute.v1alpha1.DiskR\x05items\x12&\n\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xa6\x05\n\x0b\x44iskService\x12M\n\x03Get\x12\'.nebius.compute.v1alpha1.GetDiskRequest\x1a\x1d.nebius.compute.v1alpha1.Disk\x12N\n\tGetByName\x12\".nebius.common.v1.GetByNameRequest\x1a\x1d.nebius.compute.v1alpha1.Disk\x12]\n\x04List\x12).nebius.compute.v1alpha1.ListDisksRequest\x1a*.nebius.compute.v1alpha1.ListDisksResponse\x12W\n\x06\x43reate\x12*.nebius.compute.v1alpha1.CreateDiskRequest\x1a!.nebius.common.v1alpha1.Operation\x12W\n\x06Update\x12*.nebius.compute.v1alpha1.UpdateDiskRequest\x1a!.nebius.common.v1alpha1.Operation\x12W\n\x06\x44\x65lete\x12*.nebius.compute.v1alpha1.DeleteDiskRequest\x1a!.nebius.common.v1alpha1.Operation\x12\x7f\n\x16ListOperationsByParent\x12\x35.nebius.common.v1alpha1.ListOperationsByParentRequest\x1a..nebius.common.v1alpha1.ListOperationsResponse\x1a\r\x88\x02\x01\xbaJ\x07\x63omputeBn\n\x1e\x61i.nebius.pub.compute.v1alpha1B\x10\x44iskServiceProtoP\x01Z5github.com/nebius/gosdk/proto/nebius/compute/v1alpha1\xb8\x01\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nebius.compute.v1alpha1.disk_service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\036ai.nebius.pub.compute.v1alpha1B\020DiskServiceProtoP\001Z5github.com/nebius/gosdk/proto/nebius/compute/v1alpha1\270\001\001'
  _LISTDISKSREQUEST.fields_by_name['filter']._options = None
  _LISTDISKSREQUEST.fields_by_name['filter']._serialized_options = b'\030\001\322JK\n\n2025-06-16\022=it is not implemented, filtering could be done on client side'
  _DISKSERVICE._options = None
  _DISKSERVICE._serialized_options = b'\210\002\001\272J\007compute'
  _globals['_GETDISKREQUEST']._serialized_start=254
  _globals['_GETDISKREQUEST']._serialized_end=286
  _globals['_LISTDISKSREQUEST']._serialized_start=289
  _globals['_LISTDISKSREQUEST']._serialized_end=502
  _globals['_CREATEDISKREQUEST']._serialized_start=505
  _globals['_CREATEDISKREQUEST']._serialized_end=643
  _globals['_UPDATEDISKREQUEST']._serialized_start=646
  _globals['_UPDATEDISKREQUEST']._serialized_end=784
  _globals['_DELETEDISKREQUEST']._serialized_start=786
  _globals['_DELETEDISKREQUEST']._serialized_end=821
  _globals['_LISTDISKSRESPONSE']._serialized_start=823
  _globals['_LISTDISKSRESPONSE']._serialized_end=935
  _globals['_DISKSERVICE']._serialized_start=938
  _globals['_DISKSERVICE']._serialized_end=1616
# @@protoc_insertion_point(module_scope)
