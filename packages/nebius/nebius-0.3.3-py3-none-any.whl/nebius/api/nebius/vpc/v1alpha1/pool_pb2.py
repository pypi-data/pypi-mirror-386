# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nebius/vpc/v1alpha1/pool.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from nebius.api.buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2
from nebius.api.nebius.common.v1 import metadata_pb2 as nebius_dot_common_dot_v1_dot_metadata__pb2
from nebius.api.nebius import annotations_pb2 as nebius_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1enebius/vpc/v1alpha1/pool.proto\x12\x13nebius.vpc.v1alpha1\x1a\x1b\x62uf/validate/validate.proto\x1a\x1fnebius/common/v1/metadata.proto\x1a\x18nebius/annotations.proto\"\xb2\x01\n\x04Pool\x12>\n\x08metadata\x18\x01 \x01(\x0b\x32\".nebius.common.v1.ResourceMetadataR\x08metadata\x12\x31\n\x04spec\x18\x02 \x01(\x0b\x32\x1d.nebius.vpc.v1alpha1.PoolSpecR\x04spec\x12\x37\n\x06status\x18\x03 \x01(\x0b\x32\x1f.nebius.vpc.v1alpha1.PoolStatusR\x06status\"\xf4\x01\n\x08PoolSpec\x12,\n\x0esource_pool_id\x18\x01 \x01(\tB\x04\xbaJ\x01\x02H\x00R\x0csourcePoolId\x12.\n\x0fsource_scope_id\x18\x02 \x01(\tB\x04\xbaJ\x01\x02H\x00R\rsourceScopeId\x12\x44\n\x07version\x18\x03 \x01(\x0e\x32\x1e.nebius.vpc.v1alpha1.IpVersionB\n\xbaH\x03\xc8\x01\x01\xbaJ\x01\x02R\x07version\x12\x33\n\x05\x63idrs\x18\x04 \x03(\x0b\x32\x1d.nebius.vpc.v1alpha1.PoolCidrR\x05\x63idrsB\x0f\n\x06source\x12\x05\xbaH\x02\x08\x01\"\x8f\x03\n\x08PoolCidr\x12\x8e\x02\n\x04\x63idr\x18\x01 \x01(\tB\xf9\x01\xbaH\xf5\x01\xba\x01\x9d\x01\n\x11string.valid_cidr\x12.value must be a valid IP address, CIDR or mask\x1aXthis == \'\' || this.matches(\'^/([0-9]|[1-9][0-9]|1[0-2][0-8])$\') || this.isIpPrefix(true)\xba\x01N\n\x0fstring.ip_empty\x12/value is empty, which is not a valid IP address\x1a\nthis != \'\'\xc8\x01\x01R\x04\x63idr\x12@\n\x05state\x18\x02 \x01(\x0e\x32\".nebius.vpc.v1alpha1.PoolCidrStateB\x06\xbaH\x03\xc8\x01\x01R\x05state\x12\x30\n\x0c\x61llowed_mask\x18\x03 \x01(\x03\x42\r\xbaH\n\xc8\x01\x01\"\x05\x18\x80\x01(\x00R\x0b\x61llowedMask\"\xc1\x01\n\nPoolStatus\x12;\n\x05state\x18\x01 \x01(\x0e\x32%.nebius.vpc.v1alpha1.PoolStatus.StateR\x05state\x12\x14\n\x05\x63idrs\x18\x02 \x03(\tR\x05\x63idrs\x12\x19\n\x08scope_id\x18\x03 \x01(\tR\x07scopeId\"E\n\x05State\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x0c\n\x08\x43REATING\x10\x01\x12\t\n\x05READY\x10\x02\x12\x0c\n\x08\x44\x45LETING\x10\x03*C\n\rPoolCidrState\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\r\n\tAVAILABLE\x10\x01\x12\x0c\n\x08\x44ISABLED\x10\x02*;\n\tIpVersion\x12\x1a\n\x16IP_VERSION_UNSPECIFIED\x10\x00\x12\x08\n\x04IPV4\x10\x01\x12\x08\n\x04IPV6\x10\x02\x42\\\n\x1a\x61i.nebius.pub.vpc.v1alpha1B\tPoolProtoP\x01Z1github.com/nebius/gosdk/proto/nebius/vpc/v1alpha1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'nebius.vpc.v1alpha1.pool_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\032ai.nebius.pub.vpc.v1alpha1B\tPoolProtoP\001Z1github.com/nebius/gosdk/proto/nebius/vpc/v1alpha1'
  _POOLSPEC.oneofs_by_name['source']._options = None
  _POOLSPEC.oneofs_by_name['source']._serialized_options = b'\272H\002\010\001'
  _POOLSPEC.fields_by_name['source_pool_id']._options = None
  _POOLSPEC.fields_by_name['source_pool_id']._serialized_options = b'\272J\001\002'
  _POOLSPEC.fields_by_name['source_scope_id']._options = None
  _POOLSPEC.fields_by_name['source_scope_id']._serialized_options = b'\272J\001\002'
  _POOLSPEC.fields_by_name['version']._options = None
  _POOLSPEC.fields_by_name['version']._serialized_options = b'\272H\003\310\001\001\272J\001\002'
  _POOLCIDR.fields_by_name['cidr']._options = None
  _POOLCIDR.fields_by_name['cidr']._serialized_options = b'\272H\365\001\272\001\235\001\n\021string.valid_cidr\022.value must be a valid IP address, CIDR or mask\032Xthis == \'\' || this.matches(\'^/([0-9]|[1-9][0-9]|1[0-2][0-8])$\') || this.isIpPrefix(true)\272\001N\n\017string.ip_empty\022/value is empty, which is not a valid IP address\032\nthis != \'\'\310\001\001'
  _POOLCIDR.fields_by_name['state']._options = None
  _POOLCIDR.fields_by_name['state']._serialized_options = b'\272H\003\310\001\001'
  _POOLCIDR.fields_by_name['allowed_mask']._options = None
  _POOLCIDR.fields_by_name['allowed_mask']._serialized_options = b'\272H\n\310\001\001\"\005\030\200\001(\000'
  _globals['_POOLCIDRSTATE']._serialized_start=1169
  _globals['_POOLCIDRSTATE']._serialized_end=1236
  _globals['_IPVERSION']._serialized_start=1238
  _globals['_IPVERSION']._serialized_end=1297
  _globals['_POOL']._serialized_start=144
  _globals['_POOL']._serialized_end=322
  _globals['_POOLSPEC']._serialized_start=325
  _globals['_POOLSPEC']._serialized_end=569
  _globals['_POOLCIDR']._serialized_start=572
  _globals['_POOLCIDR']._serialized_end=971
  _globals['_POOLSTATUS']._serialized_start=974
  _globals['_POOLSTATUS']._serialized_end=1167
  _globals['_POOLSTATUS_STATE']._serialized_start=1098
  _globals['_POOLSTATUS_STATE']._serialized_end=1167
# @@protoc_insertion_point(module_scope)
