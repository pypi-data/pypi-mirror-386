[build-system]
requires = ["setuptools>=66.1", "setuptools_scm[toml]>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantify"

description = """\
A framework for controlling quantum computing and solid-state physics experiments.\
"""
license = "BSD-3-Clause"
license-files = ["LICENSE"]
maintainers = [
    {name = "Olga Lebiga", email = "olga@orangeqs.com"},
    {name = "Amirtha Varshiny Arumugam", email = "amirthavarshiny@orangeqs.com"},
    {name = "Gabriel Chatelain", email = "gabriel@orangeqs.com"},
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
keywords = [
    "quantum",
    "quantify",
]
dynamic = ["readme", "version"]

dependencies = [
    "bokeh",
    "deepmerge",
    "netCDF4",
    "adaptive",
    "appnope",
    "columnar",
    "dataclasses-json",
    "deepdiff",
    "dill",                      # Tests fail without dill installed, likely for a good reason
    "fastjsonschema",
    "filelock",
    "h5netcdf!=1.7.0",
    "jinja2>=3.1.2",             # pandas requires version 3.1.2 or newer
    "jsonschema",
    "lmfit>=1.3.3",              # Bugfix for lmfit (https://github.com/lmfit/lmfit-py/pull/758)
    "matplotlib !=3.5.0",
    "methodtools",               # used in base_analysis for self-bound lru_cache
    "networkx",
    "numpy!=1.19.4",
    "pandas[output_formatting]",
    "pathvalidate",
    "plotly",
    "psutil",
    "pydantic>=2.0",
    "pyqt5 >5.15.2",             # 5.15.2 has known bug, #170, https://bugreports.qt.io/browse/PYSIDE-1473
    "pyqtgraph",
    "qcodes == 0.52.0",
    "qcodes-loop",
    "quantify_scheduler",
    "rich[jupyter]",
    "scikit-learn",
    "scipy >=1.5.0, !=1.6.0",
    "typing-extensions",         # Independency from python version for "new" typing features
    "uncertainties<v3.2.3",
    "xarray >=0.19.0",
    "xxhash",
]

[project.optional-dependencies]

dev = [
    "isort",             # import sorting
    "mypy",              # static typing
    "pre-commit",        # git hooks manager
    "pre-commit-hooks",  # common hooks for git repos
    "pyright",           # static type checker
    "ruff",              # super‑fast linter
    "typos",             # spell‑checking
]

docs = [
    "myst-parser",                # markdown in sphinx
    "nbsphinx",                   # jupyter support
    "pydata-sphinx-theme",        # modern theme
    "sphinx",                     # core
    "sphinx-autobuild",           # live‑reload preview
    "sphinx-autodoc-typehints",   # inline type hints
    "jupyter-sphinx",
    "jupytext",
    "myst-nb",
    "hvplot",
    "plotly",
    "scanpydoc",
    "sphinx-autoapi",
    "sphinx-design",
    "sphinx-jsonschema",
    "sphinx-togglebutton",
    "sphinx-copybutton",
    "sphinx-rtd-theme",
    "sphinxcontrib-bibtex",
    "sphinxcontrib-mermaid",
    "quantify_scheduler[zhinst]",
]

test = [
    "diff-cover>=9.2.0",     # diff coverage reporting
    "pytest>=8.3.0",         # test runner
    "pytest-cov>=5.0.0",     # test coverage reporting
    "pytest-mock>=3.14.0",   # mock fixtures
    "pytest-mpl>=0.17.0",    # matplotlib image comparison
    "pytest-xdist",          # parallel test execution
]

[project.urls]
"Documentation" = "https://quantify-os.org/quantify"
"Website" = "https://quantify-os.org"
"Source" = "https://gitlab.com/quantify-os/quantify"
"Issue tracker" = "https://gitlab.com/quantify-os/quantify/-/issues"
"Slack" = "https://join.slack.com/t/quantify-hq/shared_invite/zt-1nd78r4e9-rbWdna53cW4DO_YbtMhVuA"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
include = ["quantify", "quantify.*"]
exclude = ["*.git*", "logs*", "rr-cache*"]

[tool.setuptools.package-data]
quantify = ["py.typed", "**/schemas/*.json"]

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.setuptools_scm]

[tool.ruff]
line-length = 88
lint.select = [
    "F",  # pyflakes
    "E",  # pycodestyle
    "W",  # pycodestyle
    "D",  # pydocstyle
    "I",  # isort
    "N",  # flake8-naming
    "UP", # pyupgrade
    "TID",  # flake8-tidy-imports
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "Q", #flake8-quotes
    "ARG", #flake8-unused-arguments
    "ANN",  # flake8-annotations
    #Pylint (PLC, PLE, PLR, PLW)
    "PLC",
    "PLE",
    "PLR",
    "PLW",
]
extend-exclude = [
    "quantify/_version.py",
]

# ignore these rules for all files:
lint.ignore = [
            # 1 blank line required before class docstring
            "D203",
            # Multi-line docstring summary should start at the first line
            "D212",
            # Ambiguous variable name
            "E741",
            # Variable `...` in function should be lowercase
            "N806",
            # Too many arguments to function call (.../5)
            "PLR0913",
            # Class attribute `compile` is shadowing a python builtin
            "A003",
            # Magic value used in comparison, consider replacing `...` with a constant variable
            "PLR2004",
            # Use `X | Y` in `isinstance` call instead of `(X, Y)` - conflicts with pyright
            #"UP038",
            # Module level import not at top of file - needed for pydantic model_rebuild
            "E402",
            # Move standard library import into type-checking block - conflicts with pydantic
            "TC003",
            # First line of docstring should be in imperative mood
            "D401",
            # 1 blank line required between summary line and description
            "D205",
            # Multi-line docstring summary should start at the second line (conflicts with black)
            "D213",
            # Missing type annotation for `**kwargs`
            "ANN003",
            # Missing type annotation for `*args`
            "ANN002",
            # No blank lines allowed before class docstring (conflicts with black)
            "D211",
            # Functions or methods that have more than 12 branches
            "PLR0912",
            # Ignore "function too complex"
            "C901"
]

[tool.ruff.lint.isort]
known-first-party = ["quantify", "quantify_core", "quantify_scheduler"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN"]

# - E402: Module level import not at top of file
"docs/conf.py" = ["E402"]

[tool.pyright]
pythonVersion = "3.12"

include = ["quantify/"]

exclude = [
  "build/**",
  "conftest.py",
  "docs/**",
  "quantify/__init__.py",
  "quantify/_static_version.py",
  "quantify/_version.py",
  "quantify/backends/graph_compilation.py",
  "quantify/backends/types/common.py",
  "quantify/measurement/control.py",
  "quantify/operations/acquisition_library.py",
  "quantify/operations/gate_library.py",
  "quantify/operations/measurement_factories.py",
  "quantify/operations/pulse_factories.py",
  "quantify/operations/pulse_library.py",
  "quantify/schedules/schedule.py",
  "quantify/schedules/timedomain_schedules.py",
  "quantify/schedules/trace_schedules.py",
  "quantify/schedules/verification.py",
  "quantify/schedules/_visualization/circuit_diagram.py",
  "quantify/schedules/_visualization/pulse_diagram.py",
  "quantify/schedules/_visualization/pulse_scheme.py",
  "quantify/visualization/mpl_plotting.py",
  "quantify/visualization/SI_utilities.py",
  "tests/**",
]

ignore = [
  "tests/**",
  "docs/**",
  "**/site-packages/quantify_scheduler/**",
]

[tool.pytest]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
markers = [
    "slow: mark test as slow (deselect with '-m \"not slow\"')",
    "integration: mark test as integration (run with '-m integration')",
    "serial: mark test to run without parallelization"
]
addopts = "-ra -q --maxfail=1 --durations=10 --strict-markers --tb=short --color=yes"
