# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from importlib import machinery, util
from pathlib import Path
from typing import Any
from typing_extensions import Self
from dataclasses import dataclass
import os
import sys

@dataclass
class PluginManager(type):
    def __init__(cls: cls, pluginName: Any, pluginBases: Any, pluginDict: Any) -> None: ...
    def AllPlugins(cls: cls) -> Any: ...
    def RegisterAllPlugin(cls: cls, aPlugin: Any) -> Any: ...
    def UnregisterPlugin(cls: cls, pluginName: Any) -> Any: ...
    def GetPluginObject(cls: cls, pluginName: Any) -> Any: ...
    @staticmethod
    def SetPluginPath(path: str) -> Any: ...
    @staticmethod
    def LoadAllPlugin(addFileType: Any) -> Any: ...
    @staticmethod
    def GetPluginByName(pluginName: Any) -> Any: ...

class AddPluginObj:
    def RunByEXE(self: Self) -> Any: ...

__ALLMODEL__ = AddPluginObj

__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import os
import sys
import importlib
import pathlib