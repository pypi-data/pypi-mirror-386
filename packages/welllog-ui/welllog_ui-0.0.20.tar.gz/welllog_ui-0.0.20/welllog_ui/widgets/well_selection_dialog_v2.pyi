# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from PySide6 import QtCore, QtGui, QtWidgets
from enum import IntEnum
from typing import Any, Dict, List, Optional
from typing_extensions import Self
from welllog_ui.services import ensure_pybo_project, get_data_service
from welllog_ui.widgets import WellFilterDialog

class WellSelectionDialog:
    class Status(IntEnum):
    def __init__(self: Self, parent: Optional[QtWidgets.QWidget], parent_layout: QtWidgets.QBoxLayout, statusBar: QtWidgets.QStatusBar) -> None: ...
    def _init_data_from_pybo(self: Self) -> None: ...
    def _setup_ui(self: Self, parent_layout: QtWidgets.QBoxLayout) -> None: ...
    def _create_well_selection_area(self: Self) -> QtWidgets.QGroupBox: ...
    def _create_available_wells_panel(self: Self) -> QtWidgets.QVBoxLayout: ...
    def _create_arrow_buttons_panel(self: Self) -> QtWidgets.QVBoxLayout: ...
    def _create_selected_wells_panel(self: Self) -> QtWidgets.QVBoxLayout: ...
    def _create_curve_selection_area(self: Self) -> QtWidgets.QGroupBox: ...
    def _connect_signals(self: Self) -> Any: ...
    def _create_list_item(self: Self, name: str) -> QtWidgets.QListWidgetItem: ...
    def _update_list_widget(self: Self, widget: QtWidgets.QListWidget, names: list[str]) -> None: ...
    def _update_table_widget(self: Self, widget: QtWidgets.QTableWidget, curves_dict: dict[str, list]) -> None: ...
    def _update_item_status(self: Self, item: QtWidgets.QListWidgetItem) -> Any: ...
    def set_available_wells(self: Self, names: list[str]) -> None: ...
    def set_selected_wells(self: Self, names: list[str]) -> None: ...
    def set_mark_status_by_names(self: Self, widget: QtWidgets.QListWidget, names: list[str], status: int) -> None: ...
    def set_curves_table(self: Self, curves_dict: dict[str, list]) -> None: ...
    def set_all_mark_status(self: Self, widget: QtWidgets.QListWidget, status: int) -> None: ...
    def set_all_check_state(self: Self, state: QtCore.Qt.CheckState) -> None: ...
    def get_current_well_name(self: Self) -> str: ...
    def get_selected_wells(self: Self) -> list[str]: ...
    def get_available_wells(self: Self) -> list[str]: ...
    def get_current_curve_names(self: Self) -> list[str]: ...
    def get_current_curve_colors(self: Self) -> list[str]: ...
    def get_current_curve_line_widths(self: Self) -> list[str]: ...
    def _move_marked_items(self: Self, from_widget: QtWidgets.QListWidget, to_widget: QtWidgets.QListWidget) -> Any: ...
    def _move_all_items(self: Self, from_widget: QtWidgets.QListWidget, to_widget: QtWidgets.QListWidget) -> Any: ...
    def _update_count_labels(self: Self) -> Any: ...
    def _on_list_item_clicked(self: Self, item: QtWidgets.QListWidgetItem) -> Any: ...
    def _on_list_item_changed(self: Self, item: QtWidgets.QListWidgetItem) -> Any: ...
    def _update_well_status_display(self: Self, is_checked: bool) -> Any: ...
    def _on_table_item_changed(self: Self, item: QtWidgets.QTableWidgetItem) -> Any: ...
    def _update_curve_status_display(self: Self) -> Any: ...
    def _on_well_filter(self: Self) -> Any: ...
    def _on_combo_changed(self: Self, index: Any, row: Any, col: Any) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import enum
import typing
import PySide6
import PySide6.QtWidgets
import PySide6.QtCore
import PySide6.QtGui
import welllog_ui
import welllog_ui.services
import welllog_ui.services.get_data_service
import welllog_ui.services.ensure_pybo_project
import welllog_ui.widgets
import welllog_ui.widgets.WellFilterDialog
import sys
import matplotlib
import matplotlib.pyplot