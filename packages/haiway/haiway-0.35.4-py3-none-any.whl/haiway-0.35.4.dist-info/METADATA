Metadata-Version: 2.3
Name: haiway
Version: 0.35.4
Summary: Framework for dependency injection and state management within structured concurrency model.
License: MIT License
         
         Copyright (c) 2024-2025 Miquido
         
         Permission is hereby granted, free of charge, to any person obtaining a copy
         of this software and associated documentation files (the "Software"), to deal
         in the Software without restriction, including without limitation the rights
         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         copies of the Software, and to permit persons to whom the Software is
         furnished to do so, subject to the following conditions:
         
         The above copyright notice and this permission notice shall be included in all
         copies or substantial portions of the Software.
         
         THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         SOFTWARE.
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Requires-Dist: bandit~=1.8 ; extra == 'dev'
Requires-Dist: pyright~=1.1 ; extra == 'dev'
Requires-Dist: pytest~=8.4 ; extra == 'dev'
Requires-Dist: pytest-asyncio~=1.2 ; extra == 'dev'
Requires-Dist: pytest-cov~=7.0 ; extra == 'dev'
Requires-Dist: ruff~=0.14 ; extra == 'dev'
Requires-Dist: mkdocs~=1.6 ; extra == 'docs'
Requires-Dist: mkdocs-material~=9.6 ; extra == 'docs'
Requires-Dist: mkdocstrings[python]~=0.30 ; extra == 'docs'
Requires-Dist: mdformat~=0.7 ; extra == 'docs'
Requires-Dist: mdformat-gfm~=0.4 ; extra == 'docs'
Requires-Dist: pymarkdownlnt~=0.9 ; extra == 'docs'
Requires-Dist: httpx~=0.28 ; extra == 'httpx'
Requires-Dist: opentelemetry-api~=1.37 ; extra == 'opentelemetry'
Requires-Dist: opentelemetry-sdk~=1.37 ; extra == 'opentelemetry'
Requires-Dist: opentelemetry-exporter-otlp-proto-grpc~=1.37 ; extra == 'opentelemetry'
Requires-Dist: asyncpg~=0.30 ; extra == 'postgres'
Maintainer: Kacper Kali≈Ñski
Maintainer-email: Kacper Kali≈Ñski <kacper.kalinski@miquido.com>
Requires-Python: >=3.13
Project-URL: Homepage, https://miquido.com
Project-URL: Repository, https://github.com/miquido/haiway.git
Provides-Extra: dev
Provides-Extra: docs
Provides-Extra: httpx
Provides-Extra: opentelemetry
Provides-Extra: postgres
Description-Content-Type: text/markdown

# üöó haiway üöï üöö üöô

[![PyPI](https://img.shields.io/pypi/v/haiway)](https://pypi.org/project/haiway/)
![Python Version](https://img.shields.io/badge/Python-3.13+-blue)
![License](https://img.shields.io/badge/License-MIT-green)
[![Docs](https://img.shields.io/badge/Documentation-yellow)](https://miquido.github.io/haiway/)
![CodeRabbit Pull Request Reviews](https://img.shields.io/coderabbit/prs/github/miquido/haiway?utm_source=oss&utm_medium=github&utm_campaign=miquido%2Fhaiway&labelColor=171717&color=FF570A&link=https%3A%2F%2Fcoderabbit.ai&label=CodeRabbit+Reviews)

## Modern Python framework for functional programming with structured concurrency

Haiway brings functional programming principles to Python's async ecosystem, providing a robust
foundation for building scalable, maintainable applications with immutable state management and
automatic resource cleanup.

## Why Haiway?

Building concurrent Python applications often involves complex state management, dependency
injection frameworks, and careful resource handling. Haiway simplifies these challenges through:

### üîí **Immutability First**

Type-safe data structures that prevent race conditions and ensure predictable behavior in concurrent
environments

### ‚ö° **Zero-Config DI**

Context-based dependency injection without decorators, containers, or complex frameworks

### üéØ **Functional Design**

Pure functions and explicit data flow make code easier to understand, test, and maintain

### üîÑ **Structured Concurrency**

Automatic task lifecycle management with guaranteed cleanup, even in error cases

## Core Principles

### üéØ **Type Safety Throughout**

Full type checking with modern Python features - unions, generics, protocols. Runtime validation
ensures data integrity.

### üß© **Composable Building Blocks**

Small, focused components that combine into larger systems. No framework lock-in or magic.

### üîÑ **Explicit Over Implicit**

Dependencies are visible in type signatures. No hidden global state or surprising side effects.

### üé≠ **Async-Native**

Built for Python's async/await from the ground up. Includes utilities for retries, timeouts, and
concurrent operations.

## üñ•Ô∏è Install

With pip:

```bash
pip install haiway
```

## üë∑ Contributing

As an open-source project in a rapidly evolving field, we welcome all contributions. Whether you can
add a new feature, enhance our infrastructure, or improve our documentation, your input is valuable
to us.

We welcome any feedback and suggestions! Feel free to open an issue or pull request.

## ‚öñÔ∏è License

MIT License

Copyright (c) 2024-2025 Miquido

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
