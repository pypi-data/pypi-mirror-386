Metadata-Version: 2.4
Name: julearn
Version: 0.3.5.dev95
Summary: Juelich Machine Learning Library
Author-email: Fede Raimondo <f.raimondo@fz-juelich.de>, Sami Hamdan <s.hamdan@fz-juelich.de>
Maintainer-email: Sami Hamdan <s.hamdan@fz-juelich.de>
License: AGPL-3.0-only
Project-URL: Changelog, https://juaml.github.io/julearn/main/whats_new.html
Project-URL: Documentation, https://juaml.github.io/julearn
Project-URL: Homepage, https://juaml.github.io/julearn
Project-URL: Source, https://github.com/juaml/julearn
Keywords: machine-learning
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved
Classifier: Natural Language :: English
Classifier: Topic :: Software Development
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE.md
License-File: AUTHORS.rst
Requires-Dist: numpy<2.0.0,>=1.26.0
Requires-Dist: pandas<2.4.0,>=2.0.0
Requires-Dist: statsmodels<0.15,>=0.13
Requires-Dist: scikit-learn<1.8.0,>=1.5.0
Requires-Dist: looseversion==1.3.0; python_version >= "3.12"
Provides-Extra: dev
Requires-Dist: tox; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: towncrier; extra == "dev"
Provides-Extra: docs
Requires-Dist: seaborn<0.14.0,>=0.13.0; extra == "docs"
Requires-Dist: sphinx<8.1.0,>=7.3.0; extra == "docs"
Requires-Dist: sphinx-gallery<=0.19.0,>=0.17.0; extra == "docs"
Requires-Dist: furo<=2025.7.19,>=2024.4.27; extra == "docs"
Requires-Dist: numpydoc<=1.9.0,>=1.6.0; extra == "docs"
Requires-Dist: sphinx-copybutton<0.5.3,>=0.5.1; extra == "docs"
Requires-Dist: towncrier<24.7.0,>=23.10.0; extra == "docs"
Requires-Dist: sphinxcontrib-towncrier==0.4.0a0; extra == "docs"
Requires-Dist: scikit-optimize<0.11,>=0.10.0; extra == "docs"
Requires-Dist: optuna<3.7,>=3.6.0; extra == "docs"
Requires-Dist: optuna_integration<4.1,>=3.6.0; extra == "docs"
Requires-Dist: setuptools-scm>=8; extra == "docs"
Provides-Extra: deslib
Requires-Dist: deslib<0.4.0,>=0.3.5; extra == "deslib"
Provides-Extra: viz
Requires-Dist: panel>=1.3.0; extra == "viz"
Requires-Dist: bokeh>=3.0.0; extra == "viz"
Requires-Dist: param>=2.0.0; extra == "viz"
Provides-Extra: skopt
Requires-Dist: scikit-optimize<0.11,>=0.10.0; extra == "skopt"
Provides-Extra: optuna
Requires-Dist: optuna<3.7,>=3.6.0; extra == "optuna"
Requires-Dist: optuna_integration<4.1,>=3.6.0; extra == "optuna"
Provides-Extra: all
Requires-Dist: julearn[optuna,skopt,viz]; extra == "all"
Dynamic: license-file

# julearn

![PyPI](https://img.shields.io/pypi/v/julearn?style=flat-square)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/julearn?style=flat-square)
![PyPI - Wheel](https://img.shields.io/pypi/wheel/julearn?style=flat-square)
[![Anaconda-Server Badge](https://anaconda.org/conda-forge/julearn/badges/version.svg)](https://anaconda.org/conda-forge/julearn)
![GitHub](https://img.shields.io/github/license/juaml/julearn?style=flat-square)
![Codecov](https://img.shields.io/codecov/c/github/juaml/julearn?style=flat-square)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v2.json)](https://github.com/charliermarsh/ruff)
[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit)](https://github.com/pre-commit/pre-commit)
![JuRSE Code Pick](https://img.shields.io/badge/JuRSE_Code_Pick-May_2025-blue?link=https://www.fz-juelich.de/en/rse/jurse-community/jurse-code-of-the-month/may-2025)

## About

The Forschungszentrum Jülich Machine Learning Library

Check our full documentation here: https://juaml.github.io/julearn/index.html

It is currently being developed and maintained at the [Applied Machine Learning](https://www.fz-juelich.de/en/inm/inm-7/research-groups/applied-machine-learning-aml) group at [Forschungszentrum Juelich](https://www.fz-juelich.de/en), Germany.

## Installation

Use `pip` to install from PyPI like so:

```
pip install julearn
```

You can also install via `conda`, like so:

```
conda install -c conda-forge julearn
```

## Licensing

julearn is released under the AGPL v3 license:

julearn, FZJuelich AML machine learning library.
Copyright (C) 2020, authors of julearn.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

## Citing

If you use julearn in a scientific publication, please use the following reference

> Sami Hamdan,Shammi More,Leonard Sasse,Vera Komeyer,Kaustubh R. Patil,Federico Raimondo,for the Alzheimer’s Disease Neuroimaging Initiative,Julearn: an easy-to-use library for leakage-free evaluation and inspection of ML models,Gigabyte,2024 https://doi.org/10.46471/gigabyte.113

Since julearn is also heavily reliant on scikit-learn, please also cite them: https://scikit-learn.org/stable/about.html#citing-scikit-learn
