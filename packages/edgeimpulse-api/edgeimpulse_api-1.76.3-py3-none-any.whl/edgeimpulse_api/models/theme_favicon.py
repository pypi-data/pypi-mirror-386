# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic.v1 import BaseModel, StrictStr

class ThemeFavicon(BaseModel):
    favicon32: Optional[StrictStr] = None
    favicon57: Optional[StrictStr] = None
    favicon76: Optional[StrictStr] = None
    favicon96: Optional[StrictStr] = None
    favicon120: Optional[StrictStr] = None
    favicon128: Optional[StrictStr] = None
    favicon144: Optional[StrictStr] = None
    favicon152: Optional[StrictStr] = None
    favicon180: Optional[StrictStr] = None
    favicon228: Optional[StrictStr] = None
    __properties = ["favicon32", "favicon57", "favicon76", "favicon96", "favicon120", "favicon128", "favicon144", "favicon152", "favicon180", "favicon228"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = False

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self,indent=None) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict(),indent=indent)

    @classmethod
    def from_json(cls, json_str: str) -> ThemeFavicon:
        """Create an instance of ThemeFavicon from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ThemeFavicon:
        """Create an instance of ThemeFavicon from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return ThemeFavicon.construct(**obj)

        _obj = ThemeFavicon.construct(**{
            "favicon32": obj.get("favicon32"),
            "favicon57": obj.get("favicon57"),
            "favicon76": obj.get("favicon76"),
            "favicon96": obj.get("favicon96"),
            "favicon120": obj.get("favicon120"),
            "favicon128": obj.get("favicon128"),
            "favicon144": obj.get("favicon144"),
            "favicon152": obj.get("favicon152"),
            "favicon180": obj.get("favicon180"),
            "favicon228": obj.get("favicon228")
        })
        return _obj

