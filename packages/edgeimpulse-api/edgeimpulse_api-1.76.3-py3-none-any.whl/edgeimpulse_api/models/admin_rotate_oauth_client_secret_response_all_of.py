# coding: utf-8

"""
    Edge Impulse API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json



from pydantic.v1 import BaseModel, Field, StrictStr

class AdminRotateOauthClientSecretResponseAllOf(BaseModel):
    client_secret: StrictStr = Field(..., alias="clientSecret", description="A confidential secret known only to the client and the authorization server. The client secret is only shown once at creation and cannot be retrieved later. Users must save this value securely. If the secret is lost or compromised, a new secret must be generated using the adminRotateOauthClientSecret endpoint. ")
    __properties = ["clientSecret"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = False

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self,indent=None) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict(),indent=indent)

    @classmethod
    def from_json(cls, json_str: str) -> AdminRotateOauthClientSecretResponseAllOf:
        """Create an instance of AdminRotateOauthClientSecretResponseAllOf from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> AdminRotateOauthClientSecretResponseAllOf:
        """Create an instance of AdminRotateOauthClientSecretResponseAllOf from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return AdminRotateOauthClientSecretResponseAllOf.construct(**obj)

        _obj = AdminRotateOauthClientSecretResponseAllOf.construct(**{
            "client_secret": obj.get("clientSecret")
        })
        return _obj

