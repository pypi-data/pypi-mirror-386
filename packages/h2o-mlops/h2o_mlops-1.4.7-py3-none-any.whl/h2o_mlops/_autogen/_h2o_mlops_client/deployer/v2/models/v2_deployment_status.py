# coding: utf-8

"""
    ai/h2o/mlops/deployer/v2/artifact_composition.proto

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: version not set
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from _h2o_mlops_client.deployer.v2.configuration import Configuration


class V2DeploymentStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'name': 'str',
        'state': 'DeploymentStatusDeploymentState',
        'message': 'str',
        'update_time': 'datetime'
    }

    attribute_map = {
        'name': 'name',
        'state': 'state',
        'message': 'message',
        'update_time': 'updateTime'
    }

    def __init__(self, name=None, state=None, message=None, update_time=None, local_vars_configuration=None):  # noqa: E501
        """V2DeploymentStatus - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._name = None
        self._state = None
        self._message = None
        self._update_time = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if state is not None:
            self.state = state
        if message is not None:
            self.message = message
        if update_time is not None:
            self.update_time = update_time

    @property
    def name(self):
        """Gets the name of this V2DeploymentStatus.  # noqa: E501

        Resource name.  # noqa: E501

        :return: The name of this V2DeploymentStatus.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V2DeploymentStatus.

        Resource name.  # noqa: E501

        :param name: The name of this V2DeploymentStatus.  # noqa: E501
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this V2DeploymentStatus.  # noqa: E501


        :return: The state of this V2DeploymentStatus.  # noqa: E501
        :rtype: DeploymentStatusDeploymentState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this V2DeploymentStatus.


        :param state: The state of this V2DeploymentStatus.  # noqa: E501
        :type state: DeploymentStatusDeploymentState
        """

        self._state = state

    @property
    def message(self):
        """Gets the message of this V2DeploymentStatus.  # noqa: E501

        Miscellaneous status message.  # noqa: E501

        :return: The message of this V2DeploymentStatus.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this V2DeploymentStatus.

        Miscellaneous status message.  # noqa: E501

        :param message: The message of this V2DeploymentStatus.  # noqa: E501
        :type message: str
        """

        self._message = message

    @property
    def update_time(self):
        """Gets the update_time of this V2DeploymentStatus.  # noqa: E501

        Time of the last status change.  # noqa: E501

        :return: The update_time of this V2DeploymentStatus.  # noqa: E501
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this V2DeploymentStatus.

        Time of the last status change.  # noqa: E501

        :param update_time: The update_time of this V2DeploymentStatus.  # noqa: E501
        :type update_time: datetime
        """

        self._update_time = update_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2DeploymentStatus):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, V2DeploymentStatus):
            return True

        return self.to_dict() != other.to_dict()
