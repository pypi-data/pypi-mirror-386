# coding: utf-8

"""
    SwiftyRX API

    API for the SwiftyRX Backend 

    The version of the OpenAPI document: 0.1.DEV-0
    Contact: paul.tindall@rxfoundry.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rxfoundry.clients.swifty_api.models.prescription import Prescription

class TestPrescription(unittest.TestCase):
    """Prescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Prescription:
        """Test Prescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Prescription`
        """
        model = Prescription()
        if include_optional:
            return Prescription(
                uuid = '',
                rx_number = '',
                prescriber_order_number = '',
                patient = rxfoundry.clients.swifty_api.models.patient.Patient(
                    uuid = '', 
                    last_name = '', 
                    first_name = '', 
                    middle_name = '', 
                    suffix = '', 
                    prefix = '', 
                    gender = rxfoundry.clients.swifty_api.models.code.Code(
                        uuid = '', 
                        code = '', 
                        description = '', ), 
                    date_of_birth = '', 
                    home_address = rxfoundry.clients.swifty_api.models.address.Address(
                        uuid = '', 
                        address_line_one = '', 
                        address_line_two = '', 
                        city = '', 
                        state_province = '', 
                        postal_code = '', 
                        country_code = '', 
                        longitude = 1.337, 
                        latitude = 1.337, 
                        distance = 1.337, ), 
                    primary_phone = '', 
                    alternate_phone = '', 
                    email = '', 
                    external_references = [
                        rxfoundry.clients.swifty_api.models.patient_external_identifier.PatientExternalIdentifier(
                            external_id = '', 
                            external_system_slug = '', 
                            external_email = '', 
                            external_mobile_phone = '', )
                        ], ),
                pharmacy = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                    uuid = '', 
                    name = '', 
                    npi = '', 
                    ncpdp_id = '', 
                    other_organization_name = '', 
                    other_organization_name_type = rxfoundry.clients.swifty_api.models.code.Code(
                        uuid = '', 
                        code = '', 
                        description = '', ), 
                    practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                        uuid = '', 
                        address_line_one = '', 
                        address_line_two = '', 
                        city = '', 
                        state_province = '', 
                        postal_code = '', 
                        country_code = '', 
                        longitude = 1.337, 
                        latitude = 1.337, 
                        distance = 1.337, ), 
                    taxonomies = [
                        rxfoundry.clients.swifty_api.models.code.Code(
                            uuid = '', 
                            code = '', 
                            description = '', )
                        ], 
                    networks = [
                        
                        ], 
                    other_identifiers = [
                        rxfoundry.clients.swifty_api.models.pharmacy_other_identifier.PharmacyOtherIdentifier(
                            identifier = '', 
                            identifier_type = , 
                            issuer = '', 
                            state = '', )
                        ], 
                    google_place_id = '', 
                    google_place_data = { }, 
                    pharmacy_chain = rxfoundry.clients.swifty_api.models.pharmacy_chain.PharmacyChain(
                        uuid = '', 
                        name = '', 
                        program_pricing = [
                            rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                    program_name = '', 
                                    program_description = '', ), 
                                from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                dispensing_fee = 1.337, 
                                transaction_fee = 1.337, 
                                ingredient_cost_markup = 1.337, )
                            ], ), 
                    program_pricing = [
                        rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                            from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            dispensing_fee = 1.337, 
                            transaction_fee = 1.337, 
                            ingredient_cost_markup = 1.337, )
                        ], ),
                prescriber = rxfoundry.clients.swifty_api.models.prescriber.Prescriber(
                    uuid = '', 
                    last_name = '', 
                    first_name = '', 
                    middle_name = '', 
                    credentials_text = '', 
                    npi = '', 
                    dea_number = '', 
                    practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                        uuid = '', 
                        address_line_one = '', 
                        address_line_two = '', 
                        city = '', 
                        state_province = '', 
                        postal_code = '', 
                        country_code = '', 
                        longitude = 1.337, 
                        latitude = 1.337, 
                        distance = 1.337, ), ),
                drug_description = '',
                prescribed_ndc = '',
                medication = rxfoundry.clients.swifty_api.models.medication.Medication(
                    uuid = '', 
                    drug_description = '', 
                    drug_strength = '', 
                    drug_strength_form = '', 
                    drug_strength_uom = '', 
                    is_brand = True, 
                    program_pricing = [
                        rxfoundry.clients.swifty_api.models.medication_program_pricing.MedicationProgramPricing(
                            pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                program_name = '', 
                                program_description = '', ), 
                            from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            ingredient_cost = 1.337, )
                        ], 
                    variants = [
                        rxfoundry.clients.swifty_api.models.medication_variant.MedicationVariant(
                            uuid = '', 
                            ndc = '', 
                            manufacturer = '', 
                            packaging = '', 
                            is_brand = True, )
                        ], 
                    medication_product_codes = [
                        rxfoundry.clients.swifty_api.models.code_qualifier_code.CodeQualifierCode(
                            uuid = '', 
                            code_qualifier = rxfoundry.clients.swifty_api.models.code.Code(
                                uuid = '', 
                                code = '', 
                                description = '', ), 
                            code = '', )
                        ], 
                    medication_drug_database_codes = [
                        rxfoundry.clients.swifty_api.models.code_qualifier_code.CodeQualifierCode(
                            uuid = '', 
                            code = '', )
                        ], ),
                number_of_fills = 56,
                quantity_value = 1.337,
                quantity_type = rxfoundry.clients.swifty_api.models.code.Code(
                    uuid = '', 
                    code = '', 
                    description = '', ),
                quantity_uom = rxfoundry.clients.swifty_api.models.code.Code(
                    uuid = '', 
                    code = '', 
                    description = '', ),
                days_supply = 56,
                written_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                substitutions = rxfoundry.clients.swifty_api.models.code.Code(
                    uuid = '', 
                    code = '', 
                    description = '', ),
                sig_text = '',
                structured_sig_snomed_verson = '',
                structured_sig_fmt_version = '',
                structured_sig_instructions = { },
                structured_sig_indications = { },
                structured_sig_max_does_restrictions = { },
                structured_sig_clarifying_free_text = '',
                rx_fill_indicators = [
                    rxfoundry.clients.swifty_api.models.code.Code(
                        uuid = '', 
                        code = '', 
                        description = '', )
                    ],
                surescripts_message = rxfoundry.clients.swifty_api.models.surescripts_message.SurescriptsMessage(
                    uuid = '', 
                    virtual_pharmacy = rxfoundry.clients.swifty_api.models.virtual_pharmacy.VirtualPharmacy(
                        uuid = '', 
                        name = '', 
                        domain = '', 
                        pharmacy = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                            uuid = '', 
                            name = '', 
                            npi = '', 
                            ncpdp_id = '', 
                            other_organization_name = '', 
                            other_organization_name_type = rxfoundry.clients.swifty_api.models.code.Code(
                                uuid = '', 
                                code = '', 
                                description = '', ), 
                            practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                                uuid = '', 
                                address_line_one = '', 
                                address_line_two = '', 
                                city = '', 
                                state_province = '', 
                                postal_code = '', 
                                country_code = '', 
                                longitude = 1.337, 
                                latitude = 1.337, 
                                distance = 1.337, ), 
                            taxonomies = [
                                rxfoundry.clients.swifty_api.models.code.Code(
                                    uuid = '', 
                                    code = '', 
                                    description = '', )
                                ], 
                            networks = [
                                
                                ], 
                            other_identifiers = [
                                rxfoundry.clients.swifty_api.models.pharmacy_other_identifier.PharmacyOtherIdentifier(
                                    identifier = '', 
                                    identifier_type = , 
                                    issuer = '', 
                                    state = '', )
                                ], 
                            google_place_id = '', 
                            google_place_data = { }, 
                            pharmacy_chain = rxfoundry.clients.swifty_api.models.pharmacy_chain.PharmacyChain(
                                uuid = '', 
                                name = '', 
                                program_pricing = [
                                    rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                        pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                            program_name = '', 
                                            program_description = '', ), 
                                        from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        dispensing_fee = 1.337, 
                                        transaction_fee = 1.337, 
                                        ingredient_cost_markup = 1.337, )
                                    ], ), 
                            program_pricing = [
                                rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                    from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    dispensing_fee = 1.337, 
                                    transaction_fee = 1.337, 
                                    ingredient_cost_markup = 1.337, )
                                ], ), ), 
                    message_id = '', 
                    message_type = '', 
                    sent_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    received_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    processed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    message_json = { }, 
                    image_pdf = '', 
                    image_png = '', ),
                intake_pharmacy = rxfoundry.clients.swifty_api.models.virtual_pharmacy.VirtualPharmacy(
                    uuid = '', 
                    name = '', 
                    domain = '', 
                    pharmacy = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                        uuid = '', 
                        name = '', 
                        npi = '', 
                        ncpdp_id = '', 
                        other_organization_name = '', 
                        other_organization_name_type = rxfoundry.clients.swifty_api.models.code.Code(
                            uuid = '', 
                            code = '', 
                            description = '', ), 
                        practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                            uuid = '', 
                            address_line_one = '', 
                            address_line_two = '', 
                            city = '', 
                            state_province = '', 
                            postal_code = '', 
                            country_code = '', 
                            longitude = 1.337, 
                            latitude = 1.337, 
                            distance = 1.337, ), 
                        taxonomies = [
                            rxfoundry.clients.swifty_api.models.code.Code(
                                uuid = '', 
                                code = '', 
                                description = '', )
                            ], 
                        networks = [
                            
                            ], 
                        other_identifiers = [
                            rxfoundry.clients.swifty_api.models.pharmacy_other_identifier.PharmacyOtherIdentifier(
                                identifier = '', 
                                identifier_type = , 
                                issuer = '', 
                                state = '', )
                            ], 
                        google_place_id = '', 
                        google_place_data = { }, 
                        pharmacy_chain = rxfoundry.clients.swifty_api.models.pharmacy_chain.PharmacyChain(
                            uuid = '', 
                            name = '', 
                            program_pricing = [
                                rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                    pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                        program_name = '', 
                                        program_description = '', ), 
                                    from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    dispensing_fee = 1.337, 
                                    transaction_fee = 1.337, 
                                    ingredient_cost_markup = 1.337, )
                                ], ), 
                        program_pricing = [
                            rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                dispensing_fee = 1.337, 
                                transaction_fee = 1.337, 
                                ingredient_cost_markup = 1.337, )
                            ], ), ),
                pv0 = rxfoundry.clients.swifty_api.models.prescription_verification.PrescriptionVerification(
                    level = 'pv0', 
                    user = rxfoundry.clients.swifty_api.models.user.User(
                        username = '', 
                        first_name = '', 
                        last_name = '', 
                        email = '', 
                        is_staff = True, 
                        is_superuser = True, ), 
                    verification_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                pv1 = rxfoundry.clients.swifty_api.models.prescription_verification.PrescriptionVerification(
                    level = 'pv0', 
                    user = rxfoundry.clients.swifty_api.models.user.User(
                        username = '', 
                        first_name = '', 
                        last_name = '', 
                        email = '', 
                        is_staff = True, 
                        is_superuser = True, ), 
                    verification_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                is_on_formulary = True,
                has_open_issues = True,
                ignore_open_issues = True,
                has_running_workflow = True,
                notified_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                prescription_issues = [
                    rxfoundry.clients.swifty_api.models.prescription_issue.PrescriptionIssue(
                        issues = [
                            ''
                            ], 
                        issue_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        issue_identified_by = '', 
                        issue_identified_by_user = rxfoundry.clients.swifty_api.models.user.User(
                            username = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            is_staff = True, 
                            is_superuser = True, ), 
                        issue_closed_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        issue_close_type = 'RxCancelled', 
                        issue_closed_by = '', 
                        issue_closed_by_user = rxfoundry.clients.swifty_api.models.user.User(
                            username = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            is_staff = True, 
                            is_superuser = True, ), )
                    ],
                prescription_change_requests = [
                    rxfoundry.clients.swifty_api.models.prescription_change_request.PrescriptionChangeRequest(
                        surescripts_request_code = '', 
                        surescripts_request_sub_code = '', 
                        request = '', 
                        urgency = '', 
                        requested_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        requested_by = rxfoundry.clients.swifty_api.models.user.User(
                            username = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            is_staff = True, 
                            is_superuser = True, ), 
                        approved = True, 
                        approved_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        approved_with_changes = '', 
                        denied_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        denied_reasons = [
                            rxfoundry.clients.swifty_api.models.code.Code(
                                uuid = '', 
                                code = '', 
                                description = '', )
                            ], 
                        denied_reason = '', )
                    ],
                prescription_tasks = [
                    rxfoundry.clients.swifty_api.models.prescription_task.PrescriptionTask(
                        uuid = '', 
                        created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        task_type = '', 
                        manual_review_required = True, 
                        is_completed = True, 
                        from_pharmacy = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                            uuid = '', 
                            name = '', 
                            npi = '', 
                            ncpdp_id = '', 
                            other_organization_name = '', 
                            other_organization_name_type = rxfoundry.clients.swifty_api.models.code.Code(
                                uuid = '', 
                                code = '', 
                                description = '', ), 
                            practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                                uuid = '', 
                                address_line_one = '', 
                                address_line_two = '', 
                                city = '', 
                                state_province = '', 
                                postal_code = '', 
                                country_code = '', 
                                longitude = 1.337, 
                                latitude = 1.337, 
                                distance = 1.337, ), 
                            taxonomies = [
                                rxfoundry.clients.swifty_api.models.code.Code(
                                    uuid = '', 
                                    code = '', 
                                    description = '', )
                                ], 
                            networks = [
                                
                                ], 
                            other_identifiers = [
                                rxfoundry.clients.swifty_api.models.pharmacy_other_identifier.PharmacyOtherIdentifier(
                                    identifier = '', 
                                    identifier_type = , 
                                    issuer = '', 
                                    state = '', )
                                ], 
                            google_place_id = '', 
                            google_place_data = { }, 
                            pharmacy_chain = rxfoundry.clients.swifty_api.models.pharmacy_chain.PharmacyChain(
                                uuid = '', 
                                name = '', 
                                program_pricing = [
                                    rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                        pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                            program_name = '', 
                                            program_description = '', ), 
                                        from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        dispensing_fee = 1.337, 
                                        transaction_fee = 1.337, 
                                        ingredient_cost_markup = 1.337, )
                                    ], ), 
                            program_pricing = [
                                rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                    from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                    dispensing_fee = 1.337, 
                                    transaction_fee = 1.337, 
                                    ingredient_cost_markup = 1.337, )
                                ], ), 
                        to_pharmacy = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                            uuid = '', 
                            name = '', 
                            npi = '', 
                            ncpdp_id = '', 
                            other_organization_name = '', 
                            google_place_id = '', ), 
                        transfer_type = 'API', 
                        statuses = [
                            rxfoundry.clients.swifty_api.models.prescription_task_status.PrescriptionTaskStatus(
                                uuid = '', 
                                status_type = '', 
                                status_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                status_info = { }, )
                            ], )
                    ],
                prescription_edits = [
                    rxfoundry.clients.swifty_api.models.prescription_patch.PrescriptionPatch(
                        sig_text = '', 
                        days_supply = 56, 
                        quantity_value = 1.337, 
                        number_of_fills = 56, 
                        original_sig_text = '', 
                        original_days_supply = 56, 
                        original_quantity_value = 1.337, 
                        original_number_of_fills = 56, 
                        patched_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ignore_open_issues = True, 
                        patched_by = rxfoundry.clients.swifty_api.models.user.User(
                            username = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            is_staff = True, 
                            is_superuser = True, ), )
                    ],
                transfer_requested_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                transfer_requested_to = rxfoundry.clients.swifty_api.models.pharmacy.Pharmacy(
                    uuid = '', 
                    name = '', 
                    npi = '', 
                    ncpdp_id = '', 
                    other_organization_name = '', 
                    other_organization_name_type = rxfoundry.clients.swifty_api.models.code.Code(
                        uuid = '', 
                        code = '', 
                        description = '', ), 
                    practice_address = rxfoundry.clients.swifty_api.models.address.Address(
                        uuid = '', 
                        address_line_one = '', 
                        address_line_two = '', 
                        city = '', 
                        state_province = '', 
                        postal_code = '', 
                        country_code = '', 
                        longitude = 1.337, 
                        latitude = 1.337, 
                        distance = 1.337, ), 
                    taxonomies = [
                        rxfoundry.clients.swifty_api.models.code.Code(
                            uuid = '', 
                            code = '', 
                            description = '', )
                        ], 
                    networks = [
                        
                        ], 
                    other_identifiers = [
                        rxfoundry.clients.swifty_api.models.pharmacy_other_identifier.PharmacyOtherIdentifier(
                            identifier = '', 
                            identifier_type = , 
                            issuer = '', 
                            state = '', )
                        ], 
                    google_place_id = '', 
                    google_place_data = { }, 
                    pharmacy_chain = rxfoundry.clients.swifty_api.models.pharmacy_chain.PharmacyChain(
                        uuid = '', 
                        name = '', 
                        program_pricing = [
                            rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                                pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                                    program_name = '', 
                                    program_description = '', ), 
                                from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                dispensing_fee = 1.337, 
                                transaction_fee = 1.337, 
                                ingredient_cost_markup = 1.337, )
                            ], ), 
                    program_pricing = [
                        rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                            from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            dispensing_fee = 1.337, 
                            transaction_fee = 1.337, 
                            ingredient_cost_markup = 1.337, )
                        ], ),
                transferred_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                transfer_type = 'API',
                transferred_by = rxfoundry.clients.swifty_api.models.user.User(
                    username = '', 
                    first_name = '', 
                    last_name = '', 
                    email = '', 
                    is_staff = True, 
                    is_superuser = True, ),
                change_requested_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                change_request_closed_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                change_request_approved = True,
                image_pdf = '',
                image_png = ''
            )
        else:
            return Prescription(
        )
        """

    def testPrescription(self):
        """Test Prescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
