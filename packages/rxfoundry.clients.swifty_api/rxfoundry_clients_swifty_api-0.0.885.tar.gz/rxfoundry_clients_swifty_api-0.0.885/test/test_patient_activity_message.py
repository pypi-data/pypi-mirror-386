# coding: utf-8

"""
    SwiftyRX API

    API for the SwiftyRX Backend 

    The version of the OpenAPI document: 0.1.DEV-0
    Contact: paul.tindall@rxfoundry.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rxfoundry.clients.swifty_api.models.patient_activity_message import PatientActivityMessage

class TestPatientActivityMessage(unittest.TestCase):
    """PatientActivityMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatientActivityMessage:
        """Test PatientActivityMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatientActivityMessage`
        """
        model = PatientActivityMessage()
        if include_optional:
            return PatientActivityMessage(
                message_id = '',
                message_type = 'created',
                is_completed = True,
                activity_tasks = [
                    rxfoundry.clients.swifty_api.models.patient_task.PatientTask(
                        uuid = '', 
                        created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        task_type = '', 
                        manual_review_required = True, 
                        is_completed = True, 
                        statuses = [
                            rxfoundry.clients.swifty_api.models.patient_task_status.PatientTaskStatus(
                                uuid = '', 
                                status_type = '', 
                                status_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                status_info = { }, )
                            ], )
                    ]
            )
        else:
            return PatientActivityMessage(
        )
        """

    def testPatientActivityMessage(self):
        """Test PatientActivityMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
