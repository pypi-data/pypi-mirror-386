# coding: utf-8

"""
    SwiftyRX API

    API for the SwiftyRX Backend 

    The version of the OpenAPI document: 0.1.DEV-0
    Contact: paul.tindall@rxfoundry.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rxfoundry.clients.swifty_api.models.pharmacy_chain import PharmacyChain

class TestPharmacyChain(unittest.TestCase):
    """PharmacyChain unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PharmacyChain:
        """Test PharmacyChain
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PharmacyChain`
        """
        model = PharmacyChain()
        if include_optional:
            return PharmacyChain(
                uuid = '',
                name = '',
                program_pricing = [
                    rxfoundry.clients.swifty_api.models.pharmacy_program_pricing.PharmacyProgramPricing(
                        pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                            program_name = '', 
                            program_description = '', ), 
                        from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        dispensing_fee = 1.337, 
                        transaction_fee = 1.337, 
                        ingredient_cost_markup = 1.337, )
                    ]
            )
        else:
            return PharmacyChain(
        )
        """

    def testPharmacyChain(self):
        """Test PharmacyChain"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
