# coding: utf-8

"""
    SwiftyRX API

    API for the SwiftyRX Backend 

    The version of the OpenAPI document: 0.1.DEV-0
    Contact: paul.tindall@rxfoundry.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rxfoundry.clients.swifty_api.models.medication import Medication

class TestMedication(unittest.TestCase):
    """Medication unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Medication:
        """Test Medication
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Medication`
        """
        model = Medication()
        if include_optional:
            return Medication(
                uuid = '',
                drug_description = '',
                drug_strength = '',
                drug_strength_form = '',
                drug_strength_uom = '',
                is_brand = True,
                program_pricing = [
                    rxfoundry.clients.swifty_api.models.medication_program_pricing.MedicationProgramPricing(
                        pricing_program = rxfoundry.clients.swifty_api.models.pricing_program.PricingProgram(
                            program_name = '', 
                            program_description = '', ), 
                        from_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        to_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        ingredient_cost = 1.337, )
                    ],
                variants = [
                    rxfoundry.clients.swifty_api.models.medication_variant.MedicationVariant(
                        uuid = '', 
                        ndc = '', 
                        manufacturer = '', 
                        packaging = '', 
                        is_brand = True, )
                    ],
                medication_product_codes = [
                    rxfoundry.clients.swifty_api.models.code_qualifier_code.CodeQualifierCode(
                        uuid = '', 
                        code_qualifier = rxfoundry.clients.swifty_api.models.code.Code(
                            uuid = '', 
                            code = '', 
                            description = '', ), 
                        code = '', )
                    ],
                medication_drug_database_codes = [
                    rxfoundry.clients.swifty_api.models.code_qualifier_code.CodeQualifierCode(
                        uuid = '', 
                        code_qualifier = rxfoundry.clients.swifty_api.models.code.Code(
                            uuid = '', 
                            code = '', 
                            description = '', ), 
                        code = '', )
                    ]
            )
        else:
            return Medication(
        )
        """

    def testMedication(self):
        """Test Medication"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
