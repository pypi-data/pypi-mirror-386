[project]
name = "mcp-scan"
version = "0.3.24"
description = "MCP Scan tool"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "mcp[cli]==1.16.0",
    "rich>=14.0.0",
    "pyjson5>=1.6.8",
    "aiofiles>=23.1.0",
    "types-aiofiles",
    "pydantic>=2.11.2",
    "lark>=1.1.9",
    "psutil>=5.9.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "invariant-sdk>=0.0.11",
    "pyyaml>=6.0.2",
    "regex>=2024.11.6",
    "aiohttp>=3.11.16",
    "rapidfuzz>=3.13.0",
    "invariant-ai>=0.3.3",
    "filelock>=3.18.0",
    "truststore>=0.10.4",
]

[project.scripts]
mcp-scan = "mcp_scan.run:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_scan","src/mcp_scan_server"]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-lazy-fixtures>=1.1.2",
    "pytest-asyncio>=0.26.0"
]
dev = [
    "shiv>=1.0.4",
    "ruff>=0.11.8",
    "pyinstaller>=6.15.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"


[tool.ruff]
# Assuming Python 3.10 as the target
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "W",    # pycodestyle warnings
    "RUF",  # Ruff-specific rules
]
ignore = [
    "E203",   # Whitespace before ':' (conflicts with Black)
    # Docstring rules corresponding to D100-D107
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in __init__
    "SIM117", # nested with
    "B008", # Allow Depends(...) in default arguments
    "E501" # line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["D", "S"]  # Ignore docstring and security issues in tests

[tool.ruff.lint.isort]
known-first-party = ["mcp_scan"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
