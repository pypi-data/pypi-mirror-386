# Next.js Routing Patterns

Complete guide to routing in Next.js App Router.

---

## App Router Structure

Next.js uses a file-system based router built on Server Components. The app directory structure:

```
app/
├── layout.tsx          # Root layout (required)
├── page.tsx            # Home page
├── loading.tsx         # Loading UI
├── error.tsx           # Error UI
├── not-found.tsx       # 404 UI
├── api/                # API routes
│   └── route.ts
└── [dynamic]/          # Dynamic routes
    └── page.tsx
```

---

## Dynamic Routes

### Basic Dynamic Route

```typescript
// app/posts/[id]/page.tsx
interface PageProps {
  params: { id: string }
  searchParams: { [key: string]: string | string[] | undefined }
}

export default function PostPage({ params, searchParams }: PageProps) {
  return <div>Post ID: {params.id}</div>
}

// Generate static paths at build time
export async function generateStaticParams() {
  const posts = await fetch('https://api.example.com/posts').then(res => res.json())
  return posts.map((post: any) => ({ id: post.id }))
}
```

### Catch-all Routes

```typescript
// app/docs/[...slug]/page.tsx
interface PageProps {
  params: { slug: string[] }
}

export default function DocsPage({ params }: PageProps) {
  // /docs/a/b/c -> slug = ['a', 'b', 'c']
  return <div>Path: {params.slug.join('/')}</div>
}
```

---

## Route Groups

Organize routes without affecting URL structure:

```
app/
├── (marketing)/
│   ├── layout.tsx      # Marketing layout
│   ├── page.tsx        # Home page
│   └── about/
│       └── page.tsx    # /about
└── (dashboard)/
    ├── layout.tsx      # Dashboard layout
    └── settings/
        └── page.tsx    # /settings
```

---

## Parallel Routes

Display multiple pages simultaneously:

```
app/
├── @analytics/
│   └── page.tsx
├── @team/
│   └── page.tsx
├── layout.tsx
└── page.tsx

// layout.tsx
export default function Layout({
  children,
  analytics,
  team
}: {
  children: React.ReactNode
  analytics: React.ReactNode
  team: React.ReactNode
}) {
  return (
    <>
      {children}
      {analytics}
      {team}
    </>
  )
}
```

---

## Intercepting Routes

Intercept routes for modals and overlays:

```
app/
├── feed/
│   └── page.tsx
├── photo/
│   └── [id]/
│       └── page.tsx
└── @modal/
    └── (..)photo/       # Intercept from same level
        └── [id]/
            └── page.tsx
```

---

## Route Handlers (API Routes)

See `api-routes.md` for detailed API route documentation.

---

**Part of**: {{skill_name}}
**Generated by SkillForge**
