[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rmon"
version = "0.5.0"
requires-python = ">=3.11"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    {name = "Daniel Thom", email = "daniel.thom@nrel.gov"},
]
classifiers=[
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click >= 8.2, < 9",
    "loguru",
    "plotly >= 5.19, < 6",
    "psutil >= 7.1, < 8",
    "pydantic >= 2.1, < 3",
    "python-daemon",
    "rich_click",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
    "types-psutil",
    "types-setuptools",
]

[project.scripts]
rmon = "rmon.cli.rmon:cli"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = [
    "tests",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "_build",
    "build",
    "dist",
    "env",
    "venv",
]

line-length = 99
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    "C901",  # McCabe complexity
    "E4",  # Subset of pycodestyle (E)
    "E7",
    "E9",
    "EM",     # string formatting in an exception message
    "F",  # Pyflakes
    "W",  # pycodestyle warnings
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.mypy]
check_untyped_defs = true
files = [
  "src",
  "tests",
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "daemon.*"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
rmon = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]
