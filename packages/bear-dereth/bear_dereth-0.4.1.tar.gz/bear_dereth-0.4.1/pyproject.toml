[project]
name = "bear-dereth"
description = "A set of common tools for various bear projects."
dynamic = ["version"]
authors = [{name = "chaz", email = "bright.lid5647@fastmail.com"}]
readme = "README.md"
requires-python = ">=3.13"
keywords = []
dependencies = [
    "bear-epoch-time>=1.2.2",
    "distro>=1.9.0",
    "lazy-bear>=0.0.3",
    "pydantic>=2.11.5",
    "pyyaml>=6.0.3",
    "rich>=14.1.0",
    "singleton-base>=1.2.3",
    "tomlkit>=0.13.3",
]

[project.scripts]
bear-dereth = "bear_dereth._internal.cli:main"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[dependency-groups]
maintain = [
    "build>=1.2",
    "git-changelog>=2.5",
    "yore>=0.3.3",
    "griffe>=1.7.3",
    "diskcache>=5.6.3",
]
ci = [
    "ruff>=0.4",
    "pytest>=8.2",
    "pytest-cov>=5.0",
    "pytest-randomly>=3.15",
    "pytest-xdist>=3.6",
    "pyright>=1.1",
    "types-markdown>=3.6",
    "types-pyyaml>=6.0",
    "nox>=2025.5.1",
    "twine>=6.1.0",
]

[tool.uv]
default-groups = ["maintain", "ci"]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "standard"
include = ["src"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"
reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateUsage = true
reportPrivateImportUsage = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src", "tests"]
addopts = "-v -s"
asyncio_mode = "auto"
markers = [
    "visual: marks tests as visual verification tests (deselect with '-m \"not visual\"')"
]

filterwarnings = [
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
    "ignore::ResourceWarning",
    "ignore::UserWarning",
]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"
metadata = false
fallback_version = "0.1.8"

[tool.hatch.build.hooks.custom]
path = "hatch_build.py"
output = "src/bear_dereth/_internal/_version.py"

template = '''
__version__ = "{{ version }}"
__commit_id__ = "{{ commit }}"
__version_tuple__ = ({{ major }}, {{ minor }}, {{ patch }})

'''
