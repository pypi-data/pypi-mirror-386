# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instrument_settings_component_based_menu.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='instrument_settings_component_based_menu.proto',
  package='',
  syntax='proto3',
  serialized_options=_b('\252\002\034ONE.Models.CSharp.Instrument'),
  serialized_pb=_b('\n.instrument_settings_component_based_menu.proto\"&\n$InstrumentSettingsComponentBasedMenuB\x1f\xaa\x02\x1cONE.Models.CSharp.Instrumentb\x06proto3')
)




_INSTRUMENTSETTINGSCOMPONENTBASEDMENU = _descriptor.Descriptor(
  name='InstrumentSettingsComponentBasedMenu',
  full_name='InstrumentSettingsComponentBasedMenu',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=88,
)

DESCRIPTOR.message_types_by_name['InstrumentSettingsComponentBasedMenu'] = _INSTRUMENTSETTINGSCOMPONENTBASEDMENU
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InstrumentSettingsComponentBasedMenu = _reflection.GeneratedProtocolMessageType('InstrumentSettingsComponentBasedMenu', (_message.Message,), {
  'DESCRIPTOR' : _INSTRUMENTSETTINGSCOMPONENTBASEDMENU,
  '__module__' : 'instrument_settings_component_based_menu_pb2'
  # @@protoc_insertion_point(class_scope:InstrumentSettingsComponentBasedMenu)
  })
_sym_db.RegisterMessage(InstrumentSettingsComponentBasedMenu)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
