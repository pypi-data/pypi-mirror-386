[project]
name = "srai"
version = "0.10.1"
description = "A set of python modules for geospatial machine learning and data mining"
authors = [
    { name = "Piotr Gramacki", email = "pgramacki@kraina.ai" },
    { name = "Kacper Leśniara", email = "klesniara@kraina.ai" },
    { name = "Kamil Raczycki", email = "kraczycki@kraina.ai" },
    { name = "Szymon Woźniak", email = "swozniak@kraina.ai" },
]
dependencies = [
    "pandas",
    "geopandas>=0.6",
    "shapely>=2.0.1",
    "h3>=4.0.0b1",
    "numpy>=1.26.0",
    "pyfunctional>=1.0.0",
    "pyarrow>=13.0.0",
    "topojson>=1.6",
    "tqdm>=4.42.0",
    "s2>=0.1.9",
    "typeguard>=3.0.0",
    "requests",
    "h3ronpy>=0.20.1",
    "osmnx>=1.3.0",
    "polars>=0.19.4",
]
requires-python = ">=3.9"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

[project.license]
text = "Apache-2.0"

[project.urls]
Homepage = "https://kraina-ai.github.io/srai"
Repository = "https://github.com/kraina-ai/srai"
Documentation = "https://kraina-ai.github.io/srai"
Changelog = "https://github.com/kraina-ai/srai/blob/main/CHANGELOG.md"

[project.optional-dependencies]
osm = [
    "overpass>=0.7",
    "pillow>=8.0.0",
    "beautifulsoup4",
    "quackosm>=0.11.0",
]
overturemaps = [
    "overturemaestro>=0.5.0",
]
datasets = [
    "datasets>=3,<4",
    "fastdtw>=0.3.4",
]
voronoi = [
    "pymap3d>=3.0.0",
    "haversine>=2.0.0",
    "scipy>=1.10.0",
    "spherical-geometry>=1.3.2",
]
gtfs = [
    "gtfs-kit==6.*",
]
plotting = [
    "folium>=0.14.0",
    "mapclassify>=2.4.0",
    "scikit-learn>=1.2.0",
    "matplotlib>=3.2.0",
    "plotly>=4.6.0",
    "kaleido<=0.2.1,>=0.2.0",
]
torch = [
    "pytorch-lightning>=2.0.0",
    "torch",
    "timm>=0.9.0",
]
all = [
    "srai[osm,overturemaps,voronoi,gtfs,plotting,torch,datasets]",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
dev = [
    "bumpver",
    "types-requests",
]
lint = [
    "pre-commit",
    "mypy",
    "docformatter[tomli]",
    "ruff",
]
test = [
    "pytest>=8.0.0",
    "tox-pdm>=0.7.2",
    "pytest-mock>=3.3.0",
    "requests-mock>=1.12.1",
    "pytest-check>=2.3.1",
    "pytest-parametrization>=2022.2.1",
    "pytest-doctestplus>=1.2.1",
    "six>=1.9.0",
    "pytest-snapshot>=0.9.0",
]
visualization = [
    "matplotlib",
    "lonboard",
    "pydeck",
    "pypalettes",
    "contextily",
    "seaborn",
]
docs = [
    "mkdocs",
    "mkdocs-material[imaging]",
    "mkdocs-mermaid2-plugin",
    "mkdocstrings[python]",
    "mkdocs-jupyter",
    "mkdocs-nav-weight",
    "ipykernel",
    "mkdocs-gen-files",
    "mkdocs-awesome-pages-plugin",
    "mike>=2",
    "scikit-learn>=1.2.0",
    "umap-learn",
    "xgboost",
]
license = [
    "licensecheck==2024.3",
    "pipdeptree",
]

[tool.pdm.scripts]
post_install = "pre-commit install"

[tool.ruff]
line-length = 100
target-version = "py39"
extend-exclude = [
    "old",
]
extend-include = [
    "*.ipynb",
]

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "UP",
    "D",
    "I",
    "B",
    "NPY",
    "YTT",
    "Q",
    "PLE",
    "PLW",
    "PIE",
    "TID",
    "ISC",
    "TCH",
]
ignore = [
    "D212",
    "ISC001",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
strict = true
show_column_numbers = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
ignore_missing_imports = true

[tool.docformatter]
syntax = "google"
black = true
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
tab-width = 4
blank = false
pre-summary-newline = true
close-quotes-on-newline = true
wrap-one-line = true

[tool.bumpver]
current_version = "0.10.1"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "chore(CI/CD): bump version {old_version} -> {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    "^current_version = \"{version}\"$",
    "^version = \"{version}\"$",
]
"srai/__init__.py" = [
    "^__version__ = \"{version}\"$",
]
"CITATION.cff" = [
    "^version: {version}$",
]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
log_cli = true

[tool.licensecheck]
using = "requirements"
zero = true
ignore_licenses = [
    "UNKNOWN",
]
ignore_packages = [
    "srai",
    "scalene",
    "docformatter",
    "gtfs-kit",
    "pymap3d",
    "mkdocs-jupyter",
    "pycountry",
    "referencing",
    "nvidia-cublas-cu11",
    "nvidia-cuda-cupti-cu11",
    "nvidia-cuda-nvrtc-cu11",
    "nvidia-cuda-runtime-cu11",
    "nvidia-cudnn-cu11",
    "nvidia-cufft-cu11",
    "nvidia-curand-cu11",
    "nvidia-cusolver-cu11",
    "nvidia-cusparse-cu11",
    "nvidia-nccl-cu11",
    "nvidia-nvtx-cu11",
    "nvidia-cublas-cu12",
    "nvidia-cuda-cupti-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-cuda-runtime-cu12",
    "nvidia-cudnn-cu12",
    "nvidia-cufft-cu12",
    "nvidia-curand-cu12",
    "nvidia-cusolver-cu12",
    "nvidia-cusparse-cu12",
    "nvidia-nccl-cu12",
    "nvidia-nvtx-cu12",
    "nvidia-nvjitlink-cu12",
    "mkl",
    "hf-xet",
]
