//
// Created by admin on 2017/7/26.
//
#include "svdcmp.hpp"
#include "regress_init_shape.hpp"
#include <cmath>
#include <cstdlib>

using namespace std;

float get_ied(float *shape, int num_landmark)
{
    if(num_landmark == 106)
    {
        float right_eye_x = (shape[74] + shape[104])/2;
        float right_eye_y = (shape[74+num_landmark] + shape[104+num_landmark])/2;
        float left_eye_x = (shape[77] + shape[105])/2;
        float left_eye_y = (shape[77+num_landmark] + shape[105+num_landmark])/2;

        float ied = sqrt((left_eye_x - right_eye_x) * (left_eye_x - right_eye_x) + (left_eye_y - right_eye_y) * (left_eye_y - right_eye_y));
        return ied;
    }
    else
    {
        float right_eye_x = (shape[36] + shape[39])/2;
        float right_eye_y = (shape[36+num_landmark] + shape[39+num_landmark])/2;
        float left_eye_x = (shape[42] + shape[45])/2;
        float left_eye_y = (shape[42+num_landmark] + shape[45+num_landmark])/2;

        float ied = sqrt((left_eye_x - right_eye_x) * (left_eye_x - right_eye_x) + (left_eye_y - right_eye_y) * (left_eye_y - right_eye_y));
        return ied;
    }
}

void find_affine_transform(const float *from_points, const float *to_points, double *mb_matrix)
{
    int i, j;
    const int point_size = 3;
    double P[3][3] = { 0 };
    double Q[2][3] = { 0 };
    double P_adj[3][3] = { 0 };
    double P_pinv[3][3] = { 0 };
    double P_det = 0;
    for (i = 0; i < point_size; ++i)
    {
        P[0][i] = from_points[i * 2];
        P[1][i] = from_points[i * 2 + 1];
        P[2][i] = 1;

        Q[0][i] = to_points[i * 2];
        Q[1][i] = to_points[i * 2 + 1];
    }

    P_adj[0][0] = P[1][1] * P[2][2] - P[1][2] * P[2][1];
    P_adj[0][1] = (P[0][1] * P[2][2] - P[0][2] * P[2][1]) * -1;
    P_adj[0][2] = P[0][1] * P[1][2] - P[0][2] * P[1][1];
    P_adj[1][0] = (P[1][0] * P[2][2] - P[1][2] * P[2][0]) * -1;
    P_adj[1][1] = P[0][0] * P[2][2] - P[0][2] * P[2][0];
    P_adj[1][2] = (P[0][0] * P[1][2] - P[0][2] * P[1][0]) * -1;
    P_adj[2][0] = P[1][0] * P[2][1] - P[1][1] * P[2][0];
    P_adj[2][1] = (P[0][0] * P[2][1] - P[0][1] * P[2][0]) * -1;
    P_adj[2][2] = P[0][0] * P[1][1] - P[0][1] * P[1][0];

    P_det = P[0][0] * P[1][1] * P[2][2] + P[0][1] * P[1][2] * P[2][0] + P[0][2] * P[1][0] * P[2][1] \
		- P[0][2] * P[1][1] * P[2][0] - P[0][0] * P[1][2] * P[2][1] - P[0][1] * P[1][0] * P[2][2];

    for (j = 0; j < 3; ++j)
    {
        for (i = 0; i < 3; ++i)
        {
            P_pinv[j][i] = P_adj[j][i] / P_det;
        }
    }

    mb_matrix[0] = Q[0][0] * P_pinv[0][0] + Q[0][1] * P_pinv[1][0] + Q[0][2] * P_pinv[2][0];
    mb_matrix[1] = Q[0][0] * P_pinv[0][1] + Q[0][1] * P_pinv[1][1] + Q[0][2] * P_pinv[2][1];
    mb_matrix[2] = Q[1][0] * P_pinv[0][0] + Q[1][1] * P_pinv[1][0] + Q[1][2] * P_pinv[2][0];
    mb_matrix[3] = Q[1][0] * P_pinv[0][1] + Q[1][1] * P_pinv[1][1] + Q[1][2] * P_pinv[2][1];
    mb_matrix[4] = Q[0][0] * P_pinv[0][2] + Q[0][1] * P_pinv[1][2] + Q[0][2] * P_pinv[2][2];
    mb_matrix[5] = Q[1][0] * P_pinv[0][2] + Q[1][1] * P_pinv[1][2] + Q[1][2] * P_pinv[2][2];
}

void find_similarity_transform(const float *from_points, const float *to_points, int points_size, float *out_m)
{
    double mean_from[2] = { 0 };
    double mean_to[2] = { 0 };
    double sigma_from = 0;
    double sigma_to = 0;
    double cov[4] = { 0 };
    double s[4] = { 1.0, 0.0, 0.0, 1.0 };
    double r[4] = { 0 };
    double c = 1;
    double temp_r[4] = { 0 };
    double **u, **v;
    double *w;
    double det_cov = 0;
    double det_u = 0;
    double det_v = 0;
    static int i__ = 1;

    for (unsigned long i = 0; i < points_size; ++i)
    {
        mean_from[0] += from_points[i * 2];
        mean_from[1] += from_points[i * 2 + 1];
        mean_to[0] += to_points[i * 2];
        mean_to[1] += to_points[i * 2 + 1];
    }
    mean_from[0] /= (double)points_size;
    mean_from[1] /= (double)points_size;
    mean_to[0] /= (double)points_size;
    mean_to[1] /= (double)points_size;

    for (unsigned long i = 0; i < points_size; ++i)
    {
        double temptx = to_points[i * 2] - mean_to[0];
        double tempty = to_points[i * 2 + 1] - mean_to[1];
        double tempfx = from_points[i * 2] - mean_from[0];
        double tempfy = from_points[i * 2 + 1] - mean_from[1];

        sigma_from += tempfx * tempfx;
        sigma_from += tempfy * tempfy;
        sigma_to += temptx * temptx;
        sigma_to += tempty * tempty;
        cov[0] += temptx * tempfx;
        cov[1] += temptx * tempfy;
        cov[2] += tempty * tempfx;
        cov[3] += tempty * tempfy;
    }

    sigma_from /= (double)points_size;
    sigma_to /= (double)points_size;
    cov[0] /= (double)points_size;
    cov[1] /= (double)points_size;
    cov[2] /= (double)points_size;
    cov[3] /= (double)points_size;

    u = dmatrix(1, 2, 1, 2);
    w = dvector(1, 2);
    v = dmatrix(1, 2, 1, 2);
    u[1][1] = cov[0];
    u[1][2] = cov[1];
    u[2][1] = cov[2];
    u[2][2] = cov[3];

    svdcmp(u, 2, 2, w, v);

    det_cov = cov[0] * cov[3] - cov[1] * cov[2];
    det_u = u[1][1] * u[2][2] - u[1][2] * u[2][1];
    det_v = v[1][1] * v[2][2] - v[1][2] * v[2][1];
    if (det_cov < 0 || (det_cov == 0 && det_u*det_v < 0))
    {
        if (w[2] < w[1])
        {
            s[3] = -1.0;
        }
        else
        {
            s[0] = -1.0;
        }
    }

    temp_r[0] = u[1][1] * s[0];
    temp_r[1] = u[1][2] * s[3];
    temp_r[2] = u[2][1] * s[0];
    temp_r[3] = u[2][2] * s[3];

    r[0] = temp_r[0] * v[1][1] + temp_r[1] * v[1][2];
    r[1] = temp_r[0] * v[2][1] + temp_r[1] * v[2][2];
    r[2] = temp_r[2] * v[1][1] + temp_r[3] * v[1][2];
    r[3] = temp_r[2] * v[2][1] + temp_r[3] * v[2][2];

    if (sigma_from != 0)
    {
        c = 1.0 / sigma_from * (w[1] * s[0] + w[2] * s[3]);
    }

    out_m[0] = (float)(r[0] * c);
    out_m[1] = (float)(r[1] * c);
    out_m[2] = (float)(r[2] * c);
    out_m[3] = (float)(r[3] * c);

    out_m[4] = (float)(mean_to[0] - c * (r[0] * mean_from[0] + r[1] * mean_from[1]));
    out_m[5] = (float)(mean_to[1] - c * (r[2] * mean_from[0] + r[3] * mean_from[1]));

    //out_b = mean_to - c*r*mean_from;
}

void getAlignPoints(const vector<float> &shape, vector<float> &out_points)
{
    int pm = shape.size() / 2;
    out_points.clear();
    out_points.reserve(10);
    if (pm == 68)
    {
        out_points.push_back((shape[36]+shape[39])/2);
        out_points.push_back((shape[42]+shape[45])/2);
        out_points.push_back(shape[30]);
        out_points.push_back(shape[48]);
        out_points.push_back(shape[54]);
        out_points.push_back((shape[36+pm]+shape[39+pm])/2);
        out_points.push_back((shape[42+pm]+shape[45+pm])/2);
        out_points.push_back(shape[30+pm]);
        out_points.push_back(shape[48+pm]);
        out_points.push_back(shape[54+pm]);
    }
    else if (pm == 106)
    {
        out_points.push_back(shape[74]);
        out_points.push_back(shape[77]);
        out_points.push_back(shape[84]);
        out_points.push_back(shape[90]);
        out_points.push_back(shape[46]);
        out_points.push_back(shape[74+pm]);
        out_points.push_back(shape[77+pm]);
        out_points.push_back(shape[84+pm]);
        out_points.push_back(shape[90+pm]);
        out_points.push_back(shape[46+pm]);
    }
}

void getSimilarityPoints(const vector<float> &shape, vector<float> &out_points)
{
    int pm = shape.size() / 2;
    out_points.clear();
    if (pm == 68)
    {
        out_points.reserve(10);
        out_points.push_back((shape[36]+shape[39])/2);
        out_points.push_back((shape[42]+shape[45])/2);
        out_points.push_back(shape[30]);
        out_points.push_back(shape[48]);
        out_points.push_back(shape[54]);
        out_points.push_back((shape[36+pm]+shape[39+pm])/2);
        out_points.push_back((shape[42+pm]+shape[45+pm])/2);
        out_points.push_back(shape[30+pm]);
        out_points.push_back(shape[48+pm]);
        out_points.push_back(shape[54+pm]);
    }
    else if (pm == 106)
    {
        out_points.reserve(8);
        out_points.push_back(shape[74]);
        out_points.push_back(shape[77]);
        out_points.push_back(shape[84]);
        out_points.push_back(shape[90]);
        out_points.push_back(shape[74+pm]);
        out_points.push_back(shape[77+pm]);
        out_points.push_back(shape[84+pm]);
        out_points.push_back(shape[90+pm]);
    }
}

extern const float reflect_matrix_68[10*136];
extern const float reflect_matrix_106[11*212];
static void gemm_neon(const float *lhs, const float *rhs, float *out_mat, int rhs_rows, int rhs_cols);

void getInitShape(float *mean_shape_, const float *align_points_, float *out_shape, int num_points, const int *face_box, ModeSelect mode)
{
    int mean_cols = 2*num_points;
    vector<float> mean_shape, align_points;
    for(int c = 0; c < mean_cols; ++c)
    {
        mean_shape.push_back(mean_shape_[c]);
    }
    for(int al = 0; al < 10; ++al)
    {
        align_points.push_back(align_points_[al]);
    }
    vector<float> init_points;
    getSimilarityPoints(mean_shape, init_points);
    const int num_simi = init_points.size() / 2;
    const int num_reft = align_points.size() / 2;
    vector<float> from(num_simi*2, 0);
    vector<float> to(num_simi*2, 0);

    double affine_img2norm[6] = { 0 };
    double affine_norm2img[6] = { 0 };
    float tform[6] = { 0 };
    float norm_rect[6] = { 0,0, 1,0, 1,1 };
    float img_rect[6] = { (float)face_box[0], (float)face_box[1], (float)face_box[0]+face_box[2], (float)face_box[1], (float)face_box[0]+face_box[2], (float)face_box[1]+face_box[3] };

    find_affine_transform(img_rect, norm_rect, affine_img2norm);

    // normalize input points
//    Mat affine_align(1, align_points.size(), CV_32FC1);
    vector<float> affine_align(2*num_reft+1);
    for (int i = 0; i < num_simi; ++i)
    {
        from[2 * i] = (affine_img2norm[0] * init_points[i] + affine_img2norm[1] * init_points[i + num_simi] + affine_img2norm[4]);
        from[2 * i + 1] = (affine_img2norm[2] * init_points[i] + affine_img2norm[3] * init_points[i + num_simi] + affine_img2norm[5]);
        to[2 * i] = (affine_img2norm[0] * align_points[i] + affine_img2norm[1] * align_points[i + num_reft] + affine_img2norm[4]);
        to[2 * i + 1] = (affine_img2norm[2] * align_points[i] + affine_img2norm[3] * align_points[i + num_reft] + affine_img2norm[5]);
        affine_align[i] = to[2 * i];
        affine_align[i + num_reft] = to[2 * i + 1];
    }
    for (int i = num_simi; i < num_reft; ++i)
    {
        affine_align[i] = (affine_img2norm[0] * align_points[i] + affine_img2norm[1] * align_points[i + num_reft] + affine_img2norm[4]);
        affine_align[i + num_reft] = (affine_img2norm[2] * align_points[i] + affine_img2norm[3] * align_points[i + num_reft] + affine_img2norm[5]);
    }

    if(mode != P68_WITH_5_POINTS)
    {
//        cv::Mat bias = cv::Mat::ones(1, 1, CV_32FC1);
//        cv::hconcat(affine_align, bias, affine_align);
        affine_align[2*num_reft] = 1;
    }

    find_similarity_transform(from.data(), to.data(), num_simi, tform);

    // normalize mean shape
    int pm = mean_cols / 2;
//    Mat mean_shape_norm(1, mean_shape.size(), CV_32FC1);
    vector<float> mean_shape_norm(mean_cols);
    for (int i = 0; i < pm; ++i)
    {
        mean_shape_norm[i] = (affine_img2norm[0] * mean_shape[i] + affine_img2norm[1] * mean_shape[i + pm] + affine_img2norm[4]);
        mean_shape_norm[i + pm] = (affine_img2norm[2] * mean_shape[i] + affine_img2norm[3] * mean_shape[i + pm] + affine_img2norm[5]);
    }

    // fit mean shape to object shape
//    Mat init_shape(1, mean_shape.size(), CV_32FC1);
    vector<float> init_shape(mean_cols);
    for (int i = 0; i < pm; ++i)
    {
        init_shape[i] = tform[0] * mean_shape_norm[i] + tform[1] * mean_shape_norm[i + pm] + tform[4];
        init_shape[i + pm] = tform[2] * mean_shape_norm[i] + tform[3] * mean_shape_norm[i + pm] + tform[5];
    }

    find_affine_transform(norm_rect, img_rect, affine_norm2img);

    // unnormalize shape
    for (int i = 0; i < pm; ++i)
    {
        out_shape[i] = (affine_norm2img[0] * init_shape[i] + affine_norm2img[1] * init_shape[i + pm] + affine_norm2img[4]);
        out_shape[i + pm] = (affine_norm2img[2] * init_shape[i] + affine_norm2img[3] * init_shape[i + pm] + affine_norm2img[5]);
    }

    const float *reflect_matrix;
    int refm_rows, refm_cols;
    if(mode != P68_WITH_5_POINTS)
    {
        reflect_matrix = reflect_matrix_106;
        refm_rows = 11;
        refm_cols = 212;
    }
    else
    {
        reflect_matrix = reflect_matrix_68;
        refm_rows = 10;
        refm_cols = 136;
    }
//    cv::Mat_<float> map_matrix(refm_rows, refm_cols, (float *)reflect_matrix);

//    map_matrix = map_matrix.t();

//    cv::Mat update_step = affine_align * map_matrix;
    float* update_step = (float*)(calloc(size_t(refm_cols), sizeof(float)));
    gemm_neon(affine_align.data(), reflect_matrix, update_step, refm_cols, refm_rows);

    auto ied = get_ied(out_shape, pm);
    for(int cnt = 0; cnt < refm_cols; ++cnt)
    {
        update_step[cnt] *= ied;
        out_shape[cnt] -= update_step[cnt];
    }
    free(update_step);

}


static void gemm_neon(const float *lhs, const float *rhs, float *out_mat, int rhs_rows, int rhs_cols)
{
    for (int j = 0; j < rhs_rows; ++j)
    {
        float *data1 = (float*)lhs;
        float *data2 = (float*)(rhs + j*rhs_cols);
        // float32x4_t production = vdupq_n_f32(0.f);
        int i = 0;
        // for (i = 0; i < rhs_cols-3; i+=4)
        // {
        //     float32x4_t lfactor = vld1q_f32(data1);
        //     float32x4_t rfactor = vld1q_f32(data2);
        //     data1 += 4; data2 += 4;
        //     production = vmlaq_f32(production, lfactor, rfactor);
        // }
        float sum = 0.0f;
        for (;  i< rhs_cols; ++i)
        {
            sum += (*data1)*(*data2);
            data1++; data2++;
        }
        // float temp[4];
        // vst1q_f32(temp, production);
        // sum += (temp[0]+temp[1]+temp[2]+temp[3]);

        out_mat[j] = sum;
    }
}

const float reflect_matrix_106[11*212] = { 0.217956,-0.0770050,-0.131435,-0.596789,1.57917,0.0764040,0.251220,-0.358909,-0.297059,0.161287,-0.001573,\
0.178256,-0.0597750,-0.150268,-0.539675,1.58719,0.114026,0.216032,-0.253218,-0.362064,0.104570,-0.039947,\
0.248339,-0.148792,-0.178816,-0.479495,1.572508,0.0752860,0.262291,-0.211051,-0.371816,0.0670440,-0.028715,\
0.339796,-0.257971,-0.210313,-0.411019,1.536987,0.0443120,0.301139,-0.172328,-0.375735,0.0292370,-0.005984,\
0.419042,-0.354301,-0.244635,-0.341165,1.495866,0.0171290,0.335425,-0.136412,-0.380088,-0.00500900,0.014288,\
0.464813,-0.417372,-0.280608,-0.273881,1.457107,-0.0139950,0.369710,-0.0967560,-0.391046,-0.0344120,0.021863,\
0.461233,-0.431367,-0.316612,-0.217337,1.424776,-0.0408890,0.394578,-0.0566130,-0.401786,-0.0612860,0.012057,\
0.420367,-0.406889,-0.339792,-0.169409,1.375007,-0.0616880,0.409886,-0.0127090,-0.398669,-0.101713,-0.008781,\
0.352531,-0.352840,-0.344170,-0.129179,1.28205,-0.0780140,0.413825,0.0394170,-0.384917,-0.153463,-0.027886,\
0.279405,-0.289311,-0.331928,-0.0910880,1.133493,-0.0860020,0.393082,0.0850140,-0.359761,-0.174296,-0.046793,\
0.216315,-0.233537,-0.311492,-0.0548460,0.959458,-0.0884460,0.358909,0.128743,-0.327481,-0.190857,-0.054614,\
0.161004,-0.183451,-0.275188,-0.0186030,0.758662,-0.0880900,0.311041,0.149402,-0.295821,-0.168975,-0.052283,\
0.113458,-0.140169,-0.219344,0.0306050,0.525876,-0.0960990,0.267472,0.151107,-0.264119,-0.117834,-0.047193,\
0.0838630,-0.114529,-0.137407,0.101368,0.255910,-0.117784,0.236807,0.131304,-0.228596,-0.0497420,-0.034091,\
0.0561730,-0.0899030,-0.0369280,0.166889,-0.0195320,-0.145376,0.215018,0.105963,-0.188483,0.0157310,-0.018349,\
0.0323350,-0.0674620,0.0656290,0.187947,-0.233247,-0.153717,0.183388,0.0824580,-0.137369,0.0364580,0.014195,\
-0.0201120,-0.0137900,0.154611,0.153448,-0.347998,-0.156430,0.155273,0.0887000,-0.0916400,0.00157000,0.038004,\
-0.0712400,0.0358990,0.180470,0.0554980,-0.225174,-0.176307,0.144770,0.137331,-0.0872250,-0.0334040,0.007435,\
-0.0932940,0.0590950,0.151903,-0.0564430,-0.00367000,-0.202174,0.130747,0.193123,-0.114881,-0.0124730,-0.04758,\
-0.115781,0.0845170,0.0823110,-0.162515,0.276498,-0.221814,0.100896,0.237372,-0.143657,0.0530920,-0.142074,\
-0.139483,0.112035,0.0103880,-0.248544,0.549202,-0.249844,0.0763830,0.272972,-0.164132,0.121192,-0.247854,\
-0.180583,0.157266,-0.0384230,-0.306809,0.783359,-0.291911,0.0667400,0.304231,-0.161913,0.172133,-0.373815,\
-0.227660,0.209477,-0.0721080,-0.342389,0.983159,-0.337921,0.0653430,0.332284,-0.136634,0.193651,-0.506129,\
-0.280876,0.269947,-0.103641,-0.359922,1.154215,-0.373144,0.0638670,0.361188,-0.0886020,0.176731,-0.640999,\
-0.341562,0.340218,-0.134835,-0.367324,1.297842,-0.395992,0.0578390,0.381094,-0.0374470,0.155530,-0.770362,\
-0.394034,0.406425,-0.170358,-0.359123,1.387172,-0.394952,0.0441660,0.392311,0.0172900,0.103323,-0.862222,\
-0.417755,0.446575,-0.212549,-0.331439,1.432508,-0.382333,0.0256500,0.391236,0.0645580,0.0625050,-0.926126,\
-0.402964,0.449394,-0.265087,-0.291529,1.461436,-0.360246,0.00135500,0.378400,0.106695,0.0352340,-0.967079,\
-0.339805,0.403611,-0.328526,-0.251918,1.496866,-0.329749,-0.0263730,0.366527,0.146951,0.00547100,-0.985923,\
-0.243403,0.324392,-0.395026,-0.214377,1.535022,-0.298632,-0.0505540,0.361440,0.183507,-0.0290980,-0.990033,\
-0.134131,0.232951,-0.460112,-0.179534,1.567474,-0.262875,-0.0785050,0.356672,0.223089,-0.0671790,-0.985403,\
-0.0451300,0.162964,-0.517726,-0.148027,1.579647,-0.219722,-0.114230,0.346740,0.265332,-0.105040,-0.977521,\
-0.0619880,0.202078,-0.577054,-0.128816,1.572466,-0.258718,-0.0723720,0.287884,0.366637,-0.161953,-0.993061,\
-0.556159,0.748687,0.323395,-0.120310,-0.0458050,0.218727,0.0296620,-0.517845,-0.128593,0.218254,-0.050911,\
-0.460312,0.674162,0.316257,-0.00129700,-0.289485,0.286170,-0.0583480,-0.499790,0.0123820,0.0671630,-0.015126,\
-0.357273,0.582411,0.344491,0.109913,-0.545871,0.304983,-0.121990,-0.489721,0.119948,0.00580000,0.018247,\
-0.283336,0.512543,0.402191,0.202802,-0.801324,0.264513,-0.139709,-0.477983,0.183599,0.0240700,0.037817,\
-0.213793,0.437156,0.458028,0.310199,-1.028506,0.205925,-0.134273,-0.436231,0.213001,0.0508200,0.030935,\
0.439546,-0.216228,0.305182,0.462679,-1.02844,0.126226,-0.196697,-0.202166,0.428836,-0.0528010,0.003590,\
0.516197,-0.287153,0.198964,0.406333,-0.801191,0.129398,-0.252993,-0.171179,0.468168,-0.0261210,-0.07234,\
0.586759,-0.362000,0.105748,0.345537,-0.543843,0.112016,-0.294092,-0.106215,0.477977,-0.00779300,-0.152059,\
0.678729,-0.465507,-0.00597900,0.313135,-0.284963,0.0477380,-0.275151,0.00423700,0.484299,-0.0692020,-0.222205,\
0.751481,-0.559860,-0.123535,0.316037,-0.0397500,-0.0421290,-0.206796,0.147459,0.498097,-0.219583,-0.295096,\
0.105227,0.102004,0.300302,0.308110,-0.919412,0.0693730,-0.0683300,-0.265990,0.269281,-0.000503000,0.048695,\
0.0965200,0.0952490,0.441502,0.449041,-1.256298,-0.0100990,0.0113510,-0.253793,0.256560,-0.000492000,0.084091,\
0.0880080,0.0884060,0.581474,0.588479,-1.587623,-0.0887880,0.0901600,-0.240008,0.241974,-0.000488000,0.118385,\
0.0793050,0.0814010,0.718867,0.725491,-1.909015,-0.165292,0.166817,-0.228955,0.230218,-0.000477000,0.150235,\
0.113095,0.00487300,0.318048,0.594341,-1.152019,-0.144487,0.195520,-0.136300,-0.00375800,0.0453320,0.099942,\
0.0616800,0.0632480,0.452691,0.575981,-1.348513,-0.163622,0.180145,-0.182943,0.0604150,0.0914480,0.112179,\
0.0592890,0.0624180,0.557780,0.562911,-1.453902,-0.184677,0.185315,-0.138054,0.138721,-0.000209000,0.104321,\
0.0611990,0.0637330,0.572617,0.458516,-1.349565,-0.178455,0.163518,-0.0628190,0.186570,-0.0915780,0.079525,\
0.00437800,0.113635,0.592816,0.324565,-1.154388,-0.196341,0.146385,0.00230700,0.138628,-0.0455060,0.018656,\
-0.538797,0.701263,0.346035,-0.0452960,-0.190674,0.0491020,0.137241,-0.378407,-0.163740,0.204663,-0.071405,\
-0.443972,0.619232,0.314018,0.0429030,-0.323899,0.0758380,0.0797990,-0.364560,-0.0784540,0.174069,-0.081791,\
-0.375002,0.553117,0.339389,0.0745860,-0.462887,0.0724990,0.0480590,-0.326816,-0.0192560,0.0484200,0.003868,\
-0.328157,0.496346,0.324895,0.142549,-0.516772,0.00317900,0.0744400,-0.286868,-0.00809400,0.0966060,-0.047274,\
-0.411412,0.573882,0.385596,0.0680530,-0.467369,-0.0114510,0.122568,-0.309660,-0.0705080,0.108496,-0.01372,\
-0.493007,0.652894,0.373610,0.0298520,-0.334590,-0.0120170,0.155822,-0.352393,-0.141782,0.250587,-0.09588,\
0.498858,-0.330794,0.141578,0.327586,-0.517292,-0.0826020,0.00522900,0.0167860,0.280444,-0.0970370,-0.074396,\
0.556317,-0.378120,0.0835870,0.351561,-0.471980,-0.0644420,-0.0556140,0.0246490,0.323354,-0.0489030,-0.140979,\
0.622026,-0.447556,0.0319320,0.303129,-0.313343,-0.0815360,-0.0738310,0.0938010,0.349933,-0.174511,-0.121143,\
0.704035,-0.542289,-0.0478210,0.341344,-0.186435,-0.146237,-0.0400380,0.177648,0.365486,-0.204913,-0.200403,\
0.655181,-0.496097,0.0209350,0.363309,-0.325110,-0.157499,0.0136620,0.154943,0.339736,-0.250735,-0.128306,\
0.575881,-0.413381,0.0767550,0.395685,-0.475404,-0.138318,0.0273180,0.0761340,0.305443,-0.108703,-0.14217,\
-0.503160,0.701375,0.389395,-0.00436400,-0.338088,0.207935,-0.00402800,-0.497419,-0.0477950,0.181183,-0.033276,\
-0.396743,0.604169,0.416693,0.105672,-0.581441,0.201091,-0.0318460,-0.470818,0.0467920,0.102006,0.002826,\
-0.328882,0.541855,0.471931,0.183983,-0.819044,0.174297,-0.0578190,-0.462889,0.107511,0.117686,0.026438,\
-0.229455,0.446460,0.478722,0.305084,-1.029927,0.144568,-0.0786280,-0.452559,0.194917,0.115405,0.020675,\
0.449137,-0.232379,0.296277,0.478655,-1.025973,0.0728020,-0.137410,-0.181363,0.441899,-0.117068,0.008991,\
0.544221,-0.331440,0.182667,0.476752,-0.820345,0.0447130,-0.160464,-0.0946610,0.452171,-0.119343,-0.078822,\
0.607096,-0.400057,0.104241,0.417629,-0.580559,0.0203900,-0.189436,-0.0342510,0.458774,-0.103613,-0.15098,\
0.704587,-0.506979,-0.00560600,0.386812,-0.335371,-0.00732100,-0.196610,0.0615680,0.483155,-0.182666,-0.209903,\
-0.400583,0.581405,0.324901,0.0591420,-0.408396,0.0916030,0.0483900,-0.352079,-0.0356910,0.100314,-0.029749,\
-0.454807,0.614533,0.394431,0.0494040,-0.417086,-0.0213670,0.146176,-0.331037,-0.111791,0.193261,-0.054518,\
-0.622833,0.559756,0.327082,-0.00462000,-0.132902,-0.0904650,0.220145,-0.329676,-0.0714460,0.119712,-0.043931,\
0.584358,-0.403890,0.0583310,0.325670,-0.407849,-0.0588870,-0.0807300,0.0471930,0.341373,-0.100803,-0.127502,\
0.616929,-0.457612,0.0493440,0.394290,-0.416413,-0.155584,0.0308900,0.121823,0.321822,-0.193416,-0.132976,\
0.563630,-0.627217,-0.00675100,0.322012,-0.129034,-0.225026,0.0945250,0.0791420,0.320615,-0.118225,-0.078665,\
0.0771580,0.112445,0.229373,0.330145,-0.766088,0.0732270,-0.0290440,-0.220497,0.134528,0.00780400,0.030471,\
0.116482,0.0730230,0.323699,0.233287,-0.764887,0.0295270,-0.0725220,-0.131066,0.221005,-0.00874000,-0.015996,\
0.123714,0.0261980,0.297096,0.529107,-1.082097,-0.0713230,0.112782,-0.181718,0.0490590,0.0911640,0.062051,\
0.0275470,0.121964,0.515074,0.293613,-1.074124,-0.104710,0.0650340,-0.0446100,0.180738,-0.0919870,0.045492,\
0.150576,-0.0257130,0.221588,0.548970,-0.991950,-0.0955020,0.180740,-0.135161,-0.0285470,0.00379400,0.126456,\
-0.0235890,0.148557,0.550805,0.230947,-0.997079,-0.182251,0.0985540,0.0242160,0.140406,-0.00395500,-0.033906,\
0.375666,-0.311464,-1.02397,0.749937,0.106635,0.224951,-0.0516100,-0.0944790,-0.333025,0.111247,0.071975,\
0.249079,-0.166554,-0.420610,0.635223,-0.492028,0.142653,-0.0199820,-0.0871520,-0.0770800,-0.0863860,0.125858,\
0.0743220,0.0197460,0.139284,0.417841,-0.907935,0.0992540,-0.0493540,-0.138026,0.113156,-0.0854120,0.145304,\
0.0456640,0.0459490,0.299352,0.305662,-0.957868,0.0810420,-0.0801830,-0.163455,0.163862,0.0,0.129779,\
0.0196030,0.0747400,0.416866,0.151198,-0.912891,0.0492210,-0.0976810,-0.118422,0.144140,0.0854440,0.106612,\
-0.164566,0.247286,0.632582,-0.411652,-0.495648,0.0211150,-0.142409,0.0725000,0.0932010,0.0872880,0.065568,\
-0.307728,0.371895,0.748815,-1.019179,0.103652,0.0506850,-0.222880,0.329553,0.0969180,-0.108870,0.031333,\
-0.219752,0.271687,0.748169,-0.697047,-0.249035,0.120711,-0.228415,0.117594,0.257682,-0.140659,0.071154,\
-0.103428,0.148793,0.648218,-0.244614,-0.624008,0.150208,-0.193767,-0.125328,0.374225,-0.146797,0.116731,\
0.0210050,0.0219770,0.301742,0.306611,-0.832372,0.147985,-0.147023,-0.333438,0.333915,0.000714000,0.088971,\
0.148975,-0.103480,-0.241087,0.661504,-0.630927,0.183491,-0.138393,-0.372176,0.123395,0.148338,0.051346,\
0.273282,-0.221294,-0.697822,0.757608,-0.251792,0.221112,-0.111599,-0.251797,-0.121778,0.142418,0.068652,\
0.313067,-0.246734,-0.827973,0.741624,-0.0965980,0.174208,-0.0570660,-0.134342,-0.239189,0.198795,0.003141,\
0.144912,-0.0683560,-0.177968,0.596613,-0.699429,0.122952,-0.0546500,-0.222007,0.0208950,0.0600500,0.098781,\
0.0393430,0.0393820,0.296404,0.302883,-0.911455,0.0728160,-0.0719860,-0.174991,0.175835,0.0,0.115409,\
-0.0674590,0.144014,0.588417,-0.171978,-0.699127,0.0566100,-0.123190,-0.0196180,0.224518,-0.0593600,0.101589,\
-0.246034,0.311740,0.722082,-0.839558,-0.0839350,0.0703880,-0.186211,0.243040,0.131447,-0.196464,0.12032,\
-0.0971910,0.160290,0.618255,-0.247558,-0.628475,0.133087,-0.201790,-0.0875780,0.310405,-0.0585540,0.091332,\
0.0318270,0.0322260,0.276060,0.281442,-0.841061,0.148676,-0.147540,-0.266508,0.266792,0.000475000,0.10864,\
0.160724,-0.0978110,-0.254848,0.621217,-0.625905,0.198853,-0.128012,-0.302127,0.0801570,0.0600220,0.101887,\
-0.537732,0.489483,0.333734,0.0749630,-0.241517,-0.0208920,0.156274,-0.385194,-0.0167530,0.124207,-0.024025,\
0.492289,-0.540842,0.0747810,0.333046,-0.240456,-0.163567,0.0271190,0.0239280,0.377701,-0.123182,-0.094368,\
-0.155808,0.001882,0.733233,-0.334779,-0.0597480,-0.594823,0.553402,0.140507,-0.388675,0.820047,-0.217739,\
-0.195640,0.047516,0.766058,-0.330836,-0.165740,-0.579813,0.525441,0.106696,-0.331000,0.801906,-0.202823,\
-0.244221,0.100620,0.800694,-0.324578,-0.275332,-0.551460,0.479476,0.0906480,-0.285657,0.784790,-0.194863,\
-0.321649,0.182765,0.843040,-0.338684,-0.370696,-0.526774,0.435367,0.0793280,-0.254171,0.777870,-0.192992,\
-0.407225,0.273602,0.892579,-0.356155,-0.464492,-0.503613,0.390005,0.0653880,-0.223349,0.780009,-0.19763,\
-0.492391,0.365060,0.943781,-0.378224,-0.554120,-0.484029,0.348388,0.0522910,-0.197039,0.783443,-0.199933,\
-0.580256,0.459993,1.00265,-0.401624,-0.645775,-0.458364,0.300576,0.0293660,-0.162779,0.787261,-0.20257,\
-0.652866,0.540720,1.062197,-0.426093,-0.727883,-0.436562,0.259667,0.00776200,-0.132648,0.790377,-0.201397,\
-0.709424,0.606380,1.109358,-0.455499,-0.780772,-0.414796,0.218302,-0.0169490,-0.105998,0.800828,-0.200585,\
-0.766629,0.672818,1.150943,-0.490855,-0.796587,-0.386940,0.182352,-0.0483960,-0.0830060,0.798767,-0.200651,\
-0.817123,0.732969,1.180762,-0.527740,-0.783315,-0.356610,0.152155,-0.0786270,-0.0576550,0.773314,-0.198816,\
-0.872153,0.798493,1.204822,-0.570955,-0.742141,-0.325757,0.128788,-0.103159,-0.0308150,0.730287,-0.205204,\
-0.935357,0.872405,1.210168,-0.632097,-0.658309,-0.281056,0.101855,-0.107486,-0.00243000,0.644560,-0.21299,\
-1.007443,0.956200,1.186812,-0.715050,-0.522944,-0.224317,0.0699560,-0.0782550,0.0265090,0.503720,-0.223371,\
-1.094823,1.056795,1.143071,-0.812109,-0.352071,-0.160247,0.0327610,-0.0341750,0.0541710,0.346343,-0.244978,\
-1.15980,1.138894,1.078165,-0.916423,-0.169555,-0.0931000,-0.0150880,0.0106850,0.0709170,0.216029,-0.259808,\
-1.185964,1.186465,0.994823,-1.006923,0.00528500,-0.0335060,-0.0688750,0.0422070,0.0630260,0.171665,-0.280046,\
-1.136952,1.15885,0.903603,-1.090696,0.180677,0.0211430,-0.128912,0.0506500,0.0318240,0.216059,-0.282412,\
-1.052518,1.091668,0.800915,-1.152825,0.361298,0.0661700,-0.192819,0.0354150,-0.0132070,0.346262,-0.300017,\
-0.950425,1.002839,0.705710,-1.194616,0.530531,0.101032,-0.254315,0.00854500,-0.0573550,0.503393,-0.323089,\
-0.866004,0.930236,0.626494,-1.214765,0.662958,0.130751,-0.308789,-0.0219340,-0.0843790,0.644007,-0.355992,\
-0.791060,0.866065,0.569543,-1.205656,0.743352,0.154590,-0.350349,-0.0518880,-0.0782500,0.729371,-0.389055,\
-0.725111,0.810673,0.531172,-1.176743,0.780311,0.174158,-0.377701,-0.0808490,-0.0513410,0.772013,-0.417958,\
-0.664488,0.759772,0.499724,-1.141717,0.788893,0.199400,-0.403171,-0.107681,-0.0195990,0.797093,-0.438351,\
-0.598319,0.702850,0.469023,-1.095058,0.768788,0.230273,-0.426005,-0.131495,0.0128340,0.798836,-0.44081,\
-0.533574,0.647266,0.443258,-1.043438,0.712160,0.265756,-0.442327,-0.157476,0.0365730,0.788114,-0.417615,\
-0.453728,0.575567,0.421434,-0.980021,0.627081,0.300499,-0.458136,-0.185413,0.0557230,0.784640,-0.381501,\
-0.360197,0.489187,0.401248,-0.917537,0.532245,0.344721,-0.480544,-0.220847,0.0788790,0.780578,-0.330879,\
-0.269378,0.404708,0.381192,-0.862708,0.439910,0.383157,-0.496671,-0.247302,0.0920850,0.777200,-0.276141,\
-0.179633,0.320331,0.365058,-0.810797,0.344361,0.425694,-0.516807,-0.277243,0.105103,0.774874,-0.216235,\
-0.0981590,0.243667,0.352284,-0.765250,0.246882,0.467296,-0.538798,-0.308698,0.116656,0.781532,-0.157256,\
-0.0456890,0.195787,0.360083,-0.726866,0.134726,0.509535,-0.563423,-0.353377,0.132054,0.798517,-0.102575,\
-0.00174400,0.157709,0.365194,-0.691054,0.0267160,0.534698,-0.575674,-0.410621,0.165550,0.816626,-0.055841,\
0.0704080,-0.199967,0.716150,-0.149833,-0.297068,-0.672225,0.790465,0.376244,-0.209131,-0.0310430,0.008949,\
0.125157,-0.237183,0.546558,-0.149568,-0.117106,-0.547816,0.740810,0.422901,-0.143869,-0.294448,0.025161,\
0.209922,-0.298107,0.381724,-0.143586,0.0125330,-0.387602,0.635567,0.457167,-0.0428670,-0.575932,0.070451,\
0.296548,-0.357768,0.239393,-0.110381,0.0610560,-0.229720,0.502857,0.463411,0.0828430,-0.794954,0.101682,\
0.360227,-0.395623,0.142114,-0.0511530,0.0374360,-0.0967010,0.366713,0.445507,0.195879,-0.883915,0.099076,\
0.392998,-0.356953,0.0633710,-0.125088,-0.0508120,0.361121,-0.0915520,0.182241,0.460004,-0.884590,0.182071,\
0.357243,-0.295716,0.107365,-0.231855,-0.0631900,0.510681,-0.237259,0.0720680,0.477976,-0.796628,0.225563,\
0.299517,-0.210911,0.138053,-0.373173,-0.0141250,0.645677,-0.396514,-0.0535640,0.473303,-0.578128,0.22743,\
0.241038,-0.128491,0.142479,-0.535834,0.115393,0.755498,-0.560434,-0.158213,0.444798,-0.297175,0.185817,\
0.204000,-0.0740190,0.136594,-0.710343,0.300761,0.816587,-0.696515,-0.228760,0.403753,-0.0346870,0.144308,\
0.171710,-0.171681,0.236923,-0.233953,-0.00140200,0.0488540,0.0454360,0.222877,0.230878,-0.374704,-0.004998,\
0.162163,-0.162149,0.129296,-0.122928,-0.00287600,0.0956440,0.0960140,0.369900,0.378580,-0.908804,-0.002368,\
0.170336,-0.170325,0.0229920,-0.0155610,-0.00329600,0.145402,0.147694,0.521321,0.529650,-1.462178,0.014689,\
0.184606,-0.184619,-0.0817760,0.0893320,-0.00328000,0.194180,0.197087,0.676587,0.685209,-2.00236,0.021433,\
0.0230670,-0.0543800,-0.0166680,0.159210,-0.0783060,0.0622670,0.157957,0.320206,0.392947,-1.066175,-0.044207,\
0.0209110,-0.0359390,-0.0451470,0.0974380,-0.0138300,0.0809140,0.170105,0.433077,0.479378,-1.311378,-0.06442,\
0,0,-0.0209390,0.0357190,-0.00668000,0.124745,0.135921,0.489029,0.496309,-1.413858,-0.050667,\
0.0363410,-0.0209790,-0.0812290,0.062082,-0.000904,0.160292,0.0907970,0.468998,0.443811,-1.311502,-0.050532,\
0.0552200,-0.0237360,-0.149194,0.0267670,0.0693240,0.151309,0.0691450,0.387776,0.325158,-1.066002,-0.016395,\
0.0151070,-0.121420,0.591659,-0.123338,-0.208033,-0.598323,0.619762,0.364146,-0.133057,-0.0152450,-0.090228,\
0.0280810,-0.120616,0.556058,-0.161223,-0.152081,-0.516328,0.555969,0.377814,-0.0818020,-0.123897,-0.076792,\
0.104352,-0.163619,0.436283,-0.156948,-0.109436,-0.360687,0.424948,0.351117,0.0292340,-0.270383,-0.043581,\
0.160044,-0.205525,0.337784,-0.104975,-0.106131,-0.262126,0.333764,0.323887,0.0857090,-0.325971,-0.032129,\
0.145201,-0.206638,0.336603,-0.0525320,-0.118924,-0.362189,0.419434,0.349079,0.0454190,-0.274950,-0.07318,\
0.0856940,-0.178255,0.452606,-0.0470490,-0.167140,-0.504492,0.542188,0.362864,-0.0539700,-0.132374,-0.101538,\
0.205755,-0.160380,0.102055,-0.335566,0.106513,0.338312,-0.265951,0.0814120,0.329285,-0.326598,0.048249,\
0.165551,-0.106263,0.153289,-0.432524,0.109441,0.428537,-0.362929,0.0269430,0.355247,-0.271234,0.065781,\
0.123390,-0.0307130,0.156337,-0.551355,0.152247,0.561405,-0.519918,-0.0852480,0.383236,-0.125110,0.072327,\
0.124210,-0.0177660,0.115835,-0.587549,0.209667,0.628601,-0.605419,-0.138241,0.371959,-0.0168750,0.062895,\
0.179814,-0.0871740,0.0449140,-0.445116,0.164752,0.542594,-0.503740,-0.0567150,0.367169,-0.133843,0.04191,\
0.207259,-0.145890,0.0513520,-0.331038,0.117054,0.419880,-0.361760,0.0424910,0.353100,-0.276011,0.028509,\
0.117957,-0.225606,0.536644,-0.113031,-0.174560,-0.545880,0.713903,0.438635,-0.117631,-0.309180,0.006958,\
0.200405,-0.286745,0.393235,-0.0959000,-0.0777250,-0.414022,0.618058,0.462733,-0.0251210,-0.525534,0.034689,\
0.270059,-0.331148,0.278917,-0.0768540,-0.0387100,-0.267131,0.490775,0.448283,0.0891950,-0.699396,0.066601,\
0.353746,-0.389518,0.209604,-0.0987510,-0.0149530,-0.106173,0.376969,0.463723,0.206727,-0.998306,0.163043,\
0.386712,-0.351340,0.0815520,-0.222294,0.0282730,0.390006,-0.119567,0.210085,0.461372,-0.999035,0.229861,\
0.331474,-0.270084,0.0768270,-0.269453,0.0344760,0.496805,-0.272677,0.0775660,0.463443,-0.700883,0.162881,\
0.288496,-0.201787,0.0929290,-0.384185,0.0750080,0.626904,-0.421598,-0.0366890,0.478587,-0.527442,0.162593,\
0.228674,-0.120615,0.106354,-0.528032,0.173812,0.727274,-0.557462,-0.130019,0.457181,-0.311518,0.142564,\
0.0634120,-0.139372,0.492587,-0.158536,-0.120932,-0.444096,0.494686,0.369732,-0.0253420,-0.187172,-0.078147,\
0.126696,-0.204067,0.381900,-0.0445340,-0.137537,-0.428541,0.478564,0.360778,0.00378900,-0.233352,-0.077245,\
0.108617,-0.185327,0.471617,-0.138616,-0.124117,-0.552858,0.426760,0.402336,-0.0409120,-0.103146,-0.070879,\
0.142327,-0.0661450,0.158173,-0.483920,0.117322,0.496024,-0.443587,-0.0294310,0.376292,-0.188220,0.055056,\
0.205203,-0.127933,0.0407310,-0.377655,0.137423,0.480439,-0.429409,0.00193600,0.363771,-0.234602,0.044469,\
0.186909,-0.110534,0.132689,-0.467614,0.125214,0.430818,-0.555581,-0.0425820,0.406392,-0.104614,0.060189,\
0.133316,-0.156088,0.232832,-0.180542,-0.00307800,-0.0215190,0.125310,0.260035,0.207409,-0.454773,-0.004706,\
0.156020,-0.133547,0.175750,-0.235513,0.00630500,0.124814,-0.0208000,0.212509,0.255788,-0.455036,0.023221,\
0.103015,-0.134652,-0.0151280,0.108747,-0.0350440,0.0477970,0.182070,0.364079,0.354648,-1.053064,-0.009175,\
0.135221,-0.103542,-0.103397,0.0224080,0.0294730,0.176916,0.0534160,0.352704,0.367289,-1.053324,0.013194,\
0.0585190,-0.0992710,-0.0517630,0.176477,-0.0592220,0.0147260,0.200732,0.332902,0.340165,-1.005149,-0.035615,\
0.0997260,-0.0588010,-0.167710,0.0621390,0.0509220,0.194759,0.0209190,0.335160,0.338747,-1.005356,-0.017051,\
-0.174500,0.107350,-0.151522,0.471190,-0.135390,0.272835,-0.142061,-0.695534,0.349625,0.0924980,-0.062691,\
-0.0653430,0.0233440,-0.199699,0.403648,-0.0870740,0.183185,0.0262490,-0.186073,0.363135,-0.595370,-0.03127,\
-0.0287570,0.0132680,-0.193129,0.271191,-0.0305810,0.127922,0.122247,0.182319,0.344570,-1.011784,-0.019633,\
-0.0267460,0.0267430,-0.211782,0.220222,-0.00389000,0.116529,0.134398,0.268991,0.260500,-1.031575,0.008488,\
-0.0124640,0.0279310,-0.263612,0.201449,0.0233730,0.105051,0.145668,0.353405,0.173757,-1.011917,0.008136,\
-0.0238340,0.0659050,-0.401661,0.202781,0.0849480,0.0192790,0.190684,0.369256,-0.191571,-0.595489,0.041618,\
-0.108570,0.176159,-0.475030,0.150264,0.137845,-0.136187,0.267284,0.350684,-0.694573,0.0923540,0.053637,\
-0.379308,0.429064,0.00686500,-0.317235,0.168399,-0.0228960,0.142631,0.348137,-0.348589,-0.126733,-0.030064,\
-0.517844,0.546524,0.349972,-0.548940,0.114041,0.0273470,0.104384,0.317295,-0.0504570,-0.356068,-0.07192,\
-0.575578,0.576130,0.557220,-0.554680,-0.00180100,0.0795620,0.0615190,0.180529,0.201138,-0.476877,-0.099605,\
-0.545449,0.517930,0.555009,-0.345817,-0.119888,0.116971,0.0148860,-0.0684600,0.334490,-0.356140,-0.130137,\
-0.427218,0.378445,0.323414,-0.00324700,-0.173565,0.147207,-0.0270710,-0.356890,0.355690,-0.126674,-0.124292,\
-0.166057,0.111272,-0.124479,0.366665,-0.0961300,0.212764,-0.0639160,-0.410361,0.302746,-0.190233,-0.049125,\
-0.0699080,0.0433160,-0.185779,0.325558,-0.0602230,0.138579,0.0611650,-0.0282050,0.299255,-0.703993,-0.014064,\
-0.0354890,0.0354280,-0.218264,0.221296,-0.00122500,0.102376,0.109310,0.213531,0.209779,-0.882737,0.015266,\
-0.0434790,0.0699980,-0.325760,0.186504,0.0603300,0.0570120,0.142910,0.304153,-0.0332840,-0.704156,0.039007,\
-0.113106,0.168037,-0.373403,0.119600,0.101647,-0.0576110,0.206444,0.305985,-0.412397,-0.190258,0.043684,\
-0.526790,0.554803,0.346177,-0.533975,0.102546,0.0474950,0.104934,0.311702,-0.0411590,-0.369022,-0.080416,\
-0.589591,0.590164,0.571571,-0.568547,-0.00199500,0.0889510,0.0745390,0.188927,0.206817,-0.481258,-0.117016,\
-0.554449,0.527491,0.536357,-0.345629,-0.104789,0.117676,0.0349440,-0.0547900,0.325362,-0.368704,-0.139004,\
0.139811,-0.215015,0.437790,-0.111418,-0.121063,-0.505493,0.396375,0.375654,0.00995900,-0.143396,-0.067767,\
0.217649,-0.142607,0.108269,-0.431753,0.120152,0.401096,-0.508350,0.00531200,0.383098,-0.144561,0.059589 };

const float reflect_matrix_68[10 * 136] = { -0.92199099,-0.15938400,2.6185479,-0.13158900,-0.73389298,0.34421900,0.52086902,-0.18266401,-0.69799697,-0.021360001,\
-0.63206500,-0.33778900,2.4612210,-0.19799601,-0.63480097,0.30638501,0.46087500,-0.14351401,-0.59011197,-0.021055000,\
-0.40463299,-0.49507099,2.3608260,-0.30313399,-0.51016200,0.32300100,0.44648001,-0.15302999,-0.53272098,-0.018500000,\
-0.31947199,-0.53406602,2.2798610,-0.40498099,-0.41251001,0.38018799,0.42383301,-0.16974400,-0.51669598,-0.027689001,\
-0.28564799,-0.43690100,1.9855911,-0.43828800,-0.31976801,0.44553500,0.36352101,-0.21875601,-0.46547401,-0.027357999,\
-0.16775200,-0.30577001,1.5062170,-0.42033499,-0.24794100,0.48836499,0.17473499,-0.23868699,-0.36436400,0.019763000,\
0.021630000,-0.21908900,0.92313898,-0.36155701,-0.13558599,0.45116299,-0.065780997,-0.15905800,-0.27797100,0.094059996,\
0.12562200,-0.11421900,0.35421699,-0.22254200,-0.019392001,0.38429099,-0.24592900,-0.068415001,-0.26909301,0.19522400,\
0.086439997,-0.011883000,0.15795000,-0.094527997,-0.065082997,0.33260101,-0.37356499,0.0054850001,-0.26913401,0.25267899,\
-0.030789999,0.041157000,0.36183399,-0.031110000,-0.23196299,0.26140299,-0.46095601,0.084399000,-0.25940400,0.24207500,\
-0.16058300,-0.068861999,0.93418199,-0.096699998,-0.41015100,0.090152003,-0.52134597,0.16565500,-0.23382300,0.22600900,\
-0.29179001,-0.29447901,1.5509731,-0.16278800,-0.52384698,-0.17669600,-0.53419203,0.23071600,-0.21854100,0.27285400,\
-0.46222201,-0.47961399,2.1020970,-0.20040500,-0.61503398,-0.38736200,-0.47161400,0.19310400,-0.22069600,0.34383300,\
-0.58465499,-0.58536899,2.4768031,-0.28230101,-0.64745897,-0.47899500,-0.39331001,0.13654099,-0.22117899,0.35604000,\
-0.57613498,-0.69435698,2.6182721,-0.38407701,-0.58735198,-0.50844997,-0.33301601,0.12719101,-0.22810400,0.34994799,\
-0.43078500,-0.92510301,2.7382431,-0.50782698,-0.49979600,-0.52914399,-0.32104900,0.13776200,-0.23354600,0.40251300,\
-0.28720999,-1.2008990,2.9263740,-0.61266899,-0.45451900,-0.59399199,-0.35449001,0.19159999,-0.23480999,0.48337400,\
-1.2537230,0.57149100,0.88979799,0.27625901,-0.25182301,0.29270801,0.64288902,0.0071680001,-0.79419601,-0.11885100,\
-0.99030501,0.51136202,0.47353300,0.22829400,-0.079976998,0.31114301,0.51649898,-0.11614000,-0.66916299,-0.018718001,\
-0.73527402,0.43446901,0.11535300,0.23331501,0.033493999,0.25163901,0.40493000,-0.13258000,-0.54123902,0.039976999,\
-0.53102601,0.33878499,-0.19269200,0.28091800,0.11731200,0.13237999,0.30015701,-0.042776000,-0.44739401,0.090186998,\
-0.30324399,0.19072500,-0.46295100,0.31641799,0.22762799,0.0042140000,0.21333501,0.038472999,-0.36919701,0.15870000,\
0.21810000,-0.33153400,-0.48554701,0.21032500,0.36080399,-0.16644600,-0.016888000,-0.040222999,-0.17074899,0.41144401,\
0.34764400,-0.56544602,-0.20208900,0.10582500,0.29583499,-0.26166901,-0.15740700,0.044245999,-0.11398600,0.47317100,\
0.43740299,-0.78921098,0.12486600,0.034998000,0.21139599,-0.37388301,-0.26332101,0.13543400,-0.082558997,0.53299600,\
0.51929897,-1.0650229,0.49877301,-0.056352001,0.16758700,-0.49510601,-0.31414300,0.12392300,-0.047848001,0.63854998,\
0.59127301,-1.3770710,0.95041800,-0.19347200,0.16227700,-0.63475400,-0.29752600,0.018832000,0.020275000,0.73197699,\
0.035664000,0.0050760000,-0.58435702,0.22832100,0.26489899,-0.066276997,0.066834003,-0.0028830001,-0.14276300,0.17517300,\
0.13583700,0.11692500,-0.91617697,0.28973001,0.32250899,-0.047189999,0.051491000,-0.0035629999,-0.091650002,0.12156000,\
0.24280301,0.23625199,-1.2899380,0.35878801,0.39156500,-0.024453999,0.029298000,-0.0049259998,-0.042245999,0.075479001,\
0.35238200,0.35843301,-1.6608050,0.41900000,0.45579001,0.015570000,-0.0097139999,-0.0065870001,0.0010360000,0.037296001,\
0.16030200,0.12386000,-0.71998203,0.053796999,0.40215600,-0.0092500001,0.13377100,0.090172999,-0.089451000,-0.11217800,\
0.17252500,0.15517201,-0.87589800,0.16541600,0.36504799,-0.036784999,0.085560001,0.060982998,-0.056332000,-0.039664999,\
0.17017600,0.18428400,-0.95952201,0.27426600,0.29115000,-0.029561000,0.042153001,-0.0035880001,-0.026054000,0.041327000,\
0.12427000,0.16902199,-0.85033101,0.33348399,0.17279300,-0.067795999,0.049957000,-0.070931002,0.052923001,0.065087996,\
0.10147000,0.13569701,-0.68542898,0.36654899,0.048163000,-0.10620900,0.025764000,-0.10494600,0.10803500,0.093310997,\
-1.0824760,0.55965900,0.56585598,0.26542699,-0.18607800,0.18982400,0.54075801,-0.021391001,-0.57577997,-0.12941900,\
-0.94672698,0.44450501,0.39087701,0.28452501,-0.11657500,0.13121600,0.44718000,-0.028382000,-0.53017497,-0.0097780004,\
-0.77225900,0.29225400,0.31900901,0.22371000,-0.012099000,0.071663000,0.40220499,-0.048117001,-0.48134899,0.052788999,\
-0.59244198,0.15356000,0.29191199,0.23912600,-0.011673000,-0.030399000,0.34554100,-0.011191000,-0.38510901,0.070317999,\
-0.79420298,0.29526299,0.32691500,0.25138900,-0.033746999,-0.034480002,0.46927801,0.0093909996,-0.40147001,-0.045919001,\
-0.99079400,0.47292599,0.40460601,0.31420699,-0.14261299,0.023436001,0.53317100,0.021280000,-0.45642799,-0.11891600,\
0.16895400,-0.62017697,0.30445999,-0.0041250000,0.20310900,-0.32396701,0.020491000,0.013652000,-0.10303800,0.35656801,\
0.29580799,-0.81086600,0.34067100,-0.0084670000,0.20169900,-0.39294699,-0.086868003,0.051980998,-0.073665999,0.47752699,\
0.44836301,-0.98065799,0.40579501,-0.098564997,0.26217100,-0.44875100,-0.13147900,0.039399002,-0.027535001,0.52396101,\
0.55401802,-1.1417990,0.59258699,-0.14119600,0.22047301,-0.54509997,-0.18031500,0.034469001,0.053693000,0.55279398,\
0.46687999,-1.0204450,0.41893899,-0.12016700,0.29377899,-0.53926700,-0.038476001,-0.0051480001,0.076389000,0.45251900,\
0.29279801,-0.82004398,0.34375200,-0.030076999,0.23584700,-0.47813001,0.020375000,-0.0026420001,0.020671001,0.39899001,\
0.26879501,-0.050641000,0.42221901,-1.0960120,0.49500200,0.45178500,0.063323997,0.0046140002,-0.022142000,-0.51727301,\
0.36974701,0.019410999,-0.22610100,-0.63666302,0.43962401,0.29663399,-0.049290001,-0.019345000,0.075119004,-0.30808601,\
0.31027299,0.14725800,-0.60981202,-0.18976000,0.27688199,0.18238799,-0.12111500,0.017445000,0.076576002,-0.14265899,\
0.26969501,0.23174700,-0.67851502,0.046909999,0.083858997,0.15918100,-0.14839700,-0.0042869998,0.11587700,-0.084105000,\
0.16526300,0.30091700,-0.59451002,0.24228901,-0.18439101,0.13784800,-0.20538101,-0.038741998,0.18658000,-0.022396000,\
0.017402999,0.36282700,-0.19544201,0.40694499,-0.63647002,0.062449001,-0.31646699,0.00068200001,0.31772000,-0.029155999,\
-0.071621999,0.25356001,0.44400701,0.50229299,-1.1129791,-0.052598000,-0.46341199,-0.0049049999,0.47957700,0.031256001,\
-0.032602999,0.28485301,-0.031826001,0.42135501,-0.66400498,0.18051200,-0.44615901,-0.027338000,0.11257900,0.20568700,\
0.073186003,0.22367200,-0.38414800,0.24283101,-0.20471700,0.27732801,-0.35790199,-0.043338999,-0.092073001,0.25296199,\
0.17618801,0.14614800,-0.46614301,0.030773999,0.080104999,0.30324301,-0.30269101,0.00070500001,-0.17741100,0.19556899,\
0.22537300,0.055424999,-0.39624599,-0.21847001,0.28590500,0.32569599,-0.26726201,0.037126999,-0.22668400,0.12960000,\
0.29080299,-0.041914001,-0.058470000,-0.67360002,0.46425301,0.42003700,-0.16035999,0.019280000,-0.19320700,-0.10130600,\
0.30480501,-0.071878999,0.34709701,-1.0544209,0.51381302,0.42256600,0.018246001,0.040856000,-0.040759001,-0.47223499,\
0.28090900,0.13839400,-0.53166401,-0.21402299,0.25872701,0.15953100,-0.093838997,0.025402000,0.095895998,-0.17507701,\
0.24445701,0.21337000,-0.60512298,0.026287001,0.070932999,0.13568801,-0.12663899,-0.0067380001,0.13305800,-0.10047000,\
0.15318400,0.27648899,-0.51617801,0.21692400,-0.20047100,0.10802200,-0.18305500,-0.046645999,0.22332700,-0.049224999,\
-0.087352999,0.28135300,0.37931100,0.50695097,-1.0724580,-0.0042800000,-0.43865901,-0.040201001,0.43828899,0.051355001,\
0.093621001,0.22403100,-0.44992700,0.26371101,-0.18661800,0.27934799,-0.35899100,-0.047479998,-0.088155001,0.26206300,\
0.19508700,0.15452699,-0.53110498,0.051833998,0.093313999,0.31545699,-0.30583099,-0.00082000002,-0.17950000,0.20264500,\
0.23428901,0.069931999,-0.46036801,-0.19912000,0.30141500,0.33733401,-0.26627600,0.036293000,-0.22943200,0.13109501,\
-0.29851800,-0.10552200,0.31277701,0.77603698,-0.71709400,-0.67829198,-0.015595000,1.9106240,-0.26007500,-0.53074503,\
-0.23274900,-0.056141999,0.019964000,0.74447203,-0.59805501,-0.60097897,-0.11075800,1.7848670,-0.24058001,-0.42532301,\
-0.30665401,0.061110999,-0.23248801,0.75957501,-0.50207502,-0.51161897,-0.16715799,1.6775891,-0.28557199,-0.32564601,\
-0.40163100,0.19317500,-0.43900800,0.81468201,-0.45294800,-0.44448599,-0.21149801,1.6104060,-0.34105599,-0.24884000,\
-0.52907801,0.30430901,-0.51118797,0.86483598,-0.43736801,-0.41440001,-0.20952301,1.4881110,-0.37896901,-0.17495701,\
-0.75430697,0.48268700,-0.44379601,0.90641999,-0.47948599,-0.34274101,-0.15194400,1.2773700,-0.42861599,-0.12606800,\
-1.0413390,0.73237199,-0.27772400,0.94738001,-0.59934402,-0.21584301,-0.051017001,0.95442802,-0.45276400,-0.098531999,\
-1.2398050,0.95815599,-0.044659998,0.93996298,-0.79010600,-0.075859003,0.00088800001,0.59602100,-0.37352300,-0.10440000,\
-1.2660410,1.0980600,0.12492400,0.87410998,-0.95559800,0.026260000,-0.056387000,0.49502301,-0.28209400,-0.19175300,\
-1.1676280,1.0834030,0.31583199,0.74356902,-1.0580651,0.065448999,-0.11668200,0.58569503,-0.21354800,-0.31867701,\
-0.96652102,0.81842399,0.61664802,0.58002198,-1.0987810,-0.026632000,-0.23286000,0.92646497,-0.22685800,-0.39134601,\
-0.73233700,0.47143200,0.85246301,0.45353299,-1.0828800,-0.16887200,-0.34796199,1.2410890,-0.24498300,-0.38116401,\
-0.56462699,0.20185000,0.96786398,0.39660099,-1.0453089,-0.25375900,-0.41123801,1.4632961,-0.29239300,-0.33684701,\
-0.42855000,0.087171003,0.88449001,0.38543099,-0.98413998,-0.24146500,-0.43580800,1.5897959,-0.33551401,-0.32496500,\
-0.26728001,0.028176000,0.62332797,0.42711800,-0.88476902,-0.19100100,-0.48113501,1.6725420,-0.39116099,-0.27681100,\
-0.14128201,0.024528001,0.30333599,0.52228802,-0.82402301,-0.13195400,-0.56909001,1.7854570,-0.46235299,-0.20930301,\
-0.087405004,0.12406200,-0.047035001,0.65013301,-0.79835498,-0.042287000,-0.63740897,1.9287950,-0.54681802,-0.20196700,\
-0.18338700,-0.48539200,-0.032736000,0.87779999,-0.23069701,-0.97711200,0.52170098,0.62159097,0.12941000,-0.017911000,\
-0.18758100,-0.42185700,0.024948001,0.73476702,-0.17415699,-0.79188901,0.50136799,0.29215699,0.14107600,0.058788002,\
-0.091794997,-0.39997301,0.11501200,0.52669102,-0.14416701,-0.55827999,0.41507301,-0.057197001,0.19262400,0.14495900,\
0.00065800000,-0.33083501,0.11266100,0.37847599,-0.14381200,-0.34762701,0.29462001,-0.28578299,0.22960500,0.20054901,\
0.066179000,-0.22514901,0.040871002,0.32647300,-0.19387200,-0.19063200,0.13416401,-0.37889799,0.23265100,0.25799501,\
0.27452499,-0.034134001,-0.087718002,0.20056500,-0.31900200,0.18657000,-0.22812200,-0.38286901,0.20140000,0.28343999,\
0.37004900,0.014396000,-0.14691100,0.13894901,-0.36010000,0.34944299,-0.39906600,-0.29009300,0.15955999,0.27815700,\
0.40587300,0.098393999,-0.12826701,0.13341901,-0.51192099,0.45660499,-0.59477800,-0.067024998,0.11014400,0.23321100,\
0.38617399,0.18682900,-0.016992001,0.16578500,-0.73829001,0.52019203,-0.81285900,0.28159800,0.031029001,0.16120000,\
0.41401100,0.16845800,0.072922997,0.21278900,-0.90611398,0.53146499,-0.97037202,0.60997498,-0.043088999,0.13235500,\
0.16277100,-0.12726501,-0.021206001,0.17214601,-0.16277801,-0.071199000,-0.12615700,-0.21196000,0.17100000,0.21216600,\
0.10483600,-0.076696999,-0.018051000,0.11388200,-0.10800200,0.089538999,0.041405998,-0.69915998,0.25411901,0.29431701,\
0.048641000,-0.022094000,-0.012909000,0.051008001,-0.052554999,0.25177500,0.21025200,-1.2047410,0.34687001,0.37500101,\
-0.020718001,0.038897000,-0.0052200002,0.0046029999,-0.011100000,0.40678000,0.36652800,-1.6780540,0.42856300,0.45466101,\
-0.085588001,-0.043655001,-0.069293998,0.11742500,0.081023000,0.048339002,0.16408201,-0.58787102,0.027100001,0.31254601,\
-0.14510100,0.061011001,0.0036289999,0.089446999,-0.015589000,0.14202900,0.17332600,-0.76115102,0.11603800,0.28166100,\
-0.15630201,0.13557900,0.0059830002,0.093558997,-0.097057998,0.19311599,0.18588200,-0.89363903,0.21729800,0.25452799,\
-0.087728001,0.12905900,0.011234000,0.0054480000,-0.079599999,0.17829800,0.13417600,-0.75772798,0.24199000,0.15594999,\
0.015156000,0.092603996,0.074219003,-0.083636999,-0.11027800,0.16193201,0.041246001,-0.58662999,0.26532400,0.070334002,\
-0.092294000,-0.49038500,0.042736001,0.59925199,-0.069144003,-0.93389601,0.31747699,0.57531500,0.094269000,0.018409999,\
-0.043368999,-0.43963501,0.026177000,0.57337600,-0.13086700,-0.85415900,0.22151300,0.44181100,0.17135599,0.057765000,\
-0.0077570002,-0.39489701,0.046659000,0.51766503,-0.17820300,-0.70598102,0.10931900,0.36664701,0.15359700,0.11060700,\
0.13335800,-0.39646301,0.017801000,0.38965201,-0.14722399,-0.55280501,0.025169000,0.32012999,0.14561699,0.11567700,\
0.14192900,-0.50228399,-0.0034010001,0.35165399,0.017370000,-0.67225599,0.13277200,0.34283400,0.13804100,0.090129003,\
0.093207002,-0.55044001,0.0068160002,0.40207601,0.054164000,-0.80889398,0.24622200,0.40386501,0.15187100,0.043556999,\
0.38770401,-0.14523700,-0.016635999,0.15776800,-0.38099900,0.016522000,-0.53466100,0.30830199,0.088894002,0.17511800,\
0.38481799,-0.0093210004,-0.027352000,0.17077100,-0.52724200,0.12245000,-0.71406400,0.36029199,0.097721003,0.16805400,\
0.41718799,0.027915001,-4.7000001e-05,0.11954600,-0.58276898,0.22547600,-0.85884899,0.43598700,0.048604000,0.18372500,\
0.46498400,0.065591998,-0.0097949998,0.056340002,-0.59907198,0.30356100,-0.92175502,0.56397402,0.0098829996,0.11551200,\
0.54877299,-0.091932997,-0.016415000,-0.042950001,-0.39436999,0.24698199,-0.80497497,0.40003499,0.038601998,0.15986501,\
0.51147801,-0.15047000,-0.011605000,-0.0055049998,-0.33530799,0.13419899,-0.67610401,0.33741501,0.081670001,0.15269400,\
-0.46448001,0.0038830000,7.2000003e-05,-0.036738999,0.48577699,0.15253600,0.072295003,0.44581601,-0.92172599,0.25581801,\
-0.30562001,0.047233999,-0.021899000,-0.087750003,0.36588299,0.18214799,0.18379000,-0.23548400,-0.40657201,0.22421500,\
-0.28422600,0.19014500,-0.0096720001,-0.082826003,0.17535301,0.23009101,0.22750500,-0.57642800,-0.086594999,0.13352001,\
-0.24471700,0.25686100,-0.0046740002,-0.13763800,0.11845000,0.23511900,0.24385899,-0.60659099,0.034437001,0.018585000,\
-0.19497401,0.29220399,0.014359000,-0.20000499,0.062555999,0.21164700,0.24411300,-0.56826901,0.18628500,-0.14099900,\
-0.073293000,0.30303299,0.041147001,-0.38385499,0.083734997,0.15600000,0.20489700,-0.22085600,0.26216900,-0.44942701,\
-0.027850000,0.45645899,0.024320999,-0.49840701,0.030997001,0.057615999,0.17832901,0.44316700,0.27470601,-0.94739401,\
-0.32082701,0.61655498,0.060230002,0.064175002,-0.42561001,0.12444800,0.089373998,0.10932800,0.22956900,-0.53373402,\
-0.52133602,0.65462297,0.035781000,0.36026901,-0.53537601,0.16453300,0.096314996,-0.12570301,0.090980001,-0.21041700,\
-0.60015303,0.60444099,-0.0020850000,0.47219700,-0.47864199,0.16395000,0.10914100,-0.17385900,-0.075975001,-0.0091310004,\
-0.64714199,0.51775402,-0.031126000,0.52498800,-0.37223101,0.14214601,0.10898800,-0.13204700,-0.23558800,0.12919700,\
-0.62504399,0.30064699,-0.049259000,0.42978799,-0.070399001,0.11168700,0.098619998,0.087696999,-0.55182898,0.27568099,\
-0.42923200,0.046282999,-0.0029269999,-0.0015000000,0.38267201,0.18272400,0.066063002,0.29798400,-0.79541099,0.25455701,\
-0.27842900,0.17852101,-0.028007001,-0.12402600,0.25817600,0.17766801,0.19919400,-0.36925101,-0.18040000,0.074635997,\
-0.22568800,0.24023700,-0.012353000,-0.16798100,0.17124000,0.18201999,0.20737900,-0.42670000,-0.027239000,-0.033534002,\
-0.17133100,0.29374301,0.011724000,-0.26127201,0.12729099,0.17677000,0.20412099,-0.35930300,0.11008600,-0.22492000,\
-0.073995002,0.42521200,0.024782000,-0.40193701,0.0025170001,0.058499001,0.20200901,0.29823700,0.26485801,-0.81115299,\
-0.53296000,0.65499699,0.063340001,0.39023900,-0.59678000,0.15590200,0.075948998,-0.13079900,0.11669300,-0.19221000,\
-0.60418701,0.60154402,0.0035389999,0.51047403,-0.53155100,0.14798699,0.10026300,-0.18888800,-0.042408001,0.0098810000,\
-0.65952998,0.52739501,-0.047431000,0.57876301,-0.42270300,0.11901900,0.10206800,-0.13501801,-0.20407000,0.14099000 };

