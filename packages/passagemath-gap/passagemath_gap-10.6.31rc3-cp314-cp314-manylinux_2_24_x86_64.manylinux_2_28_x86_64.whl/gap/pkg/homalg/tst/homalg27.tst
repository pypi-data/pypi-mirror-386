# homalg, single 27
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("homalg27.tst");

# doc/../gap/HomalgFunctor.gd:96-111
gap> zz := HomalgRingOfIntegers( );
Z
gap> LeftDualizingFunctor( zz, "ZZ_Hom" );
<The functor ZZ_Hom for f.p. modules and their maps over computable rings>
gap> Functor_ZZ_Hom_for_fp_modules; ## got automatically defined
<The functor ZZ_Hom for f.p. modules and their maps over computable rings>
gap> ZZ_Hom; ## got automatically defined
<Operation "ZZ_Hom">
gap> Genesis( Functor_ZZ_Hom_for_fp_modules );
[ "InsertObjectInMultiFunctor",
  <The functor Hom for f.p. modules and their maps over computable rings>, 2,
  <The free left module of rank 1 on a free generator> ]
gap> 1 * zz;
<The free left module of rank 1 on a free generator>

#
gap> STOP_TEST("homalg27.tst", 1);
