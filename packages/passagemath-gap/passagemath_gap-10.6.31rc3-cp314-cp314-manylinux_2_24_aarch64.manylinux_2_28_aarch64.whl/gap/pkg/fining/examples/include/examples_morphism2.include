gap&gt; mat1 := IdentityMat(4,GF(16));
[ [ Z(2)^0, 0*Z(2), 0*Z(2), 0*Z(2) ], [ 0*Z(2), Z(2)^0, 0*Z(2), 0*Z(2) ], 
  [ 0*Z(2), 0*Z(2), Z(2)^0, 0*Z(2) ], [ 0*Z(2), 0*Z(2), 0*Z(2), Z(2)^0 ] ]
gap&gt; form1 := HermitianFormByMatrix(mat1,GF(16));
&lt; hermitian form &gt;
gap&gt; ps1 := PolarSpace(form1);
&lt;polar space in ProjectiveSpace(3,GF(2^4)): x_1^5+x_2^5+x_3^5+x_4^5=0 &gt;
gap&gt; mat2 := [[0,1,0,0],[1,0,0,0],[0,0,0,1],[0,0,1,0]]*Z(16)^0;
[ [ 0*Z(2), Z(2)^0, 0*Z(2), 0*Z(2) ], [ Z(2)^0, 0*Z(2), 0*Z(2), 0*Z(2) ], 
  [ 0*Z(2), 0*Z(2), 0*Z(2), Z(2)^0 ], [ 0*Z(2), 0*Z(2), Z(2)^0, 0*Z(2) ] ]
gap&gt; form2 := HermitianFormByMatrix(mat2,GF(16));
&lt; hermitian form &gt;
gap&gt; ps2 := PolarSpace(form2);
&lt;polar space in ProjectiveSpace(
3,GF(2^4)): x_1^4*x_2+x_1*x_2^4+x_3^4*x_4+x_3*x_4^4=0 &gt;
gap&gt; CollineationGroup(ps1);
#I  Computing collineation group of canonical polar space...
&lt;projective collineation group of size 4073472000 with 3 generators&gt;
gap&gt; map := IsomorphismPolarSpaces(ps1,ps2);
&lt;geometry morphism from &lt;Elements of H(3, 
4^2): x_1^5+x_2^5+x_3^5+x_4^5=0&gt; to &lt;Elements of H(3, 
4^2): x_1^4*x_2+x_1*x_2^4+x_3^4*x_4+x_3*x_4^4=0&gt;&gt;
gap&gt; phi := Intertwiner(map);
MappingByFunction( &lt;projective collineation group of size 4073472000 with 
3 generators&gt;, &lt;projective collineation group of size 4073472000 with 
3 generators&gt;, function( y ) ... end, function( x ) ... end )
gap&gt; g := Random(CollineationGroup(ps1));
&lt; a collineation: &lt;cmat 4x4 over GF(2,4)&gt;, F^4&gt;
gap&gt; h := g^phi;
&lt; a collineation: &lt;cmat 4x4 over GF(2,4)&gt;, F^4&gt;
gap&gt; h in CollineationGroup(ps2);
#I  Computing collineation group of canonical polar space...
true
gap&gt; h := Random(CollineationGroup(ps2));
&lt; a collineation: &lt;cmat 4x4 over GF(2,4)&gt;, F^2&gt;
gap&gt; g := PreImageElm(phi,h);
&lt; a collineation: &lt;cmat 4x4 over GF(2,4)&gt;, F^2&gt;
gap&gt; g in CollineationGroup(ps1);
true
