# homalg, single 10
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("homalg10.tst");

# doc/../gap/HomalgComplex.gi:420-463
gap> zz := HomalgRingOfIntegers( );
Z
gap> mat := HomalgMatrix( "[ 0, 1,   0, 0 ]", 2, 2, zz );
<A 2 x 2 matrix over an internal ring>
gap> phi := HomalgMap( mat );
<A homomorphism of left modules>
gap> C := HomalgComplex( phi );
<A non-zero acyclic complex containing a single morphism of left modules at de\
grees [ 0 .. 1 ]>
gap> Add( C, mat );
gap> C;
<A sequence containing 2 morphisms of left modules at degrees [ 0 .. 2 ]>
gap> Display( C );
-------------------------
at homology degree: 2
Z^(1 x 2)
-------------------------
[ [  0,  1 ],
  [  0,  0 ] ]

the map is currently represented by the above 2 x 2 matrix
------------v------------
at homology degree: 1
Z^(1 x 2)
-------------------------
[ [  0,  1 ],
  [  0,  0 ] ]

the map is currently represented by the above 2 x 2 matrix
------------v------------
at homology degree: 0
Z^(1 x 2)
-------------------------
gap> IsComplex( C );
true
gap> IsAcyclic( C );
true
gap> IsExactSequence( C );
false
gap> C;
<A non-zero acyclic complex containing 2 morphisms of left modules at degrees
[ 0 .. 2 ]>

#
gap> STOP_TEST("homalg10.tst", 1);
