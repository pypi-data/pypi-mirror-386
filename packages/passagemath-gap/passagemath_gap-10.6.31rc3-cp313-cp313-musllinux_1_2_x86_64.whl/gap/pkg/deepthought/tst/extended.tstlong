gap> testpackage := Filename( DirectoriesPackageLibrary( "DeepThought", "tst" ),
>                             "testpackage.g" );;
gap> Read(testpackage);;

# example group 14: 
gap> coll := Collector(ExamplesOfSomePcpGroups(14));; 
gap> Test_DTP_functions(coll, true, 10, 10); 
true

# example group 15
gap> coll :=  Collector(ExamplesOfSomePcpGroups(15));;
gap> Test_DTP_pkg_consistency(coll, 50);
true

# example group 16
gap> coll :=  Collector(ExamplesOfSomePcpGroups(16));;
gap> Test_DTP_pkg_consistency(coll, 2);
true

# heisenberg 50
gap> coll := Collector(HeisenbergPcpGroup(50));;
gap> Test_DTP_functions(coll, true, 10, 10);
true
gap> Test_DTP_functions(coll, false, 10, 10);
true

# unitriangular 10
gap> coll :=  Collector(UnitriangularPcpGroup(10, 0));;
gap> Test_DTP_functions(coll, true, 10, 10);
true
gap> Test_DTP_functions(coll, false, 10, 10); 
true

# Burde-Grunewald group
gap> coll := Collector(BurdeGrunewaldPcpGroup(9, 7));;
gap> Test_DTP_functions(coll, true, 10, 10);
true
gap> Test_DTP_functions(coll, false, 10, 10);
true
gap> Test_DTP_pkg_consistency(coll, 50); 
true
