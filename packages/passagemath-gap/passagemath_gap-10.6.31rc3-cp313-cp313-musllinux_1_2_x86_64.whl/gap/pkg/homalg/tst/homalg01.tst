# homalg, single 1
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("homalg01.tst");

# doc/../examples/Saturate.g:2-39
gap> zz := HomalgRingOfIntegers( );
Z
gap> Display( zz );
<An internal ring>
gap> m := LeftSubmodule( "2", zz );
<A principal (left) ideal given by a cyclic generator>
gap> Display( m );
[ [  2 ] ]

A (left) ideal generated by the entry of the above matrix
gap> J := LeftSubmodule( "3", zz );
<A principal (left) ideal given by a cyclic generator>
gap> Display( J );
[ [  3 ] ]

A (left) ideal generated by the entry of the above matrix
gap> I := Intersect( J, m^3 );
<A principal (left) ideal given by a cyclic generator>
gap> Display( I );
[ [  24 ] ]

A (left) ideal generated by the entry of the above matrix
gap> Im := SubobjectQuotient( I, m );
<A principal (left) ideal of rank 1 on a free generator>
gap> Display( Im );
[ [  12 ] ]

A (left) ideal generated by the entry of the above matrix
gap> I_m := Saturate( I, m );
<A principal (left) ideal of rank 1 on a free generator>
gap> Display( I_m );
[ [  3 ] ]

A (left) ideal generated by the entry of the above matrix
gap> I_m = J;
true

#
gap> STOP_TEST("homalg01.tst", 1);
