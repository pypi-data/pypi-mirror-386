# homalg, single 3
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("homalg03.tst");

# doc/../examples/doc/HomalgElement_in.g:2-25
gap> zz := HomalgRingOfIntegers( );
Z
gap> M := 2 * zz;
<A free left module of rank 2 on free generators>
gap> a := HomalgModuleElement( "[ 6, 0 ]", M );
( 6, 0 )
gap> N := Subobject( HomalgMap( "[ 2, 0 ]", 1 * zz, M ) );
<A free left submodule given by a cyclic generator>
gap> K := Subobject( HomalgMap( "[ 4, 0 ]", 1 * zz, M ) );
<A free left submodule given by a cyclic generator>
gap> a in M;
true
gap> a in N;
true
gap> a in UnderlyingObject( N );
true
gap> a in K;
false
gap> a in UnderlyingObject( K );
false
gap> a in 3 * zz;
false 

#
gap> STOP_TEST("homalg03.tst", 1);
