gap&gt; pg1 := ProjectiveSpace(2,81);
ProjectiveSpace(2, 81)
gap&gt; f2 := GF(9);
GF(3^2)
gap&gt; em := NaturalEmbeddingByFieldReduction(pg1,f2);
&lt;geometry morphism from &lt;All elements of ProjectiveSpace(2, 
81)&gt; to &lt;All elements of ProjectiveSpace(5, 9)&gt;&gt;
gap&gt; f2 := GF(3);
GF(3)
gap&gt; em := NaturalEmbeddingByFieldReduction(pg1,f2);
&lt;geometry morphism from &lt;All elements of ProjectiveSpace(2, 
81)&gt; to &lt;All elements of ProjectiveSpace(11, 3)&gt;&gt;
gap&gt; pg2 := ProjectiveSpace(11,3);
ProjectiveSpace(11, 3)
gap&gt; em := NaturalEmbeddingByFieldReduction(pg1,pg2);
&lt;geometry morphism from &lt;All elements of ProjectiveSpace(2, 
81)&gt; to &lt;All elements of ProjectiveSpace(11, 3)&gt;&gt;
gap&gt; pg1 := PG(1,9);
ProjectiveSpace(1, 9)
gap&gt; em := NaturalEmbeddingByFieldReduction(pg1,GF(3));
&lt;geometry morphism from &lt;All elements of ProjectiveSpace(1, 
9)&gt; to &lt;All elements of ProjectiveSpace(3, 3)&gt;&gt;
gap&gt; i := Intertwiner(em);
MappingByFunction( The FinInG projectivity group PGL(2,9), &lt;projective colline
ation group of size 720 with 
2 generators&gt;, function( m ) ... end, function( m ) ... end )
gap&gt; spread := List(Points(pg1),x-&gt;x^em);
[ &lt;a line in ProjectiveSpace(3, 3)&gt;, &lt;a line in ProjectiveSpace(3, 3)&gt;, 
  &lt;a line in ProjectiveSpace(3, 3)&gt;, &lt;a line in ProjectiveSpace(3, 3)&gt;, 
  &lt;a line in ProjectiveSpace(3, 3)&gt;, &lt;a line in ProjectiveSpace(3, 3)&gt;, 
  &lt;a line in ProjectiveSpace(3, 3)&gt;, &lt;a line in ProjectiveSpace(3, 3)&gt;, 
  &lt;a line in ProjectiveSpace(3, 3)&gt;, &lt;a line in ProjectiveSpace(3, 3)&gt; ]
gap&gt; stab := Stabilizer(CollineationGroup(PG(3,3)),Set(spread),OnSets);
&lt;projective collineation group of size 5760 with 3 generators&gt;
gap&gt; hom := HomographyGroup(pg1);
The FinInG projectivity group PGL(2,9)
gap&gt; gens := GeneratorsOfGroup(hom);;
gap&gt; group := Group(List(gens,x-&gt;x^i));
&lt;projective collineation group with 2 generators&gt;
gap&gt; Order(group);
2880
gap&gt; IsSubgroup(stab,group);
true
