gap&gt; form := BilinearFormByMatrix( IdentityMat(3,GF(3)), GF(3) );
&lt; bilinear form &gt;
gap&gt; ps := PolarSpace(form);
&lt;polar space in ProjectiveSpace(2,GF(3)): x_1^2+x_2^2+x_3^2=0 &gt;
gap&gt; pq := ParabolicQuadric(2,3);
standard Q(2, 3)
gap&gt; iso := IsomorphismPolarSpaces(ps, pq);
#I  Computing nice monomorphism...
&lt;geometry morphism from &lt;Elements of &lt;polar space in ProjectiveSpace(2,GF(
3)): x_1^2+x_2^2+x_3^2=0 &gt;&gt; to &lt;Elements of standard Q(2, 3)&gt;&gt;
gap&gt; KnownAttributesOfObject(iso);
[ "Range", "Source", "Intertwiner" ]
gap&gt; hom := Intertwiner(iso);
MappingByFunction( &lt;projective semilinear group with 
3 generators&gt;, PGammaO(3,3), function( y ) ... end, function( x ) ... end )
