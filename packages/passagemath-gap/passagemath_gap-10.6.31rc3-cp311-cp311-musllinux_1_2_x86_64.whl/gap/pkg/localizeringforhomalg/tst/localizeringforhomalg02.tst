# LocalizeRingForHomalg, single 2
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("localizeringforhomalg02.tst");

# doc/../examples/EasyPoly.g:5-27
gap> LoadPackage("RingsForHomalg");;
gap> F3xy := HomalgRingOfIntegersInSingular(3) * "x,y";;
gap> x1 := HomalgRingElement( "x+2", F3xy );;
gap> y0 := HomalgRingElement( "y", F3xy );;
gap> LoadPackage("LocalizeRingForHomalg");;
gap> R00 := LocalizeAtZero( F3xy );;
gap> R10 := LocalizeAt( F3xy, [ x1, y0 ] );;
gap> RMora := LocalizePolynomialRingAtZeroWithMora( F3xy );;
gap> M := HomalgMatrix( "[\
>        y^3+2*y^2+x+x^2+2*x*y+y^4+x*y^2, \
>        x*y^3+2*x^2*y+y^3+y^2+x+2*y+x^2, \
>        x^2*y^2+2*x^3+x^2*y+y^3+2*x^2+2*x*y+y^2+2*y\
>      ]", 1, 3, F3xy );;
gap> LoadPackage( "Modules" );;
gap> I := RightPresentation( M );;
gap> M00 := HomalgLocalMatrix( M, R00 );;
gap> M10 := HomalgLocalMatrix( M, R10 );;
gap> MMora := HomalgLocalMatrix( M, RMora );;
gap> I00 := RightPresentation( M00 );;
gap> I10 := RightPresentation( M10 );;
gap> IMora := RightPresentation( MMora );;

#
gap> STOP_TEST("localizeringforhomalg02.tst", 1);
