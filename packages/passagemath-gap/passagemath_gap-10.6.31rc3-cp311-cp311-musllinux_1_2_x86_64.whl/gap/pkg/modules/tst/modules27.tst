# Modules, single 27
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("modules27.tst");

# doc/../gap/BasicFunctors.gi:1172-1271
gap> zz := HomalgRingOfIntegers( );
Z
gap> M := HomalgMatrix( "[ 2, 3, 4,   5, 6, 7 ]", 2, 3, zz );;
gap> M := LeftPresentation( M );
<A non-torsion left module presented by 2 relations for 3 generators>
gap> N := HomalgMatrix( "[ 2, 3, 4, 5,   6, 7, 8, 9 ]", 2, 4, zz );;
gap> N := LeftPresentation( N );
<A non-torsion left module presented by 2 relations for 4 generators>
gap> mat := HomalgMatrix( "[ \
> 1, 0, -3, -6, \
> 0, 1,  6, 11, \
> 1, 0, -3, -6  \
> ]", 3, 4, zz );;
gap> phi := HomalgMap( mat, M, N );;
gap> IsMorphism( phi );
true
gap> phi;
<A homomorphism of left modules>
gap> psi := Hom( phi, M );
<A homomorphism of right modules>
gap> ByASmallerPresentation( psi );
<A non-zero homomorphism of right modules>
gap> Display( psi );
[ [   1,   1,   1,   0 ],
  [   2,   2,   0,   0 ],
  [   0,   0,  -2,   0 ] ]

the map is currently represented by the above 3 x 4 matrix
gap> homNM := Source( psi );
<A rank 2 right module on 4 generators satisfying 2 relations>
gap> IsIdenticalObj( homNM, Hom( N, M ) ); ## the caching at work
true
gap> homMM := Range( psi );
<A rank 1 right module on 3 generators satisfying 2 relations>
gap> IsIdenticalObj( homMM, Hom( M, M ) ); ## the caching at work
true
gap> Display( homNM );
Z/< 3 > + Z/< 3 > + Z^(2 x 1)
gap> Display( homMM );
Z/< 3 > + Z/< 3 > + Z^(1 x 1)
gap> IsMonomorphism( psi );
false
gap> IsEpimorphism( psi );
false
gap> GeneratorsOfModule( homMM );
<A set of 3 generators of a homalg right module>
gap> Display( last );
[ [  0,  0,  0 ],
  [  0,  1,  2 ],
  [  0,  0,  0 ] ]

the map is currently represented by the above 3 x 3 matrix

[ [  0,  2,  4 ],
  [  0,  0,  0 ],
  [  0,  2,  4 ] ]

the map is currently represented by the above 3 x 3 matrix

[ [   0,   0,   1 ],
  [   0,   2,   2 ],
  [   0,   0,   1 ] ]

the map is currently represented by the above 3 x 3 matrix

a set of 3 generators given by the the above matrices
gap> GeneratorsOfModule( homNM );
<A set of 4 generators of a homalg right module>
gap> Display( last );
[ [  0,  1,  2 ],
  [  0,  1,  2 ],
  [  0,  1,  2 ],
  [  0,  0,  0 ] ]

the map is currently represented by the above 4 x 3 matrix

[ [  0,  1,  2 ],
  [  0,  0,  0 ],
  [  0,  0,  0 ],
  [  0,  2,  4 ] ]

the map is currently represented by the above 4 x 3 matrix

[ [   0,   0,   1 ],
  [   0,   1,  -1 ],
  [   0,   1,   5 ],
  [   0,   1,   1 ] ]

the map is currently represented by the above 4 x 3 matrix

[ [   0,   0,   0 ],
  [   0,   0,   1 ],
  [   0,   0,  -2 ],
  [   0,   0,   1 ] ]

the map is currently represented by the above 4 x 3 matrix

a set of 4 generators given by the the above matrices

#
gap> STOP_TEST("modules27.tst", 1);
