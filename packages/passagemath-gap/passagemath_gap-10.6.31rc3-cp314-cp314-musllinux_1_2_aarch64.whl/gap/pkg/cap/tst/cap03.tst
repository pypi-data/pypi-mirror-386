# CAP, single 3
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("cap03.tst");

# doc/_Chapter_Examples_and_Tests.xml:80-113
gap> LoadPackage( "CAP", false );
true
gap> D := FiniteSkeletalDiscreteCategory( [ 1 .. 5 ] );
FiniteSkeletalDiscreteCategory( [ 1 .. 5 ] )
gap> one := ObjectConstructor( D, 1 );
<An object in FiniteSkeletalDiscreteCategory( [ 1 .. 5 ] )>
gap> IsWellDefinedForObjects( one );
true
gap> ObjectDatum( one ) = 1;
true
gap> Display( one );
1
gap> IsEqualForObjects( one, D[1] );
true
gap> id_one := IdentityMorphism( D, one );
<An identity morphism in FiniteSkeletalDiscreteCategory( [ 1 .. 5 ] )>
gap> IsWellDefinedForMorphisms( id_one );
true
gap> MorphismDatum( id_one ) = fail;
true
gap> Display( id_one );
1
|
| A morphism in FiniteSkeletalDiscreteCategory( [ 1 .. 5 ] )
v
1
gap> IsEqualForMorphisms( PreCompose( id_one, id_one ), id_one );
true
gap> Length( SetOfObjectsOfCategory( D ) );
5
gap> Length( SetOfMorphismsOfFiniteCategory( D ) );
5

#
gap> STOP_TEST("cap03.tst", 1);
