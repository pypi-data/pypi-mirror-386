# GradedModules, single 9
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("gradedmodules09.tst");

# doc/../examples/doc/HomogeneousPartOverCoefficientsRing.g:2-57
gap> R := HomalgFieldOfRationalsInDefaultCAS( ) * "x,y,z";;
gap> S := GradedRing( R );;
gap> M := HomalgMatrix( "[ x, y^2, z^3 ]", 3, 1, S );;
gap> M := Subobject( M, ( 1 * S )^0 );
<A graded torsion-free (left) ideal given by 3 generators>
gap> CastelnuovoMumfordRegularity( M );
4
gap> M1 := HomogeneousPartOverCoefficientsRing( 1, M );
<A graded left vector space of dimension 1 on a free generator>
gap> gen1 := GeneratorsOfModule( M1 );
<A set consisting of a single generator of a homalg left module>
gap> Display( M1 );
Q^(1 x 1)

(graded, degree of generator: 1)
gap> M2 := HomogeneousPartOverCoefficientsRing( 2, M );
<A graded left vector space of dimension 4 on free generators>
gap> Display( M2 );
Q^(1 x 4)

(graded, degrees of generators: [ 2, 2, 2, 2 ])
gap> gen2 := GeneratorsOfModule( M2 );
<A set of 4 generators of a homalg left module>
gap> M3 := HomogeneousPartOverCoefficientsRing( 3, M );
<A graded left vector space of dimension 9 on free generators>
gap> Display( M3 );
Q^(1 x 9)

(graded, degrees of generators: [ 3, 3, 3, 3, 3, 3, 3, 3, 3 ])
gap> gen3 := GeneratorsOfModule( M3 );
<A set of 9 generators of a homalg left module>
gap> Display( gen1 );
x

a set consisting of a single generator given by (the row of) the above matrix
gap> Display( gen2 );
x^2,
x*y,
x*z,
y^2 

a set of 4 generators given by the rows of the above matrix
gap> Display( gen3 );
x^3,  
x^2*y,
x^2*z,
x*y*z,
x*z^2,
x*y^2,
y^3,  
y^2*z,
z^3   

a set of 9 generators given by the rows of the above matrix

#
gap> STOP_TEST("gradedmodules09.tst", 1);
