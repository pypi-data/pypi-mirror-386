"""
Style presets for professional template designs.

This module provides predefined style configurations for different
professional contexts and industries.
"""

from dataclasses import dataclass
from typing import Dict, Any
from enum import Enum

from .template_config import TemplateConfig, BrandingConfig


class TemplateStyle(Enum):
    """Available template style presets."""

    MODERN = "modern"
    CORPORATE = "corporate"
    ACADEMIC = "academic"
    FINANCIAL = "financial"
    MINIMAL = "minimal"
    CREATIVE = "creative"


@dataclass
class StylePresets:
    """Collection of predefined style presets."""

    @staticmethod
    def get_modern_style() -> TemplateConfig:
        """Get modern style configuration."""
        return TemplateConfig(
            template_name="modern",
            page_size="A4",
            orientation="portrait",
            margin_top=72,
            margin_bottom=72,
            margin_left=72,
            margin_right=72,
            # Modern blue color scheme
            header_background="#2E86AB",
            header_text_color="#FFFFFF",
            alternate_row_color="#F8F8F8",
            border_color="#E0E0E0",
            grid_color="#F0F0F0",
            # Clean typography
            font_family="Helvetica",
            font_size=10,
            header_font_size=12,
            title_font_size=16,
            # Professional alignment
            title_alignment="center",
            header_alignment="center",
            data_alignment="left",
            # Modern footer
            include_footer=True,
            footer_text="Generated by exc-to-pdf",
            footer_alignment="center",
            footer_font_size=8,
            # Clean header
            include_header=True,
            header_text="",
            show_page_numbers=True,
            page_number_format="Page {page}",
            # Dynamic features
            dynamic_column_width=True,
            auto_adjust_margins=False,
            responsive_tables=True,
            include_charts=True,
            chart_position="after_table",
            chart_max_size=(400, 300),
        )

    @staticmethod
    def get_corporate_style() -> TemplateConfig:
        """Get corporate style configuration."""
        return TemplateConfig(
            template_name="corporate",
            page_size="A4",
            orientation="portrait",
            margin_top=90,  # Larger margins for professional look
            margin_bottom=90,
            margin_left=85,
            margin_right=85,
            # Corporate navy blue scheme
            header_background="#1F4963",
            header_text_color="#FFFFFF",
            alternate_row_color="#F5F7FA",
            border_color="#D1D5DB",
            grid_color="#E5E7EB",
            # Professional typography
            font_family="Arial",
            font_size=11,
            header_font_size=13,
            title_font_size=18,
            # Formal alignment
            title_alignment="center",
            header_alignment="center",
            data_alignment="left",
            # Corporate footer
            include_footer=True,
            footer_text="Confidential - Internal Use Only",
            footer_alignment="center",
            footer_font_size=9,
            # Professional header
            include_header=True,
            header_text="Business Report",
            show_page_numbers=True,
            page_number_format="{page} of {total}",
            # Corporate features
            dynamic_column_width=True,
            auto_adjust_margins=True,
            responsive_tables=True,
            include_charts=True,
            chart_position="separate_page",
            chart_max_size=(500, 350),
            # Corporate branding
            branding=BrandingConfig(
                company_name="Your Company",
                primary_color="#1F4963",
                secondary_color="#5B9BD5",
                accent_color="#A5A5A5",
                text_color="#2F4F4F",
                font_family="Arial",
                logo_position="header",
            ),
        )

    @staticmethod
    def get_academic_style() -> TemplateConfig:
        """Get academic/research style configuration."""
        return TemplateConfig(
            template_name="academic",
            page_size="A4",
            orientation="portrait",
            margin_top=96,  # Academic standard margins
            margin_bottom=96,
            margin_left=96,
            margin_right=96,
            # Academic gray/blue scheme
            header_background="#4A5568",
            header_text_color="#FFFFFF",
            alternate_row_color="#FAFAFA",
            border_color="#CBD5E0",
            grid_color="#E2E8F0",
            # Academic typography
            font_family="Times",
            font_size=10,
            header_font_size=12,
            title_font_size=14,
            # Academic alignment
            title_alignment="center",
            header_alignment="center",
            data_alignment="left",
            # Academic footer
            include_footer=True,
            footer_text="Research Data - Generated {date}",
            footer_alignment="center",
            footer_font_size=9,
            # Academic header
            include_header=True,
            header_text="Research Results",
            show_page_numbers=True,
            page_number_format="{page}",
            # Academic features
            dynamic_column_width=False,  # Consistent formatting
            auto_adjust_margins=False,
            responsive_tables=False,
            include_charts=True,
            chart_position="after_table",
            chart_max_size=(450, 320),
        )

    @staticmethod
    def get_financial_style() -> TemplateConfig:
        """Get financial/reports style configuration."""
        return TemplateConfig(
            template_name="financial",
            page_size="A4",
            orientation="landscape",  # Financial reports often use landscape
            margin_top=72,
            margin_bottom=72,
            margin_left=72,
            margin_right=72,
            # Financial green/blue scheme
            header_background="#2C5F2D",
            header_text_color="#FFFFFF",
            alternate_row_color="#F0F8F0",
            border_color="#8FBC8F",
            grid_color="#D3D3D3",
            # Financial typography
            font_family="Calibri",
            font_size=9,  # Smaller for data density
            header_font_size=11,
            title_font_size=16,
            # Financial alignment (numbers right-aligned)
            title_alignment="center",
            header_alignment="center",
            data_alignment="right",  # Numbers typically right-aligned
            # Financial footer
            include_footer=True,
            footer_text="Financial Report - Currency in USD",
            footer_alignment="right",
            footer_font_size=8,
            # Financial header
            include_header=True,
            header_text="Financial Analysis",
            show_page_numbers=True,
            page_number_format="Page {page}",
            # Financial features
            dynamic_column_width=True,
            auto_adjust_margins=True,
            responsive_tables=True,
            include_charts=True,
            chart_position="before_table",
            chart_max_size=(600, 400),
        )

    @staticmethod
    def get_minimal_style() -> TemplateConfig:
        """Get minimal style configuration."""
        return TemplateConfig(
            template_name="minimal",
            page_size="A4",
            orientation="portrait",
            margin_top=60,  # Smaller margins for clean look
            margin_bottom=60,
            margin_left=60,
            margin_right=60,
            # Minimal gray scheme
            header_background="#6B7280",
            header_text_color="#FFFFFF",
            alternate_row_color="#F9FAFB",
            border_color="#D1D5DB",
            grid_color="#F3F4F6",
            # Clean typography
            font_family="Helvetica",
            font_size=10,
            header_font_size=11,
            title_font_size=14,
            # Clean alignment
            title_alignment="left",
            header_alignment="left",
            data_alignment="left",
            # Minimal footer
            include_footer=False,
            footer_text="",
            footer_alignment="center",
            footer_font_size=8,
            # Minimal header
            include_header=False,
            header_text="",
            show_page_numbers=True,
            page_number_format="{page}",
            # Minimal features
            dynamic_column_width=True,
            auto_adjust_margins=False,
            responsive_tables=True,
            include_charts=False,  # Minimal approach
            chart_position="after_table",
            chart_max_size=(350, 250),
        )

    @staticmethod
    def get_creative_style() -> TemplateConfig:
        """Get creative/design style configuration."""
        return TemplateConfig(
            template_name="creative",
            page_size="A4",
            orientation="portrait",
            margin_top=72,
            margin_bottom=72,
            margin_left=72,
            margin_right=72,
            # Creative purple/orange scheme
            header_background="#7C3AED",
            header_text_color="#FFFFFF",
            alternate_row_color="#FEF3C7",
            border_color="#F59E0B",
            grid_color="#FEF3C7",
            # Creative typography
            font_family="Helvetica",
            font_size=11,
            header_font_size=13,
            title_font_size=20,
            # Creative alignment
            title_alignment="center",
            header_alignment="center",
            data_alignment="left",
            # Creative footer
            include_footer=True,
            footer_text="Creative Analysis Report",
            footer_alignment="center",
            footer_font_size=10,
            # Creative header
            include_header=True,
            header_text="Data Visualization",
            show_page_numbers=True,
            page_number_format="• {page} •",
            # Creative features
            dynamic_column_width=True,
            auto_adjust_margins=True,
            responsive_tables=True,
            include_charts=True,
            chart_position="separate_page",
            chart_max_size=(500, 400),
            # Creative branding
            branding=BrandingConfig(
                primary_color="#7C3AED",
                secondary_color="#F59E0B",
                accent_color="#10B981",
                text_color="#1F2937",
                watermark_text="DRAFT",
                watermark_opacity=0.05,
            ),
        )

    @staticmethod
    def get_preset(style_name: str) -> TemplateConfig:
        """Get a preset style by name.

        Args:
            style_name: Name of the style preset

        Returns:
            TemplateConfig for the requested style

        Raises:
            ValueError: If style name is not recognized
        """
        style_map = {
            TemplateStyle.MODERN.value: StylePresets.get_modern_style,
            TemplateStyle.CORPORATE.value: StylePresets.get_corporate_style,
            TemplateStyle.ACADEMIC.value: StylePresets.get_academic_style,
            TemplateStyle.FINANCIAL.value: StylePresets.get_financial_style,
            TemplateStyle.MINIMAL.value: StylePresets.get_minimal_style,
            TemplateStyle.CREATIVE.value: StylePresets.get_creative_style,
        }

        if style_name not in style_map:
            available_styles = ", ".join(style_map.keys())
            raise ValueError(
                f"Unknown style: {style_name}. Available styles: {available_styles}"
            )

        return style_map[style_name]()

    @staticmethod
    def list_available_styles() -> list[str]:
        """List all available style presets.

        Returns:
            List of available style names
        """
        return [style.value for style in TemplateStyle]

    @staticmethod
    def get_style_description(style_name: str) -> str:
        """Get description of a style preset.

        Args:
            style_name: Name of the style

        Returns:
            Description of the style
        """
        descriptions = {
            TemplateStyle.MODERN.value: "Clean, professional design with blue color scheme",
            TemplateStyle.CORPORATE.value: "Formal business style with navy colors and larger margins",
            TemplateStyle.ACADEMIC.value: "Research-focused style with gray tones and standard formatting",
            TemplateStyle.FINANCIAL.value: "Landscape orientation optimized for financial data and charts",
            TemplateStyle.MINIMAL.value: "Clean, simple design with minimal elements",
            TemplateStyle.CREATIVE.value: "Vibrant design with purple/orange color scheme",
        }

        return descriptions.get(style_name, "No description available")
