[tool.poetry]
name = "donkit-ragops-ce"
version = "0.2.3"
description = "Community Edition CLI agent for building RAG pipelines"
authors = ["Donkit AI <opensource@donkit.ai>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "ragops_agent_ce", from = "src" }]
include = [
    "src/ragops_agent_ce/compose/services/*.yml",
    "src/ragops_agent_ce/compose/templates/*"
]

[tool.poetry.dependencies]
python = "^3.12"
rich = "^13.7.1"
pydantic = "^2.7.4"
pydantic-settings = "^2.6.1"
sqlmodel = "^0.0.16"
python-dotenv = "^1.0.1"
mcp = {extras = ["cli"], version = "^1.14.0"}
httpx = "^0.28.1"
typer = "^0.17.4"
loguru = "^0.7.3"
openai = "^2.1.0"
google-genai = "^1.38.0"
langchain = "^0.3.27"
donkit-chunker = "^0.1.2"
donkit-vectorstore-loader = "^0.1.3"
donkit-embeddings = "^0.1.0"
langchain-openai = "^0.3.35"
langchain-community = "^0.3.31"
donkit-read-engine = "^0.1.2"

[tool.poetry.scripts]
donkit-ragops-ce = "ragops_agent_ce.cli:app"
ragops-agent = "ragops_agent_ce.cli:app"
ragops-rag-planner = "ragops_agent_ce.mcp.servers.planner_server:main"
ragops-read-engine = "ragops_agent_ce.mcp.servers.read_engine_server:main"
ragops-chunker = "ragops_agent_ce.mcp.servers.chunker_server:main"
ragops-vectorstore-loader = "ragops_agent_ce.mcp.servers.vectorstore_loader_server:main"
ragops-checklist = "ragops_agent_ce.mcp.servers.checklist_server:main"
ragops-compose-manager = "ragops_agent_ce.mcp.servers.compose_manager_server:main"
ragops-rag-query = "ragops_agent_ce.mcp.servers.rag_query_server:main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
ruff = "^0.5.0"
# local dev deps
#donkit-chunker = { path = "../ragops-agent/shared/chunker", develop = true }
#donkit-vectorstore-loader = { path = "../ragops-agent/shared/vectorstore-loader", develop = true }
#donkit-read-engine = { path = "../ragops-agent/shared/read-engine", develop = true }
#donkit-embeddings = { path = "../ragops-agent/shared/embeddings", develop = true }


[tool.ruff]
line-length = 100
select = ["E", "F", "I", "UP"]
exclude = [".venv", "venv", "build", "dist", ".git", ".mypy_cache", ".ruff_cache"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
strict = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"
