[build-system]
# A list of packages that are needed to build your package:
requires = ["setuptools"] # REQUIRED if [build-system] table is used
# The name of the Python object that frontends will use to perform the build:
build-backend = "setuptools.build_meta" # If not defined, then legacy behavior can happen.


[project]
version = "3.0.8"
name = "karabo.services"
description = "Services required to run Karabo"
readme = "README.md"
requires-python = ">=3.12"
license = "MPL-2.0"
keywords = ["Karabo", "SCADA", "async", "control system"]
authors = [{ name = "European XFEL GmbH", email = "opensource@xfel.eu" }]
maintainers = [
  { name = "S. Hauf", email = "steffen.hauf@xfel.eu" },
  { name = "D. Goeries", email = "dennis.goeries@xfel.eu" },
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 5 - Production/Stable",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/

# we keep versions closely matched here
dependencies = [
  'karabo.daemontools==3.0.8',
  'karabo.karathon==3.0.8',
]

[project.optional-dependencies]
with_cpp = ["karabo.cpp==3.0.8"]


# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls]
"Homepage" = "https://github.com/European-XFEL/Karabo"
"Bug Reports" = "https://github.com/European-XFEL/Karabo/issues"
#"Funding" = "https://donate.pypi.org"
# "Say Thanks!" = "mailto://opensource@xfel.eu"
"Source" = "https://github.com/European-XFEL/Karabo"

# The following would provide a command line executable called `sample`
# which executes the function `main` from this package when invoked.
[project.scripts]
karabo-activate = 'karabo_services.entrypoints:karabo_activate'
# we do not expose the karabo script, as currently it is only useful
# in the EuXFEL environment.
# karabo = 'karabo.interactive.karabo:main'
ikarabo ='karabo.interactive.ikarabo:main'
karabo-start = 'karabo.interactive.startkarabo:startkarabo'
karabo-stop = 'karabo.interactive.startkarabo:stopkarabo'
karabo-kill = 'karabo.interactive.startkarabo:killkarabo'
karabo-check = 'karabo.interactive.startkarabo:checkkarabo'
karabo-add-deviceserver = 'karabo.interactive.startkarabo:adddeviceserver'
karabo-remove-deviceserver = 'karabo.interactive.startkarabo:removedeviceserver'
karabo-create-services = 'karabo.interactive.startkarabo:make_service_dir'
karabo-webserver = 'karabo.interactive.webserver:run_webserver'
karabo-webaggregatorserver = 'karabo.interactive.webaggregatorserver:run_webserver'


# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
[tool.setuptools.package-data]
"karabo_services" = ["service.in/**/*", "service.in/**/.svscan/**/*", "overwrites/*", "containers/**/*"]