# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.search_users200_response import SearchUsers200Response

class TestSearchUsers200Response(unittest.TestCase):
    """SearchUsers200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchUsers200Response:
        """Test SearchUsers200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchUsers200Response`
        """
        model = SearchUsers200Response()
        if include_optional:
            return SearchUsers200Response(
                users = [
                    keplar_api.models.user_search_result.UserSearchResult(
                        id = '', 
                        email = '', 
                        name = '', 
                        account_status = 'ACTIVE', 
                        data = null, 
                        org_id = '', 
                        org = keplar_api.models.user_org.UserOrg(
                            id = '', 
                            name = '', ), 
                        projects = [
                            keplar_api.models.user_project.UserProject(
                                id = '', 
                                name = '', )
                            ], 
                        created_at = '', )
                    ]
            )
        else:
            return SearchUsers200Response(
                users = [
                    keplar_api.models.user_search_result.UserSearchResult(
                        id = '', 
                        email = '', 
                        name = '', 
                        account_status = 'ACTIVE', 
                        data = null, 
                        org_id = '', 
                        org = keplar_api.models.user_org.UserOrg(
                            id = '', 
                            name = '', ), 
                        projects = [
                            keplar_api.models.user_project.UserProject(
                                id = '', 
                                name = '', )
                            ], 
                        created_at = '', )
                    ],
        )
        """

    def testSearchUsers200Response(self):
        """Test SearchUsers200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
