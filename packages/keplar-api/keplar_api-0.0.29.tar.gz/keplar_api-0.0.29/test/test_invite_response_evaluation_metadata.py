# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.invite_response_evaluation_metadata import InviteResponseEvaluationMetadata

class TestInviteResponseEvaluationMetadata(unittest.TestCase):
    """InviteResponseEvaluationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InviteResponseEvaluationMetadata:
        """Test InviteResponseEvaluationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InviteResponseEvaluationMetadata`
        """
        model = InviteResponseEvaluationMetadata()
        if include_optional:
            return InviteResponseEvaluationMetadata(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                original_evaluation = 'SYSTEM_PASS',
                previous_evaluation = 'SYSTEM_PASS',
                created_by = '',
                notes = '',
                transcript_quality = 'HIGH'
            )
        else:
            return InviteResponseEvaluationMetadata(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testInviteResponseEvaluationMetadata(self):
        """Test InviteResponseEvaluationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
