# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.call_summary import CallSummary

class TestCallSummary(unittest.TestCase):
    """CallSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CallSummary:
        """Test CallSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CallSummary`
        """
        model = CallSummary()
        if include_optional:
            return CallSummary(
                id = '',
                status = 'REQUESTED',
                metadata = keplar_api.models.call_metadata.CallMetadata(
                    recording_url = '', 
                    transcript = '', 
                    transcript_quality = 'HIGH', 
                    transcript_markdown = '', 
                    transcript_insight = '', 
                    analysis = keplar_api.models.call_analysis.CallAnalysis(
                        summary = '', 
                        success_evaluation = '', ), 
                    gcs_url = '', 
                    gcs_path = '', 
                    gcs_uploaded_at = '', 
                    gcs_last_synced_at = '', )
            )
        else:
            return CallSummary(
                id = '',
                status = 'REQUESTED',
                metadata = keplar_api.models.call_metadata.CallMetadata(
                    recording_url = '', 
                    transcript = '', 
                    transcript_quality = 'HIGH', 
                    transcript_markdown = '', 
                    transcript_insight = '', 
                    analysis = keplar_api.models.call_analysis.CallAnalysis(
                        summary = '', 
                        success_evaluation = '', ), 
                    gcs_url = '', 
                    gcs_path = '', 
                    gcs_uploaded_at = '', 
                    gcs_last_synced_at = '', ),
        )
        """

    def testCallSummary(self):
        """Test CallSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
