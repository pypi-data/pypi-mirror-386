# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.join_code_invite302_response import JoinCodeInvite302Response

class TestJoinCodeInvite302Response(unittest.TestCase):
    """JoinCodeInvite302Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JoinCodeInvite302Response:
        """Test JoinCodeInvite302Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JoinCodeInvite302Response`
        """
        model = JoinCodeInvite302Response()
        if include_optional:
            return JoinCodeInvite302Response(
                id = '',
                code = '',
                name = '',
                description = '',
                status = 'PREVIEW',
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                project_id = '',
                config = None,
                settings = keplar_api.models.join_code_invite_302_response_settings.joinCodeInvite_302_response_settings(
                    max_duration_seconds = 1.337, 
                    screener_questions = [
                        null
                        ], 
                    files = [
                        keplar_api.models.project_file_public.ProjectFilePublic(
                            file = keplar_api.models.project_file_public_file.ProjectFilePublic_file(
                                description = '', 
                                mime_type = 'image/jpeg', 
                                public_url = '', 
                                public_url_expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            description = '', 
                            metadata = keplar_api.models.project_file_metadata.ProjectFileMetadata(
                                seq = 1.337, 
                                prompt = '', 
                                image_description = '', ), )
                        ], )
            )
        else:
            return JoinCodeInvite302Response(
                id = '',
                code = '',
                name = '',
                status = 'PREVIEW',
                project_id = '',
                config = None,
                settings = keplar_api.models.join_code_invite_302_response_settings.joinCodeInvite_302_response_settings(
                    max_duration_seconds = 1.337, 
                    screener_questions = [
                        null
                        ], 
                    files = [
                        keplar_api.models.project_file_public.ProjectFilePublic(
                            file = keplar_api.models.project_file_public_file.ProjectFilePublic_file(
                                description = '', 
                                mime_type = 'image/jpeg', 
                                public_url = '', 
                                public_url_expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            description = '', 
                            metadata = keplar_api.models.project_file_metadata.ProjectFileMetadata(
                                seq = 1.337, 
                                prompt = '', 
                                image_description = '', ), )
                        ], ),
        )
        """

    def testJoinCodeInvite302Response(self):
        """Test JoinCodeInvite302Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
