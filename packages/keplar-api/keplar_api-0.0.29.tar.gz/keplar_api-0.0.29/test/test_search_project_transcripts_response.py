# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.search_project_transcripts_response import SearchProjectTranscriptsResponse

class TestSearchProjectTranscriptsResponse(unittest.TestCase):
    """SearchProjectTranscriptsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchProjectTranscriptsResponse:
        """Test SearchProjectTranscriptsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchProjectTranscriptsResponse`
        """
        model = SearchProjectTranscriptsResponse()
        if include_optional:
            return SearchProjectTranscriptsResponse(
                transcripts = [
                    keplar_api.models.transcript.Transcript(
                        id = '', 
                        response_id = '', 
                        messages = [
                            keplar_api.models.transcript_messages_inner.Transcript_messages_inner(
                                call_id = '', 
                                index = 1.337, 
                                role = '', 
                                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                message = '', )
                            ], 
                        attributes = [
                            keplar_api.models.transcript_attributes_inner.Transcript_attributes_inner(
                                label = '', 
                                value = '', )
                            ], )
                    ],
                total = 1.337,
                page = 1.337,
                limit = 1.337
            )
        else:
            return SearchProjectTranscriptsResponse(
                transcripts = [
                    keplar_api.models.transcript.Transcript(
                        id = '', 
                        response_id = '', 
                        messages = [
                            keplar_api.models.transcript_messages_inner.Transcript_messages_inner(
                                call_id = '', 
                                index = 1.337, 
                                role = '', 
                                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                message = '', )
                            ], 
                        attributes = [
                            keplar_api.models.transcript_attributes_inner.Transcript_attributes_inner(
                                label = '', 
                                value = '', )
                            ], )
                    ],
                total = 1.337,
                page = 1.337,
                limit = 1.337,
        )
        """

    def testSearchProjectTranscriptsResponse(self):
        """Test SearchProjectTranscriptsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
