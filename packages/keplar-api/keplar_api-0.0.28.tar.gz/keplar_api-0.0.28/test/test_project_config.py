# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.project_config import ProjectConfig

class TestProjectConfig(unittest.TestCase):
    """ProjectConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectConfig:
        """Test ProjectConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectConfig`
        """
        model = ProjectConfig()
        if include_optional:
            return ProjectConfig(
                project_kind = 'custom',
                prompt_variables = {
                    'key' : null
                    },
                learning_plan = '',
                brief = keplar_api.models.project_brief.ProjectBrief(
                    title = '', 
                    objective = '', 
                    learning_goals = '', 
                    key_questions = '', 
                    conversation_flow = [
                        ''
                        ], 
                    rules = [
                        ''
                        ], 
                    assets = [
                        ''
                        ], ),
                brief_document = '',
                screener_questions = [
                    null
                    ],
                audience_settings = keplar_api.models.project_audience.ProjectAudience(
                    sample_size = 1.337, 
                    invite_title = '', 
                    invite_description = '', 
                    participants = [
                        keplar_api.models.participant_create.ParticipantCreate(
                            id = '', 
                            name = '', 
                            email = '', 
                            phone_number = '01234', 
                            data = keplar_api.models.data.data(), )
                        ], 
                    panel_settings = keplar_api.models.panel_settings.PanelSettings(
                        respondent_attributes = [
                            keplar_api.models.panel_respondent_attribute.PanelRespondentAttribute(
                                qualifications = [
                                    keplar_api.models.panel_qualification.PanelQualification(
                                        allowed_option_ids = [
                                            null
                                            ], 
                                        question_id = 1.337, )
                                    ], 
                                quota = 1.337, 
                                quota_name = '', )
                            ], 
                        country_code = '', 
                        language_code = '', 
                        length_of_interview = 1.337, 
                        incidence_rate = 1.337, 
                        compensation = 1.337, ), 
                    use_public_link = True, )
            )
        else:
            return ProjectConfig(
                prompt_variables = {
                    'key' : null
                    },
                learning_plan = '',
        )
        """

    def testProjectConfig(self):
        """Test ProjectConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
