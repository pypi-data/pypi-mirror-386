# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.repdata_survey_attributes import RepdataSurveyAttributes

class TestRepdataSurveyAttributes(unittest.TestCase):
    """RepdataSurveyAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepdataSurveyAttributes:
        """Test RepdataSurveyAttributes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepdataSurveyAttributes`
        """
        model = RepdataSurveyAttributes()
        if include_optional:
            return RepdataSurveyAttributes(
                respondents = 1.337,
                country_code = '',
                language_code = '',
                length_of_interview = 1.337,
                incidence_rate = 1.337,
                minimum_price_per_complete = 1.337,
                offered_price_per_complete = 1.337,
                device_compatibilities = [
                    ''
                    ],
                collects_pii = True,
                hashing_enabled = True,
                calculation_type = '',
                traffic_control_limit_type = '',
                out_of_field_date = '',
                out_of_field_timezone = '',
                entry_link = '',
                redirects = keplar_api.models.repdata_survey_redirects.RepdataSurveyRedirects(
                    complete = '', 
                    standard_termination = '', 
                    quality_termination = '', 
                    security_termination = '', 
                    overquota_termination_term = '', )
            )
        else:
            return RepdataSurveyAttributes(
                respondents = 1.337,
                country_code = '',
                language_code = '',
                length_of_interview = 1.337,
                incidence_rate = 1.337,
                minimum_price_per_complete = 1.337,
                offered_price_per_complete = 1.337,
                device_compatibilities = [
                    ''
                    ],
                collects_pii = True,
                hashing_enabled = True,
                calculation_type = '',
                traffic_control_limit_type = '',
                out_of_field_date = '',
                out_of_field_timezone = '',
                entry_link = '',
                redirects = keplar_api.models.repdata_survey_redirects.RepdataSurveyRedirects(
                    complete = '', 
                    standard_termination = '', 
                    quality_termination = '', 
                    security_termination = '', 
                    overquota_termination_term = '', ),
        )
        """

    def testRepdataSurveyAttributes(self):
        """Test RepdataSurveyAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
