# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.code_invite_config_keplar_panel import CodeInviteConfigKeplarPanel

class TestCodeInviteConfigKeplarPanel(unittest.TestCase):
    """CodeInviteConfigKeplarPanel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeInviteConfigKeplarPanel:
        """Test CodeInviteConfigKeplarPanel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeInviteConfigKeplarPanel`
        """
        model = CodeInviteConfigKeplarPanel()
        if include_optional:
            return CodeInviteConfigKeplarPanel(
                kind = 'KEPLAR_PANEL',
                collect_email = True,
                require_email = True,
                panel_settings = keplar_api.models.panel_settings.PanelSettings(
                    respondent_attributes = [
                        keplar_api.models.panel_respondent_attribute.PanelRespondentAttribute(
                            qualifications = [
                                keplar_api.models.panel_qualification.PanelQualification(
                                    allowed_option_ids = [
                                        null
                                        ], 
                                    question_id = 1.337, )
                                ], 
                            quota = 1.337, 
                            quota_name = '', )
                        ], 
                    country_code = '', 
                    language_code = '', 
                    length_of_interview = 1.337, 
                    incidence_rate = 1.337, 
                    compensation = 1.337, ),
                title = '',
                description = '',
                max_responses = 1.337,
                max_responses_per_participant = 1.337
            )
        else:
            return CodeInviteConfigKeplarPanel(
                kind = 'KEPLAR_PANEL',
                panel_settings = keplar_api.models.panel_settings.PanelSettings(
                    respondent_attributes = [
                        keplar_api.models.panel_respondent_attribute.PanelRespondentAttribute(
                            qualifications = [
                                keplar_api.models.panel_qualification.PanelQualification(
                                    allowed_option_ids = [
                                        null
                                        ], 
                                    question_id = 1.337, )
                                ], 
                            quota = 1.337, 
                            quota_name = '', )
                        ], 
                    country_code = '', 
                    language_code = '', 
                    length_of_interview = 1.337, 
                    incidence_rate = 1.337, 
                    compensation = 1.337, ),
                title = '',
        )
        """

    def testCodeInviteConfigKeplarPanel(self):
        """Test CodeInviteConfigKeplarPanel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
