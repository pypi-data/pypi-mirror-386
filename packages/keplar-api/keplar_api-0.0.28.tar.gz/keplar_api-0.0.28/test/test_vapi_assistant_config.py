# coding: utf-8

"""
    Fastify Template API

    API documentation using Swagger

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from keplar_api.models.vapi_assistant_config import VapiAssistantConfig

class TestVapiAssistantConfig(unittest.TestCase):
    """VapiAssistantConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VapiAssistantConfig:
        """Test VapiAssistantConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VapiAssistantConfig`
        """
        model = VapiAssistantConfig()
        if include_optional:
            return VapiAssistantConfig(
                system_prompt = '',
                model = keplar_api.models.open_ai_model_config.OpenAiModelConfig(
                    provider = 'openai', 
                    model = 'gpt-4.1', ),
                first_message = '',
                end_call_message = '',
                max_duration_seconds = 1.337,
                voice = keplar_api.models.vapi_voice_vapi_provider.VapiVoiceVapiProvider(
                    provider = 'vapi', 
                    voice_id = 'Elliot', ),
                tools = [
                    keplar_api.models.chat_completion_tool.ChatCompletionTool(
                        type = 'function', 
                        function = keplar_api.models.chat_completion_tool_function.ChatCompletionTool_function(
                            name = '', 
                            description = '', 
                            parameters = {
                                'key' : null
                                }, ), )
                    ]
            )
        else:
            return VapiAssistantConfig(
                system_prompt = '',
                model = keplar_api.models.open_ai_model_config.OpenAiModelConfig(
                    provider = 'openai', 
                    model = 'gpt-4.1', ),
                first_message = '',
                end_call_message = '',
                max_duration_seconds = 1.337,
                voice = keplar_api.models.vapi_voice_vapi_provider.VapiVoiceVapiProvider(
                    provider = 'vapi', 
                    voice_id = 'Elliot', ),
        )
        """

    def testVapiAssistantConfig(self):
        """Test VapiAssistantConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
