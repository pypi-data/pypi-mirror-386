[project]
name = "ucrs"
version = "0.1.1"
description = "UCRS a single wrapper class that accepts any CRS input and lazily converts to an instance of any library you need (e.g. cartopy, osgeo)."
authors = [
    {name = "Panos Mavrogiorgos",email = "pmav99@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pyproj"
]

[project.optional-dependencies]
cartopy = ["cartopy"]
gdal = ["gdal"]
full = ["cartopy", "gdal"]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pyright>=1.1.0",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{include = "ucrs"}]

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "requires_cartopy: marks tests that require cartopy to be installed",
    "requires_osgeo: marks tests that require osgeo/GDAL to be installed",
]

[tool.coverage.run]
source = ["ucrs"]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.paths]
source = ["ucrs/"]

