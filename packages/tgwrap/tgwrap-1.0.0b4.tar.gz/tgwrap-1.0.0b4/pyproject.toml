[tool.poetry]
name = "tgwrap"
version = "1.0.0-beta.4"
description = "A (terragrunt) wrapper around a (tofu|terraform) wrapper around ...."
authors = ["Gerco Grandia <gerco.grandia@4synergy.nl>", "Pascal Alma <pascal.alma@4synergy.nl>"]
license = "MIT"
readme = "README.md"
homepage = "https://gitlab.com/lunadata/tgwrap"
repository = "https://gitlab.com/lunadata/tgwrap"
documentation = "https://gitlab.com/lunadata/tgwrap/"
keywords = ["tofu", "terraform", "terragrunt", "terrasafe", "python"]
include = ["tgwrap"]

[tool.poetry.dependencies]
python = "^3.12"
pydot = "^1.4.2"
networkx = "^2.8.8"
click = ">= 8.0"
terrasafe = "^0.5.1"
packaging = "^23.0"
requests = "^2.31.0"
pyyaml = ">= 6.0"
inquirer = "^3.1.4"
azure-identity = "^1.17.1"
azure-core = "^1.30.2"
azure-mgmt-authorization = "^4.0.0"
jinja2 = "^3.1.4"

[tool.poetry.scripts]
tgwrap = "tgwrap.cli:main"

[tool.poetry.group.dev.dependencies]
pylint = "^3.2.7"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.1.6"
bandit = "^1.8.6"
mypy = "^1.18.2"
pbr = "^7.0.1"
safety = "^3.0.0"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration
[tool.ruff]
# Same as Black's default line length
line-length = 88
target-version = "py312"

# Enable specific rule categories
[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit (security)
    "N",   # pep8-naming
    "D",   # pydocstyle
]

ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in __init__
    "S101", # Use of assert (common in tests)
]

# Exclude specific directories
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    "dist",
    "build",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D"]  # Allow assert statements and skip docstrings in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["tgwrap"]

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "R0903", # too-few-public-methods
    "R0913", # too-many-arguments
]

# Bandit security configuration
[tool.bandit]
exclude_dirs = ["tests", ".venv", "build", "dist"]
skips = ["B101"]  # Skip assert_used test since we use asserts in tests

[tool.bandit.assert_used]
skips = ["**/test_*.py", "**/tests.py"]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Safety configuration for dependency scanning
[tool.safety]
ignore = []

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "df"]

[tool.pylint.design]
max-args = 8
max-locals = 20
