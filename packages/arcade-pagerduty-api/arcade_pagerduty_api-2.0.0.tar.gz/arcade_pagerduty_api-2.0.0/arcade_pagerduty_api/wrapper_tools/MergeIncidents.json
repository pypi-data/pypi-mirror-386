{
  "name": "MergeIncidents",
  "fully_qualified_name": "PagerdutyApi.MergeIncidents@2.0.0",
  "description": "Merge source incidents into a target incident.\n\nThis tool merges a list of source incidents into a specified target incident. The target incident will include alerts from the source incidents, and the source incidents will be resolved. Only incidents with alerts or those manually created in the UI can be merged. Ensure the target incident remains open and does not exceed 1000 alerts after merging.",
  "toolkit": {
    "name": "ArcadePagerdutyApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "resource_id",
        "required": true,
        "description": "The ID of the target incident for merging source incidents.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the resource."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "versioning_header",
        "required": true,
        "description": "The version of the API to use for the request, specified as a string in the `Accept` header.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Accept"
      },
      {
        "name": "content_type_header",
        "required": true,
        "description": "The MIME type of the request body. Must be 'application/json' for this endpoint.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Content-Type"
      },
      {
        "name": "user_email_address",
        "required": true,
        "description": "The email address of a valid user associated with the account making the request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address of a valid user associated with the account making the request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "From"
      },
      {
        "name": "source_incidents",
        "required": false,
        "description": "A JSON array of source incidents IDs to merge into the target incident. Each ID should correspond to a source incident that will be merged and resolved.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "source_incidents": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {},
              "description": "The source incidents that will be merged into the target incident and resolved."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'mergeIncidents'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-pagerduty",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Pagerduty API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.pagerduty.com/incidents/{id}/merge",
    "http_method": "PUT",
    "headers": {},
    "parameters": [
      {
        "name": "id",
        "tool_parameter_name": "resource_id",
        "description": "The ID of the resource.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the resource."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "Accept",
        "tool_parameter_name": "versioning_header",
        "description": "The `Accept` header is used as a versioning header.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/vnd.pagerduty+json;version=2",
        "documentation_urls": []
      },
      {
        "name": "Content-Type",
        "tool_parameter_name": "content_type_header",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/json",
        "documentation_urls": []
      },
      {
        "name": "From",
        "tool_parameter_name": "user_email_address",
        "description": "The email address of a valid user associated with the account making the request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address of a valid user associated with the account making the request."
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "source_incidents",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "source_incidents": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {},
              "description": "The source incidents that will be merged into the target incident and resolved."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"source_incidents\": {\n            \"type\": \"array\",\n            \"description\": \"The source incidents that will be merged into the target incident and resolved.\",\n            \"items\": {\n              \"allOf\": [\n                {\n                  \"allOf\": [\n                    {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"id\": {\n                          \"type\": \"string\",\n                          \"readOnly\": true\n                        },\n                        \"summary\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"readOnly\": true,\n                          \"description\": \"A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to `name`, though it is not intended to be an identifier.\"\n                        },\n                        \"type\": {\n                          \"type\": \"string\",\n                          \"readOnly\": true,\n                          \"description\": \"A string that determines the schema of the object. This must be the standard name for the entity, suffixed by `_reference` if the object is a reference.\"\n                        },\n                        \"self\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"readOnly\": true,\n                          \"format\": \"url\",\n                          \"description\": \"the API show URL at which the object is accessible\"\n                        },\n                        \"html_url\": {\n                          \"type\": \"string\",\n                          \"nullable\": true,\n                          \"readOnly\": true,\n                          \"format\": \"url\",\n                          \"description\": \"a URL at which the entity is uniquely displayed in the Web app\"\n                        }\n                      }\n                    },\n                    {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"type\",\n                        \"id\"\n                      ]\n                    }\n                  ]\n                },\n                {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"incident_reference\"\n                      ]\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        },\n        \"required\": [\n          \"source_incidents\"\n        ]\n      },\n      \"examples\": {\n        \"request\": {\n          \"summary\": \"Request Example\",\n          \"value\": {\n            \"source_incidents\": [\n              {\n                \"id\": \"P8JOGX7\",\n                \"type\": \"incident_reference\"\n              },\n              {\n                \"id\": \"PPVZH9X\",\n                \"type\": \"incident_reference\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
