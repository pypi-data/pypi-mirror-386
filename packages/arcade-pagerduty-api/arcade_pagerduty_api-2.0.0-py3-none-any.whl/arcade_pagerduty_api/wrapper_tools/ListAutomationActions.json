{
  "name": "ListAutomationActions",
  "fully_qualified_name": "PagerdutyApi.ListAutomationActions@2.0.0",
  "description": "Retrieve all automation actions with optional query filters.\n\nUse this tool to list all available automation actions from PagerDuty, filtered by any specified query parameters. Results are sorted alphabetically by action name and can be paginated.",
  "toolkit": {
    "name": "ArcadePagerdutyApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "api_version_header",
        "required": true,
        "description": "Specifies the API version for response formatting. Use predefined version strings.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Accept"
      },
      {
        "name": "content_type",
        "required": true,
        "description": "Specifies the format of the data being sent to the server. Use 'application/json'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Content-Type"
      },
      {
        "name": "max_results",
        "required": false,
        "description": "Maximum number of results to return, limited by the API's maximum request size.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "next_page_cursor",
        "required": false,
        "description": "Cursor to request the next set of results, typically obtained from the previous response.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "cursor"
      },
      {
        "name": "filter_by_name",
        "required": false,
        "description": "Filters results to include actions matching the specified name using case insensitive substring matching.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the name (case insensitive substring matching)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "name"
      },
      {
        "name": "filter_by_runner_id",
        "required": false,
        "description": "Filter results to include actions linked to a specific runner. Use 'any' to include only those linked to any runner, excluding unlinked actions.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones linked to the specified runner.\nSpecifying the value `any` filters results to include the ones linked to runners only,\nthus omitting the results not linked to runners.\n"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "runner_id"
      },
      {
        "name": "classification_filter",
        "required": false,
        "description": "Filters results to include only those matching the specified classification, such as 'diagnostic' or 'remediation'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "diagnostic",
            "remediation"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the specified classification (aka category)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "classification"
      },
      {
        "name": "filter_by_team_id",
        "required": false,
        "description": "Filters results to include actions associated with a specified team by providing its ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones associated with the specified team."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "team_id"
      },
      {
        "name": "filter_by_service_id",
        "required": false,
        "description": "Filters results to include only those actions associated with the specified service ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones associated with the specified service"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "service_id"
      },
      {
        "name": "filter_by_action_type",
        "required": false,
        "description": "Filter results to include only those matching the specified action type. Accepts 'script' or 'process_automation'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "script",
            "process_automation"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the specified action type"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "action_type"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'getAllAutomationActions'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-pagerduty",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Pagerduty API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.pagerduty.com/automation_actions/actions",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "limit",
        "tool_parameter_name": "max_results",
        "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum of the `limit` parameter used in the request or the maximum request size of the API."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "cursor",
        "tool_parameter_name": "next_page_cursor",
        "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Optional parameter used to request the \"next\" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.\n"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "name",
        "tool_parameter_name": "filter_by_name",
        "description": "Filters results to include the ones matching the name (case insensitive substring matching)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the name (case insensitive substring matching)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "runner_id",
        "tool_parameter_name": "filter_by_runner_id",
        "description": "Filters results to include the ones linked to the specified runner.\nSpecifying the value `any` filters results to include the ones linked to runners only,\nthus omitting the results not linked to runners.\n",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones linked to the specified runner.\nSpecifying the value `any` filters results to include the ones linked to runners only,\nthus omitting the results not linked to runners.\n"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "classification",
        "tool_parameter_name": "classification_filter",
        "description": "Filters results to include the ones matching the specified classification (aka category)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "diagnostic",
            "remediation"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the specified classification (aka category)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "team_id",
        "tool_parameter_name": "filter_by_team_id",
        "description": "Filters results to include the ones associated with the specified team.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones associated with the specified team."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "service_id",
        "tool_parameter_name": "filter_by_service_id",
        "description": "Filters results to include the ones associated with the specified service",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones associated with the specified service"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "action_type",
        "tool_parameter_name": "filter_by_action_type",
        "description": "Filters results to include the ones matching the specified action type",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "script",
            "process_automation"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters results to include the ones matching the specified action type"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "Accept",
        "tool_parameter_name": "api_version_header",
        "description": "The `Accept` header is used as a versioning header.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/vnd.pagerduty+json;version=2",
        "documentation_urls": []
      },
      {
        "name": "Content-Type",
        "tool_parameter_name": "content_type",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/json",
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
