{
  "name": "ResolveOrReassociateIncidentAlerts",
  "fully_qualified_name": "PagerdutyApi.ResolveOrReassociateIncidentAlerts@2.0.0",
  "description": "Resolve or reassign alerts to incidents.\n\nUse this tool to resolve multiple alerts or associate them with different incidents in PagerDuty. Only up to 250 alerts can be updated at a time. Ideal for managing alerts detected by monitoring systems that need resolution or reassessment.",
  "toolkit": {
    "name": "ArcadePagerdutyApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "incident_resource_id",
        "required": true,
        "description": "The unique identifier for the incident resource to be resolved or reassociated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the resource."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "versioning_header",
        "required": true,
        "description": "Specify the version of the API to be used for the request using the 'Accept' header.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Accept"
      },
      {
        "name": "content_type",
        "required": true,
        "description": "The media type of the request body. Use 'application/json'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "Content-Type"
      },
      {
        "name": "user_email",
        "required": true,
        "description": "The email address of a valid user associated with the account making the request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address of a valid user associated with the account making the request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "From"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "Specify the number of results to be returned per page. Must be an integer.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "pagination_offset",
        "required": false,
        "description": "Offset for pagination to specify where search results should begin.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Offset to start pagination search results."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "offset"
      },
      {
        "name": "alerts_payload",
        "required": false,
        "description": "JSON array of alerts with each alert's status and associated incident details. Max 250 alerts.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "alerts": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "resolved",
                    "triggered"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "incident": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "incident_reference"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                }
              },
              "description": "An array of alerts, including the parameters to update for each alert."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      },
      {
        "name": "populate_total",
        "required": false,
        "description": "Set to `true` to populate the `total` field in pagination responses, otherwise it remains `null` for faster response.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "total"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'updateIncidentAlerts'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-pagerduty",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Pagerduty API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.pagerduty.com/incidents/{id}/alerts",
    "http_method": "PUT",
    "headers": {},
    "parameters": [
      {
        "name": "limit",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results per page.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "offset",
        "tool_parameter_name": "pagination_offset",
        "description": "Offset to start pagination search results.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Offset to start pagination search results."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "total",
        "tool_parameter_name": "populate_total",
        "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.\n\nSee our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.\n"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "incident_resource_id",
        "description": "The ID of the resource.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the resource."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "Accept",
        "tool_parameter_name": "versioning_header",
        "description": "The `Accept` header is used as a versioning header.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The `Accept` header is used as a versioning header."
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/vnd.pagerduty+json;version=2",
        "documentation_urls": []
      },
      {
        "name": "Content-Type",
        "tool_parameter_name": "content_type",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "application/json"
          ],
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": "application/json",
        "documentation_urls": []
      },
      {
        "name": "From",
        "tool_parameter_name": "user_email",
        "description": "The email address of a valid user associated with the account making the request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address of a valid user associated with the account making the request."
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "alerts_payload",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "alerts": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "resolved",
                    "triggered"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "incident": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "type": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": [
                        "incident_reference"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                }
              },
              "description": "An array of alerts, including the parameters to update for each alert."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"alerts\": {\n            \"type\": \"array\",\n            \"description\": \"An array of alerts, including the parameters to update for each alert.\",\n            \"items\": {\n              \"type\": \"object\",\n              \"x-examples\": {\n                \"Example 1\": {\n                  \"status\": \"resolved\",\n                  \"incident\": {\n                    \"id\": \"string\",\n                    \"type\": \"incident_reference\"\n                  }\n                }\n              },\n              \"properties\": {\n                \"status\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"resolved\",\n                    \"triggered\"\n                  ]\n                },\n                \"incident\": {\n                  \"type\": \"object\",\n                  \"x-examples\": {\n                    \"Example 1\": {\n                      \"id\": \"string\",\n                      \"type\": \"incident_reference\"\n                    }\n                  },\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"incident_reference\"\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"id\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"required\": [\n          \"alerts\"\n        ]\n      },\n      \"examples\": {\n        \"request\": {\n          \"summary\": \"Request Example\",\n          \"value\": {\n            \"alerts\": [\n              {\n                \"id\": \"PPVZH9X\",\n                \"type\": \"alert\",\n                \"status\": \"resolved\"\n              },\n              {\n                \"id\": \"P8JOGX7\",\n                \"type\": \"alert\",\n                \"incident\": {\n                  \"id\": \"PPVZH9X\",\n                  \"type\": \"incident_reference\"\n                }\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
