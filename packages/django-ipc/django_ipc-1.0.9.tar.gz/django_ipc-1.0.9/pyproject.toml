[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[project]
name = "django-ipc"
version = "1.0.9"
description = "ðŸš€ Production-ready WebSocket RPC for Django - Auto-generated clients, 100% type-safe, 5-minute setup"
readme = "README.md"
keywords = [ "django", "websocket", "websocket-rpc", "django-websocket", "real-time", "django-real-time", "ipc", "redis", "pydantic", "type-safety", "django-ipc", "auto-generated-clients", "django-notifications", "websocket-server", "django-channels-alternative",]
classifiers = [ "Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing", "Typing :: Typed",]
requires-python = ">=3.10,<4.0"
dependencies = [ "pydantic>=2.11.0,<3.0", "websockets>=15.0,<16.0", "aiohttp>=3.11.0,<4.0", "redis>=6.4.0,<7.0", "hiredis>=2.0.0,<4.0", "PyJWT>=2.10.0,<3.0", "loguru>=0.7.0,<1.0", "jinja2>=3.1.0,<4.0", "rich>=14.1.0,<15.0", "packaging>=24.0",]
[[project.authors]]
name = "Django-CFG Team"
email = "info@djangocfg.com"

[[project.maintainers]]
name = "Django-CFG Team"
email = "info@djangocfg.com"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [ "pytest>=8.4,<9.0", "pytest-asyncio>=0.25,<1.0", "pytest-cov>=7.0,<8.0", "pytest-mock>=3.15,<4.0", "black>=25.9,<26.0", "isort>=6.0,<7.0", "mypy>=1.18,<2.0", "build>=1.3,<2.0", "twine>=6.2,<7.0",]
test = [ "pytest>=8.4,<9.0", "pytest-asyncio>=0.25,<1.0", "pytest-cov>=7.0,<8.0", "pytest-mock>=3.15,<4.0",]

[project.urls]
Homepage = "https://djangocfg.com"
Documentation = "https://djangocfg.com/docs/features/integrations/websocket-ipc"
"Quick Start" = "https://djangocfg.com/docs/features/integrations/websocket-ipc/quick-start"
"Live Demo" = "http://demo.djangocfg.com"
Repository = "https://github.com/markolofsen/django-ipc"
Issues = "https://github.com/markolofsen/django-ipc/issues"
"Django-CFG Framework" = "https://github.com/markolofsen/django-cfg"

[tool.black]
line-length = 100
target-version = [ "py310",]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
strict_optional = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
addopts = [ "--cov=django_ipc", "--cov-report=term-missing", "--cov-report=html", "--strict-markers", "--verbose",]
testpaths = [ "tests",]
markers = [ "unit: marks tests as unit tests", "integration: marks tests as integration tests",]

[tool.coverage.run]
source = [ "src/django_ipc",]
omit = [ "*/tests/*", "*/__pycache__/*",]

[tool.hatch.build.targets.wheel]
packages = [ "src/django_ipc",]

[tool.hatch.build.targets.sdist]
include = [ "src/django_ipc", "README.md", "LICENSE", "CHANGELOG.md", "requirements*.txt", "MANIFEST.in",]
exclude = [ "tests", "*.log", ".env*",]

[tool.hatch.build.targets.wheel.force-include]
"README.md" = "django_ipc/README.md"
"pyproject.toml" = "django_ipc/pyproject.toml"
