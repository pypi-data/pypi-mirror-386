# CrashLens Policy Template: Prompt Optimization
# Cost optimization through better prompt engineering

metadata:
  name: "Prompt Optimization"
  description: "Optimize prompts for better cost efficiency"
  category: "cost_optimization"
  severity_level: "medium"
  estimated_savings: "15-30%"
  
rules:
  - id: excessive_prompt_length
    description: "Flag unnecessarily long prompts"
    match:
      prompt_tokens: ">4000"
    action: warn
    severity: medium
    suggestion: |
      Excessively long prompt detected.
      Optimization strategies:
      - Remove redundant instructions
      - Use more concise language
      - Break complex prompts into sequential calls
      - Consider fine-tuning for repeated verbose prompts
    cost_impact: "medium"
    
  - id: inefficient_prompt_ratio
    description: "Detect prompts that generate small completions (inefficient)"
    match:
      prompt_tokens: ">500"
      completion_tokens: "<50"
    action: warn
    severity: low
    suggestion: |
      Large prompt with small completion detected.
      Efficiency improvements:
      - Review if prompt is overly verbose
      - Consider breaking into smaller prompts
      - Check if task could be simplified
    cost_impact: "medium" 
    
  - id: expensive_long_prompts
    description: "Very expensive prompts with premium models"
    match:
      model: ["gpt-4", "gpt-4-turbo", "gpt-4o"]
      prompt_tokens: ">2000"
      cost: ">0.10"
    action: fail
    severity: high
    suggestion: |
      Very expensive long prompt with premium model.
      Cost reduction strategies:
      - Use cheaper models for long prompts when possible
      - Break down into smaller chunks
      - Optimize prompt structure
      - Consider prompt compression techniques
    cost_impact: "very_high"
    
  - id: small_task_long_prompt
    description: "Short responses from long prompts indicate inefficiency"
    match:
      prompt_tokens: ">1000"
      completion_tokens: "<100"
    action: warn
    severity: medium
    suggestion: |
      Long prompt produced short response - potential inefficiency.
      Consider:
      - Simplifying the prompt
      - Breaking into multiple focused requests
      - Using more direct instructions
    cost_impact: "medium"
