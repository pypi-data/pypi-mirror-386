# coding: utf-8

"""
    OurSky SDA

    The basic flow for a new organization is as follows: 1. View the available satellite targets with the [satellite targets](#tag/satellite-targets/GET/v1/satellite-targets) endpoint. Copy the id of the target you want to observe. 2. Create an organization target with the [organization target](#tag/organization-targets/GET/v1/organization-targets) endpoint. Use the id copied from above. 3. Create a webhook with the [webhook](#tag/webhooks/POST/v1/communications/webhook) endpoint to receive OSRs automatically (preferred) or use the [OSRs](#tag/observation-sequence-results/GET/v1/observation-sequence-results) endpoint to poll for OSRs.  Check out our [examples](https://github.com/ourskyai/oursky-examples) repository to see usage in each language.

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ourskyai_sda_api.models.v1_image_metadata import V1ImageMetadata  # noqa: E501

class TestV1ImageMetadata(unittest.TestCase):
    """V1ImageMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ImageMetadata:
        """Test V1ImageMetadata
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1ImageMetadata`
        """
        model = V1ImageMetadata()  # noqa: E501
        if include_optional:
            return V1ImageMetadata(
                id = '',
                image_id = '',
                plate_solve_result = ourskyai_sda_api.models.v1_plate_solve_result.V1PlateSolveResult(
                    status = 'MATCH_FOUND', 
                    matched_stars = [
                        ourskyai_sda_api.models.v1_matched_star.V1MatchedStar(
                            x_centroid = 1.337, 
                            y_centroid = 1.337, 
                            sequence_number = 56, 
                            magnitude = 1.337, 
                            ra_rad = 1.337, 
                            dec_rad = 1.337, 
                            catalog_offset_rad = 1.337, 
                            catalog_offset_magnitude = 1.337, 
                            flux = 56, 
                            hfr = 1.337, )
                        ], 
                    pixel_width = 56, 
                    pixel_height = 56, 
                    number_matched_stars = 56, 
                    center_right_ascension_radians = 1.337, 
                    center_declination_radians = 1.337, 
                    x_size_radians = 1.337, 
                    y_size_radians = 1.337, 
                    is_matched = True, 
                    transformation = ourskyai_sda_api.models.v1_transformation.V1Transformation(
                        a = 1.337, 
                        b = 1.337, 
                        c = 1.337, 
                        d = 1.337, 
                        u0 = 1.337, 
                        v0 = 1.337, 
                        alpha = 1.337, 
                        beta = 1.337, 
                        theta = 1.337, 
                        gamma = 1.337, 
                        eps_x = 1.337, 
                        eps_y = 1.337, 
                        ra_cen = 1.337, 
                        dec_cen = 1.337, 
                        px = 1.337, 
                        py = 1.337, 
                        u_coef = [
                            1.337
                            ], 
                        v_coef = [
                            1.337
                            ], 
                        x_coef = [
                            1.337
                            ], 
                        y_coef = [
                            1.337
                            ], 
                        num_coef = 56, 
                        fit_error_radians = 1.337, 
                        fit_error_pix = 1.337, 
                        fit_error3_radians = 1.337, 
                        fit_error3_pix = 1.337, 
                        stretch = 1.337, 
                        skew = 1.337, 
                        scale = 1.337, 
                        rotation = 1.337, ), ),
                input_stars = [
                    ourskyai_sda_api.models.v1_hfr_star.V1HFRStar(
                        coordinates = ourskyai_sda_api.models.v1_pixel_coordinates.V1PixelCoordinates(
                            x = 1.337, 
                            y = 1.337, ), 
                        hfr = 1.337, 
                        flux = 56, )
                    ],
                sip_coefficients = ourskyai_sda_api.models.v1_sip_coefficients.V1SIPCoefficients(
                    order = 56, 
                    a = [
                        [
                            1.337
                            ]
                        ], 
                    b = [
                        [
                            1.337
                            ]
                        ], 
                    cd1_1 = 1.337, 
                    cd1_2 = 1.337, 
                    cd2_1 = 1.337, 
                    cd2_2 = 1.337, 
                    coordinate_reference_pixel_x = 1.337, 
                    coordinate_reference_pixel_y = 1.337, 
                    coordinate_reference_ra_degrees = 1.337, 
                    coordinate_reference_dec_degrees = 1.337, ),
                photometric_zero_point = 1.337,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return V1ImageMetadata(
                id = '',
                image_id = '',
                plate_solve_result = ourskyai_sda_api.models.v1_plate_solve_result.V1PlateSolveResult(
                    status = 'MATCH_FOUND', 
                    matched_stars = [
                        ourskyai_sda_api.models.v1_matched_star.V1MatchedStar(
                            x_centroid = 1.337, 
                            y_centroid = 1.337, 
                            sequence_number = 56, 
                            magnitude = 1.337, 
                            ra_rad = 1.337, 
                            dec_rad = 1.337, 
                            catalog_offset_rad = 1.337, 
                            catalog_offset_magnitude = 1.337, 
                            flux = 56, 
                            hfr = 1.337, )
                        ], 
                    pixel_width = 56, 
                    pixel_height = 56, 
                    number_matched_stars = 56, 
                    center_right_ascension_radians = 1.337, 
                    center_declination_radians = 1.337, 
                    x_size_radians = 1.337, 
                    y_size_radians = 1.337, 
                    is_matched = True, 
                    transformation = ourskyai_sda_api.models.v1_transformation.V1Transformation(
                        a = 1.337, 
                        b = 1.337, 
                        c = 1.337, 
                        d = 1.337, 
                        u0 = 1.337, 
                        v0 = 1.337, 
                        alpha = 1.337, 
                        beta = 1.337, 
                        theta = 1.337, 
                        gamma = 1.337, 
                        eps_x = 1.337, 
                        eps_y = 1.337, 
                        ra_cen = 1.337, 
                        dec_cen = 1.337, 
                        px = 1.337, 
                        py = 1.337, 
                        u_coef = [
                            1.337
                            ], 
                        v_coef = [
                            1.337
                            ], 
                        x_coef = [
                            1.337
                            ], 
                        y_coef = [
                            1.337
                            ], 
                        num_coef = 56, 
                        fit_error_radians = 1.337, 
                        fit_error_pix = 1.337, 
                        fit_error3_radians = 1.337, 
                        fit_error3_pix = 1.337, 
                        stretch = 1.337, 
                        skew = 1.337, 
                        scale = 1.337, 
                        rotation = 1.337, ), ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testV1ImageMetadata(self):
        """Test V1ImageMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
