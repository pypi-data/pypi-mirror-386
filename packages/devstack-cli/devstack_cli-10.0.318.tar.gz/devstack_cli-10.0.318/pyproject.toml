[project]
name = "devstack-cli"
version = "10.0.318"
authors = [
    { name="Stefan MÃ¼ckstein", email="stefan@cloudomation.com" },
]
description = "Command-line access to Cloud Development Environments (CDEs) created by Cloudomation DevStack"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "paramiko",
    "watchdog",
    "rich",
    "pyyaml",
    "asyncssh",
    "aiohttp",
    "aiofiles",
    "yarl",
]

[project.urls]
Homepage = "https://cloudomation.com/"
Documentation = "https://docs.cloudomation.com/devstack/"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[project.scripts]
devstack-cli = "cli:main"

[tool.ruff]
select = ["ALL"]
ignore = ["E501", "ERA001", "TRY003", "EM102", "EM101", "D100", "ARG002", "D300", "D205", "D212", "D", "TRY301", "PLC1901", "BLE001", "PERF203", "FA100", "ANN401", "PLR0913", "ANN002", "ANN003", "RET504", "PLR2004"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = ["D", "Q001", "Q002", "F841"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests/",
    "tests_sandbox/",
    "alembic/",
    "map_async_iterator.py",
    "flow_api/",
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8.
target-version = "py38"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"
docstring-quotes = "double"
