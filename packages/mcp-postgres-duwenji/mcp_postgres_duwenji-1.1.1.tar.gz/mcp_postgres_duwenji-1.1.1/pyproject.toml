[project]
name = "mcp-postgres-duwenji"
version = "1.1.1"
description = "MCP server for PostgreSQL database operations"
authors = [
    { name = "mcp-postgres" },
     { name="duwenji", email="duwenji@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "build>=1.3.0",
    "mcp>=1.0.0",
    "psycopg2-binary>=2.9.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "twine>=6.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "freezegun>=1.0.0",
    "bandit>=1.7.0",
]

[project.scripts]
mcp_postgres_duwenji = "mcp_postgres_duwenji.main:cli_main"

[build-system]
requires = ["uv_build >= 0.9.2, <0.10.0"]
build-backend = "uv_build"

[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["test"]


[tool.uv]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.0.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "freezegun>=1.0.0",
    "bandit>=1.7.0",
    "types-psycopg2>=2.9.21.20251012",
]
# UV-specific configuration
# This enables better integration with UV package manager