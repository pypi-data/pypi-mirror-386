[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "fastapi-commons"
dynamic = ["version"]
description = "Re-usable FastAPI code"
authors = [
    {name = "Oleg Korsak", email = "kamikaze.is.waiting.you@gmail.com"}
]
license = "GPL-3.0"
readme = {file = "README.rst", content-type = "text/x-rst"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python"
]
keywords = []
requires-python = ">=3.13.9,<3.15.0"
dependencies = [
    "aiohttp[speedups]>=3.12.0,<3.15.0",
    "asyncpg~=0.30.0",
    "fastapi-users-db-sqlalchemy~=7.0.0",
    "fastapi-users[sqlalchemy]~=15.0.1",
    "msgspec~=0.19.0",
    "pydantic[email]~=2.12.0",
    "pydantic-settings~=2.11.0",
    "python-jose==3.5.0",
    "SQLAlchemy==2.0.44",
    "opentelemetry-api~=1.38.0",
    "opentelemetry-sdk~=1.38.0",
    "opentelemetry-exporter-otlp~=1.38.0",
    "opentelemetry-instrumentation-fastapi~=0.58b0",
    "opentelemetry-instrumentation-logging~=0.58b0",
    "prometheus-client~=0.23.1",
]

[dependency-groups]
dev = [
    "build",
    "pip",
    "pre-commit",
    "pyright",
    "ruff",
    "setuptools",
    "setuptools_scm",
    "types-aiobotocore-s3",
    "wheel",
]
testing = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
]

[project.urls]
Homepage = "https://github.com/kamikaze/fastapi-commons"
Documentation = "https://github.com/kamikaze/fastapi-commons/wiki"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]

[tool.setuptools_scm]

[tool.bdist_wheel]
universal = true

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py313"

[tool.ruff.analyze]
detect-string-imports = true

[tool.ruff.lint]
select = [
    "FAST",
    "YTT",
#    "ANN",
    "I",
    "E",
    "W",
    "PYI",

    "A",
#    "ARG",
    "ASYNC",
    "B",
    "C4",
#    "DTZ",
    "EM",
    "EXE",
    "F",
    "FA",
    "FBT",
    "FLY",
    "FURB",
#    "G",
    "ICN",
    "INP",
    "ISC",
    "LOG",
    "N",
    "NPY",
    "PD",
    "PERF",
    "PIE",
    "PLC",
    "PLE",
#    "PLR",
    "PLW",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T20",
    "TC",
    "TID",
    "TRY",
    "UP",
]
ignore = [
    "ASYNC109",
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["DTZ", "S101"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
exclude = ["*.pyi"]
indent-style = "space"
quote-style = "single"

[tool.pyright]
venvPath = "."
venv = ".venv"
reportMatchNotExhaustive = "error"
reportUnnecessaryComparison = "error"

[tool.pytest.ini_options]
pythonpath = ["src"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov fastapi_commons --cov-fail-under=20 --cov-report term-missing --verbose"
norecursedirs = ["dist", "build", ".tox"]
testpaths = ["tests"]
