# coding: utf-8

# flake8: noqa

"""
NuExtract Platform

 NB: you can also interact with this API via the [Python SDK](https://github.com/numindai/nuextract-platform-sdk).  ## Extracting Information from Documents  Once your project is ready, you can use it to extract information from documents in real time via this RESTful API.  Each project has its own extraction endpoint:  `https://nuextract.ai/api/projects/{projectId}/extract`  You provide it a document and it returns the extracted information according to the task defined in the project. To use it, you need:  - To create an API key in the [Account section](https://nuextract.ai/app/user?content=api) - To replace `{projectId}` by the project ID found in the API tab of the project  You can test your extraction endpoint in your terminal using this command-line example with curl (make sure that you replace values of `PROJECT_ID` and `NUEXTRACT_API_KEY`):  ```bash NUEXTRACT_API_KEY=\"_your_api_key_here_\"; \\ PROJECT_ID=\"a24fd84a-44ab-4fd4-95a9-bebd46e4768b\"; \\ curl \"https://nuextract.ai/api/projects/${PROJECT_ID}/extract\" \\   -X POST \\   -H \"Authorization: Bearer ${NUEXTRACT_API_KEY}\" \\   -H \"Content-Type: application/octet-stream\" \\   --data-binary @\"${FILE_NAME}\" ```  You can also use the [Python SDK](https://github.com/numindai/nuextract-platform-sdk#documentation), by replacing the `project_id`, `api_key` and `file_path` variables in the following code:  ```python from numind import NuMind from pathlib import Path  client = NuMind(api_key=api_key) file_path = Path(\"path\", \"to\", \"document.odt\") with file_path.open(\"rb\") as file:     input_file = file.read() output_schema = client.post_api_projects_projectid_extract(project_id, input_file) ```  ## Using the Platform via API  Everything you can do on the web platform can be done via API -  check the [user guide](https://www.notion.so/User-Guide-17c16b1df8c580d3a579ebfb24ddbea7?pvs=21) to learn about how the platform works.  This can be useful to create projects automatically, or to make your production more robust for example.  ### Main resources  - **Project** - user project, identified by `projectId` - **File** - uploaded file,  identified by `fileId`, stored up to two weeks if not tied to an **Example** - **Document** - internal representation of a document, identified by `documentId`, created from a File or a text, stored up to two weeks if not tied to an Example - **Example** - document-extraction pair given to teach NuExtract, identified by `exampleId`, created from a Document  ### Most common API operations  - Creating a **Project** via `POST /api/projects` - Changing the template of a **Project** via `PATCH /api/projects/{projectId}` - Uploading a file to a **File** via `POST /api/files` (up to 2 weeks storage) - Creating a **Document** via `POST /api/documents/text` and `POST /api/files/{fileID}/convert-to-document` from a text or a **File** - Adding an **Example** to a **Project** via `POST /api/projects/{projectId}/examples` - Changing Project settings via `POST /api/projects/{projectId}/settings` - Locking a **Project** via `POST /api/projects/{projectId}/lock`  ## Testing with a temporary authorization  This documentation allows to directly test the API. You first need to select `oauth2uth` in the \"Authentication\" box, set the `Client ID` value to `user`, and click on \"Authorize\". You can then go to an API endpoint, e.g.  `POST /api/{projectID}/extract`, press “Test Request”, fill out the body (you can upload a document in this case), and press “Send” to get the output.

The version of the OpenAPI document:
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

__version__ = "1.0.0"

# Define package exports
__all__ = [
    "DocumentsApi",
    "ExamplesApi",
    "ExtractionApi",
    "FilesApi",
    "InferenceApi",
    "JobsApi",
    "OrganizationsApi",
    "PlaygroundApi",
    "ProjectManagementApi",
    "DefaultApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "ApiKeyResponse",
    "ConvertRequest",
    "CreateApiKey",
    "CreateOrUpdateExampleRequest",
    "CreateOrUpdatePlaygroundItemRequest",
    "CreateOrganizationRequest",
    "CreateProjectRequest",
    "DocumentInfo",
    "DocumentResponse",
    "Error",
    "ExampleResponse",
    "ExtractionResponse",
    "FileResponse",
    "HealthResponse",
    "ImageInfo",
    "InferenceResponse",
    "InformationResponse",
    "InvalidInformation",
    "InvitationResponse",
    "InviteMemberRequest",
    "JobIdResponse",
    "JobResponse",
    "MemberResponse",
    "OrganizationResponse",
    "PlaygroundItemResponse",
    "ProjectResponse",
    "ProjectSettingsResponse",
    "RawResult",
    "ServiceStatus",
    "TemplateRequest",
    "TextInfo",
    "TextRequest",
    "TokenCodeRequest",
    "TokenRefreshRequest",
    "TokenRequest",
    "TokenResponse",
    "UpdateApiKey",
    "UpdateOrganizationRequest",
    "UpdateProjectRequest",
    "UpdateProjectSettingsRequest",
    "UpdateProjectTemplateRequest",
    "User",
    "ValidInformation",
    "VersionResponse",
]

# import apis into sdk package
from numind.openapi_client.api.documents_api import DocumentsApi as DocumentsApi
from numind.openapi_client.api.examples_api import ExamplesApi as ExamplesApi
from numind.openapi_client.api.extraction_api import ExtractionApi as ExtractionApi
from numind.openapi_client.api.files_api import FilesApi as FilesApi
from numind.openapi_client.api.inference_api import InferenceApi as InferenceApi
from numind.openapi_client.api.jobs_api import JobsApi as JobsApi
from numind.openapi_client.api.organizations_api import (
    OrganizationsApi as OrganizationsApi,
)
from numind.openapi_client.api.playground_api import PlaygroundApi as PlaygroundApi
from numind.openapi_client.api.project_management_api import (
    ProjectManagementApi as ProjectManagementApi,
)
from numind.openapi_client.api.default_api import DefaultApi as DefaultApi

# import ApiClient
from numind.api_response import ApiResponse as ApiResponse
from numind.openapi_client.api_client import ApiClient as ApiClient
from numind.openapi_client.configuration import Configuration as Configuration
from numind.exceptions import OpenApiException as OpenApiException
from numind.exceptions import ApiTypeError as ApiTypeError
from numind.exceptions import ApiValueError as ApiValueError
from numind.exceptions import ApiKeyError as ApiKeyError
from numind.exceptions import ApiAttributeError as ApiAttributeError
from numind.exceptions import ApiException as ApiException

# import models into sdk package
from numind.models.api_key_response import ApiKeyResponse as ApiKeyResponse
from numind.models.convert_request import ConvertRequest as ConvertRequest
from numind.models.create_api_key import CreateApiKey as CreateApiKey
from numind.models.create_or_update_example_request import (
    CreateOrUpdateExampleRequest as CreateOrUpdateExampleRequest,
)
from numind.models.create_or_update_playground_item_request import (
    CreateOrUpdatePlaygroundItemRequest as CreateOrUpdatePlaygroundItemRequest,
)
from numind.models.create_organization_request import (
    CreateOrganizationRequest as CreateOrganizationRequest,
)
from numind.models.create_project_request import (
    CreateProjectRequest as CreateProjectRequest,
)
from numind.models.document_info import DocumentInfo as DocumentInfo
from numind.models.document_response import DocumentResponse as DocumentResponse
from numind.models.error import Error as Error
from numind.models.example_response import ExampleResponse as ExampleResponse
from numind.models.extraction_response import ExtractionResponse as ExtractionResponse
from numind.models.file_response import FileResponse as FileResponse
from numind.models.health_response import HealthResponse as HealthResponse
from numind.models.image_info import ImageInfo as ImageInfo
from numind.models.inference_response import InferenceResponse as InferenceResponse
from numind.models.information_response import (
    InformationResponse as InformationResponse,
)
from numind.models.invalid_information import InvalidInformation as InvalidInformation
from numind.models.invitation_response import InvitationResponse as InvitationResponse
from numind.models.invite_member_request import (
    InviteMemberRequest as InviteMemberRequest,
)
from numind.models.job_id_response import JobIdResponse as JobIdResponse
from numind.models.job_response import JobResponse as JobResponse
from numind.models.member_response import MemberResponse as MemberResponse
from numind.models.organization_response import (
    OrganizationResponse as OrganizationResponse,
)
from numind.models.playground_item_response import (
    PlaygroundItemResponse as PlaygroundItemResponse,
)
from numind.models.project_response import ProjectResponse as ProjectResponse
from numind.models.project_settings_response import (
    ProjectSettingsResponse as ProjectSettingsResponse,
)
from numind.models.raw_result import RawResult as RawResult
from numind.models.service_status import ServiceStatus as ServiceStatus
from numind.models.template_request import TemplateRequest as TemplateRequest
from numind.models.text_info import TextInfo as TextInfo
from numind.models.text_request import TextRequest as TextRequest
from numind.models.token_code_request import TokenCodeRequest as TokenCodeRequest
from numind.models.token_refresh_request import (
    TokenRefreshRequest as TokenRefreshRequest,
)
from numind.models.token_request import TokenRequest as TokenRequest
from numind.models.token_response import TokenResponse as TokenResponse
from numind.models.update_api_key import UpdateApiKey as UpdateApiKey
from numind.models.update_organization_request import (
    UpdateOrganizationRequest as UpdateOrganizationRequest,
)
from numind.models.update_project_request import (
    UpdateProjectRequest as UpdateProjectRequest,
)
from numind.models.update_project_settings_request import (
    UpdateProjectSettingsRequest as UpdateProjectSettingsRequest,
)
from numind.models.update_project_template_request import (
    UpdateProjectTemplateRequest as UpdateProjectTemplateRequest,
)
from numind.models.user import User as User
from numind.models.valid_information import ValidInformation as ValidInformation
from numind.models.version_response import VersionResponse as VersionResponse
