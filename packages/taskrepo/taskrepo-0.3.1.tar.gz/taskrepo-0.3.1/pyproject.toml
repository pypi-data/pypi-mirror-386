[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "taskrepo"
dynamic = ["version"]
authors = [
    { name = "Ricardo Henriques", email = "paxcalpt@gmail.com" }
]
keywords = ["task-management", "git", "markdown", "cli", "taskwarrior", "productivity"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Office/Business :: Scheduling",
]
description = "TaskWarrior-inspired CLI for managing tasks as markdown files in git repositories"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.0.0",
    "prompt_toolkit>=3.0.0",
    "GitPython>=3.1.0",
    "PyYAML>=6.0.0",
    "rich>=13.0.0",
    "python-dateutil>=2.8.0",
    "dateparser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/henriqueslab/TaskRepo"
Repository = "https://github.com/henriqueslab/TaskRepo"
Issues = "https://github.com/henriqueslab/TaskRepo/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4,<9.0",
    "pytest-cov>=4.0",
    "ruff>=0.12.2",
    "mypy>=1.0",
    "pre-commit>=4.2.0",
    "types-PyYAML>=6.0.0",
    "types-python-dateutil>=2.8.0",
    "types-dateparser>=1.0.0",
]

# Ruff configuration
[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "D",    # pydocstyle
]

ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["taskrepo"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
check_untyped_defs = true
explicit_package_bases = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
]

# Hatch configuration
[tool.hatch.version]
path = "src/taskrepo/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/taskrepo"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml"
]

# Console scripts entry point
[project.scripts]
taskrepo = "taskrepo.cli.main:cli"
tsk = "taskrepo.cli.main:cli"
