Metadata-Version: 2.4
Name: wagtail-enap-designsystem
Version: 1.2.1.200
Summary: M√≥dulo de componentes utilizado nos portais ENAP, desenvolvido com Wagtail + CodeRedCMS
Author: Renan Campos
Author-email: renan.oliveira@enap.gov.br
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: django>=3.2
Requires-Dist: wagtail==6.4
Requires-Dist: coderedcms==4.1
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: license-file
Dynamic: requires-dist
Dynamic: summary

# üì¶ Enap Design System - M√≥dulo para Wagtail

Este √© um m√≥dulo customizado para o **Wagtail**, criado para facilitar a implementa√ß√£o de layouts e componentes reutiliz√°veis no CMS.

### üõ´ Outros READMEs
 README.md, doc geral do projeto [README.md](README.md)
 README-use.md, doc do uso do m√≥dulo [README-use.md](README-use.md) [ATUAL]
 README-pypi.md, doc subir pacote pypi [README-pypi.md](README-pypi.md)


# ENAP Design System

O **ENAP Design System** √© um m√≥dulo para o Wagtail, baseado no CodeRedCMS, que fornece componentes reutiliz√°veis e templates pr√©-configurados para facilitar a cria√ß√£o de sites institucionais.

## Instala√ß√£o

Para instalar o pacote via PyPI, utilize:

```bash
pip install wagtail-enap-designsystem
```

### Requisitos

- **Wagtail 6.4+**
- **CodeRedCMS 4.1.1+**
- **Django 4+**

## Configura√ß√£o

Ap√≥s a instala√ß√£o, adicione `enap_designsystem` ao seu `INSTALLED_APPS` no `settings.py`:

```python
INSTALLED_APPS = [
    "enap_designsystem",
    "coderedcms",  # Certifique-se de que o CodeRedCMS est√° instalado

    # ... outros m√≥dulos, como por exemplo: ...
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail",
    "taggit",
    "modelcluster",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]
```

### Executando Migra√ß√µes

Ap√≥s a instala√ß√£o e configura√ß√£o, rode as migra√ß√µes para garantir que todas as tabelas necess√°rias sejam criadas:

```bash
python manage.py migrate
```

## Uso

O `enap_designsystem` adiciona os seguintes recursos ao seu projeto:

- **ENAPLayout**: P√°gina base herdando de `CoderedWebPage`, com suporte a anota√ß√µes.
- **RootPage**: P√°gina raiz configurada para permitir apenas subp√°ginas do tipo `ENAPLayout`.
- **Componentes Wagtail**: Blocos personalizados para layouts institucionais.
- **Templates Pr√©-preenchidos**: Modelos prontos para diferentes tipos de p√°ginas.

### Criando uma P√°gina com ENAPLayout

No painel administrativo do Wagtail, ao criar uma nova p√°gina, selecione **ENAPLayout** para utilizar os templates e funcionalidades do m√≥dulo.

## Cache

Se estiver utilizando `wagtailcache`, certifique-se de configurar corretamente o cache, pois a fun√ß√£o `cache_clear` ainda n√£o tem suporte completo:

```python
WAGTAIL_CACHE_BACKEND = "default"
```

## Desenvolvimento

(OPCIONAL dev)
**Se estiver contribuindo para o desenvolvimento do m√≥dulo**, clone o reposit√≥rio e instale no modo `editable`:

```bash
git clone https://github.com/seu-org/enap_designsystem.git
cd enap_designsystem
pip install -e .
```

Para rodar o ambiente de desenvolvimento:

```bash
python manage.py runserver
```

## Contribuindo

Pull requests s√£o bem-vindos! Para sugest√µes e melhorias, abra uma issue no reposit√≥rio oficial.

---

üèõÔ∏è **Desenvolvido por ENAP** 
