from __future__ import annotations
import pxr.UsdLux._usdLux
import typing
import Boost.Python
import pxr.Usd
import pxr.UsdGeom
import pxr.UsdLux

__all__ = [
    "BlackbodyTemperatureAsRgb",
    "BoundableLightBase",
    "CylinderLight",
    "DiskLight",
    "DistantLight",
    "DomeLight",
    "DomeLight_1",
    "GeometryLight",
    "LightAPI",
    "LightFilter",
    "LightListAPI",
    "ListAPI",
    "MeshLightAPI",
    "NonboundableLightBase",
    "PluginLight",
    "PluginLightFilter",
    "PortalLight",
    "RectLight",
    "ShadowAPI",
    "ShapingAPI",
    "SphereLight",
    "Tokens",
    "VolumeLightAPI"
]


class CylinderLight(BoundableLightBase, pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateLengthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTreatAsLineAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLengthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTreatAsLineAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class DiskLight(BoundableLightBase, pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class BoundableLightBase(pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def LightAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class DistantLight(NonboundableLightBase, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateAngleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetAngleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class DomeLight(NonboundableLightBase, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateGuideRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreatePortalsRel(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTextureFormatAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetGuideRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPortalsRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTextureFormatAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def OrientToStageUpAxis(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class DomeLight_1(NonboundableLightBase, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateGuideRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreatePoleAxisAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreatePortalsRel(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTextureFormatAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetGuideRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPoleAxisAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPortalsRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTextureFormatAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class GeometryLight(NonboundableLightBase, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateGeometryRel(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetGeometryRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class LightAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateMaterialSyncModeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShaderIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShaderIdAttrForRenderContext(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLightLinkCollectionAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialSyncModeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderIdAttrForRenderContext(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowLinkCollectionAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class LightFilter(pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShaderIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShaderIdAttrForRenderContext(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFilterLinkCollectionAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderIdAttrForRenderContext(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class LightListAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    class ComputeMode(pxr.Tf.Tf_PyEnumWrapper, pxr.Tf.Enum, Boost.Python.instance):
        @staticmethod
        def GetValueFromName(*args, **kwargs) -> None: ...
        _baseName = 'LightListAPI'
        allValues: tuple # value = (UsdLux.LightListAPI.ComputeModeConsultModelHierarchyCache, UsdLux.LightListAPI.ComputeModeIgnoreCache)
        pass
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateLightListCacheBehaviorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateLightListRel(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLightListCacheBehaviorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLightListRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def InvalidateLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def StoreLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    ComputeModeConsultModelHierarchyCache: pxr.UsdLux.ComputeMode # value = UsdLux.LightListAPI.ComputeModeConsultModelHierarchyCache
    ComputeModeIgnoreCache: pxr.UsdLux.ComputeMode # value = UsdLux.LightListAPI.ComputeModeIgnoreCache
    __instance_size__ = 56
    pass
class ListAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    class ComputeMode(pxr.Tf.Tf_PyEnumWrapper, pxr.Tf.Enum, Boost.Python.instance):
        @staticmethod
        def GetValueFromName(*args, **kwargs) -> None: ...
        _baseName = 'ListAPI'
        allValues: tuple # value = (UsdLux.ListAPI.ComputeModeConsultModelHierarchyCache, UsdLux.ListAPI.ComputeModeIgnoreCache)
        pass
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateLightListCacheBehaviorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateLightListRel(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLightListCacheBehaviorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLightListRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def InvalidateLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def StoreLightList(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    ComputeModeConsultModelHierarchyCache: pxr.UsdLux.ComputeMode # value = UsdLux.ListAPI.ComputeModeConsultModelHierarchyCache
    ComputeModeIgnoreCache: pxr.UsdLux.ComputeMode # value = UsdLux.ListAPI.ComputeModeIgnoreCache
    __instance_size__ = 56
    pass
class MeshLightAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class NonboundableLightBase(pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDiffuseAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetEnableColorTemperatureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetExposureAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFiltersRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetIntensityAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSpecularAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def LightAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class PluginLight(pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNodeDefAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class PluginLightFilter(LightFilter, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNodeDefAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class PortalLight(BoundableLightBase, pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateHeightAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateWidthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetHeightAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetWidthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class RectLight(BoundableLightBase, pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateHeightAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateWidthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetHeightAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTextureFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetWidthAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class ShadowAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShadowColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShadowDistanceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShadowEnableAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShadowFalloffAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShadowFalloffGammaAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowColorAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowDistanceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowEnableAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowFalloffAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShadowFalloffGammaAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class ShapingAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingConeAngleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingConeSoftnessAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingFocusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingFocusTintAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingIesAngleScaleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingIesFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateShapingIesNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingConeAngleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingConeSoftnessAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingFocusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingFocusTintAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingIesAngleScaleAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingIesFileAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShapingIesNormalizeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class SphereLight(BoundableLightBase, pxr.UsdGeom.Boundable, pxr.UsdGeom.Xformable, pxr.UsdGeom.Imageable, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CreateRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateTreatAsPointAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRadiusAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTreatAsPointAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class Tokens(Boost.Python.instance):
    BoundableLightBase = 'BoundableLightBase'
    CylinderLight = 'CylinderLight'
    DiskLight = 'DiskLight'
    DistantLight = 'DistantLight'
    DomeLight = 'DomeLight'
    DomeLight_1 = 'DomeLight_1'
    GeometryLight = 'GeometryLight'
    LightAPI = 'LightAPI'
    LightFilter = 'LightFilter'
    LightListAPI = 'LightListAPI'
    ListAPI = 'ListAPI'
    MeshLight = 'MeshLight'
    MeshLightAPI = 'MeshLightAPI'
    NonboundableLightBase = 'NonboundableLightBase'
    PluginLight = 'PluginLight'
    PluginLightFilter = 'PluginLightFilter'
    PortalLight = 'PortalLight'
    RectLight = 'RectLight'
    ShadowAPI = 'ShadowAPI'
    ShapingAPI = 'ShapingAPI'
    SphereLight = 'SphereLight'
    VolumeLight = 'VolumeLight'
    VolumeLightAPI = 'VolumeLightAPI'
    Y = 'Y'
    Z = 'Z'
    angular = 'angular'
    automatic = 'automatic'
    collectionFilterLinkIncludeRoot = 'collection:filterLink:includeRoot'
    collectionLightLinkIncludeRoot = 'collection:lightLink:includeRoot'
    collectionShadowLinkIncludeRoot = 'collection:shadowLink:includeRoot'
    consumeAndContinue = 'consumeAndContinue'
    consumeAndHalt = 'consumeAndHalt'
    cubeMapVerticalCross = 'cubeMapVerticalCross'
    filterLink = 'filterLink'
    geometry = 'geometry'
    guideRadius = 'guideRadius'
    ignore = 'ignore'
    independent = 'independent'
    inputsAngle = 'inputs:angle'
    inputsColor = 'inputs:color'
    inputsColorTemperature = 'inputs:colorTemperature'
    inputsDiffuse = 'inputs:diffuse'
    inputsEnableColorTemperature = 'inputs:enableColorTemperature'
    inputsExposure = 'inputs:exposure'
    inputsHeight = 'inputs:height'
    inputsIntensity = 'inputs:intensity'
    inputsLength = 'inputs:length'
    inputsNormalize = 'inputs:normalize'
    inputsRadius = 'inputs:radius'
    inputsShadowColor = 'inputs:shadow:color'
    inputsShadowDistance = 'inputs:shadow:distance'
    inputsShadowEnable = 'inputs:shadow:enable'
    inputsShadowFalloff = 'inputs:shadow:falloff'
    inputsShadowFalloffGamma = 'inputs:shadow:falloffGamma'
    inputsShapingConeAngle = 'inputs:shaping:cone:angle'
    inputsShapingConeSoftness = 'inputs:shaping:cone:softness'
    inputsShapingFocus = 'inputs:shaping:focus'
    inputsShapingFocusTint = 'inputs:shaping:focusTint'
    inputsShapingIesAngleScale = 'inputs:shaping:ies:angleScale'
    inputsShapingIesFile = 'inputs:shaping:ies:file'
    inputsShapingIesNormalize = 'inputs:shaping:ies:normalize'
    inputsSpecular = 'inputs:specular'
    inputsTextureFile = 'inputs:texture:file'
    inputsTextureFormat = 'inputs:texture:format'
    inputsWidth = 'inputs:width'
    latlong = 'latlong'
    lightFilterShaderId = 'lightFilter:shaderId'
    lightFilters = 'light:filters'
    lightLink = 'lightLink'
    lightList = 'lightList'
    lightListCacheBehavior = 'lightList:cacheBehavior'
    lightMaterialSyncMode = 'light:materialSyncMode'
    lightShaderId = 'light:shaderId'
    materialGlowTintsLight = 'materialGlowTintsLight'
    mirroredBall = 'mirroredBall'
    noMaterialResponse = 'noMaterialResponse'
    orientToStageUpAxis = 'orientToStageUpAxis'
    poleAxis = 'poleAxis'
    portals = 'portals'
    scene = 'scene'
    shadowLink = 'shadowLink'
    treatAsLine = 'treatAsLine'
    treatAsPoint = 'treatAsPoint'
    pass
class VolumeLightAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class _CanApplyResult(Boost.Python.instance):
    @property
    def whyNot(self) -> None:
        """
        :type: None
        """
    __instance_size__ = 64
    pass
def BlackbodyTemperatureAsRgb(*args, **kwargs) -> None:
    pass
__MFB_FULL_PACKAGE_NAME = 'usdLux'
