from __future__ import annotations
import pxr.UsdShade._usdShade
import typing
import Boost.Python
import pxr.Usd
import pxr.UsdShade

__all__ = [
    "AttributeType",
    "ConnectableAPI",
    "ConnectionModification",
    "ConnectionSourceInfo",
    "CoordSysAPI",
    "Input",
    "Material",
    "MaterialBindingAPI",
    "NodeDefAPI",
    "NodeGraph",
    "Output",
    "Shader",
    "ShaderDefParserPlugin",
    "ShaderDefUtils",
    "Tokens",
    "UdimUtils",
    "Utils"
]


class AttributeType(Boost.Python.enum, int):
    Input = pxr.UsdShade.AttributeType.Input
    Invalid = pxr.UsdShade.AttributeType.Invalid
    Output = pxr.UsdShade.AttributeType.Output
    __slots__ = ()
    names = {'Invalid': pxr.UsdShade.AttributeType.Invalid, 'Input': pxr.UsdShade.AttributeType.Input, 'Output': pxr.UsdShade.AttributeType.Output}
    values = {0: pxr.UsdShade.AttributeType.Invalid, 1: pxr.UsdShade.AttributeType.Input, 2: pxr.UsdShade.AttributeType.Output}
    pass
class ConnectableAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def CanConnect(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSources(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectToSource(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def DisconnectSource(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRawConnectedSourcePaths(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def HasConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def HasConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def IsContainer(*args, **kwargs) -> None: ...
    @staticmethod
    def IsSourceConnectionFromBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def RequiresEncapsulation(*args, **kwargs) -> None: ...
    @staticmethod
    def SetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class ConnectionModification(Boost.Python.enum, int):
    Append = pxr.UsdShade.ConnectionModification.Append
    Prepend = pxr.UsdShade.ConnectionModification.Prepend
    Replace = pxr.UsdShade.ConnectionModification.Replace
    __slots__ = ()
    names = {'Replace': pxr.UsdShade.ConnectionModification.Replace, 'Prepend': pxr.UsdShade.ConnectionModification.Prepend, 'Append': pxr.UsdShade.ConnectionModification.Append}
    values = {0: pxr.UsdShade.ConnectionModification.Replace, 1: pxr.UsdShade.ConnectionModification.Prepend, 2: pxr.UsdShade.ConnectionModification.Append}
    pass
class ConnectionSourceInfo(Boost.Python.instance):
    @staticmethod
    def IsValid(*args, **kwargs) -> None: ...
    @property
    def source(self) -> None:
        """
        :type: None
        """
    @property
    def sourceName(self) -> None:
        """
        :type: None
        """
    @property
    def sourceType(self) -> None:
        """
        :type: None
        """
    @property
    def typeName(self) -> None:
        """
        :type: None
        """
    __instance_size__ = 80
    pass
class CoordSysAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def ApplyAndBind(*args, **kwargs) -> None: ...
    @staticmethod
    def Bind(*args, **kwargs) -> None: ...
    @staticmethod
    def BlockBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanContainPropertyName(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateBindingRel(*args, **kwargs) -> None: ...
    @staticmethod
    def FindBindingWithInheritance(*args, **kwargs) -> None: ...
    @staticmethod
    def FindBindingsWithInheritance(*args, **kwargs) -> None: ...
    @staticmethod
    def FindBindingsWithInheritanceForPrim(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetAll(*args, **kwargs) -> None: ...
    @staticmethod
    def GetBindingRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetCoordSysRelationshipName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLocalBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLocalBindings(*args, **kwargs) -> None: ...
    @staticmethod
    def GetLocalBindingsForPrim(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def HasLocalBindings(*args, **kwargs) -> None: ...
    @staticmethod
    def HasLocalBindingsForPrim(*args, **kwargs) -> None: ...
    @staticmethod
    def IsCoordSysAPIPath(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class Input(Boost.Python.instance):
    @staticmethod
    def CanConnect(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearConnectability(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSources(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectToSource(*args, **kwargs) -> None: ...
    @staticmethod
    def DisconnectSource(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetBaseName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectability(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDisplayGroup(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDocumentation(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFullName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPrim(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRawConnectedSourcePaths(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTypeName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetValueProducingAttribute(*args, **kwargs) -> None: ...
    @staticmethod
    def GetValueProducingAttributes(*args, **kwargs) -> None: ...
    @staticmethod
    def HasConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def HasRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def IsInput(*args, **kwargs) -> None: ...
    @staticmethod
    def IsInterfaceInputName(*args, **kwargs) -> None: ...
    @staticmethod
    def IsSourceConnectionFromBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def Set(*args, **kwargs) -> None: ...
    @staticmethod
    def SetConnectability(*args, **kwargs) -> None: ...
    @staticmethod
    def SetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def SetDisplayGroup(*args, **kwargs) -> None: ...
    @staticmethod
    def SetDocumentation(*args, **kwargs) -> None: ...
    @staticmethod
    def SetRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadataByKey(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class Material(NodeGraph, pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def ClearBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeDisplacementSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeSurfaceSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeVolumeSource(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateDisplacementAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateDisplacementOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateMasterMaterialVariant(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateSurfaceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateSurfaceOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateVolumeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateVolumeOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def GetBaseMaterialPath(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDisplacementAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDisplacementOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDisplacementOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetEditContextForVariant(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialVariant(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSurfaceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSurfaceOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSurfaceOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetVolumeAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetVolumeOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetVolumeOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def HasBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def SetBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def SetBaseMaterialPath(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class MaterialBindingAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    class CollectionBinding(Boost.Python.instance):
        @staticmethod
        def GetBindingRel(*args, **kwargs) -> None: ...
        @staticmethod
        def GetCollection(*args, **kwargs) -> None: ...
        @staticmethod
        def GetCollectionPath(*args, **kwargs) -> None: ...
        @staticmethod
        def GetMaterial(*args, **kwargs) -> None: ...
        @staticmethod
        def GetMaterialPath(*args, **kwargs) -> None: ...
        @staticmethod
        def IsCollectionBindingRel(*args, **kwargs) -> None: ...
        @staticmethod
        def IsValid(*args, **kwargs) -> None: ...
        __instance_size__ = 72
        pass
    class DirectBinding(Boost.Python.instance):
        @staticmethod
        def GetBindingRel(*args, **kwargs) -> None: ...
        @staticmethod
        def GetMaterial(*args, **kwargs) -> None: ...
        @staticmethod
        def GetMaterialPath(*args, **kwargs) -> None: ...
        @staticmethod
        def GetMaterialPurpose(*args, **kwargs) -> None: ...
        __instance_size__ = 80
        pass
    @staticmethod
    def AddPrimToBindingCollection(*args, **kwargs) -> None: ...
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def Bind(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanContainPropertyName(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeBoundMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeBoundMaterials(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateMaterialBindSubset(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetCollectionBindingRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetCollectionBindingRels(*args, **kwargs) -> None: ...
    @staticmethod
    def GetCollectionBindings(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDirectBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def GetDirectBindingRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialBindSubsets(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialBindSubsetsFamilyType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialBindingStrength(*args, **kwargs) -> None: ...
    @staticmethod
    def GetMaterialPurposes(*args, **kwargs) -> None: ...
    @staticmethod
    def GetResolvedTargetPathFromBindingRel(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def RemovePrimFromBindingCollection(*args, **kwargs) -> None: ...
    @staticmethod
    def SetMaterialBindSubsetsFamilyType(*args, **kwargs) -> None: ...
    @staticmethod
    def SetMaterialBindingStrength(*args, **kwargs) -> None: ...
    @staticmethod
    def UnbindAllBindings(*args, **kwargs) -> None: ...
    @staticmethod
    def UnbindCollectionBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def UnbindDirectBinding(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class NodeDefAPI(pxr.Usd.APISchemaBase, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def Apply(*args, **kwargs) -> None: ...
    @staticmethod
    def CanApply(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateImplementationSourceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetImplementationSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetImplementationSourceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderNodeForSourceType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceAsset(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceAssetSubIdentifier(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceCode(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceTypes(*args, **kwargs) -> None: ...
    @staticmethod
    def SetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceAsset(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceAssetSubIdentifier(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceCode(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class NodeGraph(pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def ComputeInterfaceInputConsumersMap(*args, **kwargs) -> None: ...
    @staticmethod
    def ComputeOutputSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInterfaceInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class Output(Boost.Python.instance):
    @staticmethod
    def CanConnect(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSource(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSources(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectToSource(*args, **kwargs) -> None: ...
    @staticmethod
    def DisconnectSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetBaseName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFullName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPrim(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRawConnectedSourcePaths(*args, **kwargs) -> None: ...
    @staticmethod
    def GetRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def GetTypeName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetValueProducingAttributes(*args, **kwargs) -> None: ...
    @staticmethod
    def HasConnectedSource(*args, **kwargs) -> None: ...
    @staticmethod
    def HasRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def IsOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def IsSourceConnectionFromBaseMaterial(*args, **kwargs) -> None: ...
    @staticmethod
    def Set(*args, **kwargs) -> None: ...
    @staticmethod
    def SetConnectedSources(*args, **kwargs) -> None: ...
    @staticmethod
    def SetRenderType(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadataByKey(*args, **kwargs) -> None: ...
    __instance_size__ = 56
    pass
class Shader(pxr.Usd.Typed, pxr.Usd.SchemaBase, Boost.Python.instance):
    @staticmethod
    def ClearSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def ClearSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def ConnectableAPI(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateImplementationSourceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateInput(*args, **kwargs) -> None: ...
    @staticmethod
    def CreateOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def Define(*args, **kwargs) -> None: ...
    @staticmethod
    def Get(*args, **kwargs) -> None: ...
    @staticmethod
    def GetIdAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetImplementationSource(*args, **kwargs) -> None: ...
    @staticmethod
    def GetImplementationSourceAttr(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetInputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutput(*args, **kwargs) -> None: ...
    @staticmethod
    def GetOutputs(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSchemaAttributeNames(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderNodeForSourceType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceAsset(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceAssetSubIdentifier(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceCode(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceTypes(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def HasSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadata(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSdrMetadataByKey(*args, **kwargs) -> None: ...
    @staticmethod
    def SetShaderId(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceAsset(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceAssetSubIdentifier(*args, **kwargs) -> None: ...
    @staticmethod
    def SetSourceCode(*args, **kwargs) -> None: ...
    @staticmethod
    def _GetStaticTfType(*args, **kwargs) -> None: ...
    __instance_size__ = 48
    pass
class ShaderDefParserPlugin(Boost.Python.instance):
    @staticmethod
    def GetDiscoveryTypes(*args, **kwargs) -> None: ...
    @staticmethod
    def GetSourceType(*args, **kwargs) -> None: ...
    @staticmethod
    def Parse(*args, **kwargs) -> None: ...
    @staticmethod
    def ParseShaderNode(*args, **kwargs) -> None: ...
    __instance_size__ = 40
    pass
class ShaderDefUtils(Boost.Python.instance):
    @staticmethod
    def GetDiscoveryResults(*args, **kwargs) -> None: ...
    @staticmethod
    def GetNodeDiscoveryResults(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPrimvarNamesMetadataString(*args, **kwargs) -> None: ...
    @staticmethod
    def GetProperties(*args, **kwargs) -> None: ...
    @staticmethod
    def GetShaderProperties(*args, **kwargs) -> None: ...
    pass
class Tokens(Boost.Python.instance):
    ConnectableAPI = 'ConnectableAPI'
    CoordSysAPI = 'CoordSysAPI'
    Material = 'Material'
    MaterialBindingAPI = 'MaterialBindingAPI'
    NodeDefAPI = 'NodeDefAPI'
    NodeGraph = 'NodeGraph'
    Shader = 'Shader'
    allPurpose = ''
    bindMaterialAs = 'bindMaterialAs'
    coordSys = 'coordSys'
    coordSys_MultipleApplyTemplate_Binding = 'coordSys:__INSTANCE_NAME__:binding'
    displacement = 'displacement'
    fallbackStrength = 'fallbackStrength'
    full = 'full'
    id = 'id'
    infoId = 'info:id'
    infoImplementationSource = 'info:implementationSource'
    inputs = 'inputs:'
    interfaceOnly = 'interfaceOnly'
    materialBind = 'materialBind'
    materialBinding = 'material:binding'
    materialBindingCollection = 'material:binding:collection'
    materialVariant = 'materialVariant'
    outputs = 'outputs:'
    outputsDisplacement = 'outputs:displacement'
    outputsSurface = 'outputs:surface'
    outputsVolume = 'outputs:volume'
    preview = 'preview'
    sdrMetadata = 'sdrMetadata'
    sourceAsset = 'sourceAsset'
    sourceCode = 'sourceCode'
    strongerThanDescendants = 'strongerThanDescendants'
    subIdentifier = 'subIdentifier'
    surface = 'surface'
    universalRenderContext = ''
    universalSourceType = ''
    volume = 'volume'
    weakerThanDescendants = 'weakerThanDescendants'
    pass
class UdimUtils(Boost.Python.instance):
    @staticmethod
    def IsUdimIdentifier(*args, **kwargs) -> None: ...
    @staticmethod
    def ReplaceUdimPattern(*args, **kwargs) -> None: ...
    @staticmethod
    def ResolveUdimPath(*args, **kwargs) -> None: ...
    @staticmethod
    def ResolveUdimTilePaths(*args, **kwargs) -> None: ...
    pass
class Utils(Boost.Python.instance):
    @staticmethod
    def GetBaseNameAndType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetConnectedSourcePath(*args, **kwargs) -> None: ...
    @staticmethod
    def GetFullName(*args, **kwargs) -> None: ...
    @staticmethod
    def GetPrefixForAttributeType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetType(*args, **kwargs) -> None: ...
    @staticmethod
    def GetValueProducingAttributes(*args, **kwargs) -> None: ...
    pass
class _CanApplyResult(Boost.Python.instance):
    @property
    def whyNot(self) -> None:
        """
        :type: None
        """
    __instance_size__ = 64
    pass
__MFB_FULL_PACKAGE_NAME = 'usdShade'
