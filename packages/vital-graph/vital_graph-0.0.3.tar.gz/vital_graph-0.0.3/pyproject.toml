[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vital-graph"
version = "0.0.3"
authors = [
    {name = "Marc Hadfield", email = "marc@vital.ai"},
]
description = "VitalGraph"
readme = "README.md"
license = {text = "Apache License 2.0"}
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
keywords = ["knowledge-graph", "rdf", "sparql", "database", "semantic-web"]

# Core dependencies - minimal set for basic functionality
dependencies = [
    "vital-ai-vitalsigns>=0.1.31",
    "vital-ai-haley-kg>=0.1.24",
    "python-dotenv",
    "rdflib>=7.0.0",
    "PyLD>=2.0.0",
    "six>=1.7.0",
    "pyoxigraph>=0.4.11",
    "openai>=1.0.0",
    "minio>=7.0.0",
]

# Optional dependency groups
[project.optional-dependencies]
# Client installation - lightweight for connecting to VitalGraph servers
client = [
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
    "tabulate>=0.9.0",
    "click-repl>=0.3.0",
]

# Server installation - full database and API capabilities
server = [
    "fastapi[standard,models]>=0.104.0",
    "uvicorn",
    "SQLAlchemy[asyncio]>=2.0.23",
    "psycopg[binary,pool]>=3.1.13",
    "asyncpg>=0.29.0",
    "alembic>=1.12.0",
    "pgvector>=0.2.4",
    "aiofiles>=23.0.0",
    "Jinja2>=3.1.0",
    "starlette>=0.27.0",
    "itsdangerous>=2.1.0",
    "PyJWT>=2.8.0",
    "email-validator>=2.0.0",
    "click-repl>=0.3.0",
    "tabulate>=0.9.0",
    "pytidb[models]",
    "pytidb",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

# Testing utilities
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

# Documentation building
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

# All features
all = [
    "vital-graph[client,server,dev,test,docs]",
]

[project.urls]
Homepage = "https://github.com/vital-ai/vital-graph"
Repository = "https://github.com/vital-ai/vital-graph"
Documentation = "https://github.com/vital-ai/vital-graph/docs"
"Bug Tracker" = "https://github.com/vital-ai/vital-graph/issues"

[project.scripts]
# Server commands (require server extras)
vitalgraphdb = "vitalgraph.cmd.vitalgraphdb_cmd:main"
vitalgraphadmin = "vitalgraph.admin_cmd.vitalgraphdb_admin_cmd:main"
# Client command (available with client extras)
vitalgraph = "vitalgraph.client.cmd.vitalgraph_repl:main"

[tool.setuptools.packages.find]
include = ["vitalgraph*"]
exclude = ["test*", "test_scripts*", "rdflib_sqlalchemy*", "frontend*", "docs*"]

[tool.setuptools.package-data]
vitalgraph = [
    "api/frontend/dist/**/*",
    "config/**/*.yaml",
    "config/**/*.yml",
    "sql/**/*.sql",
]

# Tool configurations
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | frontend
  )/
)
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "test_scripts/",
    "frontend/",
    "docs/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "vitalgraph_service_tests",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
