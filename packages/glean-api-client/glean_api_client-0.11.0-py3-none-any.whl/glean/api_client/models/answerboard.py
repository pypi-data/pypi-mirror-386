"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .facetfilter import FacetFilter, FacetFilterTypedDict
from .objectpermissions import ObjectPermissions, ObjectPermissionsTypedDict
from datetime import datetime
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .person import Person, PersonTypedDict
    from .userrolespecification import (
        UserRoleSpecification,
        UserRoleSpecificationTypedDict,
    )


class AnswerBoardTypedDict(TypedDict):
    name: str
    r"""The unique name of the Collection."""
    description: str
    r"""A brief summary of the Collection's contents."""
    id: int
    r"""The unique ID of the Answer Board."""
    added_roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of added user roles for the Collection."""
    removed_roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of removed user roles for the Collection."""
    audience_filters: NotRequired[List[FacetFilterTypedDict]]
    r"""Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search."""
    permissions: NotRequired[ObjectPermissionsTypedDict]
    create_time: NotRequired[datetime]
    update_time: NotRequired[datetime]
    creator: NotRequired["PersonTypedDict"]
    updated_by: NotRequired["PersonTypedDict"]
    item_count: NotRequired[int]
    r"""The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items."""
    roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of user roles for the Answer Board."""


class AnswerBoard(BaseModel):
    name: str
    r"""The unique name of the Collection."""

    description: str
    r"""A brief summary of the Collection's contents."""

    id: int
    r"""The unique ID of the Answer Board."""

    added_roles: Annotated[
        Optional[List["UserRoleSpecification"]], pydantic.Field(alias="addedRoles")
    ] = None
    r"""A list of added user roles for the Collection."""

    removed_roles: Annotated[
        Optional[List["UserRoleSpecification"]], pydantic.Field(alias="removedRoles")
    ] = None
    r"""A list of removed user roles for the Collection."""

    audience_filters: Annotated[
        Optional[List[FacetFilter]], pydantic.Field(alias="audienceFilters")
    ] = None
    r"""Filters which restrict who should see this Collection. Values are taken from the corresponding filters in people search."""

    permissions: Optional[ObjectPermissions] = None

    create_time: Annotated[Optional[datetime], pydantic.Field(alias="createTime")] = (
        None
    )

    update_time: Annotated[Optional[datetime], pydantic.Field(alias="updateTime")] = (
        None
    )

    creator: Optional["Person"] = None

    updated_by: Annotated[Optional["Person"], pydantic.Field(alias="updatedBy")] = None

    item_count: Annotated[Optional[int], pydantic.Field(alias="itemCount")] = None
    r"""The number of items currently in the Answer Board. Separated from the actual items so we can grab the count without items."""

    roles: Optional[List["UserRoleSpecification"]] = None
    r"""A list of user roles for the Answer Board."""
