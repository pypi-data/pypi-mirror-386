"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .dlppersonmetadata import DlpPersonMetadata, DlpPersonMetadataTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DlpPersonTypedDict(TypedDict):
    r"""Details about the person who created this report/policy."""

    name: str
    r"""The display name."""
    obfuscated_id: str
    r"""An opaque identifier that can be used to request metadata for a Person."""
    metadata: NotRequired[DlpPersonMetadataTypedDict]


class DlpPerson(BaseModel):
    r"""Details about the person who created this report/policy."""

    name: str
    r"""The display name."""

    obfuscated_id: Annotated[str, pydantic.Field(alias="obfuscatedId")]
    r"""An opaque identifier that can be used to request metadata for a Person."""

    metadata: Optional[DlpPersonMetadata] = None
