"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .objectpermissions import ObjectPermissions, ObjectPermissionsTypedDict
from datetime import datetime
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .document import Document, DocumentTypedDict
    from .person import Person, PersonTypedDict
    from .userrolespecification import (
        UserRoleSpecification,
        UserRoleSpecificationTypedDict,
    )


class ShortcutTypedDict(TypedDict):
    input_alias: str
    r"""Link text following go/ prefix as entered by the user."""
    id: NotRequired[int]
    r"""The opaque id of the user generated content."""
    destination_url: NotRequired[str]
    r"""Destination URL for the shortcut."""
    destination_document_id: NotRequired[str]
    r"""Glean Document ID for the URL, if known."""
    description: NotRequired[str]
    r"""A short, plain text blurb to help people understand the intent of the shortcut."""
    unlisted: NotRequired[bool]
    r"""Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only."""
    url_template: NotRequired[str]
    r"""For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL."""
    added_roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of user roles added for the Shortcut."""
    removed_roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of user roles removed for the Shortcut."""
    permissions: NotRequired[ObjectPermissionsTypedDict]
    created_by: NotRequired["PersonTypedDict"]
    create_time: NotRequired[datetime]
    r"""The time the shortcut was created in ISO format (ISO 8601)."""
    updated_by: NotRequired["PersonTypedDict"]
    update_time: NotRequired[datetime]
    r"""The time the shortcut was updated in ISO format (ISO 8601)."""
    destination_document: NotRequired["DocumentTypedDict"]
    intermediate_url: NotRequired[str]
    r"""The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>."""
    view_prefix: NotRequired[str]
    r"""The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with \"/\". e.g. \"go/\" for native shortcuts."""
    is_external: NotRequired[bool]
    r"""Indicates whether a shortcut is native or external."""
    edit_url: NotRequired[str]
    r"""The URL using which the user can access the edit page of the shortcut."""
    alias: NotRequired[str]
    r"""canonical link text following go/ prefix where hyphen/underscore is removed."""
    title: NotRequired[str]
    r"""Title for the Go Link"""
    roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of user roles for the Go Link."""


class Shortcut(BaseModel):
    input_alias: Annotated[str, pydantic.Field(alias="inputAlias")]
    r"""Link text following go/ prefix as entered by the user."""

    id: Optional[int] = None
    r"""The opaque id of the user generated content."""

    destination_url: Annotated[
        Optional[str], pydantic.Field(alias="destinationUrl")
    ] = None
    r"""Destination URL for the shortcut."""

    destination_document_id: Annotated[
        Optional[str], pydantic.Field(alias="destinationDocumentId")
    ] = None
    r"""Glean Document ID for the URL, if known."""

    description: Optional[str] = None
    r"""A short, plain text blurb to help people understand the intent of the shortcut."""

    unlisted: Optional[bool] = None
    r"""Whether this shortcut is unlisted or not. Unlisted shortcuts are visible to author + admins only."""

    url_template: Annotated[Optional[str], pydantic.Field(alias="urlTemplate")] = None
    r"""For variable shortcuts, contains the URL template; note, `destinationUrl` contains default URL."""

    added_roles: Annotated[
        Optional[List["UserRoleSpecification"]], pydantic.Field(alias="addedRoles")
    ] = None
    r"""A list of user roles added for the Shortcut."""

    removed_roles: Annotated[
        Optional[List["UserRoleSpecification"]], pydantic.Field(alias="removedRoles")
    ] = None
    r"""A list of user roles removed for the Shortcut."""

    permissions: Optional[ObjectPermissions] = None

    created_by: Annotated[Optional["Person"], pydantic.Field(alias="createdBy")] = None

    create_time: Annotated[Optional[datetime], pydantic.Field(alias="createTime")] = (
        None
    )
    r"""The time the shortcut was created in ISO format (ISO 8601)."""

    updated_by: Annotated[Optional["Person"], pydantic.Field(alias="updatedBy")] = None

    update_time: Annotated[Optional[datetime], pydantic.Field(alias="updateTime")] = (
        None
    )
    r"""The time the shortcut was updated in ISO format (ISO 8601)."""

    destination_document: Annotated[
        Optional["Document"], pydantic.Field(alias="destinationDocument")
    ] = None

    intermediate_url: Annotated[
        Optional[str], pydantic.Field(alias="intermediateUrl")
    ] = None
    r"""The URL from which the user is then redirected to the destination URL. Full replacement for https://go/<inputAlias>."""

    view_prefix: Annotated[Optional[str], pydantic.Field(alias="viewPrefix")] = None
    r"""The part of the shortcut preceding the input alias when used for showing shortcuts to users. Should end with \"/\". e.g. \"go/\" for native shortcuts."""

    is_external: Annotated[Optional[bool], pydantic.Field(alias="isExternal")] = None
    r"""Indicates whether a shortcut is native or external."""

    edit_url: Annotated[Optional[str], pydantic.Field(alias="editUrl")] = None
    r"""The URL using which the user can access the edit page of the shortcut."""

    alias: Optional[str] = None
    r"""canonical link text following go/ prefix where hyphen/underscore is removed."""

    title: Optional[str] = None
    r"""Title for the Go Link"""

    roles: Optional[List["UserRoleSpecification"]] = None
    r"""A list of user roles for the Go Link."""
