"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .period import Period, PeriodTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AgentsInsightsV2RequestTypedDict(TypedDict):
    agent_ids: NotRequired[List[str]]
    r"""IDs of the Agents for which Insights should be returned. An empty array signifies all."""
    departments: NotRequired[List[str]]
    r"""Departments for which Insights are requested."""
    day_range: NotRequired[PeriodTypedDict]


class AgentsInsightsV2Request(BaseModel):
    agent_ids: Annotated[Optional[List[str]], pydantic.Field(alias="agentIds")] = None
    r"""IDs of the Agents for which Insights should be returned. An empty array signifies all."""

    departments: Optional[List[str]] = None
    r"""Departments for which Insights are requested."""

    day_range: Annotated[Optional[Period], pydantic.Field(alias="dayRange")] = None
