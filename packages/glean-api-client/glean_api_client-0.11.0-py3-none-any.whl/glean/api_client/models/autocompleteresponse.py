"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .autocompleteresult import AutocompleteResult, AutocompleteResultTypedDict
from .autocompleteresultgroup import (
    AutocompleteResultGroup,
    AutocompleteResultGroupTypedDict,
)
from .gleandataerror import GleanDataError, GleanDataErrorTypedDict
from .sessioninfo import SessionInfo, SessionInfoTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AutocompleteResponseTypedDict(TypedDict):
    experiment_ids: NotRequired[List[int]]
    r"""List of experiment ids for the corresponding request."""
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular set of autocomplete results. To be used for /feedback reporting."""
    session_info: NotRequired[SessionInfoTypedDict]
    results: NotRequired[List[AutocompleteResultTypedDict]]
    groups: NotRequired[List[AutocompleteResultGroupTypedDict]]
    r"""Subsections of the results list from which distinct sections should be created."""
    glean_data_error: NotRequired[GleanDataErrorTypedDict]
    backend_time_millis: NotRequired[int]
    r"""Time in milliseconds the backend took to respond to the request."""


class AutocompleteResponse(BaseModel):
    experiment_ids: Annotated[
        Optional[List[int]], pydantic.Field(alias="experimentIds")
    ] = None
    r"""List of experiment ids for the corresponding request."""

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular set of autocomplete results. To be used for /feedback reporting."""

    session_info: Annotated[
        Optional[SessionInfo], pydantic.Field(alias="sessionInfo")
    ] = None

    results: Optional[List[AutocompleteResult]] = None

    groups: Optional[List[AutocompleteResultGroup]] = None
    r"""Subsections of the results list from which distinct sections should be created."""

    glean_data_error: Annotated[
        Optional[GleanDataError], pydantic.Field(alias="errorInfo")
    ] = None

    backend_time_millis: Annotated[
        Optional[int], pydantic.Field(alias="backendTimeMillis")
    ] = None
    r"""Time in milliseconds the backend took to respond to the request."""
