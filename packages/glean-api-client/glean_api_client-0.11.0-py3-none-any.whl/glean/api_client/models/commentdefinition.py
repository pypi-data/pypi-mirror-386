"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .contentdefinition import ContentDefinition, ContentDefinitionTypedDict
from .userreferencedefinition import (
    UserReferenceDefinition,
    UserReferenceDefinitionTypedDict,
)
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CommentDefinitionTypedDict(TypedDict):
    r"""Describes a comment on a document"""

    id: str
    r"""The document specific id for the comment. This field is case insensitive and should not be more than 200 characters in length."""
    author: NotRequired[UserReferenceDefinitionTypedDict]
    r"""Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id."""
    content: NotRequired[ContentDefinitionTypedDict]
    r"""Describes text content or base64 encoded binary content"""
    created_at: NotRequired[int]
    r"""The creation time, in epoch seconds."""
    updated_at: NotRequired[int]
    r"""The last updated time, in epoch seconds."""
    updated_by: NotRequired[UserReferenceDefinitionTypedDict]
    r"""Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id."""


class CommentDefinition(BaseModel):
    r"""Describes a comment on a document"""

    id: str
    r"""The document specific id for the comment. This field is case insensitive and should not be more than 200 characters in length."""

    author: Optional[UserReferenceDefinition] = None
    r"""Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id."""

    content: Optional[ContentDefinition] = None
    r"""Describes text content or base64 encoded binary content"""

    created_at: Annotated[Optional[int], pydantic.Field(alias="createdAt")] = None
    r"""The creation time, in epoch seconds."""

    updated_at: Annotated[Optional[int], pydantic.Field(alias="updatedAt")] = None
    r"""The last updated time, in epoch seconds."""

    updated_by: Annotated[
        Optional[UserReferenceDefinition], pydantic.Field(alias="updatedBy")
    ] = None
    r"""Describes how a user is referenced in a document. The user can be referenced by email or by a datasource specific id."""
