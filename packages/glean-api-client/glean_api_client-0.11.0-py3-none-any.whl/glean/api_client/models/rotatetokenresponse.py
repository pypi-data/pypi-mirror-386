"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RotateTokenResponseTypedDict(TypedDict):
    r"""Describes the response body of the /rotatetoken API call"""

    raw_secret: NotRequired[str]
    r"""New raw secret"""
    created_at: NotRequired[int]
    r"""Unix timestamp in seconds when the new secret value is assigned to the token. The token needs to be rotated before `rotationPeriodMinutes` past the createdAt timestamp otherwise it would be rendered unusable."""
    rotation_period_minutes: NotRequired[int]
    r"""Refers to the time period in minutes before which this token needs to be rotated. It is required to rotate the token within the specified `rotationPeriodMinutes` after each `/rotatetoken` call, otherwise the tokens would expire. Note that the token would still expire at `expiresAt` timestamp provided during token creation even if the token is being regularly rotated. `rotationPeriodMinutes` property is inherited from the parent token being rotated"""


class RotateTokenResponse(BaseModel):
    r"""Describes the response body of the /rotatetoken API call"""

    raw_secret: Annotated[Optional[str], pydantic.Field(alias="rawSecret")] = None
    r"""New raw secret"""

    created_at: Annotated[Optional[int], pydantic.Field(alias="createdAt")] = None
    r"""Unix timestamp in seconds when the new secret value is assigned to the token. The token needs to be rotated before `rotationPeriodMinutes` past the createdAt timestamp otherwise it would be rendered unusable."""

    rotation_period_minutes: Annotated[
        Optional[int], pydantic.Field(alias="rotationPeriodMinutes")
    ] = None
    r"""Refers to the time period in minutes before which this token needs to be rotated. It is required to rotate the token within the specified `rotationPeriodMinutes` after each `/rotatetoken` call, otherwise the tokens would expire. Note that the token would still expire at `expiresAt` timestamp provided during token creation even if the token is being regularly rotated. `rotationPeriodMinutes` property is inherited from the parent token being rotated"""
