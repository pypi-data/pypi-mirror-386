"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .person import Person, PersonTypedDict


class PersonToTeamRelationshipRelationship(str, Enum):
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""

    MEMBER = "MEMBER"
    MANAGER = "MANAGER"
    LEAD = "LEAD"
    POINT_OF_CONTACT = "POINT_OF_CONTACT"
    OTHER = "OTHER"


class PersonToTeamRelationshipTypedDict(TypedDict):
    r"""Metadata about the relationship of a person to a team."""

    person: "PersonTypedDict"
    relationship: NotRequired[PersonToTeamRelationshipRelationship]
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""
    custom_relationship_str: NotRequired[str]
    r"""Displayed name for the relationship if relationship is set to `OTHER`."""
    join_date: NotRequired[datetime]
    r"""The team member's start date"""


class PersonToTeamRelationship(BaseModel):
    r"""Metadata about the relationship of a person to a team."""

    person: "Person"

    relationship: Optional[PersonToTeamRelationshipRelationship] = (
        PersonToTeamRelationshipRelationship.MEMBER
    )
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""

    custom_relationship_str: Annotated[
        Optional[str], pydantic.Field(alias="customRelationshipStr")
    ] = None
    r"""Displayed name for the relationship if relationship is set to `OTHER`."""

    join_date: Annotated[Optional[datetime], pydantic.Field(alias="joinDate")] = None
    r"""The team member's start date"""
