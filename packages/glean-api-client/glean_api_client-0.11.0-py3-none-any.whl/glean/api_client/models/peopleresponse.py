"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .person import Person, PersonTypedDict
from .relateddocuments import RelatedDocuments, RelatedDocumentsTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PeopleResponseTypedDict(TypedDict):
    results: NotRequired[List[PersonTypedDict]]
    r"""A Person for each ID in the request, each with PersonMetadata populated."""
    related_documents: NotRequired[List[RelatedDocumentsTypedDict]]
    r"""A list of documents related to this people response. This is only included if DOCUMENT_ACTIVITY is requested and only 1 person is included in the request."""
    errors: NotRequired[List[str]]
    r"""A list of IDs that could not be found."""


class PeopleResponse(BaseModel):
    results: Optional[List[Person]] = None
    r"""A Person for each ID in the request, each with PersonMetadata populated."""

    related_documents: Annotated[
        Optional[List[RelatedDocuments]], pydantic.Field(alias="relatedDocuments")
    ] = None
    r"""A list of documents related to this people response. This is only included if DOCUMENT_ACTIVITY is requested and only 1 person is included in the request."""

    errors: Optional[List[str]] = None
    r"""A list of IDs that could not be found."""
