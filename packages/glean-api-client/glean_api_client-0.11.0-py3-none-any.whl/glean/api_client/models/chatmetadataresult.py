"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chatmetadata import ChatMetadata, ChatMetadataTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ChatMetadataResultTypedDict(TypedDict):
    chat: NotRequired[ChatMetadataTypedDict]
    r"""Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content."""
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular Chat. To be used for `/feedback` reporting."""


class ChatMetadataResult(BaseModel):
    chat: Optional[ChatMetadata] = None
    r"""Metadata of a Chat a user had with Glean Assistant. This contains no actual conversational content."""

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular Chat. To be used for `/feedback` reporting."""
