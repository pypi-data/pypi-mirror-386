"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DatasourceProfileTypedDict(TypedDict):
    datasource: str
    r"""The datasource the profile is of."""
    handle: str
    r"""The display name of the entity in the given datasource."""
    url: NotRequired[str]
    r"""URL to view the entity's profile."""
    native_app_url: NotRequired[str]
    r"""A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...)."""
    is_user_generated: NotRequired[bool]
    r"""For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)"""


class DatasourceProfile(BaseModel):
    datasource: str
    r"""The datasource the profile is of."""

    handle: str
    r"""The display name of the entity in the given datasource."""

    url: Optional[str] = None
    r"""URL to view the entity's profile."""

    native_app_url: Annotated[Optional[str], pydantic.Field(alias="nativeAppUrl")] = (
        None
    )
    r"""A deep link, if available, into the datasource's native application for the entity's platform (i.e. slack://...)."""

    is_user_generated: Annotated[
        Optional[bool], pydantic.Field(alias="isUserGenerated")
    ] = None
    r"""For internal use only. True iff the data source profile was manually added by a user from within Glean (aka not from the original data source)"""
