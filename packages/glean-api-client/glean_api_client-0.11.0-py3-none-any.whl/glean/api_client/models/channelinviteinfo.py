"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .communicationchannel import CommunicationChannel
from datetime import datetime
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .person import Person, PersonTypedDict


class ChannelInviteInfoTypedDict(TypedDict):
    r"""Information regarding the invite status of a person for a particular channel."""

    channel: NotRequired[CommunicationChannel]
    is_auto_invite: NotRequired[bool]
    r"""Bit that tracks if this invite was automatically sent or user-sent"""
    inviter: NotRequired["PersonTypedDict"]
    invite_time: NotRequired[datetime]
    r"""The time this person was invited in ISO format (ISO 8601)."""
    reminder_time: NotRequired[datetime]
    r"""The time this person was reminded in ISO format (ISO 8601) if a reminder was sent."""


class ChannelInviteInfo(BaseModel):
    r"""Information regarding the invite status of a person for a particular channel."""

    channel: Optional[CommunicationChannel] = None

    is_auto_invite: Annotated[Optional[bool], pydantic.Field(alias="isAutoInvite")] = (
        None
    )
    r"""Bit that tracks if this invite was automatically sent or user-sent"""

    inviter: Optional["Person"] = None

    invite_time: Annotated[Optional[datetime], pydantic.Field(alias="inviteTime")] = (
        None
    )
    r"""The time this person was invited in ISO format (ISO 8601)."""

    reminder_time: Annotated[
        Optional[datetime], pydantic.Field(alias="reminderTime")
    ] = None
    r"""The time this person was reminded in ISO format (ISO 8601) if a reminder was sent."""
