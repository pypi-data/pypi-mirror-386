"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .company import Company, CompanyTypedDict
from .customermetadata import CustomerMetadata, CustomerMetadataTypedDict
from datetime import date
from glean.api_client.types import BaseModel
import pydantic
from typing import Dict, List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .person import Person, PersonTypedDict


class CustomerTypedDict(TypedDict):
    id: str
    r"""Unique identifier."""
    company: CompanyTypedDict
    domains: NotRequired[List[str]]
    r"""Link to company's associated website domains."""
    document_counts: NotRequired[Dict[str, int]]
    r"""A map of {string, int} pairs representing counts of each document type associated with this customer."""
    poc: NotRequired[List["PersonTypedDict"]]
    r"""A list of POC for company."""
    metadata: NotRequired[CustomerMetadataTypedDict]
    merged_customers: NotRequired[List[CustomerTypedDict]]
    r"""A list of Customers."""
    start_date: NotRequired[date]
    r"""The date when the interaction with customer started."""
    contract_annual_revenue: NotRequired[float]
    r"""Average contract annual revenue with that customer."""
    notes: NotRequired[str]
    r"""User facing (potentially generated) notes about company."""


class Customer(BaseModel):
    id: str
    r"""Unique identifier."""

    company: Company

    domains: Optional[List[str]] = None
    r"""Link to company's associated website domains."""

    document_counts: Annotated[
        Optional[Dict[str, int]], pydantic.Field(alias="documentCounts")
    ] = None
    r"""A map of {string, int} pairs representing counts of each document type associated with this customer."""

    poc: Optional[List["Person"]] = None
    r"""A list of POC for company."""

    metadata: Optional[CustomerMetadata] = None

    merged_customers: Annotated[
        Optional[List[Customer]], pydantic.Field(alias="mergedCustomers")
    ] = None
    r"""A list of Customers."""

    start_date: Annotated[Optional[date], pydantic.Field(alias="startDate")] = None
    r"""The date when the interaction with customer started."""

    contract_annual_revenue: Annotated[
        Optional[float], pydantic.Field(alias="contractAnnualRevenue")
    ] = None
    r"""Average contract annual revenue with that customer."""

    notes: Optional[str] = None
    r"""User facing (potentially generated) notes about company."""
