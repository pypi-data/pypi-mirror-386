"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .feedentry import FeedEntry, FeedEntryTypedDict
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FeedResultCategory(str, Enum):
    r"""Category of the result, one of the requested categories in incoming request."""

    DOCUMENT_SUGGESTION = "DOCUMENT_SUGGESTION"
    DOCUMENT_SUGGESTION_SCENARIO = "DOCUMENT_SUGGESTION_SCENARIO"
    TRENDING_DOCUMENT = "TRENDING_DOCUMENT"
    USE_CASE = "USE_CASE"
    VERIFICATION_REMINDER = "VERIFICATION_REMINDER"
    EVENT = "EVENT"
    ANNOUNCEMENT = "ANNOUNCEMENT"
    MENTION = "MENTION"
    DATASOURCE_AFFINITY = "DATASOURCE_AFFINITY"
    RECENT = "RECENT"
    COMPANY_RESOURCE = "COMPANY_RESOURCE"
    EXPERIMENTAL = "EXPERIMENTAL"
    PEOPLE_CELEBRATIONS = "PEOPLE_CELEBRATIONS"
    SOCIAL_LINK = "SOCIAL_LINK"
    EXTERNAL_TASKS = "EXTERNAL_TASKS"
    DISPLAYABLE_LIST = "DISPLAYABLE_LIST"
    ZERO_STATE_CHAT_SUGGESTION = "ZERO_STATE_CHAT_SUGGESTION"
    ZERO_STATE_CHAT_TOOL_SUGGESTION = "ZERO_STATE_CHAT_TOOL_SUGGESTION"
    ZERO_STATE_WORKFLOW_CREATED_BY_ME = "ZERO_STATE_WORKFLOW_CREATED_BY_ME"
    ZERO_STATE_WORKFLOW_FAVORITES = "ZERO_STATE_WORKFLOW_FAVORITES"
    ZERO_STATE_WORKFLOW_POPULAR = "ZERO_STATE_WORKFLOW_POPULAR"
    ZERO_STATE_WORKFLOW_RECENT = "ZERO_STATE_WORKFLOW_RECENT"
    ZERO_STATE_WORKFLOW_SUGGESTION = "ZERO_STATE_WORKFLOW_SUGGESTION"
    PERSONALIZED_CHAT_SUGGESTION = "PERSONALIZED_CHAT_SUGGESTION"
    DAILY_DIGEST = "DAILY_DIGEST"


class FeedResultTypedDict(TypedDict):
    category: FeedResultCategory
    r"""Category of the result, one of the requested categories in incoming request."""
    primary_entry: FeedEntryTypedDict
    secondary_entries: NotRequired[List[FeedEntryTypedDict]]
    r"""Secondary entries for the result e.g. suggested docs for the calendar, carousel."""
    rank: NotRequired[int]
    r"""Rank of the result. Rank is suggested by server. Client side rank may differ."""


class FeedResult(BaseModel):
    category: FeedResultCategory
    r"""Category of the result, one of the requested categories in incoming request."""

    primary_entry: Annotated[FeedEntry, pydantic.Field(alias="primaryEntry")]

    secondary_entries: Annotated[
        Optional[List[FeedEntry]], pydantic.Field(alias="secondaryEntries")
    ] = None
    r"""Secondary entries for the result e.g. suggested docs for the calendar, carousel."""

    rank: Optional[int] = None
    r"""Rank of the result. Rank is suggested by server. Client side rank may differ."""
