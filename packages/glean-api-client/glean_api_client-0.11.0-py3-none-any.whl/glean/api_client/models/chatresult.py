"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chat import Chat, ChatTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ChatResultTypedDict(TypedDict):
    chat: NotRequired[ChatTypedDict]
    r"""A historical representation of a series of chat messages a user had with Glean Assistant."""
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular Chat. To be used for `/feedback` reporting."""


class ChatResult(BaseModel):
    chat: Optional[Chat] = None
    r"""A historical representation of a series of chat messages a user had with Glean Assistant."""

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular Chat. To be used for `/feedback` reporting."""
