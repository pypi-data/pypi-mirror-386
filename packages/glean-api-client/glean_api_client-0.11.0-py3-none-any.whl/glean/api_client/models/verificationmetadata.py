"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countinfo import CountInfo, CountInfoTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .document import Document, DocumentTypedDict
    from .person import Person, PersonTypedDict
    from .reminder import Reminder, ReminderTypedDict


class VerificationMetadataTypedDict(TypedDict):
    last_verifier: NotRequired["PersonTypedDict"]
    last_verification_ts: NotRequired[int]
    r"""The unix timestamp of the verification (in seconds since epoch UTC)."""
    expiration_ts: NotRequired[int]
    r"""The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC)."""
    document: NotRequired["DocumentTypedDict"]
    reminders: NotRequired[List["ReminderTypedDict"]]
    r"""Info about all outstanding verification reminders for the document if exists."""
    last_reminder: NotRequired["ReminderTypedDict"]
    visitor_count: NotRequired[List[CountInfoTypedDict]]
    r"""Number of visitors to the document during included time periods."""
    candidate_verifiers: NotRequired[List["PersonTypedDict"]]
    r"""List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions."""


class VerificationMetadata(BaseModel):
    last_verifier: Annotated[
        Optional["Person"], pydantic.Field(alias="lastVerifier")
    ] = None

    last_verification_ts: Annotated[
        Optional[int], pydantic.Field(alias="lastVerificationTs")
    ] = None
    r"""The unix timestamp of the verification (in seconds since epoch UTC)."""

    expiration_ts: Annotated[Optional[int], pydantic.Field(alias="expirationTs")] = None
    r"""The unix timestamp of the verification expiration if applicable (in seconds since epoch UTC)."""

    document: Optional["Document"] = None

    reminders: Optional[List["Reminder"]] = None
    r"""Info about all outstanding verification reminders for the document if exists."""

    last_reminder: Annotated[
        Optional["Reminder"], pydantic.Field(alias="lastReminder")
    ] = None

    visitor_count: Annotated[
        Optional[List[CountInfo]], pydantic.Field(alias="visitorCount")
    ] = None
    r"""Number of visitors to the document during included time periods."""

    candidate_verifiers: Annotated[
        Optional[List["Person"]], pydantic.Field(alias="candidateVerifiers")
    ] = None
    r"""List of potential verifiers for the document e.g. old verifiers and/or users with view/edit permissions."""
