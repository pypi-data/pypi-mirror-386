"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .collection import Collection, CollectionTypedDict
from .collectionerror import CollectionError, CollectionErrorTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetCollectionResponseTypedDict(TypedDict):
    collection: NotRequired[CollectionTypedDict]
    root_collection: NotRequired[CollectionTypedDict]
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular Collection. To be used for `/feedback` reporting."""
    error: NotRequired[CollectionErrorTypedDict]


class GetCollectionResponse(BaseModel):
    collection: Optional[Collection] = None

    root_collection: Annotated[
        Optional[Collection], pydantic.Field(alias="rootCollection")
    ] = None

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular Collection. To be used for `/feedback` reporting."""

    error: Optional[CollectionError] = None
