"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .timeinterval import TimeInterval, TimeIntervalTypedDict
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AnonymousEventEventType(str, Enum):
    r"""The nature of the event, for example \"out of office\"."""

    DEFAULT = "DEFAULT"
    OUT_OF_OFFICE = "OUT_OF_OFFICE"


class AnonymousEventTypedDict(TypedDict):
    r"""A generic, light-weight calendar event."""

    time: NotRequired[TimeIntervalTypedDict]
    event_type: NotRequired[AnonymousEventEventType]
    r"""The nature of the event, for example \"out of office\"."""


class AnonymousEvent(BaseModel):
    r"""A generic, light-weight calendar event."""

    time: Optional[TimeInterval] = None

    event_type: Annotated[
        Optional[AnonymousEventEventType], pydantic.Field(alias="eventType")
    ] = None
    r"""The nature of the event, for example \"out of office\"."""
