"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .document import Document, DocumentTypedDict
    from .person import Person, PersonTypedDict


class ShareTypedDict(TypedDict):
    r"""Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip"""

    num_days_ago: int
    r"""The number of days that has passed since the share happened"""
    sharer: NotRequired["PersonTypedDict"]
    sharing_document: NotRequired["DocumentTypedDict"]


class Share(BaseModel):
    r"""Search endpoint will only fill out numDays ago since that's all we need to display shared badge; docmetadata endpoint will fill out all the fields so that we can display shared badge tooltip"""

    num_days_ago: Annotated[int, pydantic.Field(alias="numDaysAgo")]
    r"""The number of days that has passed since the share happened"""

    sharer: Optional["Person"] = None

    sharing_document: Annotated[
        Optional["Document"], pydantic.Field(alias="sharingDocument")
    ] = None
