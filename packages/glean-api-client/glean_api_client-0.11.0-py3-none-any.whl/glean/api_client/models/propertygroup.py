"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PropertyGroupTypedDict(TypedDict):
    r"""A grouping for multiple PropertyDefinition. Grouped properties will be displayed together in the UI."""

    name: NotRequired[str]
    r"""The unique identifier of the group."""
    display_label: NotRequired[str]
    r"""The user-friendly group label to display."""


class PropertyGroup(BaseModel):
    r"""A grouping for multiple PropertyDefinition. Grouped properties will be displayed together in the UI."""

    name: Optional[str] = None
    r"""The unique identifier of the group."""

    display_label: Annotated[Optional[str], pydantic.Field(alias="displayLabel")] = None
    r"""The user-friendly group label to display."""
