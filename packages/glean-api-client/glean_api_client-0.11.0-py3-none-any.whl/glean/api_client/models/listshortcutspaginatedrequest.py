"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .facetfilter import FacetFilter, FacetFilterTypedDict
from .sortoptions import SortOptions, SortOptionsTypedDict
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListShortcutsPaginatedRequestIncludeField(str, Enum):
    FACETS = "FACETS"
    PEOPLE_DETAILS = "PEOPLE_DETAILS"


class ListShortcutsPaginatedRequestTypedDict(TypedDict):
    page_size: int
    include_fields: NotRequired[List[ListShortcutsPaginatedRequestIncludeField]]
    r"""Array of fields/data to be included in response that are not included by default"""
    cursor: NotRequired[str]
    r"""A token specifying the position in the overall results to start at. Received from the endpoint and iterated back. Currently being used as page no (as we implement offset pagination)"""
    filters: NotRequired[List[FacetFilterTypedDict]]
    r"""A list of filters for the query. An AND is assumed between different filters. We support filters on Go Link name, author, department and type."""
    sort: NotRequired[SortOptionsTypedDict]
    query: NotRequired[str]
    r"""Search query that should be a substring in atleast one of the fields (alias , inputAlias, destinationUrl, description). Empty query does not filter shortcuts."""


class ListShortcutsPaginatedRequest(BaseModel):
    page_size: Annotated[int, pydantic.Field(alias="pageSize")]

    include_fields: Annotated[
        Optional[List[ListShortcutsPaginatedRequestIncludeField]],
        pydantic.Field(alias="includeFields"),
    ] = None
    r"""Array of fields/data to be included in response that are not included by default"""

    cursor: Optional[str] = None
    r"""A token specifying the position in the overall results to start at. Received from the endpoint and iterated back. Currently being used as page no (as we implement offset pagination)"""

    filters: Optional[List[FacetFilter]] = None
    r"""A list of filters for the query. An AND is assumed between different filters. We support filters on Go Link name, author, department and type."""

    sort: Optional[SortOptions] = None

    query: Optional[str] = None
    r"""Search query that should be a substring in atleast one of the fields (alias , inputAlias, destinationUrl, description). Empty query does not filter shortcuts."""
