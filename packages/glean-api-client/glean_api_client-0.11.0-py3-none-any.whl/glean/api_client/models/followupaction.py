"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FollowupActionTypedDict(TypedDict):
    r"""A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately."""

    action_run_id: NotRequired[str]
    r"""Unique identifier for this actionRun recommendation event."""
    action_instance_id: NotRequired[str]
    r"""The ID of the action instance that will be invoked."""
    action_id: NotRequired[str]
    r"""The ID of the associated action."""
    parameters: NotRequired[Dict[str, str]]
    r"""Map of assistant predicted parameters and their corresponding values."""
    recommendation_text: NotRequired[str]
    r"""Text to be displayed to the user when recommending the action instance."""
    action_label: NotRequired[str]
    r"""The label to be used when displaying a button to execute this action instance."""
    user_confirmation_required: NotRequired[bool]
    r"""Whether user confirmation is needed before executing this action instance."""


class FollowupAction(BaseModel):
    r"""A follow-up action that can be invoked by the user after a response. The action parameters are not included and need to be predicted/filled separately."""

    action_run_id: Annotated[Optional[str], pydantic.Field(alias="actionRunId")] = None
    r"""Unique identifier for this actionRun recommendation event."""

    action_instance_id: Annotated[
        Optional[str], pydantic.Field(alias="actionInstanceId")
    ] = None
    r"""The ID of the action instance that will be invoked."""

    action_id: Annotated[Optional[str], pydantic.Field(alias="actionId")] = None
    r"""The ID of the associated action."""

    parameters: Optional[Dict[str, str]] = None
    r"""Map of assistant predicted parameters and their corresponding values."""

    recommendation_text: Annotated[
        Optional[str], pydantic.Field(alias="recommendationText")
    ] = None
    r"""Text to be displayed to the user when recommending the action instance."""

    action_label: Annotated[Optional[str], pydantic.Field(alias="actionLabel")] = None
    r"""The label to be used when displaying a button to execute this action instance."""

    user_confirmation_required: Annotated[
        Optional[bool], pydantic.Field(alias="userConfirmationRequired")
    ] = None
    r"""Whether user confirmation is needed before executing this action instance."""
