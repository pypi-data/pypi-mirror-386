"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CanonicalizingRegexTypeTypedDict(TypedDict):
    r"""Regular expression to apply to an arbitrary string to transform it into a canonical string."""

    match_regex: NotRequired[str]
    r"""Regular expression to match to an arbitrary string."""
    rewrite_regex: NotRequired[str]
    r"""Regular expression to transform into a canonical string."""


class CanonicalizingRegexType(BaseModel):
    r"""Regular expression to apply to an arbitrary string to transform it into a canonical string."""

    match_regex: Annotated[Optional[str], pydantic.Field(alias="matchRegex")] = None
    r"""Regular expression to match to an arbitrary string."""

    rewrite_regex: Annotated[Optional[str], pydantic.Field(alias="rewriteRegex")] = None
    r"""Regular expression to transform into a canonical string."""
