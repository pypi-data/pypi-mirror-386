"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .generatedqna import GeneratedQna, GeneratedQnaTypedDict
from .gleandataerror import GleanDataError, GleanDataErrorTypedDict
from .searchresult import SearchResult, SearchResultTypedDict
from .sessioninfo import SessionInfo, SessionInfoTypedDict
from .structuredresult import StructuredResult, StructuredResultTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ResultsResponseTypedDict(TypedDict):
    tracking_token: NotRequired[str]
    r"""A token that should be passed for additional requests related to this request (such as more results requests)."""
    session_info: NotRequired[SessionInfoTypedDict]
    results: NotRequired[List[SearchResultTypedDict]]
    structured_results: NotRequired[List[StructuredResultTypedDict]]
    generated_qna_result: NotRequired[GeneratedQnaTypedDict]
    glean_data_error: NotRequired[GleanDataErrorTypedDict]
    request_id: NotRequired[str]
    r"""A platform-generated request ID to correlate backend logs."""
    backend_time_millis: NotRequired[int]
    r"""Time in milliseconds the backend took to respond to the request."""


class ResultsResponse(BaseModel):
    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""A token that should be passed for additional requests related to this request (such as more results requests)."""

    session_info: Annotated[
        Optional[SessionInfo], pydantic.Field(alias="sessionInfo")
    ] = None

    results: Optional[List[SearchResult]] = None

    structured_results: Annotated[
        Optional[List[StructuredResult]], pydantic.Field(alias="structuredResults")
    ] = None

    generated_qna_result: Annotated[
        Optional[GeneratedQna], pydantic.Field(alias="generatedQnaResult")
    ] = None

    glean_data_error: Annotated[
        Optional[GleanDataError], pydantic.Field(alias="errorInfo")
    ] = None

    request_id: Annotated[Optional[str], pydantic.Field(alias="requestID")] = None
    r"""A platform-generated request ID to correlate backend logs."""

    backend_time_millis: Annotated[
        Optional[int], pydantic.Field(alias="backendTimeMillis")
    ] = None
    r"""Time in milliseconds the backend took to respond to the request."""
