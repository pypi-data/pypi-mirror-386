"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .structuredtextitem import StructuredTextItem, StructuredTextItemTypedDict


class StructuredTextTypedDict(TypedDict):
    text: str
    structured_list: NotRequired[List["StructuredTextItemTypedDict"]]
    r"""An array of objects each of which contains either a string or a link which optionally corresponds to a document."""


class StructuredText(BaseModel):
    text: str

    structured_list: Annotated[
        Optional[List["StructuredTextItem"]], pydantic.Field(alias="structuredList")
    ] = None
    r"""An array of objects each of which contains either a string or a link which optionally corresponds to a document."""
