"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .document import Document, DocumentTypedDict
    from .structuredresult import StructuredResult, StructuredResultTypedDict


class StructuredTextItemTypedDict(TypedDict):
    link: NotRequired[str]
    document: NotRequired["DocumentTypedDict"]
    text: NotRequired[str]
    structured_result: NotRequired["StructuredResultTypedDict"]
    r"""A single object that can support any object in the work graph. Only a single object will be populated."""


class StructuredTextItem(BaseModel):
    link: Optional[str] = None

    document: Optional["Document"] = None

    text: Optional[str] = None

    structured_result: Annotated[
        Optional["StructuredResult"], pydantic.Field(alias="structuredResult")
    ] = None
    r"""A single object that can support any object in the work graph. Only a single object will be populated."""
