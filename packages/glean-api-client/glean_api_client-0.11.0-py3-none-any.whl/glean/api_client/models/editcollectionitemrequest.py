"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class EditCollectionItemRequestTypedDict(TypedDict):
    collection_id: int
    r"""The ID of the Collection to edit CollectionItems in."""
    item_id: str
    r"""The ID of the CollectionItem to edit."""
    name: NotRequired[str]
    r"""The optional name of the Collection item."""
    description: NotRequired[str]
    r"""A helpful description of why this CollectionItem is in the Collection that it's in."""
    icon: NotRequired[str]
    r"""The emoji icon for this CollectionItem. Only used for Text type items."""


class EditCollectionItemRequest(BaseModel):
    collection_id: Annotated[int, pydantic.Field(alias="collectionId")]
    r"""The ID of the Collection to edit CollectionItems in."""

    item_id: Annotated[str, pydantic.Field(alias="itemId")]
    r"""The ID of the CollectionItem to edit."""

    name: Optional[str] = None
    r"""The optional name of the Collection item."""

    description: Optional[str] = None
    r"""A helpful description of why this CollectionItem is in the Collection that it's in."""

    icon: Optional[str] = None
    r"""The emoji icon for this CollectionItem. Only used for Text type items."""
