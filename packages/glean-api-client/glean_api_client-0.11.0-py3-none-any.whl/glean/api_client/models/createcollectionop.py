"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .collection import Collection, CollectionTypedDict
from .collectionerror import CollectionError, CollectionErrorTypedDict
from glean.api_client.types import BaseModel
from typing import Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


class ResponseBody2TypedDict(TypedDict):
    error: CollectionErrorTypedDict
    collection: NotRequired[CollectionTypedDict]


class ResponseBody2(BaseModel):
    error: CollectionError

    collection: Optional[Collection] = None


class ResponseBody1TypedDict(TypedDict):
    collection: CollectionTypedDict
    error: NotRequired[CollectionErrorTypedDict]


class ResponseBody1(BaseModel):
    collection: Collection

    error: Optional[CollectionError] = None


CreatecollectionResponseTypedDict = TypeAliasType(
    "CreatecollectionResponseTypedDict",
    Union[ResponseBody1TypedDict, ResponseBody2TypedDict],
)
r"""OK"""


CreatecollectionResponse = TypeAliasType(
    "CreatecollectionResponse", Union[ResponseBody1, ResponseBody2]
)
r"""OK"""
