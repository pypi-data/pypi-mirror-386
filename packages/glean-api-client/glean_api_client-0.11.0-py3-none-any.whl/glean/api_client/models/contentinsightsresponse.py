"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .documentinsight import DocumentInsight, DocumentInsightTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ContentInsightsResponseTypedDict(TypedDict):
    last_log_timestamp: NotRequired[int]
    r"""Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC)."""
    document_insights: NotRequired[List[DocumentInsightTypedDict]]
    r"""Insights for documents."""
    departments: NotRequired[List[str]]
    r"""list of departments applicable for contents tab."""
    min_department_size_threshold: NotRequired[int]
    r"""Min threshold in size of departments while populating results, otherwise 0."""
    min_visitor_threshold: NotRequired[int]
    r"""Minimum number of visitors to a document required to be included in insights."""


class ContentInsightsResponse(BaseModel):
    last_log_timestamp: Annotated[
        Optional[int], pydantic.Field(alias="lastLogTimestamp")
    ] = None
    r"""Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC)."""

    document_insights: Annotated[
        Optional[List[DocumentInsight]], pydantic.Field(alias="documentInsights")
    ] = None
    r"""Insights for documents."""

    departments: Optional[List[str]] = None
    r"""list of departments applicable for contents tab."""

    min_department_size_threshold: Annotated[
        Optional[int], pydantic.Field(alias="minDepartmentSizeThreshold")
    ] = None
    r"""Min threshold in size of departments while populating results, otherwise 0."""

    min_visitor_threshold: Annotated[
        Optional[int], pydantic.Field(alias="minVisitorThreshold")
    ] = None
    r"""Minimum number of visitors to a document required to be included in insights."""
