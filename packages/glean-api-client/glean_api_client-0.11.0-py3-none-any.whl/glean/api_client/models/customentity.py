"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .customentitymetadata import CustomEntityMetadata, CustomEntityMetadataTypedDict
from .objectpermissions import ObjectPermissions, ObjectPermissionsTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .userrolespecification import (
        UserRoleSpecification,
        UserRoleSpecificationTypedDict,
    )


class CustomEntityTypedDict(TypedDict):
    permissions: NotRequired[ObjectPermissionsTypedDict]
    id: NotRequired[str]
    r"""Unique identifier."""
    title: NotRequired[str]
    r"""Title or name of the custom entity."""
    datasource: NotRequired[str]
    r"""The datasource the custom entity is from."""
    object_type: NotRequired[str]
    r"""The type of the entity. Interpretation is specific to each datasource"""
    metadata: NotRequired[CustomEntityMetadataTypedDict]
    roles: NotRequired[List["UserRoleSpecificationTypedDict"]]
    r"""A list of user roles for the custom entity explicitly granted by the owner."""


class CustomEntity(BaseModel):
    permissions: Optional[ObjectPermissions] = None

    id: Optional[str] = None
    r"""Unique identifier."""

    title: Optional[str] = None
    r"""Title or name of the custom entity."""

    datasource: Optional[str] = None
    r"""The datasource the custom entity is from."""

    object_type: Annotated[Optional[str], pydantic.Field(alias="objectType")] = None
    r"""The type of the entity. Interpretation is specific to each datasource"""

    metadata: Optional[CustomEntityMetadata] = None

    roles: Optional[List["UserRoleSpecification"]] = None
    r"""A list of user roles for the custom entity explicitly granted by the owner."""
