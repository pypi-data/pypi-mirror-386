"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .toolsets import ToolSets, ToolSetsTypedDict
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AgentEnum(str, Enum):
    r"""Name of the agent."""

    DEFAULT = "DEFAULT"
    GPT = "GPT"
    UNIVERSAL = "UNIVERSAL"
    FAST = "FAST"
    ADVANCED = "ADVANCED"


class Mode(str, Enum):
    r"""Top level modes to run GleanChat in."""

    DEFAULT = "DEFAULT"
    QUICK = "QUICK"


class AgentConfigTypedDict(TypedDict):
    r"""Describes the agent that executes the request."""

    agent: NotRequired[AgentEnum]
    r"""Name of the agent."""
    tool_sets: NotRequired[ToolSetsTypedDict]
    r"""The types of tools that the agent is allowed to use. Only works with FAST and ADVANCED `agent` values"""
    mode: NotRequired[Mode]
    r"""Top level modes to run GleanChat in."""
    use_image_generation: NotRequired[bool]
    r"""Whether the agent should create an image."""


class AgentConfig(BaseModel):
    r"""Describes the agent that executes the request."""

    agent: Optional[AgentEnum] = None
    r"""Name of the agent."""

    tool_sets: Annotated[Optional[ToolSets], pydantic.Field(alias="toolSets")] = None
    r"""The types of tools that the agent is allowed to use. Only works with FAST and ADVANCED `agent` values"""

    mode: Optional[Mode] = None
    r"""Top level modes to run GleanChat in."""

    use_image_generation: Annotated[
        Optional[bool], pydantic.Field(alias="useImageGeneration")
    ] = None
    r"""Whether the agent should create an image."""
