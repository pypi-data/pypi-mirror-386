"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chatmessage import ChatMessage, ChatMessageTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ChatResponseTypedDict(TypedDict):
    r"""A single response from the /chat backend."""

    messages: NotRequired[List[ChatMessageTypedDict]]
    chat_id: NotRequired[str]
    r"""The id of the associated Chat the messages belong to, if one exists."""
    follow_up_prompts: NotRequired[List[str]]
    r"""Follow-up prompts for the user to potentially use"""
    backend_time_millis: NotRequired[int]
    r"""Time in milliseconds the backend took to respond to the request."""
    chat_session_tracking_token: NotRequired[str]
    r"""A token that is used to track the session."""


class ChatResponse(BaseModel):
    r"""A single response from the /chat backend."""

    messages: Optional[List[ChatMessage]] = None

    chat_id: Annotated[Optional[str], pydantic.Field(alias="chatId")] = None
    r"""The id of the associated Chat the messages belong to, if one exists."""

    follow_up_prompts: Annotated[
        Optional[List[str]], pydantic.Field(alias="followUpPrompts")
    ] = None
    r"""Follow-up prompts for the user to potentially use"""

    backend_time_millis: Annotated[
        Optional[int], pydantic.Field(alias="backendTimeMillis")
    ] = None
    r"""Time in milliseconds the backend took to respond to the request."""

    chat_session_tracking_token: Annotated[
        Optional[str], pydantic.Field(alias="chatSessionTrackingToken")
    ] = None
    r"""A token that is used to track the session."""
