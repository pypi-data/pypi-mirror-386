"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UserTypedDict(TypedDict):
    user_id: NotRequired[str]
    r"""An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified)."""
    orig_id: NotRequired[str]
    r"""An opaque user ID for the authenticated user (ignores actas)."""


class User(BaseModel):
    user_id: Annotated[Optional[str], pydantic.Field(alias="userID")] = None
    r"""An opaque user ID for the claimed authority (i.e., the actas param, or the origid if actas is not specified)."""

    orig_id: Annotated[Optional[str], pydantic.Field(alias="origID")] = None
    r"""An opaque user ID for the authenticated user (ignores actas)."""
