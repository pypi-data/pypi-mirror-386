"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ResultTabTypedDict(TypedDict):
    id: NotRequired[str]
    r"""The unique ID of the tab. Can be passed in a search request to get results for that tab."""
    count: NotRequired[int]
    r"""The number of results in this tab for the current query."""
    datasource: NotRequired[str]
    r"""The datasource associated with the tab, if any."""
    datasource_instance: NotRequired[str]
    r"""The datasource instance associated with the tab, if any."""


class ResultTab(BaseModel):
    id: Optional[str] = None
    r"""The unique ID of the tab. Can be passed in a search request to get results for that tab."""

    count: Optional[int] = None
    r"""The number of results in this tab for the current query."""

    datasource: Optional[str] = None
    r"""The datasource associated with the tab, if any."""

    datasource_instance: Annotated[
        Optional[str], pydantic.Field(alias="datasourceInstance")
    ] = None
    r"""The datasource instance associated with the tab, if any."""
