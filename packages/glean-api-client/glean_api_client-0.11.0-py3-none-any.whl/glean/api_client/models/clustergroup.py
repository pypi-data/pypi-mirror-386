"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .clustertypeenum import ClusterTypeEnum
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .searchresult import SearchResult, SearchResultTypedDict


class ClusterGroupTypedDict(TypedDict):
    visible_count_hint: int
    r"""The default number of results to display before truncating and showing a \"see more\" link"""
    clustered_results: NotRequired[List["SearchResultTypedDict"]]
    r"""A list of results that should be displayed as associated with this result."""
    cluster_type: NotRequired[ClusterTypeEnum]
    r"""The reason for inclusion of clusteredResults."""


class ClusterGroup(BaseModel):
    visible_count_hint: Annotated[int, pydantic.Field(alias="visibleCountHint")]
    r"""The default number of results to display before truncating and showing a \"see more\" link"""

    clustered_results: Annotated[
        Optional[List["SearchResult"]], pydantic.Field(alias="clusteredResults")
    ] = None
    r"""A list of results that should be displayed as associated with this result."""

    cluster_type: Annotated[
        Optional[ClusterTypeEnum], pydantic.Field(alias="clusterType")
    ] = None
    r"""The reason for inclusion of clusteredResults."""
