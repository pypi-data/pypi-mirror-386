"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countinfo import CountInfo, CountInfoTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class LabeledCountInfoTypedDict(TypedDict):
    label: str
    r"""Label for the included count information."""
    count_info: NotRequired[List[CountInfoTypedDict]]
    r"""List of data points for counts for a given date period."""


class LabeledCountInfo(BaseModel):
    label: str
    r"""Label for the included count information."""

    count_info: Annotated[
        Optional[List[CountInfo]], pydantic.Field(alias="countInfo")
    ] = None
    r"""List of data points for counts for a given date period."""
