"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .codeline import CodeLine, CodeLineTypedDict


class CodeTypedDict(TypedDict):
    repo_name: NotRequired[str]
    file_name: NotRequired[str]
    file_url: NotRequired[str]
    lines: NotRequired[List["CodeLineTypedDict"]]
    is_last_match: NotRequired[bool]
    r"""Last file match for a repo"""


class Code(BaseModel):
    repo_name: Annotated[Optional[str], pydantic.Field(alias="repoName")] = None

    file_name: Annotated[Optional[str], pydantic.Field(alias="fileName")] = None

    file_url: Annotated[Optional[str], pydantic.Field(alias="fileUrl")] = None

    lines: Optional[List["CodeLine"]] = None

    is_last_match: Annotated[Optional[bool], pydantic.Field(alias="isLastMatch")] = None
    r"""Last file match for a repo"""
