"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .documentspec_union import DocumentSpecUnion, DocumentSpecUnionTypedDict
from datetime import datetime
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SummarizeRequestTypedDict(TypedDict):
    r"""Summary of the document"""

    document_specs: List[DocumentSpecUnionTypedDict]
    r"""Specifications of documents to summarize"""
    timestamp: NotRequired[datetime]
    r"""The ISO 8601 timestamp associated with the client request."""
    query: NotRequired[str]
    r"""Optional query that the summary should be about"""
    preferred_summary_length: NotRequired[int]
    r"""Optional length of summary output. If not given, defaults to 500 chars."""
    tracking_token: NotRequired[str]
    r"""An opaque token that represents this particular result. To be used for /feedback reporting."""


class SummarizeRequest(BaseModel):
    r"""Summary of the document"""

    document_specs: Annotated[
        List[DocumentSpecUnion], pydantic.Field(alias="documentSpecs")
    ]
    r"""Specifications of documents to summarize"""

    timestamp: Optional[datetime] = None
    r"""The ISO 8601 timestamp associated with the client request."""

    query: Optional[str] = None
    r"""Optional query that the summary should be about"""

    preferred_summary_length: Annotated[
        Optional[int], pydantic.Field(alias="preferredSummaryLength")
    ] = None
    r"""Optional length of summary output. If not given, defaults to 500 chars."""

    tracking_token: Annotated[Optional[str], pydantic.Field(alias="trackingToken")] = (
        None
    )
    r"""An opaque token that represents this particular result. To be used for /feedback reporting."""
