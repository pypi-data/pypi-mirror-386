"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chatfilefailurereason import ChatFileFailureReason
from .chatfilestatus import ChatFileStatus
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ChatFileMetadataTypedDict(TypedDict):
    r"""Metadata of a file uploaded by a user for Chat."""

    status: NotRequired[ChatFileStatus]
    r"""Current status of the file."""
    upload_time: NotRequired[int]
    r"""Upload time, in epoch seconds."""
    processed_size: NotRequired[int]
    r"""Size of the processed file in bytes."""
    failure_reason: NotRequired[ChatFileFailureReason]
    r"""Reason for failed status."""
    mime_type: NotRequired[str]
    r"""MIME type of the file."""


class ChatFileMetadata(BaseModel):
    r"""Metadata of a file uploaded by a user for Chat."""

    status: Optional[ChatFileStatus] = None
    r"""Current status of the file."""

    upload_time: Annotated[Optional[int], pydantic.Field(alias="uploadTime")] = None
    r"""Upload time, in epoch seconds."""

    processed_size: Annotated[Optional[int], pydantic.Field(alias="processedSize")] = (
        None
    )
    r"""Size of the processed file in bytes."""

    failure_reason: Annotated[
        Optional[ChatFileFailureReason], pydantic.Field(alias="failureReason")
    ] = None
    r"""Reason for failed status."""

    mime_type: Annotated[Optional[str], pydantic.Field(alias="mimeType")] = None
    r"""MIME type of the file."""
