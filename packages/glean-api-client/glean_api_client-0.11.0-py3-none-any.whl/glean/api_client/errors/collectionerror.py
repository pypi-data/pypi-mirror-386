"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
from glean.api_client.errors import GleanBaseError
from glean.api_client.models import collectionerror as models_collectionerror
from glean.api_client.types import BaseModel
import httpx
import pydantic
from typing import Optional
from typing_extensions import Annotated


class CollectionErrorData(BaseModel):
    error_code: Annotated[
        models_collectionerror.CollectionErrorErrorCode,
        pydantic.Field(alias="errorCode"),
    ]


@dataclass(unsafe_hash=True)
class CollectionError(GleanBaseError):
    data: CollectionErrorData = field(hash=False)

    def __init__(
        self,
        data: CollectionErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
