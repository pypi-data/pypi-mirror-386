"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iconconfig import IconConfig, IconConfigTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ResultsDescriptionTypedDict(TypedDict):
    text: NotRequired[str]
    r"""Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab."""
    icon_config: NotRequired[IconConfigTypedDict]
    r"""Defines how to render an icon"""


class ResultsDescription(BaseModel):
    text: Optional[str] = None
    r"""Textual description of the results. Can be shown at the top of SERP, e.g. 'People who write about this topic' for experts in people tab."""

    icon_config: Annotated[Optional[IconConfig], pydantic.Field(alias="iconConfig")] = (
        None
    )
    r"""Defines how to render an icon"""
