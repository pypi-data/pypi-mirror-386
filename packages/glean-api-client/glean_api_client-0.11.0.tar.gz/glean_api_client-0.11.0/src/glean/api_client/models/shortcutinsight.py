"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countinfo import CountInfo, CountInfoTypedDict
from .shortcut import Shortcut, ShortcutTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ShortcutInsightTypedDict(TypedDict):
    shortcut: ShortcutTypedDict
    visit_count: NotRequired[CountInfoTypedDict]
    visitor_count: NotRequired[CountInfoTypedDict]


class ShortcutInsight(BaseModel):
    shortcut: Shortcut

    visit_count: Annotated[Optional[CountInfo], pydantic.Field(alias="visitCount")] = (
        None
    )

    visitor_count: Annotated[
        Optional[CountInfo], pydantic.Field(alias="visitorCount")
    ] = None
