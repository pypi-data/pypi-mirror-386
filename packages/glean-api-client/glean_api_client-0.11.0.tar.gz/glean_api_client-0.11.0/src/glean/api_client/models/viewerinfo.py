"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict, deprecated


@deprecated(
    "warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
)
class Role(str, Enum):
    r"""DEPRECATED - use permissions instead. Viewer's role on the specific document."""

    ANSWER_MODERATOR = "ANSWER_MODERATOR"
    OWNER = "OWNER"
    VIEWER = "VIEWER"


class ViewerInfoTypedDict(TypedDict):
    role: NotRequired[Role]
    r"""DEPRECATED - use permissions instead. Viewer's role on the specific document."""
    last_viewed_time: NotRequired[datetime]


class ViewerInfo(BaseModel):
    role: Annotated[
        Optional[Role],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ] = None
    r"""DEPRECATED - use permissions instead. Viewer's role on the specific document."""

    last_viewed_time: Annotated[
        Optional[datetime], pydantic.Field(alias="lastViewedTime")
    ] = None
