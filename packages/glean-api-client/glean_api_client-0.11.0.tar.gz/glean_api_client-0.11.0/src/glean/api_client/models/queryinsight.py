"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .countinfo import CountInfo, CountInfoTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class QueryInsightTypedDict(TypedDict):
    query: str
    r"""The query string the information is about."""
    search_count: NotRequired[CountInfoTypedDict]
    searchor_count: NotRequired[CountInfoTypedDict]
    search_with_click_count: NotRequired[CountInfoTypedDict]
    click_count: NotRequired[CountInfoTypedDict]
    similar_queries: NotRequired[List[QueryInsightTypedDict]]
    r"""list of similar queries to current one."""


class QueryInsight(BaseModel):
    query: str
    r"""The query string the information is about."""

    search_count: Annotated[
        Optional[CountInfo], pydantic.Field(alias="searchCount")
    ] = None

    searchor_count: Annotated[
        Optional[CountInfo], pydantic.Field(alias="searchorCount")
    ] = None

    search_with_click_count: Annotated[
        Optional[CountInfo], pydantic.Field(alias="searchWithClickCount")
    ] = None

    click_count: Annotated[Optional[CountInfo], pydantic.Field(alias="clickCount")] = (
        None
    )

    similar_queries: Annotated[
        Optional[List[QueryInsight]], pydantic.Field(alias="similarQueries")
    ] = None
    r"""list of similar queries to current one."""
