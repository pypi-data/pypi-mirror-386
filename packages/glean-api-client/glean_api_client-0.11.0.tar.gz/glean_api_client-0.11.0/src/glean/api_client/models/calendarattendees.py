"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .calendarattendee import CalendarAttendee, CalendarAttendeeTypedDict


class CalendarAttendeesTypedDict(TypedDict):
    people: NotRequired[List["CalendarAttendeeTypedDict"]]
    r"""Full details of some of the attendees of this event"""
    is_limit: NotRequired[bool]
    r"""Whether the total count of the people returned is at the retrieval limit."""
    total: NotRequired[int]
    r"""Total number of attendees in this event."""
    num_accepted: NotRequired[int]
    r"""Total number of attendees who have accepted this event."""
    num_declined: NotRequired[int]
    r"""Total number of attendees who have declined this event."""
    num_no_response: NotRequired[int]
    r"""Total number of attendees who have not responded to this event."""
    num_tentative: NotRequired[int]
    r"""Total number of attendees who have responded tentatively (i.e. responded maybe) to this event."""


class CalendarAttendees(BaseModel):
    people: Optional[List["CalendarAttendee"]] = None
    r"""Full details of some of the attendees of this event"""

    is_limit: Annotated[Optional[bool], pydantic.Field(alias="isLimit")] = None
    r"""Whether the total count of the people returned is at the retrieval limit."""

    total: Optional[int] = None
    r"""Total number of attendees in this event."""

    num_accepted: Annotated[Optional[int], pydantic.Field(alias="numAccepted")] = None
    r"""Total number of attendees who have accepted this event."""

    num_declined: Annotated[Optional[int], pydantic.Field(alias="numDeclined")] = None
    r"""Total number of attendees who have declined this event."""

    num_no_response: Annotated[Optional[int], pydantic.Field(alias="numNoResponse")] = (
        None
    )
    r"""Total number of attendees who have not responded to this event."""

    num_tentative: Annotated[Optional[int], pydantic.Field(alias="numTentative")] = None
    r"""Total number of attendees who have responded tentatively (i.e. responded maybe) to this event."""
