"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iconconfig import IconConfig, IconConfigTypedDict
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Scope(str, Enum):
    APP_CARD = "APP_CARD"
    AUTOCOMPLETE_EXACT_MATCH = "AUTOCOMPLETE_EXACT_MATCH"
    AUTOCOMPLETE_FUZZY_MATCH = "AUTOCOMPLETE_FUZZY_MATCH"
    AUTOCOMPLETE_ZERO_QUERY = "AUTOCOMPLETE_ZERO_QUERY"
    NEW_TAB_PAGE = "NEW_TAB_PAGE"


class QuicklinkTypedDict(TypedDict):
    r"""An action for a specific datasource that will show up in autocomplete and app card, e.g. \"Create new issue\" for jira."""

    name: NotRequired[str]
    r"""Full action name. Used in autocomplete."""
    short_name: NotRequired[str]
    r"""Shortened name. Used in app cards."""
    url: NotRequired[str]
    r"""The URL of the action."""
    icon_config: NotRequired[IconConfigTypedDict]
    r"""Defines how to render an icon"""
    id: NotRequired[str]
    r"""Unique identifier of this quicklink"""
    scopes: NotRequired[List[Scope]]
    r"""The scopes for which this quicklink is applicable"""


class Quicklink(BaseModel):
    r"""An action for a specific datasource that will show up in autocomplete and app card, e.g. \"Create new issue\" for jira."""

    name: Optional[str] = None
    r"""Full action name. Used in autocomplete."""

    short_name: Annotated[Optional[str], pydantic.Field(alias="shortName")] = None
    r"""Shortened name. Used in app cards."""

    url: Optional[str] = None
    r"""The URL of the action."""

    icon_config: Annotated[Optional[IconConfig], pydantic.Field(alias="iconConfig")] = (
        None
    )
    r"""Defines how to render an icon"""

    id: Optional[str] = None
    r"""Unique identifier of this quicklink"""

    scopes: Optional[List[Scope]] = None
    r"""The scopes for which this quicklink is applicable"""
