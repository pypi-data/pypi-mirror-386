"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .additionalfielddefinition import (
    AdditionalFieldDefinition,
    AdditionalFieldDefinitionTypedDict,
)
from .datasourceprofile import DatasourceProfile, DatasourceProfileTypedDict
from .teamemail import TeamEmail, TeamEmailTypedDict
from .teammember import TeamMember, TeamMemberTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class TeamInfoDefinitionTypedDict(TypedDict):
    r"""Information about an employee's team"""

    id: str
    r"""The unique ID of the team"""
    name: str
    r"""Human-readable team name"""
    members: List[TeamMemberTypedDict]
    r"""The members of the team"""
    description: NotRequired[str]
    r"""The description of this team"""
    business_unit: NotRequired[str]
    r"""Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses."""
    department: NotRequired[str]
    r"""An organizational unit where everyone has a similar task, e.g. `Engineering`."""
    photo_url: NotRequired[str]
    r"""A link to the team's photo"""
    external_link: NotRequired[str]
    r"""A link to an external team page. If set, team results will link to it.

    """
    emails: NotRequired[List[TeamEmailTypedDict]]
    r"""The emails of the team"""
    datasource_profiles: NotRequired[List[DatasourceProfileTypedDict]]
    r"""The datasource profiles of the team, e.g. `Slack`,`Github`."""
    additional_fields: NotRequired[List[AdditionalFieldDefinitionTypedDict]]
    r"""List of additional fields with more information about the team."""


class TeamInfoDefinition(BaseModel):
    r"""Information about an employee's team"""

    id: str
    r"""The unique ID of the team"""

    name: str
    r"""Human-readable team name"""

    members: List[TeamMember]
    r"""The members of the team"""

    description: Optional[str] = None
    r"""The description of this team"""

    business_unit: Annotated[Optional[str], pydantic.Field(alias="businessUnit")] = None
    r"""Typically the highest level organizational unit; generally applies to bigger companies with multiple distinct businesses."""

    department: Optional[str] = None
    r"""An organizational unit where everyone has a similar task, e.g. `Engineering`."""

    photo_url: Annotated[Optional[str], pydantic.Field(alias="photoUrl")] = None
    r"""A link to the team's photo"""

    external_link: Annotated[Optional[str], pydantic.Field(alias="externalLink")] = None
    r"""A link to an external team page. If set, team results will link to it.

    """

    emails: Optional[List[TeamEmail]] = None
    r"""The emails of the team"""

    datasource_profiles: Annotated[
        Optional[List[DatasourceProfile]], pydantic.Field(alias="datasourceProfiles")
    ] = None
    r"""The datasource profiles of the team, e.g. `Slack`,`Github`."""

    additional_fields: Annotated[
        Optional[List[AdditionalFieldDefinition]],
        pydantic.Field(alias="additionalFields"),
    ] = None
    r"""List of additional fields with more information about the team."""
