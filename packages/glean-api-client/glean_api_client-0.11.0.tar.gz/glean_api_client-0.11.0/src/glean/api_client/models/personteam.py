"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PersonTeamRelationship(str, Enum):
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""

    MEMBER = "MEMBER"
    MANAGER = "MANAGER"
    LEAD = "LEAD"
    POINT_OF_CONTACT = "POINT_OF_CONTACT"
    OTHER = "OTHER"


class PersonTeamTypedDict(TypedDict):
    r"""Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages"""

    id: NotRequired[str]
    r"""Unique identifier"""
    name: NotRequired[str]
    r"""Team name"""
    external_link: NotRequired[str]
    r"""Link to a team page on the internet or your company's intranet"""
    relationship: NotRequired[PersonTeamRelationship]
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""
    join_date: NotRequired[datetime]
    r"""The team member's start date"""


class PersonTeam(BaseModel):
    r"""Use `id` if you index teams via Glean, and use `name` and `externalLink` if you want to use your own team pages"""

    id: Optional[str] = None
    r"""Unique identifier"""

    name: Optional[str] = None
    r"""Team name"""

    external_link: Annotated[Optional[str], pydantic.Field(alias="externalLink")] = None
    r"""Link to a team page on the internet or your company's intranet"""

    relationship: Optional[PersonTeamRelationship] = PersonTeamRelationship.MEMBER
    r"""The team member's relationship to the team. This defaults to MEMBER if not set."""

    join_date: Annotated[Optional[datetime], pydantic.Field(alias="joinDate")] = None
    r"""The team member's start date"""
