"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iconconfig import IconConfig, IconConfigTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PerAgentInsightTypedDict(TypedDict):
    agent_id: NotRequired[str]
    r"""Agent ID"""
    agent_name: NotRequired[str]
    r"""Agent name"""
    icon: NotRequired[IconConfigTypedDict]
    r"""Defines how to render an icon"""
    user_count: NotRequired[int]
    r"""Total number of users for this agent over the specified time period."""
    run_count: NotRequired[int]
    r"""Total number of runs for this agent over the specified time period."""


class PerAgentInsight(BaseModel):
    agent_id: Annotated[Optional[str], pydantic.Field(alias="agentId")] = None
    r"""Agent ID"""

    agent_name: Annotated[Optional[str], pydantic.Field(alias="agentName")] = None
    r"""Agent name"""

    icon: Optional[IconConfig] = None
    r"""Defines how to render an icon"""

    user_count: Annotated[Optional[int], pydantic.Field(alias="userCount")] = None
    r"""Total number of users for this agent over the specified time period."""

    run_count: Annotated[Optional[int], pydantic.Field(alias="runCount")] = None
    r"""Total number of runs for this agent over the specified time period."""
