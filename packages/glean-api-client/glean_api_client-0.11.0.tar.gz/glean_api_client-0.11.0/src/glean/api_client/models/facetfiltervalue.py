"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RelationType(str, Enum):
    EQUALS = "EQUALS"
    ID_EQUALS = "ID_EQUALS"
    LT = "LT"
    GT = "GT"
    NOT_EQUALS = "NOT_EQUALS"


class FacetFilterValueTypedDict(TypedDict):
    value: NotRequired[str]
    relation_type: NotRequired[RelationType]
    is_negated: NotRequired[bool]
    r"""DEPRECATED - please use relationType instead"""


class FacetFilterValue(BaseModel):
    value: Optional[str] = None

    relation_type: Annotated[
        Optional[RelationType], pydantic.Field(alias="relationType")
    ] = None

    is_negated: Annotated[
        Optional[bool],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.",
            alias="isNegated",
        ),
    ] = None
    r"""DEPRECATED - please use relationType instead"""
