"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, TYPE_CHECKING
from typing_extensions import Annotated, TypedDict

if TYPE_CHECKING:
    from .answerlike import AnswerLike, AnswerLikeTypedDict


class AnswerLikesTypedDict(TypedDict):
    liked_by: List["AnswerLikeTypedDict"]
    liked_by_user: bool
    r"""Whether the user in context liked the answer."""
    num_likes: int
    r"""The total number of likes for the answer."""


class AnswerLikes(BaseModel):
    liked_by: Annotated[List["AnswerLike"], pydantic.Field(alias="likedBy")]

    liked_by_user: Annotated[bool, pydantic.Field(alias="likedByUser")]
    r"""Whether the user in context liked the answer."""

    num_likes: Annotated[int, pydantic.Field(alias="numLikes")]
    r"""The total number of likes for the answer."""
