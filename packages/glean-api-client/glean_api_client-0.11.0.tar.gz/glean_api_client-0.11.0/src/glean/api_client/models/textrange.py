"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .document import Document, DocumentTypedDict


class TextRangeType(str, Enum):
    BOLD = "BOLD"
    CITATION = "CITATION"
    HIGHLIGHT = "HIGHLIGHT"
    LINK = "LINK"


class TextRangeTypedDict(TypedDict):
    r"""A subsection of a given string to which some special formatting should be applied."""

    start_index: int
    r"""The inclusive start index of the range."""
    end_index: NotRequired[int]
    r"""The exclusive end index of the range."""
    type: NotRequired[TextRangeType]
    url: NotRequired[str]
    r"""The URL associated with the range, if applicable. For example, the linked URL for a LINK range."""
    document: NotRequired["DocumentTypedDict"]


class TextRange(BaseModel):
    r"""A subsection of a given string to which some special formatting should be applied."""

    start_index: Annotated[int, pydantic.Field(alias="startIndex")]
    r"""The inclusive start index of the range."""

    end_index: Annotated[Optional[int], pydantic.Field(alias="endIndex")] = None
    r"""The exclusive end index of the range."""

    type: Optional[TextRangeType] = None

    url: Optional[str] = None
    r"""The URL associated with the range, if applicable. For example, the linked URL for a LINK range."""

    document: Optional["Document"] = None
