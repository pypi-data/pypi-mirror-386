"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iconconfig import IconConfig, IconConfigTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class BadgeTypedDict(TypedDict):
    r"""Displays a user's accomplishment or milestone"""

    key: NotRequired[str]
    r"""An auto generated unique identifier."""
    display_name: NotRequired[str]
    r"""The badge name displayed to users"""
    icon_config: NotRequired[IconConfigTypedDict]
    r"""Defines how to render an icon"""
    pinned: NotRequired[bool]
    r"""The badge should be shown on the PersonAttribution"""


class Badge(BaseModel):
    r"""Displays a user's accomplishment or milestone"""

    key: Optional[str] = None
    r"""An auto generated unique identifier."""

    display_name: Annotated[Optional[str], pydantic.Field(alias="displayName")] = None
    r"""The badge name displayed to users"""

    icon_config: Annotated[Optional[IconConfig], pydantic.Field(alias="iconConfig")] = (
        None
    )
    r"""Defines how to render an icon"""

    pinned: Optional[bool] = None
    r"""The badge should be shown on the PersonAttribution"""
