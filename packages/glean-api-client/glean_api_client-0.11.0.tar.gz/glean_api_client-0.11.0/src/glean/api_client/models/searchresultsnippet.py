"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .textrange import TextRange, TextRangeTypedDict


class SearchResultSnippetTypedDict(TypedDict):
    snippet: str
    r"""A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007. Use 'text' field instead."""
    mime_type: NotRequired[str]
    r"""The mime type of the snippets, currently either text/plain or text/html."""
    text: NotRequired[str]
    r"""A matching snippet from the document with no highlights."""
    snippet_text_ordering: NotRequired[int]
    r"""Used for sorting based off the snippet's location within all_snippetable_text"""
    ranges: NotRequired[List["TextRangeTypedDict"]]
    r"""The bolded ranges within text."""
    url: NotRequired[str]
    r"""A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text."""


class SearchResultSnippet(BaseModel):
    snippet: Annotated[
        str,
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
        ),
    ]
    r"""A matching snippet from the document. Query term matches are marked by the unicode characters uE006 and uE007. Use 'text' field instead."""

    mime_type: Annotated[Optional[str], pydantic.Field(alias="mimeType")] = None
    r"""The mime type of the snippets, currently either text/plain or text/html."""

    text: Optional[str] = None
    r"""A matching snippet from the document with no highlights."""

    snippet_text_ordering: Annotated[
        Optional[int], pydantic.Field(alias="snippetTextOrdering")
    ] = None
    r"""Used for sorting based off the snippet's location within all_snippetable_text"""

    ranges: Optional[List["TextRange"]] = None
    r"""The bolded ranges within text."""

    url: Optional[str] = None
    r"""A URL, generated based on availability, that links to the position of the snippet text or to the nearest header above the snippet text."""
