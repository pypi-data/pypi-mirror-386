"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .agentsusagebydepartmentinsight import (
    AgentsUsageByDepartmentInsight,
    AgentsUsageByDepartmentInsightTypedDict,
)
from .agentusersinsight import AgentUsersInsight, AgentUsersInsightTypedDict
from .labeledcountinfo import LabeledCountInfo, LabeledCountInfoTypedDict
from .peragentinsight import PerAgentInsight, PerAgentInsightTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AgentsInsightsV2ResponseTypedDict(TypedDict):
    monthly_active_users: NotRequired[int]
    r"""Number of current Monthly Active Users, in the specified departments."""
    weekly_active_users: NotRequired[int]
    r"""Number of current Weekly Active Users, in the specified departments."""
    monthly_active_user_timeseries: NotRequired[LabeledCountInfoTypedDict]
    weekly_active_user_timeseries: NotRequired[LabeledCountInfoTypedDict]
    daily_active_user_timeseries: NotRequired[LabeledCountInfoTypedDict]
    shared_agents_count: NotRequired[int]
    r"""Total number of shared agents."""
    top_agents_insights: NotRequired[List[PerAgentInsightTypedDict]]
    agents_usage_by_department_insights: NotRequired[
        List[AgentsUsageByDepartmentInsightTypedDict]
    ]
    agent_users_insights: NotRequired[List[AgentUsersInsightTypedDict]]
    daily_agent_runs_timeseries: NotRequired[LabeledCountInfoTypedDict]


class AgentsInsightsV2Response(BaseModel):
    monthly_active_users: Annotated[
        Optional[int], pydantic.Field(alias="monthlyActiveUsers")
    ] = None
    r"""Number of current Monthly Active Users, in the specified departments."""

    weekly_active_users: Annotated[
        Optional[int], pydantic.Field(alias="weeklyActiveUsers")
    ] = None
    r"""Number of current Weekly Active Users, in the specified departments."""

    monthly_active_user_timeseries: Annotated[
        Optional[LabeledCountInfo], pydantic.Field(alias="monthlyActiveUserTimeseries")
    ] = None

    weekly_active_user_timeseries: Annotated[
        Optional[LabeledCountInfo], pydantic.Field(alias="weeklyActiveUserTimeseries")
    ] = None

    daily_active_user_timeseries: Annotated[
        Optional[LabeledCountInfo], pydantic.Field(alias="dailyActiveUserTimeseries")
    ] = None

    shared_agents_count: Annotated[
        Optional[int], pydantic.Field(alias="sharedAgentsCount")
    ] = None
    r"""Total number of shared agents."""

    top_agents_insights: Annotated[
        Optional[List[PerAgentInsight]], pydantic.Field(alias="topAgentsInsights")
    ] = None

    agents_usage_by_department_insights: Annotated[
        Optional[List[AgentsUsageByDepartmentInsight]],
        pydantic.Field(alias="agentsUsageByDepartmentInsights"),
    ] = None

    agent_users_insights: Annotated[
        Optional[List[AgentUsersInsight]], pydantic.Field(alias="agentUsersInsights")
    ] = None

    daily_agent_runs_timeseries: Annotated[
        Optional[LabeledCountInfo], pydantic.Field(alias="dailyAgentRunsTimeseries")
    ] = None
