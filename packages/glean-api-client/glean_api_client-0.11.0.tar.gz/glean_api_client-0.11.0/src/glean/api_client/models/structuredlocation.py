"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StructuredLocationTypedDict(TypedDict):
    r"""Detailed location with information about country, state, city etc."""

    desk_location: NotRequired[str]
    r"""Desk number."""
    timezone: NotRequired[str]
    r"""Location's timezone, e.g. UTC, PST."""
    address: NotRequired[str]
    r"""Office address or name."""
    city: NotRequired[str]
    r"""Name of the city."""
    state: NotRequired[str]
    r"""State code."""
    region: NotRequired[str]
    r"""Region information, e.g. NORAM, APAC."""
    zip_code: NotRequired[str]
    r"""ZIP Code for the address."""
    country: NotRequired[str]
    r"""Country name."""
    country_code: NotRequired[str]
    r"""Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA."""


class StructuredLocation(BaseModel):
    r"""Detailed location with information about country, state, city etc."""

    desk_location: Annotated[Optional[str], pydantic.Field(alias="deskLocation")] = None
    r"""Desk number."""

    timezone: Optional[str] = None
    r"""Location's timezone, e.g. UTC, PST."""

    address: Optional[str] = None
    r"""Office address or name."""

    city: Optional[str] = None
    r"""Name of the city."""

    state: Optional[str] = None
    r"""State code."""

    region: Optional[str] = None
    r"""Region information, e.g. NORAM, APAC."""

    zip_code: Annotated[Optional[str], pydantic.Field(alias="zipCode")] = None
    r"""ZIP Code for the address."""

    country: Optional[str] = None
    r"""Country name."""

    country_code: Annotated[Optional[str], pydantic.Field(alias="countryCode")] = None
    r"""Alpha-2 or Alpha-3 ISO 3166 country code, e.g. US or USA."""
