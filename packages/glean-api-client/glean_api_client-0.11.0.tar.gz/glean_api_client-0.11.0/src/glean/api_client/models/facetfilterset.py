"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .facetfilter import FacetFilter, FacetFilterTypedDict
from glean.api_client.types import BaseModel
from typing import List, Optional
from typing_extensions import NotRequired, TypedDict


class FacetFilterSetTypedDict(TypedDict):
    r"""Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets."""

    filters: NotRequired[List[FacetFilterTypedDict]]


class FacetFilterSet(BaseModel):
    r"""Within a single FacetFilterSet, the filters are treated as AND. For example, owner Sumeet and type Spreadsheet shows documents that are by Sumeet AND are Spreadsheets."""

    filters: Optional[List[FacetFilter]] = None
