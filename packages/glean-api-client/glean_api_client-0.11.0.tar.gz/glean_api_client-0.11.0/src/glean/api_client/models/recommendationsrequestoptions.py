"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .document import Document, DocumentTypedDict
from .facetfilterset import FacetFilterSet, FacetFilterSetTypedDict
from .searchresultprominenceenum import SearchResultProminenceEnum
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RecommendationsRequestOptionsTypedDict(TypedDict):
    datasource_filter: NotRequired[str]
    r"""Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing."""
    datasources_filter: NotRequired[List[str]]
    r"""Filter results to only those relevant to one or more datasources (e.g. jira, gdrive). All results are returned if missing."""
    facet_filter_sets: NotRequired[List[FacetFilterSetTypedDict]]
    r"""A list of facet filter sets that will be OR'ed together."""
    context: NotRequired[DocumentTypedDict]
    result_prominence: NotRequired[List[SearchResultProminenceEnum]]
    r"""The types of prominence wanted in results returned. Default is any type."""


class RecommendationsRequestOptions(BaseModel):
    datasource_filter: Annotated[
        Optional[str], pydantic.Field(alias="datasourceFilter")
    ] = None
    r"""Filter results to a single datasource name (e.g. gmail, slack). All results are returned if missing."""

    datasources_filter: Annotated[
        Optional[List[str]], pydantic.Field(alias="datasourcesFilter")
    ] = None
    r"""Filter results to only those relevant to one or more datasources (e.g. jira, gdrive). All results are returned if missing."""

    facet_filter_sets: Annotated[
        Optional[List[FacetFilterSet]], pydantic.Field(alias="facetFilterSets")
    ] = None
    r"""A list of facet filter sets that will be OR'ed together."""

    context: Optional[Document] = None

    result_prominence: Annotated[
        Optional[List[SearchResultProminenceEnum]],
        pydantic.Field(alias="resultProminence"),
    ] = None
    r"""The types of prominence wanted in results returned. Default is any type."""
