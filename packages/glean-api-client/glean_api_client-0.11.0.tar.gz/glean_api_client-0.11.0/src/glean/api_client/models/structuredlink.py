"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .iconconfig import IconConfig, IconConfigTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class StructuredLinkTypedDict(TypedDict):
    r"""The display configuration for a link."""

    name: NotRequired[str]
    r"""The display name for the link"""
    url: NotRequired[str]
    r"""The URL for the link."""
    icon_config: NotRequired[IconConfigTypedDict]
    r"""Defines how to render an icon"""


class StructuredLink(BaseModel):
    r"""The display configuration for a link."""

    name: Optional[str] = None
    r"""The display name for the link"""

    url: Optional[str] = None
    r"""The URL for the link."""

    icon_config: Annotated[Optional[IconConfig], pydantic.Field(alias="iconConfig")] = (
        None
    )
    r"""Defines how to render an icon"""
