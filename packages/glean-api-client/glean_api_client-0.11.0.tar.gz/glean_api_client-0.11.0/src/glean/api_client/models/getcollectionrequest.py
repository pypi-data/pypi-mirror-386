"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetCollectionRequestTypedDict(TypedDict):
    id: int
    r"""The ID of the Collection to be retrieved."""
    with_items: NotRequired[bool]
    r"""Whether or not to include the Collection Items in this Collection. Only request if absolutely required, as this is expensive."""
    with_hierarchy: NotRequired[bool]
    r"""Whether or not to include the top level Collection in this Collection's hierarchy."""
    allowed_datasource: NotRequired[str]
    r"""The datasource allowed in the Collection returned."""


class GetCollectionRequest(BaseModel):
    id: int
    r"""The ID of the Collection to be retrieved."""

    with_items: Annotated[Optional[bool], pydantic.Field(alias="withItems")] = None
    r"""Whether or not to include the Collection Items in this Collection. Only request if absolutely required, as this is expensive."""

    with_hierarchy: Annotated[Optional[bool], pydantic.Field(alias="withHierarchy")] = (
        None
    )
    r"""Whether or not to include the top level Collection in this Collection's hierarchy."""

    allowed_datasource: Annotated[
        Optional[str], pydantic.Field(alias="allowedDatasource")
    ] = None
    r"""The datasource allowed in the Collection returned."""
