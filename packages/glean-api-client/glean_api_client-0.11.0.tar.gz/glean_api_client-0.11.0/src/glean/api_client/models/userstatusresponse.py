"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .uploadstatusenum import UploadStatusEnum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UserStatusResponseTypedDict(TypedDict):
    r"""Describes the user status response body"""

    is_active_user: NotRequired[bool]
    r"""Whether the user is active or not"""
    upload_status: NotRequired[UploadStatusEnum]
    r"""Upload status, enum of NOT_UPLOADED, UPLOADED, STATUS_UNKNOWN"""
    last_uploaded_at: NotRequired[str]
    r"""Time of last successful upload for the user, in ISO 8601 format"""


class UserStatusResponse(BaseModel):
    r"""Describes the user status response body"""

    is_active_user: Annotated[Optional[bool], pydantic.Field(alias="isActiveUser")] = (
        None
    )
    r"""Whether the user is active or not"""

    upload_status: Annotated[
        Optional[UploadStatusEnum], pydantic.Field(alias="uploadStatus")
    ] = None
    r"""Upload status, enum of NOT_UPLOADED, UPLOADED, STATUS_UNKNOWN"""

    last_uploaded_at: Annotated[
        Optional[str], pydantic.Field(alias="lastUploadedAt")
    ] = None
    r"""Time of last successful upload for the user, in ISO 8601 format"""
