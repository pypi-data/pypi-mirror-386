"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .feedback import Feedback, FeedbackTypedDict
from glean.api_client.types import BaseModel
from glean.api_client.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class FeedbackRequestTypedDict(TypedDict):
    feedback_query_parameter: NotRequired[str]
    r"""A URL encoded versions of Feedback. This is useful for requests."""
    feedback1: NotRequired[FeedbackTypedDict]


class FeedbackRequest(BaseModel):
    feedback_query_parameter: Annotated[
        Optional[str],
        pydantic.Field(alias="feedback"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A URL encoded versions of Feedback. This is useful for requests."""

    feedback1: Annotated[
        Optional[Feedback],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None
