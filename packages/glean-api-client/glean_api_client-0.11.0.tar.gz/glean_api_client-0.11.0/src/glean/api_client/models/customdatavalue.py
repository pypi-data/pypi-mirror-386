"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CustomDataValueTypedDict(TypedDict):
    display_label: NotRequired[str]
    string_value: NotRequired[str]
    string_list_value: NotRequired[List[str]]
    r"""list of strings for multi-value properties"""
    number_value: NotRequired[float]
    boolean_value: NotRequired[bool]


class CustomDataValue(BaseModel):
    display_label: Annotated[Optional[str], pydantic.Field(alias="displayLabel")] = None

    string_value: Annotated[Optional[str], pydantic.Field(alias="stringValue")] = None

    string_list_value: Annotated[
        Optional[List[str]], pydantic.Field(alias="stringListValue")
    ] = None
    r"""list of strings for multi-value properties"""

    number_value: Annotated[Optional[float], pydantic.Field(alias="numberValue")] = None

    boolean_value: Annotated[Optional[bool], pydantic.Field(alias="booleanValue")] = (
        None
    )
