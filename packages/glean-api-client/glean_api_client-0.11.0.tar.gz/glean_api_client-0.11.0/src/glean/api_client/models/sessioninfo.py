"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class SessionInfoTypedDict(TypedDict):
    session_tracking_token: NotRequired[str]
    r"""A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab."""
    tab_id: NotRequired[str]
    r"""A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab."""
    last_seen: NotRequired[datetime]
    r"""The last time the server saw this token."""
    last_query: NotRequired[str]
    r"""The last query seen by the server."""


class SessionInfo(BaseModel):
    session_tracking_token: Annotated[
        Optional[str], pydantic.Field(alias="sessionTrackingToken")
    ] = None
    r"""A unique token for this session. A new session (and token) is created when the user issues a request from a new tab or when our server hasn't seen activity for more than 10 minutes from a tab."""

    tab_id: Annotated[Optional[str], pydantic.Field(alias="tabId")] = None
    r"""A unique id for all requests a user makes from a given tab, no matter how far apart. A new tab id is only generated when a user issues a request from a new tab."""

    last_seen: Annotated[Optional[datetime], pydantic.Field(alias="lastSeen")] = None
    r"""The last time the server saw this token."""

    last_query: Annotated[Optional[str], pydantic.Field(alias="lastQuery")] = None
    r"""The last query seen by the server."""
