"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .permissionsgroupintersectiondefinition import (
    PermissionsGroupIntersectionDefinition,
    PermissionsGroupIntersectionDefinitionTypedDict,
)
from .userreferencedefinition import (
    UserReferenceDefinition,
    UserReferenceDefinitionTypedDict,
)
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DocumentPermissionsDefinitionTypedDict(TypedDict):
    r"""describes the access control details of the document"""

    allowed_users: NotRequired[List[UserReferenceDefinitionTypedDict]]
    r"""List of users who can view the document"""
    allowed_groups: NotRequired[List[str]]
    r"""List of groups that can view the document"""
    allowed_group_intersections: NotRequired[
        List[PermissionsGroupIntersectionDefinitionTypedDict]
    ]
    r"""List of allowed group intersections. This describes a permissions constraint of the form ((GroupA AND GroupB AND GroupC) OR (GroupX AND GroupY) OR ..."""
    allow_anonymous_access: NotRequired[bool]
    r"""If true, then any Glean user can view the document"""
    allow_all_datasource_users_access: NotRequired[bool]
    r"""If true, then any user who has an account in the datasource can view the document."""


class DocumentPermissionsDefinition(BaseModel):
    r"""describes the access control details of the document"""

    allowed_users: Annotated[
        Optional[List[UserReferenceDefinition]], pydantic.Field(alias="allowedUsers")
    ] = None
    r"""List of users who can view the document"""

    allowed_groups: Annotated[
        Optional[List[str]], pydantic.Field(alias="allowedGroups")
    ] = None
    r"""List of groups that can view the document"""

    allowed_group_intersections: Annotated[
        Optional[List[PermissionsGroupIntersectionDefinition]],
        pydantic.Field(alias="allowedGroupIntersections"),
    ] = None
    r"""List of allowed group intersections. This describes a permissions constraint of the form ((GroupA AND GroupB AND GroupC) OR (GroupX AND GroupY) OR ..."""

    allow_anonymous_access: Annotated[
        Optional[bool], pydantic.Field(alias="allowAnonymousAccess")
    ] = None
    r"""If true, then any Glean user can view the document"""

    allow_all_datasource_users_access: Annotated[
        Optional[bool], pydantic.Field(alias="allowAllDatasourceUsersAccess")
    ] = None
    r"""If true, then any user who has an account in the datasource can view the document."""
