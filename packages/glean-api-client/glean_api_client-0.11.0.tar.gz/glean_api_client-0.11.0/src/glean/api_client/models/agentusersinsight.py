"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .person import Person, PersonTypedDict
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class AgentUsersInsightTypedDict(TypedDict):
    person: NotRequired[PersonTypedDict]
    department_name: NotRequired[str]
    r"""Department name"""
    agents_used_count: NotRequired[int]
    r"""Total number of agents used by this user over the specified time period."""
    average_runs_per_day_count: NotRequired[float]
    r"""Average number of runs per day for this user over the specified time period."""
    agents_created_count: NotRequired[int]
    r"""Total number of agents created by this user over the specified time period."""
    run_count: NotRequired[int]
    r"""Total number of agent runs for this user over the specified time period."""


class AgentUsersInsight(BaseModel):
    person: Optional[Person] = None

    department_name: Annotated[
        Optional[str], pydantic.Field(alias="departmentName")
    ] = None
    r"""Department name"""

    agents_used_count: Annotated[
        Optional[int], pydantic.Field(alias="agentsUsedCount")
    ] = None
    r"""Total number of agents used by this user over the specified time period."""

    average_runs_per_day_count: Annotated[
        Optional[float], pydantic.Field(alias="averageRunsPerDayCount")
    ] = None
    r"""Average number of runs per day for this user over the specified time period."""

    agents_created_count: Annotated[
        Optional[int], pydantic.Field(alias="agentsCreatedCount")
    ] = None
    r"""Total number of agents created by this user over the specified time period."""

    run_count: Annotated[Optional[int], pydantic.Field(alias="runCount")] = None
    r"""Total number of agent runs for this user over the specified time period."""
