"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from glean.api_client.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict, deprecated


@deprecated(
    "warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible."
)
class LikelihoodThreshold(str, Enum):
    LIKELY = "LIKELY"
    VERY_LIKELY = "VERY_LIKELY"


class SensitiveInfoTypeTypedDict(TypedDict):
    likelihood_threshold: NotRequired[LikelihoodThreshold]
    info_type: NotRequired[str]
    r"""Text representation of an info-type to scan for."""


class SensitiveInfoType(BaseModel):
    likelihood_threshold: Annotated[
        Optional[LikelihoodThreshold],
        pydantic.Field(
            deprecated="warning: ** DEPRECATED ** - This will be removed in a future release, please migrate away from it as soon as possible.",
            alias="likelihoodThreshold",
        ),
    ] = None

    info_type: Annotated[Optional[str], pydantic.Field(alias="infoType")] = None
    r"""Text representation of an info-type to scan for."""
