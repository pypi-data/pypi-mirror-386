"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.api_client.types import BaseModel
import pydantic
from typing import List, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .person import Person, PersonTypedDict


class ReactionTypedDict(TypedDict):
    type: NotRequired[str]
    count: NotRequired[int]
    r"""The count of the reaction type on the document."""
    reactors: NotRequired[List["PersonTypedDict"]]
    reacted_by_viewer: NotRequired[bool]
    r"""Whether the user in context reacted with this type to the document."""


class Reaction(BaseModel):
    type: Optional[str] = None

    count: Optional[int] = None
    r"""The count of the reaction type on the document."""

    reactors: Optional[List["Person"]] = None

    reacted_by_viewer: Annotated[
        Optional[bool], pydantic.Field(alias="reactedByViewer")
    ] = None
    r"""Whether the user in context reacted with this type to the document."""
