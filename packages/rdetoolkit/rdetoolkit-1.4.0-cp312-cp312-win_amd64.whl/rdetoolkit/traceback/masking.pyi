from _typeshed import Incomplete
from typing import Any

class SecretsSanitizer:
    default_patterns: Incomplete
    mask_string: str
    patterns: Incomplete
    compiled_patterns: Incomplete
    def __init__(self, custom_patterns: list[str] | None = None) -> None: ...
    def check_mask(self, variable_name: str) -> bool: ...
    def mask_value(self, variable_name: str, value: Any) -> str: ...
    def mask_dict(self, data: dict[str, Any]) -> dict[str, str]: ...
    def truncate_value(self, value: str, max_size: int) -> str: ...
    def process_locals(self, frame_locals: dict[str, Any], max_size: int = 50) -> dict[str, str]: ...
