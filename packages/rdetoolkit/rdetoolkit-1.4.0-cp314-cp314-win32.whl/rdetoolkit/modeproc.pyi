from _typeshed import Incomplete
from pathlib import Path
from rdetoolkit.impl.input_controller import ExcelInvoiceChecker as ExcelInvoiceChecker, InvoiceChecker as InvoiceChecker, MultiFileChecker as MultiFileChecker, RDEFormatChecker as RDEFormatChecker, SmartTableChecker as SmartTableChecker
from rdetoolkit.interfaces.filechecker import IInputFileChecker as IInputFileChecker
from rdetoolkit.models.config import Config as Config
from rdetoolkit.models.rde2types import DatasetCallback as DatasetCallback, RdeInputDirPaths as RdeInputDirPaths, RdeOutputResourcePath as RdeOutputResourcePath
from rdetoolkit.models.result import WorkflowExecutionStatus as WorkflowExecutionStatus
from rdetoolkit.processing.context import ProcessingContext as ProcessingContext
from rdetoolkit.processing.factories import PipelineFactory as PipelineFactory
from rdetoolkit.rdelogger import get_logger as get_logger

logger: Incomplete

def rdeformat_mode_process(index: str, srcpaths: RdeInputDirPaths, resource_paths: RdeOutputResourcePath, datasets_process_function: DatasetCallback | None = None) -> WorkflowExecutionStatus: ...
def multifile_mode_process(index: str, srcpaths: RdeInputDirPaths, resource_paths: RdeOutputResourcePath, datasets_process_function: DatasetCallback | None = None) -> WorkflowExecutionStatus: ...
def excel_invoice_mode_process(srcpaths: RdeInputDirPaths, resource_paths: RdeOutputResourcePath, excel_invoice_file: Path, idx: int, datasets_process_function: DatasetCallback | None = None) -> WorkflowExecutionStatus: ...
def invoice_mode_process(index: str, srcpaths: RdeInputDirPaths, resource_paths: RdeOutputResourcePath, datasets_process_function: DatasetCallback | None = None) -> WorkflowExecutionStatus: ...
def smarttable_invoice_mode_process(index: str, srcpaths: RdeInputDirPaths, resource_paths: RdeOutputResourcePath, smarttable_file: Path, datasets_process_function: DatasetCallback | None = None) -> WorkflowExecutionStatus: ...
def copy_input_to_rawfile_for_rdeformat(resource_paths: RdeOutputResourcePath) -> None: ...
def copy_input_to_rawfile(raw_dir_path: Path, raw_files: tuple[Path, ...]) -> None: ...
def selected_input_checker(src_paths: RdeInputDirPaths, unpacked_dir_path: Path, mode: str | None, config: Config | None = None) -> IInputFileChecker: ...
