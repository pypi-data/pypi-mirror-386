[tox]
requires = tox-uv>=1.28.1
skipsdist = True
envlist =
    py3{9,10,11,12,13}-{module,ruff,mypy}
    ruff
    ruff-fix
    mypy
skip_missing_interpreters = True

[testenv]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:module]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:py39-module]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:py310-module]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:py311-module]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:py312-module]
installer = uv
setenv =
    UV_TLS = --native-tls
; deps = -rrequirements-dev.lock
extras =
    minio
commands_pre =
    uv {env:UV_TLS} pip install .[minio] .[plotly] --group dev
commands =
    python3 -m pytest -m "not graph_outputs" --cov-config=pyproject.toml --cov=rdetoolkit --cov-report=html --cov-report=xml --cov-report=term-missing --cov-fail-under=80 tests

[testenv:ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:py39-ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:py310-ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:py311-ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:py312-ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:py313-ruff]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  ruff check src/rdetoolkit/

[testenv:ruff-fix]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
commands =
  ruff check --fix src/rdetoolkit/

[testenv:lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:py39-lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:py310-lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:py311-lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:py312-lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:py313-lizard]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  # Due to not having been able to refactor.
  lizard src/rdetoolkit/workflows.py -C 16
  lizard src/rdetoolkit/__main__.py -C 10
  lizard src/rdetoolkit/  -C 10 -x src/rdetoolkit/workflows.py -x src/rdetoolkit/__main__.py

[testenv:mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/

[testenv:py39-mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/

[testenv:py310-mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/

[testenv:py311-mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps = -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/

[testenv:py312-mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/

[testenv:py313-mypy]
installer = uv
setenv =
    UV_TLS = --native-tls
skip_install = true
; deps =
    ; setuptools
    ; -rrequirements-dev.lock
extras =
    minio
commands =
  mypy src/
