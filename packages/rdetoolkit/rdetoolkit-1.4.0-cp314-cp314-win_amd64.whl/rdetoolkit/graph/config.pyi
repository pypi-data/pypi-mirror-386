from collections.abc import Sequence
from rdetoolkit.graph.models import AxisConfig as AxisConfig, CSVFormat as CSVFormat, DirectionConfig as DirectionConfig, LegendConfig as LegendConfig, OutputConfig as OutputConfig, PlotConfig as PlotConfig, PlotMode as PlotMode
from typing import Any

DEFAULT_PLOT_PARAMS: dict[str, Any]
DEFAULT_FIG_SIZE: tuple[float, float]

class PlotConfigBuilder:
    def __init__(self) -> None: ...
    @property
    def fig_size(self) -> tuple[float, float]: ...
    @property
    def matplotlib_params(self) -> dict[str, Any]: ...
    def set_mode(self, mode: PlotMode) -> PlotConfigBuilder: ...
    def set_title(self, title: str | None) -> PlotConfigBuilder: ...
    def set_figure_size(self, width: float, height: float) -> PlotConfigBuilder: ...
    def set_matplotlib_params(self, **params: Any) -> PlotConfigBuilder: ...
    def set_x_axis(self, axis_config: AxisConfig) -> PlotConfigBuilder: ...
    def set_y_axis(self, axis_config: AxisConfig) -> PlotConfigBuilder: ...
    def set_y2_axis(self, axis_config: AxisConfig | None) -> PlotConfigBuilder: ...
    def set_legend(self, legend_config: LegendConfig) -> PlotConfigBuilder: ...
    def set_direction(self, direction_config: DirectionConfig) -> PlotConfigBuilder: ...
    def set_output(self, output_config: OutputConfig) -> PlotConfigBuilder: ...
    def set_humanize(self, humanize: bool) -> PlotConfigBuilder: ...
    def set_csv_format(self, csv_format: CSVFormat) -> PlotConfigBuilder: ...
    def set_columns(self, x_col: int | str | Sequence[int | str] | None = None, y_cols: Sequence[int | str] | None = None, direction_cols: Sequence[int | str | None] | None = None) -> PlotConfigBuilder: ...
    def build(self) -> PlotConfig: ...

def apply_matplotlib_config(matplotlib_params: dict[str, Any] | None = None) -> None: ...
