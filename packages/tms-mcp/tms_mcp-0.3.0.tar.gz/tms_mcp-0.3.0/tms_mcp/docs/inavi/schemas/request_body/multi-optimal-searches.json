{
  "schema": {
    "type": "object",
    "description": "Multi optimal point search request body",
    "properties": {
      "points": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Represents X, Y coordinate values.",
          "properties": {
            "posX": {
              "type": "string",
              "description": "Represents the X coordinate.",
              "example": "126.9071869221794",
              "minLength": 1
            },
            "posY": {
              "type": "string",
              "description": "Represents the Y coordinate.",
              "example": "37.53078938747262",
              "minLength": 1
            }
          },
          "required": [
            "posX",
            "posY"
          ]
        },
        "maxItems": 50,
        "minItems": 1
      },
      "option": {
        "type": "object",
        "description": "You can set the optimal point properties and maximum number of results.",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32",
            "description": "Represents the optimal point property. Values from 0 to 7 can be used as input, with a default value of 0. 0 means all, 1 is vehicle entrance point, 2 is taxi boarding/alighting point (building), 3 is taxi boarding/alighting point (complex), 4 is delivery vehicle drop-off point, 5 is pedestrian entrance point, 6 is delivery drop-off point (vehicle, motorcycle), and 7 is delivery drop-off point (bicycle, walking).",
            "examples": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ]
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Represents the maximum number of result lists. The default value is -1, which returns all result counts. If you input an arbitrary positive integer n, it will return a maximum of n lists.",
            "example": -1
          }
        }
      }
    }
  }
}
