# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from spaceone.api.cost_analysis.v1 import job_task_pb2 as spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2


class JobTaskStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
                '/spaceone.api.cost_analysis.v1.JobTask/get',
                request_serializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.GetJobTaskRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskInfo.FromString,
                )
        self.list = channel.unary_unary(
                '/spaceone.api.cost_analysis.v1.JobTask/list',
                request_serializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskQuery.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTasksInfo.FromString,
                )
        self.stat = channel.unary_unary(
                '/spaceone.api.cost_analysis.v1.JobTask/stat',
                request_serializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskStatQuery.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                )


class JobTaskServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get(self, request, context):
        """
        desc: Gets a specific JobTask. Prints detailed information about the JobTask, including the relevant resources: DataSource and Job. The criteria used for dividing a Job into JobTasks can be found in the DataSource used, but the total count of divided JobTasks can be found by this method.
        request_example: >-
        {
        "job_task_id": "job-task-3622d860a776"
        }
        response_example: >-
        {
        "job_task_id": "job-task-3622d860a776",
        "status": "SUCCESS",
        "options": {
        "month": "202207",
        "platform": "gcp"
        },
        "created_count": 1,
        "job_id": "job-85cf2c385252",
        "data_source_id": "ds-c96609f5afeb",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-17T16:00:08.266Z",
        "started_at": "2022-07-17T16:01:28.243Z",
        "updated_at": "2022-07-17T16:01:28.939Z",
        "finished_at": "2022-07-17T16:01:28.939Z"
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
        """
        desc: Gets a list of all JobTasks. You can use a query to get a filtered list of JobTasks.
        request_example: >-
        {
        "query": {}
        }
        response_example: >-
        {
        "results": [
        {
        "job_task_id": "job-task-3622d860a776",
        "status": "SUCCESS",
        "options": {
        "platform": "gcp",
        "month": "202207"
        },
        "created_count": 1,
        "job_id": "job-85cf2c385252",
        "data_source_id": "ds-c96609f5afeb",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-17T16:00:08.266Z",
        "started_at": "2022-07-17T16:01:28.243Z",
        "updated_at": "2022-07-17T16:01:28.939Z",
        "finished_at": "2022-07-17T16:01:28.939Z"
        },
        {
        "job_task_id": "job-task-038c0b076ec5",
        "status": "SUCCESS",
        "options": {
        "account": "257706363616",
        "start": "2022-07-01"
        },
        "created_count": 5756,
        "job_id": "job-6b6765f757a9",
        "data_source_id": "ds-fcba92ca73b1",
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-07-17T16:00:05.099Z",
        "started_at": "2022-07-17T16:00:47.356Z",
        "updated_at": "2022-07-17T16:01:20.856Z",
        "finished_at": "2022-07-17T16:01:20.856Z"
        }
        ],
        "total_count": 720
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobTaskServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.GetJobTaskRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskInfo.SerializeToString,
            ),
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskQuery.FromString,
                    response_serializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTasksInfo.SerializeToString,
            ),
            'stat': grpc.unary_unary_rpc_method_handler(
                    servicer.stat,
                    request_deserializer=spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskStatQuery.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spaceone.api.cost_analysis.v1.JobTask', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobTask(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.cost_analysis.v1.JobTask/get',
            spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.GetJobTaskRequest.SerializeToString,
            spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.cost_analysis.v1.JobTask/list',
            spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskQuery.SerializeToString,
            spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTasksInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.cost_analysis.v1.JobTask/stat',
            spaceone_dot_api_dot_cost__analysis_dot_v1_dot_job__task__pb2.JobTaskStatQuery.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
