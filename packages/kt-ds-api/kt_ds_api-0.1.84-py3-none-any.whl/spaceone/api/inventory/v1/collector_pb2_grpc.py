# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from spaceone.api.inventory.v1 import collector_pb2 as spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2


class CollectorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/create',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateCollectorRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.update = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/update',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateCollectorRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.update_plugin = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/update_plugin',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdatePluginRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.verify_plugin = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/verify_plugin',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.VerifyPluginRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/delete',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/get',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.GetCollectorRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.enable = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/enable',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.disable = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/disable',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
                )
        self.list = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/list',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorQuery.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorsInfo.FromString,
                )
        self.stat = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/stat',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorStatQuery.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
                )
        self.collect = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/collect',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.JobInfo.FromString,
                )
        self.add_schedule = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/add_schedule',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateScheduleRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
                )
        self.get_schedule = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/get_schedule',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
                )
        self.update_schedule = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/update_schedule',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateScheduleRequest.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
                )
        self.delete_schedule = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/delete_schedule',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.DeleteScheduleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.list_schedules = channel.unary_unary(
                '/spaceone.api.inventory.v1.Collector/list_schedules',
                request_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleQuery.SerializeToString,
                response_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.SchedulesInfo.FromString,
                )


class CollectorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create(self, request, context):
        """
        desc: Creates a new Collector with information of the plugin to use. Information of the plugin includes `version`, `provider`, and `upgrade_mode`.
        request_example: >-
        {
        "name": "AWS Collector",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13",
        "options": {},
        "provider": "aws",
        "metadata": {
        "filter_format": [],
        "supported_schedules": [
        "hours"
        ],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "supported_features": [
        "garbage_collection"
        ]
        },
        "upgrade_mode": "AUTO"
        },
        "priority": 1,
        "tags": {
        "type": "test"
        },
        "is_public": true
        }
        response_example: >-
        {
        "collector_id": "collector-2c0847644f39",
        "name": "AWS Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_schedules": [
        "hours"
        ],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "filter_format": [],
        "supported_features": [
        "garbage_collection"
        ]
        },
        "upgrade_mode": "AUTO"
        },
        "priority": 1,
        "tags": {
        "type": "test"
        },
        "created_at": "2022-06-17T06:33:27.195Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """
        desc: Updates a specific Collector. You can make changes in Collector settings, including `name` and `tags`.
        request_example: >-
        {
        "collector_id": "collector-2c0847644f39",
        "name": "New AWS Collector",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.14.0",
        "provider": "aws",
        "upgrade_mode": "MANUAL"
        },
        "priority": 10,
        "tags": {
        "a": "b"
        }
        }
        response_example: >-
        {
        "collector_id": "collector-2c0847644f39",
        "name": "New AWS Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.14.0",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_schedules": [
        "hours"
        ],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "filter_format": [],
        "supported_features": [
        "garbage_collection"
        ]
        },
        "upgrade_mode": "MANUAL"
        },
        "priority": 10,
        "tags": {
        "a": "b"
        },
        "created_at": "2022-06-17T06:33:27.195Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_plugin(self, request, context):
        """
        desc: Updates the plugin of a specific Collector. This method resets the plugin data in the Collector to update the `metadata`.
        request_example: >-
        {

        }
        response_example: >-
        {

        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verify_plugin(self, request, context):
        """
        desc: Verifies the plugin of a specific Collector. This method validates the plugin data, `version` and `endpoint`.
        request_example: >-
        {

        }
        response_example: >-
        {

        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """
        desc: Deletes a specific Collector. You must specify the `collector_id` of the Collector to delete.
        request_example: >-
        {

        }
        response_example: >-
        {

        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """
        desc: Gets a specific Collector. Prints detailed information about the Collector, including its state, basic information, and the plugin information used for cloud resource collection.
        request_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21"
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enable(self, request, context):
        """
        desc: Enables a specific Collector. By enabling a Collector, you can communicate with a plugin used for collection.
        request_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21"
        }
        response_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21",
        "name": "AWS Cloud Service Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.14.10",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_schedules": [
        "hours"
        ],
        "filter_format": [],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "supported_features": [
        "garbage_collection"
        ]
        },
        "upgrade_mode": "AUTO"
        },
        "priority": 10,
        "tags": {},
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true,
        "created_at": "2021-03-08T06:49:27.876Z",
        "last_collected_at": "2022-06-17T06:00:07.162Z",
        "domain_id": "domain-58010aa2e451"
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disable(self, request, context):
        """
        desc: Disables a specific Collector. By disabling a Collector, you cannot communicate with a plugin used for collection.
        request_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21"
        }
        response_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21",
        "name": "AWS Cloud Service Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.14.10",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_schedules": [
        "hours"
        ],
        "filter_format": [],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "supported_features": [
        "garbage_collection"
        ]
        },
        "upgrade_mode": "AUTO"
        },
        "priority": 10,
        "tags": {},
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true,
        "created_at": "2021-03-08T06:49:27.876Z",
        "last_collected_at": "2022-06-17T06:00:07.162Z",
        "domain_id": "domain-58010aa2e451"
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list(self, request, context):
        """
        desc: Gets a list of all Collectors. You can use a query to get a filtered list of Collectors.
        request_example: >-
        {
        "query": {}
        }
        response_example: >-
        {
        "results": [
        {
        "job_id": "job-3b124006c2d2",
        "status": "SUCCESS",
        "filter": {},
        "total_tasks": 2,
        "collector_info": {
        "collector_id": "collector-accd02663b3d",
        "name": "openstack-collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-openstack-inven-collector",
        "version": "0.4.2.20220616.134758"
        },
        "provider": "openstack",
        "capability": {
        "supported_schema": [
        "openstack_credentials"
        ]
        },
        "is_public": true
        },
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-06-17T08:00:01.225Z",
        "updated_at": "2022-06-17T08:00:01.225Z",
        "finished_at": "2022-06-17T08:00:15.197Z"
        },
        {
        "job_id": "job-587a3d3b4db3",
        "status": "SUCCESS",
        "filter": {},
        "total_tasks": 3,
        "collector_info": {
        "collector_id": "collector-2c0847644f39",
        "name": "AWS stat-kwon Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13.20220610.143142"
        },
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        },
        "domain_id": "domain-58010aa2e451",
        "created_at": "2022-06-17T08:00:00.407Z",
        "updated_at": "2022-06-17T08:00:00.407Z",
        "finished_at": "2022-06-17T08:07:32.023Z"
        }
        ],
        "total_count": 2
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def collect(self, request, context):
        """
        desc: ''
        request_example: >-
        {

        }
        response_example: >-
        {

        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_schedule(self, request, context):
        """
        desc: Adds a schedule to a specific Collector. When specifying the time to collect, the schedule is assigned in units of one hour.The specified schedule is applied every day.
        request_example: >-
        {
        "collector_id": "collector-2c0847644f39",
        "name": "regular collection",
        "schedule": {
        "hours": [16, 18, 20, 22, 0]
        }
        }
        response_example: >-
        {
        "schedule_id": "sched-dfb2f6ef84bc",
        "name": "regular collection",
        "collect_mode": "ALL",
        "schedule": {
        "hours": [
        16,
        18,
        20,
        22,
        0
        ]
        },
        "created_at": "2022-06-17T07:12:07.374Z",
        "collector_info": {
        "collector_id": "collector-2c0847644f39",
        "name": "AWS stat-kwon Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13.20220610.143142",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "supported_features": [
        "garbage_collection"
        ],
        "filter_format": [],
        "supported_schedules": [
        "hours"
        ]
        },
        "upgrade_mode": "MANUAL"
        },
        "priority": 10,
        "tags": {
        "a": "b"
        },
        "created_at": "2022-06-17T06:33:27.195Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        },
        "filter": {}
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_schedule(self, request, context):
        """
        desc: Gets a specific schedule set in a specific Collector. You must specify the `collector_id` of the Collector and the `schedule_id` of the schedule.
        request_example: >-
        {
        "collector_id": "collector-2c0847644f39",
        "schedule_id": "sched-dfb2f6ef84bc"
        }
        response_example: >-
        {
        "schedule_id": "sched-dfb2f6ef84bc",
        "name": "regular collection",
        "collect_mode": "ALL",
        "schedule": {
        "hours": [
        16,
        18,
        20,
        22,
        0
        ]
        },
        "created_at": "2022-06-17T07:12:07.374Z",
        "collector_info": {
        "collector_id": "collector-2c0847644f39",
        "name": "AWS stat-kwon Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13.20220610.143142",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_features": [
        "garbage_collection"
        ],
        "filter_format": [],
        "supported_schedules": [
        "hours"
        ],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ]
        },
        "upgrade_mode": "MANUAL"
        },
        "priority": 10,
        "tags": {
        "a": "b"
        },
        "created_at": "2022-06-17T06:33:27.195Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        },
        "filter": {}
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_schedule(self, request, context):
        """
        desc: Updates a specific schedule of the Collector. You can make changes in schedule settings, including `name` and collection time.
        request_example: >-
        {
        "schedule_id": "sched-dfb2f6ef84bc",
        "collector_id": "collector-2c0847644f39",
        "name": "regular collection",
        "collect_mode": "ALL",
        "schedule": {
        "hours": [2, 4, 6, 8, 0]
        },
        "filter": {}
        }
        response_example: >-
        {
        "schedule_id": "sched-dfb2f6ef84bc",
        "name": "regular collection",
        "collect_mode": "ALL",
        "schedule": {
        "hours": [
        2,
        4,
        6,
        8,
        0
        ]
        },
        "created_at": "2022-06-17T07:12:07.374Z",
        "collector_info": {
        "collector_id": "collector-2c0847644f39",
        "name": "AWS stat-kwon Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13.20220610.143142",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_features": [
        "garbage_collection"
        ],
        "supported_schedules": [
        "hours"
        ],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ],
        "filter_format": []
        },
        "upgrade_mode": "MANUAL"
        },
        "priority": 10,
        "tags": {
        "a": "b"
        },
        "created_at": "2022-06-17T06:33:27.195Z",
        "last_collected_at": "2022-06-17T08:00:00.793Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        },
        "filter": {}
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_schedule(self, request, context):
        """
        desc: Deletes a specific schedule of the Collector. You must specify the `schedule_id` of the schedule to delete.
        request_example: >-
        {
        "schedule_id": "sched-dfb2f6ef84bc",
        "collector_id": "collector-2c0847644f39"
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_schedules(self, request, context):
        """
        desc: Gets a list of all schedules set in a specific Collector. You must specify the `collector_id` of the Collector to get the schedule from.
        request_example: >-
        {
        "collector_id": "collector-f2e4e9cc7f21"
        }
        response_example: >-
        {
        "results": [
        {
        "schedule_id": "sched-572819cabe90",
        "name": "daily",
        "collect_mode": "ALL",
        "schedule": {
        "hours": [
        15,
        16,
        18,
        21,
        0,
        3,
        4,
        6,
        9,
        12
        ]
        },
        "created_at": "2021-03-13T14:32:46.137Z",
        "collector_info": {
        "collector_id": "collector-f2e4e9cc7f21",
        "name": "AWS Cloud Service Collector",
        "state": "ENABLED",
        "plugin_info": {
        "plugin_id": "plugin-30d21ef75a5d",
        "version": "1.13.13.20220610.143142",
        "options": {},
        "provider": "aws",
        "metadata": {
        "supported_features": [
        "garbage_collection"
        ],
        "supported_schedules": [
        "hours"
        ],
        "filter_format": [],
        "supported_resource_type": [
        "inventory.CloudService",
        "inventory.CloudServiceType",
        "inventory.Region"
        ]
        },
        "upgrade_mode": "AUTO"
        },
        "priority": 10,
        "tags": {},
        "created_at": "2021-03-08T06:49:27.876Z",
        "last_collected_at": "2022-06-17T06:00:07.162Z",
        "domain_id": "domain-58010aa2e451",
        "provider": "aws",
        "capability": {
        "supported_schema": [
        "aws_access_key"
        ]
        },
        "is_public": true
        },
        "filter": {}
        }
        ],
        "total_count": 1
        }
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CollectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateCollectorRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateCollectorRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'update_plugin': grpc.unary_unary_rpc_method_handler(
                    servicer.update_plugin,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdatePluginRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'verify_plugin': grpc.unary_unary_rpc_method_handler(
                    servicer.verify_plugin,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.VerifyPluginRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.GetCollectorRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'enable': grpc.unary_unary_rpc_method_handler(
                    servicer.enable,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'disable': grpc.unary_unary_rpc_method_handler(
                    servicer.disable,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.SerializeToString,
            ),
            'list': grpc.unary_unary_rpc_method_handler(
                    servicer.list,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorQuery.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorsInfo.SerializeToString,
            ),
            'stat': grpc.unary_unary_rpc_method_handler(
                    servicer.stat,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorStatQuery.FromString,
                    response_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            ),
            'collect': grpc.unary_unary_rpc_method_handler(
                    servicer.collect,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.JobInfo.SerializeToString,
            ),
            'add_schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.add_schedule,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateScheduleRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.SerializeToString,
            ),
            'get_schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.get_schedule,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.SerializeToString,
            ),
            'update_schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.update_schedule,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateScheduleRequest.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.SerializeToString,
            ),
            'delete_schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_schedule,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.DeleteScheduleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'list_schedules': grpc.unary_unary_rpc_method_handler(
                    servicer.list_schedules,
                    request_deserializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleQuery.FromString,
                    response_serializer=spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.SchedulesInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spaceone.api.inventory.v1.Collector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Collector(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/create',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateCollectorRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/update',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateCollectorRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_plugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/update_plugin',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdatePluginRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def verify_plugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/verify_plugin',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.VerifyPluginRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/delete',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/get',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.GetCollectorRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/enable',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/disable',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/list',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorQuery.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorsInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/stat',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectorStatQuery.SerializeToString,
            google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def collect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/collect',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CollectRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.JobInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/add_schedule',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.CreateScheduleRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/get_schedule',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/update_schedule',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.UpdateScheduleRequest.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/delete_schedule',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.DeleteScheduleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_schedules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spaceone.api.inventory.v1.Collector/list_schedules',
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.ScheduleQuery.SerializeToString,
            spaceone_dot_api_dot_inventory_dot_v1_dot_collector__pb2.SchedulesInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
