[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "geoparquet-io"
version = "0.1.0"
description = "Fast I/O and transformation tools for GeoParquet files"
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
authors = [
    { name = "Chris Holmes", email = "cholmes@9eo.org" }
]
keywords = ["geoparquet", "geospatial", "parquet", "gis", "io"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
]
dependencies = [
    "click>=8.0.0",
    "pyarrow>=12.0.0",
    "duckdb>=1.1.3",
    "pandas>=1.0.0",
    "fsspec>=2023.9.0",
    "rich>=13.0.0"
]

[project.scripts]
gpio = "geoparquet_io:cli"
gt = "geoparquet_io:cli"  # Legacy alias for backwards compatibility

[project.urls]
"Homepage" = "https://github.com/cholmes/geoparquet-io"
"Bug Tracker" = "https://github.com/cholmes/geoparquet-io/issues"
"Documentation" = "https://github.com/cholmes/geoparquet-io#readme"
"Source" = "https://github.com/cholmes/geoparquet-io"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.0",
    "pre-commit>=3.0.0",
    "mypy>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["geoparquet_io"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "network: marks tests requiring network access (deselect with '-m \"not network\"')",
]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["geoparquet_io"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
