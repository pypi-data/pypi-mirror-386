# https://setuptools.pypa.io/en/latest/userguide/quickstart.html
[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
fail-under = 100
exclude = ["setup.py", "docs", "build", "examples"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 2
quiet = false
whitelist-regex = []
color = true

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing"
testpaths = [
    "tests",
]

[tool.isort]
profile = "black"

[tool.ruff]
# See https://docs.astral.sh/ruff/rules/ for a list of rules.
# See https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml for configuration documentation
select = ["E", "F", "I"]
exclude = ["notebooks/*", "scripts/*"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[project]
name = "kirin"
version = "0.0.5"
dependencies = [
    "pyprojroot",
    "python-dotenv",
    "typer>=0.20.0",
    "json5",
    "fsspec>=2025.9.0,<2026",
    "s3fs",  # For S3 support
    "gcsfs",  # For Google Cloud Storage support
    "fastapi",
    "jinja2",
    "python-multipart", "python-slugify>=8.0.4,<9", "keyring", "boto3>=1.40.18,<2",
]
readme = "README.md"

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov",
    "httpx",
]
docs = [
    "mkdocs-material",
    "mkdocs",
    "mkdocstrings[python]"
]

[project.scripts]
kirin = "kirin.cli:app"



[tool.coverage.run]
omit = [
    "tests/*",
    "notebooks/*",
]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]
kirin = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
tests = { features = ["tests"], solve-group = "default" }

[tool.pixi.feature.tests.tasks]
test = "pytest --durations=10 --tb=short -v"

[tool.pixi.feature.docs.tasks]
build-docs = "mkdocs build --clean"
serve-docs = "mkdocs serve"


[tool.pixi.tasks]
setup-ssl = "python -m kirin.setup_ssl"

[tool.pixi.dependencies]
loguru = ">=0.7.3,<0.8"
marimo = ">=0.16.5,<0.17"
keyring = ">=25.6.0,<26"
ipython = "*"
typer = ">=0.20.0,<0.21"
