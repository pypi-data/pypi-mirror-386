<script src="/app_static/tasks_worker/js/task_form_builder.js"></script>
<script src="/app_static/tasks_worker/js/task_form_utils.js"></script>

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Edit Scheduled Task</h3>
    </div>
    <div class="card-body">
        <form id="taskForm">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label required">Task Name</label>
                    <input type="text" class="form-control" id="name" name="name" value="{{ widget.task.name }}" required>
                    <small class="form-hint">A descriptive name for this task</small>
                </div>
                <div class="col-md-6">
                    <label class="form-label required">Task</label>
                    <select class="form-select" id="task-function" name="task-function" required onchange="updateTaskFormFromSelectionGeneric('task-function','task-param-fields', null, EXISTING_KWARGS)"></select>
                    <small class="form-hint">Select the task to run</small>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label">Parameters</label>
                    <div id="task-param-fields"></div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <label class="form-label">Schedule Type</label>
                    <div class="btn-group w-100" role="group">
                        <input type="radio" class="btn-check" name="schedule_type" value="cron" id="schedule_type_cron" autocomplete="off" {% if widget.task.cron %}checked{% endif %}>
                        <label class="btn" for="schedule_type_cron">
                            <i class="ti ti-clock"></i> Cron Expression
                        </label>

                        <input type="radio" class="btn-check" name="schedule_type" value="interval" id="schedule_type_interval" autocomplete="off" {% if not widget.task.cron %}checked{% endif %}>
                        <label class="btn" for="schedule_type_interval">
                            <i class="ti ti-refresh"></i> Interval
                        </label>
                    </div>
                </div>
            </div>

            <div class="row mb-3" id="cron_section" style="display: {% if widget.task.cron %}block{% else %}none{% endif %};">
                <div class="col-12">
                    <label class="form-label">Cron Expression</label>
                    <input type="text" class="form-control" id="cron" name="cron" placeholder="*/5 * * * *" value="{{ widget.task.cron or '' }}">
                    <small class="form-hint">Examples: <code>*/5 * * * *</code> (every 5 minutes), <code>0 9 * * *</code> (daily at 9 AM)</small>
                </div>
            </div>

            <div class="row mb-3" id="interval_section" style="display: {% if not widget.task.cron %}block{% else %}none{% endif %};">
                <div class="col-12">
                    <label class="form-label">Interval (seconds)</label>
                    <input type="number" class="form-control" id="interval" name="interval" min="1" placeholder="300" value="{{ widget.task.interval or '' }}">
                    <small class="form-hint">Run every N seconds (e.g., 300 = 5 minutes, 3600 = 1 hour)</small>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <div class="form-label">Task Options</div>
                    <div>
                        <label class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="enabled" name="enabled" {% if widget.task.enabled %}checked{% endif %}>
                            <span class="form-check-label">Task Enabled</span>
                        </label>
                    </div>
                    <div class="mt-2">
                        <label class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="allow_concurrent" name="allow_concurrent" {% if widget.task.allow_concurrent %}checked{% endif %}>
                            <span class="form-check-label">Allow Concurrent Execution</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-12">
                    <div class="card bg-light">
                        <div class="card-header">
                            <h4 class="card-title">Task Status Information</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-2">
                                        <strong>Last Attempt:</strong>
                                        <div class="text-muted">
                                            {% if widget.task.last_attempt %}
                                                {{ widget.task.last_attempt }}
                                            {% else %}
                                                Never run
                                            {% endif %}
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-2">
                                        <strong>Last Task ID:</strong>
                                        <div class="text-muted">{{ widget.task.last_task_id or 'N/A' }}</div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-2">
                                        <strong>Last Status:</strong>
                                        <div class="{% if widget.task.last_status == 'success' %}text-success{% else %}text-muted{% endif %}">
                                            {{ widget.task.last_status or 'N/A' }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-end">
                <a href="{{ widget.cancel_url }}" class="btn btn-link">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="ti ti-device-floppy"></i>
                    Save Task
                </button>
            </div>
        </form>
    </div>
</div>

<script>
    // Existing kwargs from server, used to prefill generated fields
    const EXISTING_KWARGS = {{ widget.task.kwargs | tojson | safe }};

    function updateScheduleDisplay() {
        const scheduleType = document.querySelector('input[name="schedule_type"]:checked')?.value;
        document.getElementById('cron_section').style.display = scheduleType === 'cron' ? 'block' : 'none';
        document.getElementById('interval_section').style.display = scheduleType === 'interval' ? 'block' : 'none';
        if (scheduleType === 'cron') {
            document.getElementById('interval').value = '';
        } else if (scheduleType === 'interval') {
            document.getElementById('cron').value = '';
        }
    }

    document.addEventListener('DOMContentLoaded', async () => {
        // initial schedule state listeners
        document.querySelectorAll('input[name="schedule_type"]').forEach(r => r.addEventListener('change', updateScheduleDisplay));
        updateScheduleDisplay();

        // Load tasks and preselect current task, then render params with prefill
        await loadAvailableTasksGeneric('task-function','task-param-fields', null, "{{ widget.task.function }}");
        updateTaskFormFromSelectionGeneric('task-function','task-param-fields', null, EXISTING_KWARGS);
    });

    // Form submission
    document.getElementById('taskForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        const scheduleType = document.querySelector('input[name="schedule_type"]:checked')?.value;
        const kwargs = collectFormValues('task-param-fields');
        const formData = {
            name: document.getElementById('name').value,
            function: document.getElementById('task-function').value,
            cron: scheduleType === 'cron' ? document.getElementById('cron').value : null,
            interval: scheduleType === 'interval' ? parseInt(document.getElementById('interval').value) : null,
            enabled: document.getElementById('enabled').checked,
            allow_concurrent: document.getElementById('allow_concurrent').checked,
            kwargs
        };
        try {
            const response = await fetch('{{ widget.submit_url }}', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            });
            if (response.ok) {
                window.location.href = '{{ widget.cancel_url }}';
            } else {
                const error = await response.json().catch(() => ({}));
                alert('Error saving task: ' + (error.message || response.statusText));
            }
        } catch (error) {
            alert('Error saving task: ' + error.message);
        }
    });
</script>