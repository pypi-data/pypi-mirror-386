[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name="amigo_sdk"
description = "Amigo AI Python SDK"
readme = "README.md"
requires-python = ">= 3.9"
authors=[{name="Amigo AI"}]
classifiers = ["Programming Language :: Python :: 3"]
dynamic = ["version"]

dependencies = [
  "httpx>=0.25,<1.0",
  "pydantic>=2.7,<3.0",
  "pydantic-settings>=2.0,<3.0",
  "email-validator>=2.0,<3.0",
]

[project.scripts]
gen-models = "scripts.gen_models:main"
check = "scripts.check:main"

[project.optional-dependencies]
dev = [
  "pytest>=7.0,<9.0",
  "pytest-asyncio>=0.21,<1.0", 
  "pytest-cov>=4.0,<6.0",
  "pytest-httpx>=0.30,<1.0",
  "python-dotenv>=1.0,<2.0",
  "ruff>=0.1,<1.0",
  "datamodel-code-generator[http]>=0.21,<1.0"
]

[tool.hatch.version]
path = "src/amigo_sdk/__init__.py"

[tool.hatch.build.targets.wheel]
packages = [
  "src/amigo_sdk",
]

[tool.hatch.build.targets.sdist]
exclude = [
  "examples",
  "htmlcov",
]

[tool.hatch.publish.index]
url = "https://upload.pypi.org/legacy/"
user = "__token__"
auth = "env:PYPI_API_TOKEN"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
    "-m", "not integration"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselected by default)",
    "unit: marks tests as unit tests (selected by default)",
    "slow: marks tests as slow running",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/scripts/*",
    "*/generated/*",
    "src/amigo_sdk/generated/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
target-version = "py39"
line-length = 88
exclude = [
    "src/amigo_sdk/generated",
    "**/__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "dist",
    "htmlcov"
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
exclude = [
    "src/amigo_sdk/generated"
]