from typing import Self
from os import PathLike

class Password(Secret):
    def check_quality(self) -> str | None: ...
    def hash(self) -> Self: ...
    def need_rehash(self) -> bool: ...
    @classmethod
    def random_password(cls) -> Self: ...
    def verify_password_against(self, other: Secret, /) -> bool: ...

class Secret:
    def __init__(self, secret_text: str, /) -> None: ...
    @classmethod
    def random_secret(cls, len: int, /) -> Self: ...
    def reveal(self) -> str: ...
    def __copy__(self) -> Self: ...
    def __deepcopy__(self, memo: object) -> Self: ...
    def __len__(self) -> int: ...
    def __rich__(self) -> str: ...

def configure_password_checker(a: PathLike, /) -> None: ...
def is_password_checker_configured() -> bool: ...
