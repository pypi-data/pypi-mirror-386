name: Publish to PyPI

on:
  push:
    tags: ["v*"]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  test:
    name: Test build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Create venv for maturin develop
        run: python -m venv .venv

      - name: Build with maturin & install into .venv
        uses: PyO3/maturin-action@v1
        with:
          command: develop
          args: --release
          manylinux: manylinux2014

      - name: Install Python test deps into .venv
        run: |
          . .venv/bin/activate
          pip install -e '.[dev]'

      - name: Run Python tests
        run: |
          . .venv/bin/activate
          pytest

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run Rust tests
        run: cargo test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build wheels
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            args: "--skip-existing"
          - os: macos-latest
            args: "--skip-existing --target universal2-apple-darwin"
          - os: windows-latest
            args: "--skip-existing"
          # Linux aarch64 abi3
          - os: ubuntu-latest
            target: "aarch64-unknown-linux-gnu"
            args: "--skip-existing --target aarch64-unknown-linux-gnu --zig"
          # Linux armv7 abi3
          - os: ubuntu-latest
            target: "armv7-unknown-linux-gnueabihf"
            args: "--skip-existing --target armv7-unknown-linux-gnueabihf --zig"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build and publish with maturin
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: publish
          args: ${{ matrix.args }}
          manylinux: manylinux2014
