from fmot.nn.sequenced_rnn import LSTM
from fmot.nn.loop import RecursiveStateHandler
import fmot
from .. import qat as Q
import torch

DEFAULT_MAPPINGS = {
    fmot.nn.VVAdd: Q.nn.VVAdd,
    fmot.nn.VIAdd: Q.nn.VIAdd,
    fmot.nn.VVSub: Q.nn.VVSub,
    fmot.nn.Neg: Q.nn.Neg,
    fmot.nn.VVMul: Q.nn.VVMul,
    fmot.nn.VIMul: Q.nn.VIMul,
    fmot.nn.Matmul: Q.nn.Matmul,
    fmot.nn.TemporalUnfold1d: Q.nn.TemporalUnfold1d,
    fmot.nn.AddMM: Q.nn.AddMM,
    torch.nn.ReLU: Q.nn.ReLU,
    torch.nn.Linear: Q.nn.Linear,
    torch.nn.BatchNorm1d: Q.nn.BatchNorm,
    torch.nn.BatchNorm2d: Q.nn.BatchNorm,
    fmot.nn.StateInitializer: Q.nn.StateInitializer,
    fmot.nn.RSqrtPlusEps: Q.nn.RSqrtPlusEps,
    fmot.nn.TuningEpsilon: Q.nn.TuningEpsilon,
    fmot.nn.PowFrac: Q.nn.PowFrac,
    fmot.nn.Chunk: Q.nn.Chunk,
    fmot.nn.Split: Q.nn.Split,
    fmot.nn.Cat: Q.nn.Cat,
    fmot.nn.Stack: Q.nn.Stack,
    fmot.nn.ParameterQuantizer: Q.nn.ParameterQuantizer,
    fmot.nn.DerivedParameter: Q.nn.QDerivedParameter,
    fmot.nn.MultiDerivedParameter: Q.nn.QMultiDerivedParameter,
    fmot.nn.Transpose: Q.nn.Transpose,
    fmot.nn.Reshape: Q.nn.Reshape,
    fmot.nn.Div: Q.nn.Div,
    fmot.nn.Sum: Q.nn.Sum,
    fmot.nn.Mean: Q.nn.Mean,
    fmot.nn.Identity: Q.nn.Identity,
    torch.nn.Identity: Q.nn.Identity,
    fmot.nn.OnesLike: Q.nn.OnesLike,
    fmot.nn.Dropout: Q.nn.Dropout,
    fmot.nn.Gt0: Q.nn.Gt0,
    fmot.nn.Shift: Q.nn.Shift,
    fmot.nn.LUT: Q.nn.LUT,
    fmot.nn.FTranspose: Q.nn.FTranspose,
    fmot.nn.Permute: Q.nn.Permute,
    fmot.nn.DepthWiseConvSummer: Q.nn.DepthWiseConvSummer,
    fmot.nn.LogMM: Q.nn.LogMM,
    fmot.nn.LogEpsMM: Q.nn.LogEpsMM,
    fmot.nn.Squeeze: Q.nn.Squeeze,
    fmot.nn.TemporalFoldTranspose1d: Q.nn.TemporalFoldTranspose1d,
    fmot.nn.GMACv2: Q.nn.GMACv2,
    fmot.nn.PrecisionSplit: Q.nn.PrecisionSplit,
    fmot.nn.TagVarname: Q.nn.TagVarname,
    fmot.nn.TemporalConv2d: Q.nn.TemporalConv2d,
    RecursiveStateHandler: Q.nn.RecursiveStateHandler,
    fmot.nn.TemporalConv1d: Q.nn.TemporalConv1d,
    fmot.nn.CumulativeFlattenedLinear: Q.nn.CumulativeFlattenedLinear,
}
