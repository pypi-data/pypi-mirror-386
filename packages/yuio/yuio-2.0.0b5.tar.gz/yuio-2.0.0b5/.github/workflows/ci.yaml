name: Test package
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  # Runs main tests for the package.
  #
  # Runs on all events except when closing a pull request.
  test:
    name: Test package
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        type:
          - test
        include:
          - os: ubuntu-latest
            python-version: "3.13"
            type: code style
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Install dependencies
        run: python -m pip install --upgrade pip && python -m pip install . --group ci
      # Tests
      - name: Set up pythons
        if: ${{ matrix.type == 'test' }}
        uses: actions/setup-python@v4
        with:
          python-version: |
            3.10
            3.11
            3.12
            3.13
            3.14
      - name: Test package
        if: ${{ matrix.type == 'test' }}
        run: tox --skip-env lint --colored yes
      # Lint
      - name: Check code style
        if: ${{ matrix.type == 'code style' }}
        run: tox -e lint --colored yes

  # Builds python packages.
  #
  # Only runs on tag pushes.
  build:
    name: Build package
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.metadata.outputs.version }}
      link: ${{ steps.metadata.outputs.link }}
      status: ${{ steps.changelog.outputs.status }}
      changes: ${{ steps.changelog.outputs.changes }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate release metadata
        id: metadata
        run: |
          ref="${{ github.ref }}";
          version=${ref#refs/tags/v};
          link="https://pypi.org/p/yuio/${version}/";
          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "link=${link}" >> $GITHUB_OUTPUT
      - name: Parse Changelog
        id: changelog
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.metadata.outputs.version }}
      - name: Set up python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13
      - name: Install build
        run: |
          pip install build
      - name: Build project
        run: |
          python3 -m build .
      - name: Upload the build artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  # Publishes python packages.
  #
  # Only runs on tag pushes.
  publish_to_pypi:
    name: Publish package to PyPi
    needs:
      - test
      - build
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/yuio
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ needs.build.outputs.status == 'prereleased' }}
          draft: ${{ needs.build.outputs.status == 'unreleased' }}
          body: |
            ## Changelog

            ${{ needs.build.outputs.changes }}

            [See release on PyPi](${{ needs.build.outputs.link }})
