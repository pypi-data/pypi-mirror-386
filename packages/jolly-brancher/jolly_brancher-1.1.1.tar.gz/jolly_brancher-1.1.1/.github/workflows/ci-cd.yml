name: CI
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [dev, main]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pipenv"
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Deps
        run: pipenv sync --dev
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation}}|${{hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit hooks
        run: pipenv run pre-commit run --show-diff-on-failure --color=always --all-files
  build:
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Deps
        run: pipenv sync --dev
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation}}|${{hashFiles('.pre-commit-config.yaml') }}
      - name: Build Project and Publish
        run: |
          pipenv run python -m tox -e clean,build
          pipenv run python -m tox -e py311
      - uses: actions/upload-artifact@v3
        name: python-package-distributions
        with:
          path: ./dist
  pypi-publish:
    needs: [build]
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: pypi
      url: https://pypi.org/p/jolly-brancher
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted
    steps:
      - uses: actions/download-artifact@v3
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ahonnecke
          password: ${{ secrets.PYPI_JOLLY_PASSWORD }}
          packages_dir: artifact/
          verbose: true
          print-hash: true
