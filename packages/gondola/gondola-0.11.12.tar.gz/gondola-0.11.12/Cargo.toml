[package]
name = "gondola-core"
version = "0.11.12"
edition = "2024"
readme = "README.md"

[lib]
# The name of the native library. This is the name which will be used in Python to import the
# library (i.e. `import string_sum`). If you change this, you must also change the name of the
# `#[pymodule]` in `src/lib.rs`.
name = "gondola_core"
path = "src/lib.rs"
# FIXME - make this conditional?
crate-type = ["cdylib", "lib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[bench]]
name = "bench"
harness = false
required-features = ["random"]

[[test]]
name = "test"
required-features  = ["random"]

[features]
# create structures with random data for testing
random              = ["rand"]
# requires sqlite, but allows to get geometry information 
# as well as calibration for the tracker
database            = ["diesel"]
# requres i2c and thus might be difficult to be built on 
# Mac which does not support it. Extended features for 
# RB/LTB/PB monitoring
tofcontrol          = ["tof-control"]
# experimental features
advanced-algorithms = ["smoothed_z_score"]
# build a python library 
pybindings          = ["pyo3","pyo3-log","numpy", "serde-pickle", "polars", "pyo3-polars"]
experimental        = []
# experimental, might go away. Attempt to include SimpleDet data
root                = ["oxyroot", "root-io"]
# extra features to access TOF components directly, e.g. MTB. THis 
# will be required for the build of liftof
tof-liftof          = ["signal-hook"]

[dependencies.pyo3]
version  = "0.25"
features = ["extension-module", "multiple-pymethods", "abi3-py311", "chrono"]
optional = true

[dependencies.pyo3-log]
version = "0.12"
optional = true

[dependencies.numpy]
version = "0.25"
optional = true

[dependencies.serde-pickle]
version = "1.1"
optional = true

[dependencies.smoothed_z_score]
version  = "0.1"
optional = true

[dependencies.tof-control]
version  = "0.9"
optional = true
git      = "https://github.com/GAPS-Collab/tof-control.git"
branch   = "minimal"

[dev-dependencies]
criterion = "0.4"
#tempfile  = "3.10"
quickcheck = "1"

[dependencies]
comfy-table       = "7.1"
zmq               = "0.10"
signal-hook       = { version = "0.3", optional=true}
strum             = "0.27"
strum_macros      = "0.27"
num-traits        = "0.2"
statrs            = "0.18"
root-io           = { version = "0.3", optional=true}
oxyroot           = { version = "0.1", optional=true}
half              = { version = "2.6", features=["num-traits"]}
chrono            = "0.4"
regex             = "1.5"
glob              = "0.3"
log               = "0.4"
serde             = { version = "1.0", features = ["derive"] }
serde_json        = "1.0"
crc               = "3.0"
cfg-if            = "1.0"
indicatif         = "0.17" # TODO  - maybe this might go away or we introduce
colored           = "2.0"  #         a debugging feature  
crossbeam-channel = "0.5"
statistical       = "1.0"  # FIXME - replace this with our own implementation
toml              = "0.8"
ureq              = "2.12" # FIXME - make this a feature
polars            = { version = "0.51", features = ["lazy"], optional = true }
pyo3-polars       = { version = "0.24", optional = true }
env_logger        = "0.10"

# for the database - in case we want to use postgres, 
# the feature needs to be added here, however, this would
# also require libpq to be installed.
diesel = { version = "2.2", features = ["sqlite", "64-column-tables"], optional=true }
# this fixes all compiling issues for the musl target with libsqlite
#libsqlite3-sys = { version = "0.28", features = ["bundled"] }
libsqlite3-sys = { version = "0.35", features = ["bundled"] }

# for testing / features
rand   = { version = "0.9", optional = true}
