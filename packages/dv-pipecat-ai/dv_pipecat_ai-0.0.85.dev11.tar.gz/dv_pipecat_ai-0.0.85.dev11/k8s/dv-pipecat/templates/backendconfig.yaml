{{- if .Values.service.create -}}
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: "{{ include "dv-pipecat.fullname" . }}-backendconfig"
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name | quote }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/managed-by: Helm
    {{- include "dv-pipecat.labels" . | nindent 4 }}
spec:
  timeoutSec: 1800 # 30 minutes
  connectionDraining:
    drainingTimeoutSec: 1800 # Optional, for graceful draining
  healthCheck:
    checkIntervalSec: 60 # How often to health check
    timeoutSec: 15       # How long to wait for a response
    healthyThreshold: 1  # How many successes to be considered healthy
    unhealthyThreshold: 3 # How many failures to be considered unhealthy
    type: HTTP           # Type of health check
    requestPath: /pc/v1/live # Liveness path stays healthy during drain
    port: {{ .Values.service.targetPort | default 80 }} # Port defined in your service/deployment (using targetPort)
{{- end }}
