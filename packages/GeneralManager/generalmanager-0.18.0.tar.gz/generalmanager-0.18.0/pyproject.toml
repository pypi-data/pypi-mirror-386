[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "GeneralManager"
version = "0.18.0"
description = "Modular Django-based data management framework with ORM, GraphQL, fine-grained permissions, rule validation, calculations and caching."
readme = "README.md"
authors = [{ name = "Tim Kleindick", email = "tkleindick@yahoo.de" }]
license = { file = "LICENSE" }
requires-python = ">=3.12"
keywords = [
    "django",
    "orm",
    "graphql",
    "permissions",
    "validation",
    "caching",
    "framework",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dependencies = [
    "asgiref>=3.8.1",
    "channels>=4.1.0",
    "Django>=5.2.7",
    "django-simple-history>=3.8.0",
    "exrex>=0.12.0",
    "factory_boy>=3.3.3",
    "Faker>=37.1.0",
    "flexcache>=0.3",
    "flexparser>=0.4",
    "gitdb>=4.0.12",
    "GitPython>=3.1.41",
    "graphene>=3.4.3",
    "graphene-django>=3.2.3",
    "graphql-core>=3.2.6",
    "graphql-relay>=3.2.0",
    "numpy>=2.2.5",
    "Pint>=0.24.4",
    "platformdirs>=4.3.7",
    "promise>=2.3",
    "python-dateutil>=2.9.0.post0",
    "six>=1.17.0",
    "smmap>=5.0.2",
    "sqlparse>=0.5.3",
    "text-unidecode>=1.3",
    "typing_extensions>=4.13.2",
    "tzdata>=2025.2",
]

[project.urls]
Homepage = "https://github.com/TimKleindick/general_manager"
Documentation = "https://timkleindick.github.io/general_manager/"
Repository = "https://github.com/TimKleindick/general_manager"
Issues = "https://github.com/TimKleindick/general_manager/issues"
Changelog = "https://github.com/TimKleindick/general_manager/releases"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"general_manager" = ["py.typed"]

[tool.semantic_release]
allow_zero_version = true
major_on_zero = false
version_toml = ["pyproject.toml:project.version"]
branch = "main"
build_command = "python -m build"
upload_to_PyPI = true
upload_to_release = true

[tool.semantic_release.remote]
ignore_token_for_push = true

[tool.ruff]

target-version = "py312"
line-length = 88
src = ["src", "tests"]
extend-exclude = ["example_project"]

[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "B",   # flake8-bugbear
    "S",   # flake8-bandit (Security)
    "BLE", # blind except
    "T10", # debugger
    "EXE", # executable
    "ARG", # unused arguments
    "TRY", # tryceratops
    "RUF", # Ruff-own rules
    "E7",  # pycodestyle: Syntax
    "E9",  # pycodestyle: Runtime
]

ignore = [
    "F401",
    "I001",
    "Q000",
    "UP006",
    "E501",
    "S101",
    "ARG001",
    "ARG002",
    "ARG003",
    "ARG004",
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["E402"]
"**/conftest.py" = ["E402"]
"example_project/manage.py" = ["TRY003"]
"example_project/**/migrations/*.py" = ["RUF012"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = false
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
explicit_package_bases = true
namespace_packages = true
mypy_path = ["src"]
files = ["src"]
exclude = ["^build/", "^dist/", "^docs/", "^example_project/", "^site/"]

[[tool.mypy.overrides]]
module = [
    "channels",
    "channels.*",
    "channels.layers",
    "channels.auth",
    "channels.routing",
    "django",
    "django.*",
    "django_simple_history",
    "simple_history",
    "simple_history.*",
    "exrex",
    "factory",
    "factory.*",
    "faker",
    "faker.*",
    "graphene",
    "graphene.*",
    "graphql",
    "graphql.*",
    "numpy",
    "pint",
    "pint.*",
    "promise",
]
ignore_missing_imports = true
