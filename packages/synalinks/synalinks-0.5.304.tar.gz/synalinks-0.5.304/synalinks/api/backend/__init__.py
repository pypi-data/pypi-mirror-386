"""DO NOT EDIT.

This file was autogenerated. Do not edit it by hand,
since your modifications would be overwritten.
"""

from synalinks.src.backend import DataModel as DataModel
from synalinks.src.backend.common.global_state import clear_session as clear_session
from synalinks.src.backend.common.json_data_model import (
    is_json_data_model as is_json_data_model,
)
from synalinks.src.backend.common.symbolic_data_model import (
    is_symbolic_data_model as is_symbolic_data_model,
)
from synalinks.src.backend.config import api_base as api_base
from synalinks.src.backend.config import api_key as api_key
from synalinks.src.backend.config import backend as backend
from synalinks.src.backend.config import enable_logging as enable_logging
from synalinks.src.backend.config import enable_observability as enable_observability
from synalinks.src.backend.config import epsilon as epsilon
from synalinks.src.backend.config import floatx as floatx
from synalinks.src.backend.config import get_seed as get_seed
from synalinks.src.backend.config import (
    is_observability_enabled as is_observability_enabled,
)
from synalinks.src.backend.config import set_api_base as set_api_base
from synalinks.src.backend.config import set_api_key as set_api_key
from synalinks.src.backend.config import set_backend as set_backend
from synalinks.src.backend.config import set_epsilon as set_epsilon
from synalinks.src.backend.config import set_floatx as set_floatx
from synalinks.src.backend.config import set_seed as set_seed
from synalinks.src.backend.pydantic.base import ChatMessage as ChatMessage
from synalinks.src.backend.pydantic.base import ChatMessages as ChatMessages
from synalinks.src.backend.pydantic.base import ChatRole as ChatRole
from synalinks.src.backend.pydantic.base import EmbeddedEntity as EmbeddedEntity
from synalinks.src.backend.pydantic.base import Embedding as Embedding
from synalinks.src.backend.pydantic.base import Embeddings as Embeddings
from synalinks.src.backend.pydantic.base import Entities as Entities
from synalinks.src.backend.pydantic.base import Entity as Entity
from synalinks.src.backend.pydantic.base import GenericInputs as GenericInputs
from synalinks.src.backend.pydantic.base import GenericIO as GenericIO
from synalinks.src.backend.pydantic.base import GenericOutputs as GenericOutputs
from synalinks.src.backend.pydantic.base import GenericResult as GenericResult
from synalinks.src.backend.pydantic.base import Instructions as Instructions
from synalinks.src.backend.pydantic.base import KnowledgeGraph as KnowledgeGraph
from synalinks.src.backend.pydantic.base import Prediction as Prediction
from synalinks.src.backend.pydantic.base import Relation as Relation
from synalinks.src.backend.pydantic.base import Relations as Relations
from synalinks.src.backend.pydantic.base import SimilaritySearch as SimilaritySearch
from synalinks.src.backend.pydantic.base import ToolCall as ToolCalling
from synalinks.src.backend.pydantic.base import Trainable as Trainable
from synalinks.src.backend.pydantic.base import TripletSearch as TripletSearch
from synalinks.src.backend.pydantic.base import is_chat_message as is_chat_message
from synalinks.src.backend.pydantic.base import is_chat_messages as is_chat_messages
from synalinks.src.backend.pydantic.base import is_embedded_entity as is_embedded_entity
from synalinks.src.backend.pydantic.base import is_embedding as is_embedding
from synalinks.src.backend.pydantic.base import is_embeddings as is_embeddings
from synalinks.src.backend.pydantic.base import is_entities as is_entities
from synalinks.src.backend.pydantic.base import is_entity as is_entity
from synalinks.src.backend.pydantic.base import is_instructions as is_instructions
from synalinks.src.backend.pydantic.base import is_knowledge_graph as is_knowledge_graph
from synalinks.src.backend.pydantic.base import is_prediction as is_prediction
from synalinks.src.backend.pydantic.base import is_relation as is_relation
from synalinks.src.backend.pydantic.base import is_relations as is_relations
from synalinks.src.backend.pydantic.base import (
    is_similarity_search as is_similarity_search,
)
from synalinks.src.backend.pydantic.base import is_tool_call as is_tool_call
from synalinks.src.backend.pydantic.base import is_trainable as is_trainable
from synalinks.src.backend.pydantic.base import is_triplet_search as is_triplet_search
from synalinks.src.backend.pydantic.core import is_meta_class as is_meta_class
from synalinks.src.utils.naming import get_uid as get_uid
