[project]
name = "synalinks"
description = "Graph-Based Programmable Neuro-Symbolic LM Framework"
readme = "README.md"
requires-python = ">=3.10"
dynamic = ["version"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development",
]
dependencies = [
  "absl-py",
  "asyncio",
  "click",
  "datasets",
  "docstring-parser",
  "fastmcp",
  "graphviz",
  "greenlet",
  "inquirer",
  "jinja2",
  "jsonschema",
  "litellm",
  "matplotlib",
  "mcp",
  "namex",
  "neo4j",
  "numpy",
  "openai",
  "optree",
  "pydantic",
  "pydotplus",
  "rich",
  "tenacity",
]

[project.urls]
Homepage = "https://github.com/SynaLinks/synalinks"
Issues = "https://github.com/SynaLinks/synalinks/issues"

[project.scripts]
synalinks = "synalinks:magic_cli"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.json"]

[tool.setuptools.dynamic]
version = {attr = "synalinks.src.version.__version__"}

[tool.setuptools.packages.find]
include = ["synalinks", "synalinks.*"]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = [
  "E",  # pycodestyle error
  "F",  # Pyflakes
  "I",  # isort
]
ignore = [
  "E722",  # do not use bare 'except'
  "E741",  # ambiguous variable name
  "E731",  # do not assign a `lambda` expression, use a `def`
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["E501", "F401"]  # lines too long; imported but unused
"**/random.py" = ["F401"]  # imported but unused
"examples/*" = ["I", "E"]
"notebooks/*" = ["I", "E", "F"]
"*/cli/*" = ["I", "E", "F"]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["synalinks"]

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore::DeprecationWarning",
  "ignore::ImportWarning",
  "ignore::RuntimeWarning",
  "ignore::PendingDeprecationWarning",
  "ignore::FutureWarning",
  "ignore::UserWarning",
]
addopts = "--cov-report xml --cov=synalinks -v"

# Do not run tests in the `build` folders
norecursedirs = ["build"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@abstract",
  "raise NotImplementedError",
]
omit = [
  "*/__init__.py",
  "*/plot_*.py",
  "*/*_visualization.py",
  "*/cli/*",
  "*/async_utils.py",
]

[tool.coverage.run]
branch = true
omit = [
  "*/__init__.py",
  "*/cli/*",
  "*/async_utils.py",
]
