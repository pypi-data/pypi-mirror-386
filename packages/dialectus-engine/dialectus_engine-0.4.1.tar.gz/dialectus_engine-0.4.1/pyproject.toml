[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dialectus-engine"
version = "0.4.1"
description = "Dialectus AI debate engine framework"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
authors = [
    {name = "Dialectus AI"}
]
keywords = ["ai", "debate", "llm", "ollama", "openrouter", "artificial-intelligence"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "httpx>=0.28.1",
    "openai>=1.105.0",
    "pydantic>=2.11.7",
]

[project.urls]
Homepage = "https://github.com/dialectus-ai/dialectus-engine"
Repository = "https://github.com/dialectus-ai/dialectus-engine"
Issues = "https://github.com/dialectus-ai/dialectus-engine/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
    "pytest>=7.0",
    "twine",
    "build",
    "pyright>=1.1.377"
]

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
include = ["dialectus*"]

[tool.setuptools.package-data]
"dialectus.engine.config" = ["*.json"]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",                    # Verbose output
    "--strict-markers",      # Raise error on unknown markers
    "--tb=short",            # Shorter traceback format
    "--disable-warnings",    # Disable warnings for cleaner output
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests that use asyncio",
]

[tool.black]
line-length = 88
preview = true  # Enables unstable features

[tool.ruff]
line-length = 88
preview = true  # Matches Black's unstable