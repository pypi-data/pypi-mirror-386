[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "circuit-agent-sdk"
version = "1.2.6"
description = "Official Python SDK for building and deploying agents on the Circuit platform"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "Circuit", email = "kyle@selvlabs.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.12"
keywords = ["circuit", "agent", "sdk"]
dependencies = [
    "fastapi==0.109.0",
    "uvicorn==0.27.0",
    "mangum==0.17.0",
    "requests==2.31.0",
    "toml==0.10.2",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "web3>=6.0.0",
    "solana>=0.30.0",
    "solders>=0.18.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Repository = "https://github.com/circuitorg/agent-sdk-python"
Issues = "https://github.com/circuitorg/agent-sdk-python/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/agent_sdk"]

[tool.hatch.build.targets.wheel.shared-data]
"src/agent_sdk/*.pyi" = "agent_sdk"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-requests>=2.32.4.20250611",
    "types-toml>=0.10.8.20240310",
    "pytest-cov>=6.2.1",
    "pyupgrade>=3.0.0",
    "isort>=5.0.0",
]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "tests/.*",
    "examples/.*",
    ".cursor/.*",
    "CLAUDE.md"
]

[[tool.mypy.overrides]]
module = [
    "fastapi.*",
    "uvicorn.*",
    "mangum.*",
]
ignore_missing_imports = true
