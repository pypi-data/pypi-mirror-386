import abc
import collections
import collections.abc
import contextlib
import functools
import inspect
import operator
import sys
import types
import typing
import warnings
class _Sentinel:
    def __repr__(self): ...
class _ExtensionsSpecialForm:
    def __repr__(self): ...
def IntVar(name): ...
def _get_protocol_attrs(cls): ...
def _caller(depth): ...
def _ensure_subclassable(mro_entries): ...
def _set_default(type_param, default): ...
def _set_module(typevarlike): ...
class _DefaultMixin:
class _TypeVarLikeMeta:
    def __instancecheck__(cls, __instance: Any): ...
def _concatenate_getitem(self, parameters): ...
class _SpecialForm:
    def __init__(self, getitem): ...
    def __getattr__(self, item): ...
    def __mro_entries__(self, bases): ...
    def __repr__(self): ...
    def __reduce__(self): ...
    def __call__(self, *args, **kwds): ...
    def __or__(self, other): ...
    def __ror__(self, other): ...
    def __instancecheck__(self, obj): ...
    def __subclasscheck__(self, cls): ...
    def __getitem__(self, parameters): ...
def _has_generic_or_protocol_as_origin(): ...
def _is_unpacked_typevartuple(x): ...