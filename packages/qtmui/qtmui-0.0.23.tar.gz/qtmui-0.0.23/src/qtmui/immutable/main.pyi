from __future__ import annotations
import sys
from dataclasses import dataclass, make_dataclass
from typing import Any, Iterable, TypeGuard, TypeVar
from .typing_extensions import dataclass_transform
def immutable(cls: type[_T]): ...
class Immutable:
    def __init_subclass__(cls: type[Immutable], **kwargs): ...
    def __eq__(self: Immutable, other: object): ...
class _Immutable:
    def __init_subclass__(cls: type[_Immutable], **kwargs): ...
def is_immutable(obj: object): ...
def make_immutable(cls_name: str, fields: Iterable[Any]): ...