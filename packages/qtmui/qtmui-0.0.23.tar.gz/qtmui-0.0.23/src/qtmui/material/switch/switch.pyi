from typing import Callable, List, Optional, Union, Dict, Any
from qtmui.hooks import State
from qtpy.QtCore import Qt, QSize, Signal, QPoint, QPointF, QRectF, QEasingCurve, QPropertyAnimation, QSequentialAnimationGroup, Slot, Property
from qtpy.QtWidgets import QCheckBox, QWidget
from qtpy.QtGui import QColor, QBrush, QPaintEvent, QPen, QPainter
from qtmui.material.styles import useTheme
from ..widget_base import PyWidgetBase
from ..utils.validate_params import _validate_param
class Switch:
    def __init__(self, parent, label: Optional[Union[str, State, Callable]], disabled: Union[State, bool], defaultChecked: Union[State, bool], checked: Union[State, bool], onChange: Optional[Union[State, Callable, Any]], highlight: Union[State, bool], left: Union[State, bool], color: Optional[Union[State, str, Any]], size: Optional[Union[State, str, Any]], onClick: Optional[Union[State, Callable, Any]], checkedIcon: Optional[Union[State, QWidget, Any]], icon: Optional[Union[State, QWidget, Any]], classes: Optional[Union[State, Dict, Any]], sx: Optional[Union[State, List, Dict, Callable, Any]], disableRipple: Union[State, bool], edge: Optional[Union[State, str, bool, Any]], id: Optional[Union[State, str, Any]], inputProps: Optional[Union[State, Dict, Any]], inputRef: Optional[Union[State, Any, Any]], required: Union[State, bool], slotProps: Optional[Union[State, Dict, Any]], slots: Optional[Union[State, Dict, Any]], value: Optional[Union[State, Any, Any]], **kwargs): ...
    def _set_label(self, value): ...
    def _get_label(self): ...
    def _set_disabled(self, value): ...
    def _get_disabled(self): ...
    def _set_defaultChecked(self, value): ...
    def _get_defaultChecked(self): ...
    def _set_checked(self, value): ...
    def _get_checked(self): ...
    def _set_onChange(self, value): ...
    def _get_onChange(self): ...
    def _set_highlight(self, value): ...
    def _get_highlight(self): ...
    def _set_left(self, value): ...
    def _get_left(self): ...
    def _set_color(self, value): ...
    def _get_color(self): ...
    def _set_size(self, value): ...
    def _get_size(self): ...
    def _set_onClick(self, value): ...
    def _get_onClick(self): ...
    def _set_checkedIcon(self, value): ...
    def _get_checkedIcon(self): ...
    def _set_icon(self, value): ...
    def _get_icon(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_disableRipple(self, value): ...
    def _get_disableRipple(self): ...
    def _set_edge(self, value): ...
    def _get_edge(self): ...
    def _set_id(self, value): ...
    def _get_id(self): ...
    def _set_inputProps(self, value): ...
    def _get_inputProps(self): ...
    def _set_inputRef(self, value): ...
    def _get_inputRef(self): ...
    def _set_required(self, value): ...
    def _get_required(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_value(self, value): ...
    def _get_value(self): ...
    def _init_ui(self): ...
    def _set_stylesheet(self, component_styled): ...
    def slot_set_stylesheet(self, value): ...
    def sizeHint(self): ...
    def hitButton(self, pos: QPoint): ...
    def mouseReleaseEvent(self, e): ...
    def setup_animation(self, value): ...
    def paintEvent(self, e: QPaintEvent): ...
    def handle_position(self): ...
    def handle_position(self, pos): ...
    def pulse_radius(self): ...
    def pulse_radius(self, pos): ...