from typing import Optional, Union, Dict, Callable, List
from qtpy.QtWidgets import QFrame, QHBoxLayout, QWidget
from qtpy.QtCore import Qt
import uuid
from qtmui.hooks import State
from ...material.styles import useTheme
from ..typography import Typography
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..utils.validate_params import _validate_param
class FormLabel:
    def __init__(self, children: Optional[Union[State, str, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], color: Union[State, str], component: Optional[Union[State, str]], disabled: Union[State, bool], label: Optional[Union[State, str, Callable]], error: Union[State, bool], filled: Union[State, bool], focused: Union[State, bool], required: Union[State, bool], sx: Optional[Union[State, List, Dict, Callable, str]], **kwargs): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_color(self, value): ...
    def _get_color(self): ...
    def _set_component(self, value): ...
    def _get_component(self): ...
    def _set_disabled(self, value): ...
    def _get_disabled(self): ...
    def _set_error(self, value): ...
    def _get_error(self): ...
    def _set_label(self, value): ...
    def _get_label(self): ...
    def _set_filled(self, value): ...
    def _get_filled(self): ...
    def _set_focused(self, value): ...
    def _get_focused(self): ...
    def _set_required(self, value): ...
    def _get_required(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _init_ui(self): ...
    def _update_enabled_state(self): ...
    def _set_stylesheet(self, component_styled): ...
    def _connect_signals(self): ...
    def _on_children_changed(self): ...
    def _on_classes_changed(self): ...
    def _on_color_changed(self): ...
    def _on_component_changed(self): ...
    def _on_disabled_changed(self): ...
    def _on_error_changed(self): ...
    def _on_filled_changed(self): ...
    def _on_focused_changed(self): ...
    def _on_required_changed(self): ...
    def _on_sx_changed(self): ...
    def _clear_layout(self): ...
    def _on_destroyed(self): ...