from typing import Optional, Any, Union, Callable, List, Dict
from qtmui.hooks import State
from qtpy.QtWidgets import QFrame, QHBoxLayout
from ..avatar import Avatar
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..utils.validate_params import _validate_param
class AvatarGroup:
    def __init__(self, children: Optional[Union[State, List[Avatar]]], classes: Optional[Union[State, Dict]], component: Optional[Union[State, Any]], componentsProps: Optional[Union[State, Dict]], max: Union[State, int], renderSurplus: Optional[Union[State, Callable[Any, Any]]], slotProps: Optional[Union[State, Dict[str, Union[Callable, Dict]]]], slots: Optional[Union[State, Dict[str, Any]]], spacing: Union[State, str, int], sx: Optional[Union[State, Dict, Callable, str]], total: Optional[Union[State, int]], variant: Union[State, str], **kwargs): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_component(self, value): ...
    def _get_component(self): ...
    def _set_componentsProps(self, value): ...
    def _get_componentsProps(self): ...
    def _set_max(self, value): ...
    def _get_max(self): ...
    def _set_renderSurplus(self, value): ...
    def _get_renderSurplus(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_spacing(self, value): ...
    def _get_spacing(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_total(self, value): ...
    def _get_total(self): ...
    def _set_variant(self, value): ...
    def _init_ui(self): ...
    def children(self): ...
    def children(self, value: Optional[Any]): ...
    def classes(self): ...
    def classes(self, value: Optional[Dict]): ...
    def component(self): ...
    def component(self, value: Optional[Any]): ...
    def componentsProps(self): ...
    def componentsProps(self, value: Optional[Dict[str, Any]]): ...
    def max(self): ...
    def max(self, value: Optional[int]): ...
    def renderSurplus(self): ...
    def renderSurplus(self, value: Optional[Callable[Any, Any]]): ...
    def slotProps(self): ...
    def slotProps(self, value: Optional[Dict[str, Union[Callable, Dict]]]): ...
    def slots(self): ...
    def slots(self, value: Optional[Dict[str, Any]]): ...
    def spacing(self): ...
    def spacing(self, value: Union[str, int]): ...
    def sx(self): ...
    def sx(self, value: Optional[Union[List[Union[Callable, Dict, bool]], Callable, Dict, bool]]): ...
    def total(self): ...
    def total(self, value: Optional[int]): ...
    def variant(self): ...
    def variant(self, value: str): ...