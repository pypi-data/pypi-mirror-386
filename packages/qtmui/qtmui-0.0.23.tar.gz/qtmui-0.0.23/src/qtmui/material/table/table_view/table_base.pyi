from typing import List, Callable
from qtpy.QtWidgets import QTableWidget, QHeaderView, QWidget, QTableWidgetItem, QTableView, QTableWidget, QWidget, QTableWidgetItem, QProxyStyle, QStyleOption, QHBoxLayout, QApplication
from qtpy.QtCore import Qt, QModelIndex, QRect
from ...py_iconify import PyIconify
from ....qtmui_assets import QTMUI_ASSETS
from ...checkbox import Checkbox
from ...button import Button
from ...box import Box
from ...spacer import HSpacer
from qtpy.QtGui import QKeyEvent
from ....common.style_sheet import setCustomStyleSheet
from ...widgets.scroll_bar import SmoothScrollDelegate
from ....i18n.use_translation import translate, i18n
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from .table_item_delegate import TableItemDelegate
class TableBase:
    def __init__(self, *args, **kwargs): ...
    def _setup_header(self): ...
    def _positionHeaderCheckbox(self): ...
    def _on_select_all(self, state): ...
    def _on_un_select_all(self, state): ...
    def _set_stylesheet(self, _theme): ...
    def setBorderVisible(self, isVisible: bool): ...
    def setBorderRadius(self, radius: int): ...
    def _setHoverRow(self, row: int): ...
    def _setPressedRow(self, row: int): ...
    def _setSelectedRows(self, indexes: List[QModelIndex]): ...
    def leaveEvent(self, e): ...
    def resizeEvent(self, e): ...
    def keyPressEvent(self, e: QKeyEvent): ...
    def mousePressEvent(self, e): ...
    def mouseReleaseEvent(self, e): ...
    def setItemDelegate(self, delegate: TableItemDelegate): ...
    def selectAll(self): ...
    def selectRow(self, row: int): ...
    def clearSelection(self): ...
    def setCurrentIndex(self, index: QModelIndex): ...
    def updateSelectedRows(self): ...