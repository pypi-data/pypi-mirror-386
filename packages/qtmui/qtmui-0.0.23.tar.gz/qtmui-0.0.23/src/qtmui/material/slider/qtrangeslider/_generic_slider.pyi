from typing import Generic, TypeVar
from qtpy import QtGui
from qtpy.QtCore import QEvent, QPoint, QPointF, QRect, Qt, Signal
from qtpy.QtWidgets import QApplication, QSlider, QStyle, QStyleOptionSlider, QStylePainter
from ...widget_base import PyWidgetBase
class _GenericSlider:
    def __init__(self, *args, **kwargs): ...
    def value(self): ...
    def setValue(self, value: _T): ...
    def sliderPosition(self): ...
    def setSliderPosition(self, pos: _T): ...
    def singleStep(self): ...
    def setSingleStep(self, step: float): ...
    def pageStep(self): ...
    def setPageStep(self, step: float): ...
    def minimum(self): ...
    def setMinimum(self, min: float): ...
    def maximum(self): ...
    def setMaximum(self, max: float): ...
    def setRange(self, min: float, max_: float): ...
    def tickInterval(self): ...
    def setTickInterval(self, ts: float): ...
    def triggerAction(self, action: QSlider.SliderAction): ...
    def initStyleOption(self, option: QStyleOptionSlider): ...
    def event(self, ev: QEvent): ...
    def mousePressEvent(self, ev: QtGui.QMouseEvent): ...
    def mouseMoveEvent(self, ev: QtGui.QMouseEvent): ...
    def mouseReleaseEvent(self, ev: QtGui.QMouseEvent): ...
    def wheelEvent(self, e: QtGui.QWheelEvent): ...
    def paintEvent(self, ev: QtGui.QPaintEvent): ...
    def _type_cast(self, val): ...
    def _setPosition(self, val): ...
    def _bound(self, value: _T): ...
    def _fixStyleOption(self, option): ...
    def _to_qinteger_space(self, val, _max): ...
    def _pick(self, pt: QPoint): ...
    def _setSteps(self, single: float, page: float): ...
    def _doSliderMove(self): ...
    def _styleOption(self): ...
    def _updateHoverControl(self, pos: QPoint): ...
    def _newHoverControl(self, pos: QPoint): ...
    def _setClickOffset(self, pos: QPoint): ...
    def _updatePressedControl(self, pos: QPoint): ...
    def _draw_handle(self, painter, opt): ...
    def _pixelPosToRangeValue(self, pos: int): ...
    def _scrollByDelta(self, orientation, modifiers, delta: int): ...
    def _has_scroll_space_left(self, offset): ...
    def _execute_scroll(self, steps_to_scroll, modifiers): ...
    def _effectiveSingleStep(self): ...
    def _overflowSafeAdd(self, add: float): ...
def _event_position(ev: QEvent): ...
def _sliderValueFromPosition(min: float, max: float, position: int, span: int, upsideDown: bool): ...