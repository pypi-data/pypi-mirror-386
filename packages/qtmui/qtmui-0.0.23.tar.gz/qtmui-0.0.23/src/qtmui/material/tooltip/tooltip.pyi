from typing import Callable, Optional, Union
from qtpy.QtWidgets import QLabel, QGraphicsDropShadowEffect, QApplication, QSizePolicy, QWidget, QFrame, QHBoxLayout, QAbstractItemView, QStyleOptionViewItem, QTableView
from qtpy.QtCore import QTimer, Qt, QPoint, QRect, QEvent, QObject, QPropertyAnimation, QModelIndex
from qtpy.QtGui import QColor, QCursor, QHelpEvent
from enum import Enum
from qtmui.hooks import State
from qtmui.material.styles.create_theme.theme_reducer import ThemeState
from qtmui.material.styles.create_theme.create_palette import PaletteColor
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.i18n.use_translation import translate, i18n
def getCurrentScreen(): ...
def getCurrentScreenGeometry(avaliable): ...
class ToolTipLabel:
    def __init__(self, parent: Optional[Union[str, object]], text: str, maxWidth: float): ...
    def _init_ui(self): ...
    def _on_destroyed(self): ...
    def reTranslation(self): ...
    def leaveEvent(self, event): ...
    def _set_stylesheet(self, component_styled): ...
class ToolTipPosition:
class ItemViewToolTipType:
class ToolTip:
    def __init__(self, text: Optional[Union[str, State, Callable]], parent): ...
    def text(self): ...
    def setText(self, text): ...
    def duration(self): ...
    def setDuration(self, duration: int): ...
    def __setQss(self): ...
    def _createContainer(self): ...
    def showEvent(self, e): ...
    def hideEvent(self, e): ...
    def adjustPos(self, widget, position: ToolTipPosition): ...
class ToolTipPositionManager:
    def position(self, tooltip: ToolTip, parent: QWidget): ...
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
    def make(position: ToolTipPosition): ...
class TopToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class BottomToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class LeftToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class LeftTopToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class LeftBottomToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class RightToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class RightTopToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class RightBottomToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class TopRightToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class TopLeftToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class BottomRightToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class BottomLeftToolTipManager:
    def _pos(self, tooltip: ToolTip, parent: QWidget): ...
class ItemViewToolTipManager:
    def __init__(self, itemRect): ...
    def _pos(self, tooltip: ToolTip, view: QAbstractItemView): ...
    def make(tipType: ItemViewToolTipType, itemRect: QRect): ...
class TableItemToolTipManager:
    def _pos(self, tooltip: ToolTip, view: QTableView): ...
class ToolTipFilter:
    def __init__(self, parent: QWidget, tooltipDelay): ...
    def get_position(self): ...
    def eventFilter(self, obj: QObject, e: QEvent): ...
    def _createToolTip(self): ...
    def hideToolTip(self): ...
    def showToolTip(self): ...
    def setToolTipDelay(self, delay: int): ...
    def _canShowToolTip(self): ...
class ItemViewToolTip:
    def adjustPos(self, view: QAbstractItemView, itemRect: QRect, tooltipType: ItemViewToolTipType): ...
class ItemViewToolTipDelegate:
    def __init__(self, parent: QAbstractItemView, tooltipDelay, tooltipType): ...
    def eventFilter(self, obj: QObject, e: QEvent): ...
    def _createToolTip(self): ...
    def showToolTip(self): ...
    def _canShowToolTip(self): ...
    def setText(self, text: str): ...
    def setToolTipDuration(self, duration): ...
    def helpEvent(self, event: QHelpEvent, view: QAbstractItemView, option: QStyleOptionViewItem, index: QModelIndex): ...