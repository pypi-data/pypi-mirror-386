from typing import Callable, Dict, Optional, Union
from qtpy.QtWebEngineWidgets import QWebEngineView
from qtpy.QtCore import QUrl, QObject, Slot, QMarginsF, QTimer
from qtpy.QtGui import QAction, QPageLayout, QPageSize
from qtpy.QtWebChannel import QWebChannel
import markdown
import base64
import urllib.parse
from qtpy.QtWidgets import QMenu, QApplication, QFileDialog, QMessageBox
import webbrowser
import copy
from enum import Enum
from qtmui.hooks import State
class LinkMiddlewarePolicy:
class Markdown:
    def __init__(self, parent, content: str, sx: Optional[Union[Callable, str, Dict]]): ...
    def setValue(self, value: str): ...
    def _run_script(self): ...
    def getValue(self): ...
    def contextMenuEvent(self, arg__1): ...
    def setLinkMiddlewarePolicy(self, policy): ...
    def getLinkMiddlewarePolicy(self): ...
    def setExtensions(self, extensions: list[str]): ...
    def getExtensions(self): ...
    def addExtension(self, extension: str): ...