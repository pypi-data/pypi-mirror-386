import uuid
from typing import Optional, Union, Dict, Callable, List
from qtpy.QtWidgets import QWidget, QVBoxLayout, QFrame, QSizePolicy
from qtpy.QtCore import Qt
from qtmui.hooks import State
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.material.styles import useTheme
from ..typography import Typography
from ..utils.validate_params import _validate_param
class DialogContent:
    def __init__(self, children: Optional[Union[State, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], dividers: Union[State, bool], sx: Optional[Union[State, Dict, Callable, str]], text: Optional[Union[State, str, Callable]], ref: Optional[Union[State, object]], **kwargs): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_dividers(self, value): ...
    def _get_dividers(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_text(self, value): ...
    def _get_text(self): ...
    def _set_ref(self, value): ...
    def _get_ref(self): ...
    def forward_ref(self, ref): ...
    def _init_ui(self): ...
    def _add_children_to_layout(self): ...
    def _set_stylesheet(self, component_styled): ...
    def _connect_signals(self): ...
    def _on_children_changed(self): ...
    def _on_classes_changed(self): ...
    def _on_dividers_changed(self): ...
    def _on_sx_changed(self): ...
    def _on_text_changed(self): ...
    def _on_ref_changed(self): ...
    def _clear_layout(self): ...
    def _on_destroyed(self): ...