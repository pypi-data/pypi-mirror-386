from enum import Enum
from qtpy.QtCore import Qt, Signal, QModelIndex, QPoint, Property, QSize, QRectF
from qtpy.QtGui import QPixmap, QPainter, QColor
from qtpy.QtWidgets import QStyleOptionViewItem, QStyle, QListWidget, QListWidgetItem, QStyledItemDelegate, QToolButton
from ...common.overload import singledispatchmethod
from ...common.icon import FluentIcon, drawIcon
from ...common.style_sheet import isDarkTheme, FluentStyleSheet
from .button import ToolButton
from .tool_tip import ToolTipFilter, ToolTipPosition
from .scroll_bar import SmoothScrollBar
class PipsScrollButtonDisplayMode:
class ScrollButton:
    def _postInit(self): ...
    def paintEvent(self, e): ...
class PipsDelegate:
    def __init__(self, parent): ...
    def paint(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
    def setPressedRow(self, row: int): ...
    def setHoveredRow(self, row: bool): ...
class PipsPager:
    def __init__(self, parent): ...
    def _(self, orientation: Qt.Orientation, parent): ...
    def _postInit(self): ...
    def _setPressedItem(self, item: QListWidgetItem): ...
    def _setHoveredItem(self, item: QListWidgetItem): ...
    def setPageNumber(self, n: int): ...
    def getPageNumber(self): ...
    def getVisibleNumber(self): ...
    def setVisibleNumber(self, n: int): ...
    def scrollNext(self): ...
    def scrollPrevious(self): ...
    def scrollToItem(self, item: QListWidgetItem, hint): ...
    def adjustSize(self): ...
    def isHorizontal(self): ...
    def setCurrentIndex(self, index: int): ...
    def isPreviousButtonVisible(self): ...
    def isNextButtonVisible(self): ...
    def currentIndex(self): ...
    def setPreviousButtonDisplayMode(self, mode: PipsScrollButtonDisplayMode): ...
    def setNextButtonDisplayMode(self, mode: PipsScrollButtonDisplayMode): ...
    def mouseReleaseEvent(self, e): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def _updateScrollButtonVisibility(self): ...
    def wheelEvent(self, e): ...
    def resizeEvent(self, e): ...
class HorizontalPipsPager:
    def __init__(self, parent): ...
class VerticalPipsPager:
    def __init__(self, parent): ...