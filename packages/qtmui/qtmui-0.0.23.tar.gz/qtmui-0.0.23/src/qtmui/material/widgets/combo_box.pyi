import sys
from typing import Union, List, Iterable
from qtpy.QtCore import Qt, Signal, QRectF, QPoint, QObject, QEvent
from qtpy.QtGui import QPainter, QAction, QCursor, QIcon
from qtpy.QtWidgets import QPushButton, QApplication
from .menu import RoundMenu, MenuAnimationType, IndicatorMenuItemDelegate
from .line_edit import LineEdit, LineEditButton
from ...common.animation import TranslateYAnimation
from ...common.icon import FluentIconBase, isDarkTheme
from ...common.icon import FluentIcon
from ...common.font import setFont
from ...common.style_sheet import FluentStyleSheet
class ComboItem:
    def __init__(self, text: str, icon: Union[str, QIcon, FluentIconBase], userData): ...
    def icon(self): ...
    def icon(self, ico: Union[str, QIcon, FluentIconBase]): ...
class ComboBoxBase:
    def __init__(self, parent, **kwargs): ...
    def _setUpUi(self): ...
    def addItem(self, text, icon: Union[str, QIcon, FluentIconBase], userData): ...
    def addItems(self, texts: Iterable[str]): ...
    def removeItem(self, index: int): ...
    def currentIndex(self): ...
    def setCurrentIndex(self, index: int): ...
    def setIcon(self, _icon): ...
    def setText(self, text: str): ...
    def currentText(self): ...
    def currentData(self): ...
    def setCurrentText(self, text): ...
    def setItemText(self, index: int, text: str): ...
    def itemData(self, index: int): ...
    def itemText(self, index: int): ...
    def itemIcon(self, index: int): ...
    def setItemData(self, index: int, value): ...
    def setItemIcon(self, index: int, icon: Union[str, QIcon, FluentIconBase]): ...
    def findData(self, data): ...
    def findText(self, text: str): ...
    def clear(self): ...
    def count(self): ...
    def insertItem(self, index: int, text: str, icon: Union[str, QIcon, FluentIconBase], userData): ...
    def insertItems(self, index: int, texts: Iterable[str]): ...
    def setMaxVisibleItems(self, num: int): ...
    def maxVisibleItems(self): ...
    def _closeComboMenu(self): ...
    def _onDropMenuClosed(self): ...
    def _createComboMenu(self): ...
    def _showComboMenu(self): ...
    def _toggleComboMenu(self): ...
    def _onItemClicked(self, index): ...
class ComboBox:
    def __init__(self, parent): ...
    def eventFilter(self, obj, e: QEvent): ...
    def setPlaceholderText(self, text: str): ...
    def setCurrentIndex(self, index: int): ...
    def _updateTextState(self, isPlaceholder): ...
    def mouseReleaseEvent(self, e): ...
    def paintEvent(self, e): ...
class EditableComboBox:
    def __init__(self, parent): ...
    def setCompleterMenu(self, menu): ...
    def __onActivated(self, text): ...
    def currentText(self): ...
    def setCurrentIndex(self, index: int): ...
    def clear(self): ...
    def setPlaceholderText(self, text: str): ...
    def _onReturnPressed(self): ...
    def eventFilter(self, obj, e: QEvent): ...
    def _onComboTextChanged(self, text: str): ...
    def _onDropMenuClosed(self): ...
    def _onClearButtonClicked(self): ...
class ComboBoxMenu:
    def __init__(self, parent): ...
    def exec(self, pos, ani, aniType): ...