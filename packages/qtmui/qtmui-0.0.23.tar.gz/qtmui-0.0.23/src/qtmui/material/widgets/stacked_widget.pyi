from typing import List
from qtpy.QtCore import QAbstractAnimation, QEasingCurve, QPoint, QPropertyAnimation, Signal
from qtpy.QtWidgets import QGraphicsOpacityEffect, QStackedWidget, QWidget
class OpacityAniStackedWidget:
    def __init__(self, parent): ...
    def addWidget(self, w: QWidget): ...
    def setCurrentIndex(self, index: int): ...
    def setCurrentWidget(self, w: QWidget): ...
    def __onAniFinished(self): ...
class PopUpAniInfo:
    def __init__(self, widget: QWidget, deltaX: int, deltaY, ani: QPropertyAnimation): ...
class PopUpAniStackedWidget:
    def __init__(self, parent): ...
    def addWidget(self, widget, deltaX, deltaY): ...
    def removeWidget(self, widget: QWidget): ...
    def setCurrentIndex(self, index: int, needPopOut: bool, showNextWidgetDirectly: bool, duration: int, easingCurve): ...
    def setCurrentWidget(self, widget, needPopOut: bool, showNextWidgetDirectly: bool, duration: int, easingCurve): ...
    def __setAnimation(self, ani, startValue, endValue, duration, easingCurve): ...
    def __onAniFinished(self): ...