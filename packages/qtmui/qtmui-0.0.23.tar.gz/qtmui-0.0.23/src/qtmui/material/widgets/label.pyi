from typing import List, Union
from qtpy.QtCore import Qt, Property, QPoint, Signal, QSize, QRectF, QUrl
from qtpy.QtGui import QPainter, QPixmap, QPalette, QColor, QFont, QImage, QPainterPath, QImageReader, QBrush, QMovie, QDesktopServices
from qtpy.QtWidgets import QLabel, QWidget, QPushButton, QApplication
from ...common.exception_handler import exceptionHandler
from ...common.overload import singledispatchmethod
from ...common.font import setFont, getFont
from ...common.style_sheet import FluentStyleSheet, setCustomStyleSheet, setCustomStyleSheet
from ...common.config import qconfig, isDarkTheme
from .menu import LabelContextMenu
class PixmapLabel:
    def __init__(self, parent): ...
    def setPixmap(self, pixmap: QPixmap): ...
    def pixmap(self): ...
    def paintEvent(self, e): ...
class FluentLabelBase:
    def __init__(self, parent: QWidget): ...
    def _(self, text: str, parent: QWidget): ...
    def _init(self): ...
    def getFont(self): ...
    def setTextColor(self, light, dark): ...
    def lightColor(self): ...
    def lightColor(self, color: QColor): ...
    def darkColor(self): ...
    def darkColor(self, color: QColor): ...
    def pixelFontSize(self): ...
    def pixelFontSize(self, size: int): ...
    def strikeOut(self): ...
    def strikeOut(self, isStrikeOut: bool): ...
    def underline(self): ...
    def underline(self, isUnderline: bool): ...
    def _onContextMenuRequested(self, pos): ...
class CaptionLabel:
    def getFont(self): ...
class BodyLabel:
    def getFont(self): ...
class StrongBodyLabel:
    def getFont(self): ...
class SubtitleLabel:
    def getFont(self): ...
class TitleLabel:
    def getFont(self): ...
class LargeTitleLabel:
    def getFont(self): ...
class DisplayLabel:
    def getFont(self): ...
class ImageLabel:
    def __init__(self, parent: QWidget): ...
    def _(self, image: str, parent): ...
    def _(self, image: QImage, parent): ...
    def _(self, image: QPixmap, parent): ...
    def _postInit(self): ...
    def _onFrameChanged(self, index: int): ...
    def setBorderRadius(self, topLeft: int, topRight: int, bottomLeft: int, bottomRight: int): ...
    def setImage(self, image: Union[str, QPixmap, QImage]): ...
    def scaledToWidth(self, width: int): ...
    def scaledToHeight(self, height: int): ...
    def isNull(self): ...
    def mouseReleaseEvent(self, e): ...
    def setPixmap(self, pixmap: QPixmap): ...
    def pixmap(self): ...
    def setMovie(self, movie: QMovie): ...
    def paintEvent(self, e): ...
    def topLeftRadius(self): ...
    def topLeftRadius(self, radius: int): ...
    def topRightRadius(self): ...
    def topRightRadius(self, radius: int): ...
    def bottomLeftRadius(self): ...
    def bottomLeftRadius(self, radius: int): ...
    def bottomRightRadius(self): ...
    def bottomRightRadius(self, radius: int): ...
class AvatarWidget:
    def _postInit(self): ...
    def getRadius(self): ...
    def setRadius(self, radius: int): ...
    def paintEvent(self, e): ...
class HyperlinkLabel:
    def __init__(self, parent): ...
    def _(self, text: str, parent): ...
    def _(self, url: QUrl, text: str, parent): ...
    def getUrl(self): ...
    def setUrl(self, url: Union[QUrl, str]): ...
    def isUnderlineVisible(self): ...
    def setUnderlineVisible(self, isVisible: bool): ...
    def _onClicked(self): ...