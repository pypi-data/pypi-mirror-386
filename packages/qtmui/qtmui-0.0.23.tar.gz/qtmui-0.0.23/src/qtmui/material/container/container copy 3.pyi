import asyncio
import json
import uuid
from typing import Optional, Union, Dict, Callable
from qtpy.QtWidgets import QVBoxLayout, QFrame, QWidget, QApplication, QSizePolicy
from qtpy.QtCore import Qt, QEvent
from qtmui.hooks import State
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.material.styles import useTheme
from ..widget_base import PyWidgetBase
from ..utils.validate_params import _validate_param
class Container:
    def __init__(self, key: str, disableGutters: Optional[Union[bool, State]], fixed: Optional[Union[bool, State]], maxWidth: Optional[Union[str, bool, State]], sx: Optional[Union[State, Callable, str, Dict]], children: Optional[Union[State, list]], **kwargs): ...
    def _set_disableGutters(self, value): ...
    def _get_disableGutters(self): ...
    def _set_fixed(self, value): ...
    def _get_fixed(self): ...
    def _set_maxWidth(self, value): ...
    def _get_maxWidth(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_sx(self, value): ...
    def _on_destroyed(self): ...
    def _connect_signals(self): ...
    def _on_disableGutters_changed(self): ...
    def _on_fixed_changed(self): ...
    def _on_maxWidth_changed(self): ...
    def _on_sx_changed(self): ...
    def _on_children_changed(self): ...
    def _clear_layout(self): ...
    def _init_ui(self): ...
    def _add_children_to_layout(self): ...
    def _update_margins(self): ...
    def _set_stylesheet(self, component_styled): ...
    def _center_in_parent(self, new_width): ...
    def adjustWidth(self): ...
    def eventFilter(self, obj, event): ...
    def _get_current_breakpoint(self, width): ...
    def resizeEvent(self, event): ...
    def showEvent(self, e): ...
    def paintEvent(self, arg__1): ...