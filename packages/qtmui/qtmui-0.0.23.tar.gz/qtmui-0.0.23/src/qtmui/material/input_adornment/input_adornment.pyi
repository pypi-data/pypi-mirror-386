from typing import Union, Optional, Dict, List, Callable
from qtpy.QtWidgets import QPushButton, QWidget, QHBoxLayout, QSizePolicy
from qtpy.QtGui import QIcon
from qtpy.QtCore import QSize, Qt
from qtmui.hooks import State
from ..py_iconify import PyIconify
from qtmui.material.styles import useTheme
from ..typography import Typography
from ..utils.validate_params import _validate_param
import uuid
class InputAdornment:
    def __init__(self, position: Union[State, str], children: Optional[Union[State, str, QWidget, List[Union[QWidget, str]]]], classes: Optional[Union[State, Dict]], component: Optional[Union[State, str]], disablePointerEvents: Union[State, bool], disableTypography: Union[State, bool], sx: Optional[Union[State, List, Dict, Callable, str]], variant: Optional[Union[State, str]], icon: Optional[Union[State, QIcon, PyIconify]], text: Optional[Union[State, str]], **kwargs): ...
    def _set_position(self, value): ...
    def _get_position(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_component(self, value): ...
    def _get_component(self): ...
    def _set_disablePointerEvents(self, value): ...
    def _get_disablePointerEvents(self): ...
    def _set_disableTypography(self, value): ...
    def _get_disableTypography(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_variant(self, value): ...
    def _get_variant(self): ...
    def _set_icon(self, value): ...
    def _get_icon(self): ...
    def _set_text(self, value): ...
    def _get_text(self): ...
    def _init_ui(self): ...