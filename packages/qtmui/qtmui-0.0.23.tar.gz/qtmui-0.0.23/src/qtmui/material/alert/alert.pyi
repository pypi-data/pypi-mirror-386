import asyncio
from typing import Any, Optional, Callable, Union, List, Dict
import uuid
from qtpy.QtWidgets import QFrame, QHBoxLayout, QLabel, QVBoxLayout, QToolButton, QWidget, QSizePolicy, QGraphicsDropShadowEffect
from qtpy.QtCore import Qt, QTimer
from qtpy.QtGui import QColor
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.theme_reducer import ThemeState
from qtmui.material.styles.create_theme.create_palette import PaletteColor
from qtmui.utils.translator import getTranslatedText
from ..system.color_manipulator import alpha, lighten_hex
from ...common.icon import FluentIconBase
from ..widget_base import PyWidgetBase
from ..py_tool_button.py_tool_button import PyToolButton
from qtmui.i18n.use_translation import translate, i18n
from qtmui.hooks import State
from ..utils.validate_params import _validate_param
from ...qtmui_assets import QTMUI_ASSETS
class Alert:
    def __init__(self, action: Optional[Union[State, QWidget, List[QWidget]]], alertTitle: Optional[Union[State, str]], children: Optional[Union[State, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], closeText: Union[State, str], color: Optional[Union[State, str]], components: Optional[Union[State, Dict]], componentsProps: Optional[Union[State, Dict]], elevation: Optional[Union[State, int]], icon: Optional[Union[State, PyToolButton, bool]], iconMapping: Optional[Union[State, Dict]], key: Optional[Union[State, str]], fullWidth: Union[State, bool], onClose: Optional[Union[State, Callable[Any, Any]]], role: Union[State, str], severity: Union[State, str], size: Union[State, str], slotProps: Optional[Union[State, Dict]], slots: Optional[Union[State, Dict]], sx: Optional[Union[State, Dict, Callable, str]], text: Optional[Union[str, State, Callable]], variant: Union[State, str]): ...
    def _set_action(self, value): ...
    def _get_action(self): ...
    def _set_alertTitle(self, value): ...
    def _get_alertTitle(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_closeText(self, value): ...
    def _get_closeText(self): ...
    def _set_color(self, value): ...
    def _get_color(self): ...
    def _set_components(self, value): ...
    def _get_components(self): ...
    def _set_componentsProps(self, value): ...
    def _get_componentsProps(self): ...
    def _set_elevation(self, value): ...
    def _get_elevation(self): ...
    def _set_icon(self, value): ...
    def _get_icon(self): ...
    def _set_iconMapping(self, value): ...
    def _get_iconMapping(self): ...
    def _set_key(self, value): ...
    def _get_key(self): ...
    def _set_fullWidth(self, value): ...
    def _get_fullWidth(self): ...
    def _set_onClose(self, value): ...
    def _get_onClose(self): ...
    def _set_role(self, value): ...
    def _get_role(self): ...
    def _set_severity(self, value): ...
    def _get_severity(self): ...
    def _set_size(self, value): ...
    def _get_size(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_text(self, value): ...
    def _get_text(self): ...
    def _set_variant(self, value): ...
    def _get_variant(self): ...
    def __setupStates(self): ...
    def _init_ui(self): ...
    def slot_set_stylesheet(self, value): ...
    def retranslateUi(self): ...
    def _set_stylesheet(self, _theme): ...
    def _map_severity_to_color(self, severity: str): ...
    def _get_icon_by_severity(self): ...
    def _default_icon_mapping(self): ...
    def close(self, event: Any): ...
    def render(self): ...