from .use_state import useState, State
from dataclasses import dataclass
from typing import Callable, Dict
from qtpy.QtWidgets import QApplication, QPushButton, QVBoxLayout, QMainWindow, QWidget, QLineEdit
from qtpy.QtCore import QObject, Property, Signal
class UseFormType:
    state: State
    handleSubmit: Callable[Any, any]
    setValue: Callable[Any, any]
    formState: Callable[Any, any]
    control: dict
    watch: Callable[Any, dict]
    reset: Callable[Any, any]
    resolver: Callable[Any, any]
class UseForm:
    def __init__(self, resolver, values: dict): ...
    def handleSubmit(self, *args, **kwargs): ...
    def setValue(self): ...
    def watch(self): ...
    def reset(self): ...
    def getControl(self): ...
    def formState(self): ...
    def control(self): ...
    def setControl(self, value): ...
def useForm(resolver: Callable, values: object): ...