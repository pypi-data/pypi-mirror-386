from qtpy.QtCore import Qt, Signal, QDate, QCalendar, Property
from .picker_base import PickerBase, PickerPanel, PickerColumnFormatter, DigitFormatter
class DatePickerBase:
    def __init__(self, parent): ...
    def getDate(self): ...
    def setDate(self, date: QDate): ...
    def setYearFormatter(self, formatter: PickerColumnFormatter): ...
    def setMonthFormatter(self, formatter: PickerColumnFormatter): ...
    def setDayFormatter(self, formatter: PickerColumnFormatter): ...
    def yearFormatter(self): ...
    def dayFormatter(self): ...
    def monthFormatter(self): ...
class MonthFormatter:
    def __init__(self): ...
    def encode(self, month): ...
    def decode(self, value): ...
class DatePicker:
    def __init__(self, parent, format, isMonthTight): ...
    def setDateFormat(self, format: int): ...
    def panelInitialValue(self): ...
    def setMonthTight(self, isTight: bool): ...
    def _monthColumnWidth(self): ...
    def _onColumnValueChanged(self, panel: PickerPanel, index, value): ...
    def _onConfirmed(self, value: list): ...
    def getDate(self): ...
    def setDate(self, date: QDate): ...
class ZhFormatter:
    def encode(self, value): ...
    def decode(self, value: str): ...
class ZhYearFormatter:
class ZhMonthFormatter:
class ZhDayFormatter:
class ZhDatePicker:
    def __init__(self, parent): ...