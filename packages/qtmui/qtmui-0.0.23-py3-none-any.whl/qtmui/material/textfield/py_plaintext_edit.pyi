import asyncio
from functools import lru_cache
import uuid
from typing import Optional, Callable, Any, Dict, Union
from qtpy.QtWidgets import QPlainTextEdit, QHBoxLayout
from qtpy.QtCore import QTimer
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.utils.translator import getTranslatedText
from .py_input_base import PyInputBase
from ..widget_base import PyWidgetBase
from qtmui.material.styles import useTheme
from qtmui.hooks import State
from qtmui.i18n.use_translation import i18n
class PyPlainTextEdit:
    def __init__(self, parent, label: Optional[Union[str, State, Callable]], onChange: Optional[Callable], children: Optional[list], sx: Optional[Union[Dict, Callable, str]], variant: str, size: str, **kwargs): ...
    def _init_ui(self): ...
    def _set_placer_holder_text(self): ...
    def _get_stylesheet(cls, _variant: str, _size: str, _theme_mode: str): ...
    def _set_stylesheet(self, component_styled): ...
    def enterEvent(self, event): ...
    def leaveEvent(self, event): ...
    def mousePressEvent(self, event): ...
    def mouseReleaseEvent(self, event): ...
    def focusInEvent(self, event): ...
    def focusOutEvent(self, event): ...