from typing import Optional, Union, Dict, Callable, List
from qtpy.QtWidgets import QVBoxLayout, QFrame, QSizePolicy, QWidget
from qtpy.QtCore import Qt
import uuid
from qtmui.hooks import State
from qtmui.material.styles import useTheme
from ..typography import Typography
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..utils.validate_params import _validate_param
class FormControl:
    def __init__(self, component: Optional[Union[State, str]], label: Optional[Union[State, str]], children: Optional[Union[State, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], color: Union[State, str], disabled: Union[State, bool], error: Union[State, bool], focused: Union[State, bool], fullWidth: Union[State, bool], hiddenLabel: Union[State, bool], margin: Union[State, str], required: Union[State, bool], size: Union[State, str], sx: Optional[Union[State, Dict, Callable, str]], variant: Union[State, str], **kwargs): ...
    def _set_component(self, value): ...
    def _get_component(self): ...
    def _set_label(self, value): ...
    def _get_label(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_color(self, value): ...
    def _get_color(self): ...
    def _set_disabled(self, value): ...
    def _get_disabled(self): ...
    def _set_error(self, value): ...
    def _get_error(self): ...
    def _set_focused(self, value): ...
    def _get_focused(self): ...
    def _set_fullWidth(self, value): ...
    def _get_fullWidth(self): ...
    def _set_hiddenLabel(self, value): ...
    def _get_hiddenLabel(self): ...
    def _set_margin(self, value): ...
    def _get_margin(self): ...
    def _set_required(self, value): ...
    def _get_required(self): ...
    def _set_size(self, value): ...
    def _get_size(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_variant(self, value): ...
    def _get_variant(self): ...
    def _init_ui(self): ...