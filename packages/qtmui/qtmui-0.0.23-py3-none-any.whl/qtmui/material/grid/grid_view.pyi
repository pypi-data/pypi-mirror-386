from typing import Callable, Dict
import asyncio
from qtpy.QtCore import QAbstractTableModel, QObject, Signal, Property, QModelIndex, QTimer, QThreadPool, QRunnable
from qtpy.QtGui import Qt
from qtpy.QtWidgets import QScrollBar, QStyledItemDelegate, QPushButton, QTableView, QHBoxLayout, QMainWindow, QFrame, QHeaderView, QApplication
from qtmui.hooks import State
from ..skeleton import Skeleton
from ..box import Box
class StyledItem:
    def __init__(self, parent, model): ...
    def paint(self, painter, option, index): ...
class GridViewModel:
    def __init__(self, parent, data): ...
    def rowCount(self, n): ...
    def columnCount(self, n): ...
    def data(self, index, role): ...
class WidgetSetter:
    def __init__(self): ...
class GridView:
    def __init__(self, model: State, columnCount, rowHeight, skeleton: Callable, sm, md, lg, xl): ...
    def _setup_model(self): ...
    def _thread_setup_table_for_visible_indexes(self): ...
    def _setup_table_for_visible_indexes(self): ...
    def _remove_index_widget(self, index): ...
    def _set_index_widget(self, indexes): ...
    def _set_stylesheet(self): ...
    def _set_model_data(self, _data): ...
    def _split_data_by_breakpoint(self): ...
    def _set_all_column_stretch_mode(self): ...
    def resizeEvent(self, event): ...
    def wheelEvent(self, event): ...