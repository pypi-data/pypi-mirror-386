import asyncio
from typing import Optional, Union, Dict, Callable, List
import uuid
from qtpy.QtWidgets import QGridLayout, QFrame, QWidget, QSizePolicy, QApplication
from qtpy.QtCore import Qt, QTimer
from qtmui.hooks import State
from ..typography import Typography
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.material.styles import useTheme
from ..widget_base import PyWidgetBase
from ..utils.validate_params import _validate_param
class Grid:
    def __init__(self, parent: Optional[QWidget], container: Optional[Union[bool, State]], key: Optional[Union[str, State]], columns: Optional[Union[int, Dict, List, State]], columnSpacing: Optional[Union[int, str, Dict, List, State]], direction: Optional[Union[str, Dict, List, State]], offset: Optional[Union[int, str, Dict, List, State]], spacing: Optional[Union[int, str, Dict, List, State]], wrap: Optional[Union[str, State]], children: Optional[Union[str, Callable, list, State]], rowSpacing: Optional[Union[int, str, Dict, List, State]], size: Optional[Union[int, str, Dict, List, State]], sx: Optional[Union[State, Callable, str, Dict]], **kwargs): ...
    def _set_container(self, value): ...
    def _get_container(self): ...
    def _set_key(self, value): ...
    def _get_key(self): ...
    def _set_columns(self, value): ...
    def _get_columns(self): ...
    def _set_columnSpacing(self, value): ...
    def _get_columnSpacing(self): ...
    def _set_direction(self, value): ...
    def _get_direction(self): ...
    def _set_offset(self, value): ...
    def _get_offset(self): ...
    def _set_spacing(self, value): ...
    def _compute_spacing(self, spacing): ...
    def _get_spacing(self): ...
    def _set_wrap(self, value): ...
    def _get_wrap(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_rowSpacing(self, value): ...
    def _get_rowSpacing(self): ...
    def _set_size(self, value): ...
    def _get_size(self): ...
    def _set_sx(self, value): ...
    def _setup_sx_position(self, sx): ...
    def _init_ui(self): ...
    def _connect_signals(self): ...
    def _update_container(self): ...
    def _update_columns(self): ...
    def _update_columnSpacing(self): ...
    def _update_direction(self): ...
    def _update_offset(self): ...
    def _update_spacing(self): ...
    def _update_wrap(self): ...
    def _update_children(self): ...
    def _update_rowSpacing(self): ...
    def _update_size(self): ...
    def _resolve_breakpoint_value(self, config_dict: dict, current_bp: str): ...
    def _setup_layout(self): ...
    def _update_stylesheet(self): ...
    def _set_stylesheet(self, component_styled): ...
    def _get_breakpoint(self): ...
    def _add_columns_by_breakpoint(self, breakpoint: str, size: Union[int, str, bool, Dict, List]): ...
    def _get_offset_by_breakpoint(self, breakpoint: str, offset: Union[int, str, Dict, List]): ...
    def _get_columns_by_breakpoint(self, breakpoint: str, columns: Union[int, Dict, List]): ...
    def _arrange_children(self): ...
    def resizeEvent(self, event): ...
    def _on_destroyed(self): ...