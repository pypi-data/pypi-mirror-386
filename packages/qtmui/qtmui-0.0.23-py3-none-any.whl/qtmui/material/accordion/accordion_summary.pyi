from typing import Optional, Union, Dict, List, Callable
from qtpy.QtWidgets import QPushButton, QHBoxLayout, QWidget
from qtpy.QtCore import Qt, QEvent
from ..spacer import HSpacer
from ..button import IconButton
from ..stack import Stack
from ..py_iconify import PyIconify
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from qtmui.hooks import State
from ..utils.validate_params import _validate_param
class AccordionSummary:
    def __init__(self, children: Optional[Union[State, List, QWidget]], classes: Optional[Union[State, Dict]], expandIcon: Optional[Union[State, PyIconify, QWidget]], focusVisibleClassName: Optional[Union[State, str]], slotProps: Optional[Union[State, Dict]], slots: Optional[Union[State, Dict]], sx: Optional[Union[State, Dict, Callable, str]], *args, **kwargs): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_expandIcon(self, value): ...
    def _get_expandIcon(self): ...
    def _set_focusVisibleClassName(self, value): ...
    def _get_focusVisibleClassName(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _setup_ui(self): ...
    def __set_stylesheet(self): ...
    def _toggle_icon(self, show_details): ...
    def eventFilter(self, obj, event): ...