from typing import Optional, List
from qtpy.QtWidgets import QLayout, QWidget, QLayoutItem, QLabel, QPushButton, QFrame, QSizePolicy
from qtpy.QtCore import Qt, QRect, QSize, QPoint, QMargins
class FlowLayout:
    def __init__(self, parent, alignment, flexWrap: str, alignItems, justifyContent, children: Optional[List[QWidget]], sx): ...
    def _init_ui(self): ...
    def __del__(self): ...
    def addItem(self, item): ...
    def count(self): ...
    def itemAt(self, index): ...
    def takeAt(self, index): ...
    def expandingDirections(self): ...
    def hasHeightForWidth(self): ...
    def heightForWidth(self, width): ...
    def setGeometry(self, rect): ...
    def sizeHint(self): ...
    def minimumSize(self): ...
    def minimumWidth(self): ...
    def maximumWidth(self): ...
    def _find_nearest_flow_layouts(self, widget): ...
    def setAlignmentMode(self, align): ...
    def setVerticalAlignmentMode(self, vertical_align): ...
    def _get_baseline_offset(self, item): ...
    def _get_basis(self, item): ...
    def _get_prop(self, item, name): ...
    def _do_layout(self, rect, test_only): ...
    def _align_line(self, line_widgets, baseline_offsets, start_x, total_width, y, line_height, total_height, test_only): ...
class FlowContainer:
    def __init__(self, children): ...