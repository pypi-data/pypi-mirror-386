import sys
import threading
from typing import Callable
from qtpy.QtCore import Qt, QModelIndex, Signal, QAbstractTableModel
from qtpy.QtWidgets import QPushButton, QWidget, QMainWindow, QHeaderView, QAbstractItemView, QTableView, QProxyStyle, QStyleOption, QTableView, QProxyStyle, QStyleOption, QHeaderView, QAbstractItemView, QApplication
from qtpy.QtGui import QColor
class FrozenColumn:
    def __init__(self, parent, context, lastCol: int): ...
    def setupUi(self): ...
    def configTable(self, selectionModel): ...
    def data(self, index, role): ...
    def cellButtonClicked(self, data): ...
    def getselectedRowsFast(self): ...
class DataGridModel:
    def headerData(self, section: int, orientation: Qt.Orientation, role: int): ...
    def __init__(self, parent, columns, rows): ...
    def restranUi(self): ...
    def rowCount(self, n): ...
    def columnCount(self, n): ...
    def flags(self, index: QModelIndex): ...
    def supportedDropActions(self): ...
    def _thread_set_index_model(self, index, widget): ...
    def data(self, index, role): ...
    def setData(self, index, value, role): ...
    def update_item(self, row, col, value): ...
    def change_color(self, row, column, color): ...
class DataGrid:
    def __init__(self, columns, rows, checkboxSelection, disableRowSelectionOnClick, context, id: str, isDense: bool, isManyRows: bool, fullWidth: bool, tableHead: list, singleSelection: bool, stretchLastSection: bool, model, selectionChanged: Callable, itemDelegates, backgroundColor: str, isFrozenLastColumn): ...
    def _thread_set_index_widget(self): ...
    def _set_index_widget(self, index): ...
    def setupUi(self): ...
    def update_model(self, model): ...
    def configUiTableView(self): ...
    def updateSectionWidth(self, logicalIndex, oldSize, newSize): ...
    def updateSectionHeight(self, logicalIndex, oldSize, newSize): ...
    def resizeEvent(self, event): ...
    def moveCursor(self, cursorAction, modifiers): ...
    def scrollTo(self, index, hint): ...
    def updateFrozenTableGeometry(self): ...
    def cellButtonClicked(self, data): ...
    def dropEvent(self, event): ...
    def getselectedRowsFast(self): ...
class MainWindow:
    def __init__(self): ...