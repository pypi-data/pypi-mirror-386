import asyncio
import threading
from typing import Callable
from qtpy.QtCore import Qt, QModelIndex, Signal, QTimer
from qtpy.QtWidgets import QHeaderView, QAbstractItemView, QTableView, QProxyStyle, QStyleOption
from .frozen_column import FrozenColumn
from .data_grid_model import DataGridModel
from ..widget_base import PyWidgetBase
from qtmui.material.styles import useTheme
class DataGrid:
    def __init__(self, columns, rows, checkboxSelection, disableRowSelectionOnClick, context, id: str, isDense: bool, isManyRows: bool, fullWidth: bool, tableHead: list, singleSelection: bool, stretchLastSection: bool, model, selectionChanged: Callable, itemDelegates, backgroundColor: str, isFrozenLastColumn): ...
    def _thread_set_index_widget(self): ...
    def _set_index_widget(self, index): ...
    def setupUi(self): ...
    def slot_set_stylesheet(self, value): ...
    def _set_stylesheet(self, component_styled): ...
    def update_model(self, model): ...
    def configUiTableView(self): ...
    def updateSectionWidth(self, logicalIndex, oldSize, newSize): ...
    def updateSectionHeight(self, logicalIndex, oldSize, newSize): ...
    def resizeEvent(self, event): ...
    def moveCursor(self, cursorAction, modifiers): ...
    def scrollTo(self, index, hint): ...
    def updateFrozenTableGeometry(self): ...
    def cellButtonClicked(self, data): ...
    def dropEvent(self, event): ...
    def getselectedRowsFast(self): ...