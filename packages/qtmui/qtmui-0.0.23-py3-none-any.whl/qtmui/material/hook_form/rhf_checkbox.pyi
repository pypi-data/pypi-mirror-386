from typing import List, Dict, Optional, Union, Callable
from qtpy.QtWidgets import QFrame, QVBoxLayout, QHBoxLayout, QLabel
from qtpy.QtCore import Qt, Property, Slot, Signal
from qtmui.hooks import useState
from qtmui.hooks import State
from qtmui.material.styles import useTheme
from ..form_control_label import FormControlLabel
from ..controller import Controller
from ..typography import Typography
from ..box import Box
from ..checkbox import Checkbox
from ..utils.validate_params import _validate_param
class RHFCheckbox:
    def __init__(self, name: str, value: object, checked: bool, label: str, error: bool, helperText: str): ...
    def onChange(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...
class RHFMultiCheckbox:
    def __init__(self, name: str, label: Optional[Union[str, State, Callable]], options: List[Dict[str, any]], row: bool, spacing: int, helperText: Optional[str], sx: Optional[Dict], *args, **kwargs): ...
    def _init_ui(self): ...
    def _on_checkbox_change(self, data): ...
    def set_value(self, value: List[any]): ...
    def get_value(self): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...