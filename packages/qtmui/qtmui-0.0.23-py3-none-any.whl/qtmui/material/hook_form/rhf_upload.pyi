from typing import Callable, Optional
from qtpy.QtCore import Property, Slot, Signal, Qt
from qtpy.QtWidgets import QWidget, QVBoxLayout, QLabel, QHBoxLayout
from ..controller import Controller
from ..box import Box
from ..form_helper_text import FormHelperText
from ..spacer import HSpacer
from ..upload import Upload, UploadBox, UploadAvatar
from qtmui.material.styles import useTheme
from qtmui.hooks import useState
from qtmui.qss_name import *
class RHFUploadAvatar:
    def __init__(self, name: str, value: Optional[object], multiple: bool, maxSize: Optional[bool], onDrop: Optional[Callable], onChange: Optional[Callable], helperText: str, height: int): ...
    def handle_avatar_changed(self, value): ...
    def set_value(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...
class RHFUploadBox:
    def __init__(self, name: str, value: Optional[object], multiple: bool, helperText: str): ...
    def _on_change(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...
class RHFUpload:
    def __init__(self, name: str, value: Optional[object], thumbnail: bool, multiple: bool, maxSize: int, onDrop: Callable, onDelete: Callable, onRemove: Callable, onRemoveAll: Callable, onUpload: Callable, helperText: str): ...
    def _on_change(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...