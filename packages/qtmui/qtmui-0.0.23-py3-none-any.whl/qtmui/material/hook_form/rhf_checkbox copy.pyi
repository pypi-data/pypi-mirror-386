from qtpy.QtCore import Qt, Property, Slot, Signal
from qtpy.QtWidgets import QWidget, QVBoxLayout, QLabel, QHBoxLayout
from qtmui.hooks import State
from ..flow_layout import FlowLayout
from qtmui.material.styles import useTheme
from ..controller import Controller
from ..textfield import TextField
from ..auto_complete.complete import Autocomplete
from ..form_control_label import FormControlLabel
from ..checkbox import Checkbox, MultiCheckbox
from ..form_control import FormControl
from ..form_label import FormLabel
from ..box import Box
from ..form_group import FormGroup
from ..form_helper_text import FormHelperText
from ..qss_name import *
class RHFCheckbox:
    def __init__(self, name: str, value: object, checked: bool, label: str, error: bool, helperText: str): ...
    def onChange(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...
class RHFMultiCheckbox:
    def __init__(self, row: bool, name: str, label: str, options: object, spacing: int, helperText: str, value: object, sx: dict, *other): ...
    def _set_value(self, value: list): ...
    def _on_change(self, value): ...
    def stateSignal(self): ...
    def stateSignal(self, value): ...
    def state(self, state): ...
class RHFMultiCheckboxNew:
    def __init__(self, row: bool, flowLayout: bool, name: str, label: str, options: object, spacing: int, helperText: str, sx: dict, *other): ...
    def get_selected(self, field_value, option_value): ...