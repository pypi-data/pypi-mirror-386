from enum import Enum
from typing import Union
from qtpy.QtCore import Qt, QPoint, QObject, QPointF, QTimer, QPropertyAnimation, QEvent
from qtpy.QtGui import QPainter, QColor, QPainterPath, QIcon, QCursor, QPolygonF, QPixmap, QImage
from qtpy.QtWidgets import QWidget, QHBoxLayout, QApplication, QGraphicsDropShadowEffect
from ...common.icon import FluentIconBase
from ...common.screen import getCurrentScreenGeometry
from ...common.style_sheet import isDarkTheme
from .flyout import FlyoutView, FlyoutViewBase
class TeachingTipTailPosition:
class ImagePosition:
class TeachingTipView:
    def __init__(self, title: str, content: str, icon: Union[FluentIconBase, QIcon, str], image: Union[str, QPixmap, QImage], isClosable, tailPosition, parent): ...
    def _adjustImage(self): ...
    def _addImageToLayout(self): ...
    def paintEvent(self, e): ...
class TeachTipBubble:
    def __init__(self, view: FlyoutViewBase, tailPosition, parent): ...
    def setView(self, view: QWidget): ...
    def paintEvent(self, e): ...
class TeachingTip:
    def __init__(self, view: FlyoutViewBase, target: QWidget, duration, tailPosition, parent, isDeleteOnClose): ...
    def setShadowEffect(self, blurRadius, offset): ...
    def _fadeOut(self): ...
    def showEvent(self, e): ...
    def closeEvent(self, e): ...
    def eventFilter(self, obj, e: QEvent): ...
    def addWidget(self, widget: QWidget, stretch, align): ...
    def view(self): ...
    def setView(self, view): ...
    def make(cls, view: FlyoutViewBase, target: QWidget, duration, tailPosition, parent, isDeleteOnClose): ...
    def create(cls, target: QWidget, title: str, content: str, icon: Union[FluentIconBase, QIcon, str], image: Union[str, QPixmap, QImage], isClosable, duration, tailPosition, parent, isDeleteOnClose): ...
class PopupTeachingTip:
    def __init__(self, view: FlyoutViewBase, target: QWidget, duration, tailPosition, parent, isDeleteOnClose): ...
class TeachingTipManager:
    def __init__(self): ...
    def doLayout(self, tip: TeachTipBubble): ...
    def imagePosition(self): ...
    def position(self, tip: TeachingTip): ...
    def draw(self, tip: TeachTipBubble, painter: QPainter): ...
    def _pos(self, tip: TeachingTip): ...
    def make(position: TeachingTipTailPosition): ...
class TopTailTeachingTipManager:
    def doLayout(self, tip): ...
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class BottomTailTeachingTipManager:
    def doLayout(self, tip): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class LeftTailTeachingTipManager:
    def doLayout(self, tip): ...
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class RightTailTeachingTipManager:
    def doLayout(self, tip): ...
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class TopLeftTailTeachingTipManager:
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class TopRightTailTeachingTipManager:
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class BottomLeftTailTeachingTipManager:
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class BottomRightTailTeachingTipManager:
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class LeftTopTailTeachingTipManager:
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class LeftBottomTailTeachingTipManager:
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class RightTopTailTeachingTipManager:
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...
class RightBottomTailTeachingTipManager:
    def imagePosition(self): ...
    def draw(self, tip, painter): ...
    def _pos(self, tip: TeachingTip): ...