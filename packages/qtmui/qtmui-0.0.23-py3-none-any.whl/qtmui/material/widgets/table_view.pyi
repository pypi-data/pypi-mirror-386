from typing import List, Union
from qtpy.QtCore import Qt, QMargins, QModelIndex, QItemSelectionModel, Property, QRectF
from qtpy.QtGui import QPainter, QColor, QKeyEvent, QPalette, QBrush
from qtpy.QtWidgets import QStyledItemDelegate, QApplication, QStyleOptionViewItem, QTableView, QTableWidget, QWidget, QTableWidgetItem, QStyle, QStyleOptionButton
from .check_box import CheckBoxIcon
from ...common.font import getFont
from ...common.style_sheet import isDarkTheme, FluentStyleSheet, themeColor, setCustomStyleSheet
from .line_edit import LineEdit
from .scroll_bar import SmoothScrollDelegate
class TableItemDelegate:
    def __init__(self, parent: QTableView): ...
    def setHoverRow(self, row: int): ...
    def setPressedRow(self, row: int): ...
    def setSelectedRows(self, indexes: List[QModelIndex]): ...
    def sizeHint(self, option, index): ...
    def createEditor(self, parent: QWidget, option: QStyleOptionViewItem, index: QModelIndex): ...
    def updateEditorGeometry(self, editor: QWidget, option: QStyleOptionViewItem, index: QModelIndex): ...
    def _drawBackground(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
    def _drawIndicator(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
    def initStyleOption(self, option: QStyleOptionViewItem, index: QModelIndex): ...
    def paint(self, painter, option, index): ...
    def _drawCheckBox(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
class TableBase:
    def __init__(self, *args, **kwargs): ...
    def setBorderVisible(self, isVisible: bool): ...
    def setBorderRadius(self, radius: int): ...
    def _setHoverRow(self, row: int): ...
    def _setPressedRow(self, row: int): ...
    def _setSelectedRows(self, indexes: List[QModelIndex]): ...
    def leaveEvent(self, e): ...
    def resizeEvent(self, e): ...
    def keyPressEvent(self, e: QKeyEvent): ...
    def mousePressEvent(self, e): ...
    def mouseReleaseEvent(self, e): ...
    def setItemDelegate(self, delegate: TableItemDelegate): ...
    def selectAll(self): ...
    def selectRow(self, row: int): ...
    def clearSelection(self): ...
    def setCurrentIndex(self, index: QModelIndex): ...
    def updateSelectedRows(self): ...
class TableWidget:
    def __init__(self, parent): ...
    def setCurrentCell(self, row: int, column: int, command): ...
    def setCurrentItem(self, item: QTableWidgetItem, command): ...
    def setCurrentCell(self, row: int, column: int, command): ...
    def setCurrentItem(self, item: QTableWidgetItem, command): ...
    def isSelectRightClickedRow(self): ...
    def setSelectRightClickedRow(self, isSelect: bool): ...
class TableView:
    def __init__(self, parent): ...
    def isSelectRightClickedRow(self): ...
    def setSelectRightClickedRow(self, isSelect: bool): ...