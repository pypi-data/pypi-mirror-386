from typing import Iterable
from qtpy.QtCore import Qt, Signal, QSize, QEvent, QRectF
from qtpy.QtGui import QPainter
from qtpy.QtWidgets import QListWidget, QListWidgetItem, QToolButton
from .scroll_area import SmoothScrollBar
from ..py_iconify import PyIconify
from qtmui.material.styles import useTheme
from ...qtmui_assets import QTMUI_ASSETS
class ScrollButton:
    def __init__(self, icon: PyIconify, parent): ...
    def eventFilter(self, obj, e: QEvent): ...
    def paintEvent(self, e): ...
class CycleListWidget:
    def __init__(self, items: Iterable, itemSize: QSize, align, parent): ...
    def setItems(self, items: list): ...
    def _createItems(self, items: list): ...
    def _addColumnItems(self, items, disabled): ...
    def _onItemClicked(self, item): ...
    def setSelectedItem(self, text: str): ...
    def scrollToItem(self, item: QListWidgetItem, hint): ...
    def wheelEvent(self, e): ...
    def scrollDown(self): ...
    def scrollUp(self): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def resizeEvent(self, e): ...
    def eventFilter(self, obj, e: QEvent): ...
    def currentItem(self): ...
    def currentIndex(self): ...
    def setCurrentIndex(self, index: int): ...