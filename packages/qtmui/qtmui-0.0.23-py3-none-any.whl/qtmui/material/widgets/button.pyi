from typing import Union
import traceback
from qtpy.QtCore import Signal, QUrl, Qt, QRectF, QSize, QPoint, Property
from qtpy.QtGui import QDesktopServices, QIcon, QPainter, QColor
from qtpy.QtWidgets import QHBoxLayout, QPushButton, QRadioButton, QToolButton, QApplication, QWidget, QSizePolicy
from ...common.animation import TranslateYAnimation
from ...common.icon import *
from ...common.icon import FluentIcon
from ...common.font import setFont
from ...common.style_sheet import FluentStyleSheet, themeColor, ThemeColor
from ...common.overload import singledispatchmethod
from .menu import RoundMenu, MenuAnimationType
from .tool_tip import ToolTipFilter, ToolTipPosition
class PushButton:
    def __init__(self, parent: QWidget): ...
    def _(self, text: str, parent: QWidget, icon: Union[QIcon, str, FluentIconBase]): ...
    def _(self, icon: QIcon, text: str, parent: QWidget): ...
    def _(self, icon: FluentIconBase, text: str, parent: QWidget): ...
    def _postInit(self): ...
    def setIcon(self, icon: Union[QIcon, str, FluentIconBase]): ...
    def icon(self): ...
    def setProperty(self, name: str, value): ...
    def mousePressEvent(self, e): ...
    def mouseReleaseEvent(self, e): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def _drawIcon(self, icon, painter, rect, state): ...
    def paintEvent(self, e): ...
class PrimaryPushButton:
    def _drawIcon(self, icon, painter, rect, state): ...
class TransparentPushButton:
class ToggleButton:
    def _postInit(self): ...
    def _drawIcon(self, icon, painter, rect): ...
class TransparentTogglePushButton:
class HyperlinkButton:
    def __init__(self, parent: QWidget): ...
    def _(self, url: str, text: str, parent: QWidget, icon: Union[QIcon, FluentIconBase, str]): ...
    def _(self, icon: QIcon, url: str, text: str, parent: QWidget): ...
    def _(self, icon: FluentIconBase, url: str, text: str, parent: QWidget): ...
    def getUrl(self): ...
    def setUrl(self, url: Union[str, QUrl]): ...
    def _onClicked(self): ...
    def _drawIcon(self, icon, painter, rect, state): ...
class RadioButton:
    def __init__(self, parent: QWidget): ...
    def _(self, text: str, parent: QWidget): ...
class ToolButton:
    def __init__(self, parent: QWidget): ...
    def _(self, icon: FluentIconBase, parent: QWidget): ...
    def _(self, icon: QIcon, parent: QWidget): ...
    def _(self, icon: str, parent: QWidget): ...
    def _postInit(self): ...
    def setIcon(self, icon: Union[QIcon, str, FluentIconBase]): ...
    def icon(self): ...
    def setProperty(self, name: str, value): ...
    def mousePressEvent(self, e): ...
    def mouseReleaseEvent(self, e): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def _drawIcon(self, icon, painter: QPainter, rect: QRectF, state): ...
    def paintEvent(self, e): ...
class TransparentToolButton:
class PrimaryToolButton:
    def _drawIcon(self, icon, painter: QPainter, rect: QRectF, state): ...
class ToggleToolButton:
    def _postInit(self): ...
    def _drawIcon(self, icon, painter, rect): ...
class TransparentToggleToolButton:
    def _drawIcon(self, icon, painter, rect): ...
class DropDownButtonBase:
    def __init__(self, *args, **kwargs): ...
    def setMenu(self, menu: RoundMenu): ...
    def menu(self): ...
    def _showMenu(self): ...
    def _hideMenu(self): ...
    def _drawDropDownIcon(self, painter, rect): ...
    def paintEvent(self, e): ...
class DropDownPushButton:
    def mouseReleaseEvent(self, e): ...
    def paintEvent(self, e): ...
class TransparentDropDownPushButton:
class DropDownToolButton:
    def mouseReleaseEvent(self, e): ...
    def _drawIcon(self, icon, painter, rect: QRectF): ...
    def paintEvent(self, e): ...
class TransparentDropDownToolButton:
class PrimaryDropDownButtonBase:
    def _drawDropDownIcon(self, painter, rect): ...
class PrimaryDropDownPushButton:
    def mouseReleaseEvent(self, e): ...
    def paintEvent(self, e): ...
class PrimaryDropDownToolButton:
    def mouseReleaseEvent(self, e): ...
    def _drawIcon(self, icon, painter, rect: QRectF): ...
    def paintEvent(self, e): ...
class SplitDropButton:
    def _postInit(self): ...
    def _drawIcon(self, icon, painter, rect): ...
class PrimarySplitDropButton:
    def _postInit(self): ...
    def _drawIcon(self, icon, painter, rect): ...
class SplitWidgetBase:
    def __init__(self, parent): ...
    def setWidget(self, widget: QWidget): ...
    def setDropButton(self, button): ...
    def setDropIcon(self, icon: Union[str, QIcon, FluentIconBase]): ...
    def setDropIconSize(self, size: QSize): ...
    def setFlyout(self, flyout): ...
    def showFlyout(self): ...
class SplitPushButton:
    def __init__(self, parent: QWidget): ...
    def _(self, text: str, parent: QWidget, icon: Union[QIcon, str, FluentIconBase]): ...
    def _(self, icon: QIcon, text: str, parent: QWidget): ...
    def _(self, icon: FluentIconBase, text: str, parent: QWidget): ...
    def _postInit(self): ...
    def text(self): ...
    def setText(self, text: str): ...
    def icon(self): ...
    def setIcon(self, icon: Union[QIcon, FluentIconBase, str]): ...
    def setIconSize(self, size: QSize): ...
class PrimarySplitPushButton:
    def _postInit(self): ...
class SplitToolButton:
    def __init__(self, parent: QWidget): ...
    def _(self, icon: FluentIconBase, parent: QWidget): ...
    def _(self, icon: QIcon, parent: QWidget): ...
    def _(self, icon: str, parent: QWidget): ...
    def _postInit(self): ...
    def icon(self): ...
    def setIcon(self, icon: Union[QIcon, FluentIconBase, str]): ...
    def setIconSize(self, size: QSize): ...
class PrimarySplitToolButton:
    def _postInit(self): ...
class PillButtonBase:
    def __init__(self, *args, **kwargs): ...
    def paintEvent(self, e): ...
class PillPushButton:
    def paintEvent(self, e): ...
class PillToolButton:
    def paintEvent(self, e): ...