from math import floor
from qtpy.QtCore import QEasingCurve, Qt, QPropertyAnimation, Property, QParallelAnimationGroup, QSequentialAnimationGroup, QLocale
from qtpy.QtGui import QPainter, QColor
from qtpy.QtWidgets import QProgressBar
from ...common.style_sheet import themeColor, isDarkTheme
class ProgressBar:
    def __init__(self, parent, useAni): ...
    def getVal(self): ...
    def setVal(self, v: float): ...
    def isUseAni(self): ...
    def setUseAni(self, isUSe: bool): ...
    def _onValueChanged(self, value): ...
    def lightBarColor(self): ...
    def darkBarColor(self): ...
    def setCustomBarColor(self, light, dark): ...
    def setCustomBackgroundColor(self, light, dark): ...
    def resume(self): ...
    def pause(self): ...
    def setPaused(self, isPaused: bool): ...
    def isPaused(self): ...
    def error(self): ...
    def setError(self, isError: bool): ...
    def isError(self): ...
    def barColor(self): ...
    def valText(self): ...
    def paintEvent(self, e): ...
class IndeterminateProgressBar:
    def __init__(self, parent, start): ...
    def lightBarColor(self): ...
    def darkBarColor(self): ...
    def setCustomBarColor(self, light, dark): ...
    def shortPos(self): ...
    def shortPos(self, p): ...
    def longPos(self): ...
    def longPos(self, p): ...
    def start(self): ...
    def stop(self): ...
    def isStarted(self): ...
    def pause(self): ...
    def resume(self): ...
    def setPaused(self, isPaused: bool): ...
    def isPaused(self): ...
    def error(self): ...
    def setError(self, isError: bool): ...
    def isError(self): ...
    def barColor(self): ...
    def paintEvent(self, e): ...