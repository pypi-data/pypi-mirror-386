from typing import List, Union
from qtpy.QtCore import Qt, Signal, QRectF, Property, QPropertyAnimation, QPoint, QSize
from qtpy.QtGui import QPixmap, QPainter, QColor, QPainterPath, QFont, QIcon
from qtpy.QtWidgets import QWidget, QFrame, QVBoxLayout, QHBoxLayout, QLabel
from ...common.overload import singledispatchmethod
from ...common.style_sheet import isDarkTheme, FluentStyleSheet
from ...common.animation import BackgroundAnimationWidget, DropShadowAnimation
from ...common.font import setFont
from ...common.icon import FluentIconBase
from .label import BodyLabel, CaptionLabel
from .icon_widget import IconWidget
class CardWidget:
    def __init__(self, parent): ...
    def mouseReleaseEvent(self, e): ...
    def setClickEnabled(self, isEnabled: bool): ...
    def isClickEnabled(self): ...
    def _normalBackgroundColor(self): ...
    def _hoverBackgroundColor(self): ...
    def _pressedBackgroundColor(self): ...
    def getBorderRadius(self): ...
    def setBorderRadius(self, radius: int): ...
    def paintEvent(self, e): ...
class SimpleCardWidget:
    def __init__(self, parent): ...
    def _normalBackgroundColor(self): ...
    def _hoverBackgroundColor(self): ...
    def _pressedBackgroundColor(self): ...
    def paintEvent(self, e): ...
class ElevatedCardWidget:
    def __init__(self, parent): ...
    def enterEvent(self, e): ...
    def leaveEvent(self, e): ...
    def mousePressEvent(self, e): ...
    def _startElevateAni(self, start, end): ...
    def _hoverBackgroundColor(self): ...
    def _pressedBackgroundColor(self): ...
class CardSeparator:
    def __init__(self, parent): ...
    def paintEvent(self, e): ...
class HeaderCardWidget:
    def __init__(self, parent): ...
    def _(self, title: str, parent): ...
    def getTitle(self): ...
    def setTitle(self, title: str): ...
    def _postInit(self): ...
class CardGroupWidget:
    def __init__(self, icon: Union[str, FluentIconBase, QIcon], title: str, content: str, parent): ...
    def __initWidget(self): ...
    def title(self): ...
    def setTitle(self, text: str): ...
    def content(self): ...
    def setContent(self, text: str): ...
    def icon(self): ...
    def setIcon(self, icon: Union[str, FluentIconBase, QIcon]): ...
    def setIconSize(self, size: QSize): ...
    def setSeparatorVisible(self, isVisible: bool): ...
    def isSeparatorVisible(self): ...
    def addWidget(self, widget: QWidget, stretch): ...
class GroupHeaderCardWidget:
    def _postInit(self): ...
    def addGroup(self, icon: Union[str, FluentIconBase, QIcon], title: str, content: str, widget: QWidget, stretch): ...
    def groupCount(self): ...