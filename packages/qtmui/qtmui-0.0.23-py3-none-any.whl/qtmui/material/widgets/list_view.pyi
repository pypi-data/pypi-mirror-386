from typing import List, Union
from qtpy.QtCore import Qt, QModelIndex, Property
from qtpy.QtGui import QPainter
from qtpy.QtWidgets import QStyleOptionViewItem, QListView, QListView, QListWidget, QWidget
from .scroll_bar import SmoothScrollDelegate
from .table_view import TableItemDelegate
from ...common.style_sheet import FluentStyleSheet, themeColor
class ListItemDelegate:
    def __init__(self, parent: QListView): ...
    def _drawBackground(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
    def _drawIndicator(self, painter: QPainter, option: QStyleOptionViewItem, index: QModelIndex): ...
class ListBase:
    def __init__(self, *args, **kwargs): ...
    def _setHoverRow(self, row: int): ...
    def _setPressedRow(self, row: int): ...
    def _setSelectedRows(self, indexes: List[QModelIndex]): ...
    def leaveEvent(self, e): ...
    def resizeEvent(self, e): ...
    def keyPressEvent(self, e): ...
    def mousePressEvent(self, e): ...
    def mouseReleaseEvent(self, e): ...
    def setItemDelegate(self, delegate: ListItemDelegate): ...
    def clearSelection(self): ...
    def setCurrentIndex(self, index: QModelIndex): ...
    def updateSelectedRows(self): ...
class ListWidget:
    def __init__(self, parent): ...
    def setCurrentItem(self, item, command): ...
    def setCurrentRow(self, row: int, command): ...
    def isSelectRightClickedRow(self): ...
    def setSelectRightClickedRow(self, isSelect: bool): ...
class ListView:
    def __init__(self, parent): ...
    def isSelectRightClickedRow(self): ...
    def setSelectRightClickedRow(self, isSelect: bool): ...