from typing import Iterable, List, Tuple, Union
from qtpy.QtCore import Qt, QSize, QRectF, QRect, QPoint, QEvent
from qtpy.QtGui import QAction, QPainter, QColor, QFont, QHoverEvent, QPainterPath
from qtpy.QtWidgets import QLayoutItem, QWidget, QFrame, QHBoxLayout, QApplication
from ...common.font import setFont
from ...common.icon import FluentIcon, Icon, Action
from ...common.style_sheet import isDarkTheme
from .menu import RoundMenu, MenuAnimationType
from .button import TransparentToggleToolButton
from .tool_tip import ToolTipFilter
from .flyout import FlyoutViewBase, Flyout
class CommandButton:
    def _postInit(self): ...
    def setTight(self, isTight: bool): ...
    def isTight(self): ...
    def sizeHint(self): ...
    def isIconOnly(self): ...
    def _drawIcon(self, icon, painter, rect): ...
    def text(self): ...
    def setText(self, text: str): ...
    def setAction(self, action: QAction): ...
    def _onActionChanged(self): ...
    def action(self): ...
    def paintEvent(self, e): ...
class CommandToolTipFilter:
    def _canShowToolTip(self): ...
class MoreActionsButton:
    def _postInit(self): ...
    def sizeHint(self): ...
    def clearState(self): ...
class CommandSeparator:
    def __init__(self, parent): ...
    def paintEvent(self, e): ...
class CommandMenu:
    def __init__(self, parent): ...
    def exec(self, pos, ani, aniType): ...
class CommandBar:
    def __init__(self, parent): ...
    def setSpaing(self, spacing: int): ...
    def spacing(self): ...
    def addAction(self, action: QAction): ...
    def addActions(self, actions: Iterable[QAction]): ...
    def addHiddenAction(self, action: QAction): ...
    def addHiddenActions(self, actions: List[QAction]): ...
    def insertAction(self, before: QAction, action: QAction): ...
    def addSeparator(self): ...
    def insertSeparator(self, index: int): ...
    def addWidget(self, widget: QWidget): ...
    def removeAction(self, action: QAction): ...
    def removeWidget(self, widget: QWidget): ...
    def removeHiddenAction(self, action: QAction): ...
    def setToolButtonStyle(self, style: Qt.ToolButtonStyle): ...
    def toolButtonStyle(self): ...
    def setButtonTight(self, isTight: bool): ...
    def isButtonTight(self): ...
    def setIconSize(self, size: QSize): ...
    def iconSize(self): ...
    def resizeEvent(self, e): ...
    def _createButton(self, action: QAction): ...
    def _insertWidgetToLayout(self, index: int, widget: QWidget): ...
    def minimumSizeHint(self): ...
    def updateGeometry(self): ...
    def _visibleWidgets(self): ...
    def suitableWidth(self): ...
    def resizeToSuitableWidth(self): ...
    def setFont(self, font: QFont): ...
    def commandButtons(self): ...
    def setMenuDropDown(self, down: bool): ...
    def isMenuDropDown(self): ...
    def _showMoreActionsMenu(self): ...
class CommandViewMenu:
    def __init__(self, parent): ...
    def setDropDown(self, down: bool, _long: bool): ...
    def exec(self, pos, ani, aniType): ...
class CommandViewBar:
    def __init__(self, parent): ...
    def setMenuDropDown(self, down: bool): ...
    def isMenuDropDown(self): ...
    def _showMoreActionsMenu(self): ...
class CommandBarView:
    def __init__(self, parent): ...
    def setMenuVisible(self, isVisible): ...
    def addWidget(self, widget: QWidget): ...
    def setSpaing(self, spacing: int): ...
    def spacing(self): ...
    def addAction(self, action: QAction): ...
    def addActions(self, actions: Iterable[QAction]): ...
    def addHiddenAction(self, action: QAction): ...
    def addHiddenActions(self, actions: List[QAction]): ...
    def insertAction(self, before: QAction, action: QAction): ...
    def addSeparator(self): ...
    def insertSeparator(self, index: int): ...
    def removeAction(self, action: QAction): ...
    def removeWidget(self, widget: QWidget): ...
    def removeHiddenAction(self, action: QAction): ...
    def setToolButtonStyle(self, style: Qt.ToolButtonStyle): ...
    def toolButtonStyle(self): ...
    def setButtonTight(self, isTight: bool): ...
    def isButtonTight(self): ...
    def setIconSize(self, size: QSize): ...
    def iconSize(self): ...
    def setFont(self, font: QFont): ...
    def setMenuDropDown(self, down: bool): ...
    def suitableWidth(self): ...
    def resizeToSuitableWidth(self): ...
    def actions(self): ...
    def paintEvent(self, e): ...