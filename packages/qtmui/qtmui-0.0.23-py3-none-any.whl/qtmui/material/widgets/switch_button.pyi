from enum import Enum
from qtpy.QtCore import Qt, QTimer, Property, Signal, QEvent, QPoint, QPropertyAnimation, QEasingCurve
from qtpy.QtGui import QColor, QPainter, QHoverEvent
from qtpy.QtWidgets import QApplication, QHBoxLayout, QLabel, QToolButton, QWidget
from ...common.style_sheet import FluentStyleSheet, themeColor, ThemeColor, isDarkTheme
from ...common.overload import singledispatchmethod
from .button import ToolButton
class Indicator:
    def __init__(self, parent): ...
    def mouseReleaseEvent(self, e): ...
    def _toggleSlider(self): ...
    def toggle(self): ...
    def setDown(self, isDown: bool): ...
    def setHover(self, isHover: bool): ...
    def paintEvent(self, e): ...
    def _drawBackground(self, painter: QPainter): ...
    def _drawCircle(self, painter: QPainter): ...
    def _backgroundColor(self): ...
    def _borderColor(self): ...
    def _sliderColor(self): ...
    def getSliderX(self): ...
    def setSliderX(self, x): ...
class IndicatorPosition:
class SwitchButton:
    def __init__(self, parent: QWidget, indicatorPos): ...
    def _(self, text: str, parent: QWidget, indicatorPos): ...
    def __initWidget(self): ...
    def eventFilter(self, obj, e: QEvent): ...
    def isChecked(self): ...
    def setChecked(self, isChecked): ...
    def toggleChecked(self): ...
    def _updateText(self): ...
    def getText(self): ...
    def setText(self, text): ...
    def getSpacing(self): ...
    def setSpacing(self, spacing): ...
    def getOnText(self): ...
    def setOnText(self, text): ...
    def getOffText(self): ...
    def setOffText(self, text): ...