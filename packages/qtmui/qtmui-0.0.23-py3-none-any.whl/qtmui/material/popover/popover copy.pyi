from weakref import ref
import uuid
from typing import Optional, Union, Dict, List, Callable
from qtpy.QtWidgets import QWidget, QVBoxLayout, QFrame, QApplication, QGraphicsDropShadowEffect
from qtpy.QtCore import Qt, QEvent, QTimer, QPoint, QPropertyAnimation, Signal
from qtpy.QtGui import QCursor, QColor
from qtmui.hooks import State
from ..paper import Paper
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..widget_base import PyWidgetBase
from ..utils.validate_params import _validate_param
class PopoverRef:
    def __init__(self, popover): ...
    def updatePosition(self): ...
class Popover:
    def __init__(self, open: Optional[Union[State, bool]], action: Optional[Union[State, PopoverRef]], anchorEl: Optional[Union[State, Callable]], anchorOrigin: Union[State, Dict], anchorPosition: Optional[Union[State, Dict]], anchorReference: Union[State, str], children: Optional[Union[State, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], container: Optional[Union[State, QWidget, Callable]], disableScrollLock: Union[State, bool], elevation: Union[State, int], marginThreshold: Union[State, int], onClose: Optional[Union[State, Callable]], slotProps: Union[State, Dict], slots: Union[State, Dict], sx: Optional[Union[State, List, Dict, Callable, str]], transformOrigin: Union[State, Dict], transitionDuration: Union[State, str, int, Dict], spacing: Union[State, int], offset: Union[State, int], arrow: Union[State, str], *args, **kwargs): ...
    def _set_open(self, value): ...
    def _get_open(self): ...
    def _set_action(self, value): ...
    def _get_action(self): ...
    def _set_anchorEl(self, value): ...
    def _get_anchorEl(self): ...
    def _set_anchorOrigin(self, value): ...
    def _get_anchorOrigin(self): ...
    def _set_anchorPosition(self, value): ...
    def _get_anchorPosition(self): ...
    def _set_anchorReference(self, value): ...
    def _get_anchorReference(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_container(self, value): ...
    def _get_container(self): ...
    def _set_disableScrollLock(self, value): ...
    def _get_disableScrollLock(self): ...
    def _set_elevation(self, value): ...
    def _get_elevation(self): ...
    def _set_marginThreshold(self, value): ...
    def _get_marginThreshold(self): ...
    def _set_onClose(self, value): ...
    def _get_onClose(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_transformOrigin(self, value): ...
    def _get_transformOrigin(self): ...
    def _set_transitionDuration(self, value): ...
    def _get_transitionDuration(self): ...
    def _set_spacing(self, value): ...
    def _get_spacing(self): ...
    def _set_offset(self, value): ...
    def _get_offset(self): ...
    def _set_arrow(self, value): ...
    def _get_arrow(self): ...
    def _on_arrow_changed(self): ...
    def _update_arrow(self): ...
    def _get_arrow_styles(self, arrow_value): ...
    def _init_ui(self): ...
    def _on_destroyed(self): ...
    def slot_set_stylesheet(self, value): ...
    def _set_visible(self, open): ...
    def _set_stylesheet(self, component_styled): ...
    def _setShadowEffect(self, blurRadius, offset, color): ...
    def _update_position(self): ...
    def _set_anchor_el(self, anchorEl: QWidget): ...
    def showTooltip(self, anchorEl: QWidget, anchor_pos, anchor_rect): ...
    def calculate_position(self, anchor_pos, anchor_rect): ...
    def get_anchor_vertical(self, anchor_pos, anchor_rect): ...
    def get_anchor_horizontal(self, anchor_pos, anchor_rect): ...
    def get_transform_vertical(self, tooltip_size): ...
    def get_transform_horizontal(self, tooltip_size): ...
    def hideTooltip(self): ...
    def enterEvent(self, event): ...
    def _check_until_ppv_under_mouse(self): ...
    def leaveEvent(self, event): ...
    def check_cursor(self): ...
    def eventFilter(self, obj, event): ...