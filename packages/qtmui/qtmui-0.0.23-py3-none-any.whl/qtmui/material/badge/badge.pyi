import asyncio
from typing import Optional, Union, Callable, Any, Dict, List
import uuid
from qtmui.hooks import State
from qtpy.QtWidgets import QPushButton
from qtpy.QtGui import Qt, QPixmap, QPainter, QPen, QBrush, QColor, QFont
from qtpy.QtCore import Qt, QRect, QSize, QByteArray, QTimer
from qtpy.QtSvg import QSvgRenderer
from qtmui.material.styles.create_theme.theme_reducer import ThemeState
from qtmui.material.styles.create_theme.create_palette import PaletteColor
from ..system.color_manipulator import alpha
from ...common.icon import writeSvg
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..py_tool_button.py_tool_button import PyToolButton
from ..widget_base import PyWidgetBase
from ...qtmui_assets import QTMUI_ASSETS
from qtmui.material.styles import useTheme
from qtmui.i18n.use_translation import translate, i18n
from ..utils.validate_params import _validate_param
class Badge:
    def __init__(self, anchorOrigin: Union[State, Dict[str, str]], badgeContent: Optional[Union[State, Any]], children: Optional[Union[State, Any]], classes: Optional[Union[State, Dict]], color: Union[State, str], component: Optional[Union[State, Any]], components: Optional[Union[State, Dict]], componentsProps: Optional[Union[State, Dict]], invisible: Union[State, bool], icon: Optional[Union[State, str]], max: Union[State, int], overlap: Union[State, str], key: Optional[Union[State, str]], showZero: Union[State, bool], slotProps: Optional[Union[State, Dict]], slots: Optional[Union[State, Dict]], sx: Optional[Union[State, Dict, Callable, str]], variant: Union[State, str], text: Optional[Union[str, State, Callable]], **kwargs): ...
    def _set_anchorOrigin(self, value): ...
    def _get_anchorOrigin(self): ...
    def _set_badgeContent(self, value): ...
    def _get_badgeContent(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_color(self, value): ...
    def _get_color(self): ...
    def _set_component(self, value): ...
    def _get_component(self): ...
    def _set_components(self, value): ...
    def _get_components(self): ...
    def _set_componentsProps(self, value): ...
    def _get_componentsProps(self): ...
    def _set_invisible(self, value): ...
    def _get_invisible(self): ...
    def _set_icon(self, value): ...
    def _get_icon(self): ...
    def _set_max(self, value): ...
    def _get_max(self): ...
    def _set_overlap(self, value): ...
    def _get_overlap(self): ...
    def _set_key(self, value): ...
    def _get_key(self): ...
    def _set_showZero(self, value): ...
    def _get_showZero(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_variant(self, value): ...
    def _get_variant(self): ...
    def _set_text(self, value): ...
    def _get_text(self): ...
    def _init_ui(self): ...
    def retranslateUi(self): ...
    def _get_variant_icon(self, variant): ...
    def _get_variant_color(self, variant): ...
    def _set_stylesheet(self, component_styled): ...
    def paintEvent(self, event): ...