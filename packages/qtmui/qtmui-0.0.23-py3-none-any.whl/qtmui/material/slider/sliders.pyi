from typing import Optional, Union, Callable
from .qtrangeslider._labeled import QRangeSlider, QDoubleSlider, QDoubleRangeSlider, QLabeledSlider, QLabeledRangeSlider, QLabeledDoubleSlider, QLabeledDoubleRangeSlider
from qtpy.QtCore import Qt
from qtmui.material.styles import useTheme
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
class RangeSlider:
    def __init__(self, orientation: str, onChange: Callable, value): ...
class MultiHandleRangeSlider:
    def __init__(self, orientation: str, onChange: Callable, min: int, max: int, value): ...
class DoubleSlider:
    def __init__(self, orientation: str, onChange: Callable, min: int, max: int, value: float): ...
class DoubleRangeSlider:
    def __init__(self, orientation: str, onChange: Callable, max: int, value): ...
class LabeledSlider:
    def __init__(self, orientation: str, onChange: Callable, min: int, max: int, value: int): ...
class LabeledRangeSlider:
    def __init__(self, orientation: str, onChange: Callable, value): ...
class LabeledDoubleSlider:
    def __init__(self, orientation: str, onChange: Callable, min: int, max: int, value: float, singleStep: Optional[Union[int, float]]): ...
class LabeledDoubleRangeSlider:
    def __init__(self, orientation: str, onChange: Callable, min: int, max: int, value, singleStep: Optional[Union[int, float]]): ...