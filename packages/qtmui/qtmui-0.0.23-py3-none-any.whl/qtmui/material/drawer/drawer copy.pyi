from typing import Optional, Union, Dict, Callable, List
import uuid
from qtpy.QtWidgets import QVBoxLayout, QWidget, QApplication, QFrame
from qtpy.QtCore import Qt, QPoint, QEvent
from qtpy.QtGui import QKeyEvent
from ..button import Button
from ..typography import Typography
from ..stack import Stack
from qtmui.material.styles import useTheme
from qtmui.i18n.use_translation import translate, i18n
from qtmui.hooks import State
from qtmui.material.styles.create_theme.components.get_qss_styles import get_qss_style
from ..system.color_manipulator import alpha
from ..._____assets import ASSETS
from ..utils.validate_params import _validate_param
class Drawer:
    def __init__(self, parent: Optional[QWidget], title: Union[State, str], anchor: Union[State, str], anchorEl: Optional[Union[State, QWidget]], children: Optional[Union[State, QWidget, List[QWidget]]], classes: Optional[Union[State, Dict]], elevation: Union[State, int], hideBackdrop: Union[State, bool], ModalProps: Optional[Union[State, Dict]], onClose: Optional[Union[State, Callable]], open: Union[State, bool], PaperProps: Optional[Union[State, Dict]], SlideProps: Optional[Union[State, Dict]], slotProps: Optional[Union[State, Dict]], slots: Optional[Union[State, Dict]], sx: Optional[Union[State, Dict, Callable, str]], transitionDuration: Optional[Union[State, int, Dict]], variant: Optional[Union[State, str]], min_width: Union[State, int], max_width: Union[State, int], min_height: Union[State, int], max_height: Union[State, int], *args, **kwargs): ...
    def _set_title(self, value): ...
    def _get_title(self): ...
    def _set_anchor(self, value): ...
    def _get_anchor(self): ...
    def _set_anchorEl(self, value): ...
    def _get_anchorEl(self): ...
    def _set_children(self, value): ...
    def _get_children(self): ...
    def _set_classes(self, value): ...
    def _get_classes(self): ...
    def _set_elevation(self, value): ...
    def _get_elevation(self): ...
    def _set_hideBackdrop(self, value): ...
    def _get_hideBackdrop(self): ...
    def _set_ModalProps(self, value): ...
    def _get_ModalProps(self): ...
    def _set_onClose(self, value): ...
    def _get_onClose(self): ...
    def _set_open(self, value): ...
    def _get_open(self): ...
    def _set_PaperProps(self, value): ...
    def _get_PaperProps(self): ...
    def _set_SlideProps(self, value): ...
    def _get_SlideProps(self): ...
    def _set_slotProps(self, value): ...
    def _get_slotProps(self): ...
    def _set_slots(self, value): ...
    def _get_slots(self): ...
    def _set_sx(self, value): ...
    def _get_sx(self): ...
    def _set_transitionDuration(self, value): ...
    def _get_transitionDuration(self): ...
    def _set_variant(self, value): ...
    def _get_variant(self): ...
    def _set_min_width(self, value): ...
    def _get_min_width(self): ...
    def _set_max_width(self, value): ...
    def _get_max_width(self): ...
    def _set_min_height(self, value): ...
    def _get_min_height(self): ...
    def _set_max_height(self, value): ...
    def _get_max_height(self): ...
    def _init_ui(self): ...
    def _set_stylesheet(self): ...
    def reTranslation(self): ...
    def add_grip(self): ...
    def start_resize(self, event): ...
    def do_resize_method_set_geo(self, event): ...
    def do_resize(self, event): ...
    def _show(self, state: bool): ...
    def _close(self): ...
    def showDrawer(self): ...
    def update_position(self): ...
    def update_grip(self): ...
    def resizeEvent(self, event): ...
    def eventFilter(self, source, event): ...