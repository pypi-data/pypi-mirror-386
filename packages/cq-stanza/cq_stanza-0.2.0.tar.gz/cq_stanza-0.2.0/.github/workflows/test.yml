name: CI/CD Tests

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize

env: 
  UV_SYSTEM_PYTHON: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements.txt
            pyproject.toml

      - name: Install Dependencies
        run: uv pip install -r requirements-test.txt

      - name: Install Pydantic v2
        run: uv pip install --upgrade "pydantic>=2.0.2,<3.0.0"
      
      - name: Lint
        run: bash scripts/lint.sh

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.13"
          - "3.12"
          - "3.11"
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true
          cache-dependency-glob: |
            requirements.txt
            pyproject.toml

      - name: Install Dependencies
        run: uv pip install -r requirements-test.txt

      - name: Create coverage directory
        run: mkdir -p coverage

      - name: Test
        run: bash scripts/test.sh
        env:
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}
          QM_SAAS_EMAIL: ${{ secrets.QM_SAAS_EMAIL }}
          QM_SAAS_PASSWORD: ${{ secrets.QM_SAAS_PASSWORD }}

      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage
          include-hidden-files: true

  coverage:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.4.15"
          enable-cache: true

      - name: Install coverage
        run: uv pip install coverage[toml]

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Combine coverage
        run: coverage combine coverage

      - name: Generate XML coverage report
        run: coverage xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml