[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "axm-agent"
version = "0.1.2"
description = "A simple, elegant Python framework for building AI agents with decorators, MCP support, and powerful utilities"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "ai",
    "agent",
    "llm",
    "mcp",
    "function-calling",
    "openai",
    "anthropic",
    "langchain",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.20.0"]
all = [
    "openai>=1.0.0",
    "anthropic>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/AIxMath/axm-agent"
Documentation = "https://github.com/AIxMath/axm-agent#readme"
Repository = "https://github.com/AIxMath/axm-agent"
Issues = "https://github.com/AIxMath/axm-agent/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["axm*"]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
