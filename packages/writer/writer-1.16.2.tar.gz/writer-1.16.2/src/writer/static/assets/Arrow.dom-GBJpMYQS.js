import{A as g,C as S,E as y,_ as d,G as v,m as _,H as M,R as B,J as D,K as w,M as O,O as T,P as p,Q as R,W as z,X as I,Y as F,Z as U,$ as k,a0 as W,a1 as j,a2 as A,a3 as q,a4 as x,a5 as N,a6 as L}from"./serialization-DJC7NP0N.js";import{aP as K,aL as X,aM as Z,u as $,aV as ee,B as ae,aW as ie,ae as te,aK as se,D as re,a as ne,aX as le,t as ue,aY as de,s as oe,aZ as ce,a7 as he,aj as be,aq as me,a_ as fe,at as ye,bC as Be,r as ge,a$ as Se,aw as ve,b9 as _e,az as Me,bc as De,ay as we,bb as Oe,aA as Te,bd as pe,ax as Re,ba as ze,v as Ie,ai as Fe,b0 as Ue,w as ke,b1 as We,ah as je,q as Ae,b3 as qe,p as xe,b4 as Ne,F as Le,b5 as Ve,b2 as Ce,ag as He,n as Je,bg as Pe,l as Ee,bh as Ye,k as Qe,bi as Ge,o as Ke,bf as Xe,be as Ze,av as $e,b6 as ea,j as aa,b7 as ia,a8 as ta,I as sa,b8 as ra,aQ as na,L as la,bn as ua,bo as da,aC as oa,aB as ca,aR as ha,a9 as ba,aO as ma,aa as fa,N as ya,bp as Ba,ab as ga,aS as Sa,aN as va,aF as _a,au as Ma,bD as Da,S as wa,bq as Oa,ar as Ta,x as pa,ap as Ra,bw as za,i as Ia,bz as Fa,h as Ua,by as ka,g as Wa,bA as ja,f as Aa,bx as qa,ac as xa,ak as Na,br as La,an as Va,bu as Ca,am as Ha,bt as Ja,ao as Pa,bv as Ea,al as Ya,bs as Qa,T as Ga,d as Ka,bk as Xa,c as Za,bl as $a,b as ei,bm as ai,e as ii,bj as ti,as as si,bB as ri,ad as ni,U as li,bE as ui,V as di,aG as oi,aU as ci,aT as hi,af as bi,aD as mi,aH as fi,aE as yi,y as Bi,aJ as gi,z as Si,aI as vi}from"./serialization-DJC7NP0N.js";function V(t,e){if(g(t))return H(t,e);if(S(t))return C(t,e);throw new Error("toDOMStream() must be called with an Iterable or AsyncIterable")}function C(t,e){let a=null;const n=(e==null?void 0:e.type)==="bytes"||!1,o=(e==null?void 0:e.highWaterMark)||Math.pow(2,24);return new ReadableStream(Object.assign(Object.assign({},e),{start(i){c(i,a||(a=t[Symbol.iterator]()))},pull(i){a?c(i,a):i.close()},cancel(){(a!=null&&a.return&&a.return()||!0)&&(a=null)}}),Object.assign({highWaterMark:n?o:void 0},e));function c(i,r){let s,u=null,l=i.desiredSize||null;for(;!(u=r.next(n?l:null)).done;)if(ArrayBuffer.isView(u.value)&&(s=y(u.value))&&(l!=null&&n&&(l=l-s.byteLength+1),u.value=s),i.enqueue(u.value),l!=null&&--l<=0)return;i.close()}}function H(t,e){let a=null;const n=(e==null?void 0:e.type)==="bytes"||!1,o=(e==null?void 0:e.highWaterMark)||Math.pow(2,24);return new ReadableStream(Object.assign(Object.assign({},e),{start(i){return d(this,void 0,void 0,function*(){yield c(i,a||(a=t[Symbol.asyncIterator]()))})},pull(i){return d(this,void 0,void 0,function*(){a?yield c(i,a):i.close()})},cancel(){return d(this,void 0,void 0,function*(){(a!=null&&a.return&&(yield a.return())||!0)&&(a=null)})}}),Object.assign({highWaterMark:n?o:void 0},e));function c(i,r){return d(this,void 0,void 0,function*(){let s,u=null,l=i.desiredSize||null;for(;!(u=yield r.next(n?l:null)).done;)if(ArrayBuffer.isView(u.value)&&(s=y(u.value))&&(l!=null&&n&&(l=l-s.byteLength+1),u.value=s),i.enqueue(u.value),l!=null&&--l<=0)return;i.close()})}}function J(t){return new P(t)}class P{constructor(e){this._numChunks=0,this._finished=!1,this._bufferedSize=0;const{["readableStrategy"]:a,["writableStrategy"]:n,["queueingStrategy"]:o="count"}=e,c=v(e,["readableStrategy","writableStrategy","queueingStrategy"]);this._controller=null,this._builder=_(c),this._getSize=o!=="bytes"?m:f;const{["highWaterMark"]:i=o==="bytes"?Math.pow(2,14):1e3}=Object.assign({},a),{["highWaterMark"]:r=o==="bytes"?Math.pow(2,14):1e3}=Object.assign({},n);this.readable=new ReadableStream({cancel:()=>{this._builder.clear()},pull:s=>{this._maybeFlush(this._builder,this._controller=s)},start:s=>{this._maybeFlush(this._builder,this._controller=s)}},{highWaterMark:i,size:o!=="bytes"?m:f}),this.writable=new WritableStream({abort:()=>{this._builder.clear()},write:()=>{this._maybeFlush(this._builder,this._controller)},close:()=>{this._maybeFlush(this._builder.finish(),this._controller)}},{highWaterMark:r,size:s=>this._writeValueAndReturnChunkSize(s)})}_writeValueAndReturnChunkSize(e){const a=this._bufferedSize;return this._bufferedSize=this._getSize(this._builder.append(e)),this._bufferedSize-a}_maybeFlush(e,a){a!=null&&(this._bufferedSize>=a.desiredSize&&++this._numChunks&&this._enqueue(a,e.toVector()),e.finished&&((e.length>0||this._numChunks===0)&&++this._numChunks&&this._enqueue(a,e.toVector()),!this._finished&&(this._finished=!0)&&this._enqueue(a,null)))}_enqueue(e,a){this._bufferedSize=0,this._controller=null,a==null?e.close():e.enqueue(a)}}const m=t=>{var e;return(e=t==null?void 0:t.length)!==null&&e!==void 0?e:0},f=t=>{var e;return(e=t==null?void 0:t.byteLength)!==null&&e!==void 0?e:0};function h(t,e){const a=new M;let n=null;const o=new ReadableStream({cancel(){return d(this,void 0,void 0,function*(){yield a.close()})},start(r){return d(this,void 0,void 0,function*(){yield i(r,n||(n=yield c()))})},pull(r){return d(this,void 0,void 0,function*(){n?yield i(r,n):r.close()})}});return{writable:new WritableStream(a,Object.assign({highWaterMark:Math.pow(2,14)},t)),readable:o};function c(){return d(this,void 0,void 0,function*(){return yield(yield B.from(a)).open(e)})}function i(r,s){return d(this,void 0,void 0,function*(){let u=r.desiredSize,l=null;for(;!(l=yield s.next()).done;)if(r.enqueue(l.value),u!=null&&--u<=0)return;r.close()})}}function b(t,e){const a=new this(t),n=new D(a),o=new ReadableStream({cancel(){return d(this,void 0,void 0,function*(){yield n.cancel()})},pull(i){return d(this,void 0,void 0,function*(){yield c(i)})},start(i){return d(this,void 0,void 0,function*(){yield c(i)})}},Object.assign({highWaterMark:Math.pow(2,14)},e));return{writable:new WritableStream(a,t),readable:o};function c(i){return d(this,void 0,void 0,function*(){let r=null,s=i.desiredSize;for(;r=yield n.read(s||null);)if(i.enqueue(r),s!=null&&(s-=r.byteLength)<=0)return;i.close()})}}const Y=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},w),O),T),p),R),z),I),{compareSchemas:F,compareFields:U,compareTypes:k});W.toDOMStream=V;j.throughDOM=J;B.throughDOM=h;A.throughDOM=h;q.throughDOM=h;x.throughDOM=b;N.throughDOM=b;L.throughDOM=b;export{M as AsyncByteQueue,D as AsyncByteStream,K as AsyncMessageReader,X as AsyncRecordBatchFileReader,Z as AsyncRecordBatchStreamReader,$ as Binary,ee as BinaryBuilder,ae as Bool,ie as BoolBuilder,te as BufferType,j as Builder,se as ByteStream,re as Data,ne as DataType,le as DateBuilder,ue as DateDay,de as DateDayBuilder,oe as DateMillisecond,ce as DateMillisecondBuilder,he as DateUnit,be as Date_,me as Decimal,fe as DecimalBuilder,ye as DenseUnion,Be as DenseUnionBuilder,ge as Dictionary,Se as DictionaryBuilder,ve as Duration,_e as DurationBuilder,Me as DurationMicrosecond,De as DurationMicrosecondBuilder,we as DurationMillisecond,Oe as DurationMillisecondBuilder,Te as DurationNanosecond,pe as DurationNanosecondBuilder,Re as DurationSecond,ze as DurationSecondBuilder,Ie as Field,Fe as FixedSizeBinary,Ue as FixedSizeBinaryBuilder,ke as FixedSizeList,We as FixedSizeListBuilder,je as Float,Ae as Float16,qe as Float16Builder,xe as Float32,Ne as Float32Builder,Le as Float64,Ve as Float64Builder,Ce as FloatBuilder,He as Int,Je as Int16,Pe as Int16Builder,Ee as Int32,Ye as Int32Builder,Qe as Int64,Ge as Int64Builder,Ke as Int8,Xe as Int8Builder,Ze as IntBuilder,$e as Interval,ea as IntervalBuilder,aa as IntervalDayTime,ia as IntervalDayTimeBuilder,ta as IntervalUnit,sa as IntervalYearMonth,ra as IntervalYearMonthBuilder,na as JSONMessageReader,la as List,ua as ListBuilder,da as MapBuilder,oa as MapRow,ca as Map_,ha as Message,ba as MessageHeader,ma as MessageReader,fa as MetadataVersion,ya as Null,Ba as NullBuilder,ga as Precision,Sa as RecordBatch,A as RecordBatchFileReader,N as RecordBatchFileWriter,va as RecordBatchJSONWriter,B as RecordBatchReader,q as RecordBatchStreamReader,L as RecordBatchStreamWriter,x as RecordBatchWriter,_a as Schema,Ma as SparseUnion,Da as SparseUnionBuilder,wa as Struct,Oa as StructBuilder,Ta as StructRow,pa as Table,Ra as Time,za as TimeBuilder,Ia as TimeMicrosecond,Fa as TimeMicrosecondBuilder,Ua as TimeMillisecond,ka as TimeMillisecondBuilder,Wa as TimeNanosecond,ja as TimeNanosecondBuilder,Aa as TimeSecond,qa as TimeSecondBuilder,xa as TimeUnit,Na as Timestamp,La as TimestampBuilder,Va as TimestampMicrosecond,Ca as TimestampMicrosecondBuilder,Ha as TimestampMillisecond,Ja as TimestampMillisecondBuilder,Pa as TimestampNanosecond,Ea as TimestampNanosecondBuilder,Ya as TimestampSecond,Qa as TimestampSecondBuilder,Ga as Type,Ka as Uint16,Xa as Uint16Builder,Za as Uint32,$a as Uint32Builder,ei as Uint64,ai as Uint64Builder,ii as Uint8,ti as Uint8Builder,si as Union,ri as UnionBuilder,ni as UnionMode,li as Utf8,ui as Utf8Builder,di as Vector,oi as Visitor,ci as builderThroughAsyncIterable,hi as builderThroughIterable,_ as makeBuilder,bi as makeData,mi as makeTable,fi as makeVector,yi as tableFromArrays,Bi as tableFromIPC,gi as tableFromJSON,Si as tableToIPC,Y as util,vi as vectorFromArray};
