[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "krl-data-connectors"
version = "0.3.3"
description = "Production-ready data connectors for 52 government and research data sources with 2,098 automated tests"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "KR-Labs Foundation", email = "dev@krlabs.dev"}
]
maintainers = [
    {name = "KR-Labs Foundation", email = "dev@krlabs.dev"}
]
keywords = [
    "economics",
    "data",
    "api",
    "fred",
    "census",
    "bls",
    "world-bank",
    "oecd",
    "connectors",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "krl-core>=0.1.1",
    "requests>=2.28.0",
    "pandas>=1.5.0",
    "numpy>=1.23.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ruff>=0.1.8",
]
test = [
    "pytest>=7.2.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "pytest-timeout>=2.2.0",
    "pytest-randomly>=3.15.0",
    "pytest-benchmark>=4.0.0",
    "responses>=0.23.0",
    "requests-mock>=1.11.0",
    "hypothesis>=6.92.0",
]
security = [
    "bandit[toml]>=1.7.5",
    "safety>=3.0.0",
    "pip-audit>=2.6.0",
]
performance = [
    "locust>=2.20.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.61.0",
]
mutation = [
    "mutmut>=2.4.0",
]
e2e = [
    "playwright>=1.40.0",
    "pytest-playwright>=0.4.0",
]
contract = [
    "pydantic>=2.5.0",
    "schemathesis>=3.27.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
]
all = [
    "krl-data-connectors[dev,test,security,performance,mutation,e2e,contract,docs]",
]

[project.urls]
Homepage = "https://krlabs.dev"
Documentation = "https://docs.krlabs.dev/data-connectors"
Repository = "https://github.com/KR-Labs/krl-data-connectors"
"Bug Tracker" = "https://github.com/KR-Labs/krl-data-connectors/issues"
Changelog = "https://github.com/KR-Labs/krl-data-connectors/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (medium speed, external dependencies)",
    "e2e: End-to-end tests (slow, full workflows)",
    "performance: Performance and load tests",
    "security: Security-focused tests (injection, XSS, etc.)",
    "slow: Tests that take >1 second",
    "fast: Tests that take <100ms",
]
timeout = 300
timeout_method = "thread"
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]
