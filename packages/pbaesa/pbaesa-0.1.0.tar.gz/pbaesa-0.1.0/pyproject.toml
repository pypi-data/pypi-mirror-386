[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pbaesa"
authors = [
  { name="Jan Hartmann", email="jan.hartmann@ltt.rwth-aachen.de" }
]
maintainers = [
  { name="Jan Hartmann", email="jan.hartmann@ltt.rwth-aachen.de" }
]
description = "Planetary-boundary-based Absolute Environmental Sustainability Assessment"
readme = "README.md"
dynamic = ["version"]
# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering"
]
requires-python = ">=3.9"
dependencies = [
    "pandas>=1.3.0",
    "openpyxl>=3.0.0",
    "bw2data>=4.0.0",
    "bw2calc>=2.0.0",
    "pymrio",
]

[project.urls]
source = "https://github.com/RWTH-LTT/pbaesa"
homepage = "https://github.com/RWTH-LTT/pbaesa"
tracker = "https://github.com/RWTH-LTT/pbaesa/issues"

[project.optional-dependencies]
# Getting recursive dependencies to work is a pain, this
# seems to work, at least for now
testing = [
    "pbaesa",
    "pytest",
    "pytest-cov",
    "python-coveralls"
]
dev = [
    "build",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "pytest-randomly",
    "setuptools",
]

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = true
packages = ["pbaesa", "pbaesa.data"]

[tool.setuptools.dynamic]
version = {attr = "pbaesa.__version__"}

[tool.pytest.ini_options]
addopts = "--cov pbaesa --cov-report term-missing --verbose"
norecursedirs = [
    "dist",
    "build",
    ".tox"
]
testpaths = ["tests/*.py"]

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = ["E203", "W503"]
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py",
]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
