"""
    Emil PublicAPI

    The Emil Public API description  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from eis.publicapi.api_client import ApiClient, Endpoint as _Endpoint
from eis.publicapi.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from eis.publicapi.model.filter_named_range_response_class import FilterNamedRangeResponseClass


class NamedRangesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.filter_named_range_endpoint = _Endpoint(
            settings={
                'response_type': (FilterNamedRangeResponseClass,),
                'auth': [
                    'bearer'
                ],
                'endpoint_path': '/publicapi/v1/named-ranges/records',
                'operation_id': 'filter_named_range',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'product_slug',
                    'name',
                    'authorization',
                    'product_version_id',
                    'page_size',
                    'page_token',
                    'filters',
                    'search',
                    'order',
                ],
                'required': [
                    'product_slug',
                    'name',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                    'page_size',
                ]
            },
            root_map={
                'validations': {
                    ('page_size',): {

                        'inclusive_maximum': 50,
                        'inclusive_minimum': 1,
                    },
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'product_slug':
                        (str,),
                    'name':
                        (str,),
                    'authorization':
                        (str,),
                    'product_version_id':
                        (float,),
                    'page_size':
                        (float,),
                    'page_token':
                        (str,),
                    'filters':
                        (str,),
                    'search':
                        (str,),
                    'order':
                        (str,),
                },
                'attribute_map': {
                    'product_slug': 'productSlug',
                    'name': 'name',
                    'authorization': 'Authorization',
                    'product_version_id': 'productVersionId',
                    'page_size': 'pageSize',
                    'page_token': 'pageToken',
                    'filters': 'filters',
                    'search': 'search',
                    'order': 'order',
                },
                'location_map': {
                    'product_slug': 'query',
                    'name': 'query',
                    'authorization': 'header',
                    'product_version_id': 'query',
                    'page_size': 'query',
                    'page_token': 'query',
                    'filters': 'query',
                    'search': 'query',
                    'order': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def filter_named_range(
        self,
        product_slug,
        name,
        **kwargs
    ):
        """List named range file records  # noqa: E501

        Returns a list of named range file records you have previously created.        The named range file records are returned in sorted order, with the oldest one appearing first.        For more information about pagination, read the Pagination documentation.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.filter_named_range(product_slug, name, async_req=True)
        >>> result = thread.get()

        Args:
            product_slug (str): A slug is a human-readable, unique identifier, used to identify a resource     instead of a less human-readable identifier like an id.
            name (str): Name of Named Range.

        Keyword Args:
            authorization (str): Bearer Token. [optional]
            product_version_id (float): The product version id of the product version to be used for the lead.     The product version id will be validated if the 'validate' flag is set to true.. [optional]
            page_size (float): A limit on the number of objects to be returned.     Limit ranges between 1 and 50. Default: 10.. [optional]
            page_token (str): A cursor for use in pagination.     pageToken is an ID that defines your place in the list.     For instance, if you make a list request and receive 100 objects and pageToken=1,     your subsequent call can include pageToken=2 in order to fetch the next page of the list.. [optional]
            filters (str): Filter the response by one or multiple fields.     In general, fetching filtered responses will conserve bandwidth and reduce response time.. [optional]
            search (str): Search the list by any field.. [optional]
            order (str): The order parameter determines how the results should be sorted according to a specified field.     It functions similarly to an SQL ORDER BY.     Sorting can be performed in either ascending (ASC) or descending (DESC) order.     Default: ASC.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            FilterNamedRangeResponseClass
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['product_slug'] = \
            product_slug
        kwargs['name'] = \
            name
        return self.filter_named_range_endpoint.call_with_http_info(**kwargs)

