# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulpcore.models.status_response import StatusResponse

class TestStatusResponse(unittest.TestCase):
    """StatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StatusResponse:
        """Test StatusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StatusResponse`
        """
        model = StatusResponse()
        if include_optional:
            return StatusResponse(
                versions = [
                    pulpcore.client.pulpcore.models.version_response.VersionResponse(
                        component = '', 
                        version = '', 
                        package = '', 
                        module = '', 
                        domain_compatible = True, )
                    ],
                online_workers = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                online_api_apps = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                online_content_apps = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                database_connection = pulpcore.client.pulpcore.models.database_connection_response.DatabaseConnectionResponse(
                    connected = True, ),
                redis_connection = pulpcore.client.pulpcore.models.redis_connection_response.RedisConnectionResponse(
                    connected = True, ),
                storage = pulpcore.client.pulpcore.models.storage_response.StorageResponse(
                    total = 0, 
                    used = 0, 
                    free = 0, ),
                content_settings = pulpcore.client.pulpcore.models.content_settings_response.ContentSettingsResponse(
                    content_origin = '', 
                    content_path_prefix = '', ),
                domain_enabled = True
            )
        else:
            return StatusResponse(
                versions = [
                    pulpcore.client.pulpcore.models.version_response.VersionResponse(
                        component = '', 
                        version = '', 
                        package = '', 
                        module = '', 
                        domain_compatible = True, )
                    ],
                online_workers = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                online_api_apps = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                online_content_apps = [
                    pulpcore.client.pulpcore.models.app_status_response.AppStatusResponse(
                        name = '', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        versions = {
                            'key' : ''
                            }, )
                    ],
                database_connection = pulpcore.client.pulpcore.models.database_connection_response.DatabaseConnectionResponse(
                    connected = True, ),
                content_settings = pulpcore.client.pulpcore.models.content_settings_response.ContentSettingsResponse(
                    content_origin = '', 
                    content_path_prefix = '', ),
                domain_enabled = True,
        )
        """

    def testStatusResponse(self):
        """Test StatusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
