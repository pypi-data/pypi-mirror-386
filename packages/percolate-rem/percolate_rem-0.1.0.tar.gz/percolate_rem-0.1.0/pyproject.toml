[project]
name = "percolate-rem"
dynamic = ["version"]
description = "REM (Resources-Entities-Moments) memory system for Percolate - privacy-first personal AI infrastructure"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Percolation Labs", email = "hello@percolate.dev" }
]
keywords = ["ai", "agent", "memory", "privacy", "personal", "rem", "knowledge-base", "vector-db"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Database",
]

dependencies = [
    # Web framework
    "fastapi>=0.115.5",
    "uvicorn[standard]>=0.34.0",
    "python-multipart>=0.0.20",

    # Agent framework
    "pydantic>=2.10.5",
    "pydantic-settings>=2.7.1",
    "pydantic-ai>=0.0.15",

    # MCP
    "fastmcp>=0.5.0",

    # Authentication & Crypto
    "pyjwt[crypto]>=2.10.1",
    "cryptography>=44.0.0",

    # Database & storage
    "asyncpg>=0.30.0",
    "redis>=5.2.1",

    # CLI
    "typer>=0.15.1",
    "rich>=13.9.4",

    # Observability
    "opentelemetry-api>=1.29.0",
    "opentelemetry-sdk>=1.29.0",
    "opentelemetry-instrumentation-fastapi>=0.50b0",
    "opentelemetry-instrumentation-logging>=0.50b0",
    "opentelemetry-exporter-otlp>=1.29.0",
    "loguru>=0.7.3",

    # Utilities
    "httpx>=0.28.1",
    "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "black>=24.10.0",
    "ruff>=0.8.5",
    "mypy>=1.14.0",
    "types-redis>=4.6.0",
    "ipython>=8.31.0",
]

[project.scripts]
percolate = "percolate.cli.main:app"

[project.urls]
Homepage = "https://github.com/percolation-labs/percolate"
Documentation = "https://docs.percolate.dev"
Repository = "https://github.com/percolation-labs/percolate"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/percolate/version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/percolate"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["src"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]
