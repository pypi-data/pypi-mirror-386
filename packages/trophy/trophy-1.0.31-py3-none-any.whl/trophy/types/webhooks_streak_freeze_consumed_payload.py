# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .user import User


class WebhooksStreakFreezeConsumedPayload(UniversalBaseModel):
    type: typing.Literal["streak.freeze_consumed"] = pydantic.Field(default="streak.freeze_consumed")
    """
    The webhook event type.
    """

    user: User = pydantic.Field()
    """
    The user whose streak freeze was consumed.
    """

    consumed: int = pydantic.Field()
    """
    The number of freezes consumed.
    """

    freezes: int = pydantic.Field()
    """
    The total number of freezes the user has left after the consumption.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
