# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from .base_streak_response import BaseStreakResponse
from .streak_response_streak_history_item import StreakResponseStreakHistoryItem


class StreakResponse(BaseStreakResponse):
    """
    An object representing the user's streak.
    """

    streak_history: typing_extensions.Annotated[
        typing.Optional[typing.List[StreakResponseStreakHistoryItem]], FieldMetadata(alias="streakHistory")
    ] = pydantic.Field(default=None)
    """
    A list of the user's past streak periods up through the current period. Each period includes the start and end dates and the length of the streak.
    """

    rank: typing.Optional[int] = pydantic.Field(default=None)
    """
    The user's rank across all users. Null if the user has no active streak.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
