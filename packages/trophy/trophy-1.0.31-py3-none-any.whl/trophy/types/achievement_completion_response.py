# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .achievement_completion_response_achievement import AchievementCompletionResponseAchievement
from .metric_event_points_response import MetricEventPointsResponse


class AchievementCompletionResponse(UniversalBaseModel):
    completion_id: typing_extensions.Annotated[str, FieldMetadata(alias="completionId")] = pydantic.Field()
    """
    The unique ID of the completion.
    """

    achievement: AchievementCompletionResponseAchievement
    points: typing.Dict[str, MetricEventPointsResponse] = pydantic.Field()
    """
    A map of points systems by key that were affected by this achievement completion.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
