# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .raw_client import AsyncRawAdminClient, RawAdminClient

if typing.TYPE_CHECKING:
    from .streaks.client import AsyncStreaksClient, StreaksClient


class AdminClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawAdminClient(client_wrapper=client_wrapper)
        self._client_wrapper = client_wrapper
        self._streaks: typing.Optional[StreaksClient] = None

    @property
    def with_raw_response(self) -> RawAdminClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawAdminClient
        """
        return self._raw_client

    @property
    def streaks(self):
        if self._streaks is None:
            from .streaks.client import StreaksClient  # noqa: E402

            self._streaks = StreaksClient(client_wrapper=self._client_wrapper)
        return self._streaks


class AsyncAdminClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawAdminClient(client_wrapper=client_wrapper)
        self._client_wrapper = client_wrapper
        self._streaks: typing.Optional[AsyncStreaksClient] = None

    @property
    def with_raw_response(self) -> AsyncRawAdminClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawAdminClient
        """
        return self._raw_client

    @property
    def streaks(self):
        if self._streaks is None:
            from .streaks.client import AsyncStreaksClient  # noqa: E402

            self._streaks = AsyncStreaksClient(client_wrapper=self._client_wrapper)
        return self._streaks
