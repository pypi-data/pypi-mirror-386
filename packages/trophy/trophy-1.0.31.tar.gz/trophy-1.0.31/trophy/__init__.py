# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .types import (
        AchievementCompletionResponse,
        AchievementCompletionResponseAchievement,
        AchievementResponse,
        AchievementResponseTrigger,
        AchievementWithStatsResponse,
        AchievementWithStatsResponseEventAttribute,
        AchievementWithStatsResponseUserAttributesItem,
        BaseStreakResponse,
        BulkInsertIssue,
        BulkInsertIssueLevel,
        BulkStreakResponse,
        BulkStreakResponseItem,
        CompletedAchievementResponse,
        CreateStreakFreezesResponse,
        ErrorBody,
        EventResponse,
        GetUserPointsResponse,
        LeaderboardEvent,
        LeaderboardRanking,
        LeaderboardResponse,
        LeaderboardResponseRankBy,
        LeaderboardResponseRunUnit,
        LeaderboardResponseWithRankings,
        LeaderboardResponseWithRankingsStatus,
        MetricEventLeaderboardResponse,
        MetricEventPointsResponse,
        MetricEventStreakResponse,
        MetricResponse,
        MetricStatus,
        PointsAward,
        PointsRange,
        PointsSummaryResponse,
        PointsSystemResponse,
        PointsTrigger,
        PointsTriggerResponse,
        PointsTriggerResponseEventAttribute,
        PointsTriggerResponseStatus,
        PointsTriggerResponseTimeUnit,
        PointsTriggerResponseType,
        PointsTriggerResponseUserAttributesItem,
        PointsTriggerTimeUnit,
        PointsTriggerType,
        StreakFrequency,
        StreakRankingUser,
        StreakResponse,
        StreakResponseStreakHistoryItem,
        UpdatedUser,
        UpsertedUser,
        User,
        UserLeaderboardResponse,
        UserLeaderboardResponseWithHistory,
        WebhookUserLeaderboardResponse,
        WebhooksAchievementCompletedPayload,
        WebhooksLeaderboardChangedPayload,
        WebhooksLeaderboardFinishedPayload,
        WebhooksLeaderboardRankChangedPayload,
        WebhooksLeaderboardStartedPayload,
        WebhooksPointsChangedPayload,
        WebhooksStreakExtendedPayload,
        WebhooksStreakFreezeConsumedPayload,
        WebhooksStreakFreezeEarnedPayload,
        WebhooksStreakLostPayload,
        WebhooksStreakStartedPayload,
    )
    from .errors import BadRequestError, NotFoundError, UnauthorizedError, UnprocessableEntityError
    from . import achievements, admin, leaderboards, metrics, points, streaks, users
    from .client import AsyncTrophyApi, TrophyApi
    from .environment import TrophyApiEnvironment
    from .leaderboards import LeaderboardsAllResponseItem, LeaderboardsAllResponseItemStatus
    from .streaks import StreaksRankingsRequestType
    from .users import (
        UsersMetricEventSummaryRequestAggregation,
        UsersMetricEventSummaryResponseItem,
        UsersPointsEventSummaryRequestAggregation,
        UsersPointsEventSummaryResponseItem,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "AchievementCompletionResponse": ".types",
    "AchievementCompletionResponseAchievement": ".types",
    "AchievementResponse": ".types",
    "AchievementResponseTrigger": ".types",
    "AchievementWithStatsResponse": ".types",
    "AchievementWithStatsResponseEventAttribute": ".types",
    "AchievementWithStatsResponseUserAttributesItem": ".types",
    "AsyncTrophyApi": ".client",
    "BadRequestError": ".errors",
    "BaseStreakResponse": ".types",
    "BulkInsertIssue": ".types",
    "BulkInsertIssueLevel": ".types",
    "BulkStreakResponse": ".types",
    "BulkStreakResponseItem": ".types",
    "CompletedAchievementResponse": ".types",
    "CreateStreakFreezesResponse": ".types",
    "ErrorBody": ".types",
    "EventResponse": ".types",
    "GetUserPointsResponse": ".types",
    "LeaderboardEvent": ".types",
    "LeaderboardRanking": ".types",
    "LeaderboardResponse": ".types",
    "LeaderboardResponseRankBy": ".types",
    "LeaderboardResponseRunUnit": ".types",
    "LeaderboardResponseWithRankings": ".types",
    "LeaderboardResponseWithRankingsStatus": ".types",
    "LeaderboardsAllResponseItem": ".leaderboards",
    "LeaderboardsAllResponseItemStatus": ".leaderboards",
    "MetricEventLeaderboardResponse": ".types",
    "MetricEventPointsResponse": ".types",
    "MetricEventStreakResponse": ".types",
    "MetricResponse": ".types",
    "MetricStatus": ".types",
    "NotFoundError": ".errors",
    "PointsAward": ".types",
    "PointsRange": ".types",
    "PointsSummaryResponse": ".types",
    "PointsSystemResponse": ".types",
    "PointsTrigger": ".types",
    "PointsTriggerResponse": ".types",
    "PointsTriggerResponseEventAttribute": ".types",
    "PointsTriggerResponseStatus": ".types",
    "PointsTriggerResponseTimeUnit": ".types",
    "PointsTriggerResponseType": ".types",
    "PointsTriggerResponseUserAttributesItem": ".types",
    "PointsTriggerTimeUnit": ".types",
    "PointsTriggerType": ".types",
    "StreakFrequency": ".types",
    "StreakRankingUser": ".types",
    "StreakResponse": ".types",
    "StreakResponseStreakHistoryItem": ".types",
    "StreaksRankingsRequestType": ".streaks",
    "TrophyApi": ".client",
    "TrophyApiEnvironment": ".environment",
    "UnauthorizedError": ".errors",
    "UnprocessableEntityError": ".errors",
    "UpdatedUser": ".types",
    "UpsertedUser": ".types",
    "User": ".types",
    "UserLeaderboardResponse": ".types",
    "UserLeaderboardResponseWithHistory": ".types",
    "UsersMetricEventSummaryRequestAggregation": ".users",
    "UsersMetricEventSummaryResponseItem": ".users",
    "UsersPointsEventSummaryRequestAggregation": ".users",
    "UsersPointsEventSummaryResponseItem": ".users",
    "WebhookUserLeaderboardResponse": ".types",
    "WebhooksAchievementCompletedPayload": ".types",
    "WebhooksLeaderboardChangedPayload": ".types",
    "WebhooksLeaderboardFinishedPayload": ".types",
    "WebhooksLeaderboardRankChangedPayload": ".types",
    "WebhooksLeaderboardStartedPayload": ".types",
    "WebhooksPointsChangedPayload": ".types",
    "WebhooksStreakExtendedPayload": ".types",
    "WebhooksStreakFreezeConsumedPayload": ".types",
    "WebhooksStreakFreezeEarnedPayload": ".types",
    "WebhooksStreakLostPayload": ".types",
    "WebhooksStreakStartedPayload": ".types",
    "achievements": ".achievements",
    "admin": ".admin",
    "leaderboards": ".leaderboards",
    "metrics": ".metrics",
    "points": ".points",
    "streaks": ".streaks",
    "users": ".users",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AchievementCompletionResponse",
    "AchievementCompletionResponseAchievement",
    "AchievementResponse",
    "AchievementResponseTrigger",
    "AchievementWithStatsResponse",
    "AchievementWithStatsResponseEventAttribute",
    "AchievementWithStatsResponseUserAttributesItem",
    "AsyncTrophyApi",
    "BadRequestError",
    "BaseStreakResponse",
    "BulkInsertIssue",
    "BulkInsertIssueLevel",
    "BulkStreakResponse",
    "BulkStreakResponseItem",
    "CompletedAchievementResponse",
    "CreateStreakFreezesResponse",
    "ErrorBody",
    "EventResponse",
    "GetUserPointsResponse",
    "LeaderboardEvent",
    "LeaderboardRanking",
    "LeaderboardResponse",
    "LeaderboardResponseRankBy",
    "LeaderboardResponseRunUnit",
    "LeaderboardResponseWithRankings",
    "LeaderboardResponseWithRankingsStatus",
    "LeaderboardsAllResponseItem",
    "LeaderboardsAllResponseItemStatus",
    "MetricEventLeaderboardResponse",
    "MetricEventPointsResponse",
    "MetricEventStreakResponse",
    "MetricResponse",
    "MetricStatus",
    "NotFoundError",
    "PointsAward",
    "PointsRange",
    "PointsSummaryResponse",
    "PointsSystemResponse",
    "PointsTrigger",
    "PointsTriggerResponse",
    "PointsTriggerResponseEventAttribute",
    "PointsTriggerResponseStatus",
    "PointsTriggerResponseTimeUnit",
    "PointsTriggerResponseType",
    "PointsTriggerResponseUserAttributesItem",
    "PointsTriggerTimeUnit",
    "PointsTriggerType",
    "StreakFrequency",
    "StreakRankingUser",
    "StreakResponse",
    "StreakResponseStreakHistoryItem",
    "StreaksRankingsRequestType",
    "TrophyApi",
    "TrophyApiEnvironment",
    "UnauthorizedError",
    "UnprocessableEntityError",
    "UpdatedUser",
    "UpsertedUser",
    "User",
    "UserLeaderboardResponse",
    "UserLeaderboardResponseWithHistory",
    "UsersMetricEventSummaryRequestAggregation",
    "UsersMetricEventSummaryResponseItem",
    "UsersPointsEventSummaryRequestAggregation",
    "UsersPointsEventSummaryResponseItem",
    "WebhookUserLeaderboardResponse",
    "WebhooksAchievementCompletedPayload",
    "WebhooksLeaderboardChangedPayload",
    "WebhooksLeaderboardFinishedPayload",
    "WebhooksLeaderboardRankChangedPayload",
    "WebhooksLeaderboardStartedPayload",
    "WebhooksPointsChangedPayload",
    "WebhooksStreakExtendedPayload",
    "WebhooksStreakFreezeConsumedPayload",
    "WebhooksStreakFreezeEarnedPayload",
    "WebhooksStreakLostPayload",
    "WebhooksStreakStartedPayload",
    "achievements",
    "admin",
    "leaderboards",
    "metrics",
    "points",
    "streaks",
    "users",
]
