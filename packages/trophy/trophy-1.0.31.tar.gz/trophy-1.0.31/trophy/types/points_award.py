# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .points_trigger import PointsTrigger


class PointsAward(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the trigger award
    """

    awarded: typing.Optional[int] = pydantic.Field(default=None)
    """
    The points awarded by this trigger
    """

    date: typing.Optional[str] = pydantic.Field(default=None)
    """
    The date these points were awarded, in ISO 8601 format.
    """

    total: typing.Optional[int] = pydantic.Field(default=None)
    """
    The user's total points after this award occurred.
    """

    trigger: typing.Optional[PointsTrigger] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
