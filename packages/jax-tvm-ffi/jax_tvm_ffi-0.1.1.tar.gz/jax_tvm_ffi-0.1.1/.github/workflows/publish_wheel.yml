# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: Publish wheel

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or tag to publish"
        required: true
        default: "main"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, arch: x86_64}
          - {os: ubuntu-24.04-arm, arch: aarch64}
          - {os: macos-14, arch: arm64}

    steps:
      - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4  # v6.7.0

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - uses: ./.github/actions/detect-env-vars
        id: env_vars

      - name: Print current commit
        run: git log -1 --oneline

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_BUILD_VERBOSITY: 3
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}

        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4  # v6.7.0

      - name: Build sdist
        run: uv build --sdist --out-dir dist .

      - name: Check metadata
        run: |
          uv tool run twine check dist/*

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      attestations: write
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Generate artifact attestation for sdist and wheels
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/*

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
          verbose: true
          # Uncomment to test on TestPyPI first:
          # repository-url: https://test.pypi.org/legacy/
