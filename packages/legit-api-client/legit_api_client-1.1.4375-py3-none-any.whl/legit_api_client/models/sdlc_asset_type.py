# coding: utf-8

"""
    Inventory

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class SdlcAssetType(str, Enum):
    """
    SdlcAssetType
    """

    """
    allowed enum values
    """
    GITHUBENTERPRISESERVER = 'GitHubEnterpriseServer'
    GITLAB = 'GitLab'
    BITBUCKET = 'Bitbucket'
    GITHUBCLOUD = 'GitHubCloud'
    BITBUCKETCLOUD = 'BitbucketCloud'
    JENKINS = 'Jenkins'
    AZUREDEVOPSSERVICES = 'AzureDevopsServices'
    AZUREDEVOPSSERVER = 'AzureDevopsServer'
    SHIFTLEFT = 'ShiftLeft'
    GITHUBACTIONS = 'GitHubActions'
    GITLABCI = 'GitLabCi'
    BITBUCKETPIPELINES = 'BitbucketPipelines'
    AZUREDEVOPSPIPELINES = 'AzureDevopsPipelines'
    DRONE = 'Drone'
    ARTIFACTORY = 'Artifactory'
    GITLABCLOUD = 'GitLabCloud'
    UNKNOWNSCM = 'UnknownScm'
    GERRIT = 'Gerrit'
    GITHUBPACKAGES = 'GitHubPackages'
    BAMBOO = 'Bamboo'
    GITLABPACKAGES = 'GitLabPackages'
    AZUREDEVOPSPACKAGES = 'AzureDevOpsPackages'
    HARBOR = 'Harbor'
    DOCKERHUB = 'DockerHub'
    UNKNOWNCONTAINERREGISTRY = 'UnknownContainerRegistry'
    GOOGLECONTAINERREGISTRY = 'GoogleContainerRegistry'
    CIRCLECI = 'CircleCi'
    AMAZONELASTICCONTAINERREGISTRY = 'AmazonElasticContainerRegistry'
    TEAMCITY = 'TeamCity'
    TEAMFORGE = 'TeamForge'
    KUBERNETES = 'Kubernetes'
    MANAGEDKUBERNETES = 'ManagedKubernetes'
    GITHUBCONTAINERREGISTRY = 'GithubContainerRegistry'
    CROWDSTRIKE = 'CrowdStrike'
    ORACLECONTAINERREGISTRY = 'OracleContainerRegistry'
    MIRANTIS = 'Mirantis'
    SONATYPENEXUS = 'SonatypeNexus'
    OPENSHIFT = 'Openshift'
    GOOGLEARTIFACTREGISTRY = 'GoogleArtifactRegistry'
    IBMCLOUD = 'IbmCloud'
    AZURECONTAINERREGISTRY = 'AzureContainerRegistry'
    QUAYIO = 'QuayIo'
    HELIXCORE = 'HelixCore'
    APACHEAIRFLOW = 'ApacheAirFlow'
    AMAZONSAGEMAKER = 'AmazonSageMaker'
    VERACODE = 'Veracode'
    CODECOMMIT = 'CodeCommit'
    WIZ = 'Wiz'
    CONFLUENCE = 'Confluence'
    AMAZONELASTICKUBERNETESSERVICE = 'AmazonElasticKubernetesService'
    AZUREKUBERNETESSERVICE = 'AzureKubernetesService'
    SNYK = 'Snyk'
    AZUREBOARDS = 'AzureBoards'
    BLACKDUCK = 'BlackDuck'
    CHECKMARXSAST = 'CheckmarxSast'
    CHECKMARXSCA = 'CheckmarxSca'
    SERVICENOW = 'ServiceNow'
    BURPSUITE = 'Burpsuite'
    JIRASECRETSCANNING = 'JiraSecretScanning'
    COVERITY = 'Coverity'
    SHORTCUT = 'Shortcut'
    CHECKMARXONE = 'CheckmarxOne'
    QUALYS = 'Qualys'
    INVICTI = 'Invicti'
    ENDORLABS = 'EndorLabs'
    FORTIFY = 'Fortify'
    PRISMACLOUD = 'PrismaCloud'
    ORCA = 'Orca'
    HCLAPPSCAN = 'HclAppScan'
    INSIGHTAPPSEC = 'InsightAppSec'
    STACKHAWK = 'StackHawk'
    GOOGLEKUBERNETESENGINE = 'GoogleKubernetesEngine'
    NOWSECURE = 'NowSecure'
    ONAPSIS = 'Onapsis'
    BRIGHTSECURITY = 'BrightSecurity'
    QUOKKAQMAST = 'QuokkaQMast'
    CONTRASTSECURITY = 'ContrastSecurity'
    LACEWORK = 'Lacework'
    SPINNAKER = 'Spinnaker'
    XRAY = 'Xray'
    MANUALUPLOAD = 'ManualUpload'
    SLACK = 'Slack'
    WEBHOOK = 'Webhook'
    MICROSOFTTEAMS = 'MicrosoftTeams'
    TORQ = 'Torq'
    AQUA = 'Aqua'
    GITHUBCLOUDPUBLIC = 'GitHubCloudPublic'
    SERVICENOWSECRETSCANNING = 'ServiceNowSecretScanning'
    JIRA = 'Jira'
    MENDSAST = 'MendSast'
    MENDSCA = 'MendSca'
    SEMGREP = 'Semgrep'
    SONARCLOUD = 'SonarCloud'
    SONARQUBE = 'SonarQube'
    SONATYPE = 'Sonatype'
    QUAYSERVER = 'QuayServer'
    OPENSHIFTCONTAINERREGISTRY = 'OpenShiftContainerRegistry'
    REDHATADVANCEDCLUSTERSECURITY = 'RedHatAdvancedClusterSecurity'
    QUALYSVMDR = 'QualysVmdr'
    TENABLE = 'Tenable'
    NONAME = 'Noname'
    SHAREPOINT = 'SharePoint'
    TRACEABLE = 'Traceable'
    OLIGO = 'Oligo'
    SLACKAPPLICATIONSCANNING = 'SlackApplicationScanning'
    AMAZONINSPECTOR = 'AmazonInspector'
    AMAZONSECURITYHUB = 'AmazonSecurityHub'
    UPWIND = 'Upwind'
    MICROSOFTTEAMSSCANNING = 'MicrosoftTeamsScanning'
    LEGITSCA = 'LegitSca'
    ACUNETIX = 'Acunetix'
    MEND = 'Mend'
    HACKERONE = 'HackerOne'
    DYNATRACE = 'Dynatrace'
    FORTIFYSSC = 'FortifySsc'
    PRISMACLOUDSECURITY = 'PrismaCloudSecurity'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of SdlcAssetType from a JSON string"""
        return cls(json.loads(json_str))


