# coding: utf-8

"""
    Inventory

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from legit_api_client.models.patch_product_unit_dto import PatchProductUnitDto

class TestPatchProductUnitDto(unittest.TestCase):
    """PatchProductUnitDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchProductUnitDto:
        """Test PatchProductUnitDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchProductUnitDto`
        """
        model = PatchProductUnitDto()
        if include_optional:
            return PatchProductUnitDto(
                name = 'Q!&h808cmu-h<I {ljZ4 ',
                description = '',
                workspace_id = '',
                type = 'Other',
                environment = 'Development',
                business_impact = 'Low',
                attach_repository_ids = [
                    ''
                    ],
                attach_repository_group_ids = [
                    ''
                    ],
                attach_integration_ids = [
                    ''
                    ],
                attach_nested_product_unit_ids = [
                    ''
                    ],
                attach_repository_name_substrings = [
                    ''
                    ],
                attach_repository_directories = [
                    legit_api_client.models.repository_directory.RepositoryDirectory(
                        repository_id = '', 
                        directory = '', )
                    ],
                detach_repository_ids = [
                    ''
                    ],
                detach_repository_group_ids = [
                    ''
                    ],
                detach_integration_ids = [
                    ''
                    ],
                detach_nested_product_unit_ids = [
                    ''
                    ],
                detach_repository_name_substrings = [
                    ''
                    ],
                detach_repository_directories = [
                    legit_api_client.models.repository_directory.RepositoryDirectory(
                        repository_id = '', 
                        directory = '', )
                    ],
                patch_security_champion_id = legit_api_client.models.patch_security_champion_id_dto.PatchSecurityChampionIdDto(
                    security_champion_id = '', )
            )
        else:
            return PatchProductUnitDto(
        )
        """

    def testPatchProductUnitDto(self):
        """Test PatchProductUnitDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
