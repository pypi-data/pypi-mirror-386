# coding: utf-8

"""
    Inventory

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class ControlClassification(str, Enum):
    """
    ControlClassification
    """

    """
    allowed enum values
    """
    UNKNOWN = 'Unknown'
    SNYK = 'Snyk'
    SONARQUBE = 'SonarQube'
    TRAVISCI = 'TravisCi'
    WEBHINT = 'WebHint'
    LIGHTHOUSE = 'Lighthouse'
    SHIFTLEFT = 'ShiftLeft'
    TRUFFLEHOG = 'TruffleHog'
    GITLABSAST = 'GitLabSast'
    GITLABDAST = 'GitLabDast'
    GITLABCODEQUALITY = 'GitLabCodeQuality'
    GITLABCONTAINERSCANNING = 'GitLabContainerScanning'
    GITLABSECRETDETECTION = 'GitLabSecretDetection'
    GITLABDEPENDENCYSCANNING = 'GitLabDependencyScanning'
    GITLABLICENSESCANNING = 'GitLabLicenseScanning'
    DUSTICOCODEANALYZER = 'DusticoCodeAnalyzer'
    DUSTICODUSTILOCK = 'DusticoDustiLock'
    CODEREVIEW = 'CodeReview'
    DEPENDABOT = 'Dependabot'
    SOURCEGUARDDEPENDENCYSCANNING = 'SourceGuardDependencyScanning'
    SOURCEGUARDCONTAINERSCANNING = 'SourceGuardContainerScanning'
    VERACODE = 'Veracode'
    LEGITSECRETSCANNING = 'LegitSecretScanning'
    ADVANCEDSECURITYCODESCANNING = 'AdvancedSecurityCodeScanning'
    ADVANCEDSECURITYSECRETSCANNING = 'AdvancedSecuritySecretScanning'
    ADVANCEDSECURITYDEPENDENCYREVIEW = 'AdvancedSecurityDependencyReview'
    SONARCLOUD = 'SonarCloud'
    CYCODESECRETSCANNING = 'CycodeSecretScanning'
    E2ETESTS = 'E2ETests'
    LEGITIACSCANNING = 'LegitIacScanning'
    LEGITPIPELINESCANNING = 'LegitPipelineScanning'
    ATLASSIANGITSECRETSSCANNER = 'AtlassianGitSecretsScanner'
    FOSSA = 'Fossa'
    PRISMACLOUDTWISTLOCK = 'PrismaCloudTwistlock'
    SNYKSCA = 'SnykSca'
    SNYKSAST = 'SnykSast'
    BLACKDUCK = 'BlackDuck'
    CHECKMARXSAST = 'CheckmarxSast'
    CROWDSTRIKE = 'CrowdStrike'
    LEGITSCASCANNING = 'LegitScaScanning'
    SONATYPE = 'Sonatype'
    WIZ = 'Wiz'
    MENDSCA = 'MendSca'
    MENDSAST = 'MendSast'
    CHECKMARXSCA = 'CheckmarxSca'
    ENDORLABSSCA = 'EndorLabsSca'
    SEMGREP = 'Semgrep'
    SEMGREPSCA = 'SemgrepSca'
    COVERITYSAST = 'CoveritySast'
    CHECKMARXONESCA = 'CheckmarxOneSca'
    CHECKMARXONESAST = 'CheckmarxOneSast'
    FORTIFYSAST = 'FortifySast'
    HCLAPPSCANSAST = 'HclAppScanSast'
    HCLAPPSCANSCA = 'HclAppScanSca'
    NOWSECURESAST = 'NowSecureSast'
    ONAPSISSAST = 'OnapsisSast'
    ONAPSISSCA = 'OnapsisSca'
    QUOKKAQMASTSAST = 'QuokkaQMastSast'
    CONTRASTSECURITYSAST = 'ContrastSecuritySast'
    CONTRASTSECURITYSCA = 'ContrastSecuritySca'
    XRAY = 'Xray'
    AQUA = 'Aqua'
    MANUALUPLOAD = 'ManualUpload'
    BURPSUITE = 'Burpsuite'
    INVICTI = 'Invicti'
    QUALYS = 'Qualys'
    NONAME = 'Noname'
    TRACEABLE = 'Traceable'
    AMAZONINSPECTOR = 'AmazonInspector'
    OLIGO = 'Oligo'
    LEGITSASTSCANNING = 'LegitSastScanning'
    ORCA = 'Orca'
    UPWIND = 'Upwind'
    ACUNETIX = 'Acunetix'
    MEND = 'Mend'
    REDHATADVANCEDCLUSTERSECURITY = 'RedHatAdvancedClusterSecurity'
    HACKERONE = 'HackerOne'
    DYNATRACESAST = 'DynatraceSast'
    DYNATRACESCA = 'DynatraceSca'
    FORTIFYSCC = 'FortifyScc'
    BRIGHTSECURITY = 'BrightSecurity'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ControlClassification from a JSON string"""
        return cls(json.loads(json_str))


