[package]
name = "platynui-cli"
description = "Command-line interface for PlatynUI automation toolkit"
version.workspace = true
keywords.workspace = true
categories.workspace = true
edition.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
authors.workspace = true
license.workspace = true
rust-version.workspace = true

[features]
default = []
mock-provider = [
    "platynui-runtime/mock-provider",
    "dep:platynui-provider-mock",
    "dep:platynui-platform-mock",
]

[dependencies]
clap = { version = "4.5.48", features = ["derive"] }
anyhow = "1.0.89"
serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
owo-colors = { version = "4.2.3", features = ["supports-colors"] }
png = "0.18.0"

platynui-runtime = { path = "../runtime", default-features = false }
platynui-core = { path = "../core" }

platynui-provider-mock = { path = "../provider-mock", optional = true }
platynui-platform-mock = { path = "../platform-mock", optional = true }

platynui-link = { path = "../link" }

[target.'cfg(target_os = "windows")'.dependencies]
platynui-platform-windows = { path = "../platform-windows" }
platynui-provider-windows-uia = { path = "../provider-windows-uia" }

[target.'cfg(target_os = "linux")'.dependencies]
platynui-platform-linux-x11 = { path = "../platform-linux-x11" }
platynui-provider-atspi = { path = "../provider-atspi" }

[target.'cfg(target_os = "macos")'.dependencies]
platynui-platform-macos = { path = "../platform-macos" }
platynui-provider-macos-ax = { path = "../provider-macos-ax" }



[dev-dependencies]
rstest = "0.26.1"
tempfile = "3.23.0"
serial_test = "3.2.0"
platynui-provider-mock = { path = "../provider-mock" }
platynui-platform-mock = { path = "../platform-mock" }

[lib]
name = "platynui_cli"
path = "src/lib.rs"

[[bin]]
name = "platynui-cli"
path = "src/main.rs"
