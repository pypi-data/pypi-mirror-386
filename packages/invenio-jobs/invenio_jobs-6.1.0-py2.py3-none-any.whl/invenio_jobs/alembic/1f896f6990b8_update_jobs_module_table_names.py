#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Update jobs module table names."""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1f896f6990b8"
down_revision = "356496a01197"
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_run_job_id_job", "run", type_="foreignkey")
    op.rename_table("job", "jobs_job")
    op.rename_table("run", "jobs_run")

    op.create_foreign_key(
        "fk_jobs_run_job_id_jobs_job", "jobs_run", "jobs_job", ["job_id"], ["id"]
    )
    op.drop_column("jobs_job", "default_args")

    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_jobs_run_job_id_jobs_job", "jobs_run", type_="foreignkey")

    op.rename_table("jobs_job", "job")
    op.rename_table("jobs_run", "run")
    op.create_foreign_key("fk_run_job_id_job", "run", "job", ["job_id"], ["id"])
    op.add_column(
        "job",
        sa.Column(
            "default_args",
            sa.JSON()
            .with_variant(sqlalchemy_utils.types.json.JSONType(), "mysql")
            .with_variant(
                postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), "postgresql"
            )
            .with_variant(sqlalchemy_utils.types.json.JSONType(), "sqlite"),
            nullable=True,
        ),
    )

    # ### end Alembic commands ###
