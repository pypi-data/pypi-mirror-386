[build-system]
requires = ["hatchling>=0.7", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "module-qc-analysis-tools"
dynamic = ["version"]
authors = [
  { name="Jay Chan", email="jay.chan@cern.ch" },
]
maintainers = [
    { name = "Giordon Stark", email = "gstark@cern.ch" },
]
description = "Module qc analysis tools"
readme = "README.md"
license = { file="LICENSE" }
requires-python = ">=3.9"
dependencies = [
    "numpy",
    "matplotlib",
    "module-qc-tools >= 2.6.0",
    "module-qc-data-tools >= 1.4.0rc4",
    "module-qc-database-tools >= 2.9.0rc0",
    "typer >= 0.18.0",
    "scipy",
    "arrow" # timestamp conversion
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-analysis-tools"
"Bug Tracker" = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-analysis-tools/-/issues"
"Source" = "https://gitlab.cern.ch/atlas-itk/pixel/module/module-qc-analysis-tools"
"Documentation" = "https://atlas-itk-pixel-mqat.docs.cern.ch/2.7/"

[project.scripts]
module-qc-analysis-tools = "module_qc_analysis_tools.cli:app"
"mqat" = "module_qc_analysis_tools.cli:app"
analysis-DATA-TRANSMISSION = "module_qc_analysis_tools.cli.DATA_TRANSMISSION:app"
analysis-ADC-CALIBRATION = "module_qc_analysis_tools.cli.ADC_CALIBRATION:app"
analysis-ANALOG-READBACK = "module_qc_analysis_tools.cli.ANALOG_READBACK:app"
analysis-INJECTION-CAPACITANCE = "module_qc_analysis_tools.cli.INJECTION_CAPACITANCE:app"
analysis-SLDO = "module_qc_analysis_tools.cli.SLDO:app"
analysis-VCAL-CALIBRATION = "module_qc_analysis_tools.cli.VCAL_CALIBRATION:app"
analysis-LP-MODE = "module_qc_analysis_tools.cli.LP_MODE:app"
analysis-OVERVOLTAGE-PROTECTION = "module_qc_analysis_tools.cli.OVERVOLTAGE_PROTECTION:app"
analysis-UNDERSHUNT-PROTECTION = "module_qc_analysis_tools.cli.UNDERSHUNT_PROTECTION:app"
analysis-IV-MEASURE = "module_qc_analysis_tools.cli.IV_MEASURE:app"
analysis-MIN-HEALTH-TEST = "module_qc_analysis_tools.cli.MIN_HEALTH_TEST:app"
analysis-TUNING = "module_qc_analysis_tools.cli.TUNING:app"
analysis-PIXEL-FAILURE-ANALYSIS = "module_qc_analysis_tools.cli.PIXEL_FAILURE_ANALYSIS:app"
analysis-overwrite-config = "module_qc_analysis_tools.cli.overwrite_config:app"
analysis-update-chip-config = "module_qc_analysis_tools.cli.update_chip_config:app"
analysis-load-yarr-scans = "module_qc_analysis_tools.cli.load_yarr_scans:app"
analysis-check-kshunt-in-chip-config = "module_qc_analysis_tools.cli.check_kshunt_in_chip_config:app"


# Non-elec tests
analysis-SENSOR-TILE-IV-MEASURE = "module_qc_analysis_tools.cli.SENSOR_TILE_IV_MEASURE:app"
analysis-BARE-MODULE-SENSOR-IV = "module_qc_analysis_tools.cli.BARE_MODULE_SENSOR_IV:app"
analysis-VISUAL-INSPECTION = "module_qc_analysis_tools.cli.VISUAL_INSPECTION:app"
analysis-MASS-MEASUREMENT = "module_qc_analysis_tools.cli.MASS_MEASUREMENT:app"
analysis-MASS = "module_qc_analysis_tools.cli.MASS_MEASUREMENT:app"
analysis-QUAD-MODULE-METROLOGY = "module_qc_analysis_tools.cli.QUAD_MODULE_METROLOGY:app"
analysis-QUAD-BARE-MODULE-METROLOGY = "module_qc_analysis_tools.cli.QUAD_BARE_MODULE_METROLOGY:app"
analysis-TRIPLET-METROLOGY = "module_qc_analysis_tools.cli.TRIPLET_METROLOGY:app"
analysis-WIREBOND-PULL-TEST = "module_qc_analysis_tools.cli.WIREBOND_PULL_TEST:app"
analysis-GLUE-MODULE-FLEX-ATTACH = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-WIREBONDING = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-PARYLENE = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-DE-MASKING = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-THERMAL-CYCLING = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-WP-ENVELOPE = "module_qc_analysis_tools.cli.WP_ENVELOPE:app"
analysis-LONG-TERM-STABILITY-DCS = "module_qc_analysis_tools.cli.LONG_TERM_STABILITY_DCS:app"
analysis-FLATNESS = "module_qc_analysis_tools.cli.FLATNESS:app"
analysis-CUTTER-PCB-TAB = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-HV-LV-TEST = "module_qc_analysis_tools.cli.HV_LV_TEST:app"
analysis-LAYER-THICKNESS = "module_qc_analysis_tools.cli.LAYER_THICKNESS:app"
analysis-METROLOGY = "module_qc_analysis_tools.cli.METROLOGY:app"
analysis-NTC-VERIFICATION = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-SLDO-RESISTORS = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-VIA-RESISTANCE = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-GLUE-MODULE-CELL-ATTACH = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-COLD-CYCLE = "module_qc_analysis_tools.cli.GENERIC_NONELEC:app"
analysis-ENVELOPE = "module_qc_analysis_tools.cli.ENVELOPE:app"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/module_qc_analysis_tools/_version.py"

[tool.hatch.build.targets.sdist]

[tool.hatch.envs.default]
dependencies = [
    "tbump>=6.7.0",
    "pylint",
    "build",
    "twine",
]
installer = "uv"

[tool.hatch.envs.hatch-uv]
dependencies = [
  "uv!=0.6.7", # https://github.com/astral-sh/uv/issues/12260
]

[tool.hatch.envs.default.scripts]
tag = "tbump {args}"
lint = "pylint src"
build = "python -m build"
validate = "twine check dist/*"
# https://github.com/linkchecker/linkchecker/issues/678
build-check = [
  "build",
  "validate",
]
upload = "twine upload dist/*"

[tool.hatch.envs.dev]
template = "dev"
# pylint and pytest needs to be installed into package environment
detached = false
dependencies = [
    "pytest >=6",
]

[tool.hatch.envs.dev.scripts]
test = "pytest -ra {args}"

[[tool.hatch.envs.dev.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy3.9"]

[tool.hatch.envs.docs]
template = "docs"
dependencies = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.4.0",
    # Plugins
    "mkdocs-minify-plugin>=0.5.0",
    "mkdocs-git-revision-date-localized-plugin>=1.1.0",
    "mkdocstrings[python]>=0.18",
    "mkdocs-redirects>=1.1.0",
    "mkdocs-glightbox>=0.3.0",
    "mike>=2.0.0",
    # Extensions
    "mkdocs-click>=0.8.0",
    "pymdown-extensions>=10.6.0",
    # Necessary for syntax highlighting in code blocks
    "pygments>=2.13.0",
    # Validation
    # https://github.com/linkchecker/linkchecker/pull/669#issuecomment-1267236287
    "linkchecker @ git+https://github.com/linkchecker/linkchecker.git@d9265bb71c2054bf57b8c5734a4825d62505c779",
    # auto-generation of docs
    "mkdocs-gen-files>=0.4",
    "mkdocs-literate-nav>=0.5.0",
    "mkdocs-section-index>=0.3.4",
    "mdx-truly-sane-lists", # for 2-space indented lists (https://github.com/mkdocs/mkdocs/issues/545)
    # formatting signatures
    "black>23",
    # https://github.com/mkdocs/mkdocs-click/issues/78
    "mkdocs-autorefs",
]

[tool.hatch.envs.docs.env-vars]
MKDOCS_CONFIG = "mkdocs.yml"
MKDOCS_BRANCH = "pages"
[tool.hatch.envs.docs.scripts]
# --strict disabled for now, see https://github.com/timvink/mkdocs-git-revision-date-localized-plugin/issues/101
build = "mkdocs build --config-file {env:MKDOCS_CONFIG} --clean {args}"
#build = "mkdocs build --config-file {env:MKDOCS_CONFIG} --clean --strict {args}"
serve = "mkdocs serve --config-file {env:MKDOCS_CONFIG} --dev-addr localhost:8000 {args}"
ci-build = "mike deploy --config-file {env:MKDOCS_CONFIG} --branch {env:MKDOCS_BRANCH} --update-aliases {args}"
deploy = "ci-build --push"
validate = "linkchecker --config .linkcheckerrc site"
# https://github.com/linkchecker/linkchecker/issues/678
build-check = [
  "build --no-directory-urls",
  "validate",
]

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "TID251",      # flake8-tidy-imports.banned-api
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Incorrect check, usefixtures is the correct way to do this
  "RUF012", # Would require a lot of ClassVar's
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.Callable".msg = "Use collections.abc.Callable instead."
"typing.Iterator".msg = "Use collections.abc.Iterator instead."
"typing.Mapping".msg = "Use collections.abc.Mapping instead."
"typing.Sequence".msg = "Use collections.abc.Sequence instead."
"typing.Set".msg = "Use collections.abc.Set instead."
"importlib.abc".msg = "Use sp_repo_review._compat.importlib.resources.abc instead."
"importlib.resources.abc".msg = "Use sp_repo_review._compat.importlib.resources.abc instead."

[tool.ruff.lint.per-file-ignores]
"src/module_qc_analysis_tools/cli/main.py" = ["B008"]

[tool.pylint]
master.py-version = "3.9"
master.ignore-paths= ["src/module_qc_analysis_tools/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
  # below are additional warnings to fix later
  "duplicate-code",
  "invalid-name",
  "logging-fstring-interpolation",
  "logging-not-lazy",
  "broad-exception-caught",
  "protected-access",
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  # specific to mqat
  "too-many-lines",
  "attribute-defined-outside-init",
  "too-many-nested-blocks",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
testpaths = ["tests"]
log_cli_level = "INFO"

[tool.repo-review]
ignore = [
  "GH", # only if using GitHub
  "PC140", "MY100", # no typehints used
  "RTD100",
  "PC180",  # https://github.com/scientific-python/cookie/issues/439
]
