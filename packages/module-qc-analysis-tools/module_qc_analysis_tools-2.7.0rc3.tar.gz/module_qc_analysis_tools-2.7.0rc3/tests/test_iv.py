import numpy as np
import pytest

from module_qc_analysis_tools.utils.analysis import (
    coth,
    current_compliance,
    current_threshold,
    find_breakdown_and_current,
    normalise_current,
    sensor_tile_area,
)


@pytest.mark.parametrize(
    ("orig_temp", "expected_current"),
    [
        (
            20.0,
            [
                0.0,
                1.0,
                2.0,
                3.0,
                4.0,
                5.0,
                6.0,
                7.0,
                8.0,
                9.0,
            ],
        ),
        (
            25.0,
            [
                0.0,
                0.6654283805955611,
                1.3308567611911222,
                1.9962851417866831,
                2.6617135223822443,
                3.3271419029778055,
                3.9925702835733663,
                4.657998664168928,
                5.323427044764489,
                5.9888554253600494,
            ],
        ),
        (
            50.0,
            [
                0.0,
                0.10523611043380762,
                0.21047222086761525,
                0.31570833130142284,
                0.4209444417352305,
                0.5261805521690381,
                0.6314166626028457,
                0.7366527730366533,
                0.841888883470461,
                0.9471249939042685,
            ],
        ),
        (
            0.0,
            [
                0.0,
                5.933276842754084,
                11.866553685508167,
                17.79983052826225,
                23.733107371016334,
                29.66638421377042,
                35.5996610565245,
                41.53293789927858,
                47.46621474203267,
                53.39949158478675,
            ],
        ),
        (
            -10.0,
            [
                0.0,
                16.01420069381364,
                32.02840138762728,
                48.04260208144092,
                64.05680277525455,
                80.0710034690682,
                96.08520416288184,
                112.09940485669549,
                128.1136055505091,
                144.12780624432276,
            ],
        ),
        (
            -30.0,
            [
                0.0,
                149.29035022003833,
                298.58070044007667,
                447.871050660115,
                597.1614008801533,
                746.4517511001917,
                895.74210132023,
                1045.0324515402683,
                1194.3228017603067,
                1343.613151980345,
            ],
        ),
        (
            -55.0,
            [
                0.0,
                4329.419688385948,
                8658.839376771895,
                12988.259065157843,
                17317.67875354379,
                21647.09844192974,
                25976.518130315686,
                30305.937818701637,
                34635.35750708758,
                38964.77719547353,
            ],
        ),
    ],
    ids=[f"T={t}" for t in [20, 25, 50, 0, -10, -30, 55]],
)
def test_normalise_current(orig_temp, expected_current):
    current = np.arange(0.0, 10.0, 1.0)

    normalised_current = normalise_current(current, orig_temp)
    assert np.allclose(
        normalised_current.tolist(),
        expected_current,
    )


@pytest.mark.parametrize(
    ("x", "y"),
    [
        (0, np.nan),
        (10, 1),
        (-10, -1),
    ],
)
def test_coth(x, y):
    _coth = coth(x)
    assert np.allclose(_coth, y, equal_nan=True)


@pytest.mark.parametrize(
    ("voltage", "current", "Vdepl", "Vop", "is3D", "expect_Vbd", "expect_Ilc"),
    [
        (
            [
                0,
                1.6,
                3.7,
                5.8,
                7.8,
                9.8,
                11.8,
                13.7,
                15.7,
                17.8,
                19.8,
                21.8,
                23.8,
                25.8,
                27.8,
                29.9,
                31.9,
                33.9,
                35.8,
                37.9,
                39.9,
                41.9,
                44,
                45.9,
                47.9,
                49.9,
                52,
                54,
                55.9,
                57.8,
                59.8,
                61.9,
                63.8,
                65.8,
                67.8,
                69.9,
                71.9,
                73.8,
                75.8,
                77.9,
                79.9,
                81.9,
                83.8,
                85.9,
                87.9,
                89.9,
                91.9,
                94,
                95.9,
                97.9,
                99.9,
                102,
                103.9,
                105.9,
                107.9,
                109.9,
                112,
                113.8,
                115.8,
                117.9,
                119.9,
                121.8,
                123.8,
                125.9,
                127.9,
                129.9,
                132,
                133.9,
                135.9,
                137.9,
                140,
                141.9,
                143.9,
                146,
                148,
                150,
                152,
                154,
                156,
                158,
                160.1,
                162,
                164,
                166.1,
                168,
            ],
            [
                0.0,
                0.0613,
                0.1085,
                0.132,
                0.138,
                0.14,
                0.1425,
                0.143,
                0.1435,
                0.144,
                0.1445,
                0.1445,
                0.145,
                0.145,
                0.1455,
                0.146,
                0.1465,
                0.147,
                0.1475,
                0.1489,
                0.150,
                0.152,
                0.154,
                0.156,
                0.158,
                0.160,
                0.162,
                0.163,
                0.1645,
                0.1655,
                0.1665,
                0.1675,
                0.1685,
                0.170,
                0.172,
                0.175,
                0.1799,
                0.187,
                0.197,
                0.214,
                0.2375,
                0.277,
                0.3225,
                0.4014,
                0.5015,
                0.625,
                0.7735,
                0.9685,
                1.163,
                1.3805,
                1.655,
                1.9615,
                2.2185,
                2.5852,
                2.9535,
                3.3565,
                3.8125,
                4.411,
                5.071,
                5.9845,
                7.0249,
                8.19,
                9.4465,
                10.784,
                11.9249,
                13.1865,
                14.3425,
                15.482,
                16.606,
                17.683,
                18.679,
                19.6139,
                20.5435,
                21.39255,
                22.2498,
                23.059,
                23.8485,
                24.5963,
                25.4085,
                26.1861,
                26.9805,
                27.7705,
                28.5235,
                29.3042,
                30.044,
            ],
            61.897,
            111.897,
            False,
            -999,
            3.8125,
        ),
        (
            [
                0,
                5,
                10,
                15,
                20,
                25,
                30,
                35,
                40,
                45,
                50,
                55,
                60,
                65,
                70,
                75,
                80,
                85,
                90,
                95,
                100,
                105,
                110,
                115,
                120,
                125,
                130,
                135,
                140,
                145,
                150,
                155,
                160,
                165,
                170,
                175,
                180,
                185,
                190,
                195,
                200,
            ],
            [
                0.01260250,
                0.22683092,
                0.25774310,
                0.26991184,
                0.27559198,
                0.28163987,
                0.28819495,
                0.29405801,
                0.2993347,
                0.3040775,
                0.30852831,
                0.31321463,
                0.31758909,
                0.32352812,
                0.36066454,
                0.49277568,
                0.74537363,
                1.1037013,
                1.55129010,
                2.09349970,
                2.70001580,
                3.33969970,
                4.02046160,
                4.75258460,
                5.5693122,
                6.38827090,
                7.29980590,
                8.389534,
                9.39221380,
                10.314135,
                11.350128,
                12.3337650,
                13.294661,
                14.257372,
                15.227639,
                16.20356,
                17.183784,
                18.413244,
                19.529578,
                20.4878640,
                21.5095,
            ],
            50,
            100,
            False,
            -999.0,
            2.7000158,
        ),
        (
            [
                0.0,
                5.0,
                10.0,
                15.0,
                20.0,
                25.0,
                30.0,
                35.0,
                40.0,
                45.0,
                50.0,
                55.0,
                60.0,
                65.0,
                69.0,
            ],
            [
                0.0003,
                1.0806,
                1.9002,
                3.11448,
                4.96624,
                7.38273,
                10.474,
                14.1546,
                18.2749,
                22.7016,
                27.8202,
                33.0617,
                38.6943,
                44.8343,
                49.9957,
            ],
            58.8760,
            108.8760,
            False,
            50,
            -999,
        ),
        (
            [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
            ],
            [
                0.0000,
                0.7001,
                0.8592,
                1.0197,
                1.1481,
                1.2589,
                1.3586,
                1.4512,
                1.5392,
                1.6247,
                1.7064,
                1.7837,
                1.8558,
                1.9236,
                1.9874,
                2.0479,
                2.1050,
                2.1599,
                2.2131,
                2.2659,
                2.3186,
                2.3728,
                2.4336,
                2.5219,
                2.6594,
                2.9000,
                3.3064,
                4.0023,
                5.1073,
                6.8515,
                9.6593,
                13.746,
                29.924,
                36.928,
                45.514,
                54.593,
                64.884,
                76.216,
                97.413,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.99,
                105.99,
                105.99,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
                105.00,
            ],
            5,
            25,
            True,
            39,
            2.9,
        ),
        (
            [0, -1, -2, -3, -4, -5, -6, -7],
            [
                0.00000,
                -0.0001,
                -0.0024,
                -0.2345,
                -1.5214,
                -47.460,
                -69.233,
                -99.998,
            ],
            5,
            25,
            True,
            6,
            -999,
        ),
        (
            [
                0,
                -1,
                -2,
                -3,
                -4,
                -5,
                -6,
                -7,
                -8,
                -9,
                -10,
                -11,
                -12,
                -13,
                -14,
                -15,
                -16,
                -17,
                -18,
                -19,
                -20,
                -21,
                -22,
                -23,
                -24,
                -25,
                -26,
                -27,
                -28,
                -29,
                -30,
                -31,
                -32,
                -33,
                -34,
                -35,
                -36,
                -37,
                -38,
                -39,
                -40,
                -41,
                -42,
                -43,
                -44,
                -45,
                -46,
                -47,
                -48,
                -49,
                -50,
                -51,
                -52,
                -53,
                -54,
                -55,
                -56,
                -57,
                -58,
                -59,
                -60,
                -61,
                -62,
                -63,
                -64,
                -65,
                -66,
                -67,
                -68,
                -69,
                -70,
                -71,
                -72,
                -73,
                -74,
                -75,
                -76,
                -77,
                -78,
                -79,
                -80,
                -81,
                -82,
                -83,
                -84,
                -85,
                -86,
                -87,
                -88,
                -89,
                -90,
                -91,
                -92,
                -93,
                -94,
                -95,
                -96,
                -97,
                -98,
                -99,
                -100,
            ],
            [
                0.00001,
                -0.00004,
                -0.00071,
                -0.01868,
                -0.37939,
                -0.54398,
                -0.73522,
                -0.89746,
                -0.97926,
                -1.10128,
                -1.07408,
                -1.17041,
                -1.36434,
                -1.35464,
                -1.40224,
                -1.44098,
                -1.48246,
                -1.53116,
                -1.56552,
                -1.59381,
                -1.74488,
                -1.77441,
                -1.84996,
                -1.80819,
                -1.82897,
                -1.9519,
                -1.98641,
                -2.02264,
                -2.05688,
                -2.08770,
                -2.13009,
                -2.16839,
                -2.20625,
                -2.18288,
                -2.29444,
                -2.34639,
                -2.39712,
                -2.44347,
                -2.48961,
                -2.53528,
                -2.58260,
                -2.62840,
                -2.67646,
                -2.72479,
                -2.77156,
                -2.81884,
                -2.86212,
                -2.90960,
                -2.95916,
                -3.00926,
                -3.05633,
                -3.10600,
                -3.15458,
                -3.19846,
                -3.24620,
                -3.29685,
                -3.34426,
                -3.39406,
                -3.44466,
                -3.40166,
                -3.54716,
                -3.59963,
                -3.57981,
                -3.69143,
                -3.67878,
                -3.79523,
                -3.83784,
                -4.05392,
                -3.95228,
                -3.95505,
                -4.08488,
                -4.14327,
                -4.19603,
                -4.24839,
                -4.30569,
                -4.36288,
                -4.41803,
                -4.47450,
                -4.53780,
                -4.58625,
                -4.63381,
                -4.69355,
                -4.74286,
                -4.75014,
                -4.86839,
                -4.92674,
                -4.91790,
                -4.97719,
                -5.00912,
                -5.17174,
                -5.24739,
                -5.30505,
                -5.36339,
                -5.44150,
                -5.50858,
                -5.45613,
                -5.67812,
                -5.74272,
                -9.64061,
                -10.0086,
                -12.1623,
            ],
            5,
            25,
            True,
            -999.0,
            1.9519,
        ),
        (
            [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
            ],
            [
                0.0043832,
                6.4411266,
                9.4712507,
                10.906815,
                11.578501,
                11.960355,
                12.227954,
                12.416437,
                12.605557,
                12.737097,
                12.847708,
                13.01136,
                13.013662,
                13.247585,
                13.370449,
                13.490299,
                13.575110,
                13.659129,
                13.821161,
                13.906133,
                14.021155,
                14.095995,
                14.229065,
                14.347249,
                14.511132,
                14.565454,
                14.700148,
                26.594666,
                41.898272,
                48.515032,
                54.931553,
                60.973687,
            ],
            5,
            25,
            True,
            -999,
            14.565454,
        ),
        (
            [0, 5, 10],
            [
                0.0014331833333333334,
                94.37353333333333,
                100.00000000000001,
            ],
            52,
            102,
            False,
            5,
            -999,
        ),
    ],
    ids=[  # RAW
        "wrongVsteps",  # 20UPGB42305002 # https://itkpd-test.unicorncollege.cz/testRunView?id=66a36485dd25dd004296d497 wrong component/testrun
        "singleRatio",  # 20UPGB43200003 # https://itkpd-test.unicorncollege.cz/testRunView?id=6716413007e8e5004342ce0e wrong component/testrun
        "incomplete",  # 20UPGB43200056 # https://itkpd-test.unicorncollege.cz/testRunView?id=6746357fcb7fafcb70d15ad7 OK
        "increaseLargeVdep",  # 20UPGB12100056 # https://itkpd-test.unicorncollege.cz/testRunView?id=65786dbc822c6e00426a41cf OK
        "negativeEarlyBreakdown",  # 20UPGB12100073 # https://itkpd-test.unicorncollege.cz/testRunView?id=6733346a5dc32493a854ad31 OK
        "negativeGood",  # 20UPGB12100080 # https://itkpd-test.unicorncollege.cz/testRunView?id=6732499ebb9172bc054b4b95 OK
        "LargeInitialCurrent",  # 20UPGB12200026 # https://itkpd-test.unicorncollege.cz/testRunView?id=6453aa78fde33a00426b2825 OK
        "earlyBreakdown",  # 20UPGM22210083 # https://itkpd-test.unicorncollege.cz/testRunView?id=67dab773f1be53f1ec198866 similar testrun
    ],
)
def test_find_breakdown(
    voltage,
    current,
    Vdepl,
    Vop,
    is3D,
    expect_Vbd,
    expect_Ilc,
):
    area = sensor_tile_area(
        "3D" if is3D else "OUTER_PIXEL_QUAD_SENSOR_TILE"
    )  ## examples in tests are mostly from bare IV
    Ilim = current_threshold(is3D, isBare=True) * area
    Icompl = current_compliance()
    Vbd, Ilc = find_breakdown_and_current(
        voltage, current, Vdepl, Vop, is3D, Ilim, Icompl
    )

    toleranceV = 1
    toleranceI = 0.1

    # assert Vbd == pytest.approx(
    # expect_Vbd, abs=toleranceV
    # ), f"Expected Vbd {expect_Vbd} #pm {toleranceV}, but got {Vbd}"
    # assert Ilc == pytest.approx(
    # expect_Ilc, abs=toleranceI
    # ), f"Expected Ilc {expect_Ilc} #pm {toleranceI}, but got {Ilc}"
    assert Vbd == pytest.approx(expect_Vbd, abs=toleranceV), (
        f"Expected Vbd {expect_Vbd} #pm {toleranceV}, but got {Vbd}"
    )
    assert Ilc == pytest.approx(expect_Ilc, abs=toleranceI), (
        f"Expected Ilc {expect_Ilc} #pm {toleranceI}, but got {Ilc}"
    )
