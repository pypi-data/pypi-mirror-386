{
    "openapi": "3.0.0",
    "info": {
      "title": "ZCP Alert Backend",
      "description": "ZCP Alert Backend API",
      "version": "1.1.1"
    },
    "paths": {
      "/api/alert/v1/alerts": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get alerts",
          "description": "The restful API to get alerts",
          "operationId": "get_alerts_api_alert_v1_alerts_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AlertStatus"
                },
                "title": "alert status",
                "description": "Search query string for status"
              },
              "description": "Search query string for status"
            },
            {
              "name": "senders",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Sender"
                },
                "title": "alert sender",
                "description": "Search query string for sender"
              },
              "description": "Search query string for sender"
            },
            {
              "name": "priorities",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Priority"
                },
                "title": "alert priority",
                "description": "Search query string for alert priority"
              },
              "description": "Search query string for alert priority"
            },
            {
              "name": "severities",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Severity"
                },
                "title": "alert severity",
                "description": "Search query string for alert severity"
              },
              "description": "Search query string for alert severity"
            },
            {
              "name": "fingerprint",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 36
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert fingerprint",
                "description": "Search query string for fingerprint. The max length is 36"
              },
              "description": "Search query string for fingerprint. The max length is 36"
            },
            {
              "name": "alert_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert id",
                "description": "Search query string for fingerprint. The max length is 100"
              },
              "description": "Search query string for fingerprint. The max length is 100"
            },
            {
              "name": "repeated_count",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 10000
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert repeated count",
                "description": "Search query string for repeated count, Should be less than 10000"
              },
              "description": "Search query string for repeated count, Should be less than 10000"
            },
            {
              "name": "repeated_count_operator",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RepeatedCountOperator"
                  }
                ],
                "title": "alert repeated count operator",
                "description": "Search query string for repeated count operator",
                "default": "gte(>=)"
              },
              "description": "Search query string for repeated count operator"
            },
            {
              "name": "alertname",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert name",
                "description": "Search query string for alert name. The max length is 100"
              },
              "description": "Search query string for alert name. The max length is 100"
            },
            {
              "name": "description",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert description",
                "description": "Search query string for alert description. The max length is 100"
              },
              "description": "Search query string for alert description. The max length is 100"
            },
            {
              "name": "summary",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert summary",
                "description": "Search query string for alert summary. The max length is 100"
              },
              "description": "Search query string for alert summary. The max length is 100"
            },
            {
              "name": "project",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "alert project",
                "description": "Search query string for alert project. The max length is 100"
              },
              "description": "Search query string for alert project. The max length is 100"
            },
            {
              "name": "clusters",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "alert clusters",
                "description": "Search query string for alert clusters"
              },
              "description": "Search query string for alert clusters"
            },
            {
              "name": "namespaces",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "alert namespaces",
                "description": "Search query string for alert namespaces"
              },
              "description": "Search query string for alert namespaces"
            },
            {
              "name": "start_date",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search start date",
                "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
              },
              "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search end date",
                "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
              },
              "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
            },
            {
              "name": "start_date_created_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search start date",
                "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
              },
              "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
            },
            {
              "name": "end_date_created_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search end date",
                "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
              },
              "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
            },
            {
              "name": "start_date_closed_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search start date",
                "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
              },
              "description": "Search query string for start date (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
            },
            {
              "name": "end_date_closed_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "search end date",
                "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
              },
              "description": "Search query string for end date (ISO 8601 format(e.g. 2024-11-06T14:48:00.000+09:00))"
            },
            {
              "name": "labels",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "title": "search labels",
                "description": "Search query string for labels e.g. severity:critical,priority:P1"
              },
              "description": "Search query string for labels e.g. severity:critical,priority:P1"
            },
            {
              "name": "sort_field",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AlertSortField"
                  }
                ],
                "title": "sort field",
                "description": "Sort field name",
                "default": "updated_at"
              },
              "description": "Sort field name"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortDirection"
                  }
                ],
                "title": "sort direction",
                "description": "Sort direction",
                "default": "desc"
              },
              "description": "Sort direction"
            },
            {
              "name": "page_number",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "minimum": 1
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page number",
                "description": "Page number. Default is 1 and it should be greater than 0",
                "default": 1
              },
              "description": "Page number. Default is 1 and it should be greater than 0"
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 10
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page size",
                "description": "Page size. Default is 10 and it should be greater than 10 and less than 500",
                "default": 10
              },
              "description": "Page size. Default is 10 and it should be greater than 10 and less than 500"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ZcpAlertList"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "alert"
          ],
          "summary": "Create alert for notification testing",
          "description": "A restful API to create an alert for notification testing\n\nParameters\n----------\nalert : Alert\n    It comes from the alert backend console on the web\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\"\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "create_test_alert_api_alert_v1_alerts_post",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestAlertCreateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alerts/external/webhook": {
        "post": {
          "tags": [
            "alert"
          ],
          "summary": "Alerts Webhook",
          "description": "A restful API to process the alerts from the prometheus alertmanager\n\nParameters\n----------\nalert_data : AlertData\n    It comes from the prometheus alertmanager\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": [\n        {\n        \"id\": \"66e591801659d83e105a3c4a\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4c\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4e\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c50\"\n        }\n    ]\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "alerts_webhook_api_alert_v1_alerts_external_webhook_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBasic": []
            }
          ]
        }
      },
      "/api/alert/v1/alerts/webhook": {
        "post": {
          "tags": [
            "alert"
          ],
          "summary": "Alerts Webhook",
          "description": "A restful API to process the alerts from the prometheus alertmanager\n\nParameters\n----------\nalert_data : AlertData\n    It comes from the prometheus alertmanager\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": [\n        {\n        \"id\": \"66e591801659d83e105a3c4a\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4c\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4e\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c50\"\n        }\n    ]\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "alerts_webhook_api_alert_v1_alerts_webhook_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertData"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBasic": []
            }
          ]
        }
      },
      "/api/alert/v1/alerts/single/webhook": {
        "post": {
          "tags": [
            "alert"
          ],
          "summary": "Alerts Single Webhook",
          "description": "A restful API to process a single alert from the K8sWatcher or the OpenSearch\n\nParameters\n----------\nalert : Alert\n    It comes from the K8sWatcher or the OpenSearch\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": [\n        {\n        \"id\": \"66e591801659d83e105a3c4a\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4c\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c4e\"\n        },\n        {\n        \"id\": \"66e591801659d83e105a3c50\"\n        }\n    ]\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "alerts_single_webhook_api_alert_v1_alerts_single_webhook_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBasic": []
            }
          ]
        }
      },
      "/api/alert/v1/alerts/bulk/{action}": {
        "patch": {
          "tags": [
            "alert"
          ],
          "summary": "Alerts Bulk Action",
          "description": "The restful API to perform actions on alerts\n\nParameters\n----------\nalerts : List[AlertActionRequest]\n    list of AlertActionRequest instances\n\naction : Action\n    Action enum. Snooze, Unack, Wakeup are not allowed\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": {\n        \"updated_count\": 1\n    }\n}\n```",
          "operationId": "alerts_bulk_action_api_alert_v1_alerts_bulk__action__patch",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "action",
              "in": "path",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Action"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AlertActionRequest"
                  },
                  "title": "Alerts"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alerts/{alert_id}/{action}": {
        "patch": {
          "tags": [
            "alert"
          ],
          "summary": "Alert single action on the web console by system administator",
          "description": "The restful API to perform an action on an alert\n\nParameters\n----------\nalert_id : str\n    by default Path(..., title=\"Alert id\", description=\"Alert id\")\n\naction : Action\n    by default Path(title=\"Action\", description=\"Action enum\").\n    Wakeup is not allowed\n\nsnoozed_until_at : _type_, optional\n    by default Query(None, title=\"Snoozed time\",\n    description=\"Snoozed time (ISO 8601 format(e.g. 2023-07-05T14:48))\"\n\noauth_user : TokenData\n    by default Depends(get_current_user)\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "alert_single_action_api_alert_v1_alerts__alert_id___action__patch",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "alert_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Alert id",
                "description": "Alert id"
              },
              "description": "Alert id"
            },
            {
              "name": "action",
              "in": "path",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Action"
                  }
                ],
                "title": "Action",
                "description": "Action enum"
              },
              "description": "Action enum"
            },
            {
              "name": "snoozed_until_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "Snoozed time",
                "description": "Snoozed time (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
              },
              "description": "Snoozed time (ISO 8601 format(e.g. 2024-11-05T14:48:00.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alerts/external/{alert_id}/{action}/{username}": {
        "post": {
          "tags": [
            "alert"
          ],
          "summary": "Alert single action by the third party services. e.g. slack, google chat, etc.",
          "description": "The restful API to perform an action on an alert from the third party services on the public network\n\nParameters\n----------\nalert_id : str, optional\naction : Action, optional\nsnoozed_until_at : _type_, optional\n\nReturns\n-------\nResponseModel\n\nRaises\n------\nAlertBackendException",
          "operationId": "alert_external_single_action_api_alert_v1_alerts_external__alert_id___action___username__post",
          "parameters": [
            {
              "name": "alert_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Alert id",
                "description": "Alert id"
              },
              "description": "Alert id"
            },
            {
              "name": "action",
              "in": "path",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Action"
                  }
                ],
                "title": "Action",
                "description": "Action enum"
              },
              "description": "Action enum"
            },
            {
              "name": "username",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "maxLength": 30,
                "title": "Username",
                "description": "Username"
              },
              "description": "Username"
            },
            {
              "name": "snoozed_until_at",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "Snoozed time",
                "description": "Snoozed time (ISO 8601 format(e.g. 2023-07-05T14:48))"
              },
              "description": "Snoozed time (ISO 8601 format(e.g. 2023-07-05T14:48))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alerts/{alert_id}": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get Alert",
          "description": "The restful API to get an alert by alert id\n\nParameters\n----------\nalert_id : str, optional\n    by default Path(title=\"Alert id\", description=\"Alert id\", max_length=36)\n\nReturns\n-------\nZcpAlert",
          "operationId": "get_alert_api_alert_v1_alerts__alert_id__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "alert_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "maxLength": 36,
                "title": "Alert id",
                "description": "Alert id"
              },
              "description": "Alert id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ZcpAlert"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "alert"
          ],
          "summary": "Remove Alert",
          "description": "The restful API to delete an alert by alert id\n\nParameters\n----------\nalert_id : str, optional\n    by default Path(title=\"Alert id\", description=\"Alert id\", max_length=36)\n\nReturns\n-------\nResponseModel\n    Returns the processed alert count like following\n```json\n{\n    \"result\": \"success\"\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "remove_alert_api_alert_v1_alerts__alert_id__delete",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "alert_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "maxLength": 36,
                "title": "Alert id",
                "description": "Alert id"
              },
              "description": "Alert id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alerts/{alert_id}/activities": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get activities for an alert",
          "description": "_summary_\n\nReturns\n-------\n_type_\n    _description_\n\nRaises\n------\nAlertBackendException\n    _description_",
          "operationId": "get_activities_api_alert_v1_alerts__alert_id__activities_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "alert_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "maxLength": 36,
                "title": "Alert id",
                "description": "Alert id"
              },
              "description": "Alert id"
            },
            {
              "name": "page_number",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "minimum": 1
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page number",
                "description": "Page number. Default is 1 and it should be greater than 0",
                "default": 1
              },
              "description": "Page number. Default is 1 and it should be greater than 0"
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page size",
                "description": "Page size. Default is 100 and it should be greater than 10 and less than 500",
                "default": 100
              },
              "description": "Page size. Default is 100 and it should be greater than 10 and less than 500"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActivityList"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alert/priorities": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get priorites for alerts",
          "description": "The restful API to get priorities for alerts\n\nReturns\n-------\nList[Priority]",
          "operationId": "get_priorities_api_alert_v1_alert_priorities_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Priority"
                    },
                    "type": "array",
                    "title": "Response Get Priorities Api Alert V1 Alert Priorities Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alert/severities": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get severities for alerts",
          "description": "The restful API to get severities for alerts\n\nReturns\n-------\nList[Severity]",
          "operationId": "get_severities_api_alert_v1_alert_severities_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Severity"
                    },
                    "type": "array",
                    "title": "Response Get Severities Api Alert V1 Alert Severities Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alert/senders": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get senders for alerts",
          "description": "The restful API to get senders for alerts\n\nReturns\n-------\nList[Sender]",
          "operationId": "get_senders_api_alert_v1_alert_senders_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Sender"
                    },
                    "type": "array",
                    "title": "Response Get Senders Api Alert V1 Alert Senders Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/alert/actions": {
        "get": {
          "tags": [
            "alert"
          ],
          "summary": "Get actions for alerts",
          "description": "The restful API to get actions for alerts\n\nReturns\n-------\nList[Action]",
          "operationId": "get_actions_api_alert_v1_alert_actions_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Action"
                    },
                    "type": "array",
                    "title": "Response Get Actions Api Alert V1 Alert Actions Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/events/join/{client_id}": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "Request to join the event stream",
          "description": "A restful API to join the event stream for receiving alert events thru Server-Sent Events\n\nRegarding the user notification settings,\n\nif the user notification settings of the logged in user exists, it will be used to filter the alert events.\nOtherwise, the default user notification settings will be used to filter the alert events.\n\nThe default user notification settings has the following default values:\n- username: logged in user name\n- priorities: [P1, P2, P3]\n\nParameters\n----------\nclient_id : str\n    the unique client id\n\nReturns\n-------\nStreamingResponse\n```json\n    msg = {\n        'id': id,\n        'status': status,\n        'priority': priority,\n        'severity': severity,\n        'cluster': cluster,\n        'repeated_count': repeated_count,\n        'alertname': alertname,\n        'summary': summary,\n        'description': description,\n        'updated_at': updated_at,\n    }\n```\n\nExamples\n-------\n```javascript\nconst UUID = Math.floor(Math.random() * 1000);\nconst newUUID = uuidv4();\nconst eventSource = new EventSource(`https://api.ags.cloudzcp.net/api/alert/v1/events/join/${newUUID}`);\n\neventSource.onmessage = function(event) {\n    console.log(event);\n    const data = JSON.parse(event.data);\n    console.log(data);\n\n    for (let i = 0; i < data.length; i++) {\n        const message = document.createElement(\"p\");\n        message.textContent = `[${data[i].updated_at}](${data[i].status}:${data[i].priority}) ${data[i].id} ${data[i].repeated_count}times repeated ${data[i].summary} - ${data[i].description}`;\n        document.getElementById(\"messages\").appendChild(message);\n    }\n};\n```",
          "operationId": "sse_endpoint_api_alert_v1_events_join__client_id__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "client_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Client Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channels": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get channels",
          "description": "A restful API to get channels\n\nReturns\n-------\nChannelList",
          "operationId": "get_channels_api_alert_v1_channels_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "channel name",
                "description": "Search query string for name. The max length is 100"
              },
              "description": "Search query string for name. The max length is 100"
            },
            {
              "name": "types",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChannelType"
                },
                "title": "channel type",
                "description": "Search query string for type"
              },
              "description": "Search query string for type"
            },
            {
              "name": "sort_field",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChannelSortField"
                  }
                ],
                "title": "sort field",
                "description": "Sort field name",
                "default": "name"
              },
              "description": "Sort field name"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortDirection"
                  }
                ],
                "title": "sort direction",
                "description": "Sort direction",
                "default": "asc"
              },
              "description": "Sort direction"
            },
            {
              "name": "page_number",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "minimum": 1
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page number",
                "description": "Page number. Default is 1 and it should be greater than 0",
                "default": 1
              },
              "description": "Page number. Default is 1 and it should be greater than 0"
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 10
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page size",
                "description": "Page size. Default is 10 and it should be greater than 10 and less than 500",
                "default": 10
              },
              "description": "Page size. Default is 10 and it should be greater than 10 and less than 500"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ChannelList"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "channel"
          ],
          "summary": "Create a channel",
          "description": "A restful API to create a channel\n\nParameters\n----------\nchannel_create_request : ChannelCreateRequest\n\nReturns\n-------\nResponseModel\n    Returns a response model like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": {\n        \"inserted_id\": \"5f0b5b8b-2f7e-4e4b-9c9d-5a4f9b8e2c3d\"\n    }\n}\n```",
          "operationId": "create_channel_api_alert_v1_channels_post",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelCreateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "channel"
          ],
          "summary": "Modify a channel",
          "description": "A restful API to modify a channel\n\nParameters\n----------\nchannel_update_request : ChannelUpdateRequest\n\nReturns\n-------\nChannel",
          "operationId": "modify_channel_api_alert_v1_channels_put",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelUpdateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channels/all/combo": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get channels for combo box",
          "description": "A restful API to get all channels\n\nReturns\n-------\nChannelList",
          "operationId": "get_all_channels_api_alert_v1_channels_all_combo_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array",
                    "title": "Response Get All Channels Api Alert V1 Channels All Combo Get"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/channels/send_test_message": {
        "post": {
          "tags": [
            "channel"
          ],
          "summary": "Send a test message to the channel",
          "description": "A restful API to create a channel\n\nParameters\n----------\nchannel_create_request : ChannelCreateRequest\n\nReturns\n-------\nResponseModel\n    Returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "send_test_message_api_alert_v1_channels_send_test_message_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/channels/{channel_id}": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get a channel",
          "description": "A restful API to get a channel\n\nParameters\n----------\nchannel_id : str\n\nReturns\n-------\nChannel",
          "operationId": "get_channel_api_alert_v1_channels__channel_id__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "channel_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Channel Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Channel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "channel"
          ],
          "summary": "Remove a channel",
          "description": "A restful API to remove a channel\n\nParameters\n----------\nchannel_id : str\n\nReturns\n-------\nResponseModel\n    Returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "remove_channel_api_alert_v1_channels__channel_id__delete",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "channel_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Channel Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channels/external/kakao/oauth/callback": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "The redirect URI after the Kakao OAuth login",
          "description": "The redirect URI after the Kakao OAuth login\n\nParameters\n----------\nrequest : Request\n    The request object\n\ncode : str\n    The code from the Kakao OAuth login\n\nReturns\n-------\nHTMLResponse",
          "operationId": "kakao_oauth_callback_api_alert_v1_channels_external_kakao_oauth_callback_get",
          "parameters": [
            {
              "name": "code",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "title": "code",
                "description": "The code from the Kakao OAuth login"
              },
              "description": "The code from the Kakao OAuth login"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channels/kakao/oauth/login": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Redirect to the Kakao OAuth login page",
          "description": "Redirect to the Kakao OAuth login page\n\nParameters\n----------\nclient_id : str, optional\n    by default Query( max_length=300,\n    title=\"client_id is the REST API KEY of Kakao Developer App\",\n    description=\"Search query string for client_id. The max length is 300\" )\n\nReturns\n-------\nRedirectResponse",
          "operationId": "kakao_oauth_login_api_alert_v1_channels_kakao_oauth_login_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "client_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "maxLength": 300,
                "title": "client_id is the REST API KEY of Kakao Developer App",
                "description": "Search query string for client_id. The max length is 300"
              },
              "description": "Search query string for client_id. The max length is 300"
            }
          ],
          "responses": {
            "307": {
              "description": "Successful Response"
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channels/kakao/friends": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get Kakao friends of the code owner",
          "description": "Get Kakao friends of the code owner\n\nParameters\n----------\nkakao_friends_request : KakaoFriendsRequest\n\nReturns\n-------\nList[KakaoFriend]",
          "operationId": "get_kakao_friends_api_alert_v1_channels_kakao_friends_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "channel_id",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "title": "channel_id",
                "description": "Search query string for channel_id"
              },
              "description": "Search query string for channel_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/KakaoTalkFriend"
                    },
                    "title": "Response Get Kakao Friends Api Alert V1 Channels Kakao Friends Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channel/supported": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get channel types",
          "description": "A restful API to get channel types",
          "operationId": "get_supported_channel_types_api_alert_v1_channel_supported_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/ChannelType"
                    },
                    "type": "array",
                    "title": "Response Get Supported Channel Types Api Alert V1 Channel Supported Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/channel/kakao/urls": {
        "get": {
          "tags": [
            "channel"
          ],
          "summary": "Get related domains for Kakao",
          "description": "A restful API to get related domains for Kakao",
          "operationId": "get_related_domains_for_kakao_api_alert_v1_channel_kakao_urls_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Related Domains For Kakao Api Alert V1 Channel Kakao Urls Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/integrations": {
        "get": {
          "tags": [
            "integration"
          ],
          "summary": "Get integrations",
          "description": "A restful API to get integrations",
          "operationId": "get_integrations_api_alert_v1_integrations_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "channel name",
                "description": "Search query string for name. The max length is 100"
              },
              "description": "Search query string for name. The max length is 100"
            },
            {
              "name": "channel_name",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "channel name",
                "description": "Search query string for channel name. The max length is 100"
              },
              "description": "Search query string for channel name. The max length is 100"
            },
            {
              "name": "channel_type",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChannelType"
                  }
                ],
                "title": "channel type",
                "description": "Search query string for channel type."
              },
              "description": "Search query string for channel type."
            },
            {
              "name": "status",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntegrationStatus"
                  }
                ],
                "title": "integration status",
                "description": "Search query string for status"
              },
              "description": "Search query string for status"
            },
            {
              "name": "sort_field",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntegrationSortField"
                  }
                ],
                "title": "sort field",
                "description": "Sort field name",
                "default": "name"
              },
              "description": "Sort field name"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortDirection"
                  }
                ],
                "title": "sort direction",
                "description": "Sort direction",
                "default": "asc"
              },
              "description": "Sort direction"
            },
            {
              "name": "page_number",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "minimum": 1
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page number",
                "description": "Page number. Default is 1 and it should be greater than 0",
                "default": 1
              },
              "description": "Page number. Default is 1 and it should be greater than 0"
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 10
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page size",
                "description": "Page size. Default is 10 and it should be greater than 10 and less than 500",
                "default": 10
              },
              "description": "Page size. Default is 10 and it should be greater than 10 and less than 500"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IntegrationList"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "integration"
          ],
          "summary": "Create an integration",
          "description": "A restful API to create an integration\n\nParameters\n----------\nintegration : Integration\n\nReturns\n-------\nResponseModel\n    Returns a response model like following\n\n```json\n{\n    \"result\": \"success\",\n    \"data\": {\n        \"inserted_id\": \"5f0b5b8b-2f7e-4e4b-9c9d-5a4f9b8e2c3d\"\n    }\n}\n```",
          "operationId": "create_integration_api_alert_v1_integrations_post",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCreateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "integration"
          ],
          "summary": "Modify an integration",
          "description": "A restful API to modify an integration\n\nParameters\n----------\nintegration : Integration\n\nReturns\n-------\nIntegration",
          "operationId": "modify_integration_api_alert_v1_integrations_put",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUpdateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/integrations/all/combo": {
        "get": {
          "tags": [
            "integration"
          ],
          "summary": "Get all integrations for combo",
          "description": "A restful API to get integrations",
          "operationId": "get_all_integrations_api_alert_v1_integrations_all_combo_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "type": "object"
                    },
                    "type": "array",
                    "title": "Response Get All Integrations Api Alert V1 Integrations All Combo Get"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/integrations/{integration_id}": {
        "get": {
          "tags": [
            "integration"
          ],
          "summary": "Get an integration",
          "description": "A restful API to get an integration\n\nParameters\n----------\nintegration_id : str\n\nReturns\n-------\nIntegration",
          "operationId": "get_integration_api_alert_v1_integrations__integration_id__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "integration_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Integration Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "integration"
          ],
          "summary": "Remove an integration",
          "description": "A restful API to remove an integration\n\nParameters\n----------\nintegration_id : str\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "remove_integration_api_alert_v1_integrations__integration_id__delete",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "integration_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Integration Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/integrations/{integration_id}/status/{status}": {
        "patch": {
          "tags": [
            "integration"
          ],
          "summary": "Patch an integration status",
          "description": "A restful API to patch an integration status\n\nParameters\n----------\nintegration_id : str, optional\n    by default Path(..., title=\"Integration id\", description=\"Alert id\")\n\nstatus : IntegrationStatus, optional\n    by default Path(..., title=\"Integration status\", description=\"Integration status\")\n\nReturns\n-------\nIntegration",
          "operationId": "modify_integration_status_api_alert_v1_integrations__integration_id__status__status__patch",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "integration_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Integration id",
                "description": "Alert id"
              },
              "description": "Alert id"
            },
            {
              "name": "status",
              "in": "path",
              "required": true,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntegrationStatus"
                  }
                ],
                "title": "Integration status",
                "description": "Integration status"
              },
              "description": "Integration status"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/integration/filters": {
        "get": {
          "tags": [
            "integration"
          ],
          "summary": "Get filters for integrations",
          "description": "A restful API to get filters for integrations\n\nReturns\n-------\nList[Filter]",
          "operationId": "get_integration_filters_api_alert_v1_integration_filters_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/Filter"
                    },
                    "type": "array",
                    "title": "Response Get Integration Filters Api Alert V1 Integration Filters Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/integration/filters/modes": {
        "get": {
          "tags": [
            "integration"
          ],
          "summary": "Get filter modes for integrations",
          "description": "A restful API to get filters for integrations\n\nReturns\n-------\nList[Filter]",
          "operationId": "get_integration_filter_modes_api_alert_v1_integration_filters_modes_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/FilterMode"
                    },
                    "type": "array",
                    "title": "Response Get Integration Filter Modes Api Alert V1 Integration Filters Modes Get"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/silences": {
        "get": {
          "tags": [
            "silence"
          ],
          "summary": "Get silences",
          "description": "A restful API to get silences\n\nReturns\n-------\nSilenceList\n    Returns a silence list which filtered by the parameters",
          "operationId": "get_silences_api_alert_v1_silences_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "silence name",
                "description": "Search query string for name. The max length is 100"
              },
              "description": "Search query string for name. The max length is 100"
            },
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SilenceStatus"
                },
                "title": "silence type",
                "description": "Search query string for status"
              },
              "description": "Search query string for status"
            },
            {
              "name": "integration_id",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string",
                    "maxLength": 100
                  },
                  {
                    "type": null
                  }
                ],
                "title": "integration id",
                "description": "Search query string for integration id. The max length is 100"
              },
              "description": "Search query string for integration id. The max length is 100"
            },
            {
              "name": "sort_field",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SilenceSortField"
                  }
                ],
                "title": "sort field",
                "description": "Sort field name",
                "default": "name"
              },
              "description": "Sort field name"
            },
            {
              "name": "sort_direction",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SortDirection"
                  }
                ],
                "title": "sort direction",
                "description": "Sort direction",
                "default": "asc"
              },
              "description": "Sort direction"
            },
            {
              "name": "page_number",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "minimum": 1
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page number",
                "description": "Page number. Default is 1 and it should be greater than 0",
                "default": 1
              },
              "description": "Page number. Default is 1 and it should be greater than 0"
            },
            {
              "name": "page_size",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 10
                  },
                  {
                    "type": null
                  }
                ],
                "title": "page size",
                "description": "Page size. Default is 10 and it should be greater than 10 and less than 500",
                "default": 10
              },
              "description": "Page size. Default is 10 and it should be greater than 10 and less than 500"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SilenceList"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "silence"
          ],
          "summary": "Create a silence",
          "description": "A restful API to create a silence\n\nParameters\n----------\nsilence : Silence\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\",\n    \"data\": {\n        \"inserted_id\": \"5f0a0e5e6d1e6f0001e4b4f3\"\n    }\n}\n```",
          "operationId": "create_silence_api_alert_v1_silences_post",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SilenceCreateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "silence"
          ],
          "summary": "Modify a silence",
          "description": "A restful API to modify a silence\n\nParameters\n----------\nsilence : Silence\n\nReturns\n-------\nSilence",
          "operationId": "modify_silence_api_alert_v1_silences_put",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SilenceUpdateRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Silence"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/silences/{silence_id}": {
        "get": {
          "tags": [
            "silence"
          ],
          "summary": "Get a silence",
          "description": "A restful API to get a silence\n\nParameters\n----------\nsilence_id : str\n\nReturns\n-------\nSilence",
          "operationId": "get_silence_api_alert_v1_silences__silence_id__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "silence_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Silence Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Silence"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "silence"
          ],
          "summary": "Remove a silence",
          "description": "A restful API to remove a silence\n\nParameters\n----------\nsilence_id : str\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "remove_silence_api_alert_v1_silences__silence_id__delete",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "silence_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Silence Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/by/status": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get number of alerts by status",
          "operationId": "get_number_of_alert_by_status_api_alert_v1_report_alerts_by_status_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "exclude_closed",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "exclude closed",
                "description": "Exclude closed alerts",
                "default": false
              },
              "description": "Exclude closed alerts"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Number Of Alert By Status Api Alert V1 Report Alerts By Status Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/by/priority": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get number of alerts by priority",
          "operationId": "get_number_of_alert_by_priority_api_alert_v1_report_alerts_by_priority_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "exclude_closed",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "exclude closed",
                "description": "Exclude closed alerts",
                "default": false
              },
              "description": "Exclude closed alerts"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Number Of Alert By Priority Api Alert V1 Report Alerts By Priority Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/by/alertname": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get number of alerts by alertname",
          "operationId": "get_number_of_alert_by_alertname_api_alert_v1_report_alerts_by_alertname_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "exclude_closed",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "exclude closed",
                "description": "Exclude closed alerts",
                "default": false
              },
              "description": "Exclude closed alerts"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Number Of Alert By Alertname Api Alert V1 Report Alerts By Alertname Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/by/cluster": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get number of alerts by cluster",
          "operationId": "get_number_of_alert_by_cluster_api_alert_v1_report_alerts_by_cluster_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "exclude_closed",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "exclude closed",
                "description": "Exclude closed alerts",
                "default": false
              },
              "description": "Exclude closed alerts"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Number Of Alert By Cluster Api Alert V1 Report Alerts By Cluster Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/by/label": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get number of alerts by label with limit",
          "operationId": "get_number_of_alert_by_label_api_alert_v1_report_alerts_by_label_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "label",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "title": "label",
                "description": "Label to filter"
              },
              "description": "Label to filter"
            },
            {
              "name": "exclude_closed",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "exclude closed",
                "description": "Exclude closed alerts",
                "default": false
              },
              "description": "Exclude closed alerts"
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "limit",
                "description": "Limit the number of results",
                "default": 10
              },
              "description": "Limit the number of results"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    },
                    "title": "Response Get Number Of Alert By Label Api Alert V1 Report Alerts By Label Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/trend/by/priority": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get alert count trend by priority",
          "operationId": "get_alert_trend_data_by_priority_api_alert_v1_report_alerts_trend_by_priority_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "start_date",
                "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
              },
              "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "end_date",
                "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
              },
              "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Alert Trend Data By Priority Api Alert V1 Report Alerts Trend By Priority Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/mttar/counts": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get alert count regarding MTTA and MTTR (created, closed)",
          "operationId": "get_number_of_alert_mttar_api_alert_v1_report_alerts_mttar_counts_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "start_date",
                "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
              },
              "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "end_date",
                "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
              },
              "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Number Of Alert Mttar Api Alert V1 Report Alerts Mttar Counts Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/mttar": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get alert MTTA and MTTR. Returns the mean time to acknowledge and resolve alerts in minutes",
          "operationId": "get_alert_mttar_api_alert_v1_report_alerts_mttar_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "start_date",
                "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
              },
              "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "end_date",
                "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
              },
              "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Alert Mttar Api Alert V1 Report Alerts Mttar Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/mtta/trend": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get alert MTTA trend data",
          "operationId": "get_alert_mtta_trend_data_api_alert_v1_report_alerts_mtta_trend_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "start_date",
                "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
              },
              "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "end_date",
                "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
              },
              "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Alert Mtta Trend Data Api Alert V1 Report Alerts Mtta Trend Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/report/alerts/mttr/trend": {
        "get": {
          "tags": [
            "report"
          ],
          "summary": "Get alert MTTR trend data",
          "operationId": "get_alert_mttr_trend_data_api_alert_v1_report_alerts_mttr_trend_get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "start_date",
                "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
              },
              "description": "Start date to filter (ISO 8601 format(e.g. 2024-11-01T00:00:00.000+09:00))"
            },
            {
              "name": "end_date",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
                "title": "end_date",
                "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
              },
              "description": "End date to filter (ISO 8601 format(e.g. 2024-11-31T23:59:59.000+09:00))"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "title": "Response Get Alert Mttr Trend Data Api Alert V1 Report Alerts Mttr Trend Get"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/notification_settings": {
        "get": {
          "tags": [
            "notification setttings"
          ],
          "summary": "Get notification settings of logged in user",
          "description": "Get notification settings of logged in user.\nThe information of the logged in user is retrieved from the token data.\n\nIf the user notification settings exists, it will be returned.\nOtherwise, it will return an default user notification settings.\n\nIt has the following default values:\n- username: logged in user name\n- priorities: [P1, P2, P3]\n\nParameters\n----------\n\nReturns\n-------\nUserNotificationSettings",
          "operationId": "get_user_notification_settings_api_alert_v1_notification_settings_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserNotificationSettings"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        },
        "post": {
          "tags": [
            "notification setttings"
          ],
          "summary": "Create or update a notification settings of logged in user",
          "description": "Create or update a user notification settings.\n\nIf the user notification settings already exist, it will be updated.\n\nOtherwise, it will be created.\n\nParameters\n----------\nuser_notification_setttngs_request : UserNotificationSettingsRequest\n\nReturns\n-------\nUserNotificationSettings",
          "operationId": "update_user_notification_settings_api_alert_v1_notification_settings_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserNotificationSettingsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserNotificationSettings"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/admin/integration/cache": {
        "get": {
          "tags": [
            "management"
          ],
          "summary": "Get cached integrations",
          "description": "A restful API to get cached integrations\n\nParameters\n----------\n\nReturns\n-------\nDict[str, Integration]\n\nRaises\n------\nAlertBackendException",
          "operationId": "get_cached_integrations_api_alert_v1_admin_integration_cache_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Integration"
                    },
                    "type": "object",
                    "title": "Response Get Cached Integrations Api Alert V1 Admin Integration Cache Get"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/admin/integration/cache/refresh": {
        "put": {
          "tags": [
            "management"
          ],
          "summary": "Refresh cached integrations",
          "description": "A restful API to refresh cached integrations\n\nParameters\n----------\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```\n\nRaises\n------\nAlertBackendException",
          "operationId": "refresh_cached_integrations_api_alert_v1_admin_integration_cache_refresh_put",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/basic_auth_users": {
        "get": {
          "tags": [
            "basic auth user"
          ],
          "summary": "Get basic auth users",
          "description": "Parameters\n----------\noauth_user : TokenData, optional\n\nReturns\n-------\nList[BasicAuthUser]",
          "operationId": "get_basic_auth_users_api_alert_v1_basic_auth_users_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/BasicAuthUser"
                    },
                    "type": "array",
                    "title": "Response Get Basic Auth Users Api Alert V1 Basic Auth Users Get"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        },
        "put": {
          "tags": [
            "basic auth user"
          ],
          "summary": "Modify a basic_auth_user",
          "description": "A restful API to modify a basic_auth_user\n\nParameters\n----------\nbasic_auth_user : BasicAuthUser\n\nReturns\n-------\nBasicAuthUser",
          "operationId": "modify_basic_auth_user_api_alert_v1_basic_auth_users_put",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicAuthUserUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BasicAuthUser"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        },
        "post": {
          "tags": [
            "basic auth user"
          ],
          "summary": "Create a basic auth user",
          "description": "A restful API to create a basic_auth_user\n\nParameters\n----------\nbasic_auth_user : BasicAuthUser\noauth_user : TokenData, optional\n\nReturns\n-------\nResponseModel",
          "operationId": "create_basic_auth_user_api_alert_v1_basic_auth_users_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicAuthUserCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/basic_auth_users/{username}": {
        "get": {
          "tags": [
            "basic auth user"
          ],
          "summary": "Get a basic auth user by username",
          "description": "A restful API to get a basic_auth_user\n\nParameters\n----------\nusername : str\n\nReturns\n-------\nBasicAuthUser",
          "operationId": "get_basic_auth_user_by_username_api_alert_v1_basic_auth_users__username__get",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Username"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BasicAuthUser"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/basic_auth_users/{id}": {
        "delete": {
          "tags": [
            "basic auth user"
          ],
          "summary": "Remove a basic auth user",
          "description": "A restful API to remove a basic_auth_user\n\nParameters\n----------\nid : str\n\nReturns\n-------\nResponseModel\n    returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "remove_basic_auth_user_api_alert_v1_basic_auth_users__id__delete",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/healthz": {
        "get": {
          "tags": [
            "healthy"
          ],
          "summary": "Health Check",
          "description": "A restful API to check the health of the service\n\nReturns\n-------\nResponseModel\n    Returns a response model like following\n```json\n{\n    \"result\": \"success\"\n}\n```",
          "operationId": "healthz_healthz_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseModel"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/home": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "Home page",
          "operationId": "home_api_alert_v1_home_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/login": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "API to login into the keyclaok using the browser",
          "operationId": "login_api_alert_v1_login_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/logout": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "Logout",
          "operationId": "logout_api_alert_v1_logout_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/oauth2/logout": {
        "post": {
          "tags": [
            "test auth"
          ],
          "summary": "Logout Only Oauth",
          "operationId": "logout_only_oauth_api_alert_v1_oauth2_logout_post",
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ],
          "parameters": [
            {
              "name": "refresh_token",
              "in": "query",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": null
                  }
                ],
                "title": "Refresh Token"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/oauth2/callback": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "Keycloak OAuth2 callback for the redirect URI",
          "operationId": "callback_api_alert_v1_oauth2_callback_get",
          "parameters": [
            {
              "name": "code",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Code"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/api/alert/v1/users/me": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "Get the current user info from IDP(Keycloak)",
          "operationId": "read_users_me_api_alert_v1_users_me_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      },
      "/api/alert/v1/users/oauth_user": {
        "get": {
          "tags": [
            "test auth"
          ],
          "summary": "Get the current user info from Token",
          "operationId": "read_oauth_user_api_alert_v1_users_oauth_user_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {}
                }
              }
            }
          },
          "security": [
            {
              "OAuth2AuthorizationCodeBearer": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Action": {
          "type": "string",
          "enum": [
            "ack",
            "unack",
            "snooze",
            "close",
            "wakeup"
          ],
          "title": "Action",
          "description": "Action of the alert. It can be ack, unack, snooze, close"
        },
        "ActivityList": {
          "properties": {
            "current_page": {
              "type": "integer",
              "minimum": 1,
              "title": "Current Page",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "maximum": 500,
              "minimum": 10,
              "title": "Page Size",
              "default": 10
            },
            "total": {
              "type": "integer",
              "minimum": 0,
              "title": "Total",
              "default": 0
            },
            "data": {
              "items": {
                "$ref": "#/components/schemas/AlertActivity"
              },
              "type": "array",
              "title": "Data"
            }
          },
          "type": "object",
          "required": [
            "data"
          ],
          "title": "ActivityList",
          "description": "Activity list model for alert"
        },
        "Alert": {
          "properties": {
            "sender": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sender"
                },
                {
                  "type": null
                }
              ]
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Labels"
            },
            "annotations": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Annotations"
            },
            "startsAt": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": null
                }
              ],
              "title": "Startsat"
            },
            "endsAt": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": null
                }
              ],
              "title": "Endsat"
            },
            "generatorURL": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Generatorurl"
            },
            "fingerprint": {
              "type": "string",
              "title": "Fingerprint"
            }
          },
          "type": "object",
          "required": [
            "status",
            "labels",
            "fingerprint"
          ],
          "title": "Alert",
          "description": "Alert payload specification\n\nref:\nhttps://prometheus.io/docs/alerting/latest/notifications/"
        },
        "AlertActionRequest": {
          "properties": {
            "alert_id": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Id"
            },
            "asis_status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AlertStatus"
                },
                {
                  "type": null
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "alert_id",
            "asis_status"
          ],
          "title": "AlertActionRequest",
          "description": "Alert action request model for the restful api which patch alert status"
        },
        "AlertActivity": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "alert_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Id"
            },
            "action": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Action"
                },
                {
                  "type": null
                }
              ]
            },
            "user": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "User"
            },
            "description": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Description"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "AlertActivity",
          "description": "Alert activity log model"
        },
        "AlertData": {
          "properties": {
            "receiver": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Receiver"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Status"
                },
                {
                  "type": null
                }
              ]
            },
            "alerts": {
              "items": {
                "$ref": "#/components/schemas/Alert"
              },
              "type": "array",
              "title": "Alerts"
            },
            "groupLabels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Grouplabels"
            },
            "commonLabels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Commonlabels"
            },
            "commonAnnotations": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Commonannotations"
            },
            "externalURL": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Externalurl"
            },
            "version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Version"
            },
            "groupKey": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Groupkey"
            }
          },
          "type": "object",
          "required": [
            "alerts"
          ],
          "title": "AlertData",
          "description": "Alert Data payload specification\n\nref:\nhttps://prometheus.io/docs/alerting/latest/notifications/"
        },
        "AlertSortField": {
          "type": "string",
          "enum": [
            "sender",
            "status",
            "repeated_count",
            "alertname",
            "summary",
            "priority",
            "severity",
            "created_at",
            "updated_at",
            "closed_at",
            "acknowledged_at"
          ],
          "title": "AlertSortField"
        },
        "AlertStatus": {
          "type": "string",
          "enum": [
            "Open",
            "Closed",
            "Snoozed",
            "Acked"
          ],
          "title": "AlertStatus",
          "description": "Alert status. It can be Open, Closed, Snoozed, Acked"
        },
        "AuthenticationType": {
          "type": "string",
          "enum": [
            "None",
            "Basic",
            "Bearer"
          ],
          "title": "AuthenticationType",
          "description": "Authentication type model"
        },
        "BasicAuthUser": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "password": {
              "type": "string",
              "title": "Password"
            },
            "modifier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Modifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "username",
            "password"
          ],
          "title": "BasicAuthUser"
        },
        "BasicAuthUserCreateRequest": {
          "properties": {
            "username": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 3
                },
                {
                  "type": null
                }
              ],
              "title": "Username"
            },
            "password": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                {
                  "type": null
                }
              ],
              "title": "Password"
            }
          },
          "type": "object",
          "required": [
            "username",
            "password"
          ],
          "title": "BasicAuthUserCreateRequest"
        },
        "BasicAuthUserUpdateRequest": {
          "properties": {
            "username": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 3
                },
                {
                  "type": null
                }
              ],
              "title": "Username"
            },
            "password": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100,
                  "minLength": 8
                },
                {
                  "type": null
                }
              ],
              "title": "Password"
            },
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "username",
            "password",
            "id"
          ],
          "title": "BasicAuthUserUpdateRequest"
        },
        "Channel": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/ChannelType"
            },
            "type_properties": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/components/schemas/WebhookChannel"
                },
                {
                  "$ref": "#/components/schemas/SlackChannel"
                },
                {
                  "$ref": "#/components/schemas/MSTeamsChannel"
                },
                {
                  "$ref": "#/components/schemas/GoogleChatChannel"
                },
                {
                  "$ref": "#/components/schemas/KakaoTalkChannel"
                },
                {
                  "$ref": "#/components/schemas/EmailChannel"
                },
                {
                  "type": null
                }
              ],
              "title": "Type Properties"
            },
            "modifier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Modifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "name",
            "type",
            "type_properties"
          ],
          "title": "Channel",
          "description": "Alert Channel model"
        },
        "ChannelCreateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "minLength": 3,
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/ChannelType"
            },
            "type_properties": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/components/schemas/WebhookChannel"
                },
                {
                  "$ref": "#/components/schemas/SlackChannel"
                },
                {
                  "$ref": "#/components/schemas/MSTeamsChannel"
                },
                {
                  "$ref": "#/components/schemas/GoogleChatChannel"
                },
                {
                  "$ref": "#/components/schemas/KakaoTalkChannel"
                },
                {
                  "$ref": "#/components/schemas/EmailChannel"
                }
              ],
              "title": "Type Properties"
            }
          },
          "type": "object",
          "required": [
            "name",
            "type",
            "type_properties"
          ],
          "title": "ChannelCreateRequest",
          "description": "Channel request model for the restful api"
        },
        "ChannelList": {
          "properties": {
            "current_page": {
              "type": "integer",
              "minimum": 1,
              "title": "Current Page",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "maximum": 500,
              "minimum": 10,
              "title": "Page Size",
              "default": 10
            },
            "total": {
              "type": "integer",
              "minimum": 0,
              "title": "Total",
              "default": 0
            },
            "data": {
              "items": {
                "$ref": "#/components/schemas/Channel"
              },
              "type": "array",
              "title": "Data"
            }
          },
          "type": "object",
          "required": [
            "data"
          ],
          "title": "ChannelList",
          "description": "Channel list model for alert"
        },
        "ChannelSortField": {
          "type": "string",
          "enum": [
            "name",
            "type",
            "created_at",
            "updated_at"
          ],
          "title": "ChannelSortField"
        },
        "ChannelType": {
          "type": "string",
          "enum": [
            "Webhook",
            "Slack",
            "MSTeams",
            "GoogleChat",
            "Kakaotalk",
            "Email"
          ],
          "title": "ChannelType",
          "description": "Channel Type model for alert"
        },
        "ChannelUpdateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "minLength": 3,
              "title": "Name"
            },
            "type": {
              "$ref": "#/components/schemas/ChannelType"
            },
            "type_properties": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "$ref": "#/components/schemas/WebhookChannel"
                },
                {
                  "$ref": "#/components/schemas/SlackChannel"
                },
                {
                  "$ref": "#/components/schemas/MSTeamsChannel"
                },
                {
                  "$ref": "#/components/schemas/GoogleChatChannel"
                },
                {
                  "$ref": "#/components/schemas/KakaoTalkChannel"
                },
                {
                  "$ref": "#/components/schemas/EmailChannel"
                }
              ],
              "title": "Type Properties"
            },
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "name",
            "type",
            "type_properties",
            "id"
          ],
          "title": "ChannelUpdateRequest"
        },
        "EmailChannel": {
          "properties": {
            "smtp_server": {
              "type": "string",
              "maxLength": 300,
              "title": "Smtp Server"
            },
            "smtp_port": {
              "type": "integer",
              "maximum": 65535,
              "minimum": 1,
              "title": "Smtp Port",
              "default": 587
            },
            "smtp_user": {
              "type": "string",
              "maxLength": 100,
              "title": "Smtp User"
            },
            "smtp_password": {
              "type": "string",
              "maxLength": 100,
              "title": "Smtp Password"
            },
            "smtp_tls": {
              "type": "boolean",
              "title": "Smtp Tls",
              "default": true
            },
            "smtp_ssl": {
              "type": "boolean",
              "title": "Smtp Ssl",
              "default": false
            },
            "from_email": {
              "type": "string",
              "maxLength": 100,
              "title": "From Email"
            },
            "from_display_name": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100
                },
                {
                  "type": null
                }
              ],
              "title": "From Display Name"
            },
            "to_emails": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "To Emails"
            }
          },
          "type": "object",
          "required": [
            "smtp_server",
            "smtp_user",
            "smtp_password",
            "from_email",
            "to_emails"
          ],
          "title": "EmailChannel",
          "description": "Email Channel Config model"
        },
        "Filter": {
          "properties": {
            "key": {
              "$ref": "#/components/schemas/FilterKey"
            },
            "value_type": {
              "$ref": "#/components/schemas/FilterValueType"
            },
            "value": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Value"
            },
            "is_equal": {
              "type": "boolean",
              "title": "Is Equal",
              "default": true
            },
            "operator": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Operator"
                },
                {
                  "items": {
                    "$ref": "#/components/schemas/Operator"
                  },
                  "type": "array"
                }
              ],
              "title": "Operator"
            },
            "user_label_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "User Label Key"
            }
          },
          "type": "object",
          "required": [
            "key",
            "value_type",
            "operator"
          ],
          "title": "Filter"
        },
        "FilterKey": {
          "type": "string",
          "enum": [
            "summary",
            "description",
            "project",
            "priority",
            "severity",
            "cluster",
            "namespace",
            "user_label",
            "sender",
            "repeated_count"
          ],
          "title": "FilterKey"
        },
        "FilterMode": {
          "type": "string",
          "enum": [
            "All-Alerts",
            "MatchAny",
            "MatchAll"
          ],
          "title": "FilterMode",
          "description": "Filter mode model"
        },
        "FilterValueType": {
          "type": "string",
          "enum": [
            "Text",
            "MultiText",
            "Number",
            "SingleSelect",
            "MultiSelect",
            "Regex"
          ],
          "title": "FilterValueType"
        },
        "GoogleChatChannel": {
          "properties": {
            "api_url": {
              "type": "string",
              "maxLength": 1000,
              "title": "Api Url"
            },
            "space_name": {
              "type": "string",
              "maxLength": 100,
              "title": "Space Name"
            }
          },
          "type": "object",
          "required": [
            "api_url",
            "space_name"
          ],
          "title": "GoogleChatChannel",
          "description": "Google Chat Channel Config model"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "Integration": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "channel": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/Channel"
                },
                {
                  "type": null
                }
              ],
              "title": "Channel"
            },
            "message_template": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Message Template"
            },
            "alert_actions": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Action"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Actions"
            },
            "filter_mode": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FilterMode"
                }
              ],
              "default": "All-Alerts"
            },
            "alert_filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Filter"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Filters"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationStatus"
                },
                {
                  "type": null
                }
              ]
            },
            "modifier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Modifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Integration",
          "description": "Alert Channel Integration model"
        },
        "IntegrationCreateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "minLength": 3,
              "title": "Name"
            },
            "channel": {
              "type": "string",
              "maxLength": 100,
              "title": "Channel"
            },
            "alert_actions": {
              "items": {
                "$ref": "#/components/schemas/Action"
              },
              "type": "array",
              "title": "Alert Actions"
            },
            "filter_mode": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FilterMode"
                }
              ],
              "default": "All-Alerts"
            },
            "alert_filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Filter"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Filters"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationStatus"
                },
                {
                  "type": null
                }
              ],
              "default": "Off"
            }
          },
          "type": "object",
          "required": [
            "name",
            "channel",
            "alert_actions"
          ],
          "title": "IntegrationCreateRequest"
        },
        "IntegrationList": {
          "properties": {
            "current_page": {
              "type": "integer",
              "minimum": 1,
              "title": "Current Page",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "maximum": 500,
              "minimum": 10,
              "title": "Page Size",
              "default": 10
            },
            "total": {
              "type": "integer",
              "minimum": 0,
              "title": "Total",
              "default": 0
            },
            "data": {
              "items": {
                "$ref": "#/components/schemas/Integration"
              },
              "type": "array",
              "title": "Data"
            }
          },
          "type": "object",
          "required": [
            "data"
          ],
          "title": "IntegrationList",
          "description": "Integration list model for alert"
        },
        "IntegrationSortField": {
          "type": "string",
          "enum": [
            "name",
            "channel_name",
            "channel_type",
            "status",
            "created_at",
            "updated_at"
          ],
          "title": "IntegrationSortField"
        },
        "IntegrationStatus": {
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "title": "IntegrationStatus",
          "description": "Integration status model"
        },
        "IntegrationUpdateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "minLength": 3,
              "title": "Name"
            },
            "channel": {
              "type": "string",
              "maxLength": 100,
              "title": "Channel"
            },
            "alert_actions": {
              "items": {
                "$ref": "#/components/schemas/Action"
              },
              "type": "array",
              "title": "Alert Actions"
            },
            "filter_mode": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/FilterMode"
                }
              ],
              "default": "All-Alerts"
            },
            "alert_filters": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Filter"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Alert Filters"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationStatus"
                },
                {
                  "type": null
                }
              ],
              "default": "Off"
            },
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "name",
            "channel",
            "alert_actions",
            "id"
          ],
          "title": "IntegrationUpdateRequest"
        },
        "KakaoTalkChannel": {
          "properties": {
            "auth_code": {
              "type": "string",
              "maxLength": 500,
              "title": "Auth Code"
            },
            "app_name": {
              "type": "string",
              "maxLength": 100,
              "title": "App Name"
            },
            "client_id": {
              "type": "string",
              "maxLength": 300,
              "title": "Client Id"
            },
            "client_secret": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 300
                },
                {
                  "type": null
                }
              ],
              "title": "Client Secret"
            }
          },
          "type": "object",
          "required": [
            "auth_code",
            "app_name",
            "client_id"
          ],
          "title": "KakaoTalkChannel",
          "description": "Kakao Channel Config model"
        },
        "KakaoTalkFriend": {
          "properties": {
            "profile_nickname": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Profile Nickname"
            },
            "profile_thumbnail_image": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Profile Thumbnail Image"
            },
            "allowed_msg": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": null
                }
              ],
              "title": "Allowed Msg",
              "default": false
            },
            "id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": null
                }
              ],
              "title": "Id"
            },
            "uuid": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Uuid"
            },
            "favorite": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": null
                }
              ],
              "title": "Favorite",
              "default": false
            }
          },
          "type": "object",
          "title": "KakaoTalkFriend",
          "description": "Kakao friend response model for the restful api"
        },
        "MSTeamsChannel": {
          "properties": {
            "api_url": {
              "type": "string",
              "maxLength": 1000,
              "title": "Api Url"
            },
            "channel_name": {
              "type": "string",
              "maxLength": 100,
              "title": "Channel Name"
            }
          },
          "type": "object",
          "required": [
            "api_url",
            "channel_name"
          ],
          "title": "MSTeamsChannel",
          "description": "MSTeams Channel Config model"
        },
        "Operator": {
          "type": "string",
          "enum": [
            "Equals",
            "Matches(Regex)",
            "StartsWith",
            "EndsWith",
            "IsEmpty",
            "Contains",
            "GreaterThan",
            "LessThan"
          ],
          "title": "Operator"
        },
        "Priority": {
          "type": "string",
          "enum": [
            "P1",
            "P2",
            "P3",
            "P4",
            "P5"
          ],
          "title": "Priority",
          "description": "Priority model"
        },
        "RepeatedCountOperator": {
          "type": "string",
          "enum": [
            "gt(>)",
            "gte(>=)",
            "lt(<)",
            "lte(<=)"
          ],
          "title": "RepeatedCountOperator"
        },
        "ResponseModel": {
          "properties": {
            "result": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Result"
                }
              ],
              "default": "success"
            },
            "message": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Message"
            },
            "code": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Code"
            },
            "data": {
              "anyOf": [
                {},
                {
                  "type": null
                }
              ],
              "title": "Data"
            }
          },
          "type": "object",
          "title": "ResponseModel",
          "description": "Result model for alert"
        },
        "Result": {
          "type": "string",
          "enum": [
            "success",
            "failed"
          ],
          "title": "Result"
        },
        "Sender": {
          "type": "string",
          "enum": [
            "AlertManager",
            "OpenSearch",
            "K8sWatcher"
          ],
          "title": "Sender",
          "description": "Sender of the alert. It can be AlertManager, OpenSearch, K8sWatcher, Others"
        },
        "Severity": {
          "type": "string",
          "enum": [
            "critical",
            "warning"
          ],
          "title": "Severity",
          "description": "Severity model"
        },
        "Silence": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "integrations": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "items": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Integrations"
            },
            "starts_at": {
              "type": "string",
              "format": "date-time",
              "title": "Starts At"
            },
            "ends_at": {
              "type": "string",
              "format": "date-time",
              "title": "Ends At"
            },
            "modifier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Modifier"
            },
            "progress_status": {
              "type": "string",
              "title": "Progress Status",
              "readOnly": true
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "starts_at",
            "ends_at",
            "progress_status"
          ],
          "title": "Silence"
        },
        "SilenceCreateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "title": "Name"
            },
            "integrations": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Integrations"
            },
            "starts_at": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
              "title": "Starts At"
            },
            "ends_at": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
              "title": "Ends At"
            }
          },
          "type": "object",
          "required": [
            "name",
            "integrations",
            "starts_at",
            "ends_at"
          ],
          "title": "SilenceCreateRequest"
        },
        "SilenceList": {
          "properties": {
            "current_page": {
              "type": "integer",
              "minimum": 1,
              "title": "Current Page",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "maximum": 500,
              "minimum": 10,
              "title": "Page Size",
              "default": 10
            },
            "total": {
              "type": "integer",
              "minimum": 0,
              "title": "Total",
              "default": 0
            },
            "data": {
              "items": {
                "$ref": "#/components/schemas/Silence"
              },
              "type": "array",
              "title": "Data"
            }
          },
          "type": "object",
          "required": [
            "data"
          ],
          "title": "SilenceList",
          "description": "Silence list model for alert"
        },
        "SilenceSortField": {
          "type": "string",
          "enum": [
            "name",
            "status",
            "created_at",
            "updated_at"
          ],
          "title": "SilenceSortField"
        },
        "SilenceStatus": {
          "type": "string",
          "enum": [
            "planed",
            "expired",
            "active"
          ],
          "title": "SilenceStatus",
          "description": "Silence status model"
        },
        "SilenceUpdateRequest": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 300,
              "title": "Name"
            },
            "integrations": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Integrations"
            },
            "starts_at": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
              "title": "Starts At"
            },
            "ends_at": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[+-]\\d{2}:\\d{2}$",
              "title": "Ends At"
            },
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "name",
            "integrations",
            "starts_at",
            "ends_at",
            "id"
          ],
          "title": "SilenceUpdateRequest"
        },
        "SlackChannel": {
          "properties": {
            "api_url": {
              "type": "string",
              "maxLength": 1000,
              "title": "Api Url"
            },
            "channel_name": {
              "type": "string",
              "maxLength": 100,
              "title": "Channel Name"
            }
          },
          "type": "object",
          "required": [
            "api_url",
            "channel_name"
          ],
          "title": "SlackChannel",
          "description": "Slack Channel Config model"
        },
        "SortDirection": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "title": "SortDirection"
        },
        "Status": {
          "type": "string",
          "enum": [
            "firing",
            "resolved"
          ],
          "title": "Status",
          "description": "Status of the alert. It can be firing or resolved.\n\nIt's value should be 'firing' or 'resolved' because it's from AlertManager"
        },
        "TestAlertCreateRequest": {
          "properties": {
            "summary": {
              "type": "string",
              "maxLength": 300,
              "title": "Summary",
              "default": "This is a test alert"
            },
            "description": {
              "type": "string",
              "maxLength": 500,
              "title": "Description",
              "default": "This is a test alert for checking the integration channel"
            },
            "alertname": {
              "type": "string",
              "maxLength": 100,
              "title": "Alertname",
              "default": "AlertNotificationTest"
            },
            "priority": {
              "$ref": "#/components/schemas/Priority"
            },
            "severity": {
              "$ref": "#/components/schemas/Severity"
            },
            "labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Labels"
            }
          },
          "type": "object",
          "required": [
            "priority",
            "severity"
          ],
          "title": "TestAlertCreateRequest",
          "description": "Alert request model for the restful api which create or update alert"
        },
        "UserNotificationSettings": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "username": {
              "type": "string",
              "title": "Username"
            },
            "projects": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Projects"
            },
            "clusters": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Clusters"
            },
            "priorities": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Priority"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Priorities"
            },
            "labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Labels"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "required": [
            "username"
          ],
          "title": "UserNotificationSettings"
        },
        "UserNotificationSettingsRequest": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24
                },
                {
                  "type": null
                }
              ],
              "title": "Id",
              "description": "Obect ID received from the server"
            },
            "projects": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Projects"
            },
            "clusters": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Clusters"
            },
            "priorities": {
              "items": {
                "$ref": "#/components/schemas/Priority"
              },
              "type": "array",
              "title": "Priorities"
            },
            "labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Labels"
            }
          },
          "type": "object",
          "required": [
            "priorities"
          ],
          "title": "UserNotificationSettingsRequest"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "WebhookChannel": {
          "properties": {
            "webhook_url": {
              "type": "string",
              "maxLength": 1000,
              "title": "Webhook Url"
            },
            "authentication_type": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AuthenticationType"
                }
              ],
              "default": "None"
            },
            "username": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100
                },
                {
                  "type": null
                }
              ],
              "title": "Username"
            },
            "password": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 100
                },
                {
                  "type": null
                }
              ],
              "title": "Password"
            },
            "bearer_token": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Bearer Token"
            },
            "tls_verify": {
              "type": "boolean",
              "title": "Tls Verify",
              "default": false
            }
          },
          "type": "object",
          "required": [
            "webhook_url"
          ],
          "title": "WebhookChannel",
          "description": "Webhook Channel Config model"
        },
        "ZcpAlert": {
          "properties": {
            "_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": " Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Updated At"
            },
            "sender": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Sender"
                },
                {
                  "type": null
                }
              ]
            },
            "repeated_count": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": null
                }
              ],
              "title": "Repeated Count",
              "default": 0
            },
            "activities": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/AlertActivity"
                  },
                  "type": "array"
                },
                {
                  "type": null
                }
              ],
              "title": "Activities"
            },
            "snoozed_until_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Snoozed Until At"
            },
            "modifier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Modifier"
            },
            "status": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AlertStatus"
                },
                {
                  "type": null
                }
              ]
            },
            "labels": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Labels"
            },
            "annotations": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                {
                  "type": null
                }
              ],
              "title": "Annotations"
            },
            "starts_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Starts At"
            },
            "ends_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Ends At"
            },
            "generator_url": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Generator Url"
            },
            "fingerprint": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Fingerprint"
            },
            "closed_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Closed At"
            },
            "acknowledged_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": null
                }
              ],
              "title": "Acknowledged At"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "title": "ZcpAlert",
          "description": "ZcpAlert model"
        },
        "ZcpAlertList": {
          "properties": {
            "current_page": {
              "type": "integer",
              "minimum": 1,
              "title": "Current Page",
              "default": 1
            },
            "page_size": {
              "type": "integer",
              "maximum": 500,
              "minimum": 10,
              "title": "Page Size",
              "default": 10
            },
            "total": {
              "type": "integer",
              "minimum": 0,
              "title": "Total",
              "default": 0
            },
            "data": {
              "items": {
                "$ref": "#/components/schemas/ZcpAlert"
              },
              "type": "array",
              "title": "Data"
            }
          },
          "type": "object",
          "required": [
            "data"
          ],
          "title": "ZcpAlertList",
          "description": "Zcp alert list model for alert"
        }
      },
      "securitySchemes": {
        "OAuth2AuthorizationCodeBearer": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "refreshUrl": "https://keycloak.ags.cloudzcp.net/auth/realms/ags/protocol/openid-connect/userinfo",
              "scopes": {},
              "authorizationUrl": "https://keycloak.ags.cloudzcp.net/auth/realms/ags/protocol/openid-connect/auth",
              "tokenUrl": "https://keycloak.ags.cloudzcp.net/auth/realms/ags/protocol/openid-connect/token"
            }
          }
        },
        "HTTPBasic": {
          "type": "http",
          "scheme": "basic"
        }
      }
    },
    "servers": [
      {
        "url": "https://api.ags.cloudzcp.net/api/alert/v1"
      }
    ]
  }