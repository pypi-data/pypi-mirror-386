{
    "openapi": "3.0.1",
    "info": {
       "title": "ZMP Policy Backend",
       "description": "ZMP Policy Backend API",
       "version": "v1.0.0"
    },
    "servers": [
       {
          "url": "https://api.ags.cloudzcp.net"
       },
       {
          "url": "/"
       }
    ],
    "paths": {
       "/api/policy/v1/templates": {
          "get": {
             "tags": [
                "template-controller"
             ],
             "operationId": "getTemplateList",
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Template"
                            }
                         }
                      }
                   }
                }
             }
          },
          "put": {
             "tags": [
                "template-controller"
             ],
             "operationId": "updateTemplate",
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/TemplateVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Template"
                         }
                      }
                   }
                }
             }
          },
          "post": {
             "tags": [
                "template-controller"
             ],
             "operationId": "createTemplate",
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/TemplateVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Template"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/policies": {
          "put": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "changeValidationFailureAction",
             "parameters": [
                {
                   "name": "policyValidationFailureAction",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Audit",
                         "Enforce"
                      ]
                   }
                }
             ],
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "type": "array",
                         "items": {
                            "$ref": "#/components/schemas/PolicyDeleteVO"
                         }
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Result"
                            }
                         }
                      }
                   }
                }
             }
          },
          "delete": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "deletePolicies",
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "type": "array",
                         "items": {
                            "$ref": "#/components/schemas/PolicyDeleteVO"
                         }
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Result"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/policies": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getPolicyList",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Policy"
                            }
                         }
                      }
                   }
                }
             }
          },
          "put": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "updatePolicy",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/PolicyVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          },
          "post": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "createPolicy",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/PolicyVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Result"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/namespaces/{namespace}/policies": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getPolicyListInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Policy"
                            }
                         }
                      }
                   }
                }
             }
          },
          "put": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "updatePolicyInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/PolicyVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          },
          "post": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "createPolicyInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/PolicyVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/playground": {
          "post": {
             "tags": [
                "playground-controller"
             ],
             "operationId": "evaluate",
             "requestBody": {
                "content": {
                   "application/json": {
                      "schema": {
                         "$ref": "#/components/schemas/EvaluationVO"
                      }
                   }
                },
                "required": true
             },
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/templates/{name}": {
          "get": {
             "tags": [
                "template-controller"
             ],
             "operationId": "getTemplate",
             "parameters": [
                {
                   "name": "name",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Template"
                         }
                      }
                   }
                }
             }
          },
          "delete": {
             "tags": [
                "template-controller"
             ],
             "operationId": "deleteTemplate",
             "parameters": [
                {
                   "name": "name",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/policy-reports": {
          "get": {
             "tags": [
                "report-controller"
             ],
             "operationId": "getPolicyReportStatusStatistics",
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/ClusterStatus"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/init-data": {
          "get": {
             "tags": [
                "report-controller"
             ],
             "operationId": "getInitData",
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/InitDataVO"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/dashboard": {
          "get": {
             "tags": [
                "dashboard-controller"
             ],
             "operationId": "dashboard",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Dashboard"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/dashboard/admission-failure-events": {
          "get": {
             "tags": [
                "dashboard-controller"
             ],
             "operationId": "getAdmissionFailureEventList",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "duration",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "TEN_MINUTES",
                         "THIRTY_MINUTES",
                         "ONE_HOUR",
                         "TWO_HOURS",
                         "SIX_HOURS",
                         "TWELVE_HOURS",
                         "TWENTY_FOUR_HOURS"
                      ]
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Event"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/resources/{resourceName}": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getResource",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "resourceName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "k8sKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Deployment",
                         "StatefulSet",
                         "DaemonSet",
                         "Job",
                         "CronJob",
                         "Pod",
                         "ReplicaSet",
                         "Service",
                         "Ingress",
                         "ConfigMap",
                         "Secret",
                         "PersistentVolume",
                         "PersistentVolumeClaim",
                         "StorageClass",
                         "Namespace",
                         "Role",
                         "RoleBinding",
                         "ClusterRole",
                         "ClusterRoleBinding",
                         "ServiceAccount",
                         "NetworkPolicy",
                         "CustomResourceDefinition",
                         "MutatingWebhookConfiguration",
                         "ValidatingWebhookConfiguration",
                         "PodSecurityPolicy",
                         "LimitRange",
                         "ResourceQuota",
                         "HorizontalPodAutoscaler",
                         "VerticalPodAutoscaler",
                         "PodDisruptionBudget",
                         "PriorityClass",
                         "IngressClass",
                         "IngressController",
                         "IngressControllerClass",
                         "IngressClassParameters",
                         "IngressClassParametersReference",
                         "IngressClassSpec",
                         "IngressClassStatus",
                         "IngressRule",
                         "IngressRuleValue",
                         "IngressTLS",
                         "IngressBackend",
                         "IngressPath",
                         "IngressPathType",
                         "IngressServiceBackend",
                         "IngressServiceBackendPort",
                         "IngressServiceBackendPortName",
                         "IngressServiceBackendPortNumber",
                         "IngressServiceBackendPortValue",
                         "IngressServiceBackendPortValueFrom",
                         "IngressServiceBackendPortValueFromFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldSelector",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorContainerName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorDivisor",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResource",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceNamespace",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceVersion",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceGroup",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceKind"
                      ]
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/policy-reports": {
          "get": {
             "tags": [
                "report-controller"
             ],
             "operationId": "getPolicyReportList",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Report"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/policies/{policyName}": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getPolicy",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Policy",
                         "ClusterPolicy",
                         "CleanupPolicy",
                         "ClusterCleanupPolicy"
                      ]
                   }
                },
                {
                   "name": "namespace",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Policy"
                         }
                      }
                   }
                }
             }
          },
          "delete": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "deletePolicy",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Policy",
                         "ClusterPolicy",
                         "CleanupPolicy",
                         "ClusterCleanupPolicy"
                      ]
                   }
                },
                {
                   "name": "namespace",
                   "in": "query",
                   "required": false,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/namespaces/{namespace}/resources/{resourceName}": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getResourceInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "resourceName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "k8sKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Deployment",
                         "StatefulSet",
                         "DaemonSet",
                         "Job",
                         "CronJob",
                         "Pod",
                         "ReplicaSet",
                         "Service",
                         "Ingress",
                         "ConfigMap",
                         "Secret",
                         "PersistentVolume",
                         "PersistentVolumeClaim",
                         "StorageClass",
                         "Namespace",
                         "Role",
                         "RoleBinding",
                         "ClusterRole",
                         "ClusterRoleBinding",
                         "ServiceAccount",
                         "NetworkPolicy",
                         "CustomResourceDefinition",
                         "MutatingWebhookConfiguration",
                         "ValidatingWebhookConfiguration",
                         "PodSecurityPolicy",
                         "LimitRange",
                         "ResourceQuota",
                         "HorizontalPodAutoscaler",
                         "VerticalPodAutoscaler",
                         "PodDisruptionBudget",
                         "PriorityClass",
                         "IngressClass",
                         "IngressController",
                         "IngressControllerClass",
                         "IngressClassParameters",
                         "IngressClassParametersReference",
                         "IngressClassSpec",
                         "IngressClassStatus",
                         "IngressRule",
                         "IngressRuleValue",
                         "IngressTLS",
                         "IngressBackend",
                         "IngressPath",
                         "IngressPathType",
                         "IngressServiceBackend",
                         "IngressServiceBackendPort",
                         "IngressServiceBackendPortName",
                         "IngressServiceBackendPortNumber",
                         "IngressServiceBackendPortValue",
                         "IngressServiceBackendPortValueFrom",
                         "IngressServiceBackendPortValueFromFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldSelector",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorContainerName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorDivisor",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResource",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceNamespace",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceVersion",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceGroup",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceKind"
                      ]
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/namespaces/{namespace}/policies/{policyName}": {
          "get": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "getPolicyInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Policy",
                         "ClusterPolicy",
                         "CleanupPolicy",
                         "ClusterCleanupPolicy"
                      ]
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "$ref": "#/components/schemas/Policy"
                         }
                      }
                   }
                }
             }
          },
          "delete": {
             "tags": [
                "policy-controller"
             ],
             "operationId": "deletePolicyInNamespace",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "namespace",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyName",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                },
                {
                   "name": "policyKind",
                   "in": "query",
                   "required": true,
                   "schema": {
                      "type": "string",
                      "enum": [
                         "Policy",
                         "ClusterPolicy",
                         "CleanupPolicy",
                         "ClusterCleanupPolicy"
                      ]
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "object"
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/clusters/{cluster}/cluster-policy-reports": {
          "get": {
             "tags": [
                "report-controller"
             ],
             "operationId": "getClusterPolicyReportList",
             "parameters": [
                {
                   "name": "cluster",
                   "in": "path",
                   "required": true,
                   "schema": {
                      "type": "string"
                   }
                }
             ],
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/Report"
                            }
                         }
                      }
                   }
                }
             }
          }
       },
       "/api/policy/v1/cluster-policy-reports": {
          "get": {
             "tags": [
                "report-controller"
             ],
             "operationId": "getClusterPolicyReportStatusStatistics",
             "responses": {
                "200": {
                   "description": "OK",
                   "content": {
                      "*/*": {
                         "schema": {
                            "type": "array",
                            "items": {
                               "$ref": "#/components/schemas/ClusterStatus"
                            }
                         }
                      }
                   }
                }
             }
          }
       }
    },
    "components": {
       "schemas": {
          "TemplateVO": {
             "required": [
                "data",
                "name"
             ],
             "type": "object",
             "properties": {
                "name": {
                   "type": "string"
                },
                "data": {
                   "type": "string"
                }
             }
          },
          "Template": {
             "type": "object",
             "properties": {
                "name": {
                   "type": "string"
                },
                "title": {
                   "type": "string"
                },
                "categories": {
                   "type": "array",
                   "items": {
                      "type": "string"
                   }
                },
                "subjects": {
                   "type": "array",
                   "items": {
                      "type": "string"
                   }
                },
                "severity": {
                   "type": "string",
                   "enum": [
                      "critical",
                      "high",
                      "medium",
                      "low",
                      "info"
                   ]
                },
                "data": {
                   "type": "string"
                },
                "kind": {
                   "type": "string",
                   "enum": [
                      "Policy",
                      "ClusterPolicy",
                      "CleanupPolicy",
                      "ClusterCleanupPolicy"
                   ]
                },
                "mutable": {
                   "type": "boolean"
                },
                "path": {
                   "type": "string"
                },
                "recommend": {
                   "type": "boolean"
                }
             }
          },
          "PolicyDeleteVO": {
             "required": [
                "cluster",
                "policyKind",
                "policyName"
             ],
             "type": "object",
             "properties": {
                "cluster": {
                   "type": "string"
                },
                "policyName": {
                   "type": "string"
                },
                "policyKind": {
                   "type": "string",
                   "enum": [
                      "Policy",
                      "ClusterPolicy",
                      "CleanupPolicy",
                      "ClusterCleanupPolicy"
                   ]
                },
                "namespace": {
                   "type": "string"
                }
             }
          },
          "Result": {
             "type": "object",
             "properties": {
                "policy": {
                   "$ref": "#/components/schemas/PolicyDeleteVO"
                },
                "success": {
                   "type": "boolean"
                },
                "message": {
                   "type": "string"
                }
             }
          },
          "PolicyVO": {
             "required": [
                "data",
                "policyKind",
                "policyName"
             ],
             "type": "object",
             "properties": {
                "policyName": {
                   "type": "string"
                },
                "policyKind": {
                   "type": "string",
                   "enum": [
                      "Policy",
                      "ClusterPolicy",
                      "CleanupPolicy",
                      "ClusterCleanupPolicy"
                   ]
                },
                "namespaces": {
                   "type": "array",
                   "items": {
                      "type": "string"
                   }
                },
                "customData": {
                   "type": "string"
                },
                "data": {
                   "type": "string"
                }
             }
          },
          "EvaluationVO": {
             "required": [
                "policies",
                "resources"
             ],
             "type": "object",
             "properties": {
                "policies": {
                   "type": "string"
                },
                "resources": {
                   "type": "string"
                }
             }
          },
          "ClusterStatus": {
             "type": "object",
             "properties": {
                "cluster": {
                   "type": "string"
                },
                "error": {
                   "type": "integer",
                   "format": "int32"
                },
                "fail": {
                   "type": "integer",
                   "format": "int32"
                },
                "pass": {
                   "type": "integer",
                   "format": "int32"
                },
                "skip": {
                   "type": "integer",
                   "format": "int32"
                },
                "warn": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "InitDataVO": {
             "type": "object",
             "properties": {
                "clusters": {
                   "type": "array",
                   "items": {
                      "type": "string"
                   }
                },
                "k8sKinds": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "Deployment",
                         "StatefulSet",
                         "DaemonSet",
                         "Job",
                         "CronJob",
                         "Pod",
                         "ReplicaSet",
                         "Service",
                         "Ingress",
                         "ConfigMap",
                         "Secret",
                         "PersistentVolume",
                         "PersistentVolumeClaim",
                         "StorageClass",
                         "Namespace",
                         "Role",
                         "RoleBinding",
                         "ClusterRole",
                         "ClusterRoleBinding",
                         "ServiceAccount",
                         "NetworkPolicy",
                         "CustomResourceDefinition",
                         "MutatingWebhookConfiguration",
                         "ValidatingWebhookConfiguration",
                         "PodSecurityPolicy",
                         "LimitRange",
                         "ResourceQuota",
                         "HorizontalPodAutoscaler",
                         "VerticalPodAutoscaler",
                         "PodDisruptionBudget",
                         "PriorityClass",
                         "IngressClass",
                         "IngressController",
                         "IngressControllerClass",
                         "IngressClassParameters",
                         "IngressClassParametersReference",
                         "IngressClassSpec",
                         "IngressClassStatus",
                         "IngressRule",
                         "IngressRuleValue",
                         "IngressTLS",
                         "IngressBackend",
                         "IngressPath",
                         "IngressPathType",
                         "IngressServiceBackend",
                         "IngressServiceBackendPort",
                         "IngressServiceBackendPortName",
                         "IngressServiceBackendPortNumber",
                         "IngressServiceBackendPortValue",
                         "IngressServiceBackendPortValueFrom",
                         "IngressServiceBackendPortValueFromFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldRef",
                         "IngressServiceBackendPortValueFromResourceFieldSelector",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorContainerName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorDivisor",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResource",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceName",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceNamespace",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceVersion",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceGroup",
                         "IngressServiceBackendPortValueFromResourceFieldSelectorResourceKind"
                      ]
                   }
                },
                "severities": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "critical",
                         "high",
                         "medium",
                         "low",
                         "info"
                      ]
                   }
                },
                "types": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "Generate",
                         "Mutate",
                         "Validate",
                         "VerifyImages",
                         "CleanUp"
                      ]
                   }
                },
                "kinds": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "Policy",
                         "ClusterPolicy",
                         "CleanupPolicy",
                         "ClusterCleanupPolicy"
                      ]
                   }
                },
                "validationFailureActions": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "Audit",
                         "Enforce"
                      ]
                   }
                },
                "categories": {
                   "type": "array",
                   "items": {
                      "type": "string"
                   }
                },
                "resultStatus": {
                   "type": "array",
                   "items": {
                      "type": "string",
                      "enum": [
                         "pass",
                         "skip",
                         "fail",
                         "warn",
                         "error"
                      ]
                   }
                }
             }
          },
          "BackgroundScan": {
             "type": "object",
             "properties": {
                "policyOn": {
                   "type": "integer",
                   "format": "int32"
                },
                "policyOff": {
                   "type": "integer",
                   "format": "int32"
                },
                "clusterPolicyOn": {
                   "type": "integer",
                   "format": "int32"
                },
                "clusterPolicyOff": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "Count": {
             "type": "object",
             "properties": {
                "name": {
                   "type": "string"
                },
                "value": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "Dashboard": {
             "type": "object",
             "properties": {
                "validationAction": {
                   "$ref": "#/components/schemas/ValidationAction"
                },
                "backgroundScan": {
                   "$ref": "#/components/schemas/BackgroundScan"
                },
                "policy": {
                   "type": "integer",
                   "format": "int32"
                },
                "clusterPolicy": {
                   "type": "integer",
                   "format": "int32"
                },
                "validationRule": {
                   "type": "integer",
                   "format": "int32"
                },
                "generateRule": {
                   "type": "integer",
                   "format": "int32"
                },
                "mutateRule": {
                   "type": "integer",
                   "format": "int32"
                },
                "imageVerifyRule": {
                   "type": "integer",
                   "format": "int32"
                },
                "secureScore": {
                   "$ref": "#/components/schemas/SecureScore"
                },
                "status": {
                   "$ref": "#/components/schemas/Status"
                },
                "severityOfFailure": {
                   "$ref": "#/components/schemas/SeverityOfFailure"
                },
                "categoryOfFailure": {
                   "type": "array",
                   "items": {
                      "$ref": "#/components/schemas/Count"
                   }
                },
                "clusterOfFailure": {
                   "type": "array",
                   "items": {
                      "$ref": "#/components/schemas/Count"
                   }
                },
                "namespaceOfFailure": {
                   "type": "array",
                   "items": {
                      "$ref": "#/components/schemas/Count"
                   }
                },
                "highSeverityFailureEvents": {
                   "type": "array",
                   "items": {
                      "$ref": "#/components/schemas/Event"
                   }
                }
             }
          },
          "Event": {
             "type": "object",
             "properties": {
                "cluster": {
                   "type": "string"
                },
                "namespace": {
                   "type": "string"
                },
                "name": {
                   "type": "string"
                },
                "kind": {
                   "type": "string"
                },
                "policyKind": {
                   "type": "string",
                   "enum": [
                      "Policy",
                      "ClusterPolicy",
                      "CleanupPolicy",
                      "ClusterCleanupPolicy"
                   ]
                },
                "ruleName": {
                   "type": "string"
                },
                "timestamp": {
                   "$ref": "#/components/schemas/Timestamp"
                },
                "policyName": {
                   "type": "string"
                },
                "policyNamespace": {
                   "type": "string"
                },
                "count": {
                   "type": "string"
                }
             }
          },
          "SecureScore": {
             "type": "object",
             "properties": {
                "pass": {
                   "type": "integer",
                   "format": "int32"
                },
                "total": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "SeverityOfFailure": {
             "type": "object",
             "properties": {
                "critical": {
                   "type": "integer",
                   "format": "int32"
                },
                "high": {
                   "type": "integer",
                   "format": "int32"
                },
                "medium": {
                   "type": "integer",
                   "format": "int32"
                },
                "low": {
                   "type": "integer",
                   "format": "int32"
                },
                "info": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "Status": {
             "type": "object",
             "properties": {
                "error": {
                   "type": "integer",
                   "format": "int32"
                },
                "fail": {
                   "type": "integer",
                   "format": "int32"
                },
                "pass": {
                   "type": "integer",
                   "format": "int32"
                },
                "skip": {
                   "type": "integer",
                   "format": "int32"
                },
                "warn": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "Timestamp": {
             "type": "object",
             "properties": {
                "nanos": {
                   "type": "integer",
                   "format": "int32"
                },
                "seconds": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "ValidationAction": {
             "type": "object",
             "properties": {
                "enforcePolicy": {
                   "type": "integer",
                   "format": "int32"
                },
                "auditPolicy": {
                   "type": "integer",
                   "format": "int32"
                },
                "enforceClusterPolicy": {
                   "type": "integer",
                   "format": "int32"
                },
                "auditClusterPolicy": {
                   "type": "integer",
                   "format": "int32"
                }
             }
          },
          "Report": {
             "type": "object",
             "properties": {
                "namespace": {
                   "type": "string"
                },
                "kind": {
                   "type": "string",
                   "enum": [
                      "Deployment",
                      "StatefulSet",
                      "DaemonSet",
                      "Job",
                      "CronJob",
                      "Pod",
                      "ReplicaSet",
                      "Service",
                      "Ingress",
                      "ConfigMap",
                      "Secret",
                      "PersistentVolume",
                      "PersistentVolumeClaim",
                      "StorageClass",
                      "Namespace",
                      "Role",
                      "RoleBinding",
                      "ClusterRole",
                      "ClusterRoleBinding",
                      "ServiceAccount",
                      "NetworkPolicy",
                      "CustomResourceDefinition",
                      "MutatingWebhookConfiguration",
                      "ValidatingWebhookConfiguration",
                      "PodSecurityPolicy",
                      "LimitRange",
                      "ResourceQuota",
                      "HorizontalPodAutoscaler",
                      "VerticalPodAutoscaler",
                      "PodDisruptionBudget",
                      "PriorityClass",
                      "IngressClass",
                      "IngressController",
                      "IngressControllerClass",
                      "IngressClassParameters",
                      "IngressClassParametersReference",
                      "IngressClassSpec",
                      "IngressClassStatus",
                      "IngressRule",
                      "IngressRuleValue",
                      "IngressTLS",
                      "IngressBackend",
                      "IngressPath",
                      "IngressPathType",
                      "IngressServiceBackend",
                      "IngressServiceBackendPort",
                      "IngressServiceBackendPortName",
                      "IngressServiceBackendPortNumber",
                      "IngressServiceBackendPortValue",
                      "IngressServiceBackendPortValueFrom",
                      "IngressServiceBackendPortValueFromFieldRef",
                      "IngressServiceBackendPortValueFromResourceFieldRef",
                      "IngressServiceBackendPortValueFromResourceFieldSelector",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorContainerName",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorDivisor",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResource",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResourceName",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResourceNamespace",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResourceVersion",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResourceGroup",
                      "IngressServiceBackendPortValueFromResourceFieldSelectorResourceKind"
                   ]
                },
                "name": {
                   "type": "string"
                },
                "policyName": {
                   "type": "string"
                },
                "rule": {
                   "type": "string"
                },
                "severity": {
                   "type": "string",
                   "enum": [
                      "critical",
                      "high",
                      "medium",
                      "low",
                      "info"
                   ]
                },
                "status": {
                   "type": "string",
                   "enum": [
                      "pass",
                      "skip",
                      "fail",
                      "warn",
                      "error"
                   ]
                },
                "message": {
                   "type": "string"
                }
             }
          },
          "Policy": {
             "type": "object",
             "properties": {
                "category": {
                   "type": "string"
                },
                "kind": {
                   "type": "string",
                   "enum": [
                      "Policy",
                      "ClusterPolicy",
                      "CleanupPolicy",
                      "ClusterCleanupPolicy"
                   ]
                },
                "namespace": {
                   "type": "string"
                },
                "name": {
                   "type": "string"
                },
                "ruleCount": {
                   "type": "integer",
                   "format": "int32"
                },
                "background": {
                   "type": "boolean"
                },
                "validationFailureAction": {
                   "type": "string",
                   "enum": [
                      "Audit",
                      "Enforce"
                   ]
                },
                "severity": {
                   "type": "string",
                   "enum": [
                      "critical",
                      "high",
                      "medium",
                      "low",
                      "info"
                   ]
                },
                "data": {
                   "type": "string"
                },
                "results": {
                   "type": "array",
                   "items": {
                      "$ref": "#/components/schemas/Report"
                   }
                }
             }
          }
       }
    }
 }