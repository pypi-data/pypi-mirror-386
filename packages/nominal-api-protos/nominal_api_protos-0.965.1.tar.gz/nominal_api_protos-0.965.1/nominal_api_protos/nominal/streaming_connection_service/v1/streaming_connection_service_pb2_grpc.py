# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nominal.streaming_connection_service.v1 import streaming_connection_service_pb2 as nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in nominal/streaming_connection_service/v1/streaming_connection_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class StreamingConnectionServiceStub(object):
    """Service for managing streaming connections to external data sources.
    Supports OPC-UA with plans for MQTT, Kafka, and other protocols.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStreamingConnection = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/CreateStreamingConnection',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionResponse.FromString,
                _registered_method=True)
        self.GetStreamingConnection = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/GetStreamingConnection',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionResponse.FromString,
                _registered_method=True)
        self.ListStreamingConnections = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/ListStreamingConnections',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsResponse.FromString,
                _registered_method=True)
        self.UpdateStreamingConnectionStatus = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/UpdateStreamingConnectionStatus',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusResponse.FromString,
                _registered_method=True)
        self.StartStream = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/StartStream',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamResponse.FromString,
                _registered_method=True)
        self.StopStream = channel.unary_unary(
                '/nominal.streaming_connection_service.v1.StreamingConnectionService/StopStream',
                request_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamRequest.SerializeToString,
                response_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamResponse.FromString,
                _registered_method=True)


class StreamingConnectionServiceServicer(object):
    """Service for managing streaming connections to external data sources.
    Supports OPC-UA with plans for MQTT, Kafka, and other protocols.
    """

    def CreateStreamingConnection(self, request, context):
        """buf:lint:ignore RPC_REQUEST_STANDARD_NAME
        Creates a new streaming connection configuration
        buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingConnection(self, request, context):
        """Gets the details and status of a streaming connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStreamingConnections(self, request, context):
        """List all the streaming connections for a set of workspaces
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStreamingConnectionStatus(self, request, context):
        """Update the status of a streaming connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartStream(self, request, context):
        """Starts streaming data for a connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopStream(self, request, context):
        """Stops streaming data for a connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StreamingConnectionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStreamingConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStreamingConnection,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionResponse.SerializeToString,
            ),
            'GetStreamingConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingConnection,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionResponse.SerializeToString,
            ),
            'ListStreamingConnections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStreamingConnections,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsResponse.SerializeToString,
            ),
            'UpdateStreamingConnectionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStreamingConnectionStatus,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusResponse.SerializeToString,
            ),
            'StartStream': grpc.unary_unary_rpc_method_handler(
                    servicer.StartStream,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamResponse.SerializeToString,
            ),
            'StopStream': grpc.unary_unary_rpc_method_handler(
                    servicer.StopStream,
                    request_deserializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamRequest.FromString,
                    response_serializer=nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nominal.streaming_connection_service.v1.StreamingConnectionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nominal.streaming_connection_service.v1.StreamingConnectionService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class StreamingConnectionService(object):
    """Service for managing streaming connections to external data sources.
    Supports OPC-UA with plans for MQTT, Kafka, and other protocols.
    """

    @staticmethod
    def CreateStreamingConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/CreateStreamingConnection',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.CreateStreamingConnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/GetStreamingConnection',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.GetStreamingConnectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListStreamingConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/ListStreamingConnections',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.ListStreamingConnectionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStreamingConnectionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/UpdateStreamingConnectionStatus',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.UpdateStreamingConnectionStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/StartStream',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StartStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.streaming_connection_service.v1.StreamingConnectionService/StopStream',
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamRequest.SerializeToString,
            nominal_dot_streaming__connection__service_dot_v1_dot_streaming__connection__service__pb2.StopStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
