# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nominal.authorization.roles.v1 import roles_pb2 as nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in nominal/authorization/roles/v1/roles_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class RoleServiceStub(object):
    """RoleService provides methods for managing roles within Nominal.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateResourceRoles = channel.unary_unary(
                '/nominal.authorization.roles.v1.RoleService/UpdateResourceRoles',
                request_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesRequest.SerializeToString,
                response_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesResponse.FromString,
                _registered_method=True)
        self.GetResourceRoles = channel.unary_unary(
                '/nominal.authorization.roles.v1.RoleService/GetResourceRoles',
                request_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesRequest.SerializeToString,
                response_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesResponse.FromString,
                _registered_method=True)
        self.BatchGetResourceRoles = channel.unary_unary(
                '/nominal.authorization.roles.v1.RoleService/BatchGetResourceRoles',
                request_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesRequest.SerializeToString,
                response_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesResponse.FromString,
                _registered_method=True)


class RoleServiceServicer(object):
    """RoleService provides methods for managing roles within Nominal.
    """

    def UpdateResourceRoles(self, request, context):
        """Atomically adds and removes role assignments for a resource.
        Throws if the same role assignment is both added and removed in the same request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResourceRoles(self, request, context):
        """Gets the role assignments for a resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetResourceRoles(self, request, context):
        """Gets the role assignments for multiple resources.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RoleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateResourceRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateResourceRoles,
                    request_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesRequest.FromString,
                    response_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesResponse.SerializeToString,
            ),
            'GetResourceRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResourceRoles,
                    request_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesRequest.FromString,
                    response_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesResponse.SerializeToString,
            ),
            'BatchGetResourceRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetResourceRoles,
                    request_deserializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesRequest.FromString,
                    response_serializer=nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nominal.authorization.roles.v1.RoleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nominal.authorization.roles.v1.RoleService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RoleService(object):
    """RoleService provides methods for managing roles within Nominal.
    """

    @staticmethod
    def UpdateResourceRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.authorization.roles.v1.RoleService/UpdateResourceRoles',
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesRequest.SerializeToString,
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.UpdateResourceRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetResourceRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.authorization.roles.v1.RoleService/GetResourceRoles',
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesRequest.SerializeToString,
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.GetResourceRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BatchGetResourceRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.authorization.roles.v1.RoleService/BatchGetResourceRoles',
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesRequest.SerializeToString,
            nominal_dot_authorization_dot_roles_dot_v1_dot_roles__pb2.BatchGetResourceRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
