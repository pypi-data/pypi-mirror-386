# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nominal.blob_storage_service.v1 import blob_storage_service_pb2 as nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in nominal/blob_storage_service/v1/blob_storage_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BlobStorageServiceStub(object):
    """Service for storing and retrieving blobs in object storage with workspace-based authorization.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadBlobStream = channel.stream_unary(
                '/nominal.blob_storage_service.v1.BlobStorageService/UploadBlobStream',
                request_serializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamRequest.SerializeToString,
                response_deserializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamResponse.FromString,
                _registered_method=True)
        self.GetSignedUrlForBlob = channel.unary_unary(
                '/nominal.blob_storage_service.v1.BlobStorageService/GetSignedUrlForBlob',
                request_serializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobRequest.SerializeToString,
                response_deserializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobResponse.FromString,
                _registered_method=True)


class BlobStorageServiceServicer(object):
    """Service for storing and retrieving blobs in object storage with workspace-based authorization.
    """

    def UploadBlobStream(self, request_iterator, context):
        """Upload a blob using streaming. The blob will be stored with authorization checks
        based on the provided owningRid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSignedUrlForBlob(self, request, context):
        """Retrieve a signed URL for downloading a blob. The URL is valid for 15 minutes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlobStorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadBlobStream': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadBlobStream,
                    request_deserializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamRequest.FromString,
                    response_serializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamResponse.SerializeToString,
            ),
            'GetSignedUrlForBlob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSignedUrlForBlob,
                    request_deserializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobRequest.FromString,
                    response_serializer=nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nominal.blob_storage_service.v1.BlobStorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nominal.blob_storage_service.v1.BlobStorageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BlobStorageService(object):
    """Service for storing and retrieving blobs in object storage with workspace-based authorization.
    """

    @staticmethod
    def UploadBlobStream(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/nominal.blob_storage_service.v1.BlobStorageService/UploadBlobStream',
            nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamRequest.SerializeToString,
            nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.UploadBlobStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSignedUrlForBlob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.blob_storage_service.v1.BlobStorageService/GetSignedUrlForBlob',
            nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobRequest.SerializeToString,
            nominal_dot_blob__storage__service_dot_v1_dot_blob__storage__service__pb2.GetSignedUrlForBlobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
