# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nominal.comments.v1 import comments_pb2 as nominal_dot_comments_dot_v1_dot_comments__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in nominal/comments/v1/comments_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CommentsServiceStub(object):
    """Comments service manages conversations about resources.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConversation = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/GetConversation',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationResponse.FromString,
                _registered_method=True)
        self.GetConversationCount = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/GetConversationCount',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountResponse.FromString,
                _registered_method=True)
        self.GetComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/GetComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentResponse.FromString,
                _registered_method=True)
        self.CreateComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/CreateComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentResponse.FromString,
                _registered_method=True)
        self.EditComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/EditComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentRequestWrapper.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentResponse.FromString,
                _registered_method=True)
        self.DeleteComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/DeleteComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentResponse.FromString,
                _registered_method=True)
        self.PinComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/PinComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentResponse.FromString,
                _registered_method=True)
        self.UnpinComment = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/UnpinComment',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentResponse.FromString,
                _registered_method=True)
        self.AddReaction = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/AddReaction',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionResponse.FromString,
                _registered_method=True)
        self.RemoveReaction = channel.unary_unary(
                '/nominal.comments.v1.CommentsService/RemoveReaction',
                request_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionRequest.SerializeToString,
                response_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionResponse.FromString,
                _registered_method=True)


class CommentsServiceServicer(object):
    """Comments service manages conversations about resources.
    """

    def GetConversation(self, request, context):
        """A conversation is a fully resolved comment tree. It includes all comments for the given resource
        and all the nested comments/replies to those comments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversationCount(self, request, context):
        """Returns the number of comments in a conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetComment(self, request, context):
        """Get a comment identified by its RID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateComment(self, request, context):
        """buf:lint:ignore RPC_REQUEST_STANDARD_NAME
        Create a comment on a resource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditComment(self, request, context):
        """buf:lint:ignore RPC_REQUEST_STANDARD_NAME
        Edit an existing comment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteComment(self, request, context):
        """Delete an existing comment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PinComment(self, request, context):
        """Pin a comment to the top of the conversation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnpinComment(self, request, context):
        """Unpin a comment from the top of the conversation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddReaction(self, request, context):
        """Create a reaction on a comment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveReaction(self, request, context):
        """Create a reaction on a comment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CommentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationResponse.SerializeToString,
            ),
            'GetConversationCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversationCount,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountResponse.SerializeToString,
            ),
            'GetComment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentResponse.SerializeToString,
            ),
            'CreateComment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentResponse.SerializeToString,
            ),
            'EditComment': grpc.unary_unary_rpc_method_handler(
                    servicer.EditComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentRequestWrapper.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentResponse.SerializeToString,
            ),
            'DeleteComment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentResponse.SerializeToString,
            ),
            'PinComment': grpc.unary_unary_rpc_method_handler(
                    servicer.PinComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentResponse.SerializeToString,
            ),
            'UnpinComment': grpc.unary_unary_rpc_method_handler(
                    servicer.UnpinComment,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentResponse.SerializeToString,
            ),
            'AddReaction': grpc.unary_unary_rpc_method_handler(
                    servicer.AddReaction,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionResponse.SerializeToString,
            ),
            'RemoveReaction': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveReaction,
                    request_deserializer=nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionRequest.FromString,
                    response_serializer=nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nominal.comments.v1.CommentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nominal.comments.v1.CommentsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CommentsService(object):
    """Comments service manages conversations about resources.
    """

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/GetConversation',
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConversationCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/GetConversationCount',
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetConversationCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/GetComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.GetCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/CreateComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.CreateCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/EditComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentRequestWrapper.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.EditCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/DeleteComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.DeleteCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PinComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/PinComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.PinCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnpinComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/UnpinComment',
            nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.UnpinCommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddReaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/AddReaction',
            nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.AddReactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveReaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nominal.comments.v1.CommentsService/RemoveReaction',
            nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionRequest.SerializeToString,
            nominal_dot_comments_dot_v1_dot_comments__pb2.RemoveReactionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
