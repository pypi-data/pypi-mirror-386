[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "coda-mcp"
version = "0.12.0"
description = "MCP server for Coda document integration"
authors = [{name = "Liminal Commons", email = "team@liminalcommons.org"}]
readme = "README.md"
requires-python = ">= 3.11"
license = {text = "MIT"}
keywords = ["mcp", "coda", "model-context-protocol", "ai", "integration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pydantic>=2.7",
    "mcp==1.13.1",
    "codaio>=0.6.0",
    "httpx>=0.24.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-anyio>=0.0.0",
    "pytest-docker>=3.1.0",
    "pytest-timeout>=2.2.0",
    "pytest-cov>=4.1.0",
    "pytest-bdd>=7.0.0",
    "hypothesis>=6.100.0",
    "requests>=2.31.0",
    "responses>=0.24.0",
    "jsonschema>=4.21.0",
]
security = [
    "pip-audit>=2.0",
    "bandit>=1.7",
    "ruff>=0.1",
    "cyclonedx-bom>=4.0",
]

[project.urls]
Homepage = "https://github.com/liminalcommons/mcp-server-coda"
Documentation = "https://github.com/liminalcommons/mcp-server-coda/tree/main/docs"
Repository = "https://github.com/liminalcommons/mcp-server-coda.git"
Issues = "https://github.com/liminalcommons/mcp-server-coda/issues"

[project.scripts]
coda-mcp = "coda_mcp.server:main"
mcpctl = "coda_mcp.cli.mcpctl:main"
mcp-configure-clients = "coda_mcp.cli.configure_clients:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
norecursedirs = ["step_defs", "__pycache__", "*.egg", ".git", "venv"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov-fail-under=85"
]
markers = [
    "unit: Unit tests (fast, isolated, mocked)",
    "integration: Integration tests (real API calls)",
    "contract: Contract tests (API signature validation)",
    "bdd: BDD scenarios (pytest-bdd)",
    "regression: Regression tests (bug fixes)",
    "slow: Slow tests (>1s execution time)"
]
bdd_features_base_dir = "tests/features"
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "W", "I", "N", "UP"]
ignore = ["E501"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]
