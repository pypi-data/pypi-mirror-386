[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openhcs"
dynamic = ["version"]
description = "High-Content Screening image processing engine with native GPU support"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT License"}
authors = [
    {name = "Tristan Simas", email = "tristan.simas@mail.mcgill.ca"}
]
keywords = [
    "microscopy",
    "image-processing",
    "high-content-screening",
    "gpu",
    "computer-vision"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

# Core dependencies
dependencies = [
    # Core image processing and scientific computing
    "numpy>=1.26.4",
    "scikit-image>=0.25.2",
    "scikit-learn>=1.7.1",
    "scipy>=1.12.0",
    "pandas>=2.3.1",

    # Image I/O and formats
    "imageio>=2.37.0",
    "tifffile>=2025.6.11",
    "imagecodecs>=2025.3.30",
    "opencv-python>=4.11.0.86",
    "Multi-Template-Matching>=2.0.1",
    "roifile>=2024.5.24",  # Required for ROI saving to disk

    # Storage and serialization
    "PyYAML>=6.0.2",
    "zarr>=2.18.7,<3.0",
    "ome-zarr>=0.11.1",
    "dill>=0.4.0",

    # Core utilities
    "setuptools",
    "watchdog>=6.0.0",
    "portalocker>=2.8.2",  # Cross-platform file locking (Windows compatibility for fcntl)

    # System monitoring (required by ui/shared/system_monitor_core.py)
    "psutil>=5.9.0",
]

[project.optional-dependencies]
# Development dependencies (CPU-only testing)
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.3.2",
    "genbadge[coverage]",
    "pytest-asyncio>=0.21.0",
    "pyzmq>=26.0.0",  # Required for ZMQ execution and OMERO integration tests
]

# GUI testing dependencies
dev-gui = [
    "pytest-qt>=4.2.0",
]

# Terminal User Interface (TUI) - DEPRECATED, not available on PyPI
# TUI has git dependencies that PyPI doesn't allow
# Install manually if needed

# PyQt6 Graphical User Interface (GUI) dependencies
gui = [
    "PyQt6>=6.9.1",
    "PyQt6-QScintilla>=2.14.1",
    "pyqtgraph>=0.13.7",  # Used for system monitor visualization
    "GPUtil>=1.4.0",
    # plotext removed - PyQt GUI now uses pyqtgraph instead
    # psutil moved to core dependencies (required by ui/shared/system_monitor_core.py)
]

# Napari viewer
napari = [
    "napari>=0.4.18",
    "napari-roi-manager>=0.0.6",
]

# Fiji/ImageJ integration
fiji = [
    "pyimagej>=1.4.1",
    "scyjava>=1.9.1",
]

# All visualization tools (napari + fiji)
viz = [
    "napari>=0.4.18",
    "napari-roi-manager>=0.0.6",
    "pyimagej>=1.4.1",
    "scyjava>=1.9.1",
]

# OMERO integration dependencies
omero = [
    "omero-py>=5.19.0",
]

# Remote execution and OMERO integration
remote = [
    "pyzmq>=26.0.0",  # ZMQ-based remote execution and streaming
    "omero-py>=5.19.0",  # OMERO Python bindings for OMERO backend
]

# GPU acceleration dependencies
gpu = [
    # PyTorch
    "torch>=2.6.0,<2.8.0",
    "torchvision>=0.21.0,<0.23.0",
    
    # JAX
    "jax>=0.5.3,<0.6.0",
    "jaxlib>=0.5.3,<0.6.0",
    
    # JAX CUDA plugins
    "jax-cuda12-pjrt>=0.5.3,<0.6.0",
    "jax-cuda12-plugin>=0.5.3,<0.6.0",
    
    # CuPy
    "cupy-cuda12x>=13.3.0,<14.0.0",
    
    # CuCIM
    "cucim-cu12>=25.6.0,<26.0.0",
    
    # TensorFlow
    "tensorflow>=2.19.0,<2.20.0",
    
    # TensorFlow Probability
    "tensorflow-probability[tf]>=0.25.0,<0.26.0",
    
    # pyclesperanto
    "pyclesperanto>=0.17.1",

    # torbi - GPU-accelerated Viterbi decoding (git dependency, install manually if needed)
    # "torbi @ git+https://github.com/trissim/torbi.git",
]

# All non-dev extras combined (TUI excluded - deprecated)
all = [
    # GUI
    "PyQt6>=6.9.1",
    "PyQt6-QScintilla>=2.14.1",
    "pyqtgraph>=0.13.7",
    "GPUtil>=1.4.0",
    # plotext removed - PyQt GUI now uses pyqtgraph instead
    # psutil moved to core dependencies (required by ui/shared/system_monitor_core.py)

    # Viz
    "napari>=0.4.18",
    "napari-roi-manager>=0.0.6",
    "pyimagej>=1.4.1",
    "scyjava>=1.9.1",

    # GPU
    "torch>=2.6.0,<2.8.0",
    "torchvision>=0.21.0,<0.23.0",
    "jax>=0.5.3,<0.6.0",
    "jaxlib>=0.5.3,<0.6.0",
    "jax-cuda12-pjrt>=0.5.3,<0.6.0",
    "jax-cuda12-plugin>=0.5.3,<0.6.0",
    "cupy-cuda12x>=13.3.0,<14.0.0",
    "cucim-cu12>=25.6.0,<26.0.0",
    "tensorflow>=2.19.0,<2.20.0",
    "tensorflow-probability[tf]>=0.25.0,<0.26.0",
    "pyclesperanto>=0.17.1",
    # "torbi @ git+https://github.com/trissim/torbi.git",  # Git dependency, install manually if needed
]

[project.urls]
Homepage = "https://github.com/trissim/openhcs"
"Bug Reports" = "https://github.com/trissim/openhcs/issues"
Source = "https://github.com/trissim/openhcs"
Documentation = "https://github.com/trissim/openhcs/blob/main/README.md"

[project.scripts]
# Main interfaces - GUI is now the default
openhcs = "openhcs.pyqt_gui.__main__:main"
openhcs-gui = "openhcs.pyqt_gui.__main__:main"
# openhcs-tui = "openhcs.textual_tui.__main__:main"  # TUI deprecated, not in PyPI

# Utility scripts
openhcs-recache = "openhcs.utils.recache_function_registry:main"

[tool.setuptools]
# Automatically find all packages under openhcs/
zip-safe = false

[tool.setuptools.packages.find]
include = ["openhcs*"]

[tool.setuptools.dynamic]
version = {attr = "openhcs.__version__"}

[tool.setuptools.package-data]
openhcs = ["**/*.css", "**/*.yaml", "**/*.yml", "**/*.json"]

# GPU Dependencies Version Notes:
# - JAX 0.4.38: Last version compatible with CuDNN 9.5.x (JAX 0.5.0+ requires CuDNN 9.8+)
# - JAX CUDA plugins must exactly match JAX version for PJRT API compatibility
# - PyTorch 2.7.x: Compatible with CUDA 12.6 and CuDNN 9.5.x
# - TensorFlow 2.15-2.19: Stable DLPack support (2.12+ required for DLPack)
# - CuPy: Use cupy-cuda12x for broad CUDA 12.x compatibility (not cupy-cuda120)
# - CuCIM: PyPI cucim-cu12 package is incomplete (missing filters), use conda for full version
# - torbi: Using patched fork that fixes PyTorch 2.6+ CUDA compilation issues (py_limited_api)
#
# Installation Examples:
# - Base package only: pip install openhcs
# - With TUI: pip install "openhcs[tui]"
# - With GUI: pip install "openhcs[gui]"
# - With GPU support: pip install "openhcs[gpu]"
# - Full installation: pip install "openhcs[all]"

