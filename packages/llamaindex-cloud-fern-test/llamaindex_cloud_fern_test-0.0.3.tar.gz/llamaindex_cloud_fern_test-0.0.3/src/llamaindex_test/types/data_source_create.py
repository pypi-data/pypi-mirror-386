# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .configurable_data_source_names import ConfigurableDataSourceNames
from .data_source_create_component import DataSourceCreateComponent
from .data_source_create_custom_metadata_value import DataSourceCreateCustomMetadataValue


class DataSourceCreate(UncheckedBaseModel):
    """
    Schema for creating a data source.
    """

    name: str = pydantic.Field()
    """
    The name of the data source.
    """

    source_type: ConfigurableDataSourceNames
    custom_metadata: typing.Optional[typing.Dict[str, typing.Optional[DataSourceCreateCustomMetadataValue]]] = (
        pydantic.Field(default=None)
    )
    """
    Custom metadata that will be present on all data loaded from the data source
    """

    component: DataSourceCreateComponent = pydantic.Field()
    """
    Component that implements the data source
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
