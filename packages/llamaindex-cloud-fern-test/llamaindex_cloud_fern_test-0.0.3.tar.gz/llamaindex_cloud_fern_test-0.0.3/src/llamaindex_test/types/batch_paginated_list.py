# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .batch import Batch


class BatchPaginatedList(UncheckedBaseModel):
    data: typing.List[Batch] = pydantic.Field()
    """
    List of batches
    """

    limit: int = pydantic.Field()
    """
    Pagination limit
    """

    offset: int = pydantic.Field()
    """
    Pagination offset
    """

    total_count: int = pydantic.Field()
    """
    Total number of batches
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
