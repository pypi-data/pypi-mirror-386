# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class CloudAzStorageBlobDataSource(UncheckedBaseModel):
    supports_access_control: typing.Optional[bool] = None
    container_name: str = pydantic.Field()
    """
    The name of the Azure Storage Blob container to read from.
    """

    account_url: str = pydantic.Field()
    """
    The Azure Storage Blob account URL to use for authentication.
    """

    blob: typing.Optional[str] = pydantic.Field(default=None)
    """
    The blob name to read from.
    """

    prefix: typing.Optional[str] = pydantic.Field(default=None)
    """
    The prefix of the Azure Storage Blob objects to read from.
    """

    account_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Azure Storage Blob account name to use for authentication.
    """

    account_key: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Azure Storage Blob account key to use for authentication.
    """

    tenant_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Azure AD tenant ID to use for authentication.
    """

    client_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Azure AD client ID to use for authentication.
    """

    client_secret: typing.Optional[str] = pydantic.Field(default=None)
    """
    The Azure AD client secret to use for authentication.
    """

    class_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
