# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .webhook_configuration_webhook_events_item import WebhookConfigurationWebhookEventsItem


class WebhookConfiguration(UncheckedBaseModel):
    """
    Allows the user to configure webhook options for notifications and callbacks.
    """

    webhook_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    The URL to send webhook notifications to.
    """

    webhook_headers: typing.Optional[typing.Dict[str, typing.Optional[str]]] = pydantic.Field(default=None)
    """
    Custom HTTP headers to include with webhook requests.
    """

    webhook_events: typing.Optional[typing.List[WebhookConfigurationWebhookEventsItem]] = pydantic.Field(default=None)
    """
    List of event names to subscribe to
    """

    webhook_output_format: typing.Optional[str] = pydantic.Field(default=None)
    """
    The output format to use for the webhook. Defaults to string if none supplied. Currently supported values: string, json
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
