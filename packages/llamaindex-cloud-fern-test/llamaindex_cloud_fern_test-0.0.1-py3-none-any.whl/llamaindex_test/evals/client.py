# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.supported_llm_model import SupportedLlmModel
from .raw_client import AsyncRawEvalsClient, RawEvalsClient


class EvalsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawEvalsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawEvalsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawEvalsClient
        """
        return self._raw_client

    def list_supported_models(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[SupportedLlmModel]:
        """
        List supported models.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[SupportedLlmModel]
            Successful Response

        Examples
        --------
        from llamaindex_test import LlamaCloud

        client = LlamaCloud(
            token="YOUR_TOKEN",
            base_url="https://yourhost.com/path/to/api",
        )
        client.evals.list_supported_models()
        """
        _response = self._raw_client.list_supported_models(request_options=request_options)
        return _response.data


class AsyncEvalsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawEvalsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawEvalsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawEvalsClient
        """
        return self._raw_client

    async def list_supported_models(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[SupportedLlmModel]:
        """
        List supported models.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[SupportedLlmModel]
            Successful Response

        Examples
        --------
        import asyncio

        from llamaindex_test import AsyncLlamaCloud

        client = AsyncLlamaCloud(
            token="YOUR_TOKEN",
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.evals.list_supported_models()


        asyncio.run(main())
        """
        _response = await self._raw_client.list_supported_models(request_options=request_options)
        return _response.data
