# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class FileFilter(UncheckedBaseModel):
    """
    Filter parameters for file queries.
    """

    project_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by project ID
    """

    file_ids: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Filter by specific file IDs
    """

    file_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by file name
    """

    data_source_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by data source ID
    """

    external_file_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by external file ID
    """

    only_manually_uploaded: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Filter only manually uploaded files (data_source_id is null)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
