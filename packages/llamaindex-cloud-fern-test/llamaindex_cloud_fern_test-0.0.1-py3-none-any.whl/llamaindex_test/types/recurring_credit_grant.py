# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .credit_type import CreditType


class RecurringCreditGrant(UncheckedBaseModel):
    name: str
    credit_amount: int
    credit_type: CreditType
    product_id: str = pydantic.Field()
    """
    The ID of the product in Metronome used to represent the credit grant
    """

    priority: float
    rollover_fraction: float = pydantic.Field()
    """
    The fraction of the credit that will roll over to the next period, between 0 and 1
    """

    periods_duration: typing.Optional[float] = pydantic.Field(default=None)
    """
    How many billing periods the credit grant will last for
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
