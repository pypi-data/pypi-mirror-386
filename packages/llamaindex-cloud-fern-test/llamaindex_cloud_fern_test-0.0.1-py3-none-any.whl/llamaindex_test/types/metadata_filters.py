# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .filter_condition import FilterCondition


class MetadataFilters(UncheckedBaseModel):
    """
    Metadata filters for vector stores.
    """

    filters: typing.List["MetadataFiltersFiltersItem"]
    condition: typing.Optional[FilterCondition] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .metadata_filters_filters_item import MetadataFiltersFiltersItem  # noqa: E402, F401, I001

update_forward_refs(MetadataFilters)
