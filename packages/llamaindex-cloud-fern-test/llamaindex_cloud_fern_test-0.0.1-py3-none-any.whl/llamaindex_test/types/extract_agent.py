# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .extract_agent_data_schema_value import ExtractAgentDataSchemaValue
from .extract_config import ExtractConfig


class ExtractAgent(UncheckedBaseModel):
    """
    Schema and configuration for creating an extraction agent.
    """

    id: str = pydantic.Field()
    """
    The id of the extraction agent.
    """

    name: str = pydantic.Field()
    """
    The name of the extraction agent.
    """

    project_id: str = pydantic.Field()
    """
    The ID of the project that the extraction agent belongs to.
    """

    data_schema: typing.Dict[str, typing.Optional[ExtractAgentDataSchemaValue]] = pydantic.Field()
    """
    The schema of the data.
    """

    config: ExtractConfig = pydantic.Field()
    """
    The configuration parameters for the extraction agent.
    """

    custom_configuration: typing.Optional[typing.Literal["default"]] = pydantic.Field(default=None)
    """
    Custom configuration type for the extraction agent. Currently supports 'default'.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The creation time of the extraction agent.
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The last update time of the extraction agent.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
