# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .quota_rate_limit_configuration_value_denominator_units import QuotaRateLimitConfigurationValueDenominatorUnits


class QuotaRateLimitConfigurationValue(UncheckedBaseModel):
    """
    Quota-specific wrapper for rate limit configuration.

    For simple limits (like files per index), use numerator as the limit value
    and leave denominator as None.
    """

    numerator: int = pydantic.Field()
    """
    The rate numerator
    """

    denominator: typing.Optional[int] = pydantic.Field(default=None)
    """
    The rate limit denominator
    """

    denominator_units: typing.Optional[QuotaRateLimitConfigurationValueDenominatorUnits] = pydantic.Field(default=None)
    """
    The default rate limit denominator units
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
