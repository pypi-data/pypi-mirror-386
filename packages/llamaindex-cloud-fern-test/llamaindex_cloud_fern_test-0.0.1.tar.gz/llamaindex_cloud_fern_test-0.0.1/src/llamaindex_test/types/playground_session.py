# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .chat_message import ChatMessage
from .llm_parameters import LlmParameters
from .preset_retrieval_params import PresetRetrievalParams


class PlaygroundSession(UncheckedBaseModel):
    """
    A playground session for a user.
    """

    id: str = pydantic.Field()
    """
    Unique identifier
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Creation datetime
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Update datetime
    """

    pipeline_id: str
    user_id: str
    llm_params_id: str
    llm_params: typing.Optional[LlmParameters] = pydantic.Field(default=None)
    """
    LLM parameters last used in this session.
    """

    retrieval_params_id: str
    retrieval_params: typing.Optional[PresetRetrievalParams] = pydantic.Field(default=None)
    """
    Preset retrieval parameters last used in this session.
    """

    chat_messages: typing.Optional[typing.List[ChatMessage]] = pydantic.Field(default=None)
    """
    Chat message history for this session.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .metadata_filters import MetadataFilters  # noqa: E402, F401, I001

update_forward_refs(PlaygroundSession)
