# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .message_annotation import MessageAnnotation
from .message_role import MessageRole


class ChatMessage(UncheckedBaseModel):
    id: str
    index: int = pydantic.Field()
    """
    The index of the message in the chat.
    """

    annotations: typing.Optional[typing.List[MessageAnnotation]] = pydantic.Field(default=None)
    """
    Retrieval annotations for the message.
    """

    role: MessageRole = pydantic.Field()
    """
    The role of the message.
    """

    content: typing.Optional[str] = pydantic.Field(default=None)
    """
    Text content of the generation
    """

    additional_kwargs: typing.Optional[typing.Dict[str, str]] = pydantic.Field(default=None)
    """
    Additional arguments passed to the model
    """

    class_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
