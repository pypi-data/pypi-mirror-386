# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .classifier_rule import ClassifierRule
from .classify_parsing_configuration import ClassifyParsingConfiguration
from .status_enum import StatusEnum


class ClassifyJob(UncheckedBaseModel):
    """
    A classify job.
    """

    id: str = pydantic.Field()
    """
    Unique identifier
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Creation datetime
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Update datetime
    """

    rules: typing.List[ClassifierRule] = pydantic.Field()
    """
    The rules to classify the files
    """

    user_id: str = pydantic.Field()
    """
    The ID of the user
    """

    project_id: str = pydantic.Field()
    """
    The ID of the project
    """

    status: StatusEnum = pydantic.Field()
    """
    The status of the classify job
    """

    parsing_configuration: typing.Optional[ClassifyParsingConfiguration] = pydantic.Field(default=None)
    """
    The configuration for the parsing job
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
