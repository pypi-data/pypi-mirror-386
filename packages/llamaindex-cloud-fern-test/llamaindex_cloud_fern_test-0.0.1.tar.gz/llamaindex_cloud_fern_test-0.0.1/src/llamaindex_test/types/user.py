# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .custom_claims import CustomClaims
from .restrict import Restrict
from .user_last_login_provider import UserLastLoginProvider


class User(UncheckedBaseModel):
    id: str
    email: str
    last_login_provider: typing.Optional[UserLastLoginProvider] = pydantic.Field(default=None)
    """
    The last login provider.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user's name.
    """

    first_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user's first name.
    """

    last_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user's last name.
    """

    claims: typing.Optional[CustomClaims] = pydantic.Field(default=None)
    """
    The user's custom claims.
    """

    restrict: typing.Optional[Restrict] = pydantic.Field(default=None)
    """
    The restrictions on the user.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The user's creation date.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
