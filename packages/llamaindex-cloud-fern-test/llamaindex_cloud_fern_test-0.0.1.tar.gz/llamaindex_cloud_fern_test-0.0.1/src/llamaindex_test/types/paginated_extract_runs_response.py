# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .extract_run import ExtractRun


class PaginatedExtractRunsResponse(UncheckedBaseModel):
    """
    Schema for paginated extraction runs response.
    """

    items: typing.List[ExtractRun] = pydantic.Field()
    """
    The list of extraction runs
    """

    total: int = pydantic.Field()
    """
    The total number of extraction runs
    """

    skip: int = pydantic.Field()
    """
    The number of extraction runs skipped
    """

    limit: int = pydantic.Field()
    """
    The maximum number of extraction runs returned
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
