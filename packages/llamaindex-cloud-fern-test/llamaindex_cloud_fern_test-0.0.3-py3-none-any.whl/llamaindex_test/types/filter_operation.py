# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .filter_operation_eq import FilterOperationEq
from .filter_operation_gt import FilterOperationGt
from .filter_operation_gte import FilterOperationGte
from .filter_operation_includes_item import FilterOperationIncludesItem
from .filter_operation_lt import FilterOperationLt
from .filter_operation_lte import FilterOperationLte


class FilterOperation(UncheckedBaseModel):
    """
    API request model for a filter comparison operation.
    """

    eq: typing.Optional[FilterOperationEq] = None
    gt: typing.Optional[FilterOperationGt] = None
    gte: typing.Optional[FilterOperationGte] = None
    lt: typing.Optional[FilterOperationLt] = None
    lte: typing.Optional[FilterOperationLte] = None
    includes: typing.Optional[typing.List[typing.Optional[FilterOperationIncludesItem]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
