# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .base_plan_metronome_plan_type import BasePlanMetronomePlanType
from .base_plan_name import BasePlanName
from .base_plan_plan_frequency import BasePlanPlanFrequency
from .billing_period import BillingPeriod
from .plan_limits import PlanLimits
from .recurring_credit_grant import RecurringCreditGrant


class BasePlan(UncheckedBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the plan in Metronome
    """

    name: BasePlanName
    metronome_plan_type: BasePlanMetronomePlanType
    metronome_rate_card_alias: typing.Optional[str] = None
    limits: PlanLimits
    recurring_credits: typing.Optional[typing.List[RecurringCreditGrant]] = None
    plan_frequency: BasePlanPlanFrequency
    metronome_customer_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the customer in Metronome
    """

    starting_on: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The date the plan starts on
    """

    ending_before: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The date the plan ends on
    """

    current_billing_period: typing.Optional[BillingPeriod] = pydantic.Field(default=None)
    """
    The current billing period
    """

    is_payment_failed: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the organization has a failed payment that requires support contact
    """

    failure_count: typing.Optional[int] = pydantic.Field(default=None)
    """
    The number of payment failures for this organization
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
