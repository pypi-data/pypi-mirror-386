# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ..core.unchecked_base_model import UncheckedBaseModel
from .retriever_pipeline import RetrieverPipeline


class Retriever(UncheckedBaseModel):
    """
    An entity that retrieves context nodes from several sub RetrieverTools.
    """

    name: str = pydantic.Field()
    """
    A name for the retriever tool. Will default to the pipeline name if not provided.
    """

    pipelines: typing.Optional[typing.List[RetrieverPipeline]] = pydantic.Field(default=None)
    """
    The pipelines this retriever uses.
    """

    id: str = pydantic.Field()
    """
    Unique identifier
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Creation datetime
    """

    updated_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Update datetime
    """

    project_id: str = pydantic.Field()
    """
    The ID of the project this retriever resides in.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .metadata_filters import MetadataFilters  # noqa: E402, F401, I001

update_forward_refs(Retriever)
