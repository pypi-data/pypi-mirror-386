# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class PlanLimits(UncheckedBaseModel):
    allow_pay_as_you_go: bool = pydantic.Field()
    """
    Whether usage is allowed after credit grants are exhausted
    """

    subscription_cost_usd: int
    max_monthly_invoice_total_usd: typing.Optional[int] = None
    spending_soft_alerts_usd_cents: typing.Optional[typing.List[int]] = pydantic.Field(default=None)
    """
    The amount of USD cents at which a soft alert should be triggered
    """

    max_concurrent_parse_jobs_premium: typing.Optional[int] = None
    max_concurrent_parse_jobs_other: typing.Optional[int] = None
    max_extraction_agents: typing.Optional[int] = None
    max_extraction_runs: typing.Optional[int] = None
    max_extraction_jobs: typing.Optional[int] = None
    max_pages_per_index: typing.Optional[int] = None
    max_files_per_index: typing.Optional[int] = None
    max_indexes: typing.Optional[int] = None
    max_concurrent_index_jobs: typing.Optional[int] = None
    max_data_sources: typing.Optional[int] = None
    max_embedding_models: typing.Optional[int] = None
    max_data_sinks: typing.Optional[int] = None
    max_published_agents: typing.Optional[int] = None
    max_report_agent_sessions: typing.Optional[int] = None
    max_users: typing.Optional[int] = None
    max_organizations: typing.Optional[int] = None
    max_projects: typing.Optional[int] = None
    mfa_enabled: bool
    sso_enabled: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
