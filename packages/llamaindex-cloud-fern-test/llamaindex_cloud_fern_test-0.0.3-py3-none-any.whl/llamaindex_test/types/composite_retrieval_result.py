# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .composite_retrieved_text_node_with_score import CompositeRetrievedTextNodeWithScore
from .page_figure_node_with_score import PageFigureNodeWithScore
from .page_screenshot_node_with_score import PageScreenshotNodeWithScore


class CompositeRetrievalResult(UncheckedBaseModel):
    nodes: typing.Optional[typing.List[CompositeRetrievedTextNodeWithScore]] = pydantic.Field(default=None)
    """
    The retrieved nodes from the composite retrieval.
    """

    image_nodes: typing.Optional[typing.List[PageScreenshotNodeWithScore]] = pydantic.Field(default=None)
    """
    The image nodes retrieved by the pipeline for the given query. Deprecated - will soon be replaced with 'page_screenshot_nodes'.
    """

    page_figure_nodes: typing.Optional[typing.List[PageFigureNodeWithScore]] = pydantic.Field(default=None)
    """
    The page figure nodes retrieved by the pipeline for the given query.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
