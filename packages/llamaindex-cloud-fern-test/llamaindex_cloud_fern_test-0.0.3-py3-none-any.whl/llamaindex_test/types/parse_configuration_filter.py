# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel


class ParseConfigurationFilter(UncheckedBaseModel):
    """
    Filter parameters for parse configuration queries.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by name
    """

    source_type: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by source type
    """

    source_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by source ID
    """

    creator: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by creator
    """

    version: typing.Optional[str] = pydantic.Field(default=None)
    """
    Filter by version
    """

    parse_config_ids: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Filter by specific parse configuration IDs
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
