# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .message_role import MessageRole


class ChatMessageChunk(UncheckedBaseModel):
    """
    A chunk of a chat message returned when streaming is enabled
    """

    delta: str = pydantic.Field()
    """
    The incremental text content of this chunk
    """

    role: typing.Optional[MessageRole] = pydantic.Field(default=None)
    """
    The role of the message (only present in first chunk)
    """

    index: int = pydantic.Field()
    """
    The index of this chunk in the stream
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
