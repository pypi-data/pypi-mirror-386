# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .advanced_mode_transform_config_chunking_config import AdvancedModeTransformConfigChunkingConfig
from .advanced_mode_transform_config_segmentation_config import AdvancedModeTransformConfigSegmentationConfig


class AdvancedModeTransformConfig(UncheckedBaseModel):
    segmentation_config: typing.Optional[AdvancedModeTransformConfigSegmentationConfig] = pydantic.Field(default=None)
    """
    Configuration for the segmentation.
    """

    chunking_config: typing.Optional[AdvancedModeTransformConfigChunkingConfig] = pydantic.Field(default=None)
    """
    Configuration for the chunking.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
