[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "talkdo"
version = "1.0.0"
description = "Talkdo - Talk your to-dos. A professional CLI task manager with natural language processing"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Talkdo Team", email = "team@talkdo.dev"}
]
maintainers = [
    {name = "Talkdo Team", email = "team@talkdo.dev"}
]
keywords = ["cli", "task-manager", "productivity", "natural-language", "todo", "talkdo", "voice", "speech"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "dateparser>=1.1.0",
    "pyyaml>=6.0",
    "croniter>=1.3.0",
    "plyer>=2.1.0",
    "click>=8.0.0",
    "tabulate>=0.9.0",
    "python-dateutil>=2.8.0",
    "schedule>=1.2.0",
    "psutil>=5.9.0",
    "qrcode>=7.4.0",
    "cryptography>=41.0.0",
    "requests>=2.31.0",
    "pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/talkdo/talkdo"
Repository = "https://github.com/talkdo/talkdo"
Documentation = "https://talkdo.readthedocs.io"
"Bug Tracker" = "https://github.com/talkdo/talkdo/issues"

[project.scripts]
talkdo = "cli_task_manager.cli:app"
talkdo-daemon = "cli_task_manager.daemon:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["cli_task_manager*"]

[tool.setuptools.package-data]
"cli_task_manager" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=cli_task_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
]
