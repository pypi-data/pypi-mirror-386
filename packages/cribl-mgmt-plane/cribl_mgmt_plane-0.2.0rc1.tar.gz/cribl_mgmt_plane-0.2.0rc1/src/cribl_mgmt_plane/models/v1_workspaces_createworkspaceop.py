"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .defaulterrordto import DefaultErrorDTO, DefaultErrorDTOTypedDict
from .workspacecreaterequestdto import (
    WorkspaceCreateRequestDTO,
    WorkspaceCreateRequestDTOTypedDict,
)
from .workspaceschema import WorkspaceSchema, WorkspaceSchemaTypedDict
from cribl_mgmt_plane.types import BaseModel
from cribl_mgmt_plane.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1WorkspacesCreateWorkspaceRequestTypedDict(TypedDict):
    organization_id: str
    r"""The <code>id</code> of the Organization where you want to create the Workspace."""
    workspace_create_request_dto: WorkspaceCreateRequestDTOTypedDict


class V1WorkspacesCreateWorkspaceRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Organization where you want to create the Workspace."""

    workspace_create_request_dto: Annotated[
        WorkspaceCreateRequestDTO,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]


V1WorkspacesCreateWorkspaceResponseTypedDict = TypeAliasType(
    "V1WorkspacesCreateWorkspaceResponseTypedDict",
    Union[DefaultErrorDTOTypedDict, WorkspaceSchemaTypedDict],
)


V1WorkspacesCreateWorkspaceResponse = TypeAliasType(
    "V1WorkspacesCreateWorkspaceResponse", Union[DefaultErrorDTO, WorkspaceSchema]
)
