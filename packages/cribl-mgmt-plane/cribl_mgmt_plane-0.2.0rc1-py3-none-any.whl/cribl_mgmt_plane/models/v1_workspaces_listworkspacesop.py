"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .defaulterrordto import DefaultErrorDTO, DefaultErrorDTOTypedDict
from .workspaceslistresponsedto import (
    WorkspacesListResponseDTO,
    WorkspacesListResponseDTOTypedDict,
)
from cribl_mgmt_plane.types import BaseModel
from cribl_mgmt_plane.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1WorkspacesListWorkspacesRequestTypedDict(TypedDict):
    organization_id: str
    r"""The <code>id</code> of the Organization that contains the Workspaces."""


class V1WorkspacesListWorkspacesRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Organization that contains the Workspaces."""


V1WorkspacesListWorkspacesResponseTypedDict = TypeAliasType(
    "V1WorkspacesListWorkspacesResponseTypedDict",
    Union[WorkspacesListResponseDTOTypedDict, DefaultErrorDTOTypedDict],
)


V1WorkspacesListWorkspacesResponse = TypeAliasType(
    "V1WorkspacesListWorkspacesResponse",
    Union[WorkspacesListResponseDTO, DefaultErrorDTO],
)
