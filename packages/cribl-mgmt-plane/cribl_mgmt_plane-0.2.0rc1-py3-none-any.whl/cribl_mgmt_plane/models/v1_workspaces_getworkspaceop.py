"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .defaulterrordto import DefaultErrorDTO, DefaultErrorDTOTypedDict
from .workspaceschema import WorkspaceSchema, WorkspaceSchemaTypedDict
from cribl_mgmt_plane.types import BaseModel
from cribl_mgmt_plane.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing import Union
from typing_extensions import Annotated, TypeAliasType, TypedDict


class V1WorkspacesGetWorkspaceRequestTypedDict(TypedDict):
    organization_id: str
    r"""The <code>id</code> of the Organization that contains the Workspace."""
    workspace_id: str
    r"""The <code>id</code> of the Workspace to get."""


class V1WorkspacesGetWorkspaceRequest(BaseModel):
    organization_id: Annotated[
        str,
        pydantic.Field(alias="organizationId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Organization that contains the Workspace."""

    workspace_id: Annotated[
        str,
        pydantic.Field(alias="workspaceId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Workspace to get."""


V1WorkspacesGetWorkspaceResponseTypedDict = TypeAliasType(
    "V1WorkspacesGetWorkspaceResponseTypedDict",
    Union[DefaultErrorDTOTypedDict, WorkspaceSchemaTypedDict],
)


V1WorkspacesGetWorkspaceResponse = TypeAliasType(
    "V1WorkspacesGetWorkspaceResponse", Union[DefaultErrorDTO, WorkspaceSchema]
)
