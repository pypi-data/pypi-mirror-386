# Auto-generated from responses_api.py
# Model: ToolChoiceAllowed

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import Any, Dict, List, Literal

from pydantic import BaseModel, Field


# Model dependencies
from .mode import Mode


class ToolChoiceAllowed(BaseModel):
    type: Literal["allowed_tools"] = Field(
        ..., description="Allowed tool configuration type. Always `allowed_tools`."
    )
    mode: Mode = Field(
        ...,
        description="Constrains the tools available to the model to a pre-defined set.\n\n`auto` allows the model to pick from among the allowed tools and generate a\nmessage.\n\n`required` requires the model to call one or more of the allowed tools.\n",
    )
    tools: List[Dict[str, Any]] = Field(
        ...,
        description='A list of tool definitions that the model should be allowed to call.\n\nFor the Responses API, the list of tool definitions might look like:\n```json\n[\n  { "type": "function", "name": "get_weather" },\n  { "type": "mcp", "server_label": "deepwiki" },\n  { "type": "image_generation" }\n]\n```\n',
    )
