# Auto-generated from responses_api.py
# Model: ReasoningItem

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import List, Literal, Optional

from pydantic import BaseModel, Field


# Model dependencies
from .reasoning_text_content import ReasoningTextContent
from .status5 import Status5
from .summary_model import SummaryModel


class ReasoningItem(BaseModel):
    type: Literal["reasoning"] = Field(
        ..., description="The type of the object. Always `reasoning`.\n"
    )
    id: str = Field(
        ..., description="The unique identifier of the reasoning content.\n"
    )
    encrypted_content: Optional[str] = None
    summary: List[SummaryModel] = Field(..., description="Reasoning summary content.\n")
    content: Optional[List[ReasoningTextContent]] = Field(
        None, description="Reasoning text content.\n"
    )
    status: Optional[Status5] = Field(
        None,
        description="The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
    )
