# Auto-generated from responses_api.py
# Model: WebSearchTool

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import Literal, Optional

from pydantic import BaseModel, Field


# Model dependencies
from .filters1 import Filters1
from .search_context_size import SearchContextSize
from .web_search_approximate_location import WebSearchApproximateLocation


class WebSearchTool(BaseModel):
    type: Literal["web_search"] = Field(
        ...,
        description="The type of the web search tool. One of `web_search` or `web_search_2025_08_26`.",
    )
    filters: Optional[Filters1] = None
    user_location: Optional[WebSearchApproximateLocation] = None
    search_context_size: Optional[SearchContextSize] = Field(
        default=SearchContextSize.medium,
        description="High level guidance for the amount of context window space to use for the search. One of `low`, `medium`, or `high`. `medium` is the default.",
    )
