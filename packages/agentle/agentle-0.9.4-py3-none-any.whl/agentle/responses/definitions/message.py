# Auto-generated from responses_api.py
# Model: Message

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00

from __future__ import annotations

from typing import Literal

from pydantic import BaseModel, Field

from agentle.responses.definitions.message_content_type import MessageContentType

from .role import Role


class Message(BaseModel):
    role: Role = Field(
        ...,
        description="The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
    )

    content: MessageContentType = Field(
        ...,
        description="Text, image, or audio input to the model, used to generate a response.\nCan also contain previous assistant responses.\n",
    )

    type: Literal["message_param"] = Field(
        default="message_param",
        description="The type of the message input. Always `message_param`.\n",
    )

    @classmethod
    def user(cls, content: MessageContentType) -> Message:
        return Message(role="user", content=content)

    @classmethod
    def assistant(cls, content: MessageContentType) -> Message:
        return Message(role="assistant", content=content)

    @classmethod
    def system(cls, content: MessageContentType) -> Message:
        return Message(role="system", content=content)
