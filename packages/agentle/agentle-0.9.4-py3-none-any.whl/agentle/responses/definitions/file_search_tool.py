# Auto-generated from responses_api.py
# Model: FileSearchTool

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import List, Literal, Optional

from pydantic import BaseModel, Field


# Model dependencies
from .filters import Filters
from .ranking_options import RankingOptions


class FileSearchTool(BaseModel):
    type: Literal["file_search"] = Field(
        ..., description="The type of the file search tool. Always `file_search`."
    )
    vector_store_ids: List[str] = Field(
        ..., description="The IDs of the vector stores to search."
    )
    max_num_results: Optional[int] = Field(
        None,
        description="The maximum number of results to return. This number should be between 1 and 50 inclusive.",
    )
    ranking_options: Optional[RankingOptions] = Field(
        None, description="Ranking options for search."
    )
    filters: Optional[Filters] = None
