# Auto-generated from responses_api.py
# Model: ResponseProperties

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import List, Optional, Union

from pydantic import BaseModel, Field


# Model dependencies
from .prompt import Prompt
from .reasoning import Reasoning
from .text import Text
from .tool import Tool
from .tool_choice_allowed import ToolChoiceAllowed
from .tool_choice_custom import ToolChoiceCustom
from .tool_choice_function import ToolChoiceFunction
from .tool_choice_mcp import ToolChoiceMCP
from .tool_choice_options import ToolChoiceOptions
from .tool_choice_types import ToolChoiceTypes
from .truncation import Truncation


class ResponseProperties(BaseModel):
    previous_response_id: Optional[str] = None
    model: Optional[str] = Field(
        None,
        description="Model ID used to generate the response, like `gpt-4o` or `o3`. OpenAI\noffers a wide range of models with different capabilities, performance\ncharacteristics, and price points. Refer to the [model guide](https://platform.openai.com/docs/models)\nto browse and compare available models.\n",
    )
    reasoning: Optional[Reasoning] = None
    background: Optional[bool] = None
    max_output_tokens: Optional[int] = None
    max_tool_calls: Optional[int] = None
    text: Optional[Text] = Field(
        None,
        description="Configuration options for a text response from the model. Can be plain\ntext or structured JSON data. Learn more:\n- [Text inputs and outputs](https://platform.openai.com/docs/guides/text)\n- [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs)\n",
    )
    tools: Optional[List[Tool]] = Field(
        None,
        description="An array of tools the model may call while generating a response. You\ncan specify which tool to use by setting the `tool_choice` parameter.\n\nWe support the following categories of tools:\n- **Built-in tools**: Tools that are provided by OpenAI that extend the\n  model's capabilities, like [web search](https://platform.openai.com/docs/guides/tools-web-search)\n  or [file search](https://platform.openai.com/docs/guides/tools-file-search). Learn more about\n  [built-in tools](https://platform.openai.com/docs/guides/tools).\n- **MCP Tools**: Integrations with third-party systems via custom MCP servers\n  or predefined connectors such as Google Drive and SharePoint. Learn more about\n  [MCP Tools](https://platform.openai.com/docs/guides/tools-connectors-mcp).\n- **Function calls (custom tools)**: Functions that are defined by you,\n  enabling the model to call your own code with strongly typed arguments\n  and outputs. Learn more about\n  [function calling](https://platform.openai.com/docs/guides/function-calling). You can also use\n  custom tools to call your own code.\n",
    )
    tool_choice: Optional[
        Union[
            ToolChoiceOptions,
            ToolChoiceAllowed,
            ToolChoiceTypes,
            ToolChoiceFunction,
            ToolChoiceMCP,
            ToolChoiceCustom,
        ]
    ] = Field(
        None,
        description="How the model should select which tool (or tools) to use when generating\na response. See the `tools` parameter to see how to specify which tools\nthe model can call.\n",
    )
    prompt: Optional[Prompt] = None
    truncation: Optional[Truncation] = None
