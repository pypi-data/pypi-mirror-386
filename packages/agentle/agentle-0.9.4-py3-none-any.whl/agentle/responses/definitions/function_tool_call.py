# Auto-generated from responses_api.py
# Model: FunctionToolCall

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import Literal, Optional

from pydantic import BaseModel, Field


# Model dependencies
from .status3 import Status3


class FunctionToolCall(BaseModel):
    id: Optional[str] = Field(
        None, description="The unique ID of the function tool call.\n"
    )
    type: Literal["function_call"] = Field(
        ..., description="The type of the function tool call. Always `function_call`.\n"
    )
    call_id: str = Field(
        ...,
        description="The unique ID of the function tool call generated by the model.\n",
    )
    name: str = Field(..., description="The name of the function to run.\n")
    arguments: str = Field(
        ..., description="A JSON string of the arguments to pass to the function.\n"
    )
    status: Optional[Status3] = Field(
        None,
        description="The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
    )
