# Auto-generated from responses_api.py
# Model: Item

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import Annotated, Any, TypeVar, Union

from pydantic import Field


# Model dependencies
from .code_interpreter_tool_call import CodeInterpreterToolCall
from .computer_call_output_item_param import ComputerCallOutputItemParam
from .computer_tool_call import ComputerToolCall
from .custom_tool_call import CustomToolCall
from .custom_tool_call_output import CustomToolCallOutput
from .file_search_tool_call import FileSearchToolCall
from .function_call_output_item_param import FunctionCallOutputItemParam
from .function_tool_call import FunctionToolCall
from .image_gen_tool_call import ImageGenToolCall
from .input_message import InputMessage
from .local_shell_tool_call import LocalShellToolCall
from .local_shell_tool_call_output import LocalShellToolCallOutput
from .mcp_approval_request import MCPApprovalRequest
from .mcp_approval_response import MCPApprovalResponse
from .mcp_list_tools import MCPListTools
from .mcp_tool_call import MCPToolCall
from .output_message import OutputMessage
from .reasoning_item import ReasoningItem
from .web_search_tool_call import WebSearchToolCall


TextFormatT = TypeVar("TextFormatT")

# Using Any for OutputMessage generic parameter since Item is an Annotated type alias
Item = Annotated[
    Union[
        InputMessage,
        OutputMessage[Any],
        FileSearchToolCall,
        ComputerToolCall,
        ComputerCallOutputItemParam,
        WebSearchToolCall,
        FunctionToolCall,
        FunctionCallOutputItemParam,
        ReasoningItem,
        ImageGenToolCall,
        CodeInterpreterToolCall,
        LocalShellToolCall,
        LocalShellToolCallOutput,
        MCPListTools,
        MCPApprovalRequest,
        MCPApprovalResponse,
        MCPToolCall,
        CustomToolCallOutput,
        CustomToolCall,
    ],
    Field(discriminator="type"),
]
