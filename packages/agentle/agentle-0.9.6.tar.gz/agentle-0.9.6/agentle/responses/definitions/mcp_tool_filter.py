# Auto-generated from responses_api.py
# Model: MCPToolFilter

# generated by datamodel-codegen:
#   filename:  filtered_openapi.yaml
#   timestamp: 2025-10-18T15:02:20+00:00


from typing import List, Optional

from pydantic import BaseModel, ConfigDict, Field


class MCPToolFilter(BaseModel):
    model_config = ConfigDict(extra="forbid")

    tool_names: Optional[List[str]] = Field(
        None, description="List of allowed tool names.", title="MCP allowed tools"
    )
    read_only: Optional[bool] = Field(
        None,
        description="Indicates whether or not a tool modifies data or is read-only. If an\nMCP server is [annotated with `readOnlyHint`](https://modelcontextprotocol.io/specification/2025-06-18/schema#toolannotations-readonlyhint),\nit will match this filter.\n",
    )
