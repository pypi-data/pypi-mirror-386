[tool.poetry]
name = "vega-framework"
version = "0.2.19"
description = "Enterprise-ready Python framework that enforces Clean Architecture for building maintainable and scalable applications."
authors = ["Roberto Ferro"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/RobyFerro/vega-framework"
repository = "https://github.com/RobyFerro/vega-framework"
documentation = "https://vega-framework.readthedocs.io"
keywords = [
    "clean-architecture",
    "dependency-injection",
    "framework",
    "python",
    "async",
    "vega",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "vega", from = "." }]
include = [
    "vega/cli/templates/project/*",
    "vega/cli/templates/web/*",
    "vega/cli/templates/cli/*",
    "vega/discovery/*",
]

[tool.poetry.dependencies]
python = "^3.10"
# Pydantic v2 for modern features and better performance
pydantic = "^2.0"
# In Pydantic v2, BaseSettings moved to a separate package
pydantic-settings = "^2.0"
# python-dotenv needed for .env file support with BaseSettings
python-dotenv = "^1.0"
click = "^8.0"
jinja2 = "^3.1"
toml = "^0.10"
uvicorn = "^0.27"
starlette = "^0.37"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-asyncio = "^0.21"
pytest-cov = "^4.0"
black = "^23.0"
isort = "^5.0"
mypy = "^1.0"
ruff = "^0.1"
httpx = "^0.28.1"

[tool.poetry.scripts]
vega = "vega.cli.main:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
# Test markers
markers = [
    "unit: Unit tests for individual components",
    "functional: Functional tests for features and workflows",
    "integration: Integration tests for component interactions",
    "slow: Tests that take significant time to run",
    "web: Web framework related tests",
    "di: Dependency injection related tests",
    "events: Event system related tests",
]
# Coverage settings
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=vega",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
# Filter warnings
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.ruff]
line-length = 100
target-version = "py310"
