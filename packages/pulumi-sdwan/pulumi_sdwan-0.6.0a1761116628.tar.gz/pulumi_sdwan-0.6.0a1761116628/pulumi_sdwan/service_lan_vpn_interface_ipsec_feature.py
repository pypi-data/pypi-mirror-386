# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ServiceLanVpnInterfaceIpsecFeatureArgs', 'ServiceLanVpnInterfaceIpsecFeature']

@pulumi.input_type
class ServiceLanVpnInterfaceIpsecFeatureArgs:
    def __init__(__self__, *,
                 feature_profile_id: pulumi.Input[_builtins.str],
                 service_lan_vpn_feature_id: pulumi.Input[_builtins.str],
                 tunnel_destination_ipv4_subnet_mask: pulumi.Input[_builtins.str],
                 application_tunnel_type: Optional[pulumi.Input[_builtins.str]] = None,
                 application_tunnel_type_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 clear_dont_fragment: Optional[pulumi.Input[_builtins.bool]] = None,
                 clear_dont_fragment_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_retries_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ike_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_version: Optional[pulumi.Input[_builtins.int]] = None,
                 interface_description: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[_builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_replay_window: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_replay_window_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[_builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a ServiceLanVpnInterfaceIpsecFeature resource.
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.str] service_lan_vpn_feature_id: Service LAN VPN Feature ID
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] application_tunnel_type: Enable Application Tunnel Type
                 - Choices: `none`, `sig`
        :param pulumi.Input[_builtins.str] application_tunnel_type_variable: Variable name
        :param pulumi.Input[_builtins.bool] clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] clear_dont_fragment_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.int] dpd_interval: IKE keepalive interval (seconds)
                 - Range: `10`-`3600`
                 - Default value: `10`
        :param pulumi.Input[_builtins.str] dpd_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] dpd_retries: IKE keepalive retries
                 - Range: `2`-`60`
                 - Default value: `3`
        :param pulumi.Input[_builtins.str] dpd_retries_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_ciphersuite: IKE identity the IKE preshared secret belongs to
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
                 - Default value: `aes256-cbc-sha1`
        :param pulumi.Input[_builtins.str] ike_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group: IKE Diffie Hellman Groups
                 - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
                 - Default value: `16`
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_local_end_point: IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_local_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point: IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_integrity_protocol: IKE integrity protocol
                 - Choices: `main`, `aggressive`
                 - Default value: `main`
        :param pulumi.Input[_builtins.str] ike_integrity_protocol_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_preshared_key: Use preshared key to authenticate IKE peer
        :param pulumi.Input[_builtins.str] ike_preshared_key_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_rekey_interval: IKE rekey interval <60..86400> seconds
                 - Range: `60`-`86400`
                 - Default value: `14400`
        :param pulumi.Input[_builtins.str] ike_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_version: IKE Version <1..2>
                 - Range: `1`-`2`
                 - Default value: `1`
        :param pulumi.Input[_builtins.str] interface_description: Interface description
        :param pulumi.Input[_builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[_builtins.str] interface_name: Interface name: IPsec when present
        :param pulumi.Input[_builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[_builtins.int] ip_mtu: Interface MTU <68..9216>, in bytes
                 - Range: `68`-`9216`
                 - Default value: `1500`
        :param pulumi.Input[_builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite: IPsec(ESP) encryption and integrity protocol
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
                 - Default value: `aes256-gcm`
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_rekey_interval: IPsec rekey interval <300..1209600> seconds
                 - Range: `120`-`2592000`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] ipsec_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_replay_window: Replay window size 32..8192 (must be a power of 2)
                 - Range: `64`-`4096`
                 - Default value: `512`
        :param pulumi.Input[_builtins.str] ipsec_replay_window_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy: IPsec perfect forward secrecy settings
                 - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
                 - Default value: `group-16`
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy_variable: Variable name
        :param pulumi.Input[_builtins.bool] shutdown: Administrative state
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[_builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes
                 - Range: `500`-`1460`
        :param pulumi.Input[_builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[_builtins.str] tracker_id: Enable tracker for this interface
        :param pulumi.Input[_builtins.str] tracker_id_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_route_via: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_route_via_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_interface: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask_variable: Variable name
        """
        pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        pulumi.set(__self__, "service_lan_vpn_feature_id", service_lan_vpn_feature_id)
        pulumi.set(__self__, "tunnel_destination_ipv4_subnet_mask", tunnel_destination_ipv4_subnet_mask)
        if application_tunnel_type is not None:
            pulumi.set(__self__, "application_tunnel_type", application_tunnel_type)
        if application_tunnel_type_variable is not None:
            pulumi.set(__self__, "application_tunnel_type_variable", application_tunnel_type_variable)
        if clear_dont_fragment is not None:
            pulumi.set(__self__, "clear_dont_fragment", clear_dont_fragment)
        if clear_dont_fragment_variable is not None:
            pulumi.set(__self__, "clear_dont_fragment_variable", clear_dont_fragment_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dpd_interval is not None:
            pulumi.set(__self__, "dpd_interval", dpd_interval)
        if dpd_interval_variable is not None:
            pulumi.set(__self__, "dpd_interval_variable", dpd_interval_variable)
        if dpd_retries is not None:
            pulumi.set(__self__, "dpd_retries", dpd_retries)
        if dpd_retries_variable is not None:
            pulumi.set(__self__, "dpd_retries_variable", dpd_retries_variable)
        if ike_ciphersuite is not None:
            pulumi.set(__self__, "ike_ciphersuite", ike_ciphersuite)
        if ike_ciphersuite_variable is not None:
            pulumi.set(__self__, "ike_ciphersuite_variable", ike_ciphersuite_variable)
        if ike_diffie_hellman_group is not None:
            pulumi.set(__self__, "ike_diffie_hellman_group", ike_diffie_hellman_group)
        if ike_diffie_hellman_group_variable is not None:
            pulumi.set(__self__, "ike_diffie_hellman_group_variable", ike_diffie_hellman_group_variable)
        if ike_id_local_end_point is not None:
            pulumi.set(__self__, "ike_id_local_end_point", ike_id_local_end_point)
        if ike_id_local_end_point_variable is not None:
            pulumi.set(__self__, "ike_id_local_end_point_variable", ike_id_local_end_point_variable)
        if ike_id_remote_end_point is not None:
            pulumi.set(__self__, "ike_id_remote_end_point", ike_id_remote_end_point)
        if ike_id_remote_end_point_variable is not None:
            pulumi.set(__self__, "ike_id_remote_end_point_variable", ike_id_remote_end_point_variable)
        if ike_integrity_protocol is not None:
            pulumi.set(__self__, "ike_integrity_protocol", ike_integrity_protocol)
        if ike_integrity_protocol_variable is not None:
            pulumi.set(__self__, "ike_integrity_protocol_variable", ike_integrity_protocol_variable)
        if ike_preshared_key is not None:
            pulumi.set(__self__, "ike_preshared_key", ike_preshared_key)
        if ike_preshared_key_variable is not None:
            pulumi.set(__self__, "ike_preshared_key_variable", ike_preshared_key_variable)
        if ike_rekey_interval is not None:
            pulumi.set(__self__, "ike_rekey_interval", ike_rekey_interval)
        if ike_rekey_interval_variable is not None:
            pulumi.set(__self__, "ike_rekey_interval_variable", ike_rekey_interval_variable)
        if ike_version is not None:
            pulumi.set(__self__, "ike_version", ike_version)
        if interface_description is not None:
            pulumi.set(__self__, "interface_description", interface_description)
        if interface_description_variable is not None:
            pulumi.set(__self__, "interface_description_variable", interface_description_variable)
        if interface_name is not None:
            pulumi.set(__self__, "interface_name", interface_name)
        if interface_name_variable is not None:
            pulumi.set(__self__, "interface_name_variable", interface_name_variable)
        if ip_mtu is not None:
            pulumi.set(__self__, "ip_mtu", ip_mtu)
        if ip_mtu_variable is not None:
            pulumi.set(__self__, "ip_mtu_variable", ip_mtu_variable)
        if ipsec_ciphersuite is not None:
            pulumi.set(__self__, "ipsec_ciphersuite", ipsec_ciphersuite)
        if ipsec_ciphersuite_variable is not None:
            pulumi.set(__self__, "ipsec_ciphersuite_variable", ipsec_ciphersuite_variable)
        if ipsec_rekey_interval is not None:
            pulumi.set(__self__, "ipsec_rekey_interval", ipsec_rekey_interval)
        if ipsec_rekey_interval_variable is not None:
            pulumi.set(__self__, "ipsec_rekey_interval_variable", ipsec_rekey_interval_variable)
        if ipsec_replay_window is not None:
            pulumi.set(__self__, "ipsec_replay_window", ipsec_replay_window)
        if ipsec_replay_window_variable is not None:
            pulumi.set(__self__, "ipsec_replay_window_variable", ipsec_replay_window_variable)
        if ipv4_address is not None:
            pulumi.set(__self__, "ipv4_address", ipv4_address)
        if ipv4_address_variable is not None:
            pulumi.set(__self__, "ipv4_address_variable", ipv4_address_variable)
        if ipv4_subnet_mask is not None:
            pulumi.set(__self__, "ipv4_subnet_mask", ipv4_subnet_mask)
        if ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "ipv4_subnet_mask_variable", ipv4_subnet_mask_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if perfect_forward_secrecy is not None:
            pulumi.set(__self__, "perfect_forward_secrecy", perfect_forward_secrecy)
        if perfect_forward_secrecy_variable is not None:
            pulumi.set(__self__, "perfect_forward_secrecy_variable", perfect_forward_secrecy_variable)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if shutdown_variable is not None:
            pulumi.set(__self__, "shutdown_variable", shutdown_variable)
        if tcp_mss is not None:
            pulumi.set(__self__, "tcp_mss", tcp_mss)
        if tcp_mss_variable is not None:
            pulumi.set(__self__, "tcp_mss_variable", tcp_mss_variable)
        if tracker_id is not None:
            pulumi.set(__self__, "tracker_id", tracker_id)
        if tracker_id_variable is not None:
            pulumi.set(__self__, "tracker_id_variable", tracker_id_variable)
        if tunnel_destination_ipv4_address is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_address", tunnel_destination_ipv4_address)
        if tunnel_destination_ipv4_address_variable is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_address_variable", tunnel_destination_ipv4_address_variable)
        if tunnel_destination_ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_subnet_mask_variable", tunnel_destination_ipv4_subnet_mask_variable)
        if tunnel_route_via is not None:
            pulumi.set(__self__, "tunnel_route_via", tunnel_route_via)
        if tunnel_route_via_variable is not None:
            pulumi.set(__self__, "tunnel_route_via_variable", tunnel_route_via_variable)
        if tunnel_source_interface is not None:
            pulumi.set(__self__, "tunnel_source_interface", tunnel_source_interface)
        if tunnel_source_interface_variable is not None:
            pulumi.set(__self__, "tunnel_source_interface_variable", tunnel_source_interface_variable)
        if tunnel_source_ipv4_address is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_address", tunnel_source_ipv4_address)
        if tunnel_source_ipv4_address_variable is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_address_variable", tunnel_source_ipv4_address_variable)
        if tunnel_source_ipv4_subnet_mask is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_subnet_mask", tunnel_source_ipv4_subnet_mask)
        if tunnel_source_ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_subnet_mask_variable", tunnel_source_ipv4_subnet_mask_variable)

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Input[_builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "feature_profile_id", value)

    @_builtins.property
    @pulumi.getter(name="serviceLanVpnFeatureId")
    def service_lan_vpn_feature_id(self) -> pulumi.Input[_builtins.str]:
        """
        Service LAN VPN Feature ID
        """
        return pulumi.get(self, "service_lan_vpn_feature_id")

    @service_lan_vpn_feature_id.setter
    def service_lan_vpn_feature_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "service_lan_vpn_feature_id", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMask")
    def tunnel_destination_ipv4_subnet_mask(self) -> pulumi.Input[_builtins.str]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask")

    @tunnel_destination_ipv4_subnet_mask.setter
    def tunnel_destination_ipv4_subnet_mask(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "tunnel_destination_ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="applicationTunnelType")
    def application_tunnel_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enable Application Tunnel Type
          - Choices: `none`, `sig`
        """
        return pulumi.get(self, "application_tunnel_type")

    @application_tunnel_type.setter
    def application_tunnel_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "application_tunnel_type", value)

    @_builtins.property
    @pulumi.getter(name="applicationTunnelTypeVariable")
    def application_tunnel_type_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "application_tunnel_type_variable")

    @application_tunnel_type_variable.setter
    def application_tunnel_type_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "application_tunnel_type_variable", value)

    @_builtins.property
    @pulumi.getter(name="clearDontFragment")
    def clear_dont_fragment(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
          - Default value: `false`
        """
        return pulumi.get(self, "clear_dont_fragment")

    @clear_dont_fragment.setter
    def clear_dont_fragment(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "clear_dont_fragment", value)

    @_builtins.property
    @pulumi.getter(name="clearDontFragmentVariable")
    def clear_dont_fragment_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "clear_dont_fragment_variable")

    @clear_dont_fragment_variable.setter
    def clear_dont_fragment_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "clear_dont_fragment_variable", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="dpdInterval")
    def dpd_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE keepalive interval (seconds)
          - Range: `10`-`3600`
          - Default value: `10`
        """
        return pulumi.get(self, "dpd_interval")

    @dpd_interval.setter
    def dpd_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "dpd_interval", value)

    @_builtins.property
    @pulumi.getter(name="dpdIntervalVariable")
    def dpd_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_interval_variable")

    @dpd_interval_variable.setter
    def dpd_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dpd_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="dpdRetries")
    def dpd_retries(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE keepalive retries
          - Range: `2`-`60`
          - Default value: `3`
        """
        return pulumi.get(self, "dpd_retries")

    @dpd_retries.setter
    def dpd_retries(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "dpd_retries", value)

    @_builtins.property
    @pulumi.getter(name="dpdRetriesVariable")
    def dpd_retries_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_retries_variable")

    @dpd_retries_variable.setter
    def dpd_retries_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dpd_retries_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuite")
    def ike_ciphersuite(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE identity the IKE preshared secret belongs to
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
          - Default value: `aes256-cbc-sha1`
        """
        return pulumi.get(self, "ike_ciphersuite")

    @ike_ciphersuite.setter
    def ike_ciphersuite(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_ciphersuite", value)

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuiteVariable")
    def ike_ciphersuite_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_ciphersuite_variable")

    @ike_ciphersuite_variable.setter
    def ike_ciphersuite_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_ciphersuite_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroup")
    def ike_diffie_hellman_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE Diffie Hellman Groups
          - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
          - Default value: `16`
        """
        return pulumi.get(self, "ike_diffie_hellman_group")

    @ike_diffie_hellman_group.setter
    def ike_diffie_hellman_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_diffie_hellman_group", value)

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroupVariable")
    def ike_diffie_hellman_group_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_diffie_hellman_group_variable")

    @ike_diffie_hellman_group_variable.setter
    def ike_diffie_hellman_group_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_diffie_hellman_group_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPoint")
    def ike_id_local_end_point(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_local_end_point")

    @ike_id_local_end_point.setter
    def ike_id_local_end_point(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_local_end_point", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPointVariable")
    def ike_id_local_end_point_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_local_end_point_variable")

    @ike_id_local_end_point_variable.setter
    def ike_id_local_end_point_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_local_end_point_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPoint")
    def ike_id_remote_end_point(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_remote_end_point")

    @ike_id_remote_end_point.setter
    def ike_id_remote_end_point(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_remote_end_point", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPointVariable")
    def ike_id_remote_end_point_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_remote_end_point_variable")

    @ike_id_remote_end_point_variable.setter
    def ike_id_remote_end_point_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_remote_end_point_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocol")
    def ike_integrity_protocol(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE integrity protocol
          - Choices: `main`, `aggressive`
          - Default value: `main`
        """
        return pulumi.get(self, "ike_integrity_protocol")

    @ike_integrity_protocol.setter
    def ike_integrity_protocol(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_integrity_protocol", value)

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocolVariable")
    def ike_integrity_protocol_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_integrity_protocol_variable")

    @ike_integrity_protocol_variable.setter
    def ike_integrity_protocol_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_integrity_protocol_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikePresharedKey")
    def ike_preshared_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Use preshared key to authenticate IKE peer
        """
        return pulumi.get(self, "ike_preshared_key")

    @ike_preshared_key.setter
    def ike_preshared_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_preshared_key", value)

    @_builtins.property
    @pulumi.getter(name="ikePresharedKeyVariable")
    def ike_preshared_key_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_preshared_key_variable")

    @ike_preshared_key_variable.setter
    def ike_preshared_key_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_preshared_key_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeRekeyInterval")
    def ike_rekey_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE rekey interval <60..86400> seconds
          - Range: `60`-`86400`
          - Default value: `14400`
        """
        return pulumi.get(self, "ike_rekey_interval")

    @ike_rekey_interval.setter
    def ike_rekey_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ike_rekey_interval", value)

    @_builtins.property
    @pulumi.getter(name="ikeRekeyIntervalVariable")
    def ike_rekey_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_rekey_interval_variable")

    @ike_rekey_interval_variable.setter
    def ike_rekey_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_rekey_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeVersion")
    def ike_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE Version <1..2>
          - Range: `1`-`2`
          - Default value: `1`
        """
        return pulumi.get(self, "ike_version")

    @ike_version.setter
    def ike_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ike_version", value)

    @_builtins.property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interface description
        """
        return pulumi.get(self, "interface_description")

    @interface_description.setter
    def interface_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_description", value)

    @_builtins.property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @interface_description_variable.setter
    def interface_description_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_description_variable", value)

    @_builtins.property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interface name: IPsec when present
        """
        return pulumi.get(self, "interface_name")

    @interface_name.setter
    def interface_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_name", value)

    @_builtins.property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @interface_name_variable.setter
    def interface_name_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_name_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Interface MTU <68..9216>, in bytes
          - Range: `68`-`9216`
          - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @ip_mtu.setter
    def ip_mtu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ip_mtu", value)

    @_builtins.property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @ip_mtu_variable.setter
    def ip_mtu_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_mtu_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuite")
    def ipsec_ciphersuite(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IPsec(ESP) encryption and integrity protocol
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
          - Default value: `aes256-gcm`
        """
        return pulumi.get(self, "ipsec_ciphersuite")

    @ipsec_ciphersuite.setter
    def ipsec_ciphersuite(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_ciphersuite", value)

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuiteVariable")
    def ipsec_ciphersuite_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_ciphersuite_variable")

    @ipsec_ciphersuite_variable.setter
    def ipsec_ciphersuite_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_ciphersuite_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyInterval")
    def ipsec_rekey_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IPsec rekey interval <300..1209600> seconds
          - Range: `120`-`2592000`
          - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_rekey_interval")

    @ipsec_rekey_interval.setter
    def ipsec_rekey_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ipsec_rekey_interval", value)

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyIntervalVariable")
    def ipsec_rekey_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_rekey_interval_variable")

    @ipsec_rekey_interval_variable.setter
    def ipsec_rekey_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_rekey_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindow")
    def ipsec_replay_window(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Replay window size 32..8192 (must be a power of 2)
          - Range: `64`-`4096`
          - Default value: `512`
        """
        return pulumi.get(self, "ipsec_replay_window")

    @ipsec_replay_window.setter
    def ipsec_replay_window(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ipsec_replay_window", value)

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindowVariable")
    def ipsec_replay_window_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_replay_window_variable")

    @ipsec_replay_window_variable.setter
    def ipsec_replay_window_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_replay_window_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ipv4_address")

    @ipv4_address.setter
    def ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="ipv4AddressVariable")
    def ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_address_variable")

    @ipv4_address_variable.setter
    def ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMask")
    def ipv4_subnet_mask(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "ipv4_subnet_mask")

    @ipv4_subnet_mask.setter
    def ipv4_subnet_mask(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMaskVariable")
    def ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_subnet_mask_variable")

    @ipv4_subnet_mask_variable.setter
    def ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_subnet_mask_variable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecy")
    def perfect_forward_secrecy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IPsec perfect forward secrecy settings
          - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
          - Default value: `group-16`
        """
        return pulumi.get(self, "perfect_forward_secrecy")

    @perfect_forward_secrecy.setter
    def perfect_forward_secrecy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "perfect_forward_secrecy", value)

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecyVariable")
    def perfect_forward_secrecy_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "perfect_forward_secrecy_variable")

    @perfect_forward_secrecy_variable.setter
    def perfect_forward_secrecy_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "perfect_forward_secrecy_variable", value)

    @_builtins.property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Administrative state
          - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "shutdown", value)

    @_builtins.property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @shutdown_variable.setter
    def shutdown_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "shutdown_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes
          - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @tcp_mss.setter
    def tcp_mss(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_mss", value)

    @_builtins.property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @tcp_mss_variable.setter
    def tcp_mss_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_mss_variable", value)

    @_builtins.property
    @pulumi.getter(name="trackerId")
    def tracker_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker_id")

    @tracker_id.setter
    def tracker_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tracker_id", value)

    @_builtins.property
    @pulumi.getter(name="trackerIdVariable")
    def tracker_id_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_id_variable")

    @tracker_id_variable.setter
    def tracker_id_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tracker_id_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4Address")
    def tunnel_destination_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "tunnel_destination_ipv4_address")

    @tunnel_destination_ipv4_address.setter
    def tunnel_destination_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4AddressVariable")
    def tunnel_destination_ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_address_variable")

    @tunnel_destination_ipv4_address_variable.setter
    def tunnel_destination_ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMaskVariable")
    def tunnel_destination_ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask_variable")

    @tunnel_destination_ipv4_subnet_mask_variable.setter
    def tunnel_destination_ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_subnet_mask_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelRouteVia")
    def tunnel_route_via(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_route_via")

    @tunnel_route_via.setter
    def tunnel_route_via(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_route_via", value)

    @_builtins.property
    @pulumi.getter(name="tunnelRouteViaVariable")
    def tunnel_route_via_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_route_via_variable")

    @tunnel_route_via_variable.setter
    def tunnel_route_via_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_route_via_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterface")
    def tunnel_source_interface(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_source_interface")

    @tunnel_source_interface.setter
    def tunnel_source_interface(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_interface", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterfaceVariable")
    def tunnel_source_interface_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_interface_variable")

    @tunnel_source_interface_variable.setter
    def tunnel_source_interface_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_interface_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4Address")
    def tunnel_source_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "tunnel_source_ipv4_address")

    @tunnel_source_ipv4_address.setter
    def tunnel_source_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4AddressVariable")
    def tunnel_source_ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_address_variable")

    @tunnel_source_ipv4_address_variable.setter
    def tunnel_source_ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMask")
    def tunnel_source_ipv4_subnet_mask(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask")

    @tunnel_source_ipv4_subnet_mask.setter
    def tunnel_source_ipv4_subnet_mask(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMaskVariable")
    def tunnel_source_ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask_variable")

    @tunnel_source_ipv4_subnet_mask_variable.setter
    def tunnel_source_ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_subnet_mask_variable", value)


@pulumi.input_type
class _ServiceLanVpnInterfaceIpsecFeatureState:
    def __init__(__self__, *,
                 application_tunnel_type: Optional[pulumi.Input[_builtins.str]] = None,
                 application_tunnel_type_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 clear_dont_fragment: Optional[pulumi.Input[_builtins.bool]] = None,
                 clear_dont_fragment_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_retries_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ike_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_version: Optional[pulumi.Input[_builtins.int]] = None,
                 interface_description: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[_builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_replay_window: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_replay_window_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 service_lan_vpn_feature_id: Optional[pulumi.Input[_builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[_builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering ServiceLanVpnInterfaceIpsecFeature resources.
        :param pulumi.Input[_builtins.str] application_tunnel_type: Enable Application Tunnel Type
                 - Choices: `none`, `sig`
        :param pulumi.Input[_builtins.str] application_tunnel_type_variable: Variable name
        :param pulumi.Input[_builtins.bool] clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] clear_dont_fragment_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.int] dpd_interval: IKE keepalive interval (seconds)
                 - Range: `10`-`3600`
                 - Default value: `10`
        :param pulumi.Input[_builtins.str] dpd_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] dpd_retries: IKE keepalive retries
                 - Range: `2`-`60`
                 - Default value: `3`
        :param pulumi.Input[_builtins.str] dpd_retries_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.str] ike_ciphersuite: IKE identity the IKE preshared secret belongs to
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
                 - Default value: `aes256-cbc-sha1`
        :param pulumi.Input[_builtins.str] ike_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group: IKE Diffie Hellman Groups
                 - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
                 - Default value: `16`
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_local_end_point: IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_local_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point: IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_integrity_protocol: IKE integrity protocol
                 - Choices: `main`, `aggressive`
                 - Default value: `main`
        :param pulumi.Input[_builtins.str] ike_integrity_protocol_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_preshared_key: Use preshared key to authenticate IKE peer
        :param pulumi.Input[_builtins.str] ike_preshared_key_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_rekey_interval: IKE rekey interval <60..86400> seconds
                 - Range: `60`-`86400`
                 - Default value: `14400`
        :param pulumi.Input[_builtins.str] ike_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_version: IKE Version <1..2>
                 - Range: `1`-`2`
                 - Default value: `1`
        :param pulumi.Input[_builtins.str] interface_description: Interface description
        :param pulumi.Input[_builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[_builtins.str] interface_name: Interface name: IPsec when present
        :param pulumi.Input[_builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[_builtins.int] ip_mtu: Interface MTU <68..9216>, in bytes
                 - Range: `68`-`9216`
                 - Default value: `1500`
        :param pulumi.Input[_builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite: IPsec(ESP) encryption and integrity protocol
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
                 - Default value: `aes256-gcm`
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_rekey_interval: IPsec rekey interval <300..1209600> seconds
                 - Range: `120`-`2592000`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] ipsec_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_replay_window: Replay window size 32..8192 (must be a power of 2)
                 - Range: `64`-`4096`
                 - Default value: `512`
        :param pulumi.Input[_builtins.str] ipsec_replay_window_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy: IPsec perfect forward secrecy settings
                 - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
                 - Default value: `group-16`
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy_variable: Variable name
        :param pulumi.Input[_builtins.str] service_lan_vpn_feature_id: Service LAN VPN Feature ID
        :param pulumi.Input[_builtins.bool] shutdown: Administrative state
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[_builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes
                 - Range: `500`-`1460`
        :param pulumi.Input[_builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[_builtins.str] tracker_id: Enable tracker for this interface
        :param pulumi.Input[_builtins.str] tracker_id_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_route_via: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_route_via_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_interface: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.int] version: The version of the Feature
        """
        if application_tunnel_type is not None:
            pulumi.set(__self__, "application_tunnel_type", application_tunnel_type)
        if application_tunnel_type_variable is not None:
            pulumi.set(__self__, "application_tunnel_type_variable", application_tunnel_type_variable)
        if clear_dont_fragment is not None:
            pulumi.set(__self__, "clear_dont_fragment", clear_dont_fragment)
        if clear_dont_fragment_variable is not None:
            pulumi.set(__self__, "clear_dont_fragment_variable", clear_dont_fragment_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dpd_interval is not None:
            pulumi.set(__self__, "dpd_interval", dpd_interval)
        if dpd_interval_variable is not None:
            pulumi.set(__self__, "dpd_interval_variable", dpd_interval_variable)
        if dpd_retries is not None:
            pulumi.set(__self__, "dpd_retries", dpd_retries)
        if dpd_retries_variable is not None:
            pulumi.set(__self__, "dpd_retries_variable", dpd_retries_variable)
        if feature_profile_id is not None:
            pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if ike_ciphersuite is not None:
            pulumi.set(__self__, "ike_ciphersuite", ike_ciphersuite)
        if ike_ciphersuite_variable is not None:
            pulumi.set(__self__, "ike_ciphersuite_variable", ike_ciphersuite_variable)
        if ike_diffie_hellman_group is not None:
            pulumi.set(__self__, "ike_diffie_hellman_group", ike_diffie_hellman_group)
        if ike_diffie_hellman_group_variable is not None:
            pulumi.set(__self__, "ike_diffie_hellman_group_variable", ike_diffie_hellman_group_variable)
        if ike_id_local_end_point is not None:
            pulumi.set(__self__, "ike_id_local_end_point", ike_id_local_end_point)
        if ike_id_local_end_point_variable is not None:
            pulumi.set(__self__, "ike_id_local_end_point_variable", ike_id_local_end_point_variable)
        if ike_id_remote_end_point is not None:
            pulumi.set(__self__, "ike_id_remote_end_point", ike_id_remote_end_point)
        if ike_id_remote_end_point_variable is not None:
            pulumi.set(__self__, "ike_id_remote_end_point_variable", ike_id_remote_end_point_variable)
        if ike_integrity_protocol is not None:
            pulumi.set(__self__, "ike_integrity_protocol", ike_integrity_protocol)
        if ike_integrity_protocol_variable is not None:
            pulumi.set(__self__, "ike_integrity_protocol_variable", ike_integrity_protocol_variable)
        if ike_preshared_key is not None:
            pulumi.set(__self__, "ike_preshared_key", ike_preshared_key)
        if ike_preshared_key_variable is not None:
            pulumi.set(__self__, "ike_preshared_key_variable", ike_preshared_key_variable)
        if ike_rekey_interval is not None:
            pulumi.set(__self__, "ike_rekey_interval", ike_rekey_interval)
        if ike_rekey_interval_variable is not None:
            pulumi.set(__self__, "ike_rekey_interval_variable", ike_rekey_interval_variable)
        if ike_version is not None:
            pulumi.set(__self__, "ike_version", ike_version)
        if interface_description is not None:
            pulumi.set(__self__, "interface_description", interface_description)
        if interface_description_variable is not None:
            pulumi.set(__self__, "interface_description_variable", interface_description_variable)
        if interface_name is not None:
            pulumi.set(__self__, "interface_name", interface_name)
        if interface_name_variable is not None:
            pulumi.set(__self__, "interface_name_variable", interface_name_variable)
        if ip_mtu is not None:
            pulumi.set(__self__, "ip_mtu", ip_mtu)
        if ip_mtu_variable is not None:
            pulumi.set(__self__, "ip_mtu_variable", ip_mtu_variable)
        if ipsec_ciphersuite is not None:
            pulumi.set(__self__, "ipsec_ciphersuite", ipsec_ciphersuite)
        if ipsec_ciphersuite_variable is not None:
            pulumi.set(__self__, "ipsec_ciphersuite_variable", ipsec_ciphersuite_variable)
        if ipsec_rekey_interval is not None:
            pulumi.set(__self__, "ipsec_rekey_interval", ipsec_rekey_interval)
        if ipsec_rekey_interval_variable is not None:
            pulumi.set(__self__, "ipsec_rekey_interval_variable", ipsec_rekey_interval_variable)
        if ipsec_replay_window is not None:
            pulumi.set(__self__, "ipsec_replay_window", ipsec_replay_window)
        if ipsec_replay_window_variable is not None:
            pulumi.set(__self__, "ipsec_replay_window_variable", ipsec_replay_window_variable)
        if ipv4_address is not None:
            pulumi.set(__self__, "ipv4_address", ipv4_address)
        if ipv4_address_variable is not None:
            pulumi.set(__self__, "ipv4_address_variable", ipv4_address_variable)
        if ipv4_subnet_mask is not None:
            pulumi.set(__self__, "ipv4_subnet_mask", ipv4_subnet_mask)
        if ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "ipv4_subnet_mask_variable", ipv4_subnet_mask_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if perfect_forward_secrecy is not None:
            pulumi.set(__self__, "perfect_forward_secrecy", perfect_forward_secrecy)
        if perfect_forward_secrecy_variable is not None:
            pulumi.set(__self__, "perfect_forward_secrecy_variable", perfect_forward_secrecy_variable)
        if service_lan_vpn_feature_id is not None:
            pulumi.set(__self__, "service_lan_vpn_feature_id", service_lan_vpn_feature_id)
        if shutdown is not None:
            pulumi.set(__self__, "shutdown", shutdown)
        if shutdown_variable is not None:
            pulumi.set(__self__, "shutdown_variable", shutdown_variable)
        if tcp_mss is not None:
            pulumi.set(__self__, "tcp_mss", tcp_mss)
        if tcp_mss_variable is not None:
            pulumi.set(__self__, "tcp_mss_variable", tcp_mss_variable)
        if tracker_id is not None:
            pulumi.set(__self__, "tracker_id", tracker_id)
        if tracker_id_variable is not None:
            pulumi.set(__self__, "tracker_id_variable", tracker_id_variable)
        if tunnel_destination_ipv4_address is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_address", tunnel_destination_ipv4_address)
        if tunnel_destination_ipv4_address_variable is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_address_variable", tunnel_destination_ipv4_address_variable)
        if tunnel_destination_ipv4_subnet_mask is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_subnet_mask", tunnel_destination_ipv4_subnet_mask)
        if tunnel_destination_ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "tunnel_destination_ipv4_subnet_mask_variable", tunnel_destination_ipv4_subnet_mask_variable)
        if tunnel_route_via is not None:
            pulumi.set(__self__, "tunnel_route_via", tunnel_route_via)
        if tunnel_route_via_variable is not None:
            pulumi.set(__self__, "tunnel_route_via_variable", tunnel_route_via_variable)
        if tunnel_source_interface is not None:
            pulumi.set(__self__, "tunnel_source_interface", tunnel_source_interface)
        if tunnel_source_interface_variable is not None:
            pulumi.set(__self__, "tunnel_source_interface_variable", tunnel_source_interface_variable)
        if tunnel_source_ipv4_address is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_address", tunnel_source_ipv4_address)
        if tunnel_source_ipv4_address_variable is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_address_variable", tunnel_source_ipv4_address_variable)
        if tunnel_source_ipv4_subnet_mask is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_subnet_mask", tunnel_source_ipv4_subnet_mask)
        if tunnel_source_ipv4_subnet_mask_variable is not None:
            pulumi.set(__self__, "tunnel_source_ipv4_subnet_mask_variable", tunnel_source_ipv4_subnet_mask_variable)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="applicationTunnelType")
    def application_tunnel_type(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enable Application Tunnel Type
          - Choices: `none`, `sig`
        """
        return pulumi.get(self, "application_tunnel_type")

    @application_tunnel_type.setter
    def application_tunnel_type(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "application_tunnel_type", value)

    @_builtins.property
    @pulumi.getter(name="applicationTunnelTypeVariable")
    def application_tunnel_type_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "application_tunnel_type_variable")

    @application_tunnel_type_variable.setter
    def application_tunnel_type_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "application_tunnel_type_variable", value)

    @_builtins.property
    @pulumi.getter(name="clearDontFragment")
    def clear_dont_fragment(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
          - Default value: `false`
        """
        return pulumi.get(self, "clear_dont_fragment")

    @clear_dont_fragment.setter
    def clear_dont_fragment(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "clear_dont_fragment", value)

    @_builtins.property
    @pulumi.getter(name="clearDontFragmentVariable")
    def clear_dont_fragment_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "clear_dont_fragment_variable")

    @clear_dont_fragment_variable.setter
    def clear_dont_fragment_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "clear_dont_fragment_variable", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="dpdInterval")
    def dpd_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE keepalive interval (seconds)
          - Range: `10`-`3600`
          - Default value: `10`
        """
        return pulumi.get(self, "dpd_interval")

    @dpd_interval.setter
    def dpd_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "dpd_interval", value)

    @_builtins.property
    @pulumi.getter(name="dpdIntervalVariable")
    def dpd_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_interval_variable")

    @dpd_interval_variable.setter
    def dpd_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dpd_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="dpdRetries")
    def dpd_retries(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE keepalive retries
          - Range: `2`-`60`
          - Default value: `3`
        """
        return pulumi.get(self, "dpd_retries")

    @dpd_retries.setter
    def dpd_retries(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "dpd_retries", value)

    @_builtins.property
    @pulumi.getter(name="dpdRetriesVariable")
    def dpd_retries_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_retries_variable")

    @dpd_retries_variable.setter
    def dpd_retries_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "dpd_retries_variable", value)

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "feature_profile_id", value)

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuite")
    def ike_ciphersuite(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE identity the IKE preshared secret belongs to
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
          - Default value: `aes256-cbc-sha1`
        """
        return pulumi.get(self, "ike_ciphersuite")

    @ike_ciphersuite.setter
    def ike_ciphersuite(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_ciphersuite", value)

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuiteVariable")
    def ike_ciphersuite_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_ciphersuite_variable")

    @ike_ciphersuite_variable.setter
    def ike_ciphersuite_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_ciphersuite_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroup")
    def ike_diffie_hellman_group(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE Diffie Hellman Groups
          - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
          - Default value: `16`
        """
        return pulumi.get(self, "ike_diffie_hellman_group")

    @ike_diffie_hellman_group.setter
    def ike_diffie_hellman_group(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_diffie_hellman_group", value)

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroupVariable")
    def ike_diffie_hellman_group_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_diffie_hellman_group_variable")

    @ike_diffie_hellman_group_variable.setter
    def ike_diffie_hellman_group_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_diffie_hellman_group_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPoint")
    def ike_id_local_end_point(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_local_end_point")

    @ike_id_local_end_point.setter
    def ike_id_local_end_point(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_local_end_point", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPointVariable")
    def ike_id_local_end_point_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_local_end_point_variable")

    @ike_id_local_end_point_variable.setter
    def ike_id_local_end_point_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_local_end_point_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPoint")
    def ike_id_remote_end_point(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_remote_end_point")

    @ike_id_remote_end_point.setter
    def ike_id_remote_end_point(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_remote_end_point", value)

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPointVariable")
    def ike_id_remote_end_point_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_remote_end_point_variable")

    @ike_id_remote_end_point_variable.setter
    def ike_id_remote_end_point_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_id_remote_end_point_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocol")
    def ike_integrity_protocol(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IKE integrity protocol
          - Choices: `main`, `aggressive`
          - Default value: `main`
        """
        return pulumi.get(self, "ike_integrity_protocol")

    @ike_integrity_protocol.setter
    def ike_integrity_protocol(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_integrity_protocol", value)

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocolVariable")
    def ike_integrity_protocol_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_integrity_protocol_variable")

    @ike_integrity_protocol_variable.setter
    def ike_integrity_protocol_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_integrity_protocol_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikePresharedKey")
    def ike_preshared_key(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Use preshared key to authenticate IKE peer
        """
        return pulumi.get(self, "ike_preshared_key")

    @ike_preshared_key.setter
    def ike_preshared_key(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_preshared_key", value)

    @_builtins.property
    @pulumi.getter(name="ikePresharedKeyVariable")
    def ike_preshared_key_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_preshared_key_variable")

    @ike_preshared_key_variable.setter
    def ike_preshared_key_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_preshared_key_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeRekeyInterval")
    def ike_rekey_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE rekey interval <60..86400> seconds
          - Range: `60`-`86400`
          - Default value: `14400`
        """
        return pulumi.get(self, "ike_rekey_interval")

    @ike_rekey_interval.setter
    def ike_rekey_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ike_rekey_interval", value)

    @_builtins.property
    @pulumi.getter(name="ikeRekeyIntervalVariable")
    def ike_rekey_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_rekey_interval_variable")

    @ike_rekey_interval_variable.setter
    def ike_rekey_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ike_rekey_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="ikeVersion")
    def ike_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IKE Version <1..2>
          - Range: `1`-`2`
          - Default value: `1`
        """
        return pulumi.get(self, "ike_version")

    @ike_version.setter
    def ike_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ike_version", value)

    @_builtins.property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interface description
        """
        return pulumi.get(self, "interface_description")

    @interface_description.setter
    def interface_description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_description", value)

    @_builtins.property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @interface_description_variable.setter
    def interface_description_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_description_variable", value)

    @_builtins.property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Interface name: IPsec when present
        """
        return pulumi.get(self, "interface_name")

    @interface_name.setter
    def interface_name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_name", value)

    @_builtins.property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @interface_name_variable.setter
    def interface_name_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "interface_name_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Interface MTU <68..9216>, in bytes
          - Range: `68`-`9216`
          - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @ip_mtu.setter
    def ip_mtu(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ip_mtu", value)

    @_builtins.property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @ip_mtu_variable.setter
    def ip_mtu_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_mtu_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuite")
    def ipsec_ciphersuite(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IPsec(ESP) encryption and integrity protocol
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
          - Default value: `aes256-gcm`
        """
        return pulumi.get(self, "ipsec_ciphersuite")

    @ipsec_ciphersuite.setter
    def ipsec_ciphersuite(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_ciphersuite", value)

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuiteVariable")
    def ipsec_ciphersuite_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_ciphersuite_variable")

    @ipsec_ciphersuite_variable.setter
    def ipsec_ciphersuite_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_ciphersuite_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyInterval")
    def ipsec_rekey_interval(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        IPsec rekey interval <300..1209600> seconds
          - Range: `120`-`2592000`
          - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_rekey_interval")

    @ipsec_rekey_interval.setter
    def ipsec_rekey_interval(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ipsec_rekey_interval", value)

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyIntervalVariable")
    def ipsec_rekey_interval_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_rekey_interval_variable")

    @ipsec_rekey_interval_variable.setter
    def ipsec_rekey_interval_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_rekey_interval_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindow")
    def ipsec_replay_window(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Replay window size 32..8192 (must be a power of 2)
          - Range: `64`-`4096`
          - Default value: `512`
        """
        return pulumi.get(self, "ipsec_replay_window")

    @ipsec_replay_window.setter
    def ipsec_replay_window(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "ipsec_replay_window", value)

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindowVariable")
    def ipsec_replay_window_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_replay_window_variable")

    @ipsec_replay_window_variable.setter
    def ipsec_replay_window_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipsec_replay_window_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "ipv4_address")

    @ipv4_address.setter
    def ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="ipv4AddressVariable")
    def ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_address_variable")

    @ipv4_address_variable.setter
    def ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMask")
    def ipv4_subnet_mask(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "ipv4_subnet_mask")

    @ipv4_subnet_mask.setter
    def ipv4_subnet_mask(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMaskVariable")
    def ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_subnet_mask_variable")

    @ipv4_subnet_mask_variable.setter
    def ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ipv4_subnet_mask_variable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecy")
    def perfect_forward_secrecy(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        IPsec perfect forward secrecy settings
          - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
          - Default value: `group-16`
        """
        return pulumi.get(self, "perfect_forward_secrecy")

    @perfect_forward_secrecy.setter
    def perfect_forward_secrecy(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "perfect_forward_secrecy", value)

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecyVariable")
    def perfect_forward_secrecy_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "perfect_forward_secrecy_variable")

    @perfect_forward_secrecy_variable.setter
    def perfect_forward_secrecy_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "perfect_forward_secrecy_variable", value)

    @_builtins.property
    @pulumi.getter(name="serviceLanVpnFeatureId")
    def service_lan_vpn_feature_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Service LAN VPN Feature ID
        """
        return pulumi.get(self, "service_lan_vpn_feature_id")

    @service_lan_vpn_feature_id.setter
    def service_lan_vpn_feature_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "service_lan_vpn_feature_id", value)

    @_builtins.property
    @pulumi.getter
    def shutdown(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Administrative state
          - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @shutdown.setter
    def shutdown(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "shutdown", value)

    @_builtins.property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @shutdown_variable.setter
    def shutdown_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "shutdown_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes
          - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @tcp_mss.setter
    def tcp_mss(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tcp_mss", value)

    @_builtins.property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @tcp_mss_variable.setter
    def tcp_mss_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_mss_variable", value)

    @_builtins.property
    @pulumi.getter(name="trackerId")
    def tracker_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker_id")

    @tracker_id.setter
    def tracker_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tracker_id", value)

    @_builtins.property
    @pulumi.getter(name="trackerIdVariable")
    def tracker_id_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_id_variable")

    @tracker_id_variable.setter
    def tracker_id_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tracker_id_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4Address")
    def tunnel_destination_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "tunnel_destination_ipv4_address")

    @tunnel_destination_ipv4_address.setter
    def tunnel_destination_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4AddressVariable")
    def tunnel_destination_ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_address_variable")

    @tunnel_destination_ipv4_address_variable.setter
    def tunnel_destination_ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMask")
    def tunnel_destination_ipv4_subnet_mask(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask")

    @tunnel_destination_ipv4_subnet_mask.setter
    def tunnel_destination_ipv4_subnet_mask(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMaskVariable")
    def tunnel_destination_ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask_variable")

    @tunnel_destination_ipv4_subnet_mask_variable.setter
    def tunnel_destination_ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_destination_ipv4_subnet_mask_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelRouteVia")
    def tunnel_route_via(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_route_via")

    @tunnel_route_via.setter
    def tunnel_route_via(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_route_via", value)

    @_builtins.property
    @pulumi.getter(name="tunnelRouteViaVariable")
    def tunnel_route_via_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_route_via_variable")

    @tunnel_route_via_variable.setter
    def tunnel_route_via_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_route_via_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterface")
    def tunnel_source_interface(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_source_interface")

    @tunnel_source_interface.setter
    def tunnel_source_interface(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_interface", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterfaceVariable")
    def tunnel_source_interface_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_interface_variable")

    @tunnel_source_interface_variable.setter
    def tunnel_source_interface_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_interface_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4Address")
    def tunnel_source_ipv4_address(self) -> Optional[pulumi.Input[_builtins.str]]:
        return pulumi.get(self, "tunnel_source_ipv4_address")

    @tunnel_source_ipv4_address.setter
    def tunnel_source_ipv4_address(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_address", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4AddressVariable")
    def tunnel_source_ipv4_address_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_address_variable")

    @tunnel_source_ipv4_address_variable.setter
    def tunnel_source_ipv4_address_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_address_variable", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMask")
    def tunnel_source_ipv4_subnet_mask(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask")

    @tunnel_source_ipv4_subnet_mask.setter
    def tunnel_source_ipv4_subnet_mask(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_subnet_mask", value)

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMaskVariable")
    def tunnel_source_ipv4_subnet_mask_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask_variable")

    @tunnel_source_ipv4_subnet_mask_variable.setter
    def tunnel_source_ipv4_subnet_mask_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tunnel_source_ipv4_subnet_mask_variable", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature")
class ServiceLanVpnInterfaceIpsecFeature(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application_tunnel_type: Optional[pulumi.Input[_builtins.str]] = None,
                 application_tunnel_type_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 clear_dont_fragment: Optional[pulumi.Input[_builtins.bool]] = None,
                 clear_dont_fragment_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_retries_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ike_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_version: Optional[pulumi.Input[_builtins.int]] = None,
                 interface_description: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[_builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_replay_window: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_replay_window_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 service_lan_vpn_feature_id: Optional[pulumi.Input[_builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[_builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        This resource can manage a Service LAN VPN Interface IPSec Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.ServiceLanVpnInterfaceIpsecFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            service_lan_vpn_feature_id="140331f6-5418-4755-a059-13c77eb96037",
            interface_name="ipsec987",
            shutdown=True,
            interface_description="ipsec987",
            ipv4_address="9.7.5.4",
            ipv4_subnet_mask="255.255.255.0",
            tunnel_source_ipv4_address="1.3.5.88",
            tunnel_source_ipv4_subnet_mask="255.255.255.0",
            tunnel_source_interface="GigabitEthernet8",
            tunnel_destination_ipv4_address="2.55.67.99",
            tunnel_destination_ipv4_subnet_mask="255.255.255.0",
            application_tunnel_type="none",
            tcp_mss=1460,
            clear_dont_fragment=False,
            ip_mtu=1500,
            dpd_interval=10,
            dpd_retries=3,
            ike_preshared_key="123",
            ike_version=1,
            ike_integrity_protocol="main",
            ike_rekey_interval=14400,
            ike_ciphersuite="aes256-cbc-sha1",
            ike_diffie_hellman_group="16",
            ike_id_local_end_point="xxx",
            ike_id_remote_end_point="xxx",
            ipsec_rekey_interval=3600,
            ipsec_replay_window=512,
            ipsec_ciphersuite="aes256-gcm",
            perfect_forward_secrecy="group-16",
            tunnel_route_via="2222")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "service_lan_vpn_interface_ipsec_feature_id,feature_profile_id,service_lan_vpn_feature_id"

        ```sh
        $ pulumi import sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] application_tunnel_type: Enable Application Tunnel Type
                 - Choices: `none`, `sig`
        :param pulumi.Input[_builtins.str] application_tunnel_type_variable: Variable name
        :param pulumi.Input[_builtins.bool] clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] clear_dont_fragment_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.int] dpd_interval: IKE keepalive interval (seconds)
                 - Range: `10`-`3600`
                 - Default value: `10`
        :param pulumi.Input[_builtins.str] dpd_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] dpd_retries: IKE keepalive retries
                 - Range: `2`-`60`
                 - Default value: `3`
        :param pulumi.Input[_builtins.str] dpd_retries_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.str] ike_ciphersuite: IKE identity the IKE preshared secret belongs to
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
                 - Default value: `aes256-cbc-sha1`
        :param pulumi.Input[_builtins.str] ike_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group: IKE Diffie Hellman Groups
                 - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
                 - Default value: `16`
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_local_end_point: IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_local_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point: IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_integrity_protocol: IKE integrity protocol
                 - Choices: `main`, `aggressive`
                 - Default value: `main`
        :param pulumi.Input[_builtins.str] ike_integrity_protocol_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_preshared_key: Use preshared key to authenticate IKE peer
        :param pulumi.Input[_builtins.str] ike_preshared_key_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_rekey_interval: IKE rekey interval <60..86400> seconds
                 - Range: `60`-`86400`
                 - Default value: `14400`
        :param pulumi.Input[_builtins.str] ike_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_version: IKE Version <1..2>
                 - Range: `1`-`2`
                 - Default value: `1`
        :param pulumi.Input[_builtins.str] interface_description: Interface description
        :param pulumi.Input[_builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[_builtins.str] interface_name: Interface name: IPsec when present
        :param pulumi.Input[_builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[_builtins.int] ip_mtu: Interface MTU <68..9216>, in bytes
                 - Range: `68`-`9216`
                 - Default value: `1500`
        :param pulumi.Input[_builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite: IPsec(ESP) encryption and integrity protocol
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
                 - Default value: `aes256-gcm`
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_rekey_interval: IPsec rekey interval <300..1209600> seconds
                 - Range: `120`-`2592000`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] ipsec_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_replay_window: Replay window size 32..8192 (must be a power of 2)
                 - Range: `64`-`4096`
                 - Default value: `512`
        :param pulumi.Input[_builtins.str] ipsec_replay_window_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy: IPsec perfect forward secrecy settings
                 - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
                 - Default value: `group-16`
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy_variable: Variable name
        :param pulumi.Input[_builtins.str] service_lan_vpn_feature_id: Service LAN VPN Feature ID
        :param pulumi.Input[_builtins.bool] shutdown: Administrative state
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[_builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes
                 - Range: `500`-`1460`
        :param pulumi.Input[_builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[_builtins.str] tracker_id: Enable tracker for this interface
        :param pulumi.Input[_builtins.str] tracker_id_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_route_via: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_route_via_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_interface: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask_variable: Variable name
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ServiceLanVpnInterfaceIpsecFeatureArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a Service LAN VPN Interface IPSec Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.ServiceLanVpnInterfaceIpsecFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            service_lan_vpn_feature_id="140331f6-5418-4755-a059-13c77eb96037",
            interface_name="ipsec987",
            shutdown=True,
            interface_description="ipsec987",
            ipv4_address="9.7.5.4",
            ipv4_subnet_mask="255.255.255.0",
            tunnel_source_ipv4_address="1.3.5.88",
            tunnel_source_ipv4_subnet_mask="255.255.255.0",
            tunnel_source_interface="GigabitEthernet8",
            tunnel_destination_ipv4_address="2.55.67.99",
            tunnel_destination_ipv4_subnet_mask="255.255.255.0",
            application_tunnel_type="none",
            tcp_mss=1460,
            clear_dont_fragment=False,
            ip_mtu=1500,
            dpd_interval=10,
            dpd_retries=3,
            ike_preshared_key="123",
            ike_version=1,
            ike_integrity_protocol="main",
            ike_rekey_interval=14400,
            ike_ciphersuite="aes256-cbc-sha1",
            ike_diffie_hellman_group="16",
            ike_id_local_end_point="xxx",
            ike_id_remote_end_point="xxx",
            ipsec_rekey_interval=3600,
            ipsec_replay_window=512,
            ipsec_ciphersuite="aes256-gcm",
            perfect_forward_secrecy="group-16",
            tunnel_route_via="2222")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "service_lan_vpn_interface_ipsec_feature_id,feature_profile_id,service_lan_vpn_feature_id"

        ```sh
        $ pulumi import sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac,140331f6-5418-4755-a059-13c77eb96037"
        ```

        :param str resource_name: The name of the resource.
        :param ServiceLanVpnInterfaceIpsecFeatureArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServiceLanVpnInterfaceIpsecFeatureArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application_tunnel_type: Optional[pulumi.Input[_builtins.str]] = None,
                 application_tunnel_type_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 clear_dont_fragment: Optional[pulumi.Input[_builtins.bool]] = None,
                 clear_dont_fragment_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 dpd_retries: Optional[pulumi.Input[_builtins.int]] = None,
                 dpd_retries_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_diffie_hellman_group_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_local_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_id_remote_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_integrity_protocol_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_preshared_key_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ike_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ike_version: Optional[pulumi.Input[_builtins.int]] = None,
                 interface_description: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_description_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name: Optional[pulumi.Input[_builtins.str]] = None,
                 interface_name_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_mtu: Optional[pulumi.Input[_builtins.int]] = None,
                 ip_mtu_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipsec_replay_window: Optional[pulumi.Input[_builtins.int]] = None,
                 ipsec_replay_window_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy: Optional[pulumi.Input[_builtins.str]] = None,
                 perfect_forward_secrecy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 service_lan_vpn_feature_id: Optional[pulumi.Input[_builtins.str]] = None,
                 shutdown: Optional[pulumi.Input[_builtins.bool]] = None,
                 shutdown_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_mss: Optional[pulumi.Input[_builtins.int]] = None,
                 tcp_mss_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tracker_id_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_destination_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_route_via_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
                 tunnel_source_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServiceLanVpnInterfaceIpsecFeatureArgs.__new__(ServiceLanVpnInterfaceIpsecFeatureArgs)

            __props__.__dict__["application_tunnel_type"] = application_tunnel_type
            __props__.__dict__["application_tunnel_type_variable"] = application_tunnel_type_variable
            __props__.__dict__["clear_dont_fragment"] = clear_dont_fragment
            __props__.__dict__["clear_dont_fragment_variable"] = clear_dont_fragment_variable
            __props__.__dict__["description"] = description
            __props__.__dict__["dpd_interval"] = dpd_interval
            __props__.__dict__["dpd_interval_variable"] = dpd_interval_variable
            __props__.__dict__["dpd_retries"] = dpd_retries
            __props__.__dict__["dpd_retries_variable"] = dpd_retries_variable
            if feature_profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'feature_profile_id'")
            __props__.__dict__["feature_profile_id"] = feature_profile_id
            __props__.__dict__["ike_ciphersuite"] = ike_ciphersuite
            __props__.__dict__["ike_ciphersuite_variable"] = ike_ciphersuite_variable
            __props__.__dict__["ike_diffie_hellman_group"] = ike_diffie_hellman_group
            __props__.__dict__["ike_diffie_hellman_group_variable"] = ike_diffie_hellman_group_variable
            __props__.__dict__["ike_id_local_end_point"] = ike_id_local_end_point
            __props__.__dict__["ike_id_local_end_point_variable"] = ike_id_local_end_point_variable
            __props__.__dict__["ike_id_remote_end_point"] = ike_id_remote_end_point
            __props__.__dict__["ike_id_remote_end_point_variable"] = ike_id_remote_end_point_variable
            __props__.__dict__["ike_integrity_protocol"] = ike_integrity_protocol
            __props__.__dict__["ike_integrity_protocol_variable"] = ike_integrity_protocol_variable
            __props__.__dict__["ike_preshared_key"] = ike_preshared_key
            __props__.__dict__["ike_preshared_key_variable"] = ike_preshared_key_variable
            __props__.__dict__["ike_rekey_interval"] = ike_rekey_interval
            __props__.__dict__["ike_rekey_interval_variable"] = ike_rekey_interval_variable
            __props__.__dict__["ike_version"] = ike_version
            __props__.__dict__["interface_description"] = interface_description
            __props__.__dict__["interface_description_variable"] = interface_description_variable
            __props__.__dict__["interface_name"] = interface_name
            __props__.__dict__["interface_name_variable"] = interface_name_variable
            __props__.__dict__["ip_mtu"] = ip_mtu
            __props__.__dict__["ip_mtu_variable"] = ip_mtu_variable
            __props__.__dict__["ipsec_ciphersuite"] = ipsec_ciphersuite
            __props__.__dict__["ipsec_ciphersuite_variable"] = ipsec_ciphersuite_variable
            __props__.__dict__["ipsec_rekey_interval"] = ipsec_rekey_interval
            __props__.__dict__["ipsec_rekey_interval_variable"] = ipsec_rekey_interval_variable
            __props__.__dict__["ipsec_replay_window"] = ipsec_replay_window
            __props__.__dict__["ipsec_replay_window_variable"] = ipsec_replay_window_variable
            __props__.__dict__["ipv4_address"] = ipv4_address
            __props__.__dict__["ipv4_address_variable"] = ipv4_address_variable
            __props__.__dict__["ipv4_subnet_mask"] = ipv4_subnet_mask
            __props__.__dict__["ipv4_subnet_mask_variable"] = ipv4_subnet_mask_variable
            __props__.__dict__["name"] = name
            __props__.__dict__["perfect_forward_secrecy"] = perfect_forward_secrecy
            __props__.__dict__["perfect_forward_secrecy_variable"] = perfect_forward_secrecy_variable
            if service_lan_vpn_feature_id is None and not opts.urn:
                raise TypeError("Missing required property 'service_lan_vpn_feature_id'")
            __props__.__dict__["service_lan_vpn_feature_id"] = service_lan_vpn_feature_id
            __props__.__dict__["shutdown"] = shutdown
            __props__.__dict__["shutdown_variable"] = shutdown_variable
            __props__.__dict__["tcp_mss"] = tcp_mss
            __props__.__dict__["tcp_mss_variable"] = tcp_mss_variable
            __props__.__dict__["tracker_id"] = tracker_id
            __props__.__dict__["tracker_id_variable"] = tracker_id_variable
            __props__.__dict__["tunnel_destination_ipv4_address"] = tunnel_destination_ipv4_address
            __props__.__dict__["tunnel_destination_ipv4_address_variable"] = tunnel_destination_ipv4_address_variable
            if tunnel_destination_ipv4_subnet_mask is None and not opts.urn:
                raise TypeError("Missing required property 'tunnel_destination_ipv4_subnet_mask'")
            __props__.__dict__["tunnel_destination_ipv4_subnet_mask"] = tunnel_destination_ipv4_subnet_mask
            __props__.__dict__["tunnel_destination_ipv4_subnet_mask_variable"] = tunnel_destination_ipv4_subnet_mask_variable
            __props__.__dict__["tunnel_route_via"] = tunnel_route_via
            __props__.__dict__["tunnel_route_via_variable"] = tunnel_route_via_variable
            __props__.__dict__["tunnel_source_interface"] = tunnel_source_interface
            __props__.__dict__["tunnel_source_interface_variable"] = tunnel_source_interface_variable
            __props__.__dict__["tunnel_source_ipv4_address"] = tunnel_source_ipv4_address
            __props__.__dict__["tunnel_source_ipv4_address_variable"] = tunnel_source_ipv4_address_variable
            __props__.__dict__["tunnel_source_ipv4_subnet_mask"] = tunnel_source_ipv4_subnet_mask
            __props__.__dict__["tunnel_source_ipv4_subnet_mask_variable"] = tunnel_source_ipv4_subnet_mask_variable
            __props__.__dict__["version"] = None
        super(ServiceLanVpnInterfaceIpsecFeature, __self__).__init__(
            'sdwan:index/serviceLanVpnInterfaceIpsecFeature:ServiceLanVpnInterfaceIpsecFeature',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            application_tunnel_type: Optional[pulumi.Input[_builtins.str]] = None,
            application_tunnel_type_variable: Optional[pulumi.Input[_builtins.str]] = None,
            clear_dont_fragment: Optional[pulumi.Input[_builtins.bool]] = None,
            clear_dont_fragment_variable: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            dpd_interval: Optional[pulumi.Input[_builtins.int]] = None,
            dpd_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
            dpd_retries: Optional[pulumi.Input[_builtins.int]] = None,
            dpd_retries_variable: Optional[pulumi.Input[_builtins.str]] = None,
            feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
            ike_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
            ike_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_diffie_hellman_group: Optional[pulumi.Input[_builtins.str]] = None,
            ike_diffie_hellman_group_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_id_local_end_point: Optional[pulumi.Input[_builtins.str]] = None,
            ike_id_local_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_id_remote_end_point: Optional[pulumi.Input[_builtins.str]] = None,
            ike_id_remote_end_point_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_integrity_protocol: Optional[pulumi.Input[_builtins.str]] = None,
            ike_integrity_protocol_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_preshared_key: Optional[pulumi.Input[_builtins.str]] = None,
            ike_preshared_key_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
            ike_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ike_version: Optional[pulumi.Input[_builtins.int]] = None,
            interface_description: Optional[pulumi.Input[_builtins.str]] = None,
            interface_description_variable: Optional[pulumi.Input[_builtins.str]] = None,
            interface_name: Optional[pulumi.Input[_builtins.str]] = None,
            interface_name_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ip_mtu: Optional[pulumi.Input[_builtins.int]] = None,
            ip_mtu_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ipsec_ciphersuite: Optional[pulumi.Input[_builtins.str]] = None,
            ipsec_ciphersuite_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ipsec_rekey_interval: Optional[pulumi.Input[_builtins.int]] = None,
            ipsec_rekey_interval_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ipsec_replay_window: Optional[pulumi.Input[_builtins.int]] = None,
            ipsec_replay_window_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
            ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
            ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            perfect_forward_secrecy: Optional[pulumi.Input[_builtins.str]] = None,
            perfect_forward_secrecy_variable: Optional[pulumi.Input[_builtins.str]] = None,
            service_lan_vpn_feature_id: Optional[pulumi.Input[_builtins.str]] = None,
            shutdown: Optional[pulumi.Input[_builtins.bool]] = None,
            shutdown_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tcp_mss: Optional[pulumi.Input[_builtins.int]] = None,
            tcp_mss_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tracker_id: Optional[pulumi.Input[_builtins.str]] = None,
            tracker_id_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_destination_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_destination_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_destination_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_destination_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_route_via: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_route_via_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_interface: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_ipv4_address: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_ipv4_address_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_ipv4_subnet_mask: Optional[pulumi.Input[_builtins.str]] = None,
            tunnel_source_ipv4_subnet_mask_variable: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.int]] = None) -> 'ServiceLanVpnInterfaceIpsecFeature':
        """
        Get an existing ServiceLanVpnInterfaceIpsecFeature resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] application_tunnel_type: Enable Application Tunnel Type
                 - Choices: `none`, `sig`
        :param pulumi.Input[_builtins.str] application_tunnel_type_variable: Variable name
        :param pulumi.Input[_builtins.bool] clear_dont_fragment: Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] clear_dont_fragment_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.int] dpd_interval: IKE keepalive interval (seconds)
                 - Range: `10`-`3600`
                 - Default value: `10`
        :param pulumi.Input[_builtins.str] dpd_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] dpd_retries: IKE keepalive retries
                 - Range: `2`-`60`
                 - Default value: `3`
        :param pulumi.Input[_builtins.str] dpd_retries_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.str] ike_ciphersuite: IKE identity the IKE preshared secret belongs to
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
                 - Default value: `aes256-cbc-sha1`
        :param pulumi.Input[_builtins.str] ike_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group: IKE Diffie Hellman Groups
                 - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
                 - Default value: `16`
        :param pulumi.Input[_builtins.str] ike_diffie_hellman_group_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_local_end_point: IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_local_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point: IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        :param pulumi.Input[_builtins.str] ike_id_remote_end_point_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_integrity_protocol: IKE integrity protocol
                 - Choices: `main`, `aggressive`
                 - Default value: `main`
        :param pulumi.Input[_builtins.str] ike_integrity_protocol_variable: Variable name
        :param pulumi.Input[_builtins.str] ike_preshared_key: Use preshared key to authenticate IKE peer
        :param pulumi.Input[_builtins.str] ike_preshared_key_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_rekey_interval: IKE rekey interval <60..86400> seconds
                 - Range: `60`-`86400`
                 - Default value: `14400`
        :param pulumi.Input[_builtins.str] ike_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ike_version: IKE Version <1..2>
                 - Range: `1`-`2`
                 - Default value: `1`
        :param pulumi.Input[_builtins.str] interface_description: Interface description
        :param pulumi.Input[_builtins.str] interface_description_variable: Variable name
        :param pulumi.Input[_builtins.str] interface_name: Interface name: IPsec when present
        :param pulumi.Input[_builtins.str] interface_name_variable: Variable name
        :param pulumi.Input[_builtins.int] ip_mtu: Interface MTU <68..9216>, in bytes
                 - Range: `68`-`9216`
                 - Default value: `1500`
        :param pulumi.Input[_builtins.str] ip_mtu_variable: Variable name
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite: IPsec(ESP) encryption and integrity protocol
                 - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
                 - Default value: `aes256-gcm`
        :param pulumi.Input[_builtins.str] ipsec_ciphersuite_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_rekey_interval: IPsec rekey interval <300..1209600> seconds
                 - Range: `120`-`2592000`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] ipsec_rekey_interval_variable: Variable name
        :param pulumi.Input[_builtins.int] ipsec_replay_window: Replay window size 32..8192 (must be a power of 2)
                 - Range: `64`-`4096`
                 - Default value: `512`
        :param pulumi.Input[_builtins.str] ipsec_replay_window_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy: IPsec perfect forward secrecy settings
                 - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
                 - Default value: `group-16`
        :param pulumi.Input[_builtins.str] perfect_forward_secrecy_variable: Variable name
        :param pulumi.Input[_builtins.str] service_lan_vpn_feature_id: Service LAN VPN Feature ID
        :param pulumi.Input[_builtins.bool] shutdown: Administrative state
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] shutdown_variable: Variable name
        :param pulumi.Input[_builtins.int] tcp_mss: TCP MSS on SYN packets, in bytes
                 - Range: `500`-`1460`
        :param pulumi.Input[_builtins.str] tcp_mss_variable: Variable name
        :param pulumi.Input[_builtins.str] tracker_id: Enable tracker for this interface
        :param pulumi.Input[_builtins.str] tracker_id_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_destination_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_route_via: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_route_via_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_interface: <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        :param pulumi.Input[_builtins.str] tunnel_source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_address_variable: Variable name
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask: - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        :param pulumi.Input[_builtins.str] tunnel_source_ipv4_subnet_mask_variable: Variable name
        :param pulumi.Input[_builtins.int] version: The version of the Feature
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ServiceLanVpnInterfaceIpsecFeatureState.__new__(_ServiceLanVpnInterfaceIpsecFeatureState)

        __props__.__dict__["application_tunnel_type"] = application_tunnel_type
        __props__.__dict__["application_tunnel_type_variable"] = application_tunnel_type_variable
        __props__.__dict__["clear_dont_fragment"] = clear_dont_fragment
        __props__.__dict__["clear_dont_fragment_variable"] = clear_dont_fragment_variable
        __props__.__dict__["description"] = description
        __props__.__dict__["dpd_interval"] = dpd_interval
        __props__.__dict__["dpd_interval_variable"] = dpd_interval_variable
        __props__.__dict__["dpd_retries"] = dpd_retries
        __props__.__dict__["dpd_retries_variable"] = dpd_retries_variable
        __props__.__dict__["feature_profile_id"] = feature_profile_id
        __props__.__dict__["ike_ciphersuite"] = ike_ciphersuite
        __props__.__dict__["ike_ciphersuite_variable"] = ike_ciphersuite_variable
        __props__.__dict__["ike_diffie_hellman_group"] = ike_diffie_hellman_group
        __props__.__dict__["ike_diffie_hellman_group_variable"] = ike_diffie_hellman_group_variable
        __props__.__dict__["ike_id_local_end_point"] = ike_id_local_end_point
        __props__.__dict__["ike_id_local_end_point_variable"] = ike_id_local_end_point_variable
        __props__.__dict__["ike_id_remote_end_point"] = ike_id_remote_end_point
        __props__.__dict__["ike_id_remote_end_point_variable"] = ike_id_remote_end_point_variable
        __props__.__dict__["ike_integrity_protocol"] = ike_integrity_protocol
        __props__.__dict__["ike_integrity_protocol_variable"] = ike_integrity_protocol_variable
        __props__.__dict__["ike_preshared_key"] = ike_preshared_key
        __props__.__dict__["ike_preshared_key_variable"] = ike_preshared_key_variable
        __props__.__dict__["ike_rekey_interval"] = ike_rekey_interval
        __props__.__dict__["ike_rekey_interval_variable"] = ike_rekey_interval_variable
        __props__.__dict__["ike_version"] = ike_version
        __props__.__dict__["interface_description"] = interface_description
        __props__.__dict__["interface_description_variable"] = interface_description_variable
        __props__.__dict__["interface_name"] = interface_name
        __props__.__dict__["interface_name_variable"] = interface_name_variable
        __props__.__dict__["ip_mtu"] = ip_mtu
        __props__.__dict__["ip_mtu_variable"] = ip_mtu_variable
        __props__.__dict__["ipsec_ciphersuite"] = ipsec_ciphersuite
        __props__.__dict__["ipsec_ciphersuite_variable"] = ipsec_ciphersuite_variable
        __props__.__dict__["ipsec_rekey_interval"] = ipsec_rekey_interval
        __props__.__dict__["ipsec_rekey_interval_variable"] = ipsec_rekey_interval_variable
        __props__.__dict__["ipsec_replay_window"] = ipsec_replay_window
        __props__.__dict__["ipsec_replay_window_variable"] = ipsec_replay_window_variable
        __props__.__dict__["ipv4_address"] = ipv4_address
        __props__.__dict__["ipv4_address_variable"] = ipv4_address_variable
        __props__.__dict__["ipv4_subnet_mask"] = ipv4_subnet_mask
        __props__.__dict__["ipv4_subnet_mask_variable"] = ipv4_subnet_mask_variable
        __props__.__dict__["name"] = name
        __props__.__dict__["perfect_forward_secrecy"] = perfect_forward_secrecy
        __props__.__dict__["perfect_forward_secrecy_variable"] = perfect_forward_secrecy_variable
        __props__.__dict__["service_lan_vpn_feature_id"] = service_lan_vpn_feature_id
        __props__.__dict__["shutdown"] = shutdown
        __props__.__dict__["shutdown_variable"] = shutdown_variable
        __props__.__dict__["tcp_mss"] = tcp_mss
        __props__.__dict__["tcp_mss_variable"] = tcp_mss_variable
        __props__.__dict__["tracker_id"] = tracker_id
        __props__.__dict__["tracker_id_variable"] = tracker_id_variable
        __props__.__dict__["tunnel_destination_ipv4_address"] = tunnel_destination_ipv4_address
        __props__.__dict__["tunnel_destination_ipv4_address_variable"] = tunnel_destination_ipv4_address_variable
        __props__.__dict__["tunnel_destination_ipv4_subnet_mask"] = tunnel_destination_ipv4_subnet_mask
        __props__.__dict__["tunnel_destination_ipv4_subnet_mask_variable"] = tunnel_destination_ipv4_subnet_mask_variable
        __props__.__dict__["tunnel_route_via"] = tunnel_route_via
        __props__.__dict__["tunnel_route_via_variable"] = tunnel_route_via_variable
        __props__.__dict__["tunnel_source_interface"] = tunnel_source_interface
        __props__.__dict__["tunnel_source_interface_variable"] = tunnel_source_interface_variable
        __props__.__dict__["tunnel_source_ipv4_address"] = tunnel_source_ipv4_address
        __props__.__dict__["tunnel_source_ipv4_address_variable"] = tunnel_source_ipv4_address_variable
        __props__.__dict__["tunnel_source_ipv4_subnet_mask"] = tunnel_source_ipv4_subnet_mask
        __props__.__dict__["tunnel_source_ipv4_subnet_mask_variable"] = tunnel_source_ipv4_subnet_mask_variable
        __props__.__dict__["version"] = version
        return ServiceLanVpnInterfaceIpsecFeature(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="applicationTunnelType")
    def application_tunnel_type(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Enable Application Tunnel Type
          - Choices: `none`, `sig`
        """
        return pulumi.get(self, "application_tunnel_type")

    @_builtins.property
    @pulumi.getter(name="applicationTunnelTypeVariable")
    def application_tunnel_type_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "application_tunnel_type_variable")

    @_builtins.property
    @pulumi.getter(name="clearDontFragment")
    def clear_dont_fragment(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Enable clear dont fragment (Currently Only SDWAN Tunnel Interface)
          - Default value: `false`
        """
        return pulumi.get(self, "clear_dont_fragment")

    @_builtins.property
    @pulumi.getter(name="clearDontFragmentVariable")
    def clear_dont_fragment_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "clear_dont_fragment_variable")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="dpdInterval")
    def dpd_interval(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        IKE keepalive interval (seconds)
          - Range: `10`-`3600`
          - Default value: `10`
        """
        return pulumi.get(self, "dpd_interval")

    @_builtins.property
    @pulumi.getter(name="dpdIntervalVariable")
    def dpd_interval_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_interval_variable")

    @_builtins.property
    @pulumi.getter(name="dpdRetries")
    def dpd_retries(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        IKE keepalive retries
          - Range: `2`-`60`
          - Default value: `3`
        """
        return pulumi.get(self, "dpd_retries")

    @_builtins.property
    @pulumi.getter(name="dpdRetriesVariable")
    def dpd_retries_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "dpd_retries_variable")

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Output[_builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuite")
    def ike_ciphersuite(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IKE identity the IKE preshared secret belongs to
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha2`, `aes128-cbc-sha1`, `aes128-cbc-sha2`
          - Default value: `aes256-cbc-sha1`
        """
        return pulumi.get(self, "ike_ciphersuite")

    @_builtins.property
    @pulumi.getter(name="ikeCiphersuiteVariable")
    def ike_ciphersuite_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_ciphersuite_variable")

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroup")
    def ike_diffie_hellman_group(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IKE Diffie Hellman Groups
          - Choices: `2`, `14`, `15`, `16`, `19`, `20`, `21`, `24`
          - Default value: `16`
        """
        return pulumi.get(self, "ike_diffie_hellman_group")

    @_builtins.property
    @pulumi.getter(name="ikeDiffieHellmanGroupVariable")
    def ike_diffie_hellman_group_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_diffie_hellman_group_variable")

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPoint")
    def ike_id_local_end_point(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IKE ID for the local endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_local_end_point")

    @_builtins.property
    @pulumi.getter(name="ikeIdLocalEndPointVariable")
    def ike_id_local_end_point_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_local_end_point_variable")

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPoint")
    def ike_id_remote_end_point(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IKE ID for the remote endpoint. Input IPv4 address, domain name, or email address
        """
        return pulumi.get(self, "ike_id_remote_end_point")

    @_builtins.property
    @pulumi.getter(name="ikeIdRemoteEndPointVariable")
    def ike_id_remote_end_point_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_id_remote_end_point_variable")

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocol")
    def ike_integrity_protocol(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IKE integrity protocol
          - Choices: `main`, `aggressive`
          - Default value: `main`
        """
        return pulumi.get(self, "ike_integrity_protocol")

    @_builtins.property
    @pulumi.getter(name="ikeIntegrityProtocolVariable")
    def ike_integrity_protocol_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_integrity_protocol_variable")

    @_builtins.property
    @pulumi.getter(name="ikePresharedKey")
    def ike_preshared_key(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Use preshared key to authenticate IKE peer
        """
        return pulumi.get(self, "ike_preshared_key")

    @_builtins.property
    @pulumi.getter(name="ikePresharedKeyVariable")
    def ike_preshared_key_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_preshared_key_variable")

    @_builtins.property
    @pulumi.getter(name="ikeRekeyInterval")
    def ike_rekey_interval(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        IKE rekey interval <60..86400> seconds
          - Range: `60`-`86400`
          - Default value: `14400`
        """
        return pulumi.get(self, "ike_rekey_interval")

    @_builtins.property
    @pulumi.getter(name="ikeRekeyIntervalVariable")
    def ike_rekey_interval_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ike_rekey_interval_variable")

    @_builtins.property
    @pulumi.getter(name="ikeVersion")
    def ike_version(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        IKE Version <1..2>
          - Range: `1`-`2`
          - Default value: `1`
        """
        return pulumi.get(self, "ike_version")

    @_builtins.property
    @pulumi.getter(name="interfaceDescription")
    def interface_description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Interface description
        """
        return pulumi.get(self, "interface_description")

    @_builtins.property
    @pulumi.getter(name="interfaceDescriptionVariable")
    def interface_description_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_description_variable")

    @_builtins.property
    @pulumi.getter(name="interfaceName")
    def interface_name(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Interface name: IPsec when present
        """
        return pulumi.get(self, "interface_name")

    @_builtins.property
    @pulumi.getter(name="interfaceNameVariable")
    def interface_name_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "interface_name_variable")

    @_builtins.property
    @pulumi.getter(name="ipMtu")
    def ip_mtu(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Interface MTU <68..9216>, in bytes
          - Range: `68`-`9216`
          - Default value: `1500`
        """
        return pulumi.get(self, "ip_mtu")

    @_builtins.property
    @pulumi.getter(name="ipMtuVariable")
    def ip_mtu_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_mtu_variable")

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuite")
    def ipsec_ciphersuite(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IPsec(ESP) encryption and integrity protocol
          - Choices: `aes256-cbc-sha1`, `aes256-cbc-sha384`, `aes256-cbc-sha256`, `aes256-cbc-sha512`, `aes256-gcm`, `null-sha1`, `null-sha384`, `null-sha256`, `null-sha512`
          - Default value: `aes256-gcm`
        """
        return pulumi.get(self, "ipsec_ciphersuite")

    @_builtins.property
    @pulumi.getter(name="ipsecCiphersuiteVariable")
    def ipsec_ciphersuite_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_ciphersuite_variable")

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyInterval")
    def ipsec_rekey_interval(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        IPsec rekey interval <300..1209600> seconds
          - Range: `120`-`2592000`
          - Default value: `3600`
        """
        return pulumi.get(self, "ipsec_rekey_interval")

    @_builtins.property
    @pulumi.getter(name="ipsecRekeyIntervalVariable")
    def ipsec_rekey_interval_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_rekey_interval_variable")

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindow")
    def ipsec_replay_window(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Replay window size 32..8192 (must be a power of 2)
          - Range: `64`-`4096`
          - Default value: `512`
        """
        return pulumi.get(self, "ipsec_replay_window")

    @_builtins.property
    @pulumi.getter(name="ipsecReplayWindowVariable")
    def ipsec_replay_window_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipsec_replay_window_variable")

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "ipv4_address")

    @_builtins.property
    @pulumi.getter(name="ipv4AddressVariable")
    def ipv4_address_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_address_variable")

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMask")
    def ipv4_subnet_mask(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "ipv4_subnet_mask")

    @_builtins.property
    @pulumi.getter(name="ipv4SubnetMaskVariable")
    def ipv4_subnet_mask_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ipv4_subnet_mask_variable")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecy")
    def perfect_forward_secrecy(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        IPsec perfect forward secrecy settings
          - Choices: `group-1`, `group-2`, `group-5`, `group-14`, `group-15`, `group-16`, `group-19`, `group-20`, `group-21`, `group-24`, `none`
          - Default value: `group-16`
        """
        return pulumi.get(self, "perfect_forward_secrecy")

    @_builtins.property
    @pulumi.getter(name="perfectForwardSecrecyVariable")
    def perfect_forward_secrecy_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "perfect_forward_secrecy_variable")

    @_builtins.property
    @pulumi.getter(name="serviceLanVpnFeatureId")
    def service_lan_vpn_feature_id(self) -> pulumi.Output[_builtins.str]:
        """
        Service LAN VPN Feature ID
        """
        return pulumi.get(self, "service_lan_vpn_feature_id")

    @_builtins.property
    @pulumi.getter
    def shutdown(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Administrative state
          - Default value: `true`
        """
        return pulumi.get(self, "shutdown")

    @_builtins.property
    @pulumi.getter(name="shutdownVariable")
    def shutdown_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "shutdown_variable")

    @_builtins.property
    @pulumi.getter(name="tcpMss")
    def tcp_mss(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        TCP MSS on SYN packets, in bytes
          - Range: `500`-`1460`
        """
        return pulumi.get(self, "tcp_mss")

    @_builtins.property
    @pulumi.getter(name="tcpMssVariable")
    def tcp_mss_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_mss_variable")

    @_builtins.property
    @pulumi.getter(name="trackerId")
    def tracker_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Enable tracker for this interface
        """
        return pulumi.get(self, "tracker_id")

    @_builtins.property
    @pulumi.getter(name="trackerIdVariable")
    def tracker_id_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tracker_id_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4Address")
    def tunnel_destination_ipv4_address(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "tunnel_destination_ipv4_address")

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4AddressVariable")
    def tunnel_destination_ipv4_address_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_address_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMask")
    def tunnel_destination_ipv4_subnet_mask(self) -> pulumi.Output[_builtins.str]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask")

    @_builtins.property
    @pulumi.getter(name="tunnelDestinationIpv4SubnetMaskVariable")
    def tunnel_destination_ipv4_subnet_mask_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_destination_ipv4_subnet_mask_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelRouteVia")
    def tunnel_route_via(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_route_via")

    @_builtins.property
    @pulumi.getter(name="tunnelRouteViaVariable")
    def tunnel_route_via_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_route_via_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterface")
    def tunnel_source_interface(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        <1..32 characters> Interface name: ge0/<0-..> or ge0/<0-..>.vlanid
        """
        return pulumi.get(self, "tunnel_source_interface")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceInterfaceVariable")
    def tunnel_source_interface_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_interface_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4Address")
    def tunnel_source_ipv4_address(self) -> pulumi.Output[Optional[_builtins.str]]:
        return pulumi.get(self, "tunnel_source_ipv4_address")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4AddressVariable")
    def tunnel_source_ipv4_address_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_address_variable")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMask")
    def tunnel_source_ipv4_subnet_mask(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        - Choices: `255.255.255.255`, `255.255.255.254`, `255.255.255.252`, `255.255.255.248`, `255.255.255.240`, `255.255.255.224`, `255.255.255.192`, `255.255.255.128`, `255.255.255.0`, `255.255.254.0`, `255.255.252.0`, `255.255.248.0`, `255.255.240.0`, `255.255.224.0`, `255.255.192.0`, `255.255.128.0`, `255.255.0.0`, `255.254.0.0`, `255.252.0.0`, `255.240.0.0`, `255.224.0.0`, `255.192.0.0`, `255.128.0.0`, `255.0.0.0`, `254.0.0.0`, `252.0.0.0`, `248.0.0.0`, `240.0.0.0`, `224.0.0.0`, `192.0.0.0`, `128.0.0.0`, `0.0.0.0`
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask")

    @_builtins.property
    @pulumi.getter(name="tunnelSourceIpv4SubnetMaskVariable")
    def tunnel_source_ipv4_subnet_mask_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tunnel_source_ipv4_subnet_mask_variable")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.int]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

