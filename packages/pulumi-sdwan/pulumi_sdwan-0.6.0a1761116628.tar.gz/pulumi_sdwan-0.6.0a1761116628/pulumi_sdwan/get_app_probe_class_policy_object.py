# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetAppProbeClassPolicyObjectResult',
    'AwaitableGetAppProbeClassPolicyObjectResult',
    'get_app_probe_class_policy_object',
    'get_app_probe_class_policy_object_output',
]

@pulumi.output_type
class GetAppProbeClassPolicyObjectResult:
    """
    A collection of values returned by getAppProbeClassPolicyObject.
    """
    def __init__(__self__, forwarding_class=None, id=None, mappings=None, name=None, version=None):
        if forwarding_class and not isinstance(forwarding_class, str):
            raise TypeError("Expected argument 'forwarding_class' to be a str")
        pulumi.set(__self__, "forwarding_class", forwarding_class)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if mappings and not isinstance(mappings, list):
            raise TypeError("Expected argument 'mappings' to be a list")
        pulumi.set(__self__, "mappings", mappings)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if version and not isinstance(version, int):
            raise TypeError("Expected argument 'version' to be a int")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="forwardingClass")
    def forwarding_class(self) -> _builtins.str:
        """
        Forwarding class name
        """
        return pulumi.get(self, "forwarding_class")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The id of the object
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def mappings(self) -> Sequence['outputs.GetAppProbeClassPolicyObjectMappingResult']:
        """
        Color mappings
        """
        return pulumi.get(self, "mappings")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the policy object
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.int:
        """
        The version of the object
        """
        return pulumi.get(self, "version")


class AwaitableGetAppProbeClassPolicyObjectResult(GetAppProbeClassPolicyObjectResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAppProbeClassPolicyObjectResult(
            forwarding_class=self.forwarding_class,
            id=self.id,
            mappings=self.mappings,
            name=self.name,
            version=self.version)


def get_app_probe_class_policy_object(id: Optional[_builtins.str] = None,
                                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAppProbeClassPolicyObjectResult:
    """
    This data source can read the App Probe Class Policy Object .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_app_probe_class_policy_object(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sdwan:index/getAppProbeClassPolicyObject:getAppProbeClassPolicyObject', __args__, opts=opts, typ=GetAppProbeClassPolicyObjectResult).value

    return AwaitableGetAppProbeClassPolicyObjectResult(
        forwarding_class=pulumi.get(__ret__, 'forwarding_class'),
        id=pulumi.get(__ret__, 'id'),
        mappings=pulumi.get(__ret__, 'mappings'),
        name=pulumi.get(__ret__, 'name'),
        version=pulumi.get(__ret__, 'version'))
def get_app_probe_class_policy_object_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                             opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAppProbeClassPolicyObjectResult]:
    """
    This data source can read the App Probe Class Policy Object .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_app_probe_class_policy_object(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sdwan:index/getAppProbeClassPolicyObject:getAppProbeClassPolicyObject', __args__, opts=opts, typ=GetAppProbeClassPolicyObjectResult)
    return __ret__.apply(lambda __response__: GetAppProbeClassPolicyObjectResult(
        forwarding_class=pulumi.get(__response__, 'forwarding_class'),
        id=pulumi.get(__response__, 'id'),
        mappings=pulumi.get(__response__, 'mappings'),
        name=pulumi.get(__response__, 'name'),
        version=pulumi.get(__response__, 'version')))
