# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SystemGlobalFeatureArgs', 'SystemGlobalFeature']

@pulumi.input_type
class SystemGlobalFeatureArgs:
    def __init__(__self__, *,
                 feature_profile_id: pulumi.Input[_builtins.str],
                 arp_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 arp_proxy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 cdp: Optional[pulumi.Input[_builtins.bool]] = None,
                 cdp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 console_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 console_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_lookup: Optional[pulumi.Input[_builtins.bool]] = None,
                 domain_lookup_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ftp_passive: Optional[pulumi.Input[_builtins.bool]] = None,
                 ftp_passive_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 http_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 https_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 https_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ignore_bootp: Optional[pulumi.Input[_builtins.bool]] = None,
                 ignore_bootp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_source_routing: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_source_routing_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 line_vty: Optional[pulumi.Input[_builtins.bool]] = None,
                 line_vty_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 lldp: Optional[pulumi.Input[_builtins.bool]] = None,
                 lldp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_tcp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_tcp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_udp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_udp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 rsh_rcp: Optional[pulumi.Input[_builtins.bool]] = None,
                 rsh_rcp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 snmp_ifindex_persist: Optional[pulumi.Input[_builtins.bool]] = None,
                 snmp_ifindex_persist_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_in: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_in_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_out: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_out_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 udp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 udp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 vty_line_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 vty_line_logging_variable: Optional[pulumi.Input[_builtins.str]] = None):
        """
        The set of arguments for constructing a SystemGlobalFeature resource.
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.bool] arp_proxy: Set ARP Proxy
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] arp_proxy_variable: Variable name
        :param pulumi.Input[_builtins.bool] cdp: Configure CDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] cdp_variable: Variable name
        :param pulumi.Input[_builtins.bool] console_logging: Configure Console Logging
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] console_logging_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.bool] domain_lookup: Configure Domain-Lookup
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] domain_lookup_variable: Variable name
        :param pulumi.Input[_builtins.bool] ftp_passive: Set Passive FTP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ftp_passive_variable: Variable name
        :param pulumi.Input[_builtins.str] http_authentication: Set preference for HTTP Authentication
                 - Choices: `local`, `aaa`
        :param pulumi.Input[_builtins.str] http_authentication_variable: Variable name
        :param pulumi.Input[_builtins.bool] http_server: Set a HTTP Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] http_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] https_server: Set a HTTPS Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] https_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] ignore_bootp: Configure Ignore BOOTP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] ignore_bootp_variable: Variable name
        :param pulumi.Input[_builtins.bool] ip_source_routing: Set Source Route
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ip_source_routing_variable: Variable name
        :param pulumi.Input[_builtins.bool] line_vty: Configure Telnet (Outbound)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] line_vty_variable: Variable name
        :param pulumi.Input[_builtins.bool] lldp: Configure LLDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] lldp_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.int] nat64_tcp_timeout: Set NAT64 TCP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] nat64_tcp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.int] nat64_udp_timeout: Set NAT64 UDP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `300`
        :param pulumi.Input[_builtins.str] nat64_udp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.bool] rsh_rcp: Set RSH/RCP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] rsh_rcp_variable: Variable name
        :param pulumi.Input[_builtins.bool] snmp_ifindex_persist: Configure SNMP Ifindex Persist
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] snmp_ifindex_persist_variable: Variable name
        :param pulumi.Input[_builtins.str] source_interface: Specify interface for source address in all HTTP(S) client connections
        :param pulumi.Input[_builtins.str] source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] ssh_version: Set SSH version
                 - Choices: `2`
        :param pulumi.Input[_builtins.str] ssh_version_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_in: Configure tcp-keepalives-in
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_in_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_out: Configure tcp-keepalives-out
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_out_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_small_servers: Configure tcp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] tcp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] udp_small_servers: Configure udp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] udp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] vty_line_logging: Configure VTY Line Logging
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] vty_line_logging_variable: Variable name
        """
        pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if arp_proxy is not None:
            pulumi.set(__self__, "arp_proxy", arp_proxy)
        if arp_proxy_variable is not None:
            pulumi.set(__self__, "arp_proxy_variable", arp_proxy_variable)
        if cdp is not None:
            pulumi.set(__self__, "cdp", cdp)
        if cdp_variable is not None:
            pulumi.set(__self__, "cdp_variable", cdp_variable)
        if console_logging is not None:
            pulumi.set(__self__, "console_logging", console_logging)
        if console_logging_variable is not None:
            pulumi.set(__self__, "console_logging_variable", console_logging_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if domain_lookup is not None:
            pulumi.set(__self__, "domain_lookup", domain_lookup)
        if domain_lookup_variable is not None:
            pulumi.set(__self__, "domain_lookup_variable", domain_lookup_variable)
        if ftp_passive is not None:
            pulumi.set(__self__, "ftp_passive", ftp_passive)
        if ftp_passive_variable is not None:
            pulumi.set(__self__, "ftp_passive_variable", ftp_passive_variable)
        if http_authentication is not None:
            pulumi.set(__self__, "http_authentication", http_authentication)
        if http_authentication_variable is not None:
            pulumi.set(__self__, "http_authentication_variable", http_authentication_variable)
        if http_server is not None:
            pulumi.set(__self__, "http_server", http_server)
        if http_server_variable is not None:
            pulumi.set(__self__, "http_server_variable", http_server_variable)
        if https_server is not None:
            pulumi.set(__self__, "https_server", https_server)
        if https_server_variable is not None:
            pulumi.set(__self__, "https_server_variable", https_server_variable)
        if ignore_bootp is not None:
            pulumi.set(__self__, "ignore_bootp", ignore_bootp)
        if ignore_bootp_variable is not None:
            pulumi.set(__self__, "ignore_bootp_variable", ignore_bootp_variable)
        if ip_source_routing is not None:
            pulumi.set(__self__, "ip_source_routing", ip_source_routing)
        if ip_source_routing_variable is not None:
            pulumi.set(__self__, "ip_source_routing_variable", ip_source_routing_variable)
        if line_vty is not None:
            pulumi.set(__self__, "line_vty", line_vty)
        if line_vty_variable is not None:
            pulumi.set(__self__, "line_vty_variable", line_vty_variable)
        if lldp is not None:
            pulumi.set(__self__, "lldp", lldp)
        if lldp_variable is not None:
            pulumi.set(__self__, "lldp_variable", lldp_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat64_tcp_timeout is not None:
            pulumi.set(__self__, "nat64_tcp_timeout", nat64_tcp_timeout)
        if nat64_tcp_timeout_variable is not None:
            pulumi.set(__self__, "nat64_tcp_timeout_variable", nat64_tcp_timeout_variable)
        if nat64_udp_timeout is not None:
            pulumi.set(__self__, "nat64_udp_timeout", nat64_udp_timeout)
        if nat64_udp_timeout_variable is not None:
            pulumi.set(__self__, "nat64_udp_timeout_variable", nat64_udp_timeout_variable)
        if rsh_rcp is not None:
            pulumi.set(__self__, "rsh_rcp", rsh_rcp)
        if rsh_rcp_variable is not None:
            pulumi.set(__self__, "rsh_rcp_variable", rsh_rcp_variable)
        if snmp_ifindex_persist is not None:
            pulumi.set(__self__, "snmp_ifindex_persist", snmp_ifindex_persist)
        if snmp_ifindex_persist_variable is not None:
            pulumi.set(__self__, "snmp_ifindex_persist_variable", snmp_ifindex_persist_variable)
        if source_interface is not None:
            pulumi.set(__self__, "source_interface", source_interface)
        if source_interface_variable is not None:
            pulumi.set(__self__, "source_interface_variable", source_interface_variable)
        if ssh_version is not None:
            pulumi.set(__self__, "ssh_version", ssh_version)
        if ssh_version_variable is not None:
            pulumi.set(__self__, "ssh_version_variable", ssh_version_variable)
        if tcp_keepalives_in is not None:
            pulumi.set(__self__, "tcp_keepalives_in", tcp_keepalives_in)
        if tcp_keepalives_in_variable is not None:
            pulumi.set(__self__, "tcp_keepalives_in_variable", tcp_keepalives_in_variable)
        if tcp_keepalives_out is not None:
            pulumi.set(__self__, "tcp_keepalives_out", tcp_keepalives_out)
        if tcp_keepalives_out_variable is not None:
            pulumi.set(__self__, "tcp_keepalives_out_variable", tcp_keepalives_out_variable)
        if tcp_small_servers is not None:
            pulumi.set(__self__, "tcp_small_servers", tcp_small_servers)
        if tcp_small_servers_variable is not None:
            pulumi.set(__self__, "tcp_small_servers_variable", tcp_small_servers_variable)
        if udp_small_servers is not None:
            pulumi.set(__self__, "udp_small_servers", udp_small_servers)
        if udp_small_servers_variable is not None:
            pulumi.set(__self__, "udp_small_servers_variable", udp_small_servers_variable)
        if vty_line_logging is not None:
            pulumi.set(__self__, "vty_line_logging", vty_line_logging)
        if vty_line_logging_variable is not None:
            pulumi.set(__self__, "vty_line_logging_variable", vty_line_logging_variable)

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Input[_builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "feature_profile_id", value)

    @_builtins.property
    @pulumi.getter(name="arpProxy")
    def arp_proxy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set ARP Proxy
          - Default value: `false`
        """
        return pulumi.get(self, "arp_proxy")

    @arp_proxy.setter
    def arp_proxy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "arp_proxy", value)

    @_builtins.property
    @pulumi.getter(name="arpProxyVariable")
    def arp_proxy_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "arp_proxy_variable")

    @arp_proxy_variable.setter
    def arp_proxy_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "arp_proxy_variable", value)

    @_builtins.property
    @pulumi.getter
    def cdp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure CDP
          - Default value: `true`
        """
        return pulumi.get(self, "cdp")

    @cdp.setter
    def cdp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "cdp", value)

    @_builtins.property
    @pulumi.getter(name="cdpVariable")
    def cdp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "cdp_variable")

    @cdp_variable.setter
    def cdp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cdp_variable", value)

    @_builtins.property
    @pulumi.getter(name="consoleLogging")
    def console_logging(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Console Logging
          - Default value: `true`
        """
        return pulumi.get(self, "console_logging")

    @console_logging.setter
    def console_logging(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "console_logging", value)

    @_builtins.property
    @pulumi.getter(name="consoleLoggingVariable")
    def console_logging_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "console_logging_variable")

    @console_logging_variable.setter
    def console_logging_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "console_logging_variable", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="domainLookup")
    def domain_lookup(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Domain-Lookup
          - Default value: `false`
        """
        return pulumi.get(self, "domain_lookup")

    @domain_lookup.setter
    def domain_lookup(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "domain_lookup", value)

    @_builtins.property
    @pulumi.getter(name="domainLookupVariable")
    def domain_lookup_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "domain_lookup_variable")

    @domain_lookup_variable.setter
    def domain_lookup_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_lookup_variable", value)

    @_builtins.property
    @pulumi.getter(name="ftpPassive")
    def ftp_passive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set Passive FTP
          - Default value: `false`
        """
        return pulumi.get(self, "ftp_passive")

    @ftp_passive.setter
    def ftp_passive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ftp_passive", value)

    @_builtins.property
    @pulumi.getter(name="ftpPassiveVariable")
    def ftp_passive_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ftp_passive_variable")

    @ftp_passive_variable.setter
    def ftp_passive_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ftp_passive_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpAuthentication")
    def http_authentication(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Set preference for HTTP Authentication
          - Choices: `local`, `aaa`
        """
        return pulumi.get(self, "http_authentication")

    @http_authentication.setter
    def http_authentication(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_authentication", value)

    @_builtins.property
    @pulumi.getter(name="httpAuthenticationVariable")
    def http_authentication_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_authentication_variable")

    @http_authentication_variable.setter
    def http_authentication_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_authentication_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpServer")
    def http_server(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set a HTTP Server
          - Default value: `false`
        """
        return pulumi.get(self, "http_server")

    @http_server.setter
    def http_server(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "http_server", value)

    @_builtins.property
    @pulumi.getter(name="httpServerVariable")
    def http_server_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_server_variable")

    @http_server_variable.setter
    def http_server_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_server_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpsServer")
    def https_server(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set a HTTPS Server
          - Default value: `false`
        """
        return pulumi.get(self, "https_server")

    @https_server.setter
    def https_server(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "https_server", value)

    @_builtins.property
    @pulumi.getter(name="httpsServerVariable")
    def https_server_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "https_server_variable")

    @https_server_variable.setter
    def https_server_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "https_server_variable", value)

    @_builtins.property
    @pulumi.getter(name="ignoreBootp")
    def ignore_bootp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Ignore BOOTP
          - Default value: `true`
        """
        return pulumi.get(self, "ignore_bootp")

    @ignore_bootp.setter
    def ignore_bootp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ignore_bootp", value)

    @_builtins.property
    @pulumi.getter(name="ignoreBootpVariable")
    def ignore_bootp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ignore_bootp_variable")

    @ignore_bootp_variable.setter
    def ignore_bootp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ignore_bootp_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipSourceRouting")
    def ip_source_routing(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set Source Route
          - Default value: `false`
        """
        return pulumi.get(self, "ip_source_routing")

    @ip_source_routing.setter
    def ip_source_routing(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ip_source_routing", value)

    @_builtins.property
    @pulumi.getter(name="ipSourceRoutingVariable")
    def ip_source_routing_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_source_routing_variable")

    @ip_source_routing_variable.setter
    def ip_source_routing_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_source_routing_variable", value)

    @_builtins.property
    @pulumi.getter(name="lineVty")
    def line_vty(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Telnet (Outbound)
          - Default value: `false`
        """
        return pulumi.get(self, "line_vty")

    @line_vty.setter
    def line_vty(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "line_vty", value)

    @_builtins.property
    @pulumi.getter(name="lineVtyVariable")
    def line_vty_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "line_vty_variable")

    @line_vty_variable.setter
    def line_vty_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "line_vty_variable", value)

    @_builtins.property
    @pulumi.getter
    def lldp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure LLDP
          - Default value: `true`
        """
        return pulumi.get(self, "lldp")

    @lldp.setter
    def lldp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "lldp", value)

    @_builtins.property
    @pulumi.getter(name="lldpVariable")
    def lldp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "lldp_variable")

    @lldp_variable.setter
    def lldp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lldp_variable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeout")
    def nat64_tcp_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Set NAT64 TCP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `3600`
        """
        return pulumi.get(self, "nat64_tcp_timeout")

    @nat64_tcp_timeout.setter
    def nat64_tcp_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "nat64_tcp_timeout", value)

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeoutVariable")
    def nat64_tcp_timeout_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_tcp_timeout_variable")

    @nat64_tcp_timeout_variable.setter
    def nat64_tcp_timeout_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "nat64_tcp_timeout_variable", value)

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeout")
    def nat64_udp_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Set NAT64 UDP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `300`
        """
        return pulumi.get(self, "nat64_udp_timeout")

    @nat64_udp_timeout.setter
    def nat64_udp_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "nat64_udp_timeout", value)

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeoutVariable")
    def nat64_udp_timeout_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_udp_timeout_variable")

    @nat64_udp_timeout_variable.setter
    def nat64_udp_timeout_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "nat64_udp_timeout_variable", value)

    @_builtins.property
    @pulumi.getter(name="rshRcp")
    def rsh_rcp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set RSH/RCP
          - Default value: `false`
        """
        return pulumi.get(self, "rsh_rcp")

    @rsh_rcp.setter
    def rsh_rcp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "rsh_rcp", value)

    @_builtins.property
    @pulumi.getter(name="rshRcpVariable")
    def rsh_rcp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "rsh_rcp_variable")

    @rsh_rcp_variable.setter
    def rsh_rcp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rsh_rcp_variable", value)

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersist")
    def snmp_ifindex_persist(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure SNMP Ifindex Persist
          - Default value: `true`
        """
        return pulumi.get(self, "snmp_ifindex_persist")

    @snmp_ifindex_persist.setter
    def snmp_ifindex_persist(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "snmp_ifindex_persist", value)

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersistVariable")
    def snmp_ifindex_persist_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "snmp_ifindex_persist_variable")

    @snmp_ifindex_persist_variable.setter
    def snmp_ifindex_persist_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "snmp_ifindex_persist_variable", value)

    @_builtins.property
    @pulumi.getter(name="sourceInterface")
    def source_interface(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specify interface for source address in all HTTP(S) client connections
        """
        return pulumi.get(self, "source_interface")

    @source_interface.setter
    def source_interface(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_interface", value)

    @_builtins.property
    @pulumi.getter(name="sourceInterfaceVariable")
    def source_interface_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "source_interface_variable")

    @source_interface_variable.setter
    def source_interface_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_interface_variable", value)

    @_builtins.property
    @pulumi.getter(name="sshVersion")
    def ssh_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Set SSH version
          - Choices: `2`
        """
        return pulumi.get(self, "ssh_version")

    @ssh_version.setter
    def ssh_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ssh_version", value)

    @_builtins.property
    @pulumi.getter(name="sshVersionVariable")
    def ssh_version_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ssh_version_variable")

    @ssh_version_variable.setter
    def ssh_version_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ssh_version_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesIn")
    def tcp_keepalives_in(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-keepalives-in
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_in")

    @tcp_keepalives_in.setter
    def tcp_keepalives_in(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_keepalives_in", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesInVariable")
    def tcp_keepalives_in_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_in_variable")

    @tcp_keepalives_in_variable.setter
    def tcp_keepalives_in_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_keepalives_in_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOut")
    def tcp_keepalives_out(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-keepalives-out
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_out")

    @tcp_keepalives_out.setter
    def tcp_keepalives_out(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_keepalives_out", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOutVariable")
    def tcp_keepalives_out_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_out_variable")

    @tcp_keepalives_out_variable.setter
    def tcp_keepalives_out_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_keepalives_out_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpSmallServers")
    def tcp_small_servers(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "tcp_small_servers")

    @tcp_small_servers.setter
    def tcp_small_servers(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_small_servers", value)

    @_builtins.property
    @pulumi.getter(name="tcpSmallServersVariable")
    def tcp_small_servers_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_small_servers_variable")

    @tcp_small_servers_variable.setter
    def tcp_small_servers_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_small_servers_variable", value)

    @_builtins.property
    @pulumi.getter(name="udpSmallServers")
    def udp_small_servers(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure udp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "udp_small_servers")

    @udp_small_servers.setter
    def udp_small_servers(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "udp_small_servers", value)

    @_builtins.property
    @pulumi.getter(name="udpSmallServersVariable")
    def udp_small_servers_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "udp_small_servers_variable")

    @udp_small_servers_variable.setter
    def udp_small_servers_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "udp_small_servers_variable", value)

    @_builtins.property
    @pulumi.getter(name="vtyLineLogging")
    def vty_line_logging(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure VTY Line Logging
          - Default value: `false`
        """
        return pulumi.get(self, "vty_line_logging")

    @vty_line_logging.setter
    def vty_line_logging(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "vty_line_logging", value)

    @_builtins.property
    @pulumi.getter(name="vtyLineLoggingVariable")
    def vty_line_logging_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "vty_line_logging_variable")

    @vty_line_logging_variable.setter
    def vty_line_logging_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vty_line_logging_variable", value)


@pulumi.input_type
class _SystemGlobalFeatureState:
    def __init__(__self__, *,
                 arp_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 arp_proxy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 cdp: Optional[pulumi.Input[_builtins.bool]] = None,
                 cdp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 console_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 console_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_lookup: Optional[pulumi.Input[_builtins.bool]] = None,
                 domain_lookup_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ftp_passive: Optional[pulumi.Input[_builtins.bool]] = None,
                 ftp_passive_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 http_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 https_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 https_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ignore_bootp: Optional[pulumi.Input[_builtins.bool]] = None,
                 ignore_bootp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_source_routing: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_source_routing_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 line_vty: Optional[pulumi.Input[_builtins.bool]] = None,
                 line_vty_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 lldp: Optional[pulumi.Input[_builtins.bool]] = None,
                 lldp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_tcp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_tcp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_udp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_udp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 rsh_rcp: Optional[pulumi.Input[_builtins.bool]] = None,
                 rsh_rcp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 snmp_ifindex_persist: Optional[pulumi.Input[_builtins.bool]] = None,
                 snmp_ifindex_persist_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_in: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_in_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_out: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_out_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 udp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 udp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 version: Optional[pulumi.Input[_builtins.int]] = None,
                 vty_line_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 vty_line_logging_variable: Optional[pulumi.Input[_builtins.str]] = None):
        """
        Input properties used for looking up and filtering SystemGlobalFeature resources.
        :param pulumi.Input[_builtins.bool] arp_proxy: Set ARP Proxy
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] arp_proxy_variable: Variable name
        :param pulumi.Input[_builtins.bool] cdp: Configure CDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] cdp_variable: Variable name
        :param pulumi.Input[_builtins.bool] console_logging: Configure Console Logging
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] console_logging_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.bool] domain_lookup: Configure Domain-Lookup
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] domain_lookup_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.bool] ftp_passive: Set Passive FTP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ftp_passive_variable: Variable name
        :param pulumi.Input[_builtins.str] http_authentication: Set preference for HTTP Authentication
                 - Choices: `local`, `aaa`
        :param pulumi.Input[_builtins.str] http_authentication_variable: Variable name
        :param pulumi.Input[_builtins.bool] http_server: Set a HTTP Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] http_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] https_server: Set a HTTPS Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] https_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] ignore_bootp: Configure Ignore BOOTP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] ignore_bootp_variable: Variable name
        :param pulumi.Input[_builtins.bool] ip_source_routing: Set Source Route
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ip_source_routing_variable: Variable name
        :param pulumi.Input[_builtins.bool] line_vty: Configure Telnet (Outbound)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] line_vty_variable: Variable name
        :param pulumi.Input[_builtins.bool] lldp: Configure LLDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] lldp_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.int] nat64_tcp_timeout: Set NAT64 TCP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] nat64_tcp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.int] nat64_udp_timeout: Set NAT64 UDP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `300`
        :param pulumi.Input[_builtins.str] nat64_udp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.bool] rsh_rcp: Set RSH/RCP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] rsh_rcp_variable: Variable name
        :param pulumi.Input[_builtins.bool] snmp_ifindex_persist: Configure SNMP Ifindex Persist
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] snmp_ifindex_persist_variable: Variable name
        :param pulumi.Input[_builtins.str] source_interface: Specify interface for source address in all HTTP(S) client connections
        :param pulumi.Input[_builtins.str] source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] ssh_version: Set SSH version
                 - Choices: `2`
        :param pulumi.Input[_builtins.str] ssh_version_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_in: Configure tcp-keepalives-in
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_in_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_out: Configure tcp-keepalives-out
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_out_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_small_servers: Configure tcp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] tcp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] udp_small_servers: Configure udp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] udp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.int] version: The version of the Feature
        :param pulumi.Input[_builtins.bool] vty_line_logging: Configure VTY Line Logging
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] vty_line_logging_variable: Variable name
        """
        if arp_proxy is not None:
            pulumi.set(__self__, "arp_proxy", arp_proxy)
        if arp_proxy_variable is not None:
            pulumi.set(__self__, "arp_proxy_variable", arp_proxy_variable)
        if cdp is not None:
            pulumi.set(__self__, "cdp", cdp)
        if cdp_variable is not None:
            pulumi.set(__self__, "cdp_variable", cdp_variable)
        if console_logging is not None:
            pulumi.set(__self__, "console_logging", console_logging)
        if console_logging_variable is not None:
            pulumi.set(__self__, "console_logging_variable", console_logging_variable)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if domain_lookup is not None:
            pulumi.set(__self__, "domain_lookup", domain_lookup)
        if domain_lookup_variable is not None:
            pulumi.set(__self__, "domain_lookup_variable", domain_lookup_variable)
        if feature_profile_id is not None:
            pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if ftp_passive is not None:
            pulumi.set(__self__, "ftp_passive", ftp_passive)
        if ftp_passive_variable is not None:
            pulumi.set(__self__, "ftp_passive_variable", ftp_passive_variable)
        if http_authentication is not None:
            pulumi.set(__self__, "http_authentication", http_authentication)
        if http_authentication_variable is not None:
            pulumi.set(__self__, "http_authentication_variable", http_authentication_variable)
        if http_server is not None:
            pulumi.set(__self__, "http_server", http_server)
        if http_server_variable is not None:
            pulumi.set(__self__, "http_server_variable", http_server_variable)
        if https_server is not None:
            pulumi.set(__self__, "https_server", https_server)
        if https_server_variable is not None:
            pulumi.set(__self__, "https_server_variable", https_server_variable)
        if ignore_bootp is not None:
            pulumi.set(__self__, "ignore_bootp", ignore_bootp)
        if ignore_bootp_variable is not None:
            pulumi.set(__self__, "ignore_bootp_variable", ignore_bootp_variable)
        if ip_source_routing is not None:
            pulumi.set(__self__, "ip_source_routing", ip_source_routing)
        if ip_source_routing_variable is not None:
            pulumi.set(__self__, "ip_source_routing_variable", ip_source_routing_variable)
        if line_vty is not None:
            pulumi.set(__self__, "line_vty", line_vty)
        if line_vty_variable is not None:
            pulumi.set(__self__, "line_vty_variable", line_vty_variable)
        if lldp is not None:
            pulumi.set(__self__, "lldp", lldp)
        if lldp_variable is not None:
            pulumi.set(__self__, "lldp_variable", lldp_variable)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nat64_tcp_timeout is not None:
            pulumi.set(__self__, "nat64_tcp_timeout", nat64_tcp_timeout)
        if nat64_tcp_timeout_variable is not None:
            pulumi.set(__self__, "nat64_tcp_timeout_variable", nat64_tcp_timeout_variable)
        if nat64_udp_timeout is not None:
            pulumi.set(__self__, "nat64_udp_timeout", nat64_udp_timeout)
        if nat64_udp_timeout_variable is not None:
            pulumi.set(__self__, "nat64_udp_timeout_variable", nat64_udp_timeout_variable)
        if rsh_rcp is not None:
            pulumi.set(__self__, "rsh_rcp", rsh_rcp)
        if rsh_rcp_variable is not None:
            pulumi.set(__self__, "rsh_rcp_variable", rsh_rcp_variable)
        if snmp_ifindex_persist is not None:
            pulumi.set(__self__, "snmp_ifindex_persist", snmp_ifindex_persist)
        if snmp_ifindex_persist_variable is not None:
            pulumi.set(__self__, "snmp_ifindex_persist_variable", snmp_ifindex_persist_variable)
        if source_interface is not None:
            pulumi.set(__self__, "source_interface", source_interface)
        if source_interface_variable is not None:
            pulumi.set(__self__, "source_interface_variable", source_interface_variable)
        if ssh_version is not None:
            pulumi.set(__self__, "ssh_version", ssh_version)
        if ssh_version_variable is not None:
            pulumi.set(__self__, "ssh_version_variable", ssh_version_variable)
        if tcp_keepalives_in is not None:
            pulumi.set(__self__, "tcp_keepalives_in", tcp_keepalives_in)
        if tcp_keepalives_in_variable is not None:
            pulumi.set(__self__, "tcp_keepalives_in_variable", tcp_keepalives_in_variable)
        if tcp_keepalives_out is not None:
            pulumi.set(__self__, "tcp_keepalives_out", tcp_keepalives_out)
        if tcp_keepalives_out_variable is not None:
            pulumi.set(__self__, "tcp_keepalives_out_variable", tcp_keepalives_out_variable)
        if tcp_small_servers is not None:
            pulumi.set(__self__, "tcp_small_servers", tcp_small_servers)
        if tcp_small_servers_variable is not None:
            pulumi.set(__self__, "tcp_small_servers_variable", tcp_small_servers_variable)
        if udp_small_servers is not None:
            pulumi.set(__self__, "udp_small_servers", udp_small_servers)
        if udp_small_servers_variable is not None:
            pulumi.set(__self__, "udp_small_servers_variable", udp_small_servers_variable)
        if version is not None:
            pulumi.set(__self__, "version", version)
        if vty_line_logging is not None:
            pulumi.set(__self__, "vty_line_logging", vty_line_logging)
        if vty_line_logging_variable is not None:
            pulumi.set(__self__, "vty_line_logging_variable", vty_line_logging_variable)

    @_builtins.property
    @pulumi.getter(name="arpProxy")
    def arp_proxy(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set ARP Proxy
          - Default value: `false`
        """
        return pulumi.get(self, "arp_proxy")

    @arp_proxy.setter
    def arp_proxy(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "arp_proxy", value)

    @_builtins.property
    @pulumi.getter(name="arpProxyVariable")
    def arp_proxy_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "arp_proxy_variable")

    @arp_proxy_variable.setter
    def arp_proxy_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "arp_proxy_variable", value)

    @_builtins.property
    @pulumi.getter
    def cdp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure CDP
          - Default value: `true`
        """
        return pulumi.get(self, "cdp")

    @cdp.setter
    def cdp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "cdp", value)

    @_builtins.property
    @pulumi.getter(name="cdpVariable")
    def cdp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "cdp_variable")

    @cdp_variable.setter
    def cdp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "cdp_variable", value)

    @_builtins.property
    @pulumi.getter(name="consoleLogging")
    def console_logging(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Console Logging
          - Default value: `true`
        """
        return pulumi.get(self, "console_logging")

    @console_logging.setter
    def console_logging(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "console_logging", value)

    @_builtins.property
    @pulumi.getter(name="consoleLoggingVariable")
    def console_logging_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "console_logging_variable")

    @console_logging_variable.setter
    def console_logging_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "console_logging_variable", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="domainLookup")
    def domain_lookup(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Domain-Lookup
          - Default value: `false`
        """
        return pulumi.get(self, "domain_lookup")

    @domain_lookup.setter
    def domain_lookup(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "domain_lookup", value)

    @_builtins.property
    @pulumi.getter(name="domainLookupVariable")
    def domain_lookup_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "domain_lookup_variable")

    @domain_lookup_variable.setter
    def domain_lookup_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "domain_lookup_variable", value)

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @feature_profile_id.setter
    def feature_profile_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "feature_profile_id", value)

    @_builtins.property
    @pulumi.getter(name="ftpPassive")
    def ftp_passive(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set Passive FTP
          - Default value: `false`
        """
        return pulumi.get(self, "ftp_passive")

    @ftp_passive.setter
    def ftp_passive(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ftp_passive", value)

    @_builtins.property
    @pulumi.getter(name="ftpPassiveVariable")
    def ftp_passive_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ftp_passive_variable")

    @ftp_passive_variable.setter
    def ftp_passive_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ftp_passive_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpAuthentication")
    def http_authentication(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Set preference for HTTP Authentication
          - Choices: `local`, `aaa`
        """
        return pulumi.get(self, "http_authentication")

    @http_authentication.setter
    def http_authentication(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_authentication", value)

    @_builtins.property
    @pulumi.getter(name="httpAuthenticationVariable")
    def http_authentication_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_authentication_variable")

    @http_authentication_variable.setter
    def http_authentication_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_authentication_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpServer")
    def http_server(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set a HTTP Server
          - Default value: `false`
        """
        return pulumi.get(self, "http_server")

    @http_server.setter
    def http_server(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "http_server", value)

    @_builtins.property
    @pulumi.getter(name="httpServerVariable")
    def http_server_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_server_variable")

    @http_server_variable.setter
    def http_server_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "http_server_variable", value)

    @_builtins.property
    @pulumi.getter(name="httpsServer")
    def https_server(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set a HTTPS Server
          - Default value: `false`
        """
        return pulumi.get(self, "https_server")

    @https_server.setter
    def https_server(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "https_server", value)

    @_builtins.property
    @pulumi.getter(name="httpsServerVariable")
    def https_server_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "https_server_variable")

    @https_server_variable.setter
    def https_server_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "https_server_variable", value)

    @_builtins.property
    @pulumi.getter(name="ignoreBootp")
    def ignore_bootp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Ignore BOOTP
          - Default value: `true`
        """
        return pulumi.get(self, "ignore_bootp")

    @ignore_bootp.setter
    def ignore_bootp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ignore_bootp", value)

    @_builtins.property
    @pulumi.getter(name="ignoreBootpVariable")
    def ignore_bootp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ignore_bootp_variable")

    @ignore_bootp_variable.setter
    def ignore_bootp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ignore_bootp_variable", value)

    @_builtins.property
    @pulumi.getter(name="ipSourceRouting")
    def ip_source_routing(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set Source Route
          - Default value: `false`
        """
        return pulumi.get(self, "ip_source_routing")

    @ip_source_routing.setter
    def ip_source_routing(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "ip_source_routing", value)

    @_builtins.property
    @pulumi.getter(name="ipSourceRoutingVariable")
    def ip_source_routing_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_source_routing_variable")

    @ip_source_routing_variable.setter
    def ip_source_routing_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ip_source_routing_variable", value)

    @_builtins.property
    @pulumi.getter(name="lineVty")
    def line_vty(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure Telnet (Outbound)
          - Default value: `false`
        """
        return pulumi.get(self, "line_vty")

    @line_vty.setter
    def line_vty(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "line_vty", value)

    @_builtins.property
    @pulumi.getter(name="lineVtyVariable")
    def line_vty_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "line_vty_variable")

    @line_vty_variable.setter
    def line_vty_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "line_vty_variable", value)

    @_builtins.property
    @pulumi.getter
    def lldp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure LLDP
          - Default value: `true`
        """
        return pulumi.get(self, "lldp")

    @lldp.setter
    def lldp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "lldp", value)

    @_builtins.property
    @pulumi.getter(name="lldpVariable")
    def lldp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "lldp_variable")

    @lldp_variable.setter
    def lldp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "lldp_variable", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeout")
    def nat64_tcp_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Set NAT64 TCP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `3600`
        """
        return pulumi.get(self, "nat64_tcp_timeout")

    @nat64_tcp_timeout.setter
    def nat64_tcp_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "nat64_tcp_timeout", value)

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeoutVariable")
    def nat64_tcp_timeout_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_tcp_timeout_variable")

    @nat64_tcp_timeout_variable.setter
    def nat64_tcp_timeout_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "nat64_tcp_timeout_variable", value)

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeout")
    def nat64_udp_timeout(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Set NAT64 UDP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `300`
        """
        return pulumi.get(self, "nat64_udp_timeout")

    @nat64_udp_timeout.setter
    def nat64_udp_timeout(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "nat64_udp_timeout", value)

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeoutVariable")
    def nat64_udp_timeout_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_udp_timeout_variable")

    @nat64_udp_timeout_variable.setter
    def nat64_udp_timeout_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "nat64_udp_timeout_variable", value)

    @_builtins.property
    @pulumi.getter(name="rshRcp")
    def rsh_rcp(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Set RSH/RCP
          - Default value: `false`
        """
        return pulumi.get(self, "rsh_rcp")

    @rsh_rcp.setter
    def rsh_rcp(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "rsh_rcp", value)

    @_builtins.property
    @pulumi.getter(name="rshRcpVariable")
    def rsh_rcp_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "rsh_rcp_variable")

    @rsh_rcp_variable.setter
    def rsh_rcp_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "rsh_rcp_variable", value)

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersist")
    def snmp_ifindex_persist(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure SNMP Ifindex Persist
          - Default value: `true`
        """
        return pulumi.get(self, "snmp_ifindex_persist")

    @snmp_ifindex_persist.setter
    def snmp_ifindex_persist(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "snmp_ifindex_persist", value)

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersistVariable")
    def snmp_ifindex_persist_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "snmp_ifindex_persist_variable")

    @snmp_ifindex_persist_variable.setter
    def snmp_ifindex_persist_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "snmp_ifindex_persist_variable", value)

    @_builtins.property
    @pulumi.getter(name="sourceInterface")
    def source_interface(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Specify interface for source address in all HTTP(S) client connections
        """
        return pulumi.get(self, "source_interface")

    @source_interface.setter
    def source_interface(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_interface", value)

    @_builtins.property
    @pulumi.getter(name="sourceInterfaceVariable")
    def source_interface_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "source_interface_variable")

    @source_interface_variable.setter
    def source_interface_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "source_interface_variable", value)

    @_builtins.property
    @pulumi.getter(name="sshVersion")
    def ssh_version(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Set SSH version
          - Choices: `2`
        """
        return pulumi.get(self, "ssh_version")

    @ssh_version.setter
    def ssh_version(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ssh_version", value)

    @_builtins.property
    @pulumi.getter(name="sshVersionVariable")
    def ssh_version_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ssh_version_variable")

    @ssh_version_variable.setter
    def ssh_version_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "ssh_version_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesIn")
    def tcp_keepalives_in(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-keepalives-in
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_in")

    @tcp_keepalives_in.setter
    def tcp_keepalives_in(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_keepalives_in", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesInVariable")
    def tcp_keepalives_in_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_in_variable")

    @tcp_keepalives_in_variable.setter
    def tcp_keepalives_in_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_keepalives_in_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOut")
    def tcp_keepalives_out(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-keepalives-out
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_out")

    @tcp_keepalives_out.setter
    def tcp_keepalives_out(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_keepalives_out", value)

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOutVariable")
    def tcp_keepalives_out_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_out_variable")

    @tcp_keepalives_out_variable.setter
    def tcp_keepalives_out_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_keepalives_out_variable", value)

    @_builtins.property
    @pulumi.getter(name="tcpSmallServers")
    def tcp_small_servers(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure tcp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "tcp_small_servers")

    @tcp_small_servers.setter
    def tcp_small_servers(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "tcp_small_servers", value)

    @_builtins.property
    @pulumi.getter(name="tcpSmallServersVariable")
    def tcp_small_servers_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_small_servers_variable")

    @tcp_small_servers_variable.setter
    def tcp_small_servers_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tcp_small_servers_variable", value)

    @_builtins.property
    @pulumi.getter(name="udpSmallServers")
    def udp_small_servers(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure udp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "udp_small_servers")

    @udp_small_servers.setter
    def udp_small_servers(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "udp_small_servers", value)

    @_builtins.property
    @pulumi.getter(name="udpSmallServersVariable")
    def udp_small_servers_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "udp_small_servers_variable")

    @udp_small_servers_variable.setter
    def udp_small_servers_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "udp_small_servers_variable", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "version", value)

    @_builtins.property
    @pulumi.getter(name="vtyLineLogging")
    def vty_line_logging(self) -> Optional[pulumi.Input[_builtins.bool]]:
        """
        Configure VTY Line Logging
          - Default value: `false`
        """
        return pulumi.get(self, "vty_line_logging")

    @vty_line_logging.setter
    def vty_line_logging(self, value: Optional[pulumi.Input[_builtins.bool]]):
        pulumi.set(self, "vty_line_logging", value)

    @_builtins.property
    @pulumi.getter(name="vtyLineLoggingVariable")
    def vty_line_logging_variable(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "vty_line_logging_variable")

    @vty_line_logging_variable.setter
    def vty_line_logging_variable(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "vty_line_logging_variable", value)


@pulumi.type_token("sdwan:index/systemGlobalFeature:SystemGlobalFeature")
class SystemGlobalFeature(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 arp_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 arp_proxy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 cdp: Optional[pulumi.Input[_builtins.bool]] = None,
                 cdp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 console_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 console_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_lookup: Optional[pulumi.Input[_builtins.bool]] = None,
                 domain_lookup_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ftp_passive: Optional[pulumi.Input[_builtins.bool]] = None,
                 ftp_passive_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 http_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 https_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 https_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ignore_bootp: Optional[pulumi.Input[_builtins.bool]] = None,
                 ignore_bootp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_source_routing: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_source_routing_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 line_vty: Optional[pulumi.Input[_builtins.bool]] = None,
                 line_vty_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 lldp: Optional[pulumi.Input[_builtins.bool]] = None,
                 lldp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_tcp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_tcp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_udp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_udp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 rsh_rcp: Optional[pulumi.Input[_builtins.bool]] = None,
                 rsh_rcp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 snmp_ifindex_persist: Optional[pulumi.Input[_builtins.bool]] = None,
                 snmp_ifindex_persist_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_in: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_in_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_out: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_out_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 udp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 udp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 vty_line_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 vty_line_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        """
        This resource can manage a System Global Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.SystemGlobalFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            http_server=False,
            https_server=False,
            ftp_passive=False,
            domain_lookup=False,
            arp_proxy=False,
            rsh_rcp=False,
            line_vty=False,
            cdp=True,
            lldp=True,
            source_interface="GigabitEthernet0/0/1",
            tcp_keepalives_in=True,
            tcp_keepalives_out=True,
            tcp_small_servers=False,
            udp_small_servers=False,
            console_logging=True,
            ip_source_routing=False,
            vty_line_logging=False,
            snmp_ifindex_persist=True,
            ignore_bootp=True,
            nat64_udp_timeout=300,
            nat64_tcp_timeout=3600,
            http_authentication="aaa",
            ssh_version="2")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "system_global_feature_id,feature_profile_id"

        ```sh
        $ pulumi import sdwan:index/systemGlobalFeature:SystemGlobalFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] arp_proxy: Set ARP Proxy
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] arp_proxy_variable: Variable name
        :param pulumi.Input[_builtins.bool] cdp: Configure CDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] cdp_variable: Variable name
        :param pulumi.Input[_builtins.bool] console_logging: Configure Console Logging
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] console_logging_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.bool] domain_lookup: Configure Domain-Lookup
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] domain_lookup_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.bool] ftp_passive: Set Passive FTP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ftp_passive_variable: Variable name
        :param pulumi.Input[_builtins.str] http_authentication: Set preference for HTTP Authentication
                 - Choices: `local`, `aaa`
        :param pulumi.Input[_builtins.str] http_authentication_variable: Variable name
        :param pulumi.Input[_builtins.bool] http_server: Set a HTTP Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] http_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] https_server: Set a HTTPS Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] https_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] ignore_bootp: Configure Ignore BOOTP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] ignore_bootp_variable: Variable name
        :param pulumi.Input[_builtins.bool] ip_source_routing: Set Source Route
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ip_source_routing_variable: Variable name
        :param pulumi.Input[_builtins.bool] line_vty: Configure Telnet (Outbound)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] line_vty_variable: Variable name
        :param pulumi.Input[_builtins.bool] lldp: Configure LLDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] lldp_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.int] nat64_tcp_timeout: Set NAT64 TCP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] nat64_tcp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.int] nat64_udp_timeout: Set NAT64 UDP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `300`
        :param pulumi.Input[_builtins.str] nat64_udp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.bool] rsh_rcp: Set RSH/RCP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] rsh_rcp_variable: Variable name
        :param pulumi.Input[_builtins.bool] snmp_ifindex_persist: Configure SNMP Ifindex Persist
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] snmp_ifindex_persist_variable: Variable name
        :param pulumi.Input[_builtins.str] source_interface: Specify interface for source address in all HTTP(S) client connections
        :param pulumi.Input[_builtins.str] source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] ssh_version: Set SSH version
                 - Choices: `2`
        :param pulumi.Input[_builtins.str] ssh_version_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_in: Configure tcp-keepalives-in
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_in_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_out: Configure tcp-keepalives-out
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_out_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_small_servers: Configure tcp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] tcp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] udp_small_servers: Configure udp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] udp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] vty_line_logging: Configure VTY Line Logging
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] vty_line_logging_variable: Variable name
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SystemGlobalFeatureArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a System Global Feature.
          - Minimum SD-WAN Manager version: `20.12.0`

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.SystemGlobalFeature("example",
            name="Example",
            description="My Example",
            feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac",
            http_server=False,
            https_server=False,
            ftp_passive=False,
            domain_lookup=False,
            arp_proxy=False,
            rsh_rcp=False,
            line_vty=False,
            cdp=True,
            lldp=True,
            source_interface="GigabitEthernet0/0/1",
            tcp_keepalives_in=True,
            tcp_keepalives_out=True,
            tcp_small_servers=False,
            udp_small_servers=False,
            console_logging=True,
            ip_source_routing=False,
            vty_line_logging=False,
            snmp_ifindex_persist=True,
            ignore_bootp=True,
            nat64_udp_timeout=300,
            nat64_tcp_timeout=3600,
            http_authentication="aaa",
            ssh_version="2")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        Expected import identifier with the format: "system_global_feature_id,feature_profile_id"

        ```sh
        $ pulumi import sdwan:index/systemGlobalFeature:SystemGlobalFeature example "f6b2c44c-693c-4763-b010-895aa3d236bd,f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac"
        ```

        :param str resource_name: The name of the resource.
        :param SystemGlobalFeatureArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SystemGlobalFeatureArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 arp_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
                 arp_proxy_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 cdp: Optional[pulumi.Input[_builtins.bool]] = None,
                 cdp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 console_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 console_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 domain_lookup: Optional[pulumi.Input[_builtins.bool]] = None,
                 domain_lookup_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                 ftp_passive: Optional[pulumi.Input[_builtins.bool]] = None,
                 ftp_passive_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication: Optional[pulumi.Input[_builtins.str]] = None,
                 http_authentication_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 http_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 http_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 https_server: Optional[pulumi.Input[_builtins.bool]] = None,
                 https_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ignore_bootp: Optional[pulumi.Input[_builtins.bool]] = None,
                 ignore_bootp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ip_source_routing: Optional[pulumi.Input[_builtins.bool]] = None,
                 ip_source_routing_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 line_vty: Optional[pulumi.Input[_builtins.bool]] = None,
                 line_vty_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 lldp: Optional[pulumi.Input[_builtins.bool]] = None,
                 lldp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_tcp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_tcp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 nat64_udp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
                 nat64_udp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 rsh_rcp: Optional[pulumi.Input[_builtins.bool]] = None,
                 rsh_rcp_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 snmp_ifindex_persist: Optional[pulumi.Input[_builtins.bool]] = None,
                 snmp_ifindex_persist_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface: Optional[pulumi.Input[_builtins.str]] = None,
                 source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version: Optional[pulumi.Input[_builtins.str]] = None,
                 ssh_version_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_in: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_in_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_keepalives_out: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_keepalives_out_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 tcp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 tcp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 udp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
                 udp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 vty_line_logging: Optional[pulumi.Input[_builtins.bool]] = None,
                 vty_line_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SystemGlobalFeatureArgs.__new__(SystemGlobalFeatureArgs)

            __props__.__dict__["arp_proxy"] = arp_proxy
            __props__.__dict__["arp_proxy_variable"] = arp_proxy_variable
            __props__.__dict__["cdp"] = cdp
            __props__.__dict__["cdp_variable"] = cdp_variable
            __props__.__dict__["console_logging"] = console_logging
            __props__.__dict__["console_logging_variable"] = console_logging_variable
            __props__.__dict__["description"] = description
            __props__.__dict__["domain_lookup"] = domain_lookup
            __props__.__dict__["domain_lookup_variable"] = domain_lookup_variable
            if feature_profile_id is None and not opts.urn:
                raise TypeError("Missing required property 'feature_profile_id'")
            __props__.__dict__["feature_profile_id"] = feature_profile_id
            __props__.__dict__["ftp_passive"] = ftp_passive
            __props__.__dict__["ftp_passive_variable"] = ftp_passive_variable
            __props__.__dict__["http_authentication"] = http_authentication
            __props__.__dict__["http_authentication_variable"] = http_authentication_variable
            __props__.__dict__["http_server"] = http_server
            __props__.__dict__["http_server_variable"] = http_server_variable
            __props__.__dict__["https_server"] = https_server
            __props__.__dict__["https_server_variable"] = https_server_variable
            __props__.__dict__["ignore_bootp"] = ignore_bootp
            __props__.__dict__["ignore_bootp_variable"] = ignore_bootp_variable
            __props__.__dict__["ip_source_routing"] = ip_source_routing
            __props__.__dict__["ip_source_routing_variable"] = ip_source_routing_variable
            __props__.__dict__["line_vty"] = line_vty
            __props__.__dict__["line_vty_variable"] = line_vty_variable
            __props__.__dict__["lldp"] = lldp
            __props__.__dict__["lldp_variable"] = lldp_variable
            __props__.__dict__["name"] = name
            __props__.__dict__["nat64_tcp_timeout"] = nat64_tcp_timeout
            __props__.__dict__["nat64_tcp_timeout_variable"] = nat64_tcp_timeout_variable
            __props__.__dict__["nat64_udp_timeout"] = nat64_udp_timeout
            __props__.__dict__["nat64_udp_timeout_variable"] = nat64_udp_timeout_variable
            __props__.__dict__["rsh_rcp"] = rsh_rcp
            __props__.__dict__["rsh_rcp_variable"] = rsh_rcp_variable
            __props__.__dict__["snmp_ifindex_persist"] = snmp_ifindex_persist
            __props__.__dict__["snmp_ifindex_persist_variable"] = snmp_ifindex_persist_variable
            __props__.__dict__["source_interface"] = source_interface
            __props__.__dict__["source_interface_variable"] = source_interface_variable
            __props__.__dict__["ssh_version"] = ssh_version
            __props__.__dict__["ssh_version_variable"] = ssh_version_variable
            __props__.__dict__["tcp_keepalives_in"] = tcp_keepalives_in
            __props__.__dict__["tcp_keepalives_in_variable"] = tcp_keepalives_in_variable
            __props__.__dict__["tcp_keepalives_out"] = tcp_keepalives_out
            __props__.__dict__["tcp_keepalives_out_variable"] = tcp_keepalives_out_variable
            __props__.__dict__["tcp_small_servers"] = tcp_small_servers
            __props__.__dict__["tcp_small_servers_variable"] = tcp_small_servers_variable
            __props__.__dict__["udp_small_servers"] = udp_small_servers
            __props__.__dict__["udp_small_servers_variable"] = udp_small_servers_variable
            __props__.__dict__["vty_line_logging"] = vty_line_logging
            __props__.__dict__["vty_line_logging_variable"] = vty_line_logging_variable
            __props__.__dict__["version"] = None
        super(SystemGlobalFeature, __self__).__init__(
            'sdwan:index/systemGlobalFeature:SystemGlobalFeature',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            arp_proxy: Optional[pulumi.Input[_builtins.bool]] = None,
            arp_proxy_variable: Optional[pulumi.Input[_builtins.str]] = None,
            cdp: Optional[pulumi.Input[_builtins.bool]] = None,
            cdp_variable: Optional[pulumi.Input[_builtins.str]] = None,
            console_logging: Optional[pulumi.Input[_builtins.bool]] = None,
            console_logging_variable: Optional[pulumi.Input[_builtins.str]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            domain_lookup: Optional[pulumi.Input[_builtins.bool]] = None,
            domain_lookup_variable: Optional[pulumi.Input[_builtins.str]] = None,
            feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
            ftp_passive: Optional[pulumi.Input[_builtins.bool]] = None,
            ftp_passive_variable: Optional[pulumi.Input[_builtins.str]] = None,
            http_authentication: Optional[pulumi.Input[_builtins.str]] = None,
            http_authentication_variable: Optional[pulumi.Input[_builtins.str]] = None,
            http_server: Optional[pulumi.Input[_builtins.bool]] = None,
            http_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
            https_server: Optional[pulumi.Input[_builtins.bool]] = None,
            https_server_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ignore_bootp: Optional[pulumi.Input[_builtins.bool]] = None,
            ignore_bootp_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ip_source_routing: Optional[pulumi.Input[_builtins.bool]] = None,
            ip_source_routing_variable: Optional[pulumi.Input[_builtins.str]] = None,
            line_vty: Optional[pulumi.Input[_builtins.bool]] = None,
            line_vty_variable: Optional[pulumi.Input[_builtins.str]] = None,
            lldp: Optional[pulumi.Input[_builtins.bool]] = None,
            lldp_variable: Optional[pulumi.Input[_builtins.str]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            nat64_tcp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
            nat64_tcp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
            nat64_udp_timeout: Optional[pulumi.Input[_builtins.int]] = None,
            nat64_udp_timeout_variable: Optional[pulumi.Input[_builtins.str]] = None,
            rsh_rcp: Optional[pulumi.Input[_builtins.bool]] = None,
            rsh_rcp_variable: Optional[pulumi.Input[_builtins.str]] = None,
            snmp_ifindex_persist: Optional[pulumi.Input[_builtins.bool]] = None,
            snmp_ifindex_persist_variable: Optional[pulumi.Input[_builtins.str]] = None,
            source_interface: Optional[pulumi.Input[_builtins.str]] = None,
            source_interface_variable: Optional[pulumi.Input[_builtins.str]] = None,
            ssh_version: Optional[pulumi.Input[_builtins.str]] = None,
            ssh_version_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tcp_keepalives_in: Optional[pulumi.Input[_builtins.bool]] = None,
            tcp_keepalives_in_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tcp_keepalives_out: Optional[pulumi.Input[_builtins.bool]] = None,
            tcp_keepalives_out_variable: Optional[pulumi.Input[_builtins.str]] = None,
            tcp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
            tcp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
            udp_small_servers: Optional[pulumi.Input[_builtins.bool]] = None,
            udp_small_servers_variable: Optional[pulumi.Input[_builtins.str]] = None,
            version: Optional[pulumi.Input[_builtins.int]] = None,
            vty_line_logging: Optional[pulumi.Input[_builtins.bool]] = None,
            vty_line_logging_variable: Optional[pulumi.Input[_builtins.str]] = None) -> 'SystemGlobalFeature':
        """
        Get an existing SystemGlobalFeature resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.bool] arp_proxy: Set ARP Proxy
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] arp_proxy_variable: Variable name
        :param pulumi.Input[_builtins.bool] cdp: Configure CDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] cdp_variable: Variable name
        :param pulumi.Input[_builtins.bool] console_logging: Configure Console Logging
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] console_logging_variable: Variable name
        :param pulumi.Input[_builtins.str] description: The description of the Feature
        :param pulumi.Input[_builtins.bool] domain_lookup: Configure Domain-Lookup
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] domain_lookup_variable: Variable name
        :param pulumi.Input[_builtins.str] feature_profile_id: Feature Profile ID
        :param pulumi.Input[_builtins.bool] ftp_passive: Set Passive FTP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ftp_passive_variable: Variable name
        :param pulumi.Input[_builtins.str] http_authentication: Set preference for HTTP Authentication
                 - Choices: `local`, `aaa`
        :param pulumi.Input[_builtins.str] http_authentication_variable: Variable name
        :param pulumi.Input[_builtins.bool] http_server: Set a HTTP Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] http_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] https_server: Set a HTTPS Server
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] https_server_variable: Variable name
        :param pulumi.Input[_builtins.bool] ignore_bootp: Configure Ignore BOOTP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] ignore_bootp_variable: Variable name
        :param pulumi.Input[_builtins.bool] ip_source_routing: Set Source Route
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] ip_source_routing_variable: Variable name
        :param pulumi.Input[_builtins.bool] line_vty: Configure Telnet (Outbound)
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] line_vty_variable: Variable name
        :param pulumi.Input[_builtins.bool] lldp: Configure LLDP
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] lldp_variable: Variable name
        :param pulumi.Input[_builtins.str] name: The name of the Feature
        :param pulumi.Input[_builtins.int] nat64_tcp_timeout: Set NAT64 TCP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `3600`
        :param pulumi.Input[_builtins.str] nat64_tcp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.int] nat64_udp_timeout: Set NAT64 UDP session timeout, in seconds
                 - Range: `1`-`536870`
                 - Default value: `300`
        :param pulumi.Input[_builtins.str] nat64_udp_timeout_variable: Variable name
        :param pulumi.Input[_builtins.bool] rsh_rcp: Set RSH/RCP
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] rsh_rcp_variable: Variable name
        :param pulumi.Input[_builtins.bool] snmp_ifindex_persist: Configure SNMP Ifindex Persist
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] snmp_ifindex_persist_variable: Variable name
        :param pulumi.Input[_builtins.str] source_interface: Specify interface for source address in all HTTP(S) client connections
        :param pulumi.Input[_builtins.str] source_interface_variable: Variable name
        :param pulumi.Input[_builtins.str] ssh_version: Set SSH version
                 - Choices: `2`
        :param pulumi.Input[_builtins.str] ssh_version_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_in: Configure tcp-keepalives-in
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_in_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_keepalives_out: Configure tcp-keepalives-out
                 - Default value: `true`
        :param pulumi.Input[_builtins.str] tcp_keepalives_out_variable: Variable name
        :param pulumi.Input[_builtins.bool] tcp_small_servers: Configure tcp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] tcp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.bool] udp_small_servers: Configure udp-small-servers
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] udp_small_servers_variable: Variable name
        :param pulumi.Input[_builtins.int] version: The version of the Feature
        :param pulumi.Input[_builtins.bool] vty_line_logging: Configure VTY Line Logging
                 - Default value: `false`
        :param pulumi.Input[_builtins.str] vty_line_logging_variable: Variable name
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SystemGlobalFeatureState.__new__(_SystemGlobalFeatureState)

        __props__.__dict__["arp_proxy"] = arp_proxy
        __props__.__dict__["arp_proxy_variable"] = arp_proxy_variable
        __props__.__dict__["cdp"] = cdp
        __props__.__dict__["cdp_variable"] = cdp_variable
        __props__.__dict__["console_logging"] = console_logging
        __props__.__dict__["console_logging_variable"] = console_logging_variable
        __props__.__dict__["description"] = description
        __props__.__dict__["domain_lookup"] = domain_lookup
        __props__.__dict__["domain_lookup_variable"] = domain_lookup_variable
        __props__.__dict__["feature_profile_id"] = feature_profile_id
        __props__.__dict__["ftp_passive"] = ftp_passive
        __props__.__dict__["ftp_passive_variable"] = ftp_passive_variable
        __props__.__dict__["http_authentication"] = http_authentication
        __props__.__dict__["http_authentication_variable"] = http_authentication_variable
        __props__.__dict__["http_server"] = http_server
        __props__.__dict__["http_server_variable"] = http_server_variable
        __props__.__dict__["https_server"] = https_server
        __props__.__dict__["https_server_variable"] = https_server_variable
        __props__.__dict__["ignore_bootp"] = ignore_bootp
        __props__.__dict__["ignore_bootp_variable"] = ignore_bootp_variable
        __props__.__dict__["ip_source_routing"] = ip_source_routing
        __props__.__dict__["ip_source_routing_variable"] = ip_source_routing_variable
        __props__.__dict__["line_vty"] = line_vty
        __props__.__dict__["line_vty_variable"] = line_vty_variable
        __props__.__dict__["lldp"] = lldp
        __props__.__dict__["lldp_variable"] = lldp_variable
        __props__.__dict__["name"] = name
        __props__.__dict__["nat64_tcp_timeout"] = nat64_tcp_timeout
        __props__.__dict__["nat64_tcp_timeout_variable"] = nat64_tcp_timeout_variable
        __props__.__dict__["nat64_udp_timeout"] = nat64_udp_timeout
        __props__.__dict__["nat64_udp_timeout_variable"] = nat64_udp_timeout_variable
        __props__.__dict__["rsh_rcp"] = rsh_rcp
        __props__.__dict__["rsh_rcp_variable"] = rsh_rcp_variable
        __props__.__dict__["snmp_ifindex_persist"] = snmp_ifindex_persist
        __props__.__dict__["snmp_ifindex_persist_variable"] = snmp_ifindex_persist_variable
        __props__.__dict__["source_interface"] = source_interface
        __props__.__dict__["source_interface_variable"] = source_interface_variable
        __props__.__dict__["ssh_version"] = ssh_version
        __props__.__dict__["ssh_version_variable"] = ssh_version_variable
        __props__.__dict__["tcp_keepalives_in"] = tcp_keepalives_in
        __props__.__dict__["tcp_keepalives_in_variable"] = tcp_keepalives_in_variable
        __props__.__dict__["tcp_keepalives_out"] = tcp_keepalives_out
        __props__.__dict__["tcp_keepalives_out_variable"] = tcp_keepalives_out_variable
        __props__.__dict__["tcp_small_servers"] = tcp_small_servers
        __props__.__dict__["tcp_small_servers_variable"] = tcp_small_servers_variable
        __props__.__dict__["udp_small_servers"] = udp_small_servers
        __props__.__dict__["udp_small_servers_variable"] = udp_small_servers_variable
        __props__.__dict__["version"] = version
        __props__.__dict__["vty_line_logging"] = vty_line_logging
        __props__.__dict__["vty_line_logging_variable"] = vty_line_logging_variable
        return SystemGlobalFeature(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="arpProxy")
    def arp_proxy(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set ARP Proxy
          - Default value: `false`
        """
        return pulumi.get(self, "arp_proxy")

    @_builtins.property
    @pulumi.getter(name="arpProxyVariable")
    def arp_proxy_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "arp_proxy_variable")

    @_builtins.property
    @pulumi.getter
    def cdp(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure CDP
          - Default value: `true`
        """
        return pulumi.get(self, "cdp")

    @_builtins.property
    @pulumi.getter(name="cdpVariable")
    def cdp_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "cdp_variable")

    @_builtins.property
    @pulumi.getter(name="consoleLogging")
    def console_logging(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure Console Logging
          - Default value: `true`
        """
        return pulumi.get(self, "console_logging")

    @_builtins.property
    @pulumi.getter(name="consoleLoggingVariable")
    def console_logging_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "console_logging_variable")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainLookup")
    def domain_lookup(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure Domain-Lookup
          - Default value: `false`
        """
        return pulumi.get(self, "domain_lookup")

    @_builtins.property
    @pulumi.getter(name="domainLookupVariable")
    def domain_lookup_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "domain_lookup_variable")

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> pulumi.Output[_builtins.str]:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @_builtins.property
    @pulumi.getter(name="ftpPassive")
    def ftp_passive(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set Passive FTP
          - Default value: `false`
        """
        return pulumi.get(self, "ftp_passive")

    @_builtins.property
    @pulumi.getter(name="ftpPassiveVariable")
    def ftp_passive_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ftp_passive_variable")

    @_builtins.property
    @pulumi.getter(name="httpAuthentication")
    def http_authentication(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Set preference for HTTP Authentication
          - Choices: `local`, `aaa`
        """
        return pulumi.get(self, "http_authentication")

    @_builtins.property
    @pulumi.getter(name="httpAuthenticationVariable")
    def http_authentication_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_authentication_variable")

    @_builtins.property
    @pulumi.getter(name="httpServer")
    def http_server(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set a HTTP Server
          - Default value: `false`
        """
        return pulumi.get(self, "http_server")

    @_builtins.property
    @pulumi.getter(name="httpServerVariable")
    def http_server_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "http_server_variable")

    @_builtins.property
    @pulumi.getter(name="httpsServer")
    def https_server(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set a HTTPS Server
          - Default value: `false`
        """
        return pulumi.get(self, "https_server")

    @_builtins.property
    @pulumi.getter(name="httpsServerVariable")
    def https_server_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "https_server_variable")

    @_builtins.property
    @pulumi.getter(name="ignoreBootp")
    def ignore_bootp(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure Ignore BOOTP
          - Default value: `true`
        """
        return pulumi.get(self, "ignore_bootp")

    @_builtins.property
    @pulumi.getter(name="ignoreBootpVariable")
    def ignore_bootp_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ignore_bootp_variable")

    @_builtins.property
    @pulumi.getter(name="ipSourceRouting")
    def ip_source_routing(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set Source Route
          - Default value: `false`
        """
        return pulumi.get(self, "ip_source_routing")

    @_builtins.property
    @pulumi.getter(name="ipSourceRoutingVariable")
    def ip_source_routing_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ip_source_routing_variable")

    @_builtins.property
    @pulumi.getter(name="lineVty")
    def line_vty(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure Telnet (Outbound)
          - Default value: `false`
        """
        return pulumi.get(self, "line_vty")

    @_builtins.property
    @pulumi.getter(name="lineVtyVariable")
    def line_vty_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "line_vty_variable")

    @_builtins.property
    @pulumi.getter
    def lldp(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure LLDP
          - Default value: `true`
        """
        return pulumi.get(self, "lldp")

    @_builtins.property
    @pulumi.getter(name="lldpVariable")
    def lldp_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "lldp_variable")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeout")
    def nat64_tcp_timeout(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Set NAT64 TCP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `3600`
        """
        return pulumi.get(self, "nat64_tcp_timeout")

    @_builtins.property
    @pulumi.getter(name="nat64TcpTimeoutVariable")
    def nat64_tcp_timeout_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_tcp_timeout_variable")

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeout")
    def nat64_udp_timeout(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Set NAT64 UDP session timeout, in seconds
          - Range: `1`-`536870`
          - Default value: `300`
        """
        return pulumi.get(self, "nat64_udp_timeout")

    @_builtins.property
    @pulumi.getter(name="nat64UdpTimeoutVariable")
    def nat64_udp_timeout_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "nat64_udp_timeout_variable")

    @_builtins.property
    @pulumi.getter(name="rshRcp")
    def rsh_rcp(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Set RSH/RCP
          - Default value: `false`
        """
        return pulumi.get(self, "rsh_rcp")

    @_builtins.property
    @pulumi.getter(name="rshRcpVariable")
    def rsh_rcp_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "rsh_rcp_variable")

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersist")
    def snmp_ifindex_persist(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure SNMP Ifindex Persist
          - Default value: `true`
        """
        return pulumi.get(self, "snmp_ifindex_persist")

    @_builtins.property
    @pulumi.getter(name="snmpIfindexPersistVariable")
    def snmp_ifindex_persist_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "snmp_ifindex_persist_variable")

    @_builtins.property
    @pulumi.getter(name="sourceInterface")
    def source_interface(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Specify interface for source address in all HTTP(S) client connections
        """
        return pulumi.get(self, "source_interface")

    @_builtins.property
    @pulumi.getter(name="sourceInterfaceVariable")
    def source_interface_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "source_interface_variable")

    @_builtins.property
    @pulumi.getter(name="sshVersion")
    def ssh_version(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Set SSH version
          - Choices: `2`
        """
        return pulumi.get(self, "ssh_version")

    @_builtins.property
    @pulumi.getter(name="sshVersionVariable")
    def ssh_version_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "ssh_version_variable")

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesIn")
    def tcp_keepalives_in(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure tcp-keepalives-in
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_in")

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesInVariable")
    def tcp_keepalives_in_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_in_variable")

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOut")
    def tcp_keepalives_out(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure tcp-keepalives-out
          - Default value: `true`
        """
        return pulumi.get(self, "tcp_keepalives_out")

    @_builtins.property
    @pulumi.getter(name="tcpKeepalivesOutVariable")
    def tcp_keepalives_out_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_keepalives_out_variable")

    @_builtins.property
    @pulumi.getter(name="tcpSmallServers")
    def tcp_small_servers(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure tcp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "tcp_small_servers")

    @_builtins.property
    @pulumi.getter(name="tcpSmallServersVariable")
    def tcp_small_servers_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "tcp_small_servers_variable")

    @_builtins.property
    @pulumi.getter(name="udpSmallServers")
    def udp_small_servers(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure udp-small-servers
          - Default value: `false`
        """
        return pulumi.get(self, "udp_small_servers")

    @_builtins.property
    @pulumi.getter(name="udpSmallServersVariable")
    def udp_small_servers_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "udp_small_servers_variable")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.int]:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")

    @_builtins.property
    @pulumi.getter(name="vtyLineLogging")
    def vty_line_logging(self) -> pulumi.Output[Optional[_builtins.bool]]:
        """
        Configure VTY Line Logging
          - Default value: `false`
        """
        return pulumi.get(self, "vty_line_logging")

    @_builtins.property
    @pulumi.getter(name="vtyLineLoggingVariable")
    def vty_line_logging_variable(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Variable name
        """
        return pulumi.get(self, "vty_line_logging_variable")

