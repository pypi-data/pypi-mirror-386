# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetSystemPerformanceMonitoringFeatureResult',
    'AwaitableGetSystemPerformanceMonitoringFeatureResult',
    'get_system_performance_monitoring_feature',
    'get_system_performance_monitoring_feature_output',
]

@pulumi.output_type
class GetSystemPerformanceMonitoringFeatureResult:
    """
    A collection of values returned by getSystemPerformanceMonitoringFeature.
    """
    def __init__(__self__, app_perf_monitor_app_groups=None, app_perf_monitor_enabled=None, description=None, event_driven_config_enabled=None, event_driven_events=None, feature_profile_id=None, id=None, monitoring_config_enabled=None, monitoring_config_interval=None, name=None, version=None):
        if app_perf_monitor_app_groups and not isinstance(app_perf_monitor_app_groups, list):
            raise TypeError("Expected argument 'app_perf_monitor_app_groups' to be a list")
        pulumi.set(__self__, "app_perf_monitor_app_groups", app_perf_monitor_app_groups)
        if app_perf_monitor_enabled and not isinstance(app_perf_monitor_enabled, bool):
            raise TypeError("Expected argument 'app_perf_monitor_enabled' to be a bool")
        pulumi.set(__self__, "app_perf_monitor_enabled", app_perf_monitor_enabled)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if event_driven_config_enabled and not isinstance(event_driven_config_enabled, bool):
            raise TypeError("Expected argument 'event_driven_config_enabled' to be a bool")
        pulumi.set(__self__, "event_driven_config_enabled", event_driven_config_enabled)
        if event_driven_events and not isinstance(event_driven_events, list):
            raise TypeError("Expected argument 'event_driven_events' to be a list")
        pulumi.set(__self__, "event_driven_events", event_driven_events)
        if feature_profile_id and not isinstance(feature_profile_id, str):
            raise TypeError("Expected argument 'feature_profile_id' to be a str")
        pulumi.set(__self__, "feature_profile_id", feature_profile_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if monitoring_config_enabled and not isinstance(monitoring_config_enabled, bool):
            raise TypeError("Expected argument 'monitoring_config_enabled' to be a bool")
        pulumi.set(__self__, "monitoring_config_enabled", monitoring_config_enabled)
        if monitoring_config_interval and not isinstance(monitoring_config_interval, str):
            raise TypeError("Expected argument 'monitoring_config_interval' to be a str")
        pulumi.set(__self__, "monitoring_config_interval", monitoring_config_interval)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if version and not isinstance(version, int):
            raise TypeError("Expected argument 'version' to be a int")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="appPerfMonitorAppGroups")
    def app_perf_monitor_app_groups(self) -> Sequence[_builtins.str]:
        """
        Application groups to be monitored
        """
        return pulumi.get(self, "app_perf_monitor_app_groups")

    @_builtins.property
    @pulumi.getter(name="appPerfMonitorEnabled")
    def app_perf_monitor_enabled(self) -> _builtins.bool:
        """
        Application performance monitoring enable or disable
        """
        return pulumi.get(self, "app_perf_monitor_enabled")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the Feature
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="eventDrivenConfigEnabled")
    def event_driven_config_enabled(self) -> _builtins.bool:
        """
        UMTS event driven monitoring enable or disable
        """
        return pulumi.get(self, "event_driven_config_enabled")

    @_builtins.property
    @pulumi.getter(name="eventDrivenEvents")
    def event_driven_events(self) -> Sequence[_builtins.str]:
        """
        UMTS events
        """
        return pulumi.get(self, "event_driven_events")

    @_builtins.property
    @pulumi.getter(name="featureProfileId")
    def feature_profile_id(self) -> _builtins.str:
        """
        Feature Profile ID
        """
        return pulumi.get(self, "feature_profile_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The id of the Feature
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="monitoringConfigEnabled")
    def monitoring_config_enabled(self) -> _builtins.bool:
        """
        UMTS monitoring enable or disable
        """
        return pulumi.get(self, "monitoring_config_enabled")

    @_builtins.property
    @pulumi.getter(name="monitoringConfigInterval")
    def monitoring_config_interval(self) -> _builtins.str:
        """
        UMTS monitoring interval(Minutes)
        """
        return pulumi.get(self, "monitoring_config_interval")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the Feature
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.int:
        """
        The version of the Feature
        """
        return pulumi.get(self, "version")


class AwaitableGetSystemPerformanceMonitoringFeatureResult(GetSystemPerformanceMonitoringFeatureResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemPerformanceMonitoringFeatureResult(
            app_perf_monitor_app_groups=self.app_perf_monitor_app_groups,
            app_perf_monitor_enabled=self.app_perf_monitor_enabled,
            description=self.description,
            event_driven_config_enabled=self.event_driven_config_enabled,
            event_driven_events=self.event_driven_events,
            feature_profile_id=self.feature_profile_id,
            id=self.id,
            monitoring_config_enabled=self.monitoring_config_enabled,
            monitoring_config_interval=self.monitoring_config_interval,
            name=self.name,
            version=self.version)


def get_system_performance_monitoring_feature(feature_profile_id: Optional[_builtins.str] = None,
                                              id: Optional[_builtins.str] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemPerformanceMonitoringFeatureResult:
    """
    This data source can read the System Performance Monitoring Feature.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_system_performance_monitoring_feature(id="f6b2c44c-693c-4763-b010-895aa3d236bd",
        feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
    ```


    :param _builtins.str feature_profile_id: Feature Profile ID
    :param _builtins.str id: The id of the Feature
    """
    __args__ = dict()
    __args__['featureProfileId'] = feature_profile_id
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sdwan:index/getSystemPerformanceMonitoringFeature:getSystemPerformanceMonitoringFeature', __args__, opts=opts, typ=GetSystemPerformanceMonitoringFeatureResult).value

    return AwaitableGetSystemPerformanceMonitoringFeatureResult(
        app_perf_monitor_app_groups=pulumi.get(__ret__, 'app_perf_monitor_app_groups'),
        app_perf_monitor_enabled=pulumi.get(__ret__, 'app_perf_monitor_enabled'),
        description=pulumi.get(__ret__, 'description'),
        event_driven_config_enabled=pulumi.get(__ret__, 'event_driven_config_enabled'),
        event_driven_events=pulumi.get(__ret__, 'event_driven_events'),
        feature_profile_id=pulumi.get(__ret__, 'feature_profile_id'),
        id=pulumi.get(__ret__, 'id'),
        monitoring_config_enabled=pulumi.get(__ret__, 'monitoring_config_enabled'),
        monitoring_config_interval=pulumi.get(__ret__, 'monitoring_config_interval'),
        name=pulumi.get(__ret__, 'name'),
        version=pulumi.get(__ret__, 'version'))
def get_system_performance_monitoring_feature_output(feature_profile_id: Optional[pulumi.Input[_builtins.str]] = None,
                                                     id: Optional[pulumi.Input[_builtins.str]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSystemPerformanceMonitoringFeatureResult]:
    """
    This data source can read the System Performance Monitoring Feature.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_system_performance_monitoring_feature(id="f6b2c44c-693c-4763-b010-895aa3d236bd",
        feature_profile_id="f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac")
    ```


    :param _builtins.str feature_profile_id: Feature Profile ID
    :param _builtins.str id: The id of the Feature
    """
    __args__ = dict()
    __args__['featureProfileId'] = feature_profile_id
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sdwan:index/getSystemPerformanceMonitoringFeature:getSystemPerformanceMonitoringFeature', __args__, opts=opts, typ=GetSystemPerformanceMonitoringFeatureResult)
    return __ret__.apply(lambda __response__: GetSystemPerformanceMonitoringFeatureResult(
        app_perf_monitor_app_groups=pulumi.get(__response__, 'app_perf_monitor_app_groups'),
        app_perf_monitor_enabled=pulumi.get(__response__, 'app_perf_monitor_enabled'),
        description=pulumi.get(__response__, 'description'),
        event_driven_config_enabled=pulumi.get(__response__, 'event_driven_config_enabled'),
        event_driven_events=pulumi.get(__response__, 'event_driven_events'),
        feature_profile_id=pulumi.get(__response__, 'feature_profile_id'),
        id=pulumi.get(__response__, 'id'),
        monitoring_config_enabled=pulumi.get(__response__, 'monitoring_config_enabled'),
        monitoring_config_interval=pulumi.get(__response__, 'monitoring_config_interval'),
        name=pulumi.get(__response__, 'name'),
        version=pulumi.get(__response__, 'version')))
