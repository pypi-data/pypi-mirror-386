# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetCellularProfileFeatureTemplateResult',
    'AwaitableGetCellularProfileFeatureTemplateResult',
    'get_cellular_profile_feature_template',
    'get_cellular_profile_feature_template_output',
]

@pulumi.output_type
class GetCellularProfileFeatureTemplateResult:
    """
    A collection of values returned by getCellularProfileFeatureTemplate.
    """
    def __init__(__self__, access_point_name=None, access_point_name_variable=None, authentication_type=None, authentication_type_variable=None, description=None, device_types=None, id=None, if_name=None, if_name_variable=None, ip_address=None, ip_address_variable=None, name=None, packet_data_network_type=None, packet_data_network_type_variable=None, primary_dns_address=None, primary_dns_address_variable=None, profile_id=None, profile_id_variable=None, profile_name=None, profile_name_variable=None, profile_password=None, profile_password_variable=None, profile_username=None, profile_username_variable=None, secondary_dns_address=None, secondary_dns_address_variable=None, template_type=None, version=None):
        if access_point_name and not isinstance(access_point_name, str):
            raise TypeError("Expected argument 'access_point_name' to be a str")
        pulumi.set(__self__, "access_point_name", access_point_name)
        if access_point_name_variable and not isinstance(access_point_name_variable, str):
            raise TypeError("Expected argument 'access_point_name_variable' to be a str")
        pulumi.set(__self__, "access_point_name_variable", access_point_name_variable)
        if authentication_type and not isinstance(authentication_type, str):
            raise TypeError("Expected argument 'authentication_type' to be a str")
        pulumi.set(__self__, "authentication_type", authentication_type)
        if authentication_type_variable and not isinstance(authentication_type_variable, str):
            raise TypeError("Expected argument 'authentication_type_variable' to be a str")
        pulumi.set(__self__, "authentication_type_variable", authentication_type_variable)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if device_types and not isinstance(device_types, list):
            raise TypeError("Expected argument 'device_types' to be a list")
        pulumi.set(__self__, "device_types", device_types)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if if_name and not isinstance(if_name, str):
            raise TypeError("Expected argument 'if_name' to be a str")
        pulumi.set(__self__, "if_name", if_name)
        if if_name_variable and not isinstance(if_name_variable, str):
            raise TypeError("Expected argument 'if_name_variable' to be a str")
        pulumi.set(__self__, "if_name_variable", if_name_variable)
        if ip_address and not isinstance(ip_address, str):
            raise TypeError("Expected argument 'ip_address' to be a str")
        pulumi.set(__self__, "ip_address", ip_address)
        if ip_address_variable and not isinstance(ip_address_variable, str):
            raise TypeError("Expected argument 'ip_address_variable' to be a str")
        pulumi.set(__self__, "ip_address_variable", ip_address_variable)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if packet_data_network_type and not isinstance(packet_data_network_type, str):
            raise TypeError("Expected argument 'packet_data_network_type' to be a str")
        pulumi.set(__self__, "packet_data_network_type", packet_data_network_type)
        if packet_data_network_type_variable and not isinstance(packet_data_network_type_variable, str):
            raise TypeError("Expected argument 'packet_data_network_type_variable' to be a str")
        pulumi.set(__self__, "packet_data_network_type_variable", packet_data_network_type_variable)
        if primary_dns_address and not isinstance(primary_dns_address, str):
            raise TypeError("Expected argument 'primary_dns_address' to be a str")
        pulumi.set(__self__, "primary_dns_address", primary_dns_address)
        if primary_dns_address_variable and not isinstance(primary_dns_address_variable, str):
            raise TypeError("Expected argument 'primary_dns_address_variable' to be a str")
        pulumi.set(__self__, "primary_dns_address_variable", primary_dns_address_variable)
        if profile_id and not isinstance(profile_id, int):
            raise TypeError("Expected argument 'profile_id' to be a int")
        pulumi.set(__self__, "profile_id", profile_id)
        if profile_id_variable and not isinstance(profile_id_variable, str):
            raise TypeError("Expected argument 'profile_id_variable' to be a str")
        pulumi.set(__self__, "profile_id_variable", profile_id_variable)
        if profile_name and not isinstance(profile_name, str):
            raise TypeError("Expected argument 'profile_name' to be a str")
        pulumi.set(__self__, "profile_name", profile_name)
        if profile_name_variable and not isinstance(profile_name_variable, str):
            raise TypeError("Expected argument 'profile_name_variable' to be a str")
        pulumi.set(__self__, "profile_name_variable", profile_name_variable)
        if profile_password and not isinstance(profile_password, str):
            raise TypeError("Expected argument 'profile_password' to be a str")
        pulumi.set(__self__, "profile_password", profile_password)
        if profile_password_variable and not isinstance(profile_password_variable, str):
            raise TypeError("Expected argument 'profile_password_variable' to be a str")
        pulumi.set(__self__, "profile_password_variable", profile_password_variable)
        if profile_username and not isinstance(profile_username, str):
            raise TypeError("Expected argument 'profile_username' to be a str")
        pulumi.set(__self__, "profile_username", profile_username)
        if profile_username_variable and not isinstance(profile_username_variable, str):
            raise TypeError("Expected argument 'profile_username_variable' to be a str")
        pulumi.set(__self__, "profile_username_variable", profile_username_variable)
        if secondary_dns_address and not isinstance(secondary_dns_address, str):
            raise TypeError("Expected argument 'secondary_dns_address' to be a str")
        pulumi.set(__self__, "secondary_dns_address", secondary_dns_address)
        if secondary_dns_address_variable and not isinstance(secondary_dns_address_variable, str):
            raise TypeError("Expected argument 'secondary_dns_address_variable' to be a str")
        pulumi.set(__self__, "secondary_dns_address_variable", secondary_dns_address_variable)
        if template_type and not isinstance(template_type, str):
            raise TypeError("Expected argument 'template_type' to be a str")
        pulumi.set(__self__, "template_type", template_type)
        if version and not isinstance(version, int):
            raise TypeError("Expected argument 'version' to be a int")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="accessPointName")
    def access_point_name(self) -> _builtins.str:
        """
        Set access point name
        """
        return pulumi.get(self, "access_point_name")

    @_builtins.property
    @pulumi.getter(name="accessPointNameVariable")
    def access_point_name_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "access_point_name_variable")

    @_builtins.property
    @pulumi.getter(name="authenticationType")
    def authentication_type(self) -> _builtins.str:
        """
        Set authentication type
        """
        return pulumi.get(self, "authentication_type")

    @_builtins.property
    @pulumi.getter(name="authenticationTypeVariable")
    def authentication_type_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "authentication_type_variable")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the feature template
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="deviceTypes")
    def device_types(self) -> Sequence[_builtins.str]:
        """
        List of supported device types
        """
        return pulumi.get(self, "device_types")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The id of the feature template
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ifName")
    def if_name(self) -> _builtins.str:
        """
        Set interface name
        """
        return pulumi.get(self, "if_name")

    @_builtins.property
    @pulumi.getter(name="ifNameVariable")
    def if_name_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "if_name_variable")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> _builtins.str:
        """
        Set IP address
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="ipAddressVariable")
    def ip_address_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "ip_address_variable")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the feature template
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetDataNetworkType")
    def packet_data_network_type(self) -> _builtins.str:
        """
        Set packet data network type
        """
        return pulumi.get(self, "packet_data_network_type")

    @_builtins.property
    @pulumi.getter(name="packetDataNetworkTypeVariable")
    def packet_data_network_type_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "packet_data_network_type_variable")

    @_builtins.property
    @pulumi.getter(name="primaryDnsAddress")
    def primary_dns_address(self) -> _builtins.str:
        """
        Set the address of the primary DNS server
        """
        return pulumi.get(self, "primary_dns_address")

    @_builtins.property
    @pulumi.getter(name="primaryDnsAddressVariable")
    def primary_dns_address_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "primary_dns_address_variable")

    @_builtins.property
    @pulumi.getter(name="profileId")
    def profile_id(self) -> _builtins.int:
        """
        Set Profile ID
        """
        return pulumi.get(self, "profile_id")

    @_builtins.property
    @pulumi.getter(name="profileIdVariable")
    def profile_id_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "profile_id_variable")

    @_builtins.property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> _builtins.str:
        """
        Set profile name
        """
        return pulumi.get(self, "profile_name")

    @_builtins.property
    @pulumi.getter(name="profileNameVariable")
    def profile_name_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "profile_name_variable")

    @_builtins.property
    @pulumi.getter(name="profilePassword")
    def profile_password(self) -> _builtins.str:
        """
        Set the profile password
        """
        return pulumi.get(self, "profile_password")

    @_builtins.property
    @pulumi.getter(name="profilePasswordVariable")
    def profile_password_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "profile_password_variable")

    @_builtins.property
    @pulumi.getter(name="profileUsername")
    def profile_username(self) -> _builtins.str:
        """
        Set the profile username
        """
        return pulumi.get(self, "profile_username")

    @_builtins.property
    @pulumi.getter(name="profileUsernameVariable")
    def profile_username_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "profile_username_variable")

    @_builtins.property
    @pulumi.getter(name="secondaryDnsAddress")
    def secondary_dns_address(self) -> _builtins.str:
        """
        Set the address of the secondary DNS server
        """
        return pulumi.get(self, "secondary_dns_address")

    @_builtins.property
    @pulumi.getter(name="secondaryDnsAddressVariable")
    def secondary_dns_address_variable(self) -> _builtins.str:
        """
        Variable name
        """
        return pulumi.get(self, "secondary_dns_address_variable")

    @_builtins.property
    @pulumi.getter(name="templateType")
    def template_type(self) -> _builtins.str:
        """
        The template type
        """
        return pulumi.get(self, "template_type")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.int:
        """
        The version of the feature template
        """
        return pulumi.get(self, "version")


class AwaitableGetCellularProfileFeatureTemplateResult(GetCellularProfileFeatureTemplateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCellularProfileFeatureTemplateResult(
            access_point_name=self.access_point_name,
            access_point_name_variable=self.access_point_name_variable,
            authentication_type=self.authentication_type,
            authentication_type_variable=self.authentication_type_variable,
            description=self.description,
            device_types=self.device_types,
            id=self.id,
            if_name=self.if_name,
            if_name_variable=self.if_name_variable,
            ip_address=self.ip_address,
            ip_address_variable=self.ip_address_variable,
            name=self.name,
            packet_data_network_type=self.packet_data_network_type,
            packet_data_network_type_variable=self.packet_data_network_type_variable,
            primary_dns_address=self.primary_dns_address,
            primary_dns_address_variable=self.primary_dns_address_variable,
            profile_id=self.profile_id,
            profile_id_variable=self.profile_id_variable,
            profile_name=self.profile_name,
            profile_name_variable=self.profile_name_variable,
            profile_password=self.profile_password,
            profile_password_variable=self.profile_password_variable,
            profile_username=self.profile_username,
            profile_username_variable=self.profile_username_variable,
            secondary_dns_address=self.secondary_dns_address,
            secondary_dns_address_variable=self.secondary_dns_address_variable,
            template_type=self.template_type,
            version=self.version)


def get_cellular_profile_feature_template(id: Optional[_builtins.str] = None,
                                          name: Optional[_builtins.str] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCellularProfileFeatureTemplateResult:
    """
    This data source can read the Cellular Profile feature template.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_cellular_profile_feature_template(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the feature template
    :param _builtins.str name: The name of the feature template
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sdwan:index/getCellularProfileFeatureTemplate:getCellularProfileFeatureTemplate', __args__, opts=opts, typ=GetCellularProfileFeatureTemplateResult).value

    return AwaitableGetCellularProfileFeatureTemplateResult(
        access_point_name=pulumi.get(__ret__, 'access_point_name'),
        access_point_name_variable=pulumi.get(__ret__, 'access_point_name_variable'),
        authentication_type=pulumi.get(__ret__, 'authentication_type'),
        authentication_type_variable=pulumi.get(__ret__, 'authentication_type_variable'),
        description=pulumi.get(__ret__, 'description'),
        device_types=pulumi.get(__ret__, 'device_types'),
        id=pulumi.get(__ret__, 'id'),
        if_name=pulumi.get(__ret__, 'if_name'),
        if_name_variable=pulumi.get(__ret__, 'if_name_variable'),
        ip_address=pulumi.get(__ret__, 'ip_address'),
        ip_address_variable=pulumi.get(__ret__, 'ip_address_variable'),
        name=pulumi.get(__ret__, 'name'),
        packet_data_network_type=pulumi.get(__ret__, 'packet_data_network_type'),
        packet_data_network_type_variable=pulumi.get(__ret__, 'packet_data_network_type_variable'),
        primary_dns_address=pulumi.get(__ret__, 'primary_dns_address'),
        primary_dns_address_variable=pulumi.get(__ret__, 'primary_dns_address_variable'),
        profile_id=pulumi.get(__ret__, 'profile_id'),
        profile_id_variable=pulumi.get(__ret__, 'profile_id_variable'),
        profile_name=pulumi.get(__ret__, 'profile_name'),
        profile_name_variable=pulumi.get(__ret__, 'profile_name_variable'),
        profile_password=pulumi.get(__ret__, 'profile_password'),
        profile_password_variable=pulumi.get(__ret__, 'profile_password_variable'),
        profile_username=pulumi.get(__ret__, 'profile_username'),
        profile_username_variable=pulumi.get(__ret__, 'profile_username_variable'),
        secondary_dns_address=pulumi.get(__ret__, 'secondary_dns_address'),
        secondary_dns_address_variable=pulumi.get(__ret__, 'secondary_dns_address_variable'),
        template_type=pulumi.get(__ret__, 'template_type'),
        version=pulumi.get(__ret__, 'version'))
def get_cellular_profile_feature_template_output(id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                 name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCellularProfileFeatureTemplateResult]:
    """
    This data source can read the Cellular Profile feature template.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_cellular_profile_feature_template(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the feature template
    :param _builtins.str name: The name of the feature template
    """
    __args__ = dict()
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sdwan:index/getCellularProfileFeatureTemplate:getCellularProfileFeatureTemplate', __args__, opts=opts, typ=GetCellularProfileFeatureTemplateResult)
    return __ret__.apply(lambda __response__: GetCellularProfileFeatureTemplateResult(
        access_point_name=pulumi.get(__response__, 'access_point_name'),
        access_point_name_variable=pulumi.get(__response__, 'access_point_name_variable'),
        authentication_type=pulumi.get(__response__, 'authentication_type'),
        authentication_type_variable=pulumi.get(__response__, 'authentication_type_variable'),
        description=pulumi.get(__response__, 'description'),
        device_types=pulumi.get(__response__, 'device_types'),
        id=pulumi.get(__response__, 'id'),
        if_name=pulumi.get(__response__, 'if_name'),
        if_name_variable=pulumi.get(__response__, 'if_name_variable'),
        ip_address=pulumi.get(__response__, 'ip_address'),
        ip_address_variable=pulumi.get(__response__, 'ip_address_variable'),
        name=pulumi.get(__response__, 'name'),
        packet_data_network_type=pulumi.get(__response__, 'packet_data_network_type'),
        packet_data_network_type_variable=pulumi.get(__response__, 'packet_data_network_type_variable'),
        primary_dns_address=pulumi.get(__response__, 'primary_dns_address'),
        primary_dns_address_variable=pulumi.get(__response__, 'primary_dns_address_variable'),
        profile_id=pulumi.get(__response__, 'profile_id'),
        profile_id_variable=pulumi.get(__response__, 'profile_id_variable'),
        profile_name=pulumi.get(__response__, 'profile_name'),
        profile_name_variable=pulumi.get(__response__, 'profile_name_variable'),
        profile_password=pulumi.get(__response__, 'profile_password'),
        profile_password_variable=pulumi.get(__response__, 'profile_password_variable'),
        profile_username=pulumi.get(__response__, 'profile_username'),
        profile_username_variable=pulumi.get(__response__, 'profile_username_variable'),
        secondary_dns_address=pulumi.get(__response__, 'secondary_dns_address'),
        secondary_dns_address_variable=pulumi.get(__response__, 'secondary_dns_address_variable'),
        template_type=pulumi.get(__response__, 'template_type'),
        version=pulumi.get(__response__, 'version')))
