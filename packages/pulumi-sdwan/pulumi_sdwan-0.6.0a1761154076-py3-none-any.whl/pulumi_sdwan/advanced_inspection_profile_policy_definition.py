# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['AdvancedInspectionProfilePolicyDefinitionArgs', 'AdvancedInspectionProfilePolicyDefinition']

@pulumi.input_type
class AdvancedInspectionProfilePolicyDefinitionArgs:
    def __init__(__self__, *,
                 description: pulumi.Input[_builtins.str],
                 advanced_malware_protection_id: Optional[pulumi.Input[_builtins.str]] = None,
                 advanced_malware_protection_version: Optional[pulumi.Input[_builtins.int]] = None,
                 intrusion_prevention_id: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_version: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_action: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_version: Optional[pulumi.Input[_builtins.int]] = None,
                 url_filtering_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url_filtering_version: Optional[pulumi.Input[_builtins.int]] = None):
        """
        The set of arguments for constructing a AdvancedInspectionProfilePolicyDefinition resource.
        :param pulumi.Input[_builtins.str] description: The description of the policy definition.
        :param pulumi.Input[_builtins.str] advanced_malware_protection_id: Advanced malware protection ID
        :param pulumi.Input[_builtins.int] advanced_malware_protection_version: Advanced malware protection version
        :param pulumi.Input[_builtins.str] intrusion_prevention_id: Intrusion prevention ID (unified mode)
        :param pulumi.Input[_builtins.int] intrusion_prevention_version: Intrusion prevention version
        :param pulumi.Input[_builtins.str] name: The name of the policy definition.
        :param pulumi.Input[_builtins.str] tls_action: TLS Action
                 - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        :param pulumi.Input[_builtins.str] tls_ssl_decryption_id: TLS/SSL decryption ID
        :param pulumi.Input[_builtins.int] tls_ssl_decryption_version: TLS/SSL decryption version
        :param pulumi.Input[_builtins.str] url_filtering_id: URL filtering ID (unified mode)
        :param pulumi.Input[_builtins.int] url_filtering_version: URL filtering version
        """
        pulumi.set(__self__, "description", description)
        if advanced_malware_protection_id is not None:
            pulumi.set(__self__, "advanced_malware_protection_id", advanced_malware_protection_id)
        if advanced_malware_protection_version is not None:
            pulumi.set(__self__, "advanced_malware_protection_version", advanced_malware_protection_version)
        if intrusion_prevention_id is not None:
            pulumi.set(__self__, "intrusion_prevention_id", intrusion_prevention_id)
        if intrusion_prevention_version is not None:
            pulumi.set(__self__, "intrusion_prevention_version", intrusion_prevention_version)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tls_action is not None:
            pulumi.set(__self__, "tls_action", tls_action)
        if tls_ssl_decryption_id is not None:
            pulumi.set(__self__, "tls_ssl_decryption_id", tls_ssl_decryption_id)
        if tls_ssl_decryption_version is not None:
            pulumi.set(__self__, "tls_ssl_decryption_version", tls_ssl_decryption_version)
        if url_filtering_id is not None:
            pulumi.set(__self__, "url_filtering_id", url_filtering_id)
        if url_filtering_version is not None:
            pulumi.set(__self__, "url_filtering_version", url_filtering_version)

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Input[_builtins.str]:
        """
        The description of the policy definition.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionId")
    def advanced_malware_protection_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Advanced malware protection ID
        """
        return pulumi.get(self, "advanced_malware_protection_id")

    @advanced_malware_protection_id.setter
    def advanced_malware_protection_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "advanced_malware_protection_id", value)

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionVersion")
    def advanced_malware_protection_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Advanced malware protection version
        """
        return pulumi.get(self, "advanced_malware_protection_version")

    @advanced_malware_protection_version.setter
    def advanced_malware_protection_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "advanced_malware_protection_version", value)

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionId")
    def intrusion_prevention_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Intrusion prevention ID (unified mode)
        """
        return pulumi.get(self, "intrusion_prevention_id")

    @intrusion_prevention_id.setter
    def intrusion_prevention_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "intrusion_prevention_id", value)

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionVersion")
    def intrusion_prevention_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Intrusion prevention version
        """
        return pulumi.get(self, "intrusion_prevention_version")

    @intrusion_prevention_version.setter
    def intrusion_prevention_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "intrusion_prevention_version", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the policy definition.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="tlsAction")
    def tls_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        TLS Action
          - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        """
        return pulumi.get(self, "tls_action")

    @tls_action.setter
    def tls_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tls_action", value)

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionId")
    def tls_ssl_decryption_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        TLS/SSL decryption ID
        """
        return pulumi.get(self, "tls_ssl_decryption_id")

    @tls_ssl_decryption_id.setter
    def tls_ssl_decryption_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tls_ssl_decryption_id", value)

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionVersion")
    def tls_ssl_decryption_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        TLS/SSL decryption version
        """
        return pulumi.get(self, "tls_ssl_decryption_version")

    @tls_ssl_decryption_version.setter
    def tls_ssl_decryption_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tls_ssl_decryption_version", value)

    @_builtins.property
    @pulumi.getter(name="urlFilteringId")
    def url_filtering_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        URL filtering ID (unified mode)
        """
        return pulumi.get(self, "url_filtering_id")

    @url_filtering_id.setter
    def url_filtering_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url_filtering_id", value)

    @_builtins.property
    @pulumi.getter(name="urlFilteringVersion")
    def url_filtering_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        URL filtering version
        """
        return pulumi.get(self, "url_filtering_version")

    @url_filtering_version.setter
    def url_filtering_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "url_filtering_version", value)


@pulumi.input_type
class _AdvancedInspectionProfilePolicyDefinitionState:
    def __init__(__self__, *,
                 advanced_malware_protection_id: Optional[pulumi.Input[_builtins.str]] = None,
                 advanced_malware_protection_version: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_id: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_version: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_action: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_version: Optional[pulumi.Input[_builtins.int]] = None,
                 url_filtering_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url_filtering_version: Optional[pulumi.Input[_builtins.int]] = None,
                 version: Optional[pulumi.Input[_builtins.int]] = None):
        """
        Input properties used for looking up and filtering AdvancedInspectionProfilePolicyDefinition resources.
        :param pulumi.Input[_builtins.str] advanced_malware_protection_id: Advanced malware protection ID
        :param pulumi.Input[_builtins.int] advanced_malware_protection_version: Advanced malware protection version
        :param pulumi.Input[_builtins.str] description: The description of the policy definition.
        :param pulumi.Input[_builtins.str] intrusion_prevention_id: Intrusion prevention ID (unified mode)
        :param pulumi.Input[_builtins.int] intrusion_prevention_version: Intrusion prevention version
        :param pulumi.Input[_builtins.str] name: The name of the policy definition.
        :param pulumi.Input[_builtins.str] tls_action: TLS Action
                 - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        :param pulumi.Input[_builtins.str] tls_ssl_decryption_id: TLS/SSL decryption ID
        :param pulumi.Input[_builtins.int] tls_ssl_decryption_version: TLS/SSL decryption version
        :param pulumi.Input[_builtins.str] url_filtering_id: URL filtering ID (unified mode)
        :param pulumi.Input[_builtins.int] url_filtering_version: URL filtering version
        :param pulumi.Input[_builtins.int] version: The version of the object
        """
        if advanced_malware_protection_id is not None:
            pulumi.set(__self__, "advanced_malware_protection_id", advanced_malware_protection_id)
        if advanced_malware_protection_version is not None:
            pulumi.set(__self__, "advanced_malware_protection_version", advanced_malware_protection_version)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if intrusion_prevention_id is not None:
            pulumi.set(__self__, "intrusion_prevention_id", intrusion_prevention_id)
        if intrusion_prevention_version is not None:
            pulumi.set(__self__, "intrusion_prevention_version", intrusion_prevention_version)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tls_action is not None:
            pulumi.set(__self__, "tls_action", tls_action)
        if tls_ssl_decryption_id is not None:
            pulumi.set(__self__, "tls_ssl_decryption_id", tls_ssl_decryption_id)
        if tls_ssl_decryption_version is not None:
            pulumi.set(__self__, "tls_ssl_decryption_version", tls_ssl_decryption_version)
        if url_filtering_id is not None:
            pulumi.set(__self__, "url_filtering_id", url_filtering_id)
        if url_filtering_version is not None:
            pulumi.set(__self__, "url_filtering_version", url_filtering_version)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionId")
    def advanced_malware_protection_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Advanced malware protection ID
        """
        return pulumi.get(self, "advanced_malware_protection_id")

    @advanced_malware_protection_id.setter
    def advanced_malware_protection_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "advanced_malware_protection_id", value)

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionVersion")
    def advanced_malware_protection_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Advanced malware protection version
        """
        return pulumi.get(self, "advanced_malware_protection_version")

    @advanced_malware_protection_version.setter
    def advanced_malware_protection_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "advanced_malware_protection_version", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The description of the policy definition.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "description", value)

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionId")
    def intrusion_prevention_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        Intrusion prevention ID (unified mode)
        """
        return pulumi.get(self, "intrusion_prevention_id")

    @intrusion_prevention_id.setter
    def intrusion_prevention_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "intrusion_prevention_id", value)

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionVersion")
    def intrusion_prevention_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        Intrusion prevention version
        """
        return pulumi.get(self, "intrusion_prevention_version")

    @intrusion_prevention_version.setter
    def intrusion_prevention_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "intrusion_prevention_version", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The name of the policy definition.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter(name="tlsAction")
    def tls_action(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        TLS Action
          - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        """
        return pulumi.get(self, "tls_action")

    @tls_action.setter
    def tls_action(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tls_action", value)

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionId")
    def tls_ssl_decryption_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        TLS/SSL decryption ID
        """
        return pulumi.get(self, "tls_ssl_decryption_id")

    @tls_ssl_decryption_id.setter
    def tls_ssl_decryption_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "tls_ssl_decryption_id", value)

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionVersion")
    def tls_ssl_decryption_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        TLS/SSL decryption version
        """
        return pulumi.get(self, "tls_ssl_decryption_version")

    @tls_ssl_decryption_version.setter
    def tls_ssl_decryption_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "tls_ssl_decryption_version", value)

    @_builtins.property
    @pulumi.getter(name="urlFilteringId")
    def url_filtering_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        URL filtering ID (unified mode)
        """
        return pulumi.get(self, "url_filtering_id")

    @url_filtering_id.setter
    def url_filtering_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "url_filtering_id", value)

    @_builtins.property
    @pulumi.getter(name="urlFilteringVersion")
    def url_filtering_version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        URL filtering version
        """
        return pulumi.get(self, "url_filtering_version")

    @url_filtering_version.setter
    def url_filtering_version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "url_filtering_version", value)

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[_builtins.int]]:
        """
        The version of the object
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[_builtins.int]]):
        pulumi.set(self, "version", value)


@pulumi.type_token("sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition")
class AdvancedInspectionProfilePolicyDefinition(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 advanced_malware_protection_id: Optional[pulumi.Input[_builtins.str]] = None,
                 advanced_malware_protection_version: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_id: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_version: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_action: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_version: Optional[pulumi.Input[_builtins.int]] = None,
                 url_filtering_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url_filtering_version: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        """
        This resource can manage a Advanced Inspection Profile Policy Definition .

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.AdvancedInspectionProfilePolicyDefinition("example",
            name="Example",
            description="My description",
            tls_action="decrypt",
            url_filtering_id="914670a3-9726-4a51-847f-b3db70819dc2")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        ```sh
        $ pulumi import sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] advanced_malware_protection_id: Advanced malware protection ID
        :param pulumi.Input[_builtins.int] advanced_malware_protection_version: Advanced malware protection version
        :param pulumi.Input[_builtins.str] description: The description of the policy definition.
        :param pulumi.Input[_builtins.str] intrusion_prevention_id: Intrusion prevention ID (unified mode)
        :param pulumi.Input[_builtins.int] intrusion_prevention_version: Intrusion prevention version
        :param pulumi.Input[_builtins.str] name: The name of the policy definition.
        :param pulumi.Input[_builtins.str] tls_action: TLS Action
                 - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        :param pulumi.Input[_builtins.str] tls_ssl_decryption_id: TLS/SSL decryption ID
        :param pulumi.Input[_builtins.int] tls_ssl_decryption_version: TLS/SSL decryption version
        :param pulumi.Input[_builtins.str] url_filtering_id: URL filtering ID (unified mode)
        :param pulumi.Input[_builtins.int] url_filtering_version: URL filtering version
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AdvancedInspectionProfilePolicyDefinitionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        This resource can manage a Advanced Inspection Profile Policy Definition .

        ## Example Usage

        ```python
        import pulumi
        import pulumi_sdwan as sdwan

        example = sdwan.AdvancedInspectionProfilePolicyDefinition("example",
            name="Example",
            description="My description",
            tls_action="decrypt",
            url_filtering_id="914670a3-9726-4a51-847f-b3db70819dc2")
        ```

        ## Import

        The `pulumi import` command can be used, for example:

        ```sh
        $ pulumi import sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition example "f6b2c44c-693c-4763-b010-895aa3d236bd"
        ```

        :param str resource_name: The name of the resource.
        :param AdvancedInspectionProfilePolicyDefinitionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AdvancedInspectionProfilePolicyDefinitionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 advanced_malware_protection_id: Optional[pulumi.Input[_builtins.str]] = None,
                 advanced_malware_protection_version: Optional[pulumi.Input[_builtins.int]] = None,
                 description: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_id: Optional[pulumi.Input[_builtins.str]] = None,
                 intrusion_prevention_version: Optional[pulumi.Input[_builtins.int]] = None,
                 name: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_action: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_id: Optional[pulumi.Input[_builtins.str]] = None,
                 tls_ssl_decryption_version: Optional[pulumi.Input[_builtins.int]] = None,
                 url_filtering_id: Optional[pulumi.Input[_builtins.str]] = None,
                 url_filtering_version: Optional[pulumi.Input[_builtins.int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AdvancedInspectionProfilePolicyDefinitionArgs.__new__(AdvancedInspectionProfilePolicyDefinitionArgs)

            __props__.__dict__["advanced_malware_protection_id"] = advanced_malware_protection_id
            __props__.__dict__["advanced_malware_protection_version"] = advanced_malware_protection_version
            if description is None and not opts.urn:
                raise TypeError("Missing required property 'description'")
            __props__.__dict__["description"] = description
            __props__.__dict__["intrusion_prevention_id"] = intrusion_prevention_id
            __props__.__dict__["intrusion_prevention_version"] = intrusion_prevention_version
            __props__.__dict__["name"] = name
            __props__.__dict__["tls_action"] = tls_action
            __props__.__dict__["tls_ssl_decryption_id"] = tls_ssl_decryption_id
            __props__.__dict__["tls_ssl_decryption_version"] = tls_ssl_decryption_version
            __props__.__dict__["url_filtering_id"] = url_filtering_id
            __props__.__dict__["url_filtering_version"] = url_filtering_version
            __props__.__dict__["version"] = None
        super(AdvancedInspectionProfilePolicyDefinition, __self__).__init__(
            'sdwan:index/advancedInspectionProfilePolicyDefinition:AdvancedInspectionProfilePolicyDefinition',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            advanced_malware_protection_id: Optional[pulumi.Input[_builtins.str]] = None,
            advanced_malware_protection_version: Optional[pulumi.Input[_builtins.int]] = None,
            description: Optional[pulumi.Input[_builtins.str]] = None,
            intrusion_prevention_id: Optional[pulumi.Input[_builtins.str]] = None,
            intrusion_prevention_version: Optional[pulumi.Input[_builtins.int]] = None,
            name: Optional[pulumi.Input[_builtins.str]] = None,
            tls_action: Optional[pulumi.Input[_builtins.str]] = None,
            tls_ssl_decryption_id: Optional[pulumi.Input[_builtins.str]] = None,
            tls_ssl_decryption_version: Optional[pulumi.Input[_builtins.int]] = None,
            url_filtering_id: Optional[pulumi.Input[_builtins.str]] = None,
            url_filtering_version: Optional[pulumi.Input[_builtins.int]] = None,
            version: Optional[pulumi.Input[_builtins.int]] = None) -> 'AdvancedInspectionProfilePolicyDefinition':
        """
        Get an existing AdvancedInspectionProfilePolicyDefinition resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] advanced_malware_protection_id: Advanced malware protection ID
        :param pulumi.Input[_builtins.int] advanced_malware_protection_version: Advanced malware protection version
        :param pulumi.Input[_builtins.str] description: The description of the policy definition.
        :param pulumi.Input[_builtins.str] intrusion_prevention_id: Intrusion prevention ID (unified mode)
        :param pulumi.Input[_builtins.int] intrusion_prevention_version: Intrusion prevention version
        :param pulumi.Input[_builtins.str] name: The name of the policy definition.
        :param pulumi.Input[_builtins.str] tls_action: TLS Action
                 - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        :param pulumi.Input[_builtins.str] tls_ssl_decryption_id: TLS/SSL decryption ID
        :param pulumi.Input[_builtins.int] tls_ssl_decryption_version: TLS/SSL decryption version
        :param pulumi.Input[_builtins.str] url_filtering_id: URL filtering ID (unified mode)
        :param pulumi.Input[_builtins.int] url_filtering_version: URL filtering version
        :param pulumi.Input[_builtins.int] version: The version of the object
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AdvancedInspectionProfilePolicyDefinitionState.__new__(_AdvancedInspectionProfilePolicyDefinitionState)

        __props__.__dict__["advanced_malware_protection_id"] = advanced_malware_protection_id
        __props__.__dict__["advanced_malware_protection_version"] = advanced_malware_protection_version
        __props__.__dict__["description"] = description
        __props__.__dict__["intrusion_prevention_id"] = intrusion_prevention_id
        __props__.__dict__["intrusion_prevention_version"] = intrusion_prevention_version
        __props__.__dict__["name"] = name
        __props__.__dict__["tls_action"] = tls_action
        __props__.__dict__["tls_ssl_decryption_id"] = tls_ssl_decryption_id
        __props__.__dict__["tls_ssl_decryption_version"] = tls_ssl_decryption_version
        __props__.__dict__["url_filtering_id"] = url_filtering_id
        __props__.__dict__["url_filtering_version"] = url_filtering_version
        __props__.__dict__["version"] = version
        return AdvancedInspectionProfilePolicyDefinition(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionId")
    def advanced_malware_protection_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Advanced malware protection ID
        """
        return pulumi.get(self, "advanced_malware_protection_id")

    @_builtins.property
    @pulumi.getter(name="advancedMalwareProtectionVersion")
    def advanced_malware_protection_version(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Advanced malware protection version
        """
        return pulumi.get(self, "advanced_malware_protection_version")

    @_builtins.property
    @pulumi.getter
    def description(self) -> pulumi.Output[_builtins.str]:
        """
        The description of the policy definition.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionId")
    def intrusion_prevention_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        Intrusion prevention ID (unified mode)
        """
        return pulumi.get(self, "intrusion_prevention_id")

    @_builtins.property
    @pulumi.getter(name="intrusionPreventionVersion")
    def intrusion_prevention_version(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        Intrusion prevention version
        """
        return pulumi.get(self, "intrusion_prevention_version")

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Output[_builtins.str]:
        """
        The name of the policy definition.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="tlsAction")
    def tls_action(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        TLS Action
          - Choices: `decrypt`, `skipDecrypt`, `doNotDecrypt`
        """
        return pulumi.get(self, "tls_action")

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionId")
    def tls_ssl_decryption_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        TLS/SSL decryption ID
        """
        return pulumi.get(self, "tls_ssl_decryption_id")

    @_builtins.property
    @pulumi.getter(name="tlsSslDecryptionVersion")
    def tls_ssl_decryption_version(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        TLS/SSL decryption version
        """
        return pulumi.get(self, "tls_ssl_decryption_version")

    @_builtins.property
    @pulumi.getter(name="urlFilteringId")
    def url_filtering_id(self) -> pulumi.Output[Optional[_builtins.str]]:
        """
        URL filtering ID (unified mode)
        """
        return pulumi.get(self, "url_filtering_id")

    @_builtins.property
    @pulumi.getter(name="urlFilteringVersion")
    def url_filtering_version(self) -> pulumi.Output[Optional[_builtins.int]]:
        """
        URL filtering version
        """
        return pulumi.get(self, "url_filtering_version")

    @_builtins.property
    @pulumi.getter
    def version(self) -> pulumi.Output[_builtins.int]:
        """
        The version of the object
        """
        return pulumi.get(self, "version")

