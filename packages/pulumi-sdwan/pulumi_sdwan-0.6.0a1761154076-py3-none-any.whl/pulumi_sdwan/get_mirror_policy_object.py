# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetMirrorPolicyObjectResult',
    'AwaitableGetMirrorPolicyObjectResult',
    'get_mirror_policy_object',
    'get_mirror_policy_object_output',
]

@pulumi.output_type
class GetMirrorPolicyObjectResult:
    """
    A collection of values returned by getMirrorPolicyObject.
    """
    def __init__(__self__, id=None, name=None, remote_destination_ip=None, source_ip=None, version=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if remote_destination_ip and not isinstance(remote_destination_ip, str):
            raise TypeError("Expected argument 'remote_destination_ip' to be a str")
        pulumi.set(__self__, "remote_destination_ip", remote_destination_ip)
        if source_ip and not isinstance(source_ip, str):
            raise TypeError("Expected argument 'source_ip' to be a str")
        pulumi.set(__self__, "source_ip", source_ip)
        if version and not isinstance(version, int):
            raise TypeError("Expected argument 'version' to be a int")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The id of the object
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the policy object
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="remoteDestinationIp")
    def remote_destination_ip(self) -> _builtins.str:
        """
        Remote destination IP
        """
        return pulumi.get(self, "remote_destination_ip")

    @_builtins.property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> _builtins.str:
        """
        Source IP
        """
        return pulumi.get(self, "source_ip")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.int:
        """
        The version of the object
        """
        return pulumi.get(self, "version")


class AwaitableGetMirrorPolicyObjectResult(GetMirrorPolicyObjectResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMirrorPolicyObjectResult(
            id=self.id,
            name=self.name,
            remote_destination_ip=self.remote_destination_ip,
            source_ip=self.source_ip,
            version=self.version)


def get_mirror_policy_object(id: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMirrorPolicyObjectResult:
    """
    This data source can read the Mirror Policy Object .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_mirror_policy_object(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sdwan:index/getMirrorPolicyObject:getMirrorPolicyObject', __args__, opts=opts, typ=GetMirrorPolicyObjectResult).value

    return AwaitableGetMirrorPolicyObjectResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        remote_destination_ip=pulumi.get(__ret__, 'remote_destination_ip'),
        source_ip=pulumi.get(__ret__, 'source_ip'),
        version=pulumi.get(__ret__, 'version'))
def get_mirror_policy_object_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetMirrorPolicyObjectResult]:
    """
    This data source can read the Mirror Policy Object .

    ## Example Usage

    ```python
    import pulumi
    import pulumi_sdwan as sdwan

    example = sdwan.get_mirror_policy_object(id="f6b2c44c-693c-4763-b010-895aa3d236bd")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('sdwan:index/getMirrorPolicyObject:getMirrorPolicyObject', __args__, opts=opts, typ=GetMirrorPolicyObjectResult)
    return __ret__.apply(lambda __response__: GetMirrorPolicyObjectResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        remote_destination_ip=pulumi.get(__response__, 'remote_destination_ip'),
        source_ip=pulumi.get(__response__, 'source_ip'),
        version=pulumi.get(__response__, 'version')))
