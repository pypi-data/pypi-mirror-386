[project]
name = "fastgrpcio"
version = "0.1.1"
authors = [{ name = "Sergey Brusnov", email = "sergey.brusnov1900@gmail.com" }]
description = "Rapid fast development of gRPC services with Pydantic models"
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fast-depends>=2.4.12",
    "grpcio>=1.75.1",
    "grpcio-reflection>=1.75.1",
    "grpcio-status>=1.75.1",
    "grpcio-tools>=1.75.1",
    "pydantic>=2.12.0",
]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "ruff>=0.14.1",
]

otel = [
    "opentelemetry-api>=1.38.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.38.0",
    "opentelemetry-instrumentation-grpc>=0.59b0",
    "opentelemetry-sdk>=1.38.0",
]

docs = [
    "mkdocs-i18n>=0.4.6",
    "mkdocs-material>=9.6.22",
]

[tool.ruff]
src = ["fastgrpcio", "examples"]
line-length = 120
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["E501"]

exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "migrations",
    "node_modules",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"


[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
ignore_missing_imports = true
pretty = true
show_error_codes = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true
