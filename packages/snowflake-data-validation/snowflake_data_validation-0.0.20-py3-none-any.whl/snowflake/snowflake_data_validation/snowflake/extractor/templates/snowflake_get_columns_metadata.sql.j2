SHOW PRIMARY KEYS IN TABLE {{ table_name }};

WITH

TABLE_COLUMN_CONSTRAINTS AS (
    SELECT
        "database_name" AS DATABASE_NAME,
        "schema_name" AS SCHEMA_NAME,
        "table_name" AS TABLE_NAME,
        "column_name" AS COLUMN_NAME,
        "constraint_name" AS CONSTRAINT_NAME
    FROM TABLE(RESULT_SCAN(LAST_QUERY_ID()))
),

TABLE_COLUMN_DATA AS (
    SELECT TABLE_CATALOG,
           TABLE_SCHEMA,
           TABLE_NAME,
           COLUMN_NAME,
           DATA_TYPE,
           IS_NULLABLE,
           ORDINAL_POSITION,
           CHARACTER_MAXIMUM_LENGTH,
           NUMERIC_PRECISION,
           DATETIME_PRECISION,
           NUMERIC_SCALE,
    FROM {{ database_name }}.INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_NAME = ' {{ table_name }}'
),


TABLE_COLUMN_PRIMARY_KEY AS (
    SELECT
        INFO_SCHEMA.TABLE_CATALOG AS DATABASE_NAME,
        INFO_SCHEMA.TABLE_SCHEMA AS SCHEMA_NAME,
        INFO_SCHEMA.TABLE_NAME,
        INFO_SCHEMA.COLUMN_NAME,
        CASE WHEN INFO_PK_TABLE.CONSTRAINT_NAME IS NOT NULL THEN TRUE ELSE FALSE END AS IS_PRIMARY_KEY

    FROM
        TABLE_COLUMN_DATA INFO_SCHEMA

    LEFT JOIN
        TABLE_COLUMN_CONSTRAINTS INFO_PK_TABLE

    ON
        INFO_SCHEMA.TABLE_CATALOG = INFO_PK_TABLE.DATABASE_NAME AND
        INFO_SCHEMA.TABLE_SCHEMA = INFO_PK_TABLE.SCHEMA_NAME AND
        INFO_SCHEMA.TABLE_NAME = INFO_PK_TABLE.TABLE_NAME AND
        INFO_SCHEMA.COLUMN_NAME = INFO_PK_TABLE.COLUMN_NAME
)

SELECT
    INFO_SCHEMA.TABLE_CATALOG AS DATABASE_NAME,
    INFO_SCHEMA.TABLE_SCHEMA AS SCHEMA_NAME,
    INFO_SCHEMA.TABLE_NAME AS TABLE_NAME,
    INFO_SCHEMA.COLUMN_NAME AS COLUMN_NAME,
    INFO_SCHEMA.IS_NULLABLE AS NULLABLE,
    UPPER(INFO_SCHEMA.DATA_TYPE) AS DATA_TYPE,
    INFO_PK.IS_PRIMARY_KEY AS IS_PRIMARY_KEY,
    INFO_SCHEMA.CHARACTER_MAXIMUM_LENGTH AS CHARACTER_LENGTH,
    CASE WHEN INFO_SCHEMA.NUMERIC_PRECISION IS NOT NULL THEN INFO_SCHEMA.NUMERIC_PRECISION ELSE INFO_SCHEMA.DATETIME_PRECISION END AS PRECISION,
    INFO_SCHEMA.NUMERIC_SCALE AS SCALE,
    0 AS CALCULATED_COLUMN_SIZE_IN_BYTES

FROM
    TABLE_COLUMN_DATA INFO_SCHEMA

LEFT JOIN
    TABLE_COLUMN_PRIMARY_KEY INFO_PK

ON
INFO_SCHEMA.TABLE_CATALOG = INFO_PK.DATABASE_NAME AND
INFO_SCHEMA.TABLE_SCHEMA = INFO_PK.SCHEMA_NAME AND
INFO_SCHEMA.TABLE_NAME = INFO_PK.TABLE_NAME AND
INFO_SCHEMA.COLUMN_NAME = INFO_PK.COLUMN_NAME
