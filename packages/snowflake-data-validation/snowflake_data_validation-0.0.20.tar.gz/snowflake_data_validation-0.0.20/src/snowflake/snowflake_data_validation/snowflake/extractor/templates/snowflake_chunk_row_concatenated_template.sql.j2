CREATE OR REPLACE TEMPORARY TABLE {{ database_name }}.{{ schema_name }}.ROW_CONCATENATED_{{ chunk_id }}_{{ table_id }}(
       {% for index_column in index_column_collection %}
            "{{ index_column.name }}_IDX" {{ index_column.data_type }},
       {% endfor %}
       ROW_CONCAT_VALUES VARCHAR
) AS (SELECT
       {% for index_column in index_column_collection %}
            "{{ index_column.name }}_IDX",
       {% endfor %}
       {% if column_collection|length > 1 %}
            CONCAT({{ column_names_separate_by_comma }})
       {% else %}
            {{ column_names_separate_by_comma }}
       {% endif %}
       FROM
            (SELECT
            {% for index_column in index_column_collection %}
                "{{ index_column.name }}" AS "{{ index_column.name }}_IDX",
            {% endfor %}
            {% for column in column_collection %}
                {% if column.nullable %}
                    coalesce({{ datatypes_normalization_renderer_templates[column.name] }}, '') AS "{{ column.name }}"{% if not loop.last %},{% endif %}
                {% else %}
                    {{ datatypes_normalization_renderer_templates[column.name] }} AS "{{ column.name }}"{% if not loop.last %},{% endif %}
                {% endif %}
            {% endfor %}
            FROM {{ fully_qualified_name }}
            {% if has_where_clause %} WHERE {{ where_clause }} {% endif %}
            ORDER BY {% for index_column in index_column_collection %} "{{ index_column.name }}_IDX" {% if not loop.last %},{% endif %} {% endfor %}
            OFFSET {{ offset }} ROWS
            FETCH NEXT {{ fetch }} ROWS ONLY
            )
     );
