BIGINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: BIGINT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: BIGINT
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: BIGINT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

BYTEINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: BYTEINT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: BYTEINT
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: BYTEINT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  stddev:
    metric_query: STDDEV_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance:
    metric_query: VAR_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT

DECIMAL:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DECIMAL
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DECIMAL
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: DECIMAL
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  stddev:
    metric_query: STDDEV_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance:
    metric_query: VAR_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT

FLOAT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: NUMBER
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: FLOAT
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTEGER:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: INTEGER
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: INTEGER
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  stddev:
    metric_query: STDDEV_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance:
    metric_query: VAR_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT

NUMBER:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: NUMBER
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: NUMBER
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: NUMBER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  stddev:
    metric_query: STDDEV_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance:
    metric_query: VAR_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT

SMALLINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: INTEGER
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: INTEGER
  avg:
    metric_query: AVG("{{ col_name }}")
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_zero:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = 0 THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  stddev:
    metric_query: STDDEV_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance:
    metric_query: VAR_SAMP("{{ col_name }}")
    metric_return_datatype: FLOAT

CHAR:
  min:
    metric_query: MIN(CHARACTER_LENGTH(TRIM("{{ col_name }}")))
    metric_return_datatype: INTEGER
  max:
    metric_query: MAX(CHARACTER_LENGTH(TRIM("{{ col_name }}")))
    metric_return_datatype: INTEGER
  avg:
    metric_query: AVG(CHARACTER_LENGTH(TRIM("{{ col_name }}")))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = '' THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

CLOB:
  min:
    metric_query: MIN(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: INTEGER
  max:
    metric_query: MAX(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: INTEGER
  avg:
    metric_query: AVG(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(CASE WHEN CHARACTER_LENGTH("{{ col_name }}") = 0 THEN 1 ELSE 0 END) 
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT CAST("{{ col_name }}" AS VARCHAR(64000))) 
    metric_return_datatype: INTEGER
  count_null:
    metric_query: (COUNT(*) - COUNT("{{ col_name }}"))
    metric_return_datatype: INTEGER

VARCHAR:
  min:
    metric_query: MIN(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: INTEGER
  max:
    metric_query: MAX(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: INTEGER
  avg:
    metric_query: AVG(CHARACTER_LENGTH("{{ col_name }}"))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(CASE WHEN "{{ col_name }}" = '' THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

DATE:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DATE
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DATE
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

TIME:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TIME
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TIME
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

TIME WITH TIME ZONE:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TIME WITH TIME ZONE
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TIME WITH TIME ZONE
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

TIMESTAMP:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TIMESTAMP
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TIMESTAMP
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

TIMESTAMP WITH TIME ZONE:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TIMESTAMP WITH TIME ZONE
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TIMESTAMP WITH TIME ZONE
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL DAY TO SECOND:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL HOUR TO SECOND:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL MINUTE TO SECOND:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL SECOND:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL YEAR TO MONTH:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL DAY TO HOUR:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL DAY TO MINUTE:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL DAY:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL HOUR TO MINUTE:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL HOUR:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL MINUTE:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL MONTH:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL YEAR:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

INTERVAL YEAR TO SECOND:
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

PERIOD(DATE):
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

PERIOD(TIME):
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

PERIOD(TIME WITH TIME ZONE):
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

PERIOD(TIMESTAMP):
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER

PERIOD(TIMESTAMP WITH TIME ZONE):
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INTEGER
  count_null:
    metric_query: SUM(CASE WHEN "{{ col_name }}" IS NULL THEN 1 ELSE 0 END)
    metric_return_datatype: INTEGER