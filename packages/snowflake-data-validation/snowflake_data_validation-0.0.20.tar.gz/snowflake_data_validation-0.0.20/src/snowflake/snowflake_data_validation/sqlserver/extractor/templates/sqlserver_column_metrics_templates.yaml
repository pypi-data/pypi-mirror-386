BIGINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: BIGINT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: BIGINT
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: BIGINT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

BIT:
  count_true:
    metric_query: SUM(IIF("{{ col_name }}" = 1, 1, 0))
    metric_return_datatype: INT
  count_false:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  count_null: 
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

CHAR:
  min:
    metric_query: MIN(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  max:
    metric_query: MAX(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(CAST(LEN("{{ col_name }}") AS FLOAT))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF("{{ col_name }}" = '', 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

DATE:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DATE
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DATE
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

DATETIME:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DATETIME
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DATETIME
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

DATETIME2:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DATETIME2
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DATETIME2
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

DATETIMEOFFSET:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DATETIMEOFFSET
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DATETIMEOFFSET
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

DECIMAL:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: DECIMAL
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: DECIMAL
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: DECIMAL
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: DECIMAL
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: DECIMAL
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: DECIMAL

FLOAT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: FLOAT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: FLOAT
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: FLOAT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

INT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: INT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: INT
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

MONEY:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: MONEY
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: MONEY
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: MONEY
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

NCHAR:
  min:
    metric_query: MIN(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  max:
    metric_query: MAX(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(CAST(LEN("{{ col_name }}") AS FLOAT))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF("{{ col_name }}" = '', 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

NTEXT:
  min:
    metric_query: MIN(LEN(CAST("{{ col_name }}" AS VARCHAR(MAX))))
    metric_return_datatype: INT
  max:
    metric_query: MAX(LEN(CAST("{{ col_name }}" AS VARCHAR(MAX))))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(LEN(CAST("{{ col_name }}" AS VARCHAR(MAX))))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF(LEN(CAST("{{ col_name }}" AS VARCHAR(MAX))) = 0, 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT CAST("{{ col_name }}" AS VARCHAR(MAX)))
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

NUMERIC:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: NUMERIC
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: NUMERIC
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: NUMERIC
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

NVARCHAR:
  min:
    metric_query: MIN(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  max:
    metric_query: MAX(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(CAST(LEN("{{ col_name }}") AS FLOAT))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF("{{ col_name }}" = '', 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

REAL:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: REAL
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: REAL
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: REAL
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

SMALLDATETIME:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: SMALLDATETIME
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: SMALLDATETIME
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

SMALLINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: SMALLINT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: SMALLINT
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: SMALLINT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

SMALLMONEY:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: SMALLMONEY
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: SMALLMONEY
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: SMALLMONEY
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

TEXT:
  min:
    metric_query: MIN(DATALENGTH("{{ col_name }}"))
    metric_return_datatype: INT
  max:
    metric_query: MAX(DATALENGTH("{{ col_name }}"))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(DATALENGTH("{{ col_name }}"))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF(DATALENGTH("{{ col_name }}") = 0, 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT CAST("{{ col_name }}" AS VARCHAR(MAX)))
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT

TIME:
  min: 
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TIME
  max: 
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TIME
  count_null:
     metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
     metric_return_datatype: INT

TINYINT:
  min:
    metric_query: MIN("{{ col_name }}")
    metric_return_datatype: TINYINT
  max:
    metric_query: MAX("{{ col_name }}")
    metric_return_datatype: TINYINT
  avg:
    metric_query: AVG(CAST("{{ col_name }}" AS FLOAT))
    metric_return_datatype: FLOAT
  sum:
    metric_query: SUM("{{ col_name }}")
    metric_return_datatype: TINYINT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT
  count_zero:
    metric_query: SUM(IIF("{{ col_name }}" = 0, 1, 0))
    metric_return_datatype: INT
  stddev: 
    metric_query: STDEV("{{ col_name }}")
    metric_return_datatype: FLOAT
  variance: 
    metric_query: VAR("{{ col_name }}")
    metric_return_datatype: FLOAT

VARCHAR:
  min:
    metric_query: MIN(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  max:
    metric_query: MAX(LEN("{{ col_name }}"))
    metric_return_datatype: INT
  avg:
    metric_query: AVG(CAST(LEN("{{ col_name }}") AS FLOAT))
    metric_return_datatype: FLOAT
  count_empty:
    metric_query: SUM(IIF("{{ col_name }}" = '', 1, 0))
    metric_return_datatype: INT
  count_distinct:
    metric_query: COUNT(DISTINCT "{{ col_name }}")
    metric_return_datatype: INT
  count_null:
    metric_query: SUM(IIF("{{ col_name }}" IS NULL, 1, 0))
    metric_return_datatype: INT


# FOLLOWING DATA TYPES ARE AN INTERNAL TYPE IN SQL SERVER, NOT A USER TYPE (USER CAN'T CREATE THEM)
# These data types are used internally by SQL Server and are not typically used in user-defined tables.
# It is typically used for row versioning and does not have a direct user representation.
#timestamp:
# It is a synonym for the rowversion data type, which is used to automatically generate unique binary numbers within a database.
#uniqueidentifier:
# It is a 16-byte GUID (Globally Unique Identifier) used to uniquely identify rows in a table.
#sysname:
