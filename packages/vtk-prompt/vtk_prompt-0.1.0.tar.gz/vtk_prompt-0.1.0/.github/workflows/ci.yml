name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  format:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run formatting check with tox
        run: tox -e format

  lint:
    name: Linting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run linting with tox
        run: tox -e lint

  type:
    name: Type Checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run type checking with tox
        run: tox -e type

  # test:
  #   name: Unit Tests
  #   runs-on: ubuntu-latest
  #   needs: [format, lint, type]
  #   strategy:
  #     matrix:
  #       python-version: ["3.10", "3.11", "3.12"]

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install tox
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install tox

  #     - name: Run tests with tox
  #       run: tox -e test

  smoke-test:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: [format, lint, type]
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Test vtk-prompt CLI
        run: |
          vtk-prompt --help
