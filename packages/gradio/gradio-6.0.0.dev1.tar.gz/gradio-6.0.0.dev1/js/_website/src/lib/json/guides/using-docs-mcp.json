{"guide": {"name": "using-docs-mcp", "category": "mcp", "pretty_category": "Mcp", "guide_index": 4, "absolute_index": 64, "pretty_name": "Using Docs Mcp", "content": "# Using the Gradio Docs MCP Server\n\n\n\nIn this guide, we will describe how to use the official Gradio Docs MCP Server.\n\n### Prerequisites\n\nYou will need an LLM application that supports tool calling using the MCP protocol, such as Claude Desktop, Cursor, or Cline (these are known as \"MCP Clients\").\n\n## Why an MCP Server?\n\nIf you're using LLMs in your workflow, adding this server will augment them with just the right context on gradio - which makes your experience a lot faster and smoother. \n\n<video src=\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/gradio-guides/mcp-docs.mp4\" style=\"width:100%\" controls preload> </video>\n\nThe server is running on Spaces and was launched entirely using Gradio, you can see all the code [here](https://huggingface.co/spaces/gradio/docs-mcp). For more on building an mcp server with gradio, see the [previous guide](./building-an-mcp-client-with-gradio). \n\n## Installing in the Clients \n\nFor clients that support SSE (e.g. Cursor, Windsurf, Cline), simply add the following configuration to your MCP config:\n\n```json\n{\n  \"mcpServers\": {\n    \"gradio\": {\n      \"url\": \"https://gradio-docs-mcp.hf.space/gradio_api/mcp/sse\"\n    }\n  }\n}\n```\n\nWe've included step-by-step instructions for Cursor below, but you can consult the docs for Windsurf [here](https://docs.windsurf.com/windsurf/mcp), and Cline [here](https://docs.cline.bot/mcp-servers/configuring-mcp-servers) which are similar to set up. \n\n\n\n### Cursor \n\n1. Make sure you're using the latest version of Cursor, and go to Cursor > Settings > Cursor Settings > MCP \n2. Click on '+ Add new global MCP server' \n3. Copy paste this json into the file that opens and then save it. \n```json\n{\n  \"mcpServers\": {\n    \"gradio\": {\n      \"url\": \"https://gradio-docs-mcp.hf.space/gradio_api/mcp/sse\"\n    }\n  }\n}\n```\n4. That's it! You should see the tools load and the status go green in the settings page. You may have to click the refresh icon or wait a few seconds. \n\n![](https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/gradio-guides/cursor-mcp.png)\n\n### Claude Desktop\n\n1. Since Claude Desktop only supports stdio, you will need to [install Node.js](https://nodejs.org/en/download/) to get this to work. \n2. Make sure you're using the latest version of Claude Desktop, and go to Claude > Settings > Developer > Edit Config \n3. Open the file with your favorite editor and copy paste this json, then save the file. \n```json\n{\n  \"mcpServers\": {\n    \"gradio\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"mcp-remote\",\n        \"https://gradio-docs-mcp.hf.space/gradio_api/mcp/sse\",\n        \"--transport\",\n        \"sse-only\"\n      ]\n    }\n  }\n}\n```\n4. Quit and re-open Claude Desktop, and you should be good to go. You should see it loaded in the Search and Tools icon or on the developer settings page. \n \n![](https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/gradio-guides/claude-desktop-mcp.gif)\n\n## Tools \n\nThere are currently only two tools in the server: `gradio_docs_mcp_load_gradio_docs` and `gradio_docs_mcp_search_gradio_docs`. \n\n1. `gradio_docs_mcp_load_gradio_docs`: This tool takes no arguments and will load an /llms.txt style summary of Gradio's latest, full documentation. Very useful context the LLM can parse before answering questions or generating code. \n\n2. `gradio_docs_mcp_search_gradio_docs`: This tool takes a query as an argument and will run embedding search on Gradio's docs, guides, and demos to return the most useful context for the LLM to parse.", "tags": ["MCP", "TOOL", "LLM", "SERVER", "DOCS"], "spaces": [], "url": "/guides/using-docs-mcp/", "contributor": null}}