# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .geometrytype import Geometrytype


class GeospatialDataType(UniversalBaseModel):
    coordinate_system: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="coordinateSystem")] = (
        pydantic.Field(default=None)
    )
    """
    Coordinate reference system
    """

    geometry_type: typing_extensions.Annotated[Geometrytype, FieldMetadata(alias="geometryType")] = pydantic.Field()
    """
    Type of geometry
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
