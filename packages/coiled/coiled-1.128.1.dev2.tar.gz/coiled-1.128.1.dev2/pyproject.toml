[project]
name = "coiled"
description = "Python client for coiled.io dask clusters"
readme = "README.md"
requires-python = ">=3.9"
license = "Elastic-2.0"
maintainers = [{ name = "Coiled", email = "info@coiled.io" }]
dependencies = [
  "aiohttp",
  "backoff",
  "boto3",
  "certifi",
  "click>=7.1",
  "dask>=2022.02.1",
  "distributed>=2022.02.1",
  "fabric>=3.0",
  "filelock",
  "gilknocker>=0.4.1",
  "httpx[http2]>=0.15",
  "invoke>=2.0",
  "ipywidgets",
  "jmespath",
  "jsondiff",
  "packaging",
  "paramiko>=2.4",
  "pip-requirements-parser",
  "pip>=20.2",
  "prometheus_client",
  "rich>=11.2.0",
  "toml",
  "typing_extensions",
  "wheel",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://coiled.io"

[project.scripts]
coiled = "coiled.cli.core:cli"

[project.optional-dependencies]
azure = ["azure-identity", "azure-mgmt-resource", "azure-mgmt-subscription"]
notebook = ["distributed>=2022.8.1", "jupyter-server-proxy", "jupyterlab"]

[build-system]
requires = ["hatch-vcs", "hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = ["coiled/cli/tests", "coiled/tests"]

[tool.hatch.build.targets.sdist]
include = ["/coiled"]

[tool.hatch.version]
raw-options = { root = "..", local_scheme = "no-local-version" }
source = "vcs"
fallback-version = "1.0.0"

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
exclude = ["*.ipynb"]
explicit-preview-rules = true
extend-safe-fixes = ["UP045"]
extend-select = ["UP045"]
fixable = ["ALL"]
ignore = ["E4"]
preview = true
select = [
  # pycodestyle
  "E",
  "W",
  # Pyflakes
  "F",
  # flake8-bugbear
  "B",
  # isort
  "I",
  # Use type expressions instead of Optional
  "UP045",
  # Ensures we have __future__ annotations imports where needed
  "FA102",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "N801"]

[tool.ruff.lint.isort]
known-first-party = ["coiled"]

[tool.ruff.format]
exclude = ["*.ipynb"]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
preview = true

