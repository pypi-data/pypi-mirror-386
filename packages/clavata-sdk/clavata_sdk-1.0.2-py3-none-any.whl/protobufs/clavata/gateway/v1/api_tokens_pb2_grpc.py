# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from clavata.gateway.v1 import api_tokens_pb2 as clavata_dot_gateway_dot_v1_dot_api__tokens__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in clavata/gateway/v1/api_tokens_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class APITokensServiceStub(object):
    """------------ API TOKENS ------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateAPIToken = channel.unary_unary(
                '/clavata.gateway.v1.APITokensService/GenerateAPIToken',
                request_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenRequest.SerializeToString,
                response_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenResponse.FromString,
                _registered_method=True)
        self.ListAllAPITokens = channel.unary_unary(
                '/clavata.gateway.v1.APITokensService/ListAllAPITokens',
                request_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensRequest.SerializeToString,
                response_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensResponse.FromString,
                _registered_method=True)
        self.UpdateAPITokenStatus = channel.unary_unary(
                '/clavata.gateway.v1.APITokensService/UpdateAPITokenStatus',
                request_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusRequest.SerializeToString,
                response_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusResponse.FromString,
                _registered_method=True)


class APITokensServiceServicer(object):
    """------------ API TOKENS ------------

    """

    def GenerateAPIToken(self, request, context):
        """Used by Clavata Admins to create a long-lived API token for a customer (akin to a service account token)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllAPITokens(self, request, context):
        """List ALL api tokens, across all customers. Indended for Clavata Admin use / Superadmin use only.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAPITokenStatus(self, request, context):
        """Update the status of an API token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_APITokensServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateAPIToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAPIToken,
                    request_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenRequest.FromString,
                    response_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenResponse.SerializeToString,
            ),
            'ListAllAPITokens': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllAPITokens,
                    request_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensRequest.FromString,
                    response_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensResponse.SerializeToString,
            ),
            'UpdateAPITokenStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAPITokenStatus,
                    request_deserializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusRequest.FromString,
                    response_serializer=clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'clavata.gateway.v1.APITokensService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('clavata.gateway.v1.APITokensService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class APITokensService(object):
    """------------ API TOKENS ------------

    """

    @staticmethod
    def GenerateAPIToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.gateway.v1.APITokensService/GenerateAPIToken',
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenRequest.SerializeToString,
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.GenerateAPITokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAllAPITokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.gateway.v1.APITokensService/ListAllAPITokens',
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensRequest.SerializeToString,
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.ListAllAPITokensResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAPITokenStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/clavata.gateway.v1.APITokensService/UpdateAPITokenStatus',
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusRequest.SerializeToString,
            clavata_dot_gateway_dot_v1_dot_api__tokens__pb2.UpdateAPITokenStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
