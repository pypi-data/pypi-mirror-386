   {
      "id":"3928ea28-e9e2-4382-aae0-09d5a24dc2am",
      "date":"2025-04-02T12:54:19.693921",
      "update_date":"2025-04-02T13:50:36.917335",
      "name":"test",
      "service_location_url":"https://codemie-preview.lab.epam.com/codemie-provider-stub-api/",
      "configuration":{
         "auth_type":"Bearer"
      },
      "provided_toolkits":[
         {
            "toolkit_id":"023953e9-b4b2-4264-aa24-7a20ab7cb201",
            "name":"TestAutomationCodeAnalysesToolkit",
            "description":"This ToolKit provides tools for indexing the source code of provided repository and set of methods to get insights of the code and code snippets.",
            "toolkit_config":{
               "type":"Code Analyses Datasource Configuration",
               "description":"Configuration for connecting to GitHub repositories to access code for indexing and analysis.",
               "parameters":{
                  "access_token":{
                     "description":"Github/Gitlab project access token with appropriate scopes for repository access",
                     "type":"Secret",
                     "required":true,
                     "enum":null
                  },
                  "datasource_id":{
                     "description":"Unique identifier for the datasource",
                     "type":"UUID",
                     "required":true,
                     "enum":null
                  },
                  "api_url":{
                     "description":"Git API URL (use your Git Enterprise API URL)",
                     "type":"URL",
                     "required":true,
                     "enum":null
                  },
                  "branch":{
                     "description":"Branch to index, defaults to master",
                     "type":"String",
                     "required":false,
                     "enum":null
                  }
               }
            },
            "provided_tools":[
               {
                  "name":"create_datasource",
                  "description":"Creates a new datasource by indexing a Git repository for code analysis. The indexing process extracts code structure, dependencies, and other metadata to enable subsequent queries.",
                  "args_schema":{
                     "exclude_glob":{
                        "type":"String",
                        "required":false,
                        "description":"Comma separated string of file paths to exclude from indexing",
                        "enum":null
                     },
                     "analyzer":{
                        "type":"List",
                        "required":false,
                        "description":"Type of code analyzer to use for the project. Supported analyzers Java/TS/JS/C#/C++. If not specified best matching analyzer will be chosen automatically.",
                        "enum":[
                           "Java",
                           "TS",
                           "JS",
                           "C#",
                           "C++",
                           "Other"
                        ]
                     },
                     "datasource_root":{
                        "type":"String",
                        "required":true,
                        "description":"Root directory of the project to be indexed",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"life_cycle_management",
                     "tool_action_type":"create"
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":false,
                  "async_invocation_supported":true
               },
               {
                  "name":"reindex_datasource",
                  "description":"Updates an existing datasource by re-indexing the associated Git repository to incorporate the latest changes and maintain synchronization with the current codebase.",
                  "args_schema":{

                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"life_cycle_management",
                     "tool_action_type":"modify"
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":false,
                  "async_invocation_supported":true
               },
               {
                  "name":"delete_datasource",
                  "description":"Removes an existing datasource and all its indexed data from the system, freeing up resources and cleaning up stale references.",
                  "args_schema":{

                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"life_cycle_management",
                     "tool_action_type":"remove"
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":false,
                  "async_invocation_supported":true
               },
               {
                  "name":"get_files_tree",
                  "description":"Retrieves a hierarchical representation of the file system structure of the indexed repository, showing directories and files in a tree format for easy navigation.",
                  "args_schema":{
                     "path":{
                        "type":"String",
                        "required":true,
                        "description":"Relative path within the repository to start the tree structure from",
                        "enum":null
                     },
                     "level":{
                        "type":"Number",
                        "required":false,
                        "description":"Maximum depth of the tree structure, defaults to full depth",
                        "enum":null
                     },
                     "limit":{
                        "type":"Number",
                        "required":false,
                        "description":"Maximum number of files to include in the tree structure, defaults to all files",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"String",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               },
               {
                  "name":"get_files_list",
                  "description":"Retrieves a list of files and directories within the specified path in the indexed repository, showing file names and types for easy reference.",
                  "args_schema":{
                     "path":{
                        "type":"String",
                        "required":true,
                        "description":"Relative path within the repository to list files from",
                        "enum":null
                     },
                     "limit":{
                        "type":"Number",
                        "required":false,
                        "description":"Maximum number of files to include in the list, defaults to all files",
                        "enum":null
                     },
                     "recursive":{
                        "type":"Boolean",
                        "required":false,
                        "description":"Flag to include files from subdirectories recursively, defaults to false",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               },
               {
                  "name":"get_code_members",
                  "description":"Extracts and returns structured information about code components such as classes, methods, functions, and variables within specified file in the indexed repository.",
                  "args_schema":{
                     "file_path":{
                        "type":"String",
                        "required":true,
                        "description":"Path of the file to extract code members from",
                        "enum":null
                     },
                     "start_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Starting line number to extract code members from, defaults to 1",
                        "enum":null
                     },
                     "end_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Ending line number to extract code members till, defaults to end of file",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":false,
                  "async_invocation_supported":true
               },
               {
                  "name":"get_trimmed_code",
                  "description":"Retrieves a simplified version of code from specified files with non-essential elements (like comments and some whitespace) removed to focus on the core functionality.",
                  "args_schema":{
                     "file_path":{
                        "type":"String",
                        "required":true,
                        "description":"Path of the file to extract trimmed code from",
                        "enum":null
                     },
                     "exclude_private":{
                        "type":"Boolean",
                        "required":false,
                        "description":"Flag to exclude private members from the trimmed code, defaults to false",
                        "enum":null
                     },
                     "show_line_numbers":{
                        "type":"Boolean",
                        "required":false,
                        "description":"Flag to include line numbers in the trimmed code, defaults to false",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"String",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               },
               {
                  "name":"get_code",
                  "description":"Fetches the complete, unmodified source code of specified files or code segments from the indexed repository, preserving all original formatting and comments.",
                  "args_schema":{
                     "file_path":{
                        "type":"String",
                        "required":true,
                        "description":"Path of the file to extract code from",
                        "enum":null
                     },
                     "start_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Starting line number to extract code from, defaults to 1",
                        "enum":null
                     },
                     "show_line_numbers":{
                        "type":"Boolean",
                        "required":false,
                        "description":"Flag to include line numbers in the code, defaults to false",
                        "enum":null
                     },
                     "end_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Ending line number to extract code till, defaults to end of file",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"String",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               },
               {
                  "name":"get_metadata",
                  "description":"Retrieves metadata information about specified files in the indexed repository, including file size, line count, and other relevant details.",
                  "args_schema":{
                     "file_path":{
                        "type":"String",
                        "required":true,
                        "description":"Path of the file to extract code from",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"String",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               },
               {
                  "name":"get_outgoing_dependencies",
                  "description":"Analyzes and returns information about external dependencies and imports used by specified files or code components, helping to understand code relationships and dependency chains.",
                  "args_schema":{
                     "file_path":{
                        "type":"String",
                        "required":true,
                        "description":"Path of the file to get outgoing dependencies from",
                        "enum":null
                     },
                     "start_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Starting line number to get outgoing dependencies from, defaults to 1",
                        "enum":null
                     },
                     "end_line":{
                        "type":"Number",
                        "required":false,
                        "description":"Ending line number to get outgoing dependencies till, defaults to end of file",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":"stateful",
                     "tool_purpose":"data_retrieval",
                     "tool_action_type":null
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":true,
                  "async_invocation_supported":false
               }
            ]
         },
         {
            "toolkit_id":"98212b72-8b83-4d70-852f-49f0df28a0d4",
            "name":"TestToolkit",
            "description":"Tst toolkit",
            "toolkit_config":{
               "type":"test toolkit",
               "description":"Configuration for connecting to GitHub repositories to access code for indexing and analysis.",
               "parameters":{

               }
            },
            "provided_tools":[
               {
                  "name":"test_tool",
                  "description":"Some test tools",
                  "args_schema":{
                     "service_url":{
                        "type":"String",
                        "required":true,
                        "description":"The url of the service",
                        "enum":null
                     },
                     "exclude_glob":{
                        "type":"String",
                        "required":false,
                        "description":"Comma separated string of file paths to exclude from indexing",
                        "enum":null
                     },
                     "service_method":{
                        "type":"String",
                        "required":true,
                        "description":"The token to access the service",
                        "enum":null
                     }
                  },
                  "tool_metadata":{
                     "tool_type":null,
                     "tool_purpose":null,
                     "tool_action_type":null
                  },
                  "tool_result_type":"Json",
                  "sync_invocation_supported":false,
                  "async_invocation_supported":true
               }
            ]
         }
      ]
   }