name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  wheel:
    name: Build Wheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: ubuntu-latest
            archs: riscv64
          - os: ubuntu-24.04-arm
          # - os: ubuntu-latest
          #   platform: android
          #   archs: arm64_v8a
          - os: macos-latest
          # - os: macos-latest
          #   platform: ios
          #   archs: arm64_iphoneos,arm64_iphonesimulator
          - os: windows-latest
          - os: windows-11-arm

    defaults:
      run:
        shell: nu {0}

    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: docker/setup-qemu-action@v3
        if: runner.os == 'Linux'
      - uses: astral-sh/setup-uv@v7

      # - name: Set CIBW_PLATFORM
      #   if: matrix.platform
      #   run: "'CIBW_PLATFORM=${{ matrix.platform }}' | save -a $env.GITHUB_ENV"

      - name: Set CIBW_ARCHS
        if: matrix.archs
        run: |
          'CIBW_ARCHS=${{ matrix.archs }}' | save -a $env.GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2

      - run: ls wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  test:
    uses: ./.github/workflows/test.yaml
    secrets: inherit

  sdist:
    runs-on: ubuntu-latest
    needs: [test]
    defaults:
      run:
        shell: nu {0}
    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - uses: astral-sh/setup-uv@v7

      - name: Build sdist
        run: uv build --sdist

      - run: ls dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: [wheel, sdist]
    permissions:
      id-token: write
      attestations: write
    defaults:
      run:
        shell: nu {0}
    environment: publish
    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v5

      - uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true

      - uses: actions/attest-build-provenance@v3
        with:
          subject-path: dist/*

      - run: ls dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
