# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .conversations_cancel_response import ConversationsCancelResponse
    from .conversations_extract_data_response import ConversationsExtractDataResponse
    from .conversations_get_analysis_response import ConversationsGetAnalysisResponse
    from .conversations_get_response import ConversationsGetResponse
    from .conversations_list_evaluations_response import ConversationsListEvaluationsResponse
    from .conversations_list_extractions_response import ConversationsListExtractionsResponse
    from .conversations_list_response import ConversationsListResponse
    from .conversations_list_response_conversation import ConversationsListResponseConversation
    from .conversations_list_response_conversations import ConversationsListResponseConversations
    from .conversations_list_response_conversations_pagination import ConversationsListResponseConversationsPagination
    from .conversations_outbound_call_response import ConversationsOutboundCallResponse
    from .conversations_sip_outbound_call_response import ConversationsSipOutboundCallResponse
_dynamic_imports: typing.Dict[str, str] = {
    "ConversationsCancelResponse": ".conversations_cancel_response",
    "ConversationsExtractDataResponse": ".conversations_extract_data_response",
    "ConversationsGetAnalysisResponse": ".conversations_get_analysis_response",
    "ConversationsGetResponse": ".conversations_get_response",
    "ConversationsListEvaluationsResponse": ".conversations_list_evaluations_response",
    "ConversationsListExtractionsResponse": ".conversations_list_extractions_response",
    "ConversationsListResponse": ".conversations_list_response",
    "ConversationsListResponseConversation": ".conversations_list_response_conversation",
    "ConversationsListResponseConversations": ".conversations_list_response_conversations",
    "ConversationsListResponseConversationsPagination": ".conversations_list_response_conversations_pagination",
    "ConversationsOutboundCallResponse": ".conversations_outbound_call_response",
    "ConversationsSipOutboundCallResponse": ".conversations_sip_outbound_call_response",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "ConversationsCancelResponse",
    "ConversationsExtractDataResponse",
    "ConversationsGetAnalysisResponse",
    "ConversationsGetResponse",
    "ConversationsListEvaluationsResponse",
    "ConversationsListExtractionsResponse",
    "ConversationsListResponse",
    "ConversationsListResponseConversation",
    "ConversationsListResponseConversations",
    "ConversationsListResponseConversationsPagination",
    "ConversationsOutboundCallResponse",
    "ConversationsSipOutboundCallResponse",
]
