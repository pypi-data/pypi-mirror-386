# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ToolCallInterruptedPayload(UniversalBaseModel):
    type: typing.Literal["tool_call_interrupted"] = "tool_call_interrupted"
    tool_call_id: str = pydantic.Field()
    """
    ID of the interrupted tool call
    """

    tool_name: str = pydantic.Field()
    """
    Name of the interrupted tool
    """

    error_message: str = pydantic.Field()
    """
    Description of why the tool call was interrupted
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
