# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .types import (
        ConversationsCancelResponse,
        ConversationsExtractDataResponse,
        ConversationsGetAnalysisResponse,
        ConversationsGetResponse,
        ConversationsListEvaluationsResponse,
        ConversationsListExtractionsResponse,
        ConversationsListResponse,
        ConversationsListResponseConversation,
        ConversationsListResponseConversations,
        ConversationsListResponseConversationsPagination,
        ConversationsOutboundCallResponse,
        ConversationsSipOutboundCallResponse,
    )
    from .requests import (
        ConversationsCancelResponseParams,
        ConversationsExtractDataResponseParams,
        ConversationsGetAnalysisResponseParams,
        ConversationsGetResponseParams,
        ConversationsListEvaluationsResponseParams,
        ConversationsListExtractionsResponseParams,
        ConversationsListResponseConversationParams,
        ConversationsListResponseConversationsPaginationParams,
        ConversationsListResponseConversationsParams,
        ConversationsListResponseParams,
        ConversationsOutboundCallResponseParams,
        ConversationsSipOutboundCallResponseParams,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "ConversationsCancelResponse": ".types",
    "ConversationsCancelResponseParams": ".requests",
    "ConversationsExtractDataResponse": ".types",
    "ConversationsExtractDataResponseParams": ".requests",
    "ConversationsGetAnalysisResponse": ".types",
    "ConversationsGetAnalysisResponseParams": ".requests",
    "ConversationsGetResponse": ".types",
    "ConversationsGetResponseParams": ".requests",
    "ConversationsListEvaluationsResponse": ".types",
    "ConversationsListEvaluationsResponseParams": ".requests",
    "ConversationsListExtractionsResponse": ".types",
    "ConversationsListExtractionsResponseParams": ".requests",
    "ConversationsListResponse": ".types",
    "ConversationsListResponseConversation": ".types",
    "ConversationsListResponseConversationParams": ".requests",
    "ConversationsListResponseConversations": ".types",
    "ConversationsListResponseConversationsPagination": ".types",
    "ConversationsListResponseConversationsPaginationParams": ".requests",
    "ConversationsListResponseConversationsParams": ".requests",
    "ConversationsListResponseParams": ".requests",
    "ConversationsOutboundCallResponse": ".types",
    "ConversationsOutboundCallResponseParams": ".requests",
    "ConversationsSipOutboundCallResponse": ".types",
    "ConversationsSipOutboundCallResponseParams": ".requests",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "ConversationsCancelResponse",
    "ConversationsCancelResponseParams",
    "ConversationsExtractDataResponse",
    "ConversationsExtractDataResponseParams",
    "ConversationsGetAnalysisResponse",
    "ConversationsGetAnalysisResponseParams",
    "ConversationsGetResponse",
    "ConversationsGetResponseParams",
    "ConversationsListEvaluationsResponse",
    "ConversationsListEvaluationsResponseParams",
    "ConversationsListExtractionsResponse",
    "ConversationsListExtractionsResponseParams",
    "ConversationsListResponse",
    "ConversationsListResponseConversation",
    "ConversationsListResponseConversationParams",
    "ConversationsListResponseConversations",
    "ConversationsListResponseConversationsPagination",
    "ConversationsListResponseConversationsPaginationParams",
    "ConversationsListResponseConversationsParams",
    "ConversationsListResponseParams",
    "ConversationsOutboundCallResponse",
    "ConversationsOutboundCallResponseParams",
    "ConversationsSipOutboundCallResponse",
    "ConversationsSipOutboundCallResponseParams",
]
