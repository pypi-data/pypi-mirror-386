# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import typing_extensions
from ..types.conversation_background_noise import ConversationBackgroundNoise
from ..types.conversation_ended_by import ConversationEndedBy
from .conversation_agent import ConversationAgentParams
from .conversation_item import ConversationItemParams
from .conversation_project import ConversationProjectParams


class ConversationParams(typing_extensions.TypedDict):
    id: str
    """
    The conversation ID.
    """

    agent: typing.Optional[ConversationAgentParams]
    """
    The agent associated with the conversation.
    """

    workspace: str
    """
    The organization/workspace name.
    """

    project: ConversationProjectParams
    """
    The project associated with the conversation.
    """

    external_id: typing.Optional[str]
    """
    External ID for conversation tracking.
    """

    model: str
    """
    The STS model used.
    """

    welcome_message: typing.Optional[str]
    """
    Welcome message played at start.
    """

    template_variables: typing.Dict[str, str]
    """
    Template variables used in the conversation.
    """

    input_format: str
    """
    Audio input format.
    """

    output_format: str
    """
    Audio output format.
    """

    background_noise_level: float
    """
    Background noise level used in the conversation.
    """

    background_noise: typing.Optional[ConversationBackgroundNoise]
    """
    The background noise type used in the conversation.
    """

    live_transcript: str
    """
    Live transcript of the conversation.
    """

    post_call_transcript: typing.Optional[str]
    """
    Post-call processed transcript.
    """

    duration_ms: float
    """
    Duration of the conversation in milliseconds.
    """

    audio_url: typing.Optional[str]
    """
    Presigned URL to the conversation audio file.
    """

    started_at: dt.datetime
    """
    When the conversation started.
    """

    ended_at: typing.Optional[dt.datetime]
    """
    When the conversation ended.
    """

    ended_by: typing.Optional[ConversationEndedBy]
    """
    Who or what ended the conversation.
    """

    boosted_keywords: typing.Optional[typing.Sequence[str]]
    """
    These words, or short phrases, are more accurately recognized by the model.
    """

    languages: typing.Optional[typing.Sequence[str]]
    """
    Array of ISO 639-1 language codes recognized by the model.
    """

    no_input_poke_sec: typing.Optional[int]
    """
    Number of seconds of silence before a poke message is sent. `null` means the poke message is disabled.
    """

    no_input_poke_text: typing.Optional[str]
    """
    The message to send after the specified silence. Relevant only if `no_input_poke_sec` is not `null`.
    """

    no_input_end_conversation_sec: typing.Optional[int]
    """
    Seconds of silence before the conversation is ended.
    """

    task_results: typing.Dict[str, typing.Optional[typing.Any]]
    """
    Results from conversation evaluations and extractions.
    """

    items: typing.Sequence[ConversationItemParams]
    """
    Array of conversation items (turns).
    """
