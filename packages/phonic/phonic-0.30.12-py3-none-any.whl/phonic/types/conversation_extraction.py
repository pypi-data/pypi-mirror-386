# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .conversation_extraction_schema import ConversationExtractionSchema


class ConversationExtraction(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    The extraction ID.
    """

    conversation_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The conversation ID.
    """

    schema_: typing_extensions.Annotated[ConversationExtractionSchema, FieldMetadata(alias="schema")]
    result: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    The extracted data.
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if extraction failed.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    When the extraction was created.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
