# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .conversation_evaluation_result_prompt import ConversationEvaluationResultPrompt
from .conversation_evaluation_result_result import ConversationEvaluationResultResult


class ConversationEvaluationResult(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    The evaluation ID.
    """

    result: ConversationEvaluationResultResult = pydantic.Field()
    """
    The evaluation result.
    """

    prompt: ConversationEvaluationResultPrompt = pydantic.Field()
    """
    The evaluation prompt information.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    When the evaluation was created.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
