"""Core utilities and exceptions for FFmpeg operations"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/core.ipynb.

# %% auto 0
__all__ = ['FFMPEG_AVAILABLE', 'AudioProcessingError', 'AudioConversionError', 'get_audio_codec']

# %% ../nbs/core.ipynb 3
from pathlib import Path
import shutil
import logging

# %% ../nbs/core.ipynb 5
#|eval: false
# Verify FFmpeg installation
FFMPEG_AVAILABLE = shutil.which("ffmpeg") is not None
if not FFMPEG_AVAILABLE:
    logging.warning("FFmpeg not available - install system package (e.g., apt install ffmpeg, brew install ffmpeg, or download from https://ffmpeg.org/)")

# %% ../nbs/core.ipynb 7
class AudioProcessingError(Exception):
    """Base exception for audio processing errors"""
    pass

class AudioConversionError(Exception):
    """Raised when audio format conversion fails"""
    pass

# %% ../nbs/core.ipynb 9
def get_audio_codec(audio_format: str # The desired audio format
                   ) -> str: # The ffmpeg codec name
    """
    Get the appropriate audio codec for the given format.
    """
    codec_map = {
        'mp3': 'libmp3lame',
        'wav': 'pcm_s16le',
        'flac': 'flac',
        'aac': 'aac',
        'ogg': 'libvorbis',
        'm4a': 'aac'
    }
    
    return codec_map.get(audio_format.lower(), 'copy')
