[tool.poetry]
name = "ctr-datadis"
version = "0.4.5"
description = "SDK completo de Python para la API oficial de Datadis - Acceso programático a datos de consumo eléctrico español"
authors = ["CristianTacoronteRivero <tacoronteriverocristian@gmail.com>"]
readme = "README.md"
packages = [{include = "datadis_python"}]
homepage = "https://github.com/TacoronteRiveroCristian/ctr-datadis"
repository = "https://github.com/TacoronteRiveroCristian/ctr-datadis"
documentation = "https://ctr-datadis.readthedocs.io"
keywords = ["datadis", "api", "sdk", "energia", "consumo", "electricidad", "españa", "cups", "distribuidora"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities"
]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.28.0"
pydantic = "^2.0.0"
python-dateutil = "^2.8.0"
typing-extensions = {version = "^4.0.0", python = "<3.10"}

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
isort = "^5.12.0"
mypy = "^1.5.0"
flake8 = "^6.0.0"
pre-commit = "^3.0.0"
responses = "^0.23.0"
pytest-mock = "^3.11.0"
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.3.0"
myst-parser = "^2.0.0"
jupyter = "^1.1.1"
load-dotenv = "^0.1.0"
freezegun = "^1.2.0"
types-requests = "<2.32"
twine = "^5.0.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.24.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501", "W503", "F401", "F541"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "docs/_build"
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["datadis_python"]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests"
]

[tool.coverage.run]
source = ["datadis_python"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
