name: Caching Tests

# This workflow runs caching tests only when manually triggered via workflow_dispatch

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for running caching tests'
        required: false
        default: 'Manual trigger'

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  gemini-caching-tests:
    name: Gemini Caching Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10  # 10 minute timeout to catch hanging tests quickly
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
    
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: uv sync --dev --all-extras
      - name: Validate Gemini API key
        run: |
          if [[ -z "$GEMINI_API_KEY" ]]; then
            echo "❌ GEMINI_API_KEY not configured"
            exit 1
          fi
          echo "✅ GEMINI_API_KEY is configured"
      - name: Run Gemini caching tests
        run: uv run pytest tests/caching/test_gemini_caching.py -v -s
      - name: Generate caching test report
        if: always()
        run: |
          echo "## Caching Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Directory**: tests/caching/" >> $GITHUB_STEP_SUMMARY
          echo "- **Focus**: Implicit caching functionality validation" >> $GITHUB_STEP_SUMMARY
          echo "- **Provider**: Gemini (gemini-2.5-pro, gemini-2.5-flash)" >> $GITHUB_STEP_SUMMARY
          echo "- **Key Tests**: Cache hit validation, efficiency analysis, model comparison" >> $GITHUB_STEP_SUMMARY

  caching-summary:
    name: Caching Test Summary
    runs-on: ubuntu-latest
    needs: [gemini-caching-tests]
    if: always()
    
    steps:
      - name: Check caching test results
        run: |
          gemini_result="${{ needs.gemini-caching-tests.result }}"
          
          echo "Gemini caching tests: $gemini_result"
          
          if [[ "$gemini_result" != "success" ]]; then
            echo "❌ Gemini caching tests failed"
            exit 1
          else
            echo "✅ Gemini caching tests passed!"
          fi 