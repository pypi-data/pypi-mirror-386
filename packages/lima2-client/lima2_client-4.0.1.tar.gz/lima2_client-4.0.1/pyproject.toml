[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_scheme = "guess-next-dev"

[project]
name = "lima2-client"
requires-python = ">= 3.10"
dynamic = ["version"]
authors = [{ name = "BCU (ESRF)" }]
description = "Python client library for Lima2 detector"
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "h5py",
    "jsonschema",
    "jsonschema-default",
    "numpy",
    "pytango",
    "pyyaml",
    "requests",
    "termcolor",
    "typing-extensions",
    "typer",
]

[project.urls]
Repository = "https://gitlab.esrf.fr/limagroup/lima2-client"
Documentation = "https://limagroup.gitlab-pages.esrf.fr/lima2-client/"

[project.scripts]
lima2-conductor = "lima2.conductor.webservice.cli:cli [conductor]"
lima2-shell = "lima2.client.shell:app [dev]"

[project.optional-dependencies]
conductor = ["jsonschema-rs", "orjson", "starlette", "uvicorn[standard]"]
shell = ["ipython"]
dev = [
    "black==22.3",
    "flake8",
    "httpx",
    "lima2-client[conductor]", # required to run unit tests
    "lima2-client[shell]",     # for convenience
    "mypy",
    "nosqltangodb",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "requests-mock",
    "types-jsonschema",
    "types-pyyaml",
    "types-requests",
]
docs = [
    "mkdocs",
    "markdown-include",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pygments",
]

[tool.mypy]
packages = ["lima2.client", "lima2.conductor", "lima2.common"]
plugins = "numpy.typing.mypy_plugin"
mypy_path = "src"
strict = true
allow_redefinition = true
explicit_package_bases = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "tango.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonschema_default.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "h5py.*"
ignore_missing_imports = true


[tool.pytest.ini_options]
addopts = "-v"
testpaths = "tests"
required_plugins = ["pytest-cov>=6.0.0", "pytest-asyncio>=0.25.3"]
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
# Omit entrypoints in coverage report
omit = [
    "src/lima2/client/shell.py",
    "src/lima2/conductor/webservice/cli.py",
    "src/lima2/conductor/webservice/main.py",
]

[tool.coverage.report]
exclude_also = ["raise NotImplementedError", "def __repr__"]
