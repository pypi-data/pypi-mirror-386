[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "campfires"
version = "0.4.1"
description = "A Python framework for orchestrating multimodal LLMs and tools"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Campfires Team"}
]
keywords = ["llm", "ai", "orchestration", "multimodal", "framework"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "aiosqlite>=0.19.0",
    "pyyaml>=6.0",
    "jinja2>=3.1.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
]
aws = [
    "boto3>=1.26.0",
]
redis = [
    "redis>=4.5.0",
]

[project.urls]
Homepage = "https://github.com/campfires/campfires"
Repository = "https://github.com/campfires/campfires"
Documentation = "https://campfires.readthedocs.io"

[tool.setuptools.packages.find]
where = ["."]
include = ["campfires*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]