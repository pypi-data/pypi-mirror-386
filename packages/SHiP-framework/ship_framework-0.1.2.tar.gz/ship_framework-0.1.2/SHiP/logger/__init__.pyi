from typing import ClassVar, overload

DEBUG: LogLevel
ERROR: LogLevel
INFO: LogLevel
WARNING: LogLevel

class LogLevel:
    __members__: ClassVar[dict] = ...  # read-only
    DEBUG: ClassVar[LogLevel] = ...
    ERROR: ClassVar[LogLevel] = ...
    INFO: ClassVar[LogLevel] = ...
    WARNING: ClassVar[LogLevel] = ...
    __entries: ClassVar[dict] = ...
    @overload
    def __init__(self, value: int) -> None: ...
    @overload
    def __init__(self, logLevelString: str) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    @property
    def name(self) -> str: ...
    @property
    def value(self) -> int: ...

@overload
def setLogLevel(logLevel: LogLevel) -> None: ...
@overload
def setLogLevel(logLevelString: str) -> None: ...
