"""
ğŸ“… WEEK DIVIDER
MaÃ§larÄ± haftalara bÃ¶ler
"""

import pandas as pd


class WeekDivider:
    """MaÃ§larÄ± haftalara bÃ¶len sÄ±nÄ±f"""
    
    @staticmethod
    def divide_matches_into_weeks(df: pd.DataFrame, verbose: bool = False) -> pd.DataFrame:
        """
        MaÃ§larÄ± haftalara bÃ¶l - Her takÄ±mÄ±n kaÃ§Ä±ncÄ± maÃ§Ä±nÄ± oynadÄ±ÄŸÄ±na gÃ¶re
        
        Args:
            df: MaÃ§ verileri DataFrame
            verbose: DetaylÄ± Ã§Ä±ktÄ± gÃ¶ster (varsayÄ±lan: False)
            
        Returns:
            DataFrame: Hafta numaralarÄ± eklenmiÅŸ maÃ§ verileri
        """
        if verbose:
            print(f"\nğŸ“… MaÃ§lar haftalara bÃ¶lÃ¼nÃ¼yor...")
        
        # DataFrame kopyasÄ± al
        df = df.copy()
        
        # TÃ¼m takÄ±mlarÄ± bul
        home_teams = set(df['home_team_id'].unique())
        away_teams = set(df['away_team_id'].unique())
        all_teams = home_teams | away_teams
        total_teams = len(all_teams)
        total_matches = len(df)
        
        if verbose:
            print(f"   ğŸ“Š Toplam {total_teams} takÄ±m bulundu")
            print(f"   âš½ Toplam {total_matches} maÃ§")
        
        # Tarihlere gÃ¶re maÃ§larÄ± sÄ±rala
        df['date_only'] = pd.to_datetime(
            df['match_date'], 
            format='%d/%m/%Y', 
            errors='coerce'
        ).dt.date
        df = df.sort_values('date_only').reset_index(drop=True)
        
        # Her takÄ±mÄ±n kaÃ§ maÃ§ oynadÄ±ÄŸÄ±nÄ± takip et
        team_match_count = {}
        
        # Her maÃ§ iÃ§in hafta numarasÄ±nÄ± belirle
        for idx, row in df.iterrows():
            home_id = row['home_team_id']
            away_id = row['away_team_id']
            
            # Bu takÄ±mlarÄ±n ÅŸu ana kadar kaÃ§ maÃ§ oynadÄ±ÄŸÄ±na bak
            home_count = team_match_count.get(home_id, 0)
            away_count = team_match_count.get(away_id, 0)
            
            # Ä°ki takÄ±mdan da fazla olanÄ± al, +1 yap = bu hafta
            week_number = max(home_count, away_count) + 1
            
            # Hafta numarasÄ±nÄ± ata
            df.loc[idx, 'hafta'] = week_number
            
            # TakÄ±mlarÄ±n maÃ§ sayÄ±sÄ±nÄ± artÄ±r
            team_match_count[home_id] = home_count + 1
            team_match_count[away_id] = away_count + 1
        
        df['hafta'] = df['hafta'].astype(int)
        
        # En fazla maÃ§ oynayan takÄ±mÄ± bul
        max_matches_played = max(team_match_count.values()) if team_match_count else 0
        
        if verbose:
            print(f"   âœ… {max_matches_played} haftaya bÃ¶lÃ¼ndÃ¼")
        
        # Temizlik
        df.drop('date_only', axis=1, inplace=True)
        
        return df
