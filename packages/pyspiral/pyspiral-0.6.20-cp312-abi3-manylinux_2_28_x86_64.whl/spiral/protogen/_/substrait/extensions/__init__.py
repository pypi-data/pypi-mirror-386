# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: substrait/extensions/extensions.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AdvancedExtension",
    "SimpleExtensionDeclaration",
    "SimpleExtensionDeclarationExtensionFunction",
    "SimpleExtensionDeclarationExtensionType",
    "SimpleExtensionDeclarationExtensionTypeVariation",
    "SimpleExtensionUri",
)

from dataclasses import dataclass

import betterproto2

from ...message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class AdvancedExtension(betterproto2.Message):
    """
    A generic object that can be used to embed additional extension information
    into the serialized substrait plan.
    """

    optimization: "list[__google__protobuf__.Any]" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, repeated=True)
    """
    An optimization is helpful information that don't influence semantics. May
    be ignored by a consumer.
    """

    enhancement: "__google__protobuf__.Any | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)
    """
    An enhancement alter semantics. Cannot be ignored by a consumer.
    """


default_message_pool.register_message("substrait.extensions", "AdvancedExtension", AdvancedExtension)


@dataclass(eq=False, repr=False)
class SimpleExtensionDeclaration(betterproto2.Message):
    """
    Describes a mapping between a specific extension entity and the uri where
    that extension can be found.

    Oneofs:
        - mapping_type:
    """

    extension_type: "SimpleExtensionDeclarationExtensionType | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True, group="mapping_type"
    )

    extension_type_variation: "SimpleExtensionDeclarationExtensionTypeVariation | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True, group="mapping_type"
    )

    extension_function: "SimpleExtensionDeclarationExtensionFunction | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True, group="mapping_type"
    )


default_message_pool.register_message("substrait.extensions", "SimpleExtensionDeclaration", SimpleExtensionDeclaration)


@dataclass(eq=False, repr=False)
class SimpleExtensionDeclarationExtensionFunction(betterproto2.Message):
    extension_uri_reference: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)
    """
    references the extension_uri_anchor defined for a specific extension URI.
    """

    function_anchor: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)
    """
    A surrogate key used in the context of a single plan to reference a
    specific function
    """

    name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    A function signature compound name
    """


default_message_pool.register_message(
    "substrait.extensions", "SimpleExtensionDeclaration.ExtensionFunction", SimpleExtensionDeclarationExtensionFunction
)


@dataclass(eq=False, repr=False)
class SimpleExtensionDeclarationExtensionType(betterproto2.Message):
    """
    Describes a Type
    """

    extension_uri_reference: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)
    """
    references the extension_uri_anchor defined for a specific extension URI.
    """

    type_anchor: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)
    """
    A surrogate key used in the context of a single plan to reference a
    specific extension type
    """

    name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    the name of the type in the defined extension YAML.
    """


default_message_pool.register_message(
    "substrait.extensions", "SimpleExtensionDeclaration.ExtensionType", SimpleExtensionDeclarationExtensionType
)


@dataclass(eq=False, repr=False)
class SimpleExtensionDeclarationExtensionTypeVariation(betterproto2.Message):
    extension_uri_reference: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)
    """
    references the extension_uri_anchor defined for a specific extension URI.
    """

    type_variation_anchor: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)
    """
    A surrogate key used in the context of a single plan to reference a
    specific type variation
    """

    name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    the name of the type in the defined extension YAML.
    """


default_message_pool.register_message(
    "substrait.extensions",
    "SimpleExtensionDeclaration.ExtensionTypeVariation",
    SimpleExtensionDeclarationExtensionTypeVariation,
)


@dataclass(eq=False, repr=False)
class SimpleExtensionUri(betterproto2.Message):
    extension_uri_anchor: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)
    """
    A surrogate key used in the context of a single plan used to reference the
    URI associated with an extension.
    """

    uri: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    The URI where this extension YAML can be retrieved. This is the "namespace"
    of this extension.
    """


default_message_pool.register_message("substrait.extensions", "SimpleExtensionURI", SimpleExtensionUri)


from ...google import protobuf as __google__protobuf__
