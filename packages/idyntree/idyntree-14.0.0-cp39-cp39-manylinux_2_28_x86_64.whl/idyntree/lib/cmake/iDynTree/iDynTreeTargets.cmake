# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "3.0.0")
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 3.0.0...3.31)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS iDynTree::idyntree-core iDynTree::idyntree-model iDynTree::idyntree-sensors iDynTree::idyntree-modelio-xml iDynTree::idyntree-modelio iDynTree::idyntree-estimation iDynTree::idyntree-modelio-urdf iDynTree::idyntree-solid-shapes iDynTree::idyntree-high-level iDynTree::idyntree-inverse-kinematics iDynTree::idyntree-optimalcontrol iDynTree::idyntree-yarp iDynTree::idyntree-icub iDynTree::idyntree-visualization)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target iDynTree::idyntree-core
add_library(iDynTree::idyntree-core STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-core PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_attribute_deprecated"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-model
add_library(iDynTree::idyntree-model STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-model PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-sensors
add_library(iDynTree::idyntree-sensors INTERFACE IMPORTED)
set_property(TARGET iDynTree::idyntree-sensors PROPERTY DEPRECATION "Linking the iDynTree::idyntree-sensors target is deprecated, please link iDynTree::idyntree-model that provides the symbols formerly containd in iDynTree::idyntree-sensors")

set_target_properties(iDynTree::idyntree-sensors PROPERTIES
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-model"
)

# Create imported target iDynTree::idyntree-modelio-xml
add_library(iDynTree::idyntree-modelio-xml STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-modelio-xml PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Eigen3::Eigen>;\$<LINK_ONLY:LibXml2::LibXml2>;\$<LINK_ONLY:iDynTree::idyntree-core>"
)

# Create imported target iDynTree::idyntree-modelio
add_library(iDynTree::idyntree-modelio STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-modelio PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;iDynTree::idyntree-modelio-xml;\$<LINK_ONLY:Eigen3::Eigen>;\$<LINK_ONLY:LibXml2::LibXml2>"
)

# Create imported target iDynTree::idyntree-estimation
add_library(iDynTree::idyntree-estimation STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-estimation PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;iDynTree::idyntree-modelio;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-modelio-urdf
add_library(iDynTree::idyntree-modelio-urdf INTERFACE IMPORTED)
set_property(TARGET iDynTree::idyntree-modelio-urdf PROPERTY DEPRECATION "Do not use deprecated target iDynTree::idyntree-modelio-urdf, use iDynTree::idyntree-modelio instead.")

set_target_properties(iDynTree::idyntree-modelio-urdf PROPERTIES
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-modelio"
)

# Create imported target iDynTree::idyntree-solid-shapes
add_library(iDynTree::idyntree-solid-shapes STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-solid-shapes PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-high-level
add_library(iDynTree::idyntree-high-level STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-high-level PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;iDynTree::idyntree-modelio;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-inverse-kinematics
add_library(iDynTree::idyntree-inverse-kinematics STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-inverse-kinematics PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-high-level;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-optimalcontrol
add_library(iDynTree::idyntree-optimalcontrol STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-optimalcontrol PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Create imported target iDynTree::idyntree-yarp
add_library(iDynTree::idyntree-yarp INTERFACE IMPORTED)

set_target_properties(iDynTree::idyntree-yarp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model"
)

# Create imported target iDynTree::idyntree-icub
add_library(iDynTree::idyntree-icub INTERFACE IMPORTED)

set_target_properties(iDynTree::idyntree-icub PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;iDynTree::idyntree-yarp;iDynTree::idyntree-estimation"
)

# Create imported target iDynTree::idyntree-visualization
add_library(iDynTree::idyntree-visualization STATIC IMPORTED)

set_target_properties(iDynTree::idyntree-visualization PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "iDynTree::idyntree-core;iDynTree::idyntree-model;\$<LINK_ONLY:Eigen3::Eigen>"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/iDynTreeTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
