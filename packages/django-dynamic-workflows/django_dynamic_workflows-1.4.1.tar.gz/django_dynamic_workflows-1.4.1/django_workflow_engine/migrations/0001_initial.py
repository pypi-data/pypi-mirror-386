# Generated by hand to match django_workflow_engine models

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.models import Q


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # WorkFlow
        migrations.CreateModel(
            name="WorkFlow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                # BaseCompanyModel fields
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("name_en", models.CharField(max_length=150, help_text="English name")),
                ("name_ar", models.CharField(max_length=150, help_text="Arabic name")),
                # WorkFlow fields
                (
                    "status",
                    models.CharField(
                        max_length=20,
                        help_text="Status of the workflow",
                        verbose_name="Status",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Workflow description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this workflow is active and can be used",
                        verbose_name="Is Active",
                    ),
                ),
                (
                    "cloned_from",
                    models.ForeignKey(
                        "django_workflow_engine.workflow",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cloned_workflow",
                        help_text="The original workflow this was cloned from",
                        verbose_name="Cloned From",
                    ),
                ),
                # BaseCompanyModel FKs
                (
                    "company",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_company",
                        help_text="Company/Organization user that owns this workflow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified",
                    ),
                ),
            ],
            options={"ordering": ("-id",)},
        ),
        # Pipeline
        migrations.CreateModel(
            name="Pipeline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                # BaseCompanyModel fields
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("name_en", models.CharField(max_length=150, help_text="English name")),
                ("name_ar", models.CharField(max_length=150, help_text="Arabic name")),
                # Generic dept fields
                (
                    "department_id",
                    models.PositiveIntegerField(
                        null=True, blank=True, help_text="ID of the department object"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of this pipeline in the workflow"
                    ),
                ),
                (
                    "cloned_from",
                    models.ForeignKey(
                        "django_workflow_engine.pipeline",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cloned_pipeline",
                        help_text="The original pipeline this was cloned from",
                        verbose_name="Cloned From",
                    ),
                ),
                # BaseCompanyModel FKs
                (
                    "company",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_company",
                        help_text="Company/Organization user that owns this workflow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified",
                    ),
                ),
                (
                    "department_content_type",
                    models.ForeignKey(
                        "contenttypes.ContentType",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        help_text="Content type of the department model",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        "django_workflow_engine.workflow",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pipelines",
                    ),
                ),
            ],
            options={"ordering": ("order", "id")},
        ),
        # Stage
        migrations.CreateModel(
            name="Stage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                # BaseCompanyModel fields
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("name_en", models.CharField(max_length=150, help_text="English name")),
                ("name_ar", models.CharField(max_length=150, help_text="Arabic name")),
                # Stage fields
                (
                    "form_info",
                    models.JSONField(
                        default=list,
                        null=True,
                        help_text="Form configuration for this stage",
                    ),
                ),
                (
                    "stage_info",
                    models.JSONField(
                        default=dict,
                        null=True,
                        help_text="Stage configuration including approvals",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of this stage in the pipeline"
                    ),
                ),
                (
                    "cloned_from",
                    models.ForeignKey(
                        "django_workflow_engine.stage",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cloned_stage",
                        help_text="The original stage this was cloned from",
                        verbose_name="Cloned From",
                    ),
                ),
                # BaseCompanyModel FKs
                (
                    "company",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_company",
                        help_text="Company/Organization user that owns this workflow",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_modified",
                    ),
                ),
                (
                    "pipeline",
                    models.ForeignKey(
                        "django_workflow_engine.pipeline",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stages",
                    ),
                ),
            ],
            options={"ordering": ("order", "id")},
        ),
        migrations.AlterUniqueTogether(
            name="stage",
            unique_together={("pipeline", "order")},
        ),
        # WorkflowAttachment
        migrations.CreateModel(
            name="WorkflowAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        max_length=255, help_text="The ID of the model instance"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        max_length=20,
                        default="not_started",
                        help_text="Current status of workflow execution",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict,
                        blank=True,
                        help_text="Additional metadata for workflow execution",
                    ),
                ),
                ("started_at", models.DateTimeField(null=True, blank=True)),
                ("completed_at", models.DateTimeField(null=True, blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        "contenttypes.ContentType",
                        on_delete=django.db.models.deletion.CASCADE,
                        help_text="The model type this workflow is attached to",
                    ),
                ),
                (
                    "current_pipeline",
                    models.ForeignKey(
                        "django_workflow_engine.pipeline",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workflow_attachments",
                        help_text="Current pipeline in the workflow progression",
                    ),
                ),
                (
                    "current_stage",
                    models.ForeignKey(
                        "django_workflow_engine.stage",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="workflow_attachments",
                        help_text="Current stage in the workflow progression",
                    ),
                ),
                (
                    "started_by",
                    models.ForeignKey(
                        settings.AUTH_USER_MODEL,
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="started_workflow_attachments",
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        "django_workflow_engine.workflow",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                    ),
                ),
            ],
            options={
                "unique_together": {("content_type", "object_id")},
            },
        ),
        migrations.AddIndex(
            model_name="workflowattachment",
            index=models.Index(
                fields=["content_type", "object_id"], name="wf_attach_ct_obj"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowattachment",
            index=models.Index(
                fields=["workflow", "status"], name="wf_attach_wf_status"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowattachment",
            index=models.Index(
                fields=["current_stage"], name="wf_attach_current_stage"
            ),
        ),
        # WorkflowConfiguration
        migrations.CreateModel(
            name="WorkflowConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether workflow functionality is enabled for this model",
                    ),
                ),
                (
                    "auto_start_workflow",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to automatically start workflow when object is created",
                    ),
                ),
                (
                    "pre_start_hook",
                    models.CharField(
                        max_length=255,
                        blank=True,
                        help_text="Python path to function called before workflow starts (e.g., 'myapp.hooks.pre_start')",
                    ),
                ),
                (
                    "post_complete_hook",
                    models.CharField(
                        max_length=255,
                        blank=True,
                        help_text="Python path to function called after workflow completes",
                    ),
                ),
                (
                    "status_field",
                    models.CharField(
                        max_length=50,
                        blank=True,
                        help_text="Field name on the model to update with workflow status",
                    ),
                ),
                (
                    "stage_field",
                    models.CharField(
                        max_length=50,
                        blank=True,
                        help_text="Field name on the model to store current stage",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "content_type",
                    models.OneToOneField(
                        "contenttypes.ContentType",
                        on_delete=django.db.models.deletion.CASCADE,
                        help_text="The model type that can use workflows",
                    ),
                ),
                (
                    "default_workflow",
                    models.ForeignKey(
                        "django_workflow_engine.workflow",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        help_text="Default workflow to use for this model",
                    ),
                ),
            ],
        ),
        # WorkflowAction
        migrations.CreateModel(
            name="WorkflowAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        auto_created=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        max_length=50,
                        help_text="The type of action/event that triggers this action",
                    ),
                ),
                (
                    "function_path",
                    models.CharField(
                        max_length=255,
                        help_text="Python path to the function to execute (e.g., 'myapp.actions.send_email')",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this action is active"
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(
                        default=dict,
                        blank=True,
                        help_text="Additional parameters to pass to the action function",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Execution order when multiple actions exist for the same event",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "workflow",
                    models.ForeignKey(
                        "django_workflow_engine.workflow",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        help_text="Workflow this action belongs to (workflow-level action)",
                    ),
                ),
                (
                    "pipeline",
                    models.ForeignKey(
                        "django_workflow_engine.pipeline",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        help_text="Pipeline this action belongs to (pipeline-level action)",
                    ),
                ),
                (
                    "stage",
                    models.ForeignKey(
                        "django_workflow_engine.stage",
                        null=True,
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        help_text="Stage this action belongs to (stage-level action)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Action",
                "verbose_name_plural": "Workflow Actions",
            },
        ),
        migrations.AddIndex(
            model_name="workflowaction",
            index=models.Index(fields=["action_type"], name="wf_action_type"),
        ),
        migrations.AddIndex(
            model_name="workflowaction",
            index=models.Index(
                fields=["workflow", "action_type"], name="wf_action_wf_type"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowaction",
            index=models.Index(
                fields=["pipeline", "action_type"], name="wf_action_pl_type"
            ),
        ),
        migrations.AddIndex(
            model_name="workflowaction",
            index=models.Index(
                fields=["stage", "action_type"], name="wf_action_st_type"
            ),
        ),
        migrations.AddConstraint(
            model_name="workflowaction",
            constraint=models.CheckConstraint(
                name="workflow_action_single_scope",
                check=(
                    Q(workflow__isnull=False, pipeline__isnull=True, stage__isnull=True)
                    | Q(
                        workflow__isnull=True,
                        pipeline__isnull=False,
                        stage__isnull=True,
                    )
                    | Q(
                        workflow__isnull=True,
                        pipeline__isnull=True,
                        stage__isnull=False,
                    )
                ),
            ),
        ),
    ]
