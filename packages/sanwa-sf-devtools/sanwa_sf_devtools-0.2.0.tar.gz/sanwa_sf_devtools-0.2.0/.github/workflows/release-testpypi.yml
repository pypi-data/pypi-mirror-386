name: Release to TestPyPI

on:
  push:
    tags:
      - 'v*.*.*.dev*'

permissions:
  contents: read

jobs:
  build-and-publish:
    if: ${{ github.ref_type == 'tag' && contains(github.ref_name, '.dev') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Verify tag points to dev branch
        shell: bash
        run: |
          git fetch --no-tags --prune origin +refs/heads/dev:refs/remotes/origin/dev
          if git merge-base --is-ancestor "$GITHUB_SHA" origin/dev; then
            echo "Tag commit is reachable from dev."
          else
            echo "This tag is not on dev branch history. Aborting TestPyPI publish." >&2
            exit 1
          fi

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine hatchling

      - name: Validate tag and project version (dev only)
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "Tag: $TAG"
          # タグは PEP 440/dev に準拠: v*.*.*.dev* （例: v0.2.0.dev1）
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+\.dev[0-9]+$ ]]; then
            echo "Tag must match pattern v*.*.*.dev*. Given: $TAG" >&2
            exit 1
          fi

          PYVER=$(python -c "import tomllib;print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          echo "project.version: $PYVER"

          # タグはバージョンに 'v' を付与したものと一致する必要がある
          EXPECTED_TAG="v${PYVER}"
          if [[ "$EXPECTED_TAG" != "$TAG" ]]; then
            echo "Tag ($TAG) does not match normalized project.version ($EXPECTED_TAG)" >&2
            exit 1
          fi

      - name: Build sdist and wheel
        run: |
          python -m build

      - name: Twine check
        run: |
          python -m twine check dist/*

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
