// Dev Container 設定ファイル
// 詳細: https://aka.ms/devcontainer.json
{
    // コンテナ名（VS Code 左下に表示）
    "name": "Sanwa Salesforce Development Container",

    // ──────────────────────────────
    // 1) どの Dockerfile でビルドするか
    // ──────────────────────────────
    "build": {
        "dockerfile": "Dockerfile" // 同フォルダ直下の Dockerfile
    },

    // ──────────────────────────────
    // 2) VS Code 側のカスタマイズ
    // ──────────────────────────────
    "customizations": {
        "vscode": {
            // 2‑1) 拡張機能（チーム共有）
            "extensions": [
                "dbaeumer.vscode-eslint", // ESLint : JavaScript/TypeScriptの静的解析
                "ms-azuretools.vscode-docker", // Docker : Dockerサポート
                "esbenp.prettier-vscode", // Prettier : コードフォーマッター
                "FinancialForce.lana", // Lana : Salesforce用Apex Linter
                "redhat.vscode-xml", // XML : XMLファイル編集支援
                "tamasfe.even-better-toml", // TOML : TOMLファイル編集支援
                "visualstudioexptteam.vscodeintellicode", // IntelliCode : AIコード補完支援
                "donjayamanne.githistory", // Git History : Git履歴閲覧
                "GitHub.copilot-chat", // Copilot Chat : AIチャット支援
                "GitHub.copilot", // Copilot : AIコード補完
                "openai.chatgpt", // OpenAI Codex: AIコード支援
                "mhutchie.git-graph", // Git Graph : Git可視化
                "eamodio.gitlens", // GitLens : Git拡張機能
                "yzhang.markdown-all-in-one", // Markdown All in One : Markdown支援
                "shd101wyy.markdown-preview-enhanced", // Markdown Preview Enhanced : Markdownプレビュー
                "davidanson.vscode-markdownlint", // MarkdownLint : Markdown構文チェック
                "johnpapa.vscode-peacock", // Peacock : ワークスペース色分け
                "oderwat.indent-rainbow", // Indent Rainbow : インデント可視化
                "salesforce.salesforcedx-vscode", // Salesforce Extension Pack : Salesforce開発支援
                "salesforce.salesforcedx-vscode-expanded", // Salesforce拡張 : Salesforce開発支援拡張
                "salesforce.salesforcedx-einstein-gpt", // Einstein GPT : Salesforce AI支援
                "VignaeshRamA.sfdx-package-xml-generator", // SFDX Package XML Generator : SalesforceパッケージXML生成
                "ms-python.python", // Python : Python開発支援
                "ms-python.black-formatter", // Black Formatter : Pythonコードフォーマッター
                "ms-python.isort", // isort : Pythonインポート自動整列
                "ms-python.mypy-type-checker" // mypy : Python型チェック
            ],

            // 2‑2) VS Code の設定
            "settings": {
                // デフォルトターミナルを zsh に
                "terminal.integrated.defaultProfile.linux": "zsh",

                // Python
                "python.defaultInterpreterPath": "/usr/bin/python3",
                "python.formatting.provider": "black",
                "python.formatting.blackArgs": ["--line-length=88"],
                "python.linting.enabled": true,
                "python.linting.mypyEnabled": true,
                "python.testing.pytestEnabled": true,
                "python.testing.unittestEnabled": false,
                "python.testing.pytestArgs": ["."],

                // 保存時フォーマット
                "[python]": {
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "explicit"
                    }
                }
            }
        }
    },

    // ──────────────────────────────
    // 3) マウント設定
    // ──────────────────────────────
    "workspaceFolder": "/sanwa-sf-devtools", // コンテナ内の作業ディレクトリ
    // ワークスペースを指定パスにマウント（ホスト側の開いているフォルダを使用）
    "workspaceMount": "source=${localWorkspaceFolder},target=/sanwa-sf-devtools,type=bind,consistency=cached",
    "mounts": [
        // sf CLI 認証キャッシュ
        "source=${localEnv:HOME}/.sf,target=/root/.sf,type=bind,consistency=cached",
        // Codex 設定・認証キャッシュ（root と workspace 両方にマウント）
        "source=${localEnv:HOME}/.codex,target=/root/.codex,type=bind,consistency=cached",
        "source=${localEnv:HOME}/.codex,target=/sanwa-sf-devtools/.codex,type=bind,consistency=cached"
    ],

    // ──────────────────────────────
    // 4) 実行ユーザー
    // ──────────────────────────────
    "remoteUser": "root",

    // ──────────────────────────────
    // 5) 追加機能（今回はコメントのまま）
    // ──────────────────────────────
    // "features": {},

    // ──────────────────────────────
    // 6) ポートフォワード（必要なら有効化）
    // ──────────────────────────────
    // "forwardPorts": [8080],

    // ──────────────────────────────
    // 7) 自動セットアップ
    // ──────────────────────────────
    // マウント先となるホスト側ディレクトリを事前に作成（存在しない場合でもエラー回避）
    "initializeCommand": "bash -c 'mkdir -p \"${HOME}/.sf\" \"${HOME}/.codex\"'",
    "postCreateCommand": "bash .devcontainer/setup.sh",
    "postStartCommand": "echo '🚀 Sanwa Salesforce 開発環境が起動しました！' && sf_devtools --version || echo 'SF DevTools はまだセットアップされていません。'"
}
