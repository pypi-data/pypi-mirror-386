{"version":3,"file":"static/chunks/8826.1da478d476513fbe.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/pipelines/PipelineRunsEmptyState.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRunsFeedRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineExplorerRoot.oss.tsx","webpack://_N_E/../ui-core/src/snapshots/SnapshotNav.tsx","webpack://_N_E/../ui-core/src/snapshots/SnapshotRoot.tsx"],"sourcesContent":["import {Box, Icon, NonIdealState} from '@dagster-io/ui-components';\n\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {\n  isThisThingAnAssetJob,\n  isThisThingAnExternalJob,\n  useRepository,\n} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface EmptyStateProps {\n  repoAddress: RepoAddress | null;\n  jobName: string;\n  jobPath: string;\n  anyFilter: boolean;\n}\n\nexport const PipelineRunsEmptyState = (props: EmptyStateProps) => {\n  const {repoAddress, anyFilter, jobName, jobPath} = props;\n\n  const repo = useRepository(repoAddress);\n  const isAssetJob = isThisThingAnAssetJob(repo, jobName);\n  const isExternalJob = isThisThingAnExternalJob(repo, jobName);\n\n  const description = () => {\n    if (!repoAddress) {\n      return <div>You have not launched any runs for this job.</div>;\n    }\n\n    if (isExternalJob) {\n      return (\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this external job.'}\n        </div>\n      );\n    }\n\n    if (isAssetJob) {\n      return (\n        <Box flex={{direction: 'column', gap: 12}}>\n          <div>\n            {anyFilter\n              ? 'There are no matching runs for these filters.'\n              : 'You have not materialized any assets with this job yet.'}\n          </div>\n          <div>\n            <AnchorButton\n              icon={<Icon name=\"materialization\" />}\n              to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}`)}\n            >\n              Materialize an asset\n            </AnchorButton>\n          </div>\n        </Box>\n      );\n    }\n\n    return (\n      <Box flex={{direction: 'column', gap: 12}}>\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this job yet.'}\n        </div>\n        <div>\n          <AnchorButton\n            icon={<Icon name=\"add_circle\" />}\n            to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}/playground`)}\n          >\n            Launch a run\n          </AnchorButton>\n        </div>\n      </Box>\n    );\n  };\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState icon=\"run\" title=\"No runs found\" description={description()} />\n    </Box>\n  );\n};\n","import {Box, ButtonLink, Tag, TokenizingFieldValue, tokenToString} from '@dagster-io/ui-components';\nimport {useCallback, useMemo} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PipelineRunsEmptyState} from './PipelineRunsEmptyState';\nimport {useJobTitle} from './useJobTitle';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {RunsFeedView, RunsFilter} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {RunsFeedError} from '../runs/RunsFeedError';\nimport {RunsFeedTable} from '../runs/RunsFeedTable';\nimport {\n  RunFilterToken,\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  useRunsFilterInput,\n} from '../runs/RunsFilterInput';\nimport {useRunsFeedEntries} from '../runs/useRunsFeedEntries';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst ENABLED_FILTERS: RunFilterTokenType[] = [\n  'status',\n  'tag',\n  'id',\n  'created_date_before',\n  'created_date_after',\n];\n\nexport const PipelineRunsFeedRoot = (props: {repoAddress?: RepoAddress}) => {\n  useTrackPageView();\n\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n  const {repoAddress = null} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n\n  const permanentTokens = useMemo(() => {\n    return [\n      isJob ? {token: 'job', value: pipelineName} : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [isJob, pipelineName, snapshotId]);\n\n  const runsFilter: RunsFilter = useMemo(() => {\n    const allTokens = [...filterTokens, ...permanentTokens];\n    if (repoAddress) {\n      const repoToken = {\n        token: 'tag',\n        value: `${DagsterTag.RepositoryLabelTag}=${repoAddressAsTag(repoAddress)}`,\n      };\n      allTokens.push(repoToken);\n    }\n    return {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId};\n  }, [filterTokens, permanentTokens, pipelineName, repoAddress, snapshotId]);\n\n  const onAddTag = useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokens([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokens],\n  );\n\n  const {entries, paginationProps, queryResult} = useRunsFeedEntries({\n    filter: runsFilter,\n    skip: false,\n    view: RunsFeedView.RUNS,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    enabledFilters: ENABLED_FILTERS,\n    tokens: filterTokens,\n    onChange: setFilterTokens,\n    loading: queryResult.loading,\n  });\n\n  const actionBarComponents = (\n    <Box\n      flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n      style={{width: '100%'}}\n      padding={{right: 16}}\n    >\n      {button}\n      <div style={{flex: 1}} />\n      <QueryRefreshCountdown refreshState={refreshState} />\n    </Box>\n  );\n\n  const belowActionBarComponents = (\n    <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n      {permanentTokens.map(({token, value}) => (\n        <Tag key={token}>{`${token}:${value}`}</Tag>\n      ))}\n      {activeFiltersJsx}\n      {activeFiltersJsx.length > 0 && (\n        <ButtonLink onClick={() => setFilterTokens([])}>Clear all</ButtonLink>\n      )}\n    </Box>\n  );\n\n  function content() {\n    if (queryResult.error) {\n      return <RunsFeedError error={queryResult.error} />;\n    }\n\n    return (\n      <div style={{minHeight: 0}}>\n        <RunsFeedTable\n          entries={entries}\n          loading={queryResult.loading}\n          onAddTag={onAddTag}\n          refetch={refreshState.refetch}\n          actionBarComponents={actionBarComponents}\n          belowActionBarComponents={belowActionBarComponents}\n          paginationProps={paginationProps}\n          filter={runsFilter}\n          emptyState={() => (\n            <PipelineRunsEmptyState\n              repoAddress={repoAddress}\n              anyFilter={filterTokens.length > 0}\n              jobName={pipelineName}\n              jobPath={pipelinePath}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: refreshState.refetch}}>\n      {content()}\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {explodeCompositesInHandleGraph} from './CompositeSupport';\nimport {\n  GRAPH_EXPLORER_ASSET_NODE_FRAGMENT,\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n  GraphExplorer,\n  GraphExplorerOptions,\n} from './GraphExplorer';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {ExplorerPath, explorerPathFromString, explorerPathToString} from './PipelinePathUtils';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  PipelineExplorerRootQuery,\n  PipelineExplorerRootQueryVariables,\n} from './types/PipelineExplorerRoot.oss.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntryFragment';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector, useJob} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\nexport const PipelineExplorerSnapshotRoot = () => {\n  useTrackPageView();\n\n  const params = useParams();\n  const explorerPath = explorerPathFromString((params as any)['0']);\n  const {pipelineName, snapshotId} = explorerPath;\n  const history = useHistory();\n\n  const openInNewTab = useOpenInNewTab();\n  useDocumentTitle(`Snapshot: ${pipelineName}${snapshotId ? `@${snapshotId.slice(0, 8)}` : ''}`);\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      onChangeExplorerPath={(path, mode) => {\n        history[mode](`/snapshots/${explorerPathToString(path)}`);\n      }}\n      onNavigateToSourceAssetNode={(e, {assetKey}) => {\n        const path = assetDetailsPathForKey(assetKey);\n        if (e.metaKey) {\n          openInNewTab(path);\n        } else {\n          history.push(assetDetailsPathForKey(assetKey));\n        }\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerContainer = (props: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n}) => {\n  const {explorerPath, repoAddress} = props;\n  const job = useJob(repoAddress, explorerPath.pipelineName);\n  const [options, setOptions] = useState<GraphExplorerOptions>({\n    explodeComposites: explorerPath.explodeComposites ?? false,\n    preferAssetRendering: true,\n  });\n  const isExternal = !!job && job.externalJobSource !== null;\n  useEffect(() => {\n    if (isExternal !== options.isExternal) {\n      setOptions({...options, isExternal});\n    }\n    return () => {};\n  }, [isExternal, options]);\n  const [hideEdgesToNodesOutsideQuery, setHideEdgesToNodesOutsideQuery] = useStateWithStorage(\n    'hideEdgesToNodesOutsideQuery',\n    (json) => {\n      if (json === 'false' || json === false) {\n        return false;\n      }\n      return true;\n    },\n  );\n\n  if (job && job.isAssetJob && options.preferAssetRendering) {\n    const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n    return (\n      <AssetGraphExplorer\n        key={explorerPath.pipelineName}\n        options={options}\n        setOptions={setOptions}\n        fetchOptions={{pipelineSelector, hideEdgesToNodesOutsideQuery}}\n        explorerPath={explorerPath}\n        onChangeExplorerPath={props.onChangeExplorerPath}\n        onNavigateToSourceAssetNode={props.onNavigateToSourceAssetNode}\n        viewType={AssetGraphViewType.JOB}\n        setHideEdgesToNodesOutsideQuery={setHideEdgesToNodesOutsideQuery}\n      />\n    );\n  }\n\n  return <PipelineOpGraphExplorer {...props} options={options} setOptions={setOptions} />;\n};\n\nconst PipelineOpGraphExplorer = ({\n  explorerPath,\n  repoAddress,\n  onChangeExplorerPath,\n  onNavigateToSourceAssetNode,\n  isGraph = false,\n  options,\n  setOptions,\n}: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n  options: GraphExplorerOptions;\n  setOptions: React.Dispatch<React.SetStateAction<GraphExplorerOptions>>;\n}) => {\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n\n  const pipelineResult = useQuery<PipelineExplorerRootQuery, PipelineExplorerRootQueryVariables>(\n    PIPELINE_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        snapshotPipelineSelector: explorerPath.snapshotId ? undefined : pipelineSelector,\n        snapshotId: explorerPath.snapshotId ? explorerPath.snapshotId : undefined,\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<PipelineExplorerRootQuery> queryResult={pipelineResult}>\n      {({pipelineSnapshotOrError: result}) => {\n        if (result.__typename !== 'PipelineSnapshot') {\n          return (\n            <NonIdealPipelineQueryResult\n              isGraph={isGraph}\n              result={result}\n              repoAddress={repoAddress}\n            />\n          );\n        }\n\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n        const assetNodesPresent = result.solidHandles.some(\n          (h) => h.solid.definition.assetNodes.length > 0,\n        );\n        if (options.preferAssetRendering && assetNodesPresent) {\n          return (\n            <AssetGraphExplorer\n              options={options}\n              setOptions={setOptions}\n              fetchOptions={{pipelineSelector}}\n              explorerPath={explorerPath}\n              onChangeExplorerPath={onChangeExplorerPath}\n              onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n              viewType={AssetGraphViewType.JOB}\n            />\n          );\n        }\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={onChangeExplorerPath}\n            container={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={isGraph}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const PIPELINE_EXPLORER_ROOT_QUERY = gql`\n  query PipelineExplorerRootQuery(\n    $snapshotPipelineSelector: PipelineSelector\n    $snapshotId: String\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    pipelineSnapshotOrError(\n      snapshotId: $snapshotId\n      activePipelineSelector: $snapshotPipelineSelector\n    ) {\n      ... on PipelineSnapshot {\n        id\n        name\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n            definition {\n              assetNodes {\n                id\n                ...GraphExplorerAssetNodeFragment\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n        ...GraphExplorerFragment\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_ASSET_NODE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {FontFamily, PageHeader, Subtitle1, Tabs, Tag} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {SnapshotQuery, SnapshotQueryVariables} from './types/SnapshotNav.types';\nimport {ExplorerPath, explorerPathToString} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {useActivePipelineForName} from '../workspace/WorkspaceContext/util';\nimport {workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nconst SNAPSHOT_PARENT_QUERY = gql`\n  query SnapshotQuery($snapshotId: String!) {\n    pipelineSnapshotOrError(snapshotId: $snapshotId) {\n      ... on PipelineSnapshot {\n        id\n        parentSnapshotId\n      }\n    }\n  }\n`;\n\ninterface SnapshotNavProps {\n  activeTab?: string;\n  explorerPath: ExplorerPath;\n}\n\nexport const SnapshotNav = (props: SnapshotNavProps) => {\n  const {activeTab = '', explorerPath} = props;\n  const {pipelineName, snapshotId = ''} = explorerPath;\n  const explorerPathString = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const currentPipelineState = useActivePipelineForName(pipelineName);\n  const currentSnapshotID = currentPipelineState?.pipelineSnapshotId;\n\n  const queryResult = useQuery<SnapshotQuery, SnapshotQueryVariables>(SNAPSHOT_PARENT_QUERY, {\n    variables: {snapshotId},\n  });\n\n  const {data, loading} = queryResult;\n\n  const tag = () => {\n    if (loading) {\n      return (\n        <Tag intent=\"none\" minimal>\n          ...\n        </Tag>\n      );\n    }\n\n    if (\n      !currentSnapshotID ||\n      (currentSnapshotID !== snapshotId &&\n        data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n        data?.pipelineSnapshotOrError?.parentSnapshotId !== currentSnapshotID)\n    ) {\n      return (\n        <Tag intent=\"warning\" minimal>\n          Snapshot\n        </Tag>\n      );\n    }\n\n    return (\n      <Tag intent=\"success\" minimal>\n        Current\n      </Tag>\n    );\n  };\n\n  const tabs = [\n    {\n      text: 'Definition',\n      pathComponent: '',\n      href: `/snapshots/${explorerPathString}`,\n    },\n    {\n      text: 'Runs',\n      pathComponent: 'runs',\n      href: `/snapshots/${explorerPathString}runs`,\n    },\n  ];\n\n  return (\n    <PageHeader\n      title={\n        <Subtitle1 style={{fontFamily: FontFamily.monospace, fontSize: '16px'}}>\n          {explorerPath.snapshotId?.slice(0, 8)}\n        </Subtitle1>\n      }\n      tags={\n        <>\n          <Tag icon=\"schema\">\n            Snapshot of{' '}\n            <Link to={workspacePipelinePathGuessRepo(explorerPath.pipelineName)}>\n              {explorerPath.pipelineName}\n            </Link>\n          </Tag>\n          {tag()}\n        </>\n      }\n      tabs={\n        <Tabs selectedTabId={activeTab}>\n          {tabs.map((tab) => {\n            const {href, text, pathComponent} = tab;\n            return <TabLink key={text} id={pathComponent} title={text} to={href} />;\n          })}\n        </Tabs>\n      }\n    />\n  );\n};\n","import {Switch, useParams} from 'react-router-dom';\nimport {PipelineExplorerSnapshotRoot} from 'shared/pipelines/PipelineExplorerRoot.oss';\n\nimport {SnapshotNav} from './SnapshotNav';\nimport {Route} from '../app/Route';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {PipelineRunsFeedRoot} from '../pipelines/PipelineRunsFeedRoot';\n\nexport const SnapshotRoot = () => {\n  const {pipelinePath, tab} = useParams<{\n    pipelinePath: string;\n    tab?: string;\n  }>();\n  const explorerPath = explorerPathFromString(pipelinePath);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <SnapshotNav activeTab={tab} explorerPath={explorerPath} />\n      <Switch>\n        <Route path=\"/snapshots/:pipelinePath/runs\">\n          <PipelineRunsFeedRoot />\n        </Route>\n        <Route path=\"/snapshots/(/?.*)\">\n          <PipelineExplorerSnapshotRoot />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default SnapshotRoot;\n"],"names":["PipelineRunsEmptyState","props","repoAddress","anyFilter","jobName","jobPath","repo","useRepository","isAssetJob","isThisThingAnAssetJob","isExternalJob","isThisThingAnExternalJob","Box","padding","vertical","NonIdealState","icon","title","description","div","flex","direction","gap","AnchorButton","Icon","name","to","workspacePathFromAddress","ENABLED_FILTERS","PipelineRunsFeedRoot","useTrackPageView","pipelinePath","useParams","explorerPath","explorerPathFromString","pipelineName","snapshotId","isJob","isThisThingAJob","useJobTitle","filterTokens","setFilterTokens","useQueryPersistedRunFilters","permanentTokens","useMemo","token","value","filter","Boolean","runsFilter","allTokens","repoToken","repoAddressAsTag","DagsterTag","RepositoryLabelTag","push","runsFilterForSearchTokens","onAddTag","useCallback","tokenAsString","tokenToString","some","entries","paginationProps","queryResult","useRunsFeedEntries","skip","view","RunsFeedView","RUNS","refreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","button","activeFiltersJsx","useRunsFilterInput","enabledFilters","tokens","onChange","loading","actionBarComponents","alignItems","style","width","right","QueryRefreshCountdown","belowActionBarComponents","map","Tag","length","ButtonLink","onClick","RunsQueryRefetchContext","Provider","refetch","content","error","RunsFeedError","minHeight","RunsFeedTable","emptyState","PipelineExplorerSnapshotRoot","params","history","useHistory","openInNewTab","useOpenInNewTab","useDocumentTitle","slice","PipelineExplorerContainer","onChangeExplorerPath","path","mode","explorerPathToString","onNavigateToSourceAssetNode","e","assetKey","assetDetailsPathForKey","metaKey","job","useJob","options","setOptions","useState","explodeComposites","preferAssetRendering","isExternal","externalJobSource","useEffect","hideEdgesToNodesOutsideQuery","setHideEdgesToNodesOutsideQuery","useStateWithStorage","json","pipelineSelector","buildPipelineSelector","AssetGraphExplorer","fetchOptions","viewType","AssetGraphViewType","JOB","PipelineOpGraphExplorer","isGraph","parentNames","opNames","pipelineResult","useQuery","PIPELINE_EXPLORER_ROOT_QUERY","variables","snapshotPipelineSelector","undefined","rootHandleID","join","requestScopeHandleID","Loading","pipelineSnapshotOrError","result","__typename","NonIdealPipelineQueryResult","parentHandle","solidHandle","displayedHandles","explodeCompositesInHandleGraph","solidHandles","assetNodesPresent","h","solid","definition","assetNodes","GraphExplorer","container","handles","getInvocations","s","definitionName","handleID","gql","METADATA_ENTRY_FRAGMENT","GRAPH_EXPLORER_FRAGMENT","GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT","GRAPH_EXPLORER_ASSET_NODE_FRAGMENT","PYTHON_ERROR_FRAGMENT","SNAPSHOT_PARENT_QUERY","SnapshotNav","activeTab","explorerPathString","currentPipelineState","useActivePipelineForName","currentSnapshotID","pipelineSnapshotId","data","PageHeader","Subtitle1","fontFamily","FontFamily","monospace","fontSize","tags","Link","workspacePipelinePathGuessRepo","tag","intent","minimal","parentSnapshotId","tabs","Tabs","selectedTabId","text","pathComponent","href","tab","TabLink","id","SnapshotRoot","display","flexDirection","minWidth","height","Switch","Route"],"sourceRoot":"","ignoreList":[]}