# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetLdapServerProfileResult',
    'AwaitableGetLdapServerProfileResult',
    'get_ldap_server_profile',
    'get_ldap_server_profile_output',
]

@pulumi.output_type
class GetLdapServerProfileResult:
    """
    A collection of values returned by getLdapServerProfile.
    """
    def __init__(__self__, base=None, bind_dn=None, bind_password=None, bind_timelimit=None, id=None, ldap_type=None, retry_interval=None, servers=None, ssl=None, tfid=None, timelimit=None, verify_server_certificate=None):
        if base and not isinstance(base, str):
            raise TypeError("Expected argument 'base' to be a str")
        pulumi.set(__self__, "base", base)
        if bind_dn and not isinstance(bind_dn, str):
            raise TypeError("Expected argument 'bind_dn' to be a str")
        pulumi.set(__self__, "bind_dn", bind_dn)
        if bind_password and not isinstance(bind_password, str):
            raise TypeError("Expected argument 'bind_password' to be a str")
        pulumi.set(__self__, "bind_password", bind_password)
        if bind_timelimit and not isinstance(bind_timelimit, str):
            raise TypeError("Expected argument 'bind_timelimit' to be a str")
        pulumi.set(__self__, "bind_timelimit", bind_timelimit)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ldap_type and not isinstance(ldap_type, str):
            raise TypeError("Expected argument 'ldap_type' to be a str")
        pulumi.set(__self__, "ldap_type", ldap_type)
        if retry_interval and not isinstance(retry_interval, int):
            raise TypeError("Expected argument 'retry_interval' to be a int")
        pulumi.set(__self__, "retry_interval", retry_interval)
        if servers and not isinstance(servers, list):
            raise TypeError("Expected argument 'servers' to be a list")
        pulumi.set(__self__, "servers", servers)
        if ssl and not isinstance(ssl, bool):
            raise TypeError("Expected argument 'ssl' to be a bool")
        pulumi.set(__self__, "ssl", ssl)
        if tfid and not isinstance(tfid, str):
            raise TypeError("Expected argument 'tfid' to be a str")
        pulumi.set(__self__, "tfid", tfid)
        if timelimit and not isinstance(timelimit, int):
            raise TypeError("Expected argument 'timelimit' to be a int")
        pulumi.set(__self__, "timelimit", timelimit)
        if verify_server_certificate and not isinstance(verify_server_certificate, bool):
            raise TypeError("Expected argument 'verify_server_certificate' to be a bool")
        pulumi.set(__self__, "verify_server_certificate", verify_server_certificate)

    @_builtins.property
    @pulumi.getter
    def base(self) -> _builtins.str:
        """
        The Base param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "base")

    @_builtins.property
    @pulumi.getter(name="bindDn")
    def bind_dn(self) -> _builtins.str:
        """
        The BindDn param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "bind_dn")

    @_builtins.property
    @pulumi.getter(name="bindPassword")
    def bind_password(self) -> _builtins.str:
        """
        The BindPassword param. String length must not exceed 121 characters.
        """
        return pulumi.get(self, "bind_password")

    @_builtins.property
    @pulumi.getter(name="bindTimelimit")
    def bind_timelimit(self) -> _builtins.str:
        """
        The BindTimelimit param.
        """
        return pulumi.get(self, "bind_timelimit")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ldapType")
    def ldap_type(self) -> _builtins.str:
        """
        The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
        """
        return pulumi.get(self, "ldap_type")

    @_builtins.property
    @pulumi.getter(name="retryInterval")
    def retry_interval(self) -> _builtins.int:
        """
        The RetryInterval param.
        """
        return pulumi.get(self, "retry_interval")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetLdapServerProfileServerResult']:
        """
        The Servers param.
        """
        return pulumi.get(self, "servers")

    @_builtins.property
    @pulumi.getter
    def ssl(self) -> _builtins.bool:
        """
        The Ssl param.
        """
        return pulumi.get(self, "ssl")

    @_builtins.property
    @pulumi.getter
    def tfid(self) -> _builtins.str:
        return pulumi.get(self, "tfid")

    @_builtins.property
    @pulumi.getter
    def timelimit(self) -> _builtins.int:
        """
        The Timelimit param.
        """
        return pulumi.get(self, "timelimit")

    @_builtins.property
    @pulumi.getter(name="verifyServerCertificate")
    def verify_server_certificate(self) -> _builtins.bool:
        """
        The VerifyServerCertificate param.
        """
        return pulumi.get(self, "verify_server_certificate")


class AwaitableGetLdapServerProfileResult(GetLdapServerProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLdapServerProfileResult(
            base=self.base,
            bind_dn=self.bind_dn,
            bind_password=self.bind_password,
            bind_timelimit=self.bind_timelimit,
            id=self.id,
            ldap_type=self.ldap_type,
            retry_interval=self.retry_interval,
            servers=self.servers,
            ssl=self.ssl,
            tfid=self.tfid,
            timelimit=self.timelimit,
            verify_server_certificate=self.verify_server_certificate)


def get_ldap_server_profile(id: Optional[_builtins.str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLdapServerProfileResult:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_ldap_server_profile(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scm:index/getLdapServerProfile:getLdapServerProfile', __args__, opts=opts, typ=GetLdapServerProfileResult).value

    return AwaitableGetLdapServerProfileResult(
        base=pulumi.get(__ret__, 'base'),
        bind_dn=pulumi.get(__ret__, 'bind_dn'),
        bind_password=pulumi.get(__ret__, 'bind_password'),
        bind_timelimit=pulumi.get(__ret__, 'bind_timelimit'),
        id=pulumi.get(__ret__, 'id'),
        ldap_type=pulumi.get(__ret__, 'ldap_type'),
        retry_interval=pulumi.get(__ret__, 'retry_interval'),
        servers=pulumi.get(__ret__, 'servers'),
        ssl=pulumi.get(__ret__, 'ssl'),
        tfid=pulumi.get(__ret__, 'tfid'),
        timelimit=pulumi.get(__ret__, 'timelimit'),
        verify_server_certificate=pulumi.get(__ret__, 'verify_server_certificate'))
def get_ldap_server_profile_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetLdapServerProfileResult]:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_ldap_server_profile(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scm:index/getLdapServerProfile:getLdapServerProfile', __args__, opts=opts, typ=GetLdapServerProfileResult)
    return __ret__.apply(lambda __response__: GetLdapServerProfileResult(
        base=pulumi.get(__response__, 'base'),
        bind_dn=pulumi.get(__response__, 'bind_dn'),
        bind_password=pulumi.get(__response__, 'bind_password'),
        bind_timelimit=pulumi.get(__response__, 'bind_timelimit'),
        id=pulumi.get(__response__, 'id'),
        ldap_type=pulumi.get(__response__, 'ldap_type'),
        retry_interval=pulumi.get(__response__, 'retry_interval'),
        servers=pulumi.get(__response__, 'servers'),
        ssl=pulumi.get(__response__, 'ssl'),
        tfid=pulumi.get(__response__, 'tfid'),
        timelimit=pulumi.get(__response__, 'timelimit'),
        verify_server_certificate=pulumi.get(__response__, 'verify_server_certificate')))
