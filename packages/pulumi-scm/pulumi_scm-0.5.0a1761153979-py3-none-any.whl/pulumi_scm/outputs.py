# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'AddressGroupDynamicValue',
    'AntiSpywareProfileMicaEngineSpywareEnabledList',
    'AntiSpywareProfileRule',
    'AntiSpywareProfileRuleAction',
    'AntiSpywareProfileRuleActionBlockIp',
    'AntiSpywareProfileThreatException',
    'AntiSpywareProfileThreatExceptionAction',
    'AntiSpywareProfileThreatExceptionActionBlockIp',
    'AntiSpywareProfileThreatExceptionExemptIp',
    'AntiSpywareSignatureDefaultAction',
    'AntiSpywareSignatureDefaultActionBlockIp',
    'AntiSpywareSignatureSignature',
    'AntiSpywareSignatureSignatureCombination',
    'AntiSpywareSignatureSignatureCombinationAndCondition',
    'AntiSpywareSignatureSignatureCombinationAndConditionOrCondition',
    'AntiSpywareSignatureSignatureCombinationTimeAttribute',
    'AntiSpywareSignatureSignatureStandard',
    'AntiSpywareSignatureSignatureStandardAndCondition',
    'AntiSpywareSignatureSignatureStandardAndConditionOrCondition',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch',
    'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier',
    'ApplicationDefault',
    'ApplicationDefaultIdentByIcmp6Type',
    'ApplicationDefaultIdentByIcmpType',
    'ApplicationFilterTagging',
    'ApplicationSignature',
    'ApplicationSignatureAndCondition',
    'ApplicationSignatureAndConditionOrCondition',
    'ApplicationSignatureAndConditionOrConditionOperator',
    'ApplicationSignatureAndConditionOrConditionOperatorEqualTo',
    'ApplicationSignatureAndConditionOrConditionOperatorGreaterThan',
    'ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier',
    'ApplicationSignatureAndConditionOrConditionOperatorLessThan',
    'ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier',
    'ApplicationSignatureAndConditionOrConditionOperatorPatternMatch',
    'ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier',
    'AuthenticationProfileLockout',
    'AuthenticationProfileMethod',
    'AuthenticationProfileMethodCloud',
    'AuthenticationProfileMethodKerberos',
    'AuthenticationProfileMethodLdap',
    'AuthenticationProfileMethodRadius',
    'AuthenticationProfileMethodSamlIdp',
    'AuthenticationProfileMethodTacplus',
    'AuthenticationProfileMultiFactorAuth',
    'AuthenticationProfileSingleSignOn',
    'CertificateProfileCaCertificate',
    'CertificateProfileUsernameField',
    'DecryptionProfileSslForwardProxy',
    'DecryptionProfileSslInboundProxy',
    'DecryptionProfileSslNoProxy',
    'DecryptionProfileSslProtocolSettings',
    'DecryptionRuleType',
    'DnsSecurityProfileBotnetDomains',
    'DnsSecurityProfileBotnetDomainsDnsSecurityCategory',
    'DnsSecurityProfileBotnetDomainsList',
    'DnsSecurityProfileBotnetDomainsListAction',
    'DnsSecurityProfileBotnetDomainsSinkhole',
    'DnsSecurityProfileBotnetDomainsWhitelist',
    'ExternalDynamicListType',
    'ExternalDynamicListTypeDomain',
    'ExternalDynamicListTypeDomainDomainAuth',
    'ExternalDynamicListTypeDomainRecurring',
    'ExternalDynamicListTypeDomainRecurringDaily',
    'ExternalDynamicListTypeDomainRecurringMonthly',
    'ExternalDynamicListTypeDomainRecurringWeekly',
    'ExternalDynamicListTypeImei',
    'ExternalDynamicListTypeImeiImeiAuth',
    'ExternalDynamicListTypeImeiRecurring',
    'ExternalDynamicListTypeImeiRecurringDaily',
    'ExternalDynamicListTypeImeiRecurringMonthly',
    'ExternalDynamicListTypeImeiRecurringWeekly',
    'ExternalDynamicListTypeImsi',
    'ExternalDynamicListTypeImsiImsiAuth',
    'ExternalDynamicListTypeImsiRecurring',
    'ExternalDynamicListTypeImsiRecurringDaily',
    'ExternalDynamicListTypeImsiRecurringMonthly',
    'ExternalDynamicListTypeImsiRecurringWeekly',
    'ExternalDynamicListTypeIp',
    'ExternalDynamicListTypeIpIpAuth',
    'ExternalDynamicListTypeIpRecurring',
    'ExternalDynamicListTypeIpRecurringDaily',
    'ExternalDynamicListTypeIpRecurringMonthly',
    'ExternalDynamicListTypeIpRecurringWeekly',
    'ExternalDynamicListTypePredefinedIp',
    'ExternalDynamicListTypePredefinedUrl',
    'ExternalDynamicListTypeUrl',
    'ExternalDynamicListTypeUrlRecurring',
    'ExternalDynamicListTypeUrlRecurringDaily',
    'ExternalDynamicListTypeUrlRecurringMonthly',
    'ExternalDynamicListTypeUrlRecurringWeekly',
    'ExternalDynamicListTypeUrlUrlAuth',
    'FileBlockingProfileRule',
    'HipObjectAntiMalware',
    'HipObjectAntiMalwareCriteria',
    'HipObjectAntiMalwareCriteriaLastScanTime',
    'HipObjectAntiMalwareCriteriaLastScanTimeNotWithin',
    'HipObjectAntiMalwareCriteriaLastScanTimeWithin',
    'HipObjectAntiMalwareCriteriaProductVersion',
    'HipObjectAntiMalwareCriteriaProductVersionNotWithin',
    'HipObjectAntiMalwareCriteriaProductVersionWithin',
    'HipObjectAntiMalwareCriteriaVirdefVersion',
    'HipObjectAntiMalwareCriteriaVirdefVersionNotWithin',
    'HipObjectAntiMalwareCriteriaVirdefVersionWithin',
    'HipObjectAntiMalwareVendor',
    'HipObjectCertificate',
    'HipObjectCertificateCriteria',
    'HipObjectCertificateCriteriaCertificateAttribute',
    'HipObjectCustomChecks',
    'HipObjectCustomChecksCriteria',
    'HipObjectCustomChecksCriteriaPlist',
    'HipObjectCustomChecksCriteriaPlistKey',
    'HipObjectCustomChecksCriteriaProcessList',
    'HipObjectCustomChecksCriteriaRegistryKey',
    'HipObjectCustomChecksCriteriaRegistryKeyRegistryValue',
    'HipObjectDataLossPrevention',
    'HipObjectDataLossPreventionCriteria',
    'HipObjectDataLossPreventionVendor',
    'HipObjectDiskBackup',
    'HipObjectDiskBackupCriteria',
    'HipObjectDiskBackupCriteriaLastBackupTime',
    'HipObjectDiskBackupCriteriaLastBackupTimeNotWithin',
    'HipObjectDiskBackupCriteriaLastBackupTimeWithin',
    'HipObjectDiskBackupVendor',
    'HipObjectDiskEncryption',
    'HipObjectDiskEncryptionCriteria',
    'HipObjectDiskEncryptionCriteriaEncryptedLocation',
    'HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState',
    'HipObjectDiskEncryptionVendor',
    'HipObjectFirewall',
    'HipObjectFirewallCriteria',
    'HipObjectFirewallVendor',
    'HipObjectHostInfo',
    'HipObjectHostInfoCriteria',
    'HipObjectHostInfoCriteriaClientVersion',
    'HipObjectHostInfoCriteriaDomain',
    'HipObjectHostInfoCriteriaHostId',
    'HipObjectHostInfoCriteriaHostName',
    'HipObjectHostInfoCriteriaOs',
    'HipObjectHostInfoCriteriaOsContains',
    'HipObjectHostInfoCriteriaSerialNumber',
    'HipObjectMobileDevice',
    'HipObjectMobileDeviceCriteria',
    'HipObjectMobileDeviceCriteriaApplications',
    'HipObjectMobileDeviceCriteriaApplicationsHasMalware',
    'HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes',
    'HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude',
    'HipObjectMobileDeviceCriteriaApplicationsInclude',
    'HipObjectMobileDeviceCriteriaImei',
    'HipObjectMobileDeviceCriteriaLastCheckinTime',
    'HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin',
    'HipObjectMobileDeviceCriteriaLastCheckinTimeWithin',
    'HipObjectMobileDeviceCriteriaModel',
    'HipObjectMobileDeviceCriteriaPhoneNumber',
    'HipObjectMobileDeviceCriteriaTag',
    'HipObjectNetworkInfo',
    'HipObjectNetworkInfoCriteria',
    'HipObjectNetworkInfoCriteriaNetwork',
    'HipObjectNetworkInfoCriteriaNetworkIs',
    'HipObjectNetworkInfoCriteriaNetworkIsMobile',
    'HipObjectNetworkInfoCriteriaNetworkIsNot',
    'HipObjectNetworkInfoCriteriaNetworkIsNotMobile',
    'HipObjectNetworkInfoCriteriaNetworkIsNotWifi',
    'HipObjectNetworkInfoCriteriaNetworkIsWifi',
    'HipObjectPatchManagement',
    'HipObjectPatchManagementCriteria',
    'HipObjectPatchManagementCriteriaMissingPatches',
    'HipObjectPatchManagementCriteriaMissingPatchesSeverity',
    'HipObjectPatchManagementVendor',
    'HttpHeaderProfileHttpHeaderInsertion',
    'HttpHeaderProfileHttpHeaderInsertionType',
    'HttpHeaderProfileHttpHeaderInsertionTypeHeader',
    'IkeCryptoProfileLifetime',
    'IkeGatewayAuthentication',
    'IkeGatewayAuthenticationCertificate',
    'IkeGatewayAuthenticationCertificateLocalCertificate',
    'IkeGatewayAuthenticationPreSharedKey',
    'IkeGatewayLocalId',
    'IkeGatewayPeerAddress',
    'IkeGatewayPeerId',
    'IkeGatewayProtocol',
    'IkeGatewayProtocolCommon',
    'IkeGatewayProtocolCommonFragmentation',
    'IkeGatewayProtocolCommonNatTraversal',
    'IkeGatewayProtocolIkev1',
    'IkeGatewayProtocolIkev1Dpd',
    'IkeGatewayProtocolIkev2',
    'IkeGatewayProtocolIkev2Dpd',
    'IpsecCryptoProfileAh',
    'IpsecCryptoProfileEsp',
    'IpsecCryptoProfileLifesize',
    'IpsecCryptoProfileLifetime',
    'IpsecTunnelAutoKey',
    'IpsecTunnelAutoKeyIkeGateway',
    'IpsecTunnelAutoKeyProxyId',
    'IpsecTunnelAutoKeyProxyIdProtocol',
    'IpsecTunnelAutoKeyProxyIdProtocolTcp',
    'IpsecTunnelAutoKeyProxyIdProtocolUdp',
    'IpsecTunnelAutoKeyProxyIdV6',
    'IpsecTunnelAutoKeyProxyIdV6Protocol',
    'IpsecTunnelAutoKeyProxyIdV6ProtocolTcp',
    'IpsecTunnelAutoKeyProxyIdV6ProtocolUdp',
    'IpsecTunnelTunnelMonitor',
    'KerberosServerProfileServer',
    'LdapServerProfileServer',
    'MfaServerMfaVendorType',
    'MfaServerMfaVendorTypeDuoSecurityV2',
    'MfaServerMfaVendorTypeOktaAdaptiveV1',
    'MfaServerMfaVendorTypePingIdentityV1',
    'MfaServerMfaVendorTypeRsaSecuridAccessV1',
    'NatRuleDestinationTranslation',
    'NatRuleDestinationTranslationDnsRewrite',
    'NatRuleDynamicDestinationTranslation',
    'NatRuleSourceTranslation',
    'NatRuleSourceTranslationFallback',
    'NatRuleTarget',
    'NatRuleTargetDevice',
    'QosPolicyRuleAction',
    'QosPolicyRuleDscpTos',
    'QosPolicyRuleDscpTosCodepoint',
    'QosPolicyRuleDscpTosCodepointType',
    'QosPolicyRuleDscpTosCodepointTypeAf',
    'QosPolicyRuleDscpTosCodepointTypeCs',
    'QosPolicyRuleDscpTosCodepointTypeCustom',
    'QosPolicyRuleDscpTosCodepointTypeCustomCodepoint',
    'QosPolicyRuleDscpTosCodepointTypeTos',
    'QosProfileAggregateBandwidth',
    'QosProfileClassBandwidthType',
    'QosProfileClassBandwidthTypeMbps',
    'QosProfileClassBandwidthTypeMbpsClass',
    'QosProfileClassBandwidthTypeMbpsClassClassBandwidth',
    'QosProfileClassBandwidthTypePercentage',
    'QosProfileClassBandwidthTypePercentageClass',
    'QosProfileClassBandwidthTypePercentageClassClassBandwidth',
    'RadiusServerProfileProtocol',
    'RadiusServerProfileProtocolEapTtlsWithPap',
    'RadiusServerProfileProtocolPeapMschapV2',
    'RadiusServerProfileProtocolPeapWithGtc',
    'RadiusServerProfileServer',
    'RegionGeoLocation',
    'RemoteNetworkEcmpTunnel',
    'RemoteNetworkEcmpTunnelProtocol',
    'RemoteNetworkEcmpTunnelProtocolBgp',
    'RemoteNetworkProtocol',
    'RemoteNetworkProtocolBgp',
    'RemoteNetworkProtocolBgpPeer',
    'ScepProfileAlgorithm',
    'ScepProfileAlgorithmRsa',
    'ScepProfileCertificateAttributes',
    'ScepProfileScepChallenge',
    'ScepProfileScepChallengeDynamicChallenge',
    'ScheduleScheduleType',
    'ScheduleScheduleTypeRecurring',
    'ScheduleScheduleTypeRecurringWeekly',
    'SecurityRuleProfileSetting',
    'ServiceConnectionBgpPeer',
    'ServiceConnectionProtocol',
    'ServiceConnectionProtocolBgp',
    'ServiceConnectionQos',
    'ServiceProtocol',
    'ServiceProtocolTcp',
    'ServiceProtocolTcpOverride',
    'ServiceProtocolUdp',
    'ServiceProtocolUdpOverride',
    'TacacsServerProfileServer',
    'TlsServiceProfileProtocolSettings',
    'TrafficSteeringRuleAction',
    'TrafficSteeringRuleActionForward',
    'UrlAccessProfileCredentialEnforcement',
    'UrlAccessProfileCredentialEnforcementMode',
    'VulnerabilityProtectionProfileRule',
    'VulnerabilityProtectionProfileRuleAction',
    'VulnerabilityProtectionProfileRuleActionBlockIp',
    'VulnerabilityProtectionProfileThreatException',
    'VulnerabilityProtectionProfileThreatExceptionAction',
    'VulnerabilityProtectionProfileThreatExceptionActionBlockIp',
    'VulnerabilityProtectionProfileThreatExceptionExemptIp',
    'VulnerabilityProtectionProfileThreatExceptionTimeAttribute',
    'VulnerabilityProtectionSignaturesAffectedHost',
    'VulnerabilityProtectionSignaturesDefaultAction',
    'VulnerabilityProtectionSignaturesDefaultActionBlockIp',
    'VulnerabilityProtectionSignaturesSignature',
    'VulnerabilityProtectionSignaturesSignatureCombination',
    'VulnerabilityProtectionSignaturesSignatureCombinationAndCondition',
    'VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition',
    'VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute',
    'VulnerabilityProtectionSignaturesSignatureStandard',
    'VulnerabilityProtectionSignaturesSignatureStandardAndCondition',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch',
    'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier',
    'WildfireAntiVirusProfileMlavException',
    'WildfireAntiVirusProfileRule',
    'WildfireAntiVirusProfileThreatException',
    'GetAddressGroupDynamicValueResult',
    'GetAddressGroupListDataResult',
    'GetAddressGroupListDataDynamicValueResult',
    'GetAddressObjectListDataResult',
    'GetAntiSpywareProfileListDataResult',
    'GetAntiSpywareProfileListDataMicaEngineSpywareEnabledListResult',
    'GetAntiSpywareProfileListDataRuleResult',
    'GetAntiSpywareProfileListDataRuleActionResult',
    'GetAntiSpywareProfileListDataRuleActionBlockIpResult',
    'GetAntiSpywareProfileListDataThreatExceptionResult',
    'GetAntiSpywareProfileListDataThreatExceptionActionResult',
    'GetAntiSpywareProfileListDataThreatExceptionActionBlockIpResult',
    'GetAntiSpywareProfileListDataThreatExceptionExemptIpResult',
    'GetAntiSpywareProfileMicaEngineSpywareEnabledListResult',
    'GetAntiSpywareProfileRuleResult',
    'GetAntiSpywareProfileRuleActionResult',
    'GetAntiSpywareProfileRuleActionBlockIpResult',
    'GetAntiSpywareProfileThreatExceptionResult',
    'GetAntiSpywareProfileThreatExceptionActionResult',
    'GetAntiSpywareProfileThreatExceptionActionBlockIpResult',
    'GetAntiSpywareProfileThreatExceptionExemptIpResult',
    'GetAntiSpywareSignatureDefaultActionResult',
    'GetAntiSpywareSignatureDefaultActionBlockIpResult',
    'GetAntiSpywareSignatureListDataResult',
    'GetAntiSpywareSignatureListDataDefaultActionResult',
    'GetAntiSpywareSignatureListDataDefaultActionBlockIpResult',
    'GetAntiSpywareSignatureListDataSignatureResult',
    'GetAntiSpywareSignatureListDataSignatureCombinationResult',
    'GetAntiSpywareSignatureListDataSignatureCombinationAndConditionResult',
    'GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrConditionResult',
    'GetAntiSpywareSignatureListDataSignatureCombinationTimeAttributeResult',
    'GetAntiSpywareSignatureListDataSignatureStandardResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult',
    'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetAntiSpywareSignatureSignatureResult',
    'GetAntiSpywareSignatureSignatureCombinationResult',
    'GetAntiSpywareSignatureSignatureCombinationAndConditionResult',
    'GetAntiSpywareSignatureSignatureCombinationAndConditionOrConditionResult',
    'GetAntiSpywareSignatureSignatureCombinationTimeAttributeResult',
    'GetAntiSpywareSignatureSignatureStandardResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchResult',
    'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetAppOverrideRuleListDataResult',
    'GetApplicationDefaultResult',
    'GetApplicationDefaultIdentByIcmp6TypeResult',
    'GetApplicationDefaultIdentByIcmpTypeResult',
    'GetApplicationFilterListDataResult',
    'GetApplicationFilterListDataTaggingResult',
    'GetApplicationFilterTaggingResult',
    'GetApplicationGroupListDataResult',
    'GetApplicationListDataResult',
    'GetApplicationListDataDefaultResult',
    'GetApplicationListDataDefaultIdentByIcmp6TypeResult',
    'GetApplicationListDataDefaultIdentByIcmpTypeResult',
    'GetApplicationListDataSignatureResult',
    'GetApplicationListDataSignatureAndConditionResult',
    'GetApplicationListDataSignatureAndConditionOrConditionResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualToResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchResult',
    'GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetApplicationSignatureResult',
    'GetApplicationSignatureAndConditionResult',
    'GetApplicationSignatureAndConditionOrConditionResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorEqualToResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorLessThanResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchResult',
    'GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetAuthenticationPortalListDataResult',
    'GetAuthenticationProfileListDataResult',
    'GetAuthenticationProfileListDataLockoutResult',
    'GetAuthenticationProfileListDataMethodResult',
    'GetAuthenticationProfileListDataMethodCloudResult',
    'GetAuthenticationProfileListDataMethodKerberosResult',
    'GetAuthenticationProfileListDataMethodLdapResult',
    'GetAuthenticationProfileListDataMethodRadiusResult',
    'GetAuthenticationProfileListDataMethodSamlIdpResult',
    'GetAuthenticationProfileListDataMethodTacplusResult',
    'GetAuthenticationProfileListDataMultiFactorAuthResult',
    'GetAuthenticationProfileListDataSingleSignOnResult',
    'GetAuthenticationProfileLockoutResult',
    'GetAuthenticationProfileMethodResult',
    'GetAuthenticationProfileMethodCloudResult',
    'GetAuthenticationProfileMethodKerberosResult',
    'GetAuthenticationProfileMethodLdapResult',
    'GetAuthenticationProfileMethodRadiusResult',
    'GetAuthenticationProfileMethodSamlIdpResult',
    'GetAuthenticationProfileMethodTacplusResult',
    'GetAuthenticationProfileMultiFactorAuthResult',
    'GetAuthenticationProfileSingleSignOnResult',
    'GetAuthenticationRuleListDataResult',
    'GetAuthenticationSequenceListDataResult',
    'GetAutoTagActionsListDataResult',
    'GetAutoTagActionsListDataActionResult',
    'GetAutoTagActionsListDataActionTypeResult',
    'GetAutoTagActionsListDataActionTypeTaggingResult',
    'GetCertificateProfileCaCertificateResult',
    'GetCertificateProfileListDataResult',
    'GetCertificateProfileListDataCaCertificateResult',
    'GetCertificateProfileListDataUsernameFieldResult',
    'GetCertificateProfileUsernameFieldResult',
    'GetDecryptionProfileListDataResult',
    'GetDecryptionProfileListDataSslForwardProxyResult',
    'GetDecryptionProfileListDataSslInboundProxyResult',
    'GetDecryptionProfileListDataSslNoProxyResult',
    'GetDecryptionProfileListDataSslProtocolSettingsResult',
    'GetDecryptionProfileSslForwardProxyResult',
    'GetDecryptionProfileSslInboundProxyResult',
    'GetDecryptionProfileSslNoProxyResult',
    'GetDecryptionProfileSslProtocolSettingsResult',
    'GetDecryptionRuleListDataResult',
    'GetDecryptionRuleListDataTypeResult',
    'GetDecryptionRuleTypeResult',
    'GetDeviceAvailableLicensessResult',
    'GetDeviceInstalledLicenseResult',
    'GetDeviceListDataResult',
    'GetDeviceListDataAvailableLicensessResult',
    'GetDeviceListDataInstalledLicenseResult',
    'GetDnsSecurityProfileBotnetDomainsResult',
    'GetDnsSecurityProfileBotnetDomainsDnsSecurityCategoryResult',
    'GetDnsSecurityProfileBotnetDomainsListResult',
    'GetDnsSecurityProfileBotnetDomainsListActionResult',
    'GetDnsSecurityProfileBotnetDomainsSinkholeResult',
    'GetDnsSecurityProfileBotnetDomainsWhitelistResult',
    'GetDnsSecurityProfileListDataResult',
    'GetDnsSecurityProfileListDataBotnetDomainsResult',
    'GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategoryResult',
    'GetDnsSecurityProfileListDataBotnetDomainsListResult',
    'GetDnsSecurityProfileListDataBotnetDomainsListActionResult',
    'GetDnsSecurityProfileListDataBotnetDomainsSinkholeResult',
    'GetDnsSecurityProfileListDataBotnetDomainsWhitelistResult',
    'GetDynamicUserGroupListDataResult',
    'GetExternalDynamicListListDataResult',
    'GetExternalDynamicListListDataTypeResult',
    'GetExternalDynamicListListDataTypeDomainResult',
    'GetExternalDynamicListListDataTypeDomainDomainAuthResult',
    'GetExternalDynamicListListDataTypeDomainRecurringResult',
    'GetExternalDynamicListListDataTypeDomainRecurringDailyResult',
    'GetExternalDynamicListListDataTypeDomainRecurringMonthlyResult',
    'GetExternalDynamicListListDataTypeDomainRecurringWeeklyResult',
    'GetExternalDynamicListListDataTypeImeiResult',
    'GetExternalDynamicListListDataTypeImeiImeiAuthResult',
    'GetExternalDynamicListListDataTypeImeiRecurringResult',
    'GetExternalDynamicListListDataTypeImeiRecurringDailyResult',
    'GetExternalDynamicListListDataTypeImeiRecurringMonthlyResult',
    'GetExternalDynamicListListDataTypeImeiRecurringWeeklyResult',
    'GetExternalDynamicListListDataTypeImsiResult',
    'GetExternalDynamicListListDataTypeImsiImsiAuthResult',
    'GetExternalDynamicListListDataTypeImsiRecurringResult',
    'GetExternalDynamicListListDataTypeImsiRecurringDailyResult',
    'GetExternalDynamicListListDataTypeImsiRecurringMonthlyResult',
    'GetExternalDynamicListListDataTypeImsiRecurringWeeklyResult',
    'GetExternalDynamicListListDataTypeIpResult',
    'GetExternalDynamicListListDataTypeIpIpAuthResult',
    'GetExternalDynamicListListDataTypeIpRecurringResult',
    'GetExternalDynamicListListDataTypeIpRecurringDailyResult',
    'GetExternalDynamicListListDataTypeIpRecurringMonthlyResult',
    'GetExternalDynamicListListDataTypeIpRecurringWeeklyResult',
    'GetExternalDynamicListListDataTypePredefinedIpResult',
    'GetExternalDynamicListListDataTypePredefinedUrlResult',
    'GetExternalDynamicListListDataTypeUrlResult',
    'GetExternalDynamicListListDataTypeUrlRecurringResult',
    'GetExternalDynamicListListDataTypeUrlRecurringDailyResult',
    'GetExternalDynamicListListDataTypeUrlRecurringMonthlyResult',
    'GetExternalDynamicListListDataTypeUrlRecurringWeeklyResult',
    'GetExternalDynamicListListDataTypeUrlUrlAuthResult',
    'GetExternalDynamicListTypeResult',
    'GetExternalDynamicListTypeDomainResult',
    'GetExternalDynamicListTypeDomainDomainAuthResult',
    'GetExternalDynamicListTypeDomainRecurringResult',
    'GetExternalDynamicListTypeDomainRecurringDailyResult',
    'GetExternalDynamicListTypeDomainRecurringMonthlyResult',
    'GetExternalDynamicListTypeDomainRecurringWeeklyResult',
    'GetExternalDynamicListTypeImeiResult',
    'GetExternalDynamicListTypeImeiImeiAuthResult',
    'GetExternalDynamicListTypeImeiRecurringResult',
    'GetExternalDynamicListTypeImeiRecurringDailyResult',
    'GetExternalDynamicListTypeImeiRecurringMonthlyResult',
    'GetExternalDynamicListTypeImeiRecurringWeeklyResult',
    'GetExternalDynamicListTypeImsiResult',
    'GetExternalDynamicListTypeImsiImsiAuthResult',
    'GetExternalDynamicListTypeImsiRecurringResult',
    'GetExternalDynamicListTypeImsiRecurringDailyResult',
    'GetExternalDynamicListTypeImsiRecurringMonthlyResult',
    'GetExternalDynamicListTypeImsiRecurringWeeklyResult',
    'GetExternalDynamicListTypeIpResult',
    'GetExternalDynamicListTypeIpIpAuthResult',
    'GetExternalDynamicListTypeIpRecurringResult',
    'GetExternalDynamicListTypeIpRecurringDailyResult',
    'GetExternalDynamicListTypeIpRecurringMonthlyResult',
    'GetExternalDynamicListTypeIpRecurringWeeklyResult',
    'GetExternalDynamicListTypePredefinedIpResult',
    'GetExternalDynamicListTypePredefinedUrlResult',
    'GetExternalDynamicListTypeUrlResult',
    'GetExternalDynamicListTypeUrlRecurringResult',
    'GetExternalDynamicListTypeUrlRecurringDailyResult',
    'GetExternalDynamicListTypeUrlRecurringMonthlyResult',
    'GetExternalDynamicListTypeUrlRecurringWeeklyResult',
    'GetExternalDynamicListTypeUrlUrlAuthResult',
    'GetFileBlockingProfileListDataResult',
    'GetFileBlockingProfileListDataRuleResult',
    'GetFileBlockingProfileRuleResult',
    'GetFolderListDataResult',
    'GetHipObjectAntiMalwareResult',
    'GetHipObjectAntiMalwareCriteriaResult',
    'GetHipObjectAntiMalwareCriteriaLastScanTimeResult',
    'GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithinResult',
    'GetHipObjectAntiMalwareCriteriaLastScanTimeWithinResult',
    'GetHipObjectAntiMalwareCriteriaProductVersionResult',
    'GetHipObjectAntiMalwareCriteriaProductVersionNotWithinResult',
    'GetHipObjectAntiMalwareCriteriaProductVersionWithinResult',
    'GetHipObjectAntiMalwareCriteriaVirdefVersionResult',
    'GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithinResult',
    'GetHipObjectAntiMalwareCriteriaVirdefVersionWithinResult',
    'GetHipObjectAntiMalwareVendorResult',
    'GetHipObjectCertificateResult',
    'GetHipObjectCertificateCriteriaResult',
    'GetHipObjectCertificateCriteriaCertificateAttributeResult',
    'GetHipObjectCustomChecksResult',
    'GetHipObjectCustomChecksCriteriaResult',
    'GetHipObjectCustomChecksCriteriaPlistResult',
    'GetHipObjectCustomChecksCriteriaPlistKeyResult',
    'GetHipObjectCustomChecksCriteriaProcessListResult',
    'GetHipObjectCustomChecksCriteriaRegistryKeyResult',
    'GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValueResult',
    'GetHipObjectDataLossPreventionResult',
    'GetHipObjectDataLossPreventionCriteriaResult',
    'GetHipObjectDataLossPreventionVendorResult',
    'GetHipObjectDiskBackupResult',
    'GetHipObjectDiskBackupCriteriaResult',
    'GetHipObjectDiskBackupCriteriaLastBackupTimeResult',
    'GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithinResult',
    'GetHipObjectDiskBackupCriteriaLastBackupTimeWithinResult',
    'GetHipObjectDiskBackupVendorResult',
    'GetHipObjectDiskEncryptionResult',
    'GetHipObjectDiskEncryptionCriteriaResult',
    'GetHipObjectDiskEncryptionCriteriaEncryptedLocationResult',
    'GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult',
    'GetHipObjectDiskEncryptionVendorResult',
    'GetHipObjectFirewallResult',
    'GetHipObjectFirewallCriteriaResult',
    'GetHipObjectFirewallVendorResult',
    'GetHipObjectHostInfoResult',
    'GetHipObjectHostInfoCriteriaResult',
    'GetHipObjectHostInfoCriteriaClientVersionResult',
    'GetHipObjectHostInfoCriteriaDomainResult',
    'GetHipObjectHostInfoCriteriaHostIdResult',
    'GetHipObjectHostInfoCriteriaHostNameResult',
    'GetHipObjectHostInfoCriteriaOsResult',
    'GetHipObjectHostInfoCriteriaOsContainsResult',
    'GetHipObjectHostInfoCriteriaSerialNumberResult',
    'GetHipObjectListDataResult',
    'GetHipObjectListDataAntiMalwareResult',
    'GetHipObjectListDataAntiMalwareCriteriaResult',
    'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeResult',
    'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithinResult',
    'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithinResult',
    'GetHipObjectListDataAntiMalwareCriteriaProductVersionResult',
    'GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithinResult',
    'GetHipObjectListDataAntiMalwareCriteriaProductVersionWithinResult',
    'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionResult',
    'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithinResult',
    'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithinResult',
    'GetHipObjectListDataAntiMalwareVendorResult',
    'GetHipObjectListDataCertificateResult',
    'GetHipObjectListDataCertificateCriteriaResult',
    'GetHipObjectListDataCertificateCriteriaCertificateAttributeResult',
    'GetHipObjectListDataCustomChecksResult',
    'GetHipObjectListDataCustomChecksCriteriaResult',
    'GetHipObjectListDataCustomChecksCriteriaPlistResult',
    'GetHipObjectListDataCustomChecksCriteriaPlistKeyResult',
    'GetHipObjectListDataCustomChecksCriteriaProcessListResult',
    'GetHipObjectListDataCustomChecksCriteriaRegistryKeyResult',
    'GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValueResult',
    'GetHipObjectListDataDataLossPreventionResult',
    'GetHipObjectListDataDataLossPreventionCriteriaResult',
    'GetHipObjectListDataDataLossPreventionVendorResult',
    'GetHipObjectListDataDiskBackupResult',
    'GetHipObjectListDataDiskBackupCriteriaResult',
    'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeResult',
    'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithinResult',
    'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithinResult',
    'GetHipObjectListDataDiskBackupVendorResult',
    'GetHipObjectListDataDiskEncryptionResult',
    'GetHipObjectListDataDiskEncryptionCriteriaResult',
    'GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationResult',
    'GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult',
    'GetHipObjectListDataDiskEncryptionVendorResult',
    'GetHipObjectListDataFirewallResult',
    'GetHipObjectListDataFirewallCriteriaResult',
    'GetHipObjectListDataFirewallVendorResult',
    'GetHipObjectListDataHostInfoResult',
    'GetHipObjectListDataHostInfoCriteriaResult',
    'GetHipObjectListDataHostInfoCriteriaClientVersionResult',
    'GetHipObjectListDataHostInfoCriteriaDomainResult',
    'GetHipObjectListDataHostInfoCriteriaHostIdResult',
    'GetHipObjectListDataHostInfoCriteriaHostNameResult',
    'GetHipObjectListDataHostInfoCriteriaOsResult',
    'GetHipObjectListDataHostInfoCriteriaOsContainsResult',
    'GetHipObjectListDataHostInfoCriteriaSerialNumberResult',
    'GetHipObjectListDataMobileDeviceResult',
    'GetHipObjectListDataMobileDeviceCriteriaResult',
    'GetHipObjectListDataMobileDeviceCriteriaApplicationsResult',
    'GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareResult',
    'GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesResult',
    'GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult',
    'GetHipObjectListDataMobileDeviceCriteriaApplicationsIncludeResult',
    'GetHipObjectListDataMobileDeviceCriteriaImeiResult',
    'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeResult',
    'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithinResult',
    'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithinResult',
    'GetHipObjectListDataMobileDeviceCriteriaModelResult',
    'GetHipObjectListDataMobileDeviceCriteriaPhoneNumberResult',
    'GetHipObjectListDataMobileDeviceCriteriaTagResult',
    'GetHipObjectListDataNetworkInfoResult',
    'GetHipObjectListDataNetworkInfoCriteriaResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobileResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobileResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifiResult',
    'GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifiResult',
    'GetHipObjectListDataPatchManagementResult',
    'GetHipObjectListDataPatchManagementCriteriaResult',
    'GetHipObjectListDataPatchManagementCriteriaMissingPatchesResult',
    'GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverityResult',
    'GetHipObjectListDataPatchManagementVendorResult',
    'GetHipObjectMobileDeviceResult',
    'GetHipObjectMobileDeviceCriteriaResult',
    'GetHipObjectMobileDeviceCriteriaApplicationsResult',
    'GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareResult',
    'GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesResult',
    'GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult',
    'GetHipObjectMobileDeviceCriteriaApplicationsIncludeResult',
    'GetHipObjectMobileDeviceCriteriaImeiResult',
    'GetHipObjectMobileDeviceCriteriaLastCheckinTimeResult',
    'GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinResult',
    'GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithinResult',
    'GetHipObjectMobileDeviceCriteriaModelResult',
    'GetHipObjectMobileDeviceCriteriaPhoneNumberResult',
    'GetHipObjectMobileDeviceCriteriaTagResult',
    'GetHipObjectNetworkInfoResult',
    'GetHipObjectNetworkInfoCriteriaResult',
    'GetHipObjectNetworkInfoCriteriaNetworkResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsMobileResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsNotResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsNotMobileResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsNotWifiResult',
    'GetHipObjectNetworkInfoCriteriaNetworkIsWifiResult',
    'GetHipObjectPatchManagementResult',
    'GetHipObjectPatchManagementCriteriaResult',
    'GetHipObjectPatchManagementCriteriaMissingPatchesResult',
    'GetHipObjectPatchManagementCriteriaMissingPatchesSeverityResult',
    'GetHipObjectPatchManagementVendorResult',
    'GetHipProfileListDataResult',
    'GetHttpHeaderProfileHttpHeaderInsertionResult',
    'GetHttpHeaderProfileHttpHeaderInsertionTypeResult',
    'GetHttpHeaderProfileHttpHeaderInsertionTypeHeaderResult',
    'GetHttpHeaderProfileListDataResult',
    'GetHttpHeaderProfileListDataHttpHeaderInsertionResult',
    'GetHttpHeaderProfileListDataHttpHeaderInsertionTypeResult',
    'GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeaderResult',
    'GetIkeCryptoProfileLifetimeResult',
    'GetIkeCryptoProfileListDataResult',
    'GetIkeCryptoProfileListDataLifetimeResult',
    'GetIkeGatewayAuthenticationResult',
    'GetIkeGatewayAuthenticationCertificateResult',
    'GetIkeGatewayAuthenticationCertificateLocalCertificateResult',
    'GetIkeGatewayAuthenticationPreSharedKeyResult',
    'GetIkeGatewayListDataResult',
    'GetIkeGatewayListDataAuthenticationResult',
    'GetIkeGatewayListDataAuthenticationCertificateResult',
    'GetIkeGatewayListDataAuthenticationCertificateLocalCertificateResult',
    'GetIkeGatewayListDataAuthenticationPreSharedKeyResult',
    'GetIkeGatewayListDataLocalIdResult',
    'GetIkeGatewayListDataPeerAddressResult',
    'GetIkeGatewayListDataPeerIdResult',
    'GetIkeGatewayListDataProtocolResult',
    'GetIkeGatewayListDataProtocolCommonResult',
    'GetIkeGatewayListDataProtocolCommonFragmentationResult',
    'GetIkeGatewayListDataProtocolCommonNatTraversalResult',
    'GetIkeGatewayListDataProtocolIkev1Result',
    'GetIkeGatewayListDataProtocolIkev1DpdResult',
    'GetIkeGatewayListDataProtocolIkev2Result',
    'GetIkeGatewayListDataProtocolIkev2DpdResult',
    'GetIkeGatewayLocalIdResult',
    'GetIkeGatewayPeerAddressResult',
    'GetIkeGatewayPeerIdResult',
    'GetIkeGatewayProtocolResult',
    'GetIkeGatewayProtocolCommonResult',
    'GetIkeGatewayProtocolCommonFragmentationResult',
    'GetIkeGatewayProtocolCommonNatTraversalResult',
    'GetIkeGatewayProtocolIkev1Result',
    'GetIkeGatewayProtocolIkev1DpdResult',
    'GetIkeGatewayProtocolIkev2Result',
    'GetIkeGatewayProtocolIkev2DpdResult',
    'GetInternalDnsServerListDataResult',
    'GetIpsecCryptoProfileAhResult',
    'GetIpsecCryptoProfileEspResult',
    'GetIpsecCryptoProfileLifesizeResult',
    'GetIpsecCryptoProfileLifetimeResult',
    'GetIpsecCryptoProfileListDataResult',
    'GetIpsecCryptoProfileListDataAhResult',
    'GetIpsecCryptoProfileListDataEspResult',
    'GetIpsecCryptoProfileListDataLifesizeResult',
    'GetIpsecCryptoProfileListDataLifetimeResult',
    'GetIpsecTunnelAutoKeyResult',
    'GetIpsecTunnelAutoKeyIkeGatewayResult',
    'GetIpsecTunnelAutoKeyProxyIdResult',
    'GetIpsecTunnelAutoKeyProxyIdProtocolResult',
    'GetIpsecTunnelAutoKeyProxyIdProtocolTcpResult',
    'GetIpsecTunnelAutoKeyProxyIdProtocolUdpResult',
    'GetIpsecTunnelAutoKeyProxyIdV6Result',
    'GetIpsecTunnelAutoKeyProxyIdV6ProtocolResult',
    'GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcpResult',
    'GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdpResult',
    'GetIpsecTunnelListDataResult',
    'GetIpsecTunnelListDataAutoKeyResult',
    'GetIpsecTunnelListDataAutoKeyIkeGatewayResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdProtocolResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcpResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdpResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdV6Result',
    'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcpResult',
    'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdpResult',
    'GetIpsecTunnelListDataTunnelMonitorResult',
    'GetIpsecTunnelTunnelMonitorResult',
    'GetJobsListDataResult',
    'GetKerberosServerProfileListDataResult',
    'GetKerberosServerProfileListDataServerResult',
    'GetKerberosServerProfileServerResult',
    'GetLabelListDataResult',
    'GetLdapServerProfileListDataResult',
    'GetLdapServerProfileListDataServerResult',
    'GetLdapServerProfileServerResult',
    'GetLocalUserGroupListDataResult',
    'GetLocalUserListDataResult',
    'GetMfaServerMfaVendorTypeResult',
    'GetMfaServerMfaVendorTypeDuoSecurityV2Result',
    'GetMfaServerMfaVendorTypeOktaAdaptiveV1Result',
    'GetMfaServerMfaVendorTypePingIdentityV1Result',
    'GetMfaServerMfaVendorTypeRsaSecuridAccessV1Result',
    'GetNatRuleDestinationTranslationResult',
    'GetNatRuleDestinationTranslationDnsRewriteResult',
    'GetNatRuleDynamicDestinationTranslationResult',
    'GetNatRuleListDataResult',
    'GetNatRuleListDataDestinationTranslationResult',
    'GetNatRuleListDataDestinationTranslationDnsRewriteResult',
    'GetNatRuleListDataDynamicDestinationTranslationResult',
    'GetNatRuleListDataSourceTranslationResult',
    'GetNatRuleListDataSourceTranslationFallbackResult',
    'GetNatRuleListDataTargetResult',
    'GetNatRuleListDataTargetDeviceResult',
    'GetNatRuleSourceTranslationResult',
    'GetNatRuleSourceTranslationFallbackResult',
    'GetNatRuleTargetResult',
    'GetNatRuleTargetDeviceResult',
    'GetOcspResponderListDataResult',
    'GetProfileGroupListDataResult',
    'GetQosPolicyRuleActionResult',
    'GetQosPolicyRuleDscpTosResult',
    'GetQosPolicyRuleDscpTosCodepointResult',
    'GetQosPolicyRuleDscpTosCodepointTypeResult',
    'GetQosPolicyRuleDscpTosCodepointTypeAfResult',
    'GetQosPolicyRuleDscpTosCodepointTypeCsResult',
    'GetQosPolicyRuleDscpTosCodepointTypeCustomResult',
    'GetQosPolicyRuleDscpTosCodepointTypeCustomCodepointResult',
    'GetQosPolicyRuleDscpTosCodepointTypeTosResult',
    'GetQosPolicyRuleListDataResult',
    'GetQosPolicyRuleListDataActionResult',
    'GetQosPolicyRuleListDataDscpTosResult',
    'GetQosPolicyRuleListDataDscpTosCodepointResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeAfResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeCsResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeCustomResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepointResult',
    'GetQosPolicyRuleListDataDscpTosCodepointTypeTosResult',
    'GetQosProfileAggregateBandwidthResult',
    'GetQosProfileClassBandwidthTypeResult',
    'GetQosProfileClassBandwidthTypeMbpsResult',
    'GetQosProfileClassBandwidthTypeMbpsClassResult',
    'GetQosProfileClassBandwidthTypeMbpsClassClassBandwidthResult',
    'GetQosProfileClassBandwidthTypePercentageResult',
    'GetQosProfileClassBandwidthTypePercentageClassResult',
    'GetQosProfileClassBandwidthTypePercentageClassClassBandwidthResult',
    'GetQosProfileListDataResult',
    'GetQosProfileListDataAggregateBandwidthResult',
    'GetQosProfileListDataClassBandwidthTypeResult',
    'GetQosProfileListDataClassBandwidthTypeMbpsResult',
    'GetQosProfileListDataClassBandwidthTypeMbpsClassResult',
    'GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidthResult',
    'GetQosProfileListDataClassBandwidthTypePercentageResult',
    'GetQosProfileListDataClassBandwidthTypePercentageClassResult',
    'GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidthResult',
    'GetRadiusServerProfileListDataResult',
    'GetRadiusServerProfileListDataProtocolResult',
    'GetRadiusServerProfileListDataProtocolEapTtlsWithPapResult',
    'GetRadiusServerProfileListDataProtocolPeapMschapV2Result',
    'GetRadiusServerProfileListDataProtocolPeapWithGtcResult',
    'GetRadiusServerProfileListDataServerResult',
    'GetRadiusServerProfileProtocolResult',
    'GetRadiusServerProfileProtocolEapTtlsWithPapResult',
    'GetRadiusServerProfileProtocolPeapMschapV2Result',
    'GetRadiusServerProfileProtocolPeapWithGtcResult',
    'GetRadiusServerProfileServerResult',
    'GetRegionGeoLocationResult',
    'GetRegionListDataResult',
    'GetRegionListDataGeoLocationResult',
    'GetRemoteNetworkEcmpTunnelResult',
    'GetRemoteNetworkEcmpTunnelProtocolResult',
    'GetRemoteNetworkEcmpTunnelProtocolBgpResult',
    'GetRemoteNetworkListDataResult',
    'GetRemoteNetworkListDataEcmpTunnelResult',
    'GetRemoteNetworkListDataEcmpTunnelProtocolResult',
    'GetRemoteNetworkListDataEcmpTunnelProtocolBgpResult',
    'GetRemoteNetworkListDataProtocolResult',
    'GetRemoteNetworkListDataProtocolBgpResult',
    'GetRemoteNetworkListDataProtocolBgpPeerResult',
    'GetRemoteNetworkProtocolResult',
    'GetRemoteNetworkProtocolBgpResult',
    'GetRemoteNetworkProtocolBgpPeerResult',
    'GetSamlServerProfileListDataResult',
    'GetScepProfileAlgorithmResult',
    'GetScepProfileAlgorithmRsaResult',
    'GetScepProfileCertificateAttributesResult',
    'GetScepProfileListDataResult',
    'GetScepProfileListDataAlgorithmResult',
    'GetScepProfileListDataAlgorithmRsaResult',
    'GetScepProfileListDataCertificateAttributesResult',
    'GetScepProfileListDataScepChallengeResult',
    'GetScepProfileListDataScepChallengeDynamicChallengeResult',
    'GetScepProfileScepChallengeResult',
    'GetScepProfileScepChallengeDynamicChallengeResult',
    'GetScheduleListDataResult',
    'GetScheduleListDataScheduleTypeResult',
    'GetScheduleListDataScheduleTypeRecurringResult',
    'GetScheduleListDataScheduleTypeRecurringWeeklyResult',
    'GetScheduleScheduleTypeResult',
    'GetScheduleScheduleTypeRecurringResult',
    'GetScheduleScheduleTypeRecurringWeeklyResult',
    'GetSecurityRuleListDataResult',
    'GetSecurityRuleListDataProfileSettingResult',
    'GetSecurityRuleProfileSettingResult',
    'GetServiceConnectionBgpPeerResult',
    'GetServiceConnectionGroupListDataResult',
    'GetServiceConnectionListDataResult',
    'GetServiceConnectionListDataBgpPeerResult',
    'GetServiceConnectionListDataProtocolResult',
    'GetServiceConnectionListDataProtocolBgpResult',
    'GetServiceConnectionListDataQosResult',
    'GetServiceConnectionProtocolResult',
    'GetServiceConnectionProtocolBgpResult',
    'GetServiceConnectionQosResult',
    'GetServiceGroupListDataResult',
    'GetServiceListDataResult',
    'GetServiceListDataProtocolResult',
    'GetServiceListDataProtocolTcpResult',
    'GetServiceListDataProtocolTcpOverrideResult',
    'GetServiceListDataProtocolUdpResult',
    'GetServiceListDataProtocolUdpOverrideResult',
    'GetServiceProtocolResult',
    'GetServiceProtocolTcpResult',
    'GetServiceProtocolTcpOverrideResult',
    'GetServiceProtocolUdpResult',
    'GetServiceProtocolUdpOverrideResult',
    'GetSharedInfrastructureSettingsListDataResult',
    'GetSnippetListDataResult',
    'GetTacacsServerProfileListDataResult',
    'GetTacacsServerProfileListDataServerResult',
    'GetTacacsServerProfileServerResult',
    'GetTagListDataResult',
    'GetTlsServiceProfileListDataResult',
    'GetTlsServiceProfileListDataProtocolSettingsResult',
    'GetTlsServiceProfileProtocolSettingsResult',
    'GetTrafficSteeringRuleActionResult',
    'GetTrafficSteeringRuleActionForwardResult',
    'GetTrafficSteeringRuleListDataResult',
    'GetTrafficSteeringRuleListDataActionResult',
    'GetTrafficSteeringRuleListDataActionForwardResult',
    'GetTrustedCertificateAuthorityListDataResult',
    'GetUrlAccessProfileCredentialEnforcementResult',
    'GetUrlAccessProfileCredentialEnforcementModeResult',
    'GetUrlAccessProfileListDataResult',
    'GetUrlAccessProfileListDataCredentialEnforcementResult',
    'GetUrlAccessProfileListDataCredentialEnforcementModeResult',
    'GetUrlCategoryListDataResult',
    'GetUrlFilteringCategoryListDataResult',
    'GetVariableListDataResult',
    'GetVulnerabilityProtectionProfileListDataResult',
    'GetVulnerabilityProtectionProfileListDataRuleResult',
    'GetVulnerabilityProtectionProfileListDataRuleActionResult',
    'GetVulnerabilityProtectionProfileListDataRuleActionBlockIpResult',
    'GetVulnerabilityProtectionProfileListDataThreatExceptionResult',
    'GetVulnerabilityProtectionProfileListDataThreatExceptionActionResult',
    'GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIpResult',
    'GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIpResult',
    'GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttributeResult',
    'GetVulnerabilityProtectionProfileRuleResult',
    'GetVulnerabilityProtectionProfileRuleActionResult',
    'GetVulnerabilityProtectionProfileRuleActionBlockIpResult',
    'GetVulnerabilityProtectionProfileThreatExceptionResult',
    'GetVulnerabilityProtectionProfileThreatExceptionActionResult',
    'GetVulnerabilityProtectionProfileThreatExceptionActionBlockIpResult',
    'GetVulnerabilityProtectionProfileThreatExceptionExemptIpResult',
    'GetVulnerabilityProtectionProfileThreatExceptionTimeAttributeResult',
    'GetVulnerabilityProtectionSignaturesAffectedHostResult',
    'GetVulnerabilityProtectionSignaturesDefaultActionResult',
    'GetVulnerabilityProtectionSignaturesDefaultActionBlockIpResult',
    'GetVulnerabilityProtectionSignaturesListDataResult',
    'GetVulnerabilityProtectionSignaturesListDataAffectedHostResult',
    'GetVulnerabilityProtectionSignaturesListDataDefaultActionResult',
    'GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIpResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrConditionResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttributeResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult',
    'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetVulnerabilityProtectionSignaturesSignatureResult',
    'GetVulnerabilityProtectionSignaturesSignatureCombinationResult',
    'GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionResult',
    'GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionResult',
    'GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchResult',
    'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult',
    'GetWildfireAntiVirusProfileListDataResult',
    'GetWildfireAntiVirusProfileListDataMlavExceptionResult',
    'GetWildfireAntiVirusProfileListDataRuleResult',
    'GetWildfireAntiVirusProfileListDataThreatExceptionResult',
    'GetWildfireAntiVirusProfileMlavExceptionResult',
    'GetWildfireAntiVirusProfileRuleResult',
    'GetWildfireAntiVirusProfileThreatExceptionResult',
]

@pulumi.output_type
class AddressGroupDynamicValue(dict):
    def __init__(__self__, *,
                 filter: _builtins.str):
        """
        :param _builtins.str filter: Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        pulumi.set(__self__, "filter", filter)

    @_builtins.property
    @pulumi.getter
    def filter(self) -> _builtins.str:
        """
        Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        return pulumi.get(self, "filter")


@pulumi.output_type
class AntiSpywareProfileMicaEngineSpywareEnabledList(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "inlinePolicyAction":
            suggest = "inline_policy_action"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileMicaEngineSpywareEnabledList. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileMicaEngineSpywareEnabledList.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileMicaEngineSpywareEnabledList.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 inline_policy_action: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.str inline_policy_action: The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        :param _builtins.str name: The Name param.
        """
        if inline_policy_action is not None:
            pulumi.set(__self__, "inline_policy_action", inline_policy_action)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="inlinePolicyAction")
    def inline_policy_action(self) -> Optional[_builtins.str]:
        """
        The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        """
        return pulumi.get(self, "inline_policy_action")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class AntiSpywareProfileRule(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "packetCapture":
            suggest = "packet_capture"
        elif key == "threatName":
            suggest = "threat_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileRule. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileRule.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileRule.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional['outputs.AntiSpywareProfileRuleAction'] = None,
                 category: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 packet_capture: Optional[_builtins.str] = None,
                 severities: Optional[Sequence[_builtins.str]] = None,
                 threat_name: Optional[_builtins.str] = None):
        """
        :param 'AntiSpywareProfileRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param. String length must exceed 4 characters.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)
        if severities is not None:
            pulumi.set(__self__, "severities", severities)
        if threat_name is not None:
            pulumi.set(__self__, "threat_name", threat_name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional['outputs.AntiSpywareProfileRuleAction']:
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        """
        The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> Optional[_builtins.str]:
        """
        The ThreatName param. String length must exceed 4 characters.
        """
        return pulumi.get(self, "threat_name")


@pulumi.output_type
class AntiSpywareProfileRuleAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileRuleAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileRuleAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileRuleAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.AntiSpywareProfileRuleActionBlockIp'] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'AntiSpywareProfileRuleActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.AntiSpywareProfileRuleActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class AntiSpywareProfileRuleActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileRuleActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileRuleActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileRuleActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class AntiSpywareProfileThreatException(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "exemptIps":
            suggest = "exempt_ips"
        elif key == "packetCapture":
            suggest = "packet_capture"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileThreatException. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileThreatException.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileThreatException.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional['outputs.AntiSpywareProfileThreatExceptionAction'] = None,
                 exempt_ips: Optional[Sequence['outputs.AntiSpywareProfileThreatExceptionExemptIp']] = None,
                 name: Optional[_builtins.str] = None,
                 notes: Optional[_builtins.str] = None,
                 packet_capture: Optional[_builtins.str] = None):
        """
        :param 'AntiSpywareProfileThreatExceptionActionArgs' action: The Action param.
        :param Sequence['AntiSpywareProfileThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if exempt_ips is not None:
            pulumi.set(__self__, "exempt_ips", exempt_ips)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if notes is not None:
            pulumi.set(__self__, "notes", notes)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional['outputs.AntiSpywareProfileThreatExceptionAction']:
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Optional[Sequence['outputs.AntiSpywareProfileThreatExceptionExemptIp']]:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> Optional[_builtins.str]:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class AntiSpywareProfileThreatExceptionAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileThreatExceptionAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileThreatExceptionAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileThreatExceptionAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.AntiSpywareProfileThreatExceptionActionBlockIp'] = None,
                 default: Optional[_builtins.bool] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'AntiSpywareProfileThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool default: The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.AntiSpywareProfileThreatExceptionActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> Optional[_builtins.bool]:
        """
        The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class AntiSpywareProfileThreatExceptionActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareProfileThreatExceptionActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareProfileThreatExceptionActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareProfileThreatExceptionActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class AntiSpywareProfileThreatExceptionExemptIp(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class AntiSpywareSignatureDefaultAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureDefaultAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureDefaultAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureDefaultAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.AntiSpywareSignatureDefaultActionBlockIp'] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'AntiSpywareSignatureDefaultActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.AntiSpywareSignatureDefaultActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class AntiSpywareSignatureDefaultActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureDefaultActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureDefaultActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureDefaultActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class AntiSpywareSignatureSignature(dict):
    def __init__(__self__, *,
                 combination: Optional['outputs.AntiSpywareSignatureSignatureCombination'] = None,
                 standards: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandard']] = None):
        """
        :param 'AntiSpywareSignatureSignatureCombinationArgs' combination: The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
        :param Sequence['AntiSpywareSignatureSignatureStandardArgs'] standards: The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        if combination is not None:
            pulumi.set(__self__, "combination", combination)
        if standards is not None:
            pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> Optional['outputs.AntiSpywareSignatureSignatureCombination']:
        """
        The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandard']]:
        """
        The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class AntiSpywareSignatureSignatureCombination(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "andConditions":
            suggest = "and_conditions"
        elif key == "orderFree":
            suggest = "order_free"
        elif key == "timeAttribute":
            suggest = "time_attribute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureCombination. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureCombination.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureCombination.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 and_conditions: Optional[Sequence['outputs.AntiSpywareSignatureSignatureCombinationAndCondition']] = None,
                 order_free: Optional[_builtins.bool] = None,
                 time_attribute: Optional['outputs.AntiSpywareSignatureSignatureCombinationTimeAttribute'] = None):
        """
        :param Sequence['AntiSpywareSignatureSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'AntiSpywareSignatureSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        if and_conditions is not None:
            pulumi.set(__self__, "and_conditions", and_conditions)
        if order_free is not None:
            pulumi.set(__self__, "order_free", order_free)
        if time_attribute is not None:
            pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureCombinationAndCondition']]:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> Optional[_builtins.bool]:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> Optional['outputs.AntiSpywareSignatureSignatureCombinationTimeAttribute']:
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class AntiSpywareSignatureSignatureCombinationAndCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "orConditions":
            suggest = "or_conditions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureCombinationAndCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureCombinationAndCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureCombinationAndCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 or_conditions: Optional[Sequence['outputs.AntiSpywareSignatureSignatureCombinationAndConditionOrCondition']] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['AntiSpywareSignatureSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if or_conditions is not None:
            pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureCombinationAndConditionOrCondition']]:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class AntiSpywareSignatureSignatureCombinationAndConditionOrCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "threatId":
            suggest = "threat_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureCombinationAndConditionOrCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureCombinationAndConditionOrCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureCombinationAndConditionOrCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 threat_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if threat_id is not None:
            pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> Optional[_builtins.str]:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class AntiSpywareSignatureSignatureCombinationTimeAttribute(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureCombinationTimeAttribute. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureCombinationTimeAttribute.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureCombinationTimeAttribute.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 interval: Optional[_builtins.int] = None,
                 threshold: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        if interval is not None:
            pulumi.set(__self__, "interval", interval)
        if threshold is not None:
            pulumi.set(__self__, "threshold", threshold)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> Optional[_builtins.int]:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> Optional[_builtins.int]:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandard(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "andConditions":
            suggest = "and_conditions"
        elif key == "orderFree":
            suggest = "order_free"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureStandard. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureStandard.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureStandard.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 and_conditions: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndCondition']] = None,
                 comment: Optional[_builtins.str] = None,
                 order_free: Optional[_builtins.bool] = None,
                 scope: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "name", name)
        if and_conditions is not None:
            pulumi.set(__self__, "and_conditions", and_conditions)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if order_free is not None:
            pulumi.set(__self__, "order_free", order_free)
        if scope is not None:
            pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndCondition']]:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[_builtins.str]:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> Optional[_builtins.bool]:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> Optional[_builtins.str]:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "orConditions":
            suggest = "or_conditions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureStandardAndCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureStandardAndCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureStandardAndCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 or_conditions: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrCondition']] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if or_conditions is not None:
            pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrCondition']]:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrCondition(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 operator: Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator'] = None):
        """
        :param _builtins.str name: The Name param.
        :param 'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if operator is not None:
            pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator']:
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "equalTo":
            suggest = "equal_to"
        elif key == "greaterThan":
            suggest = "greater_than"
        elif key == "lessThan":
            suggest = "less_than"
        elif key == "patternMatch":
            suggest = "pattern_match"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperator.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 equal_to: Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo'] = None,
                 greater_than: Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan'] = None,
                 less_than: Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan'] = None,
                 pattern_match: Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch'] = None):
        """
        :param 'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        if equal_to is not None:
            pulumi.set(__self__, "equal_to", equal_to)
        if greater_than is not None:
            pulumi.set(__self__, "greater_than", greater_than)
        if less_than is not None:
            pulumi.set(__self__, "less_than", less_than)
        if pattern_match is not None:
            pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo']:
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan']:
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan']:
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> Optional['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch']:
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualTo(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 negate: Optional[_builtins.bool] = None,
                 qualifiers: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThan(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThan(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatch(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 negate: Optional[_builtins.bool] = None,
                 pattern: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier']] = None):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if pattern is not None:
            pulumi.set(__self__, "pattern", pattern)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> Optional[_builtins.str]:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class AntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class ApplicationDefault(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "identByIcmp6Type":
            suggest = "ident_by_icmp6_type"
        elif key == "identByIcmpType":
            suggest = "ident_by_icmp_type"
        elif key == "identByIpProtocol":
            suggest = "ident_by_ip_protocol"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApplicationDefault. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApplicationDefault.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApplicationDefault.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ident_by_icmp6_type: Optional['outputs.ApplicationDefaultIdentByIcmp6Type'] = None,
                 ident_by_icmp_type: Optional['outputs.ApplicationDefaultIdentByIcmpType'] = None,
                 ident_by_ip_protocol: Optional[_builtins.str] = None,
                 ports: Optional[Sequence[_builtins.str]] = None):
        """
        :param 'ApplicationDefaultIdentByIcmp6TypeArgs' ident_by_icmp6_type: The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        :param 'ApplicationDefaultIdentByIcmpTypeArgs' ident_by_icmp_type: The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        :param _builtins.str ident_by_ip_protocol: The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        :param Sequence[_builtins.str] ports: The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        """
        if ident_by_icmp6_type is not None:
            pulumi.set(__self__, "ident_by_icmp6_type", ident_by_icmp6_type)
        if ident_by_icmp_type is not None:
            pulumi.set(__self__, "ident_by_icmp_type", ident_by_icmp_type)
        if ident_by_ip_protocol is not None:
            pulumi.set(__self__, "ident_by_ip_protocol", ident_by_ip_protocol)
        if ports is not None:
            pulumi.set(__self__, "ports", ports)

    @_builtins.property
    @pulumi.getter(name="identByIcmp6Type")
    def ident_by_icmp6_type(self) -> Optional['outputs.ApplicationDefaultIdentByIcmp6Type']:
        """
        The IdentByIcmp6Type param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        """
        return pulumi.get(self, "ident_by_icmp6_type")

    @_builtins.property
    @pulumi.getter(name="identByIcmpType")
    def ident_by_icmp_type(self) -> Optional['outputs.ApplicationDefaultIdentByIcmpType']:
        """
        The IdentByIcmpType param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        """
        return pulumi.get(self, "ident_by_icmp_type")

    @_builtins.property
    @pulumi.getter(name="identByIpProtocol")
    def ident_by_ip_protocol(self) -> Optional[_builtins.str]:
        """
        The IdentByIpProtocol param. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        """
        return pulumi.get(self, "ident_by_ip_protocol")

    @_builtins.property
    @pulumi.getter
    def ports(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters. Ensure that only one of the following is specified: `ident_by_icmp6_type`, `ident_by_icmp_type`, `ident_by_ip_protocol`, `port`
        """
        return pulumi.get(self, "ports")


@pulumi.output_type
class ApplicationDefaultIdentByIcmp6Type(dict):
    def __init__(__self__, *,
                 type: _builtins.str,
                 code: Optional[_builtins.str] = None):
        """
        :param _builtins.str type: The Type param.
        :param _builtins.str code: The Code param.
        """
        pulumi.set(__self__, "type", type)
        if code is not None:
            pulumi.set(__self__, "code", code)

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def code(self) -> Optional[_builtins.str]:
        """
        The Code param.
        """
        return pulumi.get(self, "code")


@pulumi.output_type
class ApplicationDefaultIdentByIcmpType(dict):
    def __init__(__self__, *,
                 type: _builtins.str,
                 code: Optional[_builtins.str] = None):
        """
        :param _builtins.str type: The Type param.
        :param _builtins.str code: The Code param.
        """
        pulumi.set(__self__, "type", type)
        if code is not None:
            pulumi.set(__self__, "code", code)

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def code(self) -> Optional[_builtins.str]:
        """
        The Code param.
        """
        return pulumi.get(self, "code")


@pulumi.output_type
class ApplicationFilterTagging(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "noTag":
            suggest = "no_tag"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApplicationFilterTagging. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApplicationFilterTagging.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApplicationFilterTagging.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 no_tag: Optional[_builtins.bool] = None,
                 tags: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.bool no_tag: The NoTag param. Ensure that only one of the following is specified: `no_tag`, `tag`
        :param Sequence[_builtins.str] tags: The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters. Ensure that only one of the following is specified: `no_tag`, `tag`
        """
        if no_tag is not None:
            pulumi.set(__self__, "no_tag", no_tag)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="noTag")
    def no_tag(self) -> Optional[_builtins.bool]:
        """
        The NoTag param. Ensure that only one of the following is specified: `no_tag`, `tag`
        """
        return pulumi.get(self, "no_tag")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters. Ensure that only one of the following is specified: `no_tag`, `tag`
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class ApplicationSignature(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "andConditions":
            suggest = "and_conditions"
        elif key == "orderFree":
            suggest = "order_free"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApplicationSignature. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApplicationSignature.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApplicationSignature.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 and_conditions: Optional[Sequence['outputs.ApplicationSignatureAndCondition']] = None,
                 comment: Optional[_builtins.str] = None,
                 order_free: Optional[_builtins.bool] = None,
                 scope: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param Sequence['ApplicationSignatureAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        pulumi.set(__self__, "name", name)
        if and_conditions is not None:
            pulumi.set(__self__, "and_conditions", and_conditions)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if order_free is not None:
            pulumi.set(__self__, "order_free", order_free)
        if scope is not None:
            pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Optional[Sequence['outputs.ApplicationSignatureAndCondition']]:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[_builtins.str]:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> Optional[_builtins.bool]:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> Optional[_builtins.str]:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class ApplicationSignatureAndCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "orConditions":
            suggest = "or_conditions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApplicationSignatureAndCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApplicationSignatureAndCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApplicationSignatureAndCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Optional[Sequence['outputs.ApplicationSignatureAndConditionOrCondition']] = None):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param Sequence['ApplicationSignatureAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        if or_conditions is not None:
            pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Optional[Sequence['outputs.ApplicationSignatureAndConditionOrCondition']]:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class ApplicationSignatureAndConditionOrCondition(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.ApplicationSignatureAndConditionOrConditionOperator'):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param 'ApplicationSignatureAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.ApplicationSignatureAndConditionOrConditionOperator':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperator(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "equalTo":
            suggest = "equal_to"
        elif key == "greaterThan":
            suggest = "greater_than"
        elif key == "lessThan":
            suggest = "less_than"
        elif key == "patternMatch":
            suggest = "pattern_match"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ApplicationSignatureAndConditionOrConditionOperator. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ApplicationSignatureAndConditionOrConditionOperator.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ApplicationSignatureAndConditionOrConditionOperator.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 equal_to: Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorEqualTo'] = None,
                 greater_than: Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThan'] = None,
                 less_than: Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThan'] = None,
                 pattern_match: Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatch'] = None):
        """
        :param 'ApplicationSignatureAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        :param 'ApplicationSignatureAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        :param 'ApplicationSignatureAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        :param 'ApplicationSignatureAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        """
        if equal_to is not None:
            pulumi.set(__self__, "equal_to", equal_to)
        if greater_than is not None:
            pulumi.set(__self__, "greater_than", greater_than)
        if less_than is not None:
            pulumi.set(__self__, "less_than", less_than)
        if pattern_match is not None:
            pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorEqualTo']:
        """
        The EqualTo param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThan']:
        """
        The GreaterThan param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThan']:
        """
        The LessThan param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> Optional['outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatch']:
        """
        The PatternMatch param. Ensure that only one of the following is specified: `equal_to`, `greater_than`, `less_than`, `pattern_match`
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorEqualTo(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 value: _builtins.str,
                 mask: Optional[_builtins.str] = None,
                 position: Optional[_builtins.str] = None):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.str value: The Value param. String length must not exceed 10 characters.
        :param _builtins.str mask: 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        :param _builtins.str position: The Position param. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "value", value)
        if mask is not None:
            pulumi.set(__self__, "mask", mask)
        if position is not None:
            pulumi.set(__self__, "position", position)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param. String length must not exceed 10 characters.
        """
        return pulumi.get(self, "value")

    @_builtins.property
    @pulumi.getter
    def mask(self) -> Optional[_builtins.str]:
        """
        4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        """
        return pulumi.get(self, "mask")

    @_builtins.property
    @pulumi.getter
    def position(self) -> Optional[_builtins.str]:
        """
        The Position param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "position")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorGreaterThan(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 value: _builtins.int,
                 qualifiers: Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier']] = None):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        :param Sequence['ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "value", value)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifier(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorLessThan(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 value: _builtins.int,
                 qualifiers: Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier']] = None):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        :param Sequence['ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "value", value)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorLessThanQualifier(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorPatternMatch(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 pattern: _builtins.str,
                 qualifiers: Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier']] = None):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param _builtins.str pattern: The Pattern param. String length must not exceed 127 characters.
        :param Sequence['ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "pattern", pattern)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class ApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifier(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class AuthenticationProfileLockout(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "failedAttempts":
            suggest = "failed_attempts"
        elif key == "lockoutTime":
            suggest = "lockout_time"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileLockout. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileLockout.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileLockout.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 failed_attempts: Optional[_builtins.int] = None,
                 lockout_time: Optional[_builtins.int] = None):
        """
        :param _builtins.int failed_attempts: The FailedAttempts param. Value must be between 0 and 10.
        :param _builtins.int lockout_time: The LockoutTime param. Value must be between 0 and 60.
        """
        if failed_attempts is not None:
            pulumi.set(__self__, "failed_attempts", failed_attempts)
        if lockout_time is not None:
            pulumi.set(__self__, "lockout_time", lockout_time)

    @_builtins.property
    @pulumi.getter(name="failedAttempts")
    def failed_attempts(self) -> Optional[_builtins.int]:
        """
        The FailedAttempts param. Value must be between 0 and 10.
        """
        return pulumi.get(self, "failed_attempts")

    @_builtins.property
    @pulumi.getter(name="lockoutTime")
    def lockout_time(self) -> Optional[_builtins.int]:
        """
        The LockoutTime param. Value must be between 0 and 60.
        """
        return pulumi.get(self, "lockout_time")


@pulumi.output_type
class AuthenticationProfileMethod(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localDatabase":
            suggest = "local_database"
        elif key == "samlIdp":
            suggest = "saml_idp"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethod. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethod.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethod.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 cloud: Optional['outputs.AuthenticationProfileMethodCloud'] = None,
                 kerberos: Optional['outputs.AuthenticationProfileMethodKerberos'] = None,
                 ldap: Optional['outputs.AuthenticationProfileMethodLdap'] = None,
                 local_database: Optional[_builtins.bool] = None,
                 radius: Optional['outputs.AuthenticationProfileMethodRadius'] = None,
                 saml_idp: Optional['outputs.AuthenticationProfileMethodSamlIdp'] = None,
                 tacplus: Optional['outputs.AuthenticationProfileMethodTacplus'] = None):
        """
        :param 'AuthenticationProfileMethodCloudArgs' cloud: The Cloud param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param 'AuthenticationProfileMethodKerberosArgs' kerberos: The Kerberos param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param 'AuthenticationProfileMethodLdapArgs' ldap: The Ldap param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param _builtins.bool local_database: The LocalDatabase param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param 'AuthenticationProfileMethodRadiusArgs' radius: The Radius param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param 'AuthenticationProfileMethodSamlIdpArgs' saml_idp: The SamlIdp param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        :param 'AuthenticationProfileMethodTacplusArgs' tacplus: The Tacplus param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        if cloud is not None:
            pulumi.set(__self__, "cloud", cloud)
        if kerberos is not None:
            pulumi.set(__self__, "kerberos", kerberos)
        if ldap is not None:
            pulumi.set(__self__, "ldap", ldap)
        if local_database is not None:
            pulumi.set(__self__, "local_database", local_database)
        if radius is not None:
            pulumi.set(__self__, "radius", radius)
        if saml_idp is not None:
            pulumi.set(__self__, "saml_idp", saml_idp)
        if tacplus is not None:
            pulumi.set(__self__, "tacplus", tacplus)

    @_builtins.property
    @pulumi.getter
    def cloud(self) -> Optional['outputs.AuthenticationProfileMethodCloud']:
        """
        The Cloud param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "cloud")

    @_builtins.property
    @pulumi.getter
    def kerberos(self) -> Optional['outputs.AuthenticationProfileMethodKerberos']:
        """
        The Kerberos param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "kerberos")

    @_builtins.property
    @pulumi.getter
    def ldap(self) -> Optional['outputs.AuthenticationProfileMethodLdap']:
        """
        The Ldap param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "ldap")

    @_builtins.property
    @pulumi.getter(name="localDatabase")
    def local_database(self) -> Optional[_builtins.bool]:
        """
        The LocalDatabase param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "local_database")

    @_builtins.property
    @pulumi.getter
    def radius(self) -> Optional['outputs.AuthenticationProfileMethodRadius']:
        """
        The Radius param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "radius")

    @_builtins.property
    @pulumi.getter(name="samlIdp")
    def saml_idp(self) -> Optional['outputs.AuthenticationProfileMethodSamlIdp']:
        """
        The SamlIdp param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "saml_idp")

    @_builtins.property
    @pulumi.getter
    def tacplus(self) -> Optional['outputs.AuthenticationProfileMethodTacplus']:
        """
        The Tacplus param. Ensure that only one of the following is specified: `cloud`, `kerberos`, `ldap`, `local_database`, `radius`, `saml_idp`, `tacplus`
        """
        return pulumi.get(self, "tacplus")


@pulumi.output_type
class AuthenticationProfileMethodCloud(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "profileName":
            suggest = "profile_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodCloud. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodCloud.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodCloud.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 profile_name: Optional[_builtins.str] = None):
        """
        :param _builtins.str profile_name: The tenant profile name.
        """
        if profile_name is not None:
            pulumi.set(__self__, "profile_name", profile_name)

    @_builtins.property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> Optional[_builtins.str]:
        """
        The tenant profile name.
        """
        return pulumi.get(self, "profile_name")


@pulumi.output_type
class AuthenticationProfileMethodKerberos(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "serverProfile":
            suggest = "server_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodKerberos. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodKerberos.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodKerberos.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 realm: Optional[_builtins.str] = None,
                 server_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.str realm: The Realm param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        if realm is not None:
            pulumi.set(__self__, "realm", realm)
        if server_profile is not None:
            pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def realm(self) -> Optional[_builtins.str]:
        """
        The Realm param.
        """
        return pulumi.get(self, "realm")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> Optional[_builtins.str]:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class AuthenticationProfileMethodLdap(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "loginAttribute":
            suggest = "login_attribute"
        elif key == "passwdExpDays":
            suggest = "passwd_exp_days"
        elif key == "serverProfile":
            suggest = "server_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodLdap. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodLdap.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodLdap.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 login_attribute: Optional[_builtins.str] = None,
                 passwd_exp_days: Optional[_builtins.int] = None,
                 server_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.str login_attribute: The LoginAttribute param.
        :param _builtins.int passwd_exp_days: The PasswdExpDays param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        if login_attribute is not None:
            pulumi.set(__self__, "login_attribute", login_attribute)
        if passwd_exp_days is not None:
            pulumi.set(__self__, "passwd_exp_days", passwd_exp_days)
        if server_profile is not None:
            pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="loginAttribute")
    def login_attribute(self) -> Optional[_builtins.str]:
        """
        The LoginAttribute param.
        """
        return pulumi.get(self, "login_attribute")

    @_builtins.property
    @pulumi.getter(name="passwdExpDays")
    def passwd_exp_days(self) -> Optional[_builtins.int]:
        """
        The PasswdExpDays param.
        """
        return pulumi.get(self, "passwd_exp_days")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> Optional[_builtins.str]:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class AuthenticationProfileMethodRadius(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "serverProfile":
            suggest = "server_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodRadius. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodRadius.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodRadius.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 checkgroup: Optional[_builtins.bool] = None,
                 server_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        if checkgroup is not None:
            pulumi.set(__self__, "checkgroup", checkgroup)
        if server_profile is not None:
            pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> Optional[_builtins.bool]:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> Optional[_builtins.str]:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class AuthenticationProfileMethodSamlIdp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "attributeNameUsergroup":
            suggest = "attribute_name_usergroup"
        elif key == "attributeNameUsername":
            suggest = "attribute_name_username"
        elif key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "enableSingleLogout":
            suggest = "enable_single_logout"
        elif key == "requestSigningCertificate":
            suggest = "request_signing_certificate"
        elif key == "serverProfile":
            suggest = "server_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodSamlIdp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodSamlIdp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodSamlIdp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 attribute_name_usergroup: Optional[_builtins.str] = None,
                 attribute_name_username: Optional[_builtins.str] = None,
                 certificate_profile: Optional[_builtins.str] = None,
                 enable_single_logout: Optional[_builtins.bool] = None,
                 request_signing_certificate: Optional[_builtins.str] = None,
                 server_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.str attribute_name_usergroup: The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        :param _builtins.str attribute_name_username: The AttributeNameUsername param. String length must be between 1 and 63 characters.
        :param _builtins.str certificate_profile: The CertificateProfile param. String length must not exceed 31 characters.
        :param _builtins.bool enable_single_logout: The EnableSingleLogout param.
        :param _builtins.str request_signing_certificate: The RequestSigningCertificate param. String length must not exceed 64 characters.
        :param _builtins.str server_profile: The ServerProfile param. String length must not exceed 63 characters.
        """
        if attribute_name_usergroup is not None:
            pulumi.set(__self__, "attribute_name_usergroup", attribute_name_usergroup)
        if attribute_name_username is not None:
            pulumi.set(__self__, "attribute_name_username", attribute_name_username)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if enable_single_logout is not None:
            pulumi.set(__self__, "enable_single_logout", enable_single_logout)
        if request_signing_certificate is not None:
            pulumi.set(__self__, "request_signing_certificate", request_signing_certificate)
        if server_profile is not None:
            pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="attributeNameUsergroup")
    def attribute_name_usergroup(self) -> Optional[_builtins.str]:
        """
        The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_usergroup")

    @_builtins.property
    @pulumi.getter(name="attributeNameUsername")
    def attribute_name_username(self) -> Optional[_builtins.str]:
        """
        The AttributeNameUsername param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_username")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        The CertificateProfile param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="enableSingleLogout")
    def enable_single_logout(self) -> Optional[_builtins.bool]:
        """
        The EnableSingleLogout param.
        """
        return pulumi.get(self, "enable_single_logout")

    @_builtins.property
    @pulumi.getter(name="requestSigningCertificate")
    def request_signing_certificate(self) -> Optional[_builtins.str]:
        """
        The RequestSigningCertificate param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "request_signing_certificate")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> Optional[_builtins.str]:
        """
        The ServerProfile param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class AuthenticationProfileMethodTacplus(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "serverProfile":
            suggest = "server_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMethodTacplus. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMethodTacplus.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMethodTacplus.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 checkgroup: Optional[_builtins.bool] = None,
                 server_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        if checkgroup is not None:
            pulumi.set(__self__, "checkgroup", checkgroup)
        if server_profile is not None:
            pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> Optional[_builtins.bool]:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> Optional[_builtins.str]:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class AuthenticationProfileMultiFactorAuth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "mfaEnable":
            suggest = "mfa_enable"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileMultiFactorAuth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileMultiFactorAuth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileMultiFactorAuth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 factors: Optional[Sequence[_builtins.str]] = None,
                 mfa_enable: Optional[_builtins.bool] = None):
        """
        :param Sequence[_builtins.str] factors: The Factors param.
        :param _builtins.bool mfa_enable: The MfaEnable param.
        """
        if factors is not None:
            pulumi.set(__self__, "factors", factors)
        if mfa_enable is not None:
            pulumi.set(__self__, "mfa_enable", mfa_enable)

    @_builtins.property
    @pulumi.getter
    def factors(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Factors param.
        """
        return pulumi.get(self, "factors")

    @_builtins.property
    @pulumi.getter(name="mfaEnable")
    def mfa_enable(self) -> Optional[_builtins.bool]:
        """
        The MfaEnable param.
        """
        return pulumi.get(self, "mfa_enable")


@pulumi.output_type
class AuthenticationProfileSingleSignOn(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "kerberosKeytab":
            suggest = "kerberos_keytab"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AuthenticationProfileSingleSignOn. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AuthenticationProfileSingleSignOn.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AuthenticationProfileSingleSignOn.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 kerberos_keytab: Optional[_builtins.str] = None,
                 realm: Optional[_builtins.str] = None):
        """
        :param _builtins.str kerberos_keytab: The KerberosKeytab param. String length must not exceed 8192 characters.
        :param _builtins.str realm: The Realm param. String length must not exceed 127 characters.
        """
        if kerberos_keytab is not None:
            pulumi.set(__self__, "kerberos_keytab", kerberos_keytab)
        if realm is not None:
            pulumi.set(__self__, "realm", realm)

    @_builtins.property
    @pulumi.getter(name="kerberosKeytab")
    def kerberos_keytab(self) -> Optional[_builtins.str]:
        """
        The KerberosKeytab param. String length must not exceed 8192 characters.
        """
        return pulumi.get(self, "kerberos_keytab")

    @_builtins.property
    @pulumi.getter
    def realm(self) -> Optional[_builtins.str]:
        """
        The Realm param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "realm")


@pulumi.output_type
class CertificateProfileCaCertificate(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "defaultOcspUrl":
            suggest = "default_ocsp_url"
        elif key == "ocspVerifyCert":
            suggest = "ocsp_verify_cert"
        elif key == "templateName":
            suggest = "template_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CertificateProfileCaCertificate. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CertificateProfileCaCertificate.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CertificateProfileCaCertificate.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 default_ocsp_url: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 ocsp_verify_cert: Optional[_builtins.str] = None,
                 template_name: Optional[_builtins.str] = None):
        """
        :param _builtins.str default_ocsp_url: The DefaultOcspUrl param.
        :param _builtins.str name: The Name param.
        :param _builtins.str ocsp_verify_cert: The OcspVerifyCert param.
        :param _builtins.str template_name: The TemplateName param.
        """
        if default_ocsp_url is not None:
            pulumi.set(__self__, "default_ocsp_url", default_ocsp_url)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if ocsp_verify_cert is not None:
            pulumi.set(__self__, "ocsp_verify_cert", ocsp_verify_cert)
        if template_name is not None:
            pulumi.set(__self__, "template_name", template_name)

    @_builtins.property
    @pulumi.getter(name="defaultOcspUrl")
    def default_ocsp_url(self) -> Optional[_builtins.str]:
        """
        The DefaultOcspUrl param.
        """
        return pulumi.get(self, "default_ocsp_url")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="ocspVerifyCert")
    def ocsp_verify_cert(self) -> Optional[_builtins.str]:
        """
        The OcspVerifyCert param.
        """
        return pulumi.get(self, "ocsp_verify_cert")

    @_builtins.property
    @pulumi.getter(name="templateName")
    def template_name(self) -> Optional[_builtins.str]:
        """
        The TemplateName param.
        """
        return pulumi.get(self, "template_name")


@pulumi.output_type
class CertificateProfileUsernameField(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "subjectAlt":
            suggest = "subject_alt"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CertificateProfileUsernameField. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CertificateProfileUsernameField.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CertificateProfileUsernameField.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 subject: Optional[_builtins.str] = None,
                 subject_alt: Optional[_builtins.str] = None):
        """
        :param _builtins.str subject: The Subject param. String must be one of these: `"common-name"`.
        :param _builtins.str subject_alt: The SubjectAlt param. String must be one of these: `"email"`.
        """
        if subject is not None:
            pulumi.set(__self__, "subject", subject)
        if subject_alt is not None:
            pulumi.set(__self__, "subject_alt", subject_alt)

    @_builtins.property
    @pulumi.getter
    def subject(self) -> Optional[_builtins.str]:
        """
        The Subject param. String must be one of these: `"common-name"`.
        """
        return pulumi.get(self, "subject")

    @_builtins.property
    @pulumi.getter(name="subjectAlt")
    def subject_alt(self) -> Optional[_builtins.str]:
        """
        The SubjectAlt param. String must be one of these: `"email"`.
        """
        return pulumi.get(self, "subject_alt")


@pulumi.output_type
class DecryptionProfileSslForwardProxy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "autoIncludeAltname":
            suggest = "auto_include_altname"
        elif key == "blockClientCert":
            suggest = "block_client_cert"
        elif key == "blockExpiredCertificate":
            suggest = "block_expired_certificate"
        elif key == "blockTimeoutCert":
            suggest = "block_timeout_cert"
        elif key == "blockTls13DowngradeNoResource":
            suggest = "block_tls13_downgrade_no_resource"
        elif key == "blockUnknownCert":
            suggest = "block_unknown_cert"
        elif key == "blockUnsupportedCipher":
            suggest = "block_unsupported_cipher"
        elif key == "blockUnsupportedVersion":
            suggest = "block_unsupported_version"
        elif key == "blockUntrustedIssuer":
            suggest = "block_untrusted_issuer"
        elif key == "restrictCertExts":
            suggest = "restrict_cert_exts"
        elif key == "stripAlpn":
            suggest = "strip_alpn"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DecryptionProfileSslForwardProxy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DecryptionProfileSslForwardProxy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DecryptionProfileSslForwardProxy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 auto_include_altname: Optional[_builtins.bool] = None,
                 block_client_cert: Optional[_builtins.bool] = None,
                 block_expired_certificate: Optional[_builtins.bool] = None,
                 block_timeout_cert: Optional[_builtins.bool] = None,
                 block_tls13_downgrade_no_resource: Optional[_builtins.bool] = None,
                 block_unknown_cert: Optional[_builtins.bool] = None,
                 block_unsupported_cipher: Optional[_builtins.bool] = None,
                 block_unsupported_version: Optional[_builtins.bool] = None,
                 block_untrusted_issuer: Optional[_builtins.bool] = None,
                 restrict_cert_exts: Optional[_builtins.bool] = None,
                 strip_alpn: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool auto_include_altname: The AutoIncludeAltname param. Default: `false`.
        :param _builtins.bool block_client_cert: The BlockClientCert param. Default: `false`.
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_timeout_cert: The BlockTimeoutCert param. Default: `false`.
        :param _builtins.bool block_tls13_downgrade_no_resource: The BlockTls13DowngradeNoResource param. Default: `false`.
        :param _builtins.bool block_unknown_cert: The BlockUnknownCert param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        :param _builtins.bool restrict_cert_exts: The RestrictCertExts param. Default: `false`.
        :param _builtins.bool strip_alpn: The StripAlpn param. Default: `false`.
        """
        if auto_include_altname is not None:
            pulumi.set(__self__, "auto_include_altname", auto_include_altname)
        if block_client_cert is not None:
            pulumi.set(__self__, "block_client_cert", block_client_cert)
        if block_expired_certificate is not None:
            pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        if block_timeout_cert is not None:
            pulumi.set(__self__, "block_timeout_cert", block_timeout_cert)
        if block_tls13_downgrade_no_resource is not None:
            pulumi.set(__self__, "block_tls13_downgrade_no_resource", block_tls13_downgrade_no_resource)
        if block_unknown_cert is not None:
            pulumi.set(__self__, "block_unknown_cert", block_unknown_cert)
        if block_unsupported_cipher is not None:
            pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        if block_unsupported_version is not None:
            pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)
        if block_untrusted_issuer is not None:
            pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)
        if restrict_cert_exts is not None:
            pulumi.set(__self__, "restrict_cert_exts", restrict_cert_exts)
        if strip_alpn is not None:
            pulumi.set(__self__, "strip_alpn", strip_alpn)

    @_builtins.property
    @pulumi.getter(name="autoIncludeAltname")
    def auto_include_altname(self) -> Optional[_builtins.bool]:
        """
        The AutoIncludeAltname param. Default: `false`.
        """
        return pulumi.get(self, "auto_include_altname")

    @_builtins.property
    @pulumi.getter(name="blockClientCert")
    def block_client_cert(self) -> Optional[_builtins.bool]:
        """
        The BlockClientCert param. Default: `false`.
        """
        return pulumi.get(self, "block_client_cert")

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> Optional[_builtins.bool]:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockTimeoutCert")
    def block_timeout_cert(self) -> Optional[_builtins.bool]:
        """
        The BlockTimeoutCert param. Default: `false`.
        """
        return pulumi.get(self, "block_timeout_cert")

    @_builtins.property
    @pulumi.getter(name="blockTls13DowngradeNoResource")
    def block_tls13_downgrade_no_resource(self) -> Optional[_builtins.bool]:
        """
        The BlockTls13DowngradeNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_tls13_downgrade_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnknownCert")
    def block_unknown_cert(self) -> Optional[_builtins.bool]:
        """
        The BlockUnknownCert param. Default: `false`.
        """
        return pulumi.get(self, "block_unknown_cert")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> Optional[_builtins.bool]:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> Optional[_builtins.bool]:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> Optional[_builtins.bool]:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")

    @_builtins.property
    @pulumi.getter(name="restrictCertExts")
    def restrict_cert_exts(self) -> Optional[_builtins.bool]:
        """
        The RestrictCertExts param. Default: `false`.
        """
        return pulumi.get(self, "restrict_cert_exts")

    @_builtins.property
    @pulumi.getter(name="stripAlpn")
    def strip_alpn(self) -> Optional[_builtins.bool]:
        """
        The StripAlpn param. Default: `false`.
        """
        return pulumi.get(self, "strip_alpn")


@pulumi.output_type
class DecryptionProfileSslInboundProxy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIfHsmUnavailable":
            suggest = "block_if_hsm_unavailable"
        elif key == "blockIfNoResource":
            suggest = "block_if_no_resource"
        elif key == "blockUnsupportedCipher":
            suggest = "block_unsupported_cipher"
        elif key == "blockUnsupportedVersion":
            suggest = "block_unsupported_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DecryptionProfileSslInboundProxy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DecryptionProfileSslInboundProxy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DecryptionProfileSslInboundProxy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 block_if_hsm_unavailable: Optional[_builtins.bool] = None,
                 block_if_no_resource: Optional[_builtins.bool] = None,
                 block_unsupported_cipher: Optional[_builtins.bool] = None,
                 block_unsupported_version: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool block_if_hsm_unavailable: The BlockIfHsmUnavailable param. Default: `false`.
        :param _builtins.bool block_if_no_resource: The BlockIfNoResource param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        """
        if block_if_hsm_unavailable is not None:
            pulumi.set(__self__, "block_if_hsm_unavailable", block_if_hsm_unavailable)
        if block_if_no_resource is not None:
            pulumi.set(__self__, "block_if_no_resource", block_if_no_resource)
        if block_unsupported_cipher is not None:
            pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        if block_unsupported_version is not None:
            pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)

    @_builtins.property
    @pulumi.getter(name="blockIfHsmUnavailable")
    def block_if_hsm_unavailable(self) -> Optional[_builtins.bool]:
        """
        The BlockIfHsmUnavailable param. Default: `false`.
        """
        return pulumi.get(self, "block_if_hsm_unavailable")

    @_builtins.property
    @pulumi.getter(name="blockIfNoResource")
    def block_if_no_resource(self) -> Optional[_builtins.bool]:
        """
        The BlockIfNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_if_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> Optional[_builtins.bool]:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> Optional[_builtins.bool]:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")


@pulumi.output_type
class DecryptionProfileSslNoProxy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockExpiredCertificate":
            suggest = "block_expired_certificate"
        elif key == "blockUntrustedIssuer":
            suggest = "block_untrusted_issuer"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DecryptionProfileSslNoProxy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DecryptionProfileSslNoProxy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DecryptionProfileSslNoProxy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 block_expired_certificate: Optional[_builtins.bool] = None,
                 block_untrusted_issuer: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        """
        if block_expired_certificate is not None:
            pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        if block_untrusted_issuer is not None:
            pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> Optional[_builtins.bool]:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> Optional[_builtins.bool]:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")


@pulumi.output_type
class DecryptionProfileSslProtocolSettings(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "authAlgoMd5":
            suggest = "auth_algo_md5"
        elif key == "authAlgoSha1":
            suggest = "auth_algo_sha1"
        elif key == "authAlgoSha256":
            suggest = "auth_algo_sha256"
        elif key == "authAlgoSha384":
            suggest = "auth_algo_sha384"
        elif key == "encAlgo3des":
            suggest = "enc_algo3des"
        elif key == "encAlgoAes128Cbc":
            suggest = "enc_algo_aes128_cbc"
        elif key == "encAlgoAes128Gcm":
            suggest = "enc_algo_aes128_gcm"
        elif key == "encAlgoAes256Cbc":
            suggest = "enc_algo_aes256_cbc"
        elif key == "encAlgoAes256Gcm":
            suggest = "enc_algo_aes256_gcm"
        elif key == "encAlgoChacha20Poly1305":
            suggest = "enc_algo_chacha20_poly1305"
        elif key == "encAlgoRc4":
            suggest = "enc_algo_rc4"
        elif key == "keyxchgAlgoDhe":
            suggest = "keyxchg_algo_dhe"
        elif key == "keyxchgAlgoEcdhe":
            suggest = "keyxchg_algo_ecdhe"
        elif key == "keyxchgAlgoRsa":
            suggest = "keyxchg_algo_rsa"
        elif key == "maxVersion":
            suggest = "max_version"
        elif key == "minVersion":
            suggest = "min_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DecryptionProfileSslProtocolSettings. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DecryptionProfileSslProtocolSettings.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DecryptionProfileSslProtocolSettings.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 auth_algo_md5: Optional[_builtins.bool] = None,
                 auth_algo_sha1: Optional[_builtins.bool] = None,
                 auth_algo_sha256: Optional[_builtins.bool] = None,
                 auth_algo_sha384: Optional[_builtins.bool] = None,
                 enc_algo3des: Optional[_builtins.bool] = None,
                 enc_algo_aes128_cbc: Optional[_builtins.bool] = None,
                 enc_algo_aes128_gcm: Optional[_builtins.bool] = None,
                 enc_algo_aes256_cbc: Optional[_builtins.bool] = None,
                 enc_algo_aes256_gcm: Optional[_builtins.bool] = None,
                 enc_algo_chacha20_poly1305: Optional[_builtins.bool] = None,
                 enc_algo_rc4: Optional[_builtins.bool] = None,
                 keyxchg_algo_dhe: Optional[_builtins.bool] = None,
                 keyxchg_algo_ecdhe: Optional[_builtins.bool] = None,
                 keyxchg_algo_rsa: Optional[_builtins.bool] = None,
                 max_version: Optional[_builtins.str] = None,
                 min_version: Optional[_builtins.str] = None):
        """
        :param _builtins.bool auth_algo_md5: The AuthAlgoMd5 param. Default: `true`.
        :param _builtins.bool auth_algo_sha1: The AuthAlgoSha1 param. Default: `true`.
        :param _builtins.bool auth_algo_sha256: The AuthAlgoSha256 param. Default: `true`.
        :param _builtins.bool auth_algo_sha384: The AuthAlgoSha384 param. Default: `true`.
        :param _builtins.bool enc_algo3des: The EncAlgo3des param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_cbc: The EncAlgoAes128Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_gcm: The EncAlgoAes128Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_cbc: The EncAlgoAes256Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_gcm: The EncAlgoAes256Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_chacha20_poly1305: The EncAlgoChacha20Poly1305 param. Default: `true`.
        :param _builtins.bool enc_algo_rc4: The EncAlgoRc4 param. Default: `true`.
        :param _builtins.bool keyxchg_algo_dhe: The KeyxchgAlgoDhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_ecdhe: The KeyxchgAlgoEcdhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_rsa: The KeyxchgAlgoRsa param. Default: `true`.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        if auth_algo_md5 is not None:
            pulumi.set(__self__, "auth_algo_md5", auth_algo_md5)
        if auth_algo_sha1 is not None:
            pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        if auth_algo_sha256 is not None:
            pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        if auth_algo_sha384 is not None:
            pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        if enc_algo3des is not None:
            pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        if enc_algo_aes128_cbc is not None:
            pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        if enc_algo_aes128_gcm is not None:
            pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        if enc_algo_aes256_cbc is not None:
            pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        if enc_algo_aes256_gcm is not None:
            pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        if enc_algo_chacha20_poly1305 is not None:
            pulumi.set(__self__, "enc_algo_chacha20_poly1305", enc_algo_chacha20_poly1305)
        if enc_algo_rc4 is not None:
            pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        if keyxchg_algo_dhe is not None:
            pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        if keyxchg_algo_ecdhe is not None:
            pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        if keyxchg_algo_rsa is not None:
            pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        if max_version is not None:
            pulumi.set(__self__, "max_version", max_version)
        if min_version is not None:
            pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoMd5")
    def auth_algo_md5(self) -> Optional[_builtins.bool]:
        """
        The AuthAlgoMd5 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_md5")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> Optional[_builtins.bool]:
        """
        The AuthAlgoSha1 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> Optional[_builtins.bool]:
        """
        The AuthAlgoSha256 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> Optional[_builtins.bool]:
        """
        The AuthAlgoSha384 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> Optional[_builtins.bool]:
        """
        The EncAlgo3des param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoAes128Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoAes128Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoAes256Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoAes256Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoChacha20Poly1305")
    def enc_algo_chacha20_poly1305(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoChacha20Poly1305 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_chacha20_poly1305")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> Optional[_builtins.bool]:
        """
        The EncAlgoRc4 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> Optional[_builtins.bool]:
        """
        The KeyxchgAlgoDhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> Optional[_builtins.bool]:
        """
        The KeyxchgAlgoEcdhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> Optional[_builtins.bool]:
        """
        The KeyxchgAlgoRsa param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> Optional[_builtins.str]:
        """
        The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> Optional[_builtins.str]:
        """
        The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class DecryptionRuleType(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "sslForwardProxy":
            suggest = "ssl_forward_proxy"
        elif key == "sslInboundInspection":
            suggest = "ssl_inbound_inspection"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DecryptionRuleType. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DecryptionRuleType.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DecryptionRuleType.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ssl_forward_proxy: Optional[_builtins.bool] = None,
                 ssl_inbound_inspection: Optional[_builtins.str] = None):
        """
        :param _builtins.bool ssl_forward_proxy: The SslForwardProxy param. Ensure that only one of the following is specified: `ssl_forward_proxy`, `ssl_inbound_inspection`
        :param _builtins.str ssl_inbound_inspection: add the certificate name for SSL inbound inspection. Ensure that only one of the following is specified: `ssl_forward_proxy`, `ssl_inbound_inspection`
        """
        if ssl_forward_proxy is not None:
            pulumi.set(__self__, "ssl_forward_proxy", ssl_forward_proxy)
        if ssl_inbound_inspection is not None:
            pulumi.set(__self__, "ssl_inbound_inspection", ssl_inbound_inspection)

    @_builtins.property
    @pulumi.getter(name="sslForwardProxy")
    def ssl_forward_proxy(self) -> Optional[_builtins.bool]:
        """
        The SslForwardProxy param. Ensure that only one of the following is specified: `ssl_forward_proxy`, `ssl_inbound_inspection`
        """
        return pulumi.get(self, "ssl_forward_proxy")

    @_builtins.property
    @pulumi.getter(name="sslInboundInspection")
    def ssl_inbound_inspection(self) -> Optional[_builtins.str]:
        """
        add the certificate name for SSL inbound inspection. Ensure that only one of the following is specified: `ssl_forward_proxy`, `ssl_inbound_inspection`
        """
        return pulumi.get(self, "ssl_inbound_inspection")


@pulumi.output_type
class DnsSecurityProfileBotnetDomains(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dnsSecurityCategories":
            suggest = "dns_security_categories"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DnsSecurityProfileBotnetDomains. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DnsSecurityProfileBotnetDomains.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DnsSecurityProfileBotnetDomains.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dns_security_categories: Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsDnsSecurityCategory']] = None,
                 lists: Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsList']] = None,
                 sinkhole: Optional['outputs.DnsSecurityProfileBotnetDomainsSinkhole'] = None,
                 whitelists: Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsWhitelist']] = None):
        """
        :param Sequence['DnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs'] dns_security_categories: The DnsSecurityCategories param.
        :param Sequence['DnsSecurityProfileBotnetDomainsListArgs'] lists: The Lists param.
        :param 'DnsSecurityProfileBotnetDomainsSinkholeArgs' sinkhole: The Sinkhole param.
        :param Sequence['DnsSecurityProfileBotnetDomainsWhitelistArgs'] whitelists: The Whitelists param.
        """
        if dns_security_categories is not None:
            pulumi.set(__self__, "dns_security_categories", dns_security_categories)
        if lists is not None:
            pulumi.set(__self__, "lists", lists)
        if sinkhole is not None:
            pulumi.set(__self__, "sinkhole", sinkhole)
        if whitelists is not None:
            pulumi.set(__self__, "whitelists", whitelists)

    @_builtins.property
    @pulumi.getter(name="dnsSecurityCategories")
    def dns_security_categories(self) -> Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsDnsSecurityCategory']]:
        """
        The DnsSecurityCategories param.
        """
        return pulumi.get(self, "dns_security_categories")

    @_builtins.property
    @pulumi.getter
    def lists(self) -> Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsList']]:
        """
        The Lists param.
        """
        return pulumi.get(self, "lists")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> Optional['outputs.DnsSecurityProfileBotnetDomainsSinkhole']:
        """
        The Sinkhole param.
        """
        return pulumi.get(self, "sinkhole")

    @_builtins.property
    @pulumi.getter
    def whitelists(self) -> Optional[Sequence['outputs.DnsSecurityProfileBotnetDomainsWhitelist']]:
        """
        The Whitelists param.
        """
        return pulumi.get(self, "whitelists")


@pulumi.output_type
class DnsSecurityProfileBotnetDomainsDnsSecurityCategory(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logLevel":
            suggest = "log_level"
        elif key == "packetCapture":
            suggest = "packet_capture"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DnsSecurityProfileBotnetDomainsDnsSecurityCategory. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DnsSecurityProfileBotnetDomainsDnsSecurityCategory.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DnsSecurityProfileBotnetDomainsDnsSecurityCategory.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional[_builtins.str] = None,
                 log_level: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 packet_capture: Optional[_builtins.str] = None):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        :param _builtins.str log_level: The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if log_level is not None:
            pulumi.set(__self__, "log_level", log_level)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[_builtins.str]:
        """
        The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> Optional[_builtins.str]:
        """
        The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        """
        return pulumi.get(self, "log_level")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class DnsSecurityProfileBotnetDomainsList(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "packetCapture":
            suggest = "packet_capture"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DnsSecurityProfileBotnetDomainsList. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DnsSecurityProfileBotnetDomainsList.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DnsSecurityProfileBotnetDomainsList.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 action: Optional['outputs.DnsSecurityProfileBotnetDomainsListAction'] = None,
                 packet_capture: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param 'DnsSecurityProfileBotnetDomainsListActionArgs' action: The Action param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "name", name)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional['outputs.DnsSecurityProfileBotnetDomainsListAction']:
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class DnsSecurityProfileBotnetDomainsListAction(dict):
    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block: Optional[_builtins.bool] = None,
                 sinkhole: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        :param _builtins.bool block: The Block param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        :param _builtins.bool sinkhole: The Sinkhole param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block is not None:
            pulumi.set(__self__, "block", block)
        if sinkhole is not None:
            pulumi.set(__self__, "sinkhole", sinkhole)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter
    def block(self) -> Optional[_builtins.bool]:
        """
        The Block param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        """
        return pulumi.get(self, "block")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> Optional[_builtins.bool]:
        """
        The Sinkhole param. Ensure that only one of the following is specified: `alert`, `allow`, `block`, `sinkhole`
        """
        return pulumi.get(self, "sinkhole")


@pulumi.output_type
class DnsSecurityProfileBotnetDomainsSinkhole(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ipv4Address":
            suggest = "ipv4_address"
        elif key == "ipv6Address":
            suggest = "ipv6_address"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DnsSecurityProfileBotnetDomainsSinkhole. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DnsSecurityProfileBotnetDomainsSinkhole.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DnsSecurityProfileBotnetDomainsSinkhole.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ipv4_address: Optional[_builtins.str] = None,
                 ipv6_address: Optional[_builtins.str] = None):
        """
        :param _builtins.str ipv4_address: The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        :param _builtins.str ipv6_address: The Ipv6Address param. String must be one of these: `"::1"`.
        """
        if ipv4_address is not None:
            pulumi.set(__self__, "ipv4_address", ipv4_address)
        if ipv6_address is not None:
            pulumi.set(__self__, "ipv6_address", ipv6_address)

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> Optional[_builtins.str]:
        """
        The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        """
        return pulumi.get(self, "ipv4_address")

    @_builtins.property
    @pulumi.getter(name="ipv6Address")
    def ipv6_address(self) -> Optional[_builtins.str]:
        """
        The Ipv6Address param. String must be one of these: `"::1"`.
        """
        return pulumi.get(self, "ipv6_address")


@pulumi.output_type
class DnsSecurityProfileBotnetDomainsWhitelist(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 description: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str description: The Description param.
        """
        pulumi.set(__self__, "name", name)
        if description is not None:
            pulumi.set(__self__, "description", description)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param.
        """
        return pulumi.get(self, "description")


@pulumi.output_type
class ExternalDynamicListType(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "predefinedIp":
            suggest = "predefined_ip"
        elif key == "predefinedUrl":
            suggest = "predefined_url"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListType. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListType.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListType.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 domain: Optional['outputs.ExternalDynamicListTypeDomain'] = None,
                 imei: Optional['outputs.ExternalDynamicListTypeImei'] = None,
                 imsi: Optional['outputs.ExternalDynamicListTypeImsi'] = None,
                 ip: Optional['outputs.ExternalDynamicListTypeIp'] = None,
                 predefined_ip: Optional['outputs.ExternalDynamicListTypePredefinedIp'] = None,
                 predefined_url: Optional['outputs.ExternalDynamicListTypePredefinedUrl'] = None,
                 url: Optional['outputs.ExternalDynamicListTypeUrl'] = None):
        """
        :param 'ExternalDynamicListTypeDomainArgs' domain: The Domain param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypeImeiArgs' imei: The Imei param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypeImsiArgs' imsi: The Imsi param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypeIpArgs' ip: The Ip param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypePredefinedIpArgs' predefined_ip: The PredefinedIp param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypePredefinedUrlArgs' predefined_url: The PredefinedUrl param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        :param 'ExternalDynamicListTypeUrlArgs' url: The Url param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if imei is not None:
            pulumi.set(__self__, "imei", imei)
        if imsi is not None:
            pulumi.set(__self__, "imsi", imsi)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)
        if predefined_ip is not None:
            pulumi.set(__self__, "predefined_ip", predefined_ip)
        if predefined_url is not None:
            pulumi.set(__self__, "predefined_url", predefined_url)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> Optional['outputs.ExternalDynamicListTypeDomain']:
        """
        The Domain param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> Optional['outputs.ExternalDynamicListTypeImei']:
        """
        The Imei param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def imsi(self) -> Optional['outputs.ExternalDynamicListTypeImsi']:
        """
        The Imsi param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "imsi")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> Optional['outputs.ExternalDynamicListTypeIp']:
        """
        The Ip param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter(name="predefinedIp")
    def predefined_ip(self) -> Optional['outputs.ExternalDynamicListTypePredefinedIp']:
        """
        The PredefinedIp param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "predefined_ip")

    @_builtins.property
    @pulumi.getter(name="predefinedUrl")
    def predefined_url(self) -> Optional['outputs.ExternalDynamicListTypePredefinedUrl']:
        """
        The PredefinedUrl param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "predefined_url")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional['outputs.ExternalDynamicListTypeUrl']:
        """
        The Url param. Ensure that only one of the following is specified: `domain`, `imei`, `imsi`, `ip`, `predefined_ip`, `predefined_url`, `url`
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ExternalDynamicListTypeDomain(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "domainAuth":
            suggest = "domain_auth"
        elif key == "exceptionLists":
            suggest = "exception_lists"
        elif key == "expandDomain":
            suggest = "expand_domain"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeDomain. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeDomain.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeDomain.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recurring: 'outputs.ExternalDynamicListTypeDomainRecurring',
                 certificate_profile: Optional[_builtins.str] = None,
                 description: Optional[_builtins.str] = None,
                 domain_auth: Optional['outputs.ExternalDynamicListTypeDomainDomainAuth'] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None,
                 expand_domain: Optional[_builtins.bool] = None,
                 url: Optional[_builtins.str] = None):
        """
        :param 'ExternalDynamicListTypeDomainRecurringArgs' recurring: The Recurring param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param 'ExternalDynamicListTypeDomainDomainAuthArgs' domain_auth: The DomainAuth param.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.bool expand_domain: Enable/Disable expand domain. Default: `false`.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "recurring", recurring)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if domain_auth is not None:
            pulumi.set(__self__, "domain_auth", domain_auth)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)
        if expand_domain is not None:
            pulumi.set(__self__, "expand_domain", expand_domain)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.ExternalDynamicListTypeDomainRecurring':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainAuth")
    def domain_auth(self) -> Optional['outputs.ExternalDynamicListTypeDomainDomainAuth']:
        """
        The DomainAuth param.
        """
        return pulumi.get(self, "domain_auth")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="expandDomain")
    def expand_domain(self) -> Optional[_builtins.bool]:
        """
        Enable/Disable expand domain. Default: `false`.
        """
        return pulumi.get(self, "expand_domain")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[_builtins.str]:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ExternalDynamicListTypeDomainDomainAuth(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class ExternalDynamicListTypeDomainRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fiveMinute":
            suggest = "five_minute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeDomainRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeDomainRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeDomainRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily: Optional['outputs.ExternalDynamicListTypeDomainRecurringDaily'] = None,
                 five_minute: Optional[_builtins.bool] = None,
                 hourly: Optional[_builtins.bool] = None,
                 monthly: Optional['outputs.ExternalDynamicListTypeDomainRecurringMonthly'] = None,
                 weekly: Optional['outputs.ExternalDynamicListTypeDomainRecurringWeekly'] = None):
        """
        :param 'ExternalDynamicListTypeDomainRecurringDailyArgs' daily: The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool five_minute: The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool hourly: The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeDomainRecurringMonthlyArgs' monthly: The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeDomainRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        if daily is not None:
            pulumi.set(__self__, "daily", daily)
        if five_minute is not None:
            pulumi.set(__self__, "five_minute", five_minute)
        if hourly is not None:
            pulumi.set(__self__, "hourly", hourly)
        if monthly is not None:
            pulumi.set(__self__, "monthly", monthly)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> Optional['outputs.ExternalDynamicListTypeDomainRecurringDaily']:
        """
        The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> Optional[_builtins.bool]:
        """
        The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> Optional[_builtins.bool]:
        """
        The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> Optional['outputs.ExternalDynamicListTypeDomainRecurringMonthly']:
        """
        The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ExternalDynamicListTypeDomainRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ExternalDynamicListTypeDomainRecurringDaily(dict):
    def __init__(__self__, *,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeDomainRecurringMonthly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfMonth":
            suggest = "day_of_month"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeDomainRecurringMonthly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeDomainRecurringMonthly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeDomainRecurringMonthly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_month: _builtins.int,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_month", day_of_month)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeDomainRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfWeek":
            suggest = "day_of_week"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeDomainRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeDomainRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeDomainRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_week: _builtins.str,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_week", day_of_week)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImei(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "exceptionLists":
            suggest = "exception_lists"
        elif key == "imeiAuth":
            suggest = "imei_auth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImei. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImei.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImei.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recurring: 'outputs.ExternalDynamicListTypeImeiRecurring',
                 certificate_profile: Optional[_builtins.str] = None,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None,
                 imei_auth: Optional['outputs.ExternalDynamicListTypeImeiImeiAuth'] = None,
                 url: Optional[_builtins.str] = None):
        """
        :param 'ExternalDynamicListTypeImeiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        :param 'ExternalDynamicListTypeImeiImeiAuthArgs' imei_auth: The ImeiAuth param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "recurring", recurring)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)
        if imei_auth is not None:
            pulumi.set(__self__, "imei_auth", imei_auth)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.ExternalDynamicListTypeImeiRecurring':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imeiAuth")
    def imei_auth(self) -> Optional['outputs.ExternalDynamicListTypeImeiImeiAuth']:
        """
        The ImeiAuth param.
        """
        return pulumi.get(self, "imei_auth")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[_builtins.str]:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ExternalDynamicListTypeImeiImeiAuth(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class ExternalDynamicListTypeImeiRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fiveMinute":
            suggest = "five_minute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImeiRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImeiRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImeiRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily: Optional['outputs.ExternalDynamicListTypeImeiRecurringDaily'] = None,
                 five_minute: Optional[_builtins.bool] = None,
                 hourly: Optional[_builtins.bool] = None,
                 monthly: Optional['outputs.ExternalDynamicListTypeImeiRecurringMonthly'] = None,
                 weekly: Optional['outputs.ExternalDynamicListTypeImeiRecurringWeekly'] = None):
        """
        :param 'ExternalDynamicListTypeImeiRecurringDailyArgs' daily: The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool five_minute: The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool hourly: The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeImeiRecurringMonthlyArgs' monthly: The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeImeiRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        if daily is not None:
            pulumi.set(__self__, "daily", daily)
        if five_minute is not None:
            pulumi.set(__self__, "five_minute", five_minute)
        if hourly is not None:
            pulumi.set(__self__, "hourly", hourly)
        if monthly is not None:
            pulumi.set(__self__, "monthly", monthly)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> Optional['outputs.ExternalDynamicListTypeImeiRecurringDaily']:
        """
        The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> Optional[_builtins.bool]:
        """
        The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> Optional[_builtins.bool]:
        """
        The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> Optional['outputs.ExternalDynamicListTypeImeiRecurringMonthly']:
        """
        The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ExternalDynamicListTypeImeiRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ExternalDynamicListTypeImeiRecurringDaily(dict):
    def __init__(__self__, *,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImeiRecurringMonthly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfMonth":
            suggest = "day_of_month"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImeiRecurringMonthly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImeiRecurringMonthly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImeiRecurringMonthly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_month: _builtins.int,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_month", day_of_month)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImeiRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfWeek":
            suggest = "day_of_week"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImeiRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImeiRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImeiRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_week: _builtins.str,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_week", day_of_week)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImsi(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "exceptionLists":
            suggest = "exception_lists"
        elif key == "imsiAuth":
            suggest = "imsi_auth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImsi. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImsi.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImsi.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recurring: 'outputs.ExternalDynamicListTypeImsiRecurring',
                 certificate_profile: Optional[_builtins.str] = None,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None,
                 imsi_auth: Optional['outputs.ExternalDynamicListTypeImsiImsiAuth'] = None,
                 url: Optional[_builtins.str] = None):
        """
        :param 'ExternalDynamicListTypeImsiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        :param 'ExternalDynamicListTypeImsiImsiAuthArgs' imsi_auth: The ImsiAuth param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "recurring", recurring)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)
        if imsi_auth is not None:
            pulumi.set(__self__, "imsi_auth", imsi_auth)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.ExternalDynamicListTypeImsiRecurring':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imsiAuth")
    def imsi_auth(self) -> Optional['outputs.ExternalDynamicListTypeImsiImsiAuth']:
        """
        The ImsiAuth param.
        """
        return pulumi.get(self, "imsi_auth")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[_builtins.str]:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ExternalDynamicListTypeImsiImsiAuth(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class ExternalDynamicListTypeImsiRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fiveMinute":
            suggest = "five_minute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImsiRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImsiRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImsiRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily: Optional['outputs.ExternalDynamicListTypeImsiRecurringDaily'] = None,
                 five_minute: Optional[_builtins.bool] = None,
                 hourly: Optional[_builtins.bool] = None,
                 monthly: Optional['outputs.ExternalDynamicListTypeImsiRecurringMonthly'] = None,
                 weekly: Optional['outputs.ExternalDynamicListTypeImsiRecurringWeekly'] = None):
        """
        :param 'ExternalDynamicListTypeImsiRecurringDailyArgs' daily: The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool five_minute: The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool hourly: The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeImsiRecurringMonthlyArgs' monthly: The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeImsiRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        if daily is not None:
            pulumi.set(__self__, "daily", daily)
        if five_minute is not None:
            pulumi.set(__self__, "five_minute", five_minute)
        if hourly is not None:
            pulumi.set(__self__, "hourly", hourly)
        if monthly is not None:
            pulumi.set(__self__, "monthly", monthly)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> Optional['outputs.ExternalDynamicListTypeImsiRecurringDaily']:
        """
        The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> Optional[_builtins.bool]:
        """
        The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> Optional[_builtins.bool]:
        """
        The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> Optional['outputs.ExternalDynamicListTypeImsiRecurringMonthly']:
        """
        The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ExternalDynamicListTypeImsiRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ExternalDynamicListTypeImsiRecurringDaily(dict):
    def __init__(__self__, *,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImsiRecurringMonthly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfMonth":
            suggest = "day_of_month"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImsiRecurringMonthly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImsiRecurringMonthly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImsiRecurringMonthly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_month: _builtins.int,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_month", day_of_month)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeImsiRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfWeek":
            suggest = "day_of_week"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeImsiRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeImsiRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeImsiRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_week: _builtins.str,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_week", day_of_week)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "exceptionLists":
            suggest = "exception_lists"
        elif key == "ipAuth":
            suggest = "ip_auth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recurring: 'outputs.ExternalDynamicListTypeIpRecurring',
                 certificate_profile: Optional[_builtins.str] = None,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None,
                 ip_auth: Optional['outputs.ExternalDynamicListTypeIpIpAuth'] = None,
                 url: Optional[_builtins.str] = None):
        """
        :param 'ExternalDynamicListTypeIpRecurringArgs' recurring: The Recurring param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param 'ExternalDynamicListTypeIpIpAuthArgs' ip_auth: The IpAuth param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "recurring", recurring)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)
        if ip_auth is not None:
            pulumi.set(__self__, "ip_auth", ip_auth)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.ExternalDynamicListTypeIpRecurring':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="ipAuth")
    def ip_auth(self) -> Optional['outputs.ExternalDynamicListTypeIpIpAuth']:
        """
        The IpAuth param.
        """
        return pulumi.get(self, "ip_auth")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[_builtins.str]:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ExternalDynamicListTypeIpIpAuth(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class ExternalDynamicListTypeIpRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fiveMinute":
            suggest = "five_minute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeIpRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeIpRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeIpRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily: Optional['outputs.ExternalDynamicListTypeIpRecurringDaily'] = None,
                 five_minute: Optional[_builtins.bool] = None,
                 hourly: Optional[_builtins.bool] = None,
                 monthly: Optional['outputs.ExternalDynamicListTypeIpRecurringMonthly'] = None,
                 weekly: Optional['outputs.ExternalDynamicListTypeIpRecurringWeekly'] = None):
        """
        :param 'ExternalDynamicListTypeIpRecurringDailyArgs' daily: The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool five_minute: The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool hourly: The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeIpRecurringMonthlyArgs' monthly: The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeIpRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        if daily is not None:
            pulumi.set(__self__, "daily", daily)
        if five_minute is not None:
            pulumi.set(__self__, "five_minute", five_minute)
        if hourly is not None:
            pulumi.set(__self__, "hourly", hourly)
        if monthly is not None:
            pulumi.set(__self__, "monthly", monthly)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> Optional['outputs.ExternalDynamicListTypeIpRecurringDaily']:
        """
        The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> Optional[_builtins.bool]:
        """
        The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> Optional[_builtins.bool]:
        """
        The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> Optional['outputs.ExternalDynamicListTypeIpRecurringMonthly']:
        """
        The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ExternalDynamicListTypeIpRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ExternalDynamicListTypeIpRecurringDaily(dict):
    def __init__(__self__, *,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeIpRecurringMonthly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfMonth":
            suggest = "day_of_month"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeIpRecurringMonthly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeIpRecurringMonthly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeIpRecurringMonthly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_month: _builtins.int,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_month", day_of_month)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeIpRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfWeek":
            suggest = "day_of_week"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeIpRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeIpRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeIpRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_week: _builtins.str,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_week", day_of_week)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypePredefinedIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "exceptionLists":
            suggest = "exception_lists"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypePredefinedIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypePredefinedIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypePredefinedIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 url: _builtins.str,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str url: The Url param.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "url", url)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")


@pulumi.output_type
class ExternalDynamicListTypePredefinedUrl(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "exceptionLists":
            suggest = "exception_lists"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypePredefinedUrl. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypePredefinedUrl.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypePredefinedUrl.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 url: _builtins.str,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str url: The Url param.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "url", url)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")


@pulumi.output_type
class ExternalDynamicListTypeUrl(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "exceptionLists":
            suggest = "exception_lists"
        elif key == "urlAuth":
            suggest = "url_auth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeUrl. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeUrl.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeUrl.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 recurring: 'outputs.ExternalDynamicListTypeUrlRecurring',
                 certificate_profile: Optional[_builtins.str] = None,
                 description: Optional[_builtins.str] = None,
                 exception_lists: Optional[Sequence[_builtins.str]] = None,
                 url: Optional[_builtins.str] = None,
                 url_auth: Optional['outputs.ExternalDynamicListTypeUrlUrlAuth'] = None):
        """
        :param 'ExternalDynamicListTypeUrlRecurringArgs' recurring: The Recurring param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        :param 'ExternalDynamicListTypeUrlUrlAuthArgs' url_auth: The UrlAuth param.
        """
        pulumi.set(__self__, "recurring", recurring)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if exception_lists is not None:
            pulumi.set(__self__, "exception_lists", exception_lists)
        if url is not None:
            pulumi.set(__self__, "url", url)
        if url_auth is not None:
            pulumi.set(__self__, "url_auth", url_auth)

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.ExternalDynamicListTypeUrlRecurring':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def url(self) -> Optional[_builtins.str]:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter(name="urlAuth")
    def url_auth(self) -> Optional['outputs.ExternalDynamicListTypeUrlUrlAuth']:
        """
        The UrlAuth param.
        """
        return pulumi.get(self, "url_auth")


@pulumi.output_type
class ExternalDynamicListTypeUrlRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fiveMinute":
            suggest = "five_minute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeUrlRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeUrlRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeUrlRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily: Optional['outputs.ExternalDynamicListTypeUrlRecurringDaily'] = None,
                 five_minute: Optional[_builtins.bool] = None,
                 hourly: Optional[_builtins.bool] = None,
                 monthly: Optional['outputs.ExternalDynamicListTypeUrlRecurringMonthly'] = None,
                 weekly: Optional['outputs.ExternalDynamicListTypeUrlRecurringWeekly'] = None):
        """
        :param 'ExternalDynamicListTypeUrlRecurringDailyArgs' daily: The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool five_minute: The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param _builtins.bool hourly: The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeUrlRecurringMonthlyArgs' monthly: The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        :param 'ExternalDynamicListTypeUrlRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        if daily is not None:
            pulumi.set(__self__, "daily", daily)
        if five_minute is not None:
            pulumi.set(__self__, "five_minute", five_minute)
        if hourly is not None:
            pulumi.set(__self__, "hourly", hourly)
        if monthly is not None:
            pulumi.set(__self__, "monthly", monthly)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> Optional['outputs.ExternalDynamicListTypeUrlRecurringDaily']:
        """
        The Daily param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> Optional[_builtins.bool]:
        """
        The FiveMinute param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> Optional[_builtins.bool]:
        """
        The Hourly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> Optional['outputs.ExternalDynamicListTypeUrlRecurringMonthly']:
        """
        The Monthly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ExternalDynamicListTypeUrlRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `five_minute`, `hourly`, `monthly`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ExternalDynamicListTypeUrlRecurringDaily(dict):
    def __init__(__self__, *,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeUrlRecurringMonthly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfMonth":
            suggest = "day_of_month"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeUrlRecurringMonthly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeUrlRecurringMonthly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeUrlRecurringMonthly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_month: _builtins.int,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_month", day_of_month)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeUrlRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dayOfWeek":
            suggest = "day_of_week"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ExternalDynamicListTypeUrlRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ExternalDynamicListTypeUrlRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ExternalDynamicListTypeUrlRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 day_of_week: _builtins.str,
                 at: Optional[_builtins.str] = None):
        """
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "day_of_week", day_of_week)
        if at is not None:
            pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")

    @_builtins.property
    @pulumi.getter
    def at(self) -> Optional[_builtins.str]:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class ExternalDynamicListTypeUrlUrlAuth(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class FileBlockingProfileRule(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileTypes":
            suggest = "file_types"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FileBlockingProfileRule. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FileBlockingProfileRule.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FileBlockingProfileRule.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 applications: Sequence[_builtins.str],
                 file_types: Sequence[_builtins.str],
                 name: _builtins.str,
                 action: Optional[_builtins.str] = None,
                 direction: Optional[_builtins.str] = None):
        """
        :param Sequence[_builtins.str] applications: The Applications param. List must contain at least 1 elements.
        :param Sequence[_builtins.str] file_types: The FileTypes param. List must contain at least 1 elements.
        :param _builtins.str name: The Name param.
        :param _builtins.str action: The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        """
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "file_types", file_types)
        pulumi.set(__self__, "name", name)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if direction is not None:
            pulumi.set(__self__, "direction", direction)

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The Applications param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Sequence[_builtins.str]:
        """
        The FileTypes param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional[_builtins.str]:
        """
        The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[_builtins.str]:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        """
        return pulumi.get(self, "direction")


@pulumi.output_type
class HipObjectAntiMalware(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectAntiMalware. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectAntiMalware.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectAntiMalware.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectAntiMalwareCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectAntiMalwareVendor']] = None):
        """
        :param 'HipObjectAntiMalwareCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectAntiMalwareVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectAntiMalwareCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectAntiMalwareVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectAntiMalwareCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isInstalled":
            suggest = "is_installed"
        elif key == "lastScanTime":
            suggest = "last_scan_time"
        elif key == "productVersion":
            suggest = "product_version"
        elif key == "realTimeProtection":
            suggest = "real_time_protection"
        elif key == "virdefVersion":
            suggest = "virdef_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectAntiMalwareCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectAntiMalwareCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectAntiMalwareCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_installed: Optional[_builtins.bool] = None,
                 last_scan_time: Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTime'] = None,
                 product_version: Optional['outputs.HipObjectAntiMalwareCriteriaProductVersion'] = None,
                 real_time_protection: Optional[_builtins.str] = None,
                 virdef_version: Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersion'] = None):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'HipObjectAntiMalwareCriteriaLastScanTimeArgs' last_scan_time: The LastScanTime param.
        :param 'HipObjectAntiMalwareCriteriaProductVersionArgs' product_version: The ProductVersion param.
        :param _builtins.str real_time_protection: real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param 'HipObjectAntiMalwareCriteriaVirdefVersionArgs' virdef_version: The VirdefVersion param.
        """
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)
        if last_scan_time is not None:
            pulumi.set(__self__, "last_scan_time", last_scan_time)
        if product_version is not None:
            pulumi.set(__self__, "product_version", product_version)
        if real_time_protection is not None:
            pulumi.set(__self__, "real_time_protection", real_time_protection)
        if virdef_version is not None:
            pulumi.set(__self__, "virdef_version", virdef_version)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastScanTime")
    def last_scan_time(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTime']:
        """
        The LastScanTime param.
        """
        return pulumi.get(self, "last_scan_time")

    @_builtins.property
    @pulumi.getter(name="productVersion")
    def product_version(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaProductVersion']:
        """
        The ProductVersion param.
        """
        return pulumi.get(self, "product_version")

    @_builtins.property
    @pulumi.getter(name="realTimeProtection")
    def real_time_protection(self) -> Optional[_builtins.str]:
        """
        real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "real_time_protection")

    @_builtins.property
    @pulumi.getter(name="virdefVersion")
    def virdef_version(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersion']:
        """
        The VirdefVersion param.
        """
        return pulumi.get(self, "virdef_version")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaLastScanTime(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "notAvailable":
            suggest = "not_available"
        elif key == "notWithin":
            suggest = "not_within"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectAntiMalwareCriteriaLastScanTime. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectAntiMalwareCriteriaLastScanTime.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectAntiMalwareCriteriaLastScanTime.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 not_available: Optional[_builtins.bool] = None,
                 not_within: Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTimeNotWithin'] = None,
                 within: Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTimeWithin'] = None):
        """
        :param _builtins.bool not_available: The NotAvailable param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        :param 'HipObjectAntiMalwareCriteriaLastScanTimeNotWithinArgs' not_within: The NotWithin param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        :param 'HipObjectAntiMalwareCriteriaLastScanTimeWithinArgs' within: The Within param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        if not_available is not None:
            pulumi.set(__self__, "not_available", not_available)
        if not_within is not None:
            pulumi.set(__self__, "not_within", not_within)
        if within is not None:
            pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> Optional[_builtins.bool]:
        """
        The NotAvailable param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTimeNotWithin']:
        """
        The NotWithin param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaLastScanTimeWithin']:
        """
        The Within param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaLastScanTimeNotWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaLastScanTimeWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaProductVersion(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "greaterEqual":
            suggest = "greater_equal"
        elif key == "greaterThan":
            suggest = "greater_than"
        elif key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"
        elif key == "lessEqual":
            suggest = "less_equal"
        elif key == "lessThan":
            suggest = "less_than"
        elif key == "notWithin":
            suggest = "not_within"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectAntiMalwareCriteriaProductVersion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectAntiMalwareCriteriaProductVersion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectAntiMalwareCriteriaProductVersion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 greater_equal: Optional[_builtins.str] = None,
                 greater_than: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None,
                 less_equal: Optional[_builtins.str] = None,
                 less_than: Optional[_builtins.str] = None,
                 not_within: Optional['outputs.HipObjectAntiMalwareCriteriaProductVersionNotWithin'] = None,
                 within: Optional['outputs.HipObjectAntiMalwareCriteriaProductVersionWithin'] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str greater_equal: The GreaterEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str greater_than: The GreaterThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str less_equal: The LessEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param _builtins.str less_than: The LessThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param 'HipObjectAntiMalwareCriteriaProductVersionNotWithinArgs' not_within: The NotWithin param. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        :param 'HipObjectAntiMalwareCriteriaProductVersionWithinArgs' within: The Within param. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if greater_equal is not None:
            pulumi.set(__self__, "greater_equal", greater_equal)
        if greater_than is not None:
            pulumi.set(__self__, "greater_than", greater_than)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)
        if less_equal is not None:
            pulumi.set(__self__, "less_equal", less_equal)
        if less_than is not None:
            pulumi.set(__self__, "less_than", less_than)
        if not_within is not None:
            pulumi.set(__self__, "not_within", not_within)
        if within is not None:
            pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> Optional[_builtins.str]:
        """
        The GreaterEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> Optional[_builtins.str]:
        """
        The GreaterThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> Optional[_builtins.str]:
        """
        The LessEqual param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> Optional[_builtins.str]:
        """
        The LessThan param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaProductVersionNotWithin']:
        """
        The NotWithin param. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaProductVersionWithin']:
        """
        The Within param. Ensure that only one of the following is specified: `contains`, `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`, `not_within`, `within`
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaProductVersionNotWithin(dict):
    def __init__(__self__, *,
                 versions: Optional[_builtins.int] = None):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        if versions is not None:
            pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> Optional[_builtins.int]:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaProductVersionWithin(dict):
    def __init__(__self__, *,
                 versions: Optional[_builtins.int] = None):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        if versions is not None:
            pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> Optional[_builtins.int]:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaVirdefVersion(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "notWithin":
            suggest = "not_within"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectAntiMalwareCriteriaVirdefVersion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectAntiMalwareCriteriaVirdefVersion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectAntiMalwareCriteriaVirdefVersion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 not_within: Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersionNotWithin'] = None,
                 within: Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersionWithin'] = None):
        """
        :param 'HipObjectAntiMalwareCriteriaVirdefVersionNotWithinArgs' not_within: The NotWithin param. Ensure that only one of the following is specified: `not_within`, `within`
        :param 'HipObjectAntiMalwareCriteriaVirdefVersionWithinArgs' within: The Within param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        if not_within is not None:
            pulumi.set(__self__, "not_within", not_within)
        if within is not None:
            pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersionNotWithin']:
        """
        The NotWithin param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> Optional['outputs.HipObjectAntiMalwareCriteriaVirdefVersionWithin']:
        """
        The Within param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaVirdefVersionNotWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 versions: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if versions is not None:
            pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> Optional[_builtins.int]:
        """
        specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class HipObjectAntiMalwareCriteriaVirdefVersionWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 versions: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if versions is not None:
            pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> Optional[_builtins.int]:
        """
        specify versions range. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `versions`
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class HipObjectAntiMalwareVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HipObjectCertificate(dict):
    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectCertificateCriteria'] = None):
        """
        :param 'HipObjectCertificateCriteriaArgs' criteria: The Criteria param.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectCertificateCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class HipObjectCertificateCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateAttributes":
            suggest = "certificate_attributes"
        elif key == "certificateProfile":
            suggest = "certificate_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectCertificateCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectCertificateCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectCertificateCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_attributes: Optional[Sequence['outputs.HipObjectCertificateCriteriaCertificateAttribute']] = None,
                 certificate_profile: Optional[_builtins.str] = None):
        """
        :param Sequence['HipObjectCertificateCriteriaCertificateAttributeArgs'] certificate_attributes: The CertificateAttributes param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates.
        """
        if certificate_attributes is not None:
            pulumi.set(__self__, "certificate_attributes", certificate_attributes)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)

    @_builtins.property
    @pulumi.getter(name="certificateAttributes")
    def certificate_attributes(self) -> Optional[Sequence['outputs.HipObjectCertificateCriteriaCertificateAttribute']]:
        """
        The CertificateAttributes param.
        """
        return pulumi.get(self, "certificate_attributes")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        Profile for authenticating client certificates.
        """
        return pulumi.get(self, "certificate_profile")


@pulumi.output_type
class HipObjectCertificateCriteriaCertificateAttribute(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Attribute Name.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Attribute Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class HipObjectCustomChecks(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.HipObjectCustomChecksCriteria'):
        """
        :param 'HipObjectCustomChecksCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.HipObjectCustomChecksCriteria':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class HipObjectCustomChecksCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "processLists":
            suggest = "process_lists"
        elif key == "registryKeys":
            suggest = "registry_keys"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectCustomChecksCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectCustomChecksCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectCustomChecksCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 plists: Optional[Sequence['outputs.HipObjectCustomChecksCriteriaPlist']] = None,
                 process_lists: Optional[Sequence['outputs.HipObjectCustomChecksCriteriaProcessList']] = None,
                 registry_keys: Optional[Sequence['outputs.HipObjectCustomChecksCriteriaRegistryKey']] = None):
        """
        :param Sequence['HipObjectCustomChecksCriteriaPlistArgs'] plists: The Plist param.
        :param Sequence['HipObjectCustomChecksCriteriaProcessListArgs'] process_lists: The ProcessList param.
        :param Sequence['HipObjectCustomChecksCriteriaRegistryKeyArgs'] registry_keys: The RegistryKeys param.
        """
        if plists is not None:
            pulumi.set(__self__, "plists", plists)
        if process_lists is not None:
            pulumi.set(__self__, "process_lists", process_lists)
        if registry_keys is not None:
            pulumi.set(__self__, "registry_keys", registry_keys)

    @_builtins.property
    @pulumi.getter
    def plists(self) -> Optional[Sequence['outputs.HipObjectCustomChecksCriteriaPlist']]:
        """
        The Plist param.
        """
        return pulumi.get(self, "plists")

    @_builtins.property
    @pulumi.getter(name="processLists")
    def process_lists(self) -> Optional[Sequence['outputs.HipObjectCustomChecksCriteriaProcessList']]:
        """
        The ProcessList param.
        """
        return pulumi.get(self, "process_lists")

    @_builtins.property
    @pulumi.getter(name="registryKeys")
    def registry_keys(self) -> Optional[Sequence['outputs.HipObjectCustomChecksCriteriaRegistryKey']]:
        """
        The RegistryKeys param.
        """
        return pulumi.get(self, "registry_keys")


@pulumi.output_type
class HipObjectCustomChecksCriteriaPlist(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 keys: Optional[Sequence['outputs.HipObjectCustomChecksCriteriaPlistKey']] = None,
                 negate: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: Preference list. String length must not exceed 1023 characters.
        :param Sequence['HipObjectCustomChecksCriteriaPlistKeyArgs'] keys: The Keys param.
        :param _builtins.bool negate: Plist does not exist. Default: `false`.
        """
        pulumi.set(__self__, "name", name)
        if keys is not None:
            pulumi.set(__self__, "keys", keys)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Preference list. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def keys(self) -> Optional[Sequence['outputs.HipObjectCustomChecksCriteriaPlistKey']]:
        """
        The Keys param.
        """
        return pulumi.get(self, "keys")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        Plist does not exist. Default: `false`.
        """
        return pulumi.get(self, "negate")


@pulumi.output_type
class HipObjectCustomChecksCriteriaPlistKey(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: Optional[_builtins.bool] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class HipObjectCustomChecksCriteriaProcessList(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 running: Optional[_builtins.bool] = None):
        """
        :param _builtins.str name: Process Name. String length must not exceed 1023 characters.
        :param _builtins.bool running: The Running param. Default: `true`.
        """
        pulumi.set(__self__, "name", name)
        if running is not None:
            pulumi.set(__self__, "running", running)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Process Name. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def running(self) -> Optional[_builtins.bool]:
        """
        The Running param. Default: `true`.
        """
        return pulumi.get(self, "running")


@pulumi.output_type
class HipObjectCustomChecksCriteriaRegistryKey(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "defaultValueData":
            suggest = "default_value_data"
        elif key == "registryValues":
            suggest = "registry_values"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectCustomChecksCriteriaRegistryKey. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectCustomChecksCriteriaRegistryKey.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectCustomChecksCriteriaRegistryKey.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 default_value_data: Optional[_builtins.str] = None,
                 negate: Optional[_builtins.bool] = None,
                 registry_values: Optional[Sequence['outputs.HipObjectCustomChecksCriteriaRegistryKeyRegistryValue']] = None):
        """
        :param _builtins.str name: Registry key. String length must not exceed 1023 characters.
        :param _builtins.str default_value_data: Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.bool negate: Key does not exist or match specified value data. Default: `false`.
        :param Sequence['HipObjectCustomChecksCriteriaRegistryKeyRegistryValueArgs'] registry_values: The RegistryValues param.
        """
        pulumi.set(__self__, "name", name)
        if default_value_data is not None:
            pulumi.set(__self__, "default_value_data", default_value_data)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if registry_values is not None:
            pulumi.set(__self__, "registry_values", registry_values)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry key. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="defaultValueData")
    def default_value_data(self) -> Optional[_builtins.str]:
        """
        Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "default_value_data")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        Key does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="registryValues")
    def registry_values(self) -> Optional[Sequence['outputs.HipObjectCustomChecksCriteriaRegistryKeyRegistryValue']]:
        """
        The RegistryValues param.
        """
        return pulumi.get(self, "registry_values")


@pulumi.output_type
class HipObjectCustomChecksCriteriaRegistryKeyRegistryValue(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "valueData":
            suggest = "value_data"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectCustomChecksCriteriaRegistryKeyRegistryValue. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectCustomChecksCriteriaRegistryKeyRegistryValue.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectCustomChecksCriteriaRegistryKeyRegistryValue.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: Optional[_builtins.bool] = None,
                 value_data: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Registry value name. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value_data: Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if value_data is not None:
            pulumi.set(__self__, "value_data", value_data)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry value name. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="valueData")
    def value_data(self) -> Optional[_builtins.str]:
        """
        Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value_data")


@pulumi.output_type
class HipObjectDataLossPrevention(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDataLossPrevention. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDataLossPrevention.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDataLossPrevention.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectDataLossPreventionCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectDataLossPreventionVendor']] = None):
        """
        :param 'HipObjectDataLossPreventionCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectDataLossPreventionVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectDataLossPreventionCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectDataLossPreventionVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectDataLossPreventionCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"
        elif key == "isInstalled":
            suggest = "is_installed"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDataLossPreventionCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDataLossPreventionCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDataLossPreventionCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.str] = None,
                 is_installed: Optional[_builtins.bool] = None):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.str]:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class HipObjectDataLossPreventionVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HipObjectDiskBackup(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskBackup. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskBackup.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskBackup.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectDiskBackupCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectDiskBackupVendor']] = None):
        """
        :param 'HipObjectDiskBackupCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectDiskBackupVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectDiskBackupCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectDiskBackupVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectDiskBackupCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isInstalled":
            suggest = "is_installed"
        elif key == "lastBackupTime":
            suggest = "last_backup_time"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskBackupCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskBackupCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskBackupCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_installed: Optional[_builtins.bool] = None,
                 last_backup_time: Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTime'] = None):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'HipObjectDiskBackupCriteriaLastBackupTimeArgs' last_backup_time: The LastBackupTime param.
        """
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)
        if last_backup_time is not None:
            pulumi.set(__self__, "last_backup_time", last_backup_time)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastBackupTime")
    def last_backup_time(self) -> Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTime']:
        """
        The LastBackupTime param.
        """
        return pulumi.get(self, "last_backup_time")


@pulumi.output_type
class HipObjectDiskBackupCriteriaLastBackupTime(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "notAvailable":
            suggest = "not_available"
        elif key == "notWithin":
            suggest = "not_within"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskBackupCriteriaLastBackupTime. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskBackupCriteriaLastBackupTime.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskBackupCriteriaLastBackupTime.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 not_available: Optional[_builtins.bool] = None,
                 not_within: Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTimeNotWithin'] = None,
                 within: Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTimeWithin'] = None):
        """
        :param _builtins.bool not_available: The NotAvailable param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        :param 'HipObjectDiskBackupCriteriaLastBackupTimeNotWithinArgs' not_within: The NotWithin param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        :param 'HipObjectDiskBackupCriteriaLastBackupTimeWithinArgs' within: The Within param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        if not_available is not None:
            pulumi.set(__self__, "not_available", not_available)
        if not_within is not None:
            pulumi.set(__self__, "not_within", not_within)
        if within is not None:
            pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> Optional[_builtins.bool]:
        """
        The NotAvailable param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTimeNotWithin']:
        """
        The NotWithin param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> Optional['outputs.HipObjectDiskBackupCriteriaLastBackupTimeWithin']:
        """
        The Within param. Ensure that only one of the following is specified: `not_available`, `not_within`, `within`
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class HipObjectDiskBackupCriteriaLastBackupTimeNotWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class HipObjectDiskBackupCriteriaLastBackupTimeWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify time in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class HipObjectDiskBackupVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HipObjectDiskEncryption(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskEncryption. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskEncryption.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskEncryption.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectDiskEncryptionCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectDiskEncryptionVendor']] = None):
        """
        :param 'HipObjectDiskEncryptionCriteriaArgs' criteria: Encryption locations.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectDiskEncryptionVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectDiskEncryptionCriteria']:
        """
        Encryption locations.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectDiskEncryptionVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectDiskEncryptionCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "encryptedLocations":
            suggest = "encrypted_locations"
        elif key == "isInstalled":
            suggest = "is_installed"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskEncryptionCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskEncryptionCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskEncryptionCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 encrypted_locations: Optional[Sequence['outputs.HipObjectDiskEncryptionCriteriaEncryptedLocation']] = None,
                 is_installed: Optional[_builtins.bool] = None):
        """
        :param Sequence['HipObjectDiskEncryptionCriteriaEncryptedLocationArgs'] encrypted_locations: The EncryptedLocations param.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        if encrypted_locations is not None:
            pulumi.set(__self__, "encrypted_locations", encrypted_locations)
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="encryptedLocations")
    def encrypted_locations(self) -> Optional[Sequence['outputs.HipObjectDiskEncryptionCriteriaEncryptedLocation']]:
        """
        The EncryptedLocations param.
        """
        return pulumi.get(self, "encrypted_locations")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class HipObjectDiskEncryptionCriteriaEncryptedLocation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "encryptionState":
            suggest = "encryption_state"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskEncryptionCriteriaEncryptedLocation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskEncryptionCriteriaEncryptedLocation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskEncryptionCriteriaEncryptedLocation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 encryption_state: Optional['outputs.HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState'] = None):
        """
        :param _builtins.str name: Encryption location. String length must not exceed 1023 characters.
        :param 'HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateArgs' encryption_state: The EncryptionState param.
        """
        pulumi.set(__self__, "name", name)
        if encryption_state is not None:
            pulumi.set(__self__, "encryption_state", encryption_state)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Encryption location. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="encryptionState")
    def encryption_state(self) -> Optional['outputs.HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState']:
        """
        The EncryptionState param.
        """
        return pulumi.get(self, "encryption_state")


@pulumi.output_type
class HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionState.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str is_: The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `is_not`
        """
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`. Ensure that only one of the following is specified: `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectDiskEncryptionVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HipObjectFirewall(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectFirewall. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectFirewall.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectFirewall.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectFirewallCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectFirewallVendor']] = None):
        """
        :param 'HipObjectFirewallCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectFirewallVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectFirewallCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectFirewallVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectFirewallCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"
        elif key == "isInstalled":
            suggest = "is_installed"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectFirewallCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectFirewallCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectFirewallCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.str] = None,
                 is_installed: Optional[_builtins.bool] = None):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.str]:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class HipObjectFirewallVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HipObjectHostInfo(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.HipObjectHostInfoCriteria'):
        """
        :param 'HipObjectHostInfoCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.HipObjectHostInfoCriteria':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class HipObjectHostInfoCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "clientVersion":
            suggest = "client_version"
        elif key == "hostId":
            suggest = "host_id"
        elif key == "hostName":
            suggest = "host_name"
        elif key == "serialNumber":
            suggest = "serial_number"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 client_version: Optional['outputs.HipObjectHostInfoCriteriaClientVersion'] = None,
                 domain: Optional['outputs.HipObjectHostInfoCriteriaDomain'] = None,
                 host_id: Optional['outputs.HipObjectHostInfoCriteriaHostId'] = None,
                 host_name: Optional['outputs.HipObjectHostInfoCriteriaHostName'] = None,
                 managed: Optional[_builtins.bool] = None,
                 os: Optional['outputs.HipObjectHostInfoCriteriaOs'] = None,
                 serial_number: Optional['outputs.HipObjectHostInfoCriteriaSerialNumber'] = None):
        """
        :param 'HipObjectHostInfoCriteriaClientVersionArgs' client_version: The ClientVersion param.
        :param 'HipObjectHostInfoCriteriaDomainArgs' domain: The Domain param.
        :param 'HipObjectHostInfoCriteriaHostIdArgs' host_id: The HostId param.
        :param 'HipObjectHostInfoCriteriaHostNameArgs' host_name: The HostName param.
        :param _builtins.bool managed: If device is managed.
        :param 'HipObjectHostInfoCriteriaOsArgs' os: The Os param.
        :param 'HipObjectHostInfoCriteriaSerialNumberArgs' serial_number: The SerialNumber param.
        """
        if client_version is not None:
            pulumi.set(__self__, "client_version", client_version)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if host_id is not None:
            pulumi.set(__self__, "host_id", host_id)
        if host_name is not None:
            pulumi.set(__self__, "host_name", host_name)
        if managed is not None:
            pulumi.set(__self__, "managed", managed)
        if os is not None:
            pulumi.set(__self__, "os", os)
        if serial_number is not None:
            pulumi.set(__self__, "serial_number", serial_number)

    @_builtins.property
    @pulumi.getter(name="clientVersion")
    def client_version(self) -> Optional['outputs.HipObjectHostInfoCriteriaClientVersion']:
        """
        The ClientVersion param.
        """
        return pulumi.get(self, "client_version")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> Optional['outputs.HipObjectHostInfoCriteriaDomain']:
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> Optional['outputs.HipObjectHostInfoCriteriaHostId']:
        """
        The HostId param.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> Optional['outputs.HipObjectHostInfoCriteriaHostName']:
        """
        The HostName param.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def managed(self) -> Optional[_builtins.bool]:
        """
        If device is managed.
        """
        return pulumi.get(self, "managed")

    @_builtins.property
    @pulumi.getter
    def os(self) -> Optional['outputs.HipObjectHostInfoCriteriaOs']:
        """
        The Os param.
        """
        return pulumi.get(self, "os")

    @_builtins.property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> Optional['outputs.HipObjectHostInfoCriteriaSerialNumber']:
        """
        The SerialNumber param.
        """
        return pulumi.get(self, "serial_number")


@pulumi.output_type
class HipObjectHostInfoCriteriaClientVersion(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteriaClientVersion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteriaClientVersion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteriaClientVersion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectHostInfoCriteriaDomain(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteriaDomain. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteriaDomain.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteriaDomain.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectHostInfoCriteriaHostId(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteriaHostId. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteriaHostId.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteriaHostId.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectHostInfoCriteriaHostName(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteriaHostName. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteriaHostName.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteriaHostName.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectHostInfoCriteriaOs(dict):
    def __init__(__self__, *,
                 contains: Optional['outputs.HipObjectHostInfoCriteriaOsContains'] = None):
        """
        :param 'HipObjectHostInfoCriteriaOsContainsArgs' contains: The Contains param. Ensure that only one of the following is specified: `contains`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional['outputs.HipObjectHostInfoCriteriaOsContains']:
        """
        The Contains param. Ensure that only one of the following is specified: `contains`
        """
        return pulumi.get(self, "contains")


@pulumi.output_type
class HipObjectHostInfoCriteriaOsContains(dict):
    def __init__(__self__, *,
                 apple: Optional[_builtins.str] = None,
                 google: Optional[_builtins.str] = None,
                 linux: Optional[_builtins.str] = None,
                 microsoft: Optional[_builtins.str] = None,
                 other: Optional[_builtins.str] = None):
        """
        :param _builtins.str apple: Apple vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        :param _builtins.str google: Google vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        :param _builtins.str linux: Linux vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        :param _builtins.str microsoft: Microsoft vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        :param _builtins.str other: Other vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        if apple is not None:
            pulumi.set(__self__, "apple", apple)
        if google is not None:
            pulumi.set(__self__, "google", google)
        if linux is not None:
            pulumi.set(__self__, "linux", linux)
        if microsoft is not None:
            pulumi.set(__self__, "microsoft", microsoft)
        if other is not None:
            pulumi.set(__self__, "other", other)

    @_builtins.property
    @pulumi.getter
    def apple(self) -> Optional[_builtins.str]:
        """
        Apple vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        return pulumi.get(self, "apple")

    @_builtins.property
    @pulumi.getter
    def google(self) -> Optional[_builtins.str]:
        """
        Google vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        return pulumi.get(self, "google")

    @_builtins.property
    @pulumi.getter
    def linux(self) -> Optional[_builtins.str]:
        """
        Linux vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        return pulumi.get(self, "linux")

    @_builtins.property
    @pulumi.getter
    def microsoft(self) -> Optional[_builtins.str]:
        """
        Microsoft vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        return pulumi.get(self, "microsoft")

    @_builtins.property
    @pulumi.getter
    def other(self) -> Optional[_builtins.str]:
        """
        Other vendor. String length must not exceed 255 characters. Ensure that only one of the following is specified: `Apple`, `Google`, `Linux`, `Microsoft`, `Other`
        """
        return pulumi.get(self, "other")


@pulumi.output_type
class HipObjectHostInfoCriteriaSerialNumber(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectHostInfoCriteriaSerialNumber. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectHostInfoCriteriaSerialNumber.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectHostInfoCriteriaSerialNumber.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectMobileDevice(dict):
    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectMobileDeviceCriteria'] = None):
        """
        :param 'HipObjectMobileDeviceCriteriaArgs' criteria: The Criteria param.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectMobileDeviceCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class HipObjectMobileDeviceCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "diskEncrypted":
            suggest = "disk_encrypted"
        elif key == "lastCheckinTime":
            suggest = "last_checkin_time"
        elif key == "passcodeSet":
            suggest = "passcode_set"
        elif key == "phoneNumber":
            suggest = "phone_number"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 applications: Optional['outputs.HipObjectMobileDeviceCriteriaApplications'] = None,
                 disk_encrypted: Optional[_builtins.bool] = None,
                 imei: Optional['outputs.HipObjectMobileDeviceCriteriaImei'] = None,
                 jailbroken: Optional[_builtins.bool] = None,
                 last_checkin_time: Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTime'] = None,
                 model: Optional['outputs.HipObjectMobileDeviceCriteriaModel'] = None,
                 passcode_set: Optional[_builtins.bool] = None,
                 phone_number: Optional['outputs.HipObjectMobileDeviceCriteriaPhoneNumber'] = None,
                 tag: Optional['outputs.HipObjectMobileDeviceCriteriaTag'] = None):
        """
        :param 'HipObjectMobileDeviceCriteriaApplicationsArgs' applications: The Applications param.
        :param _builtins.bool disk_encrypted: If device's disk is encrypted.
        :param 'HipObjectMobileDeviceCriteriaImeiArgs' imei: The Imei param.
        :param _builtins.bool jailbroken: If device is by rooted/jailbroken.
        :param 'HipObjectMobileDeviceCriteriaLastCheckinTimeArgs' last_checkin_time: The LastCheckinTime param.
        :param 'HipObjectMobileDeviceCriteriaModelArgs' model: The Model param.
        :param _builtins.bool passcode_set: If device's passcode is present.
        :param 'HipObjectMobileDeviceCriteriaPhoneNumberArgs' phone_number: The PhoneNumber param.
        :param 'HipObjectMobileDeviceCriteriaTagArgs' tag: The Tag param.
        """
        if applications is not None:
            pulumi.set(__self__, "applications", applications)
        if disk_encrypted is not None:
            pulumi.set(__self__, "disk_encrypted", disk_encrypted)
        if imei is not None:
            pulumi.set(__self__, "imei", imei)
        if jailbroken is not None:
            pulumi.set(__self__, "jailbroken", jailbroken)
        if last_checkin_time is not None:
            pulumi.set(__self__, "last_checkin_time", last_checkin_time)
        if model is not None:
            pulumi.set(__self__, "model", model)
        if passcode_set is not None:
            pulumi.set(__self__, "passcode_set", passcode_set)
        if phone_number is not None:
            pulumi.set(__self__, "phone_number", phone_number)
        if tag is not None:
            pulumi.set(__self__, "tag", tag)

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaApplications']:
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter(name="diskEncrypted")
    def disk_encrypted(self) -> Optional[_builtins.bool]:
        """
        If device's disk is encrypted.
        """
        return pulumi.get(self, "disk_encrypted")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaImei']:
        """
        The Imei param.
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def jailbroken(self) -> Optional[_builtins.bool]:
        """
        If device is by rooted/jailbroken.
        """
        return pulumi.get(self, "jailbroken")

    @_builtins.property
    @pulumi.getter(name="lastCheckinTime")
    def last_checkin_time(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTime']:
        """
        The LastCheckinTime param.
        """
        return pulumi.get(self, "last_checkin_time")

    @_builtins.property
    @pulumi.getter
    def model(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaModel']:
        """
        The Model param.
        """
        return pulumi.get(self, "model")

    @_builtins.property
    @pulumi.getter(name="passcodeSet")
    def passcode_set(self) -> Optional[_builtins.bool]:
        """
        If device's passcode is present.
        """
        return pulumi.get(self, "passcode_set")

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaPhoneNumber']:
        """
        The PhoneNumber param.
        """
        return pulumi.get(self, "phone_number")

    @_builtins.property
    @pulumi.getter
    def tag(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaTag']:
        """
        The Tag param.
        """
        return pulumi.get(self, "tag")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaApplications(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "hasMalware":
            suggest = "has_malware"
        elif key == "hasUnmanagedApp":
            suggest = "has_unmanaged_app"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaApplications. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaApplications.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaApplications.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 has_malware: Optional['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalware'] = None,
                 has_unmanaged_app: Optional[_builtins.bool] = None,
                 includes: Optional[Sequence['outputs.HipObjectMobileDeviceCriteriaApplicationsInclude']] = None):
        """
        :param 'HipObjectMobileDeviceCriteriaApplicationsHasMalwareArgs' has_malware: The HasMalware param.
        :param _builtins.bool has_unmanaged_app: Has apps that are not managed.
        :param Sequence['HipObjectMobileDeviceCriteriaApplicationsIncludeArgs'] includes: The Includes param.
        """
        if has_malware is not None:
            pulumi.set(__self__, "has_malware", has_malware)
        if has_unmanaged_app is not None:
            pulumi.set(__self__, "has_unmanaged_app", has_unmanaged_app)
        if includes is not None:
            pulumi.set(__self__, "includes", includes)

    @_builtins.property
    @pulumi.getter(name="hasMalware")
    def has_malware(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalware']:
        """
        The HasMalware param.
        """
        return pulumi.get(self, "has_malware")

    @_builtins.property
    @pulumi.getter(name="hasUnmanagedApp")
    def has_unmanaged_app(self) -> Optional[_builtins.bool]:
        """
        Has apps that are not managed.
        """
        return pulumi.get(self, "has_unmanaged_app")

    @_builtins.property
    @pulumi.getter
    def includes(self) -> Optional[Sequence['outputs.HipObjectMobileDeviceCriteriaApplicationsInclude']]:
        """
        The Includes param.
        """
        return pulumi.get(self, "includes")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaApplicationsHasMalware(dict):
    def __init__(__self__, *,
                 no: Optional[_builtins.bool] = None,
                 yes: Optional['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes'] = None):
        """
        :param _builtins.bool no: The No param. Ensure that only one of the following is specified: `no`, `yes`
        :param 'HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesArgs' yes: The Yes param. Ensure that only one of the following is specified: `no`, `yes`
        """
        if no is not None:
            pulumi.set(__self__, "no", no)
        if yes is not None:
            pulumi.set(__self__, "yes", yes)

    @_builtins.property
    @pulumi.getter
    def no(self) -> Optional[_builtins.bool]:
        """
        The No param. Ensure that only one of the following is specified: `no`, `yes`
        """
        return pulumi.get(self, "no")

    @_builtins.property
    @pulumi.getter
    def yes(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes']:
        """
        The Yes param. Ensure that only one of the following is specified: `no`, `yes`
        """
        return pulumi.get(self, "yes")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaApplicationsHasMalwareYes(dict):
    def __init__(__self__, *,
                 excludes: Optional[Sequence['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude']] = None):
        """
        :param Sequence['HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeArgs'] excludes: The Excludes param.
        """
        if excludes is not None:
            pulumi.set(__self__, "excludes", excludes)

    @_builtins.property
    @pulumi.getter
    def excludes(self) -> Optional[Sequence['outputs.HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude']]:
        """
        The Excludes param.
        """
        return pulumi.get(self, "excludes")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExclude(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 hash: Optional[_builtins.str] = None,
                 package: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if hash is not None:
            pulumi.set(__self__, "hash", hash)
        if package is not None:
            pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def hash(self) -> Optional[_builtins.str]:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def package(self) -> Optional[_builtins.str]:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaApplicationsInclude(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 hash: Optional[_builtins.str] = None,
                 package: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 31 characters.
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if hash is not None:
            pulumi.set(__self__, "hash", hash)
        if package is not None:
            pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def hash(self) -> Optional[_builtins.str]:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def package(self) -> Optional[_builtins.str]:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaImei(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaImei. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaImei.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaImei.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaLastCheckinTime(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "notWithin":
            suggest = "not_within"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaLastCheckinTime. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaLastCheckinTime.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaLastCheckinTime.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 not_within: Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin'] = None,
                 within: Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeWithin'] = None):
        """
        :param 'HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinArgs' not_within: The NotWithin param. Ensure that only one of the following is specified: `not_within`, `within`
        :param 'HipObjectMobileDeviceCriteriaLastCheckinTimeWithinArgs' within: The Within param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        if not_within is not None:
            pulumi.set(__self__, "not_within", not_within)
        if within is not None:
            pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin']:
        """
        The NotWithin param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> Optional['outputs.HipObjectMobileDeviceCriteriaLastCheckinTimeWithin']:
        """
        The Within param. Ensure that only one of the following is specified: `not_within`, `within`
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaLastCheckinTimeNotWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        if days is not None:
            pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaLastCheckinTimeWithin(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        if days is not None:
            pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaModel(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaModel. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaModel.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaModel.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaPhoneNumber(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaPhoneNumber. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaPhoneNumber.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaPhoneNumber.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectMobileDeviceCriteriaTag(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectMobileDeviceCriteriaTag. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectMobileDeviceCriteriaTag.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectMobileDeviceCriteriaTag.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 contains: Optional[_builtins.str] = None,
                 is_: Optional[_builtins.str] = None,
                 is_not: Optional[_builtins.str] = None):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        if contains is not None:
            pulumi.set(__self__, "contains", contains)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> Optional[_builtins.str]:
        """
        The Contains param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.str]:
        """
        The Is param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.str]:
        """
        The IsNot param. String length must not exceed 255 characters. Ensure that only one of the following is specified: `contains`, `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectNetworkInfo(dict):
    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectNetworkInfoCriteria'] = None):
        """
        :param 'HipObjectNetworkInfoCriteriaArgs' criteria: The Criteria param.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectNetworkInfoCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class HipObjectNetworkInfoCriteria(dict):
    def __init__(__self__, *,
                 network: Optional['outputs.HipObjectNetworkInfoCriteriaNetwork'] = None):
        """
        :param 'HipObjectNetworkInfoCriteriaNetworkArgs' network: The Network param.
        """
        if network is not None:
            pulumi.set(__self__, "network", network)

    @_builtins.property
    @pulumi.getter
    def network(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetwork']:
        """
        The Network param.
        """
        return pulumi.get(self, "network")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetwork(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectNetworkInfoCriteriaNetwork. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectNetworkInfoCriteriaNetwork.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectNetworkInfoCriteriaNetwork.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIs'] = None,
                 is_not: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNot'] = None):
        """
        :param 'HipObjectNetworkInfoCriteriaNetworkIsArgs' is_: The Is param. Ensure that only one of the following is specified: `is`, `is_not`
        :param 'HipObjectNetworkInfoCriteriaNetworkIsNotArgs' is_not: The IsNot param. Ensure that only one of the following is specified: `is`, `is_not`
        """
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIs']:
        """
        The Is param. Ensure that only one of the following is specified: `is`, `is_not`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNot']:
        """
        The IsNot param. Ensure that only one of the following is specified: `is`, `is_not`
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIs(dict):
    def __init__(__self__, *,
                 mobile: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsMobile'] = None,
                 unknown: Optional[_builtins.bool] = None,
                 wifi: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsWifi'] = None):
        """
        :param 'HipObjectNetworkInfoCriteriaNetworkIsMobileArgs' mobile: The Mobile param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        :param _builtins.bool unknown: The Unknown param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        :param 'HipObjectNetworkInfoCriteriaNetworkIsWifiArgs' wifi: The Wifi param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        """
        if mobile is not None:
            pulumi.set(__self__, "mobile", mobile)
        if unknown is not None:
            pulumi.set(__self__, "unknown", unknown)
        if wifi is not None:
            pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsMobile']:
        """
        The Mobile param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> Optional[_builtins.bool]:
        """
        The Unknown param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsWifi']:
        """
        The Wifi param. Ensure that only one of the following is specified: `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIsMobile(dict):
    def __init__(__self__, *,
                 carrier: Optional[_builtins.str] = None):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        if carrier is not None:
            pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> Optional[_builtins.str]:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIsNot(dict):
    def __init__(__self__, *,
                 ethernet: Optional[_builtins.bool] = None,
                 mobile: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNotMobile'] = None,
                 unknown: Optional[_builtins.bool] = None,
                 wifi: Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNotWifi'] = None):
        """
        :param _builtins.bool ethernet: The Ethernet param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        :param 'HipObjectNetworkInfoCriteriaNetworkIsNotMobileArgs' mobile: The Mobile param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        :param _builtins.bool unknown: The Unknown param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        :param 'HipObjectNetworkInfoCriteriaNetworkIsNotWifiArgs' wifi: The Wifi param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        """
        if ethernet is not None:
            pulumi.set(__self__, "ethernet", ethernet)
        if mobile is not None:
            pulumi.set(__self__, "mobile", mobile)
        if unknown is not None:
            pulumi.set(__self__, "unknown", unknown)
        if wifi is not None:
            pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def ethernet(self) -> Optional[_builtins.bool]:
        """
        The Ethernet param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "ethernet")

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNotMobile']:
        """
        The Mobile param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> Optional[_builtins.bool]:
        """
        The Unknown param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> Optional['outputs.HipObjectNetworkInfoCriteriaNetworkIsNotWifi']:
        """
        The Wifi param. Ensure that only one of the following is specified: `ethernet`, `mobile`, `unknown`, `wifi`
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIsNotMobile(dict):
    def __init__(__self__, *,
                 carrier: Optional[_builtins.str] = None):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        if carrier is not None:
            pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> Optional[_builtins.str]:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIsNotWifi(dict):
    def __init__(__self__, *,
                 ssid: Optional[_builtins.str] = None):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        if ssid is not None:
            pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> Optional[_builtins.str]:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class HipObjectNetworkInfoCriteriaNetworkIsWifi(dict):
    def __init__(__self__, *,
                 ssid: Optional[_builtins.str] = None):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        if ssid is not None:
            pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> Optional[_builtins.str]:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class HipObjectPatchManagement(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "excludeVendor":
            suggest = "exclude_vendor"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectPatchManagement. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectPatchManagement.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectPatchManagement.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 criteria: Optional['outputs.HipObjectPatchManagementCriteria'] = None,
                 exclude_vendor: Optional[_builtins.bool] = None,
                 vendors: Optional[Sequence['outputs.HipObjectPatchManagementVendor']] = None):
        """
        :param 'HipObjectPatchManagementCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['HipObjectPatchManagementVendorArgs'] vendors: Vendor name.
        """
        if criteria is not None:
            pulumi.set(__self__, "criteria", criteria)
        if exclude_vendor is not None:
            pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        if vendors is not None:
            pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> Optional['outputs.HipObjectPatchManagementCriteria']:
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> Optional[_builtins.bool]:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Optional[Sequence['outputs.HipObjectPatchManagementVendor']]:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class HipObjectPatchManagementCriteria(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isEnabled":
            suggest = "is_enabled"
        elif key == "isInstalled":
            suggest = "is_installed"
        elif key == "missingPatches":
            suggest = "missing_patches"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectPatchManagementCriteria. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectPatchManagementCriteria.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectPatchManagementCriteria.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 is_enabled: Optional[_builtins.str] = None,
                 is_installed: Optional[_builtins.bool] = None,
                 missing_patches: Optional['outputs.HipObjectPatchManagementCriteriaMissingPatches'] = None):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'HipObjectPatchManagementCriteriaMissingPatchesArgs' missing_patches: The MissingPatches param.
        """
        if is_enabled is not None:
            pulumi.set(__self__, "is_enabled", is_enabled)
        if is_installed is not None:
            pulumi.set(__self__, "is_installed", is_installed)
        if missing_patches is not None:
            pulumi.set(__self__, "missing_patches", missing_patches)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> Optional[_builtins.str]:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> Optional[_builtins.bool]:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="missingPatches")
    def missing_patches(self) -> Optional['outputs.HipObjectPatchManagementCriteriaMissingPatches']:
        """
        The MissingPatches param.
        """
        return pulumi.get(self, "missing_patches")


@pulumi.output_type
class HipObjectPatchManagementCriteriaMissingPatches(dict):
    def __init__(__self__, *,
                 check: Optional[_builtins.str] = None,
                 patches: Optional[Sequence[_builtins.str]] = None,
                 severity: Optional['outputs.HipObjectPatchManagementCriteriaMissingPatchesSeverity'] = None):
        """
        :param _builtins.str check: The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        :param Sequence[_builtins.str] patches: The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        :param 'HipObjectPatchManagementCriteriaMissingPatchesSeverityArgs' severity: The Severity param.
        """
        if check is not None:
            pulumi.set(__self__, "check", check)
        if patches is not None:
            pulumi.set(__self__, "patches", patches)
        if severity is not None:
            pulumi.set(__self__, "severity", severity)

    @_builtins.property
    @pulumi.getter
    def check(self) -> Optional[_builtins.str]:
        """
        The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        """
        return pulumi.get(self, "check")

    @_builtins.property
    @pulumi.getter
    def patches(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "patches")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> Optional['outputs.HipObjectPatchManagementCriteriaMissingPatchesSeverity']:
        """
        The Severity param.
        """
        return pulumi.get(self, "severity")


@pulumi.output_type
class HipObjectPatchManagementCriteriaMissingPatchesSeverity(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "greaterEqual":
            suggest = "greater_equal"
        elif key == "greaterThan":
            suggest = "greater_than"
        elif key == "is":
            suggest = "is_"
        elif key == "isNot":
            suggest = "is_not"
        elif key == "lessEqual":
            suggest = "less_equal"
        elif key == "lessThan":
            suggest = "less_than"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in HipObjectPatchManagementCriteriaMissingPatchesSeverity. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        HipObjectPatchManagementCriteriaMissingPatchesSeverity.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        HipObjectPatchManagementCriteriaMissingPatchesSeverity.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 greater_equal: Optional[_builtins.int] = None,
                 greater_than: Optional[_builtins.int] = None,
                 is_: Optional[_builtins.int] = None,
                 is_not: Optional[_builtins.int] = None,
                 less_equal: Optional[_builtins.int] = None,
                 less_than: Optional[_builtins.int] = None):
        """
        :param _builtins.int greater_equal: The GreaterEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        :param _builtins.int greater_than: The GreaterThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        :param _builtins.int is_: The Is param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        :param _builtins.int is_not: The IsNot param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        :param _builtins.int less_equal: The LessEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        :param _builtins.int less_than: The LessThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        if greater_equal is not None:
            pulumi.set(__self__, "greater_equal", greater_equal)
        if greater_than is not None:
            pulumi.set(__self__, "greater_than", greater_than)
        if is_ is not None:
            pulumi.set(__self__, "is_", is_)
        if is_not is not None:
            pulumi.set(__self__, "is_not", is_not)
        if less_equal is not None:
            pulumi.set(__self__, "less_equal", less_equal)
        if less_than is not None:
            pulumi.set(__self__, "less_than", less_than)

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> Optional[_builtins.int]:
        """
        The GreaterEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> Optional[_builtins.int]:
        """
        The GreaterThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> Optional[_builtins.int]:
        """
        The Is param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> Optional[_builtins.int]:
        """
        The IsNot param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> Optional[_builtins.int]:
        """
        The LessEqual param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> Optional[_builtins.int]:
        """
        The LessThan param. Value must be between 0 and 100000. Ensure that only one of the following is specified: `greater_equal`, `greater_than`, `is`, `is_not`, `less_equal`, `less_than`
        """
        return pulumi.get(self, "less_than")


@pulumi.output_type
class HipObjectPatchManagementVendor(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Optional[Sequence[_builtins.str]] = None):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        if products is not None:
            pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Optional[Sequence[_builtins.str]]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class HttpHeaderProfileHttpHeaderInsertion(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 types: Sequence['outputs.HttpHeaderProfileHttpHeaderInsertionType']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['HttpHeaderProfileHttpHeaderInsertionTypeArgs'] types: The Types param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "types", types)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def types(self) -> Sequence['outputs.HttpHeaderProfileHttpHeaderInsertionType']:
        """
        The Types param.
        """
        return pulumi.get(self, "types")


@pulumi.output_type
class HttpHeaderProfileHttpHeaderInsertionType(dict):
    def __init__(__self__, *,
                 domains: Sequence[_builtins.str],
                 headers: Sequence['outputs.HttpHeaderProfileHttpHeaderInsertionTypeHeader'],
                 name: _builtins.str):
        """
        :param Sequence[_builtins.str] domains: The Domains param.
        :param Sequence['HttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs'] headers: The Headers param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "headers", headers)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def domains(self) -> Sequence[_builtins.str]:
        """
        The Domains param.
        """
        return pulumi.get(self, "domains")

    @_builtins.property
    @pulumi.getter
    def headers(self) -> Sequence['outputs.HttpHeaderProfileHttpHeaderInsertionTypeHeader']:
        """
        The Headers param.
        """
        return pulumi.get(self, "headers")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class HttpHeaderProfileHttpHeaderInsertionTypeHeader(dict):
    def __init__(__self__, *,
                 header: _builtins.str,
                 name: _builtins.str,
                 value: _builtins.str,
                 log: Optional[_builtins.bool] = None):
        """
        :param _builtins.str header: The Header param.
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        :param _builtins.bool log: The Log param. Default: `false`.
        """
        pulumi.set(__self__, "header", header)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)
        if log is not None:
            pulumi.set(__self__, "log", log)

    @_builtins.property
    @pulumi.getter
    def header(self) -> _builtins.str:
        """
        The Header param.
        """
        return pulumi.get(self, "header")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")

    @_builtins.property
    @pulumi.getter
    def log(self) -> Optional[_builtins.bool]:
        """
        The Log param. Default: `false`.
        """
        return pulumi.get(self, "log")


@pulumi.output_type
class IkeCryptoProfileLifetime(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None,
                 minutes: Optional[_builtins.int] = None,
                 seconds: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)
        if minutes is not None:
            pulumi.set(__self__, "minutes", minutes)
        if seconds is not None:
            pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> Optional[_builtins.int]:
        """
        specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> Optional[_builtins.int]:
        """
        specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class IkeGatewayAuthentication(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "preSharedKey":
            suggest = "pre_shared_key"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayAuthentication. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayAuthentication.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayAuthentication.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate: Optional['outputs.IkeGatewayAuthenticationCertificate'] = None,
                 pre_shared_key: Optional['outputs.IkeGatewayAuthenticationPreSharedKey'] = None):
        """
        :param 'IkeGatewayAuthenticationCertificateArgs' certificate: The Certificate param. Ensure that only one of the following is specified: `certificate`, `pre_shared_key`
        :param 'IkeGatewayAuthenticationPreSharedKeyArgs' pre_shared_key: The PreSharedKey param. Ensure that only one of the following is specified: `certificate`, `pre_shared_key`
        """
        if certificate is not None:
            pulumi.set(__self__, "certificate", certificate)
        if pre_shared_key is not None:
            pulumi.set(__self__, "pre_shared_key", pre_shared_key)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> Optional['outputs.IkeGatewayAuthenticationCertificate']:
        """
        The Certificate param. Ensure that only one of the following is specified: `certificate`, `pre_shared_key`
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="preSharedKey")
    def pre_shared_key(self) -> Optional['outputs.IkeGatewayAuthenticationPreSharedKey']:
        """
        The PreSharedKey param. Ensure that only one of the following is specified: `certificate`, `pre_shared_key`
        """
        return pulumi.get(self, "pre_shared_key")


@pulumi.output_type
class IkeGatewayAuthenticationCertificate(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "allowIdPayloadMismatch":
            suggest = "allow_id_payload_mismatch"
        elif key == "certificateProfile":
            suggest = "certificate_profile"
        elif key == "localCertificate":
            suggest = "local_certificate"
        elif key == "strictValidationRevocation":
            suggest = "strict_validation_revocation"
        elif key == "useManagementAsSource":
            suggest = "use_management_as_source"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayAuthenticationCertificate. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayAuthenticationCertificate.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayAuthenticationCertificate.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 allow_id_payload_mismatch: Optional[_builtins.bool] = None,
                 certificate_profile: Optional[_builtins.str] = None,
                 local_certificate: Optional['outputs.IkeGatewayAuthenticationCertificateLocalCertificate'] = None,
                 strict_validation_revocation: Optional[_builtins.bool] = None,
                 use_management_as_source: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool allow_id_payload_mismatch: The AllowIdPayloadMismatch param.
        :param _builtins.str certificate_profile: The CertificateProfile param.
        :param 'IkeGatewayAuthenticationCertificateLocalCertificateArgs' local_certificate: The LocalCertificate param.
        :param _builtins.bool strict_validation_revocation: The StrictValidationRevocation param.
        :param _builtins.bool use_management_as_source: The UseManagementAsSource param.
        """
        if allow_id_payload_mismatch is not None:
            pulumi.set(__self__, "allow_id_payload_mismatch", allow_id_payload_mismatch)
        if certificate_profile is not None:
            pulumi.set(__self__, "certificate_profile", certificate_profile)
        if local_certificate is not None:
            pulumi.set(__self__, "local_certificate", local_certificate)
        if strict_validation_revocation is not None:
            pulumi.set(__self__, "strict_validation_revocation", strict_validation_revocation)
        if use_management_as_source is not None:
            pulumi.set(__self__, "use_management_as_source", use_management_as_source)

    @_builtins.property
    @pulumi.getter(name="allowIdPayloadMismatch")
    def allow_id_payload_mismatch(self) -> Optional[_builtins.bool]:
        """
        The AllowIdPayloadMismatch param.
        """
        return pulumi.get(self, "allow_id_payload_mismatch")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> Optional[_builtins.str]:
        """
        The CertificateProfile param.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="localCertificate")
    def local_certificate(self) -> Optional['outputs.IkeGatewayAuthenticationCertificateLocalCertificate']:
        """
        The LocalCertificate param.
        """
        return pulumi.get(self, "local_certificate")

    @_builtins.property
    @pulumi.getter(name="strictValidationRevocation")
    def strict_validation_revocation(self) -> Optional[_builtins.bool]:
        """
        The StrictValidationRevocation param.
        """
        return pulumi.get(self, "strict_validation_revocation")

    @_builtins.property
    @pulumi.getter(name="useManagementAsSource")
    def use_management_as_source(self) -> Optional[_builtins.bool]:
        """
        The UseManagementAsSource param.
        """
        return pulumi.get(self, "use_management_as_source")


@pulumi.output_type
class IkeGatewayAuthenticationCertificateLocalCertificate(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localCertificateName":
            suggest = "local_certificate_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayAuthenticationCertificateLocalCertificate. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayAuthenticationCertificateLocalCertificate.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayAuthenticationCertificateLocalCertificate.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_certificate_name: Optional[_builtins.str] = None):
        """
        :param _builtins.str local_certificate_name: The LocalCertificateName param.
        """
        if local_certificate_name is not None:
            pulumi.set(__self__, "local_certificate_name", local_certificate_name)

    @_builtins.property
    @pulumi.getter(name="localCertificateName")
    def local_certificate_name(self) -> Optional[_builtins.str]:
        """
        The LocalCertificateName param.
        """
        return pulumi.get(self, "local_certificate_name")


@pulumi.output_type
class IkeGatewayAuthenticationPreSharedKey(dict):
    def __init__(__self__, *,
                 key: Optional[_builtins.str] = None):
        """
        :param _builtins.str key: The Key param.
        """
        if key is not None:
            pulumi.set(__self__, "key", key)

    @_builtins.property
    @pulumi.getter
    def key(self) -> Optional[_builtins.str]:
        """
        The Key param.
        """
        return pulumi.get(self, "key")


@pulumi.output_type
class IkeGatewayLocalId(dict):
    def __init__(__self__, *,
                 id: Optional[_builtins.str] = None,
                 type: Optional[_builtins.str] = None):
        """
        :param _builtins.str id: Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class IkeGatewayPeerAddress(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dynamicAddress":
            suggest = "dynamic_address"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayPeerAddress. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayPeerAddress.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayPeerAddress.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dynamic_address: Optional[_builtins.bool] = None,
                 fqdn: Optional[_builtins.str] = None,
                 ip: Optional[_builtins.str] = None):
        """
        :param _builtins.bool dynamic_address: The DynamicAddress param. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        :param _builtins.str fqdn: peer gateway FQDN name. String length must not exceed 255 characters. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        :param _builtins.str ip: peer gateway has static IP address. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        """
        if dynamic_address is not None:
            pulumi.set(__self__, "dynamic_address", dynamic_address)
        if fqdn is not None:
            pulumi.set(__self__, "fqdn", fqdn)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)

    @_builtins.property
    @pulumi.getter(name="dynamicAddress")
    def dynamic_address(self) -> Optional[_builtins.bool]:
        """
        The DynamicAddress param. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        """
        return pulumi.get(self, "dynamic_address")

    @_builtins.property
    @pulumi.getter
    def fqdn(self) -> Optional[_builtins.str]:
        """
        peer gateway FQDN name. String length must not exceed 255 characters. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        """
        return pulumi.get(self, "fqdn")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> Optional[_builtins.str]:
        """
        peer gateway has static IP address. Ensure that only one of the following is specified: `dynamic`, `fqdn`, `ip`
        """
        return pulumi.get(self, "ip")


@pulumi.output_type
class IkeGatewayPeerId(dict):
    def __init__(__self__, *,
                 id: Optional[_builtins.str] = None,
                 type: Optional[_builtins.str] = None):
        """
        :param _builtins.str id: Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        if id is not None:
            pulumi.set(__self__, "id", id)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> Optional[_builtins.str]:
        """
        Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional[_builtins.str]:
        """
        The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class IkeGatewayProtocol(dict):
    def __init__(__self__, *,
                 ikev1: Optional['outputs.IkeGatewayProtocolIkev1'] = None,
                 ikev2: Optional['outputs.IkeGatewayProtocolIkev2'] = None,
                 version: Optional[_builtins.str] = None):
        """
        :param 'IkeGatewayProtocolIkev1Args' ikev1: The Ikev1 param.
        :param 'IkeGatewayProtocolIkev2Args' ikev2: The Ikev2 param.
        :param _builtins.str version: The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        if ikev1 is not None:
            pulumi.set(__self__, "ikev1", ikev1)
        if ikev2 is not None:
            pulumi.set(__self__, "ikev2", ikev2)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def ikev1(self) -> Optional['outputs.IkeGatewayProtocolIkev1']:
        """
        The Ikev1 param.
        """
        return pulumi.get(self, "ikev1")

    @_builtins.property
    @pulumi.getter
    def ikev2(self) -> Optional['outputs.IkeGatewayProtocolIkev2']:
        """
        The Ikev2 param.
        """
        return pulumi.get(self, "ikev2")

    @_builtins.property
    @pulumi.getter
    def version(self) -> Optional[_builtins.str]:
        """
        The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class IkeGatewayProtocolCommon(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "natTraversal":
            suggest = "nat_traversal"
        elif key == "passiveMode":
            suggest = "passive_mode"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayProtocolCommon. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayProtocolCommon.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayProtocolCommon.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 fragmentation: Optional['outputs.IkeGatewayProtocolCommonFragmentation'] = None,
                 nat_traversal: Optional['outputs.IkeGatewayProtocolCommonNatTraversal'] = None,
                 passive_mode: Optional[_builtins.bool] = None):
        """
        :param 'IkeGatewayProtocolCommonFragmentationArgs' fragmentation: The Fragmentation param.
        :param 'IkeGatewayProtocolCommonNatTraversalArgs' nat_traversal: The NatTraversal param.
        :param _builtins.bool passive_mode: The PassiveMode param.
        """
        if fragmentation is not None:
            pulumi.set(__self__, "fragmentation", fragmentation)
        if nat_traversal is not None:
            pulumi.set(__self__, "nat_traversal", nat_traversal)
        if passive_mode is not None:
            pulumi.set(__self__, "passive_mode", passive_mode)

    @_builtins.property
    @pulumi.getter
    def fragmentation(self) -> Optional['outputs.IkeGatewayProtocolCommonFragmentation']:
        """
        The Fragmentation param.
        """
        return pulumi.get(self, "fragmentation")

    @_builtins.property
    @pulumi.getter(name="natTraversal")
    def nat_traversal(self) -> Optional['outputs.IkeGatewayProtocolCommonNatTraversal']:
        """
        The NatTraversal param.
        """
        return pulumi.get(self, "nat_traversal")

    @_builtins.property
    @pulumi.getter(name="passiveMode")
    def passive_mode(self) -> Optional[_builtins.bool]:
        """
        The PassiveMode param.
        """
        return pulumi.get(self, "passive_mode")


@pulumi.output_type
class IkeGatewayProtocolCommonFragmentation(dict):
    def __init__(__self__, *,
                 enable: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool enable: The Enable param. Default: `false`.
        """
        if enable is not None:
            pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param. Default: `false`.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class IkeGatewayProtocolCommonNatTraversal(dict):
    def __init__(__self__, *,
                 enable: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool enable: The Enable param.
        """
        if enable is not None:
            pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class IkeGatewayProtocolIkev1(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ikeCryptoProfile":
            suggest = "ike_crypto_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayProtocolIkev1. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayProtocolIkev1.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayProtocolIkev1.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dpd: Optional['outputs.IkeGatewayProtocolIkev1Dpd'] = None,
                 ike_crypto_profile: Optional[_builtins.str] = None):
        """
        :param 'IkeGatewayProtocolIkev1DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        if dpd is not None:
            pulumi.set(__self__, "dpd", dpd)
        if ike_crypto_profile is not None:
            pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> Optional['outputs.IkeGatewayProtocolIkev1Dpd']:
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> Optional[_builtins.str]:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class IkeGatewayProtocolIkev1Dpd(dict):
    def __init__(__self__, *,
                 enable: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool enable: The Enable param.
        """
        if enable is not None:
            pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class IkeGatewayProtocolIkev2(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ikeCryptoProfile":
            suggest = "ike_crypto_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IkeGatewayProtocolIkev2. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IkeGatewayProtocolIkev2.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IkeGatewayProtocolIkev2.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dpd: Optional['outputs.IkeGatewayProtocolIkev2Dpd'] = None,
                 ike_crypto_profile: Optional[_builtins.str] = None):
        """
        :param 'IkeGatewayProtocolIkev2DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        if dpd is not None:
            pulumi.set(__self__, "dpd", dpd)
        if ike_crypto_profile is not None:
            pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> Optional['outputs.IkeGatewayProtocolIkev2Dpd']:
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> Optional[_builtins.str]:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class IkeGatewayProtocolIkev2Dpd(dict):
    def __init__(__self__, *,
                 enable: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool enable: The Enable param.
        """
        if enable is not None:
            pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class IpsecCryptoProfileAh(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        pulumi.set(__self__, "authentications", authentications)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        return pulumi.get(self, "authentications")


@pulumi.output_type
class IpsecCryptoProfileEsp(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str],
                 encryptions: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: Authentication algorithm.
        :param Sequence[_builtins.str] encryptions: Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        pulumi.set(__self__, "authentications", authentications)
        pulumi.set(__self__, "encryptions", encryptions)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        Authentication algorithm.
        """
        return pulumi.get(self, "authentications")

    @_builtins.property
    @pulumi.getter
    def encryptions(self) -> Sequence[_builtins.str]:
        """
        Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        return pulumi.get(self, "encryptions")


@pulumi.output_type
class IpsecCryptoProfileLifesize(dict):
    def __init__(__self__, *,
                 gb: Optional[_builtins.int] = None,
                 kb: Optional[_builtins.int] = None,
                 mb: Optional[_builtins.int] = None,
                 tb: Optional[_builtins.int] = None):
        """
        :param _builtins.int gb: specify lifesize in gigabytes(GB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        :param _builtins.int kb: specify lifesize in kilobytes(KB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        :param _builtins.int mb: specify lifesize in megabytes(MB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        :param _builtins.int tb: specify lifesize in terabytes(TB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        """
        if gb is not None:
            pulumi.set(__self__, "gb", gb)
        if kb is not None:
            pulumi.set(__self__, "kb", kb)
        if mb is not None:
            pulumi.set(__self__, "mb", mb)
        if tb is not None:
            pulumi.set(__self__, "tb", tb)

    @_builtins.property
    @pulumi.getter
    def gb(self) -> Optional[_builtins.int]:
        """
        specify lifesize in gigabytes(GB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        """
        return pulumi.get(self, "gb")

    @_builtins.property
    @pulumi.getter
    def kb(self) -> Optional[_builtins.int]:
        """
        specify lifesize in kilobytes(KB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        """
        return pulumi.get(self, "kb")

    @_builtins.property
    @pulumi.getter
    def mb(self) -> Optional[_builtins.int]:
        """
        specify lifesize in megabytes(MB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        """
        return pulumi.get(self, "mb")

    @_builtins.property
    @pulumi.getter
    def tb(self) -> Optional[_builtins.int]:
        """
        specify lifesize in terabytes(TB). Value must be between 1 and 65535. Ensure that only one of the following is specified: `gb`, `kb`, `mb`, `tb`
        """
        return pulumi.get(self, "tb")


@pulumi.output_type
class IpsecCryptoProfileLifetime(dict):
    def __init__(__self__, *,
                 days: Optional[_builtins.int] = None,
                 hours: Optional[_builtins.int] = None,
                 minutes: Optional[_builtins.int] = None,
                 seconds: Optional[_builtins.int] = None):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        if days is not None:
            pulumi.set(__self__, "days", days)
        if hours is not None:
            pulumi.set(__self__, "hours", hours)
        if minutes is not None:
            pulumi.set(__self__, "minutes", minutes)
        if seconds is not None:
            pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> Optional[_builtins.int]:
        """
        specify lifetime in days. Value must be between 1 and 365. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> Optional[_builtins.int]:
        """
        specify lifetime in hours. Value must be between 1 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> Optional[_builtins.int]:
        """
        specify lifetime in minutes. Value must be between 3 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> Optional[_builtins.int]:
        """
        specify lifetime in seconds. Value must be between 180 and 65535. Ensure that only one of the following is specified: `days`, `hours`, `minutes`, `seconds`
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class IpsecTunnelAutoKey(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ikeGateways":
            suggest = "ike_gateways"
        elif key == "ipsecCryptoProfile":
            suggest = "ipsec_crypto_profile"
        elif key == "proxyIdV6s":
            suggest = "proxy_id_v6s"
        elif key == "proxyIds":
            suggest = "proxy_ids"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelAutoKey. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelAutoKey.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelAutoKey.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ike_gateways: Sequence['outputs.IpsecTunnelAutoKeyIkeGateway'],
                 ipsec_crypto_profile: _builtins.str,
                 proxy_id_v6s: Optional[Sequence['outputs.IpsecTunnelAutoKeyProxyIdV6']] = None,
                 proxy_ids: Optional[Sequence['outputs.IpsecTunnelAutoKeyProxyId']] = None):
        """
        :param Sequence['IpsecTunnelAutoKeyIkeGatewayArgs'] ike_gateways: The IkeGateways param.
        :param _builtins.str ipsec_crypto_profile: The IpsecCryptoProfile param.
        :param Sequence['IpsecTunnelAutoKeyProxyIdV6Args'] proxy_id_v6s: IPv6 type of proxy*id values.
        :param Sequence['IpsecTunnelAutoKeyProxyIdArgs'] proxy_ids: IPv4 type of proxy*id values.
        """
        pulumi.set(__self__, "ike_gateways", ike_gateways)
        pulumi.set(__self__, "ipsec_crypto_profile", ipsec_crypto_profile)
        if proxy_id_v6s is not None:
            pulumi.set(__self__, "proxy_id_v6s", proxy_id_v6s)
        if proxy_ids is not None:
            pulumi.set(__self__, "proxy_ids", proxy_ids)

    @_builtins.property
    @pulumi.getter(name="ikeGateways")
    def ike_gateways(self) -> Sequence['outputs.IpsecTunnelAutoKeyIkeGateway']:
        """
        The IkeGateways param.
        """
        return pulumi.get(self, "ike_gateways")

    @_builtins.property
    @pulumi.getter(name="ipsecCryptoProfile")
    def ipsec_crypto_profile(self) -> _builtins.str:
        """
        The IpsecCryptoProfile param.
        """
        return pulumi.get(self, "ipsec_crypto_profile")

    @_builtins.property
    @pulumi.getter(name="proxyIdV6s")
    def proxy_id_v6s(self) -> Optional[Sequence['outputs.IpsecTunnelAutoKeyProxyIdV6']]:
        """
        IPv6 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_id_v6s")

    @_builtins.property
    @pulumi.getter(name="proxyIds")
    def proxy_ids(self) -> Optional[Sequence['outputs.IpsecTunnelAutoKeyProxyId']]:
        """
        IPv4 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_ids")


@pulumi.output_type
class IpsecTunnelAutoKeyIkeGateway(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyId(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 local: Optional[_builtins.str] = None,
                 protocol: Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocol'] = None,
                 remote: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str local: The Local param.
        :param 'IpsecTunnelAutoKeyProxyIdProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "name", name)
        if local is not None:
            pulumi.set(__self__, "local", local)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if remote is not None:
            pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def local(self) -> Optional[_builtins.str]:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocol']:
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> Optional[_builtins.str]:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdProtocol(dict):
    def __init__(__self__, *,
                 number: Optional[_builtins.int] = None,
                 tcp: Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocolTcp'] = None,
                 udp: Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocolUdp'] = None):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        :param 'IpsecTunnelAutoKeyProxyIdProtocolTcpArgs' tcp: The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        :param 'IpsecTunnelAutoKeyProxyIdProtocolUdpArgs' udp: The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        if number is not None:
            pulumi.set(__self__, "number", number)
        if tcp is not None:
            pulumi.set(__self__, "tcp", tcp)
        if udp is not None:
            pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> Optional[_builtins.int]:
        """
        IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocolTcp']:
        """
        The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdProtocolUdp']:
        """
        The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdProtocolTcp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localPort":
            suggest = "local_port"
        elif key == "remotePort":
            suggest = "remote_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelAutoKeyProxyIdProtocolTcp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelAutoKeyProxyIdProtocolTcp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelAutoKeyProxyIdProtocolTcp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_port: Optional[_builtins.int] = None,
                 remote_port: Optional[_builtins.int] = None):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        if local_port is not None:
            pulumi.set(__self__, "local_port", local_port)
        if remote_port is not None:
            pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> Optional[_builtins.int]:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> Optional[_builtins.int]:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdProtocolUdp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localPort":
            suggest = "local_port"
        elif key == "remotePort":
            suggest = "remote_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelAutoKeyProxyIdProtocolUdp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelAutoKeyProxyIdProtocolUdp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelAutoKeyProxyIdProtocolUdp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_port: Optional[_builtins.int] = None,
                 remote_port: Optional[_builtins.int] = None):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        if local_port is not None:
            pulumi.set(__self__, "local_port", local_port)
        if remote_port is not None:
            pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> Optional[_builtins.int]:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> Optional[_builtins.int]:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdV6(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 local: Optional[_builtins.str] = None,
                 protocol: Optional['outputs.IpsecTunnelAutoKeyProxyIdV6Protocol'] = None,
                 remote: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str local: The Local param.
        :param 'IpsecTunnelAutoKeyProxyIdV6ProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "name", name)
        if local is not None:
            pulumi.set(__self__, "local", local)
        if protocol is not None:
            pulumi.set(__self__, "protocol", protocol)
        if remote is not None:
            pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def local(self) -> Optional[_builtins.str]:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdV6Protocol']:
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> Optional[_builtins.str]:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdV6Protocol(dict):
    def __init__(__self__, *,
                 number: Optional[_builtins.int] = None,
                 tcp: Optional['outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolTcp'] = None,
                 udp: Optional['outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolUdp'] = None):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        :param 'IpsecTunnelAutoKeyProxyIdV6ProtocolTcpArgs' tcp: The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        :param 'IpsecTunnelAutoKeyProxyIdV6ProtocolUdpArgs' udp: The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        if number is not None:
            pulumi.set(__self__, "number", number)
        if tcp is not None:
            pulumi.set(__self__, "tcp", tcp)
        if udp is not None:
            pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> Optional[_builtins.int]:
        """
        IP protocol number. Value must be between 1 and 254. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolTcp']:
        """
        The Tcp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> Optional['outputs.IpsecTunnelAutoKeyProxyIdV6ProtocolUdp']:
        """
        The Udp param. Ensure that only one of the following is specified: `number`, `tcp`, `udp`
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdV6ProtocolTcp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localPort":
            suggest = "local_port"
        elif key == "remotePort":
            suggest = "remote_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelAutoKeyProxyIdV6ProtocolTcp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelAutoKeyProxyIdV6ProtocolTcp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelAutoKeyProxyIdV6ProtocolTcp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_port: Optional[_builtins.int] = None,
                 remote_port: Optional[_builtins.int] = None):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        if local_port is not None:
            pulumi.set(__self__, "local_port", local_port)
        if remote_port is not None:
            pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> Optional[_builtins.int]:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> Optional[_builtins.int]:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class IpsecTunnelAutoKeyProxyIdV6ProtocolUdp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localPort":
            suggest = "local_port"
        elif key == "remotePort":
            suggest = "remote_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelAutoKeyProxyIdV6ProtocolUdp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelAutoKeyProxyIdV6ProtocolUdp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelAutoKeyProxyIdV6ProtocolUdp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_port: Optional[_builtins.int] = None,
                 remote_port: Optional[_builtins.int] = None):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        if local_port is not None:
            pulumi.set(__self__, "local_port", local_port)
        if remote_port is not None:
            pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> Optional[_builtins.int]:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> Optional[_builtins.int]:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class IpsecTunnelTunnelMonitor(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationIp":
            suggest = "destination_ip"
        elif key == "proxyId":
            suggest = "proxy_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IpsecTunnelTunnelMonitor. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IpsecTunnelTunnelMonitor.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IpsecTunnelTunnelMonitor.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_ip: _builtins.str,
                 enable: Optional[_builtins.bool] = None,
                 proxy_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str destination_ip: Destination IP to send ICMP probe.
        :param _builtins.bool enable: Enable tunnel monitoring on this tunnel. Default: `true`.
        :param _builtins.str proxy_id: Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        pulumi.set(__self__, "destination_ip", destination_ip)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if proxy_id is not None:
            pulumi.set(__self__, "proxy_id", proxy_id)

    @_builtins.property
    @pulumi.getter(name="destinationIp")
    def destination_ip(self) -> _builtins.str:
        """
        Destination IP to send ICMP probe.
        """
        return pulumi.get(self, "destination_ip")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        Enable tunnel monitoring on this tunnel. Default: `true`.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="proxyId")
    def proxy_id(self) -> Optional[_builtins.str]:
        """
        Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        return pulumi.get(self, "proxy_id")


@pulumi.output_type
class KerberosServerProfileServer(dict):
    def __init__(__self__, *,
                 host: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 port: Optional[_builtins.int] = None):
        """
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        if host is not None:
            pulumi.set(__self__, "host", host)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def host(self) -> Optional[_builtins.str]:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class LdapServerProfileServer(dict):
    def __init__(__self__, *,
                 address: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 port: Optional[_builtins.int] = None):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[_builtins.str]:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class MfaServerMfaVendorType(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "duoSecurityV2":
            suggest = "duo_security_v2"
        elif key == "oktaAdaptiveV1":
            suggest = "okta_adaptive_v1"
        elif key == "pingIdentityV1":
            suggest = "ping_identity_v1"
        elif key == "rsaSecuridAccessV1":
            suggest = "rsa_securid_access_v1"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MfaServerMfaVendorType. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MfaServerMfaVendorType.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MfaServerMfaVendorType.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duo_security_v2: Optional['outputs.MfaServerMfaVendorTypeDuoSecurityV2'] = None,
                 okta_adaptive_v1: Optional['outputs.MfaServerMfaVendorTypeOktaAdaptiveV1'] = None,
                 ping_identity_v1: Optional['outputs.MfaServerMfaVendorTypePingIdentityV1'] = None,
                 rsa_securid_access_v1: Optional['outputs.MfaServerMfaVendorTypeRsaSecuridAccessV1'] = None):
        """
        :param 'MfaServerMfaVendorTypeDuoSecurityV2Args' duo_security_v2: The DuoSecurityV2 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        :param 'MfaServerMfaVendorTypeOktaAdaptiveV1Args' okta_adaptive_v1: The OktaAdaptiveV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        :param 'MfaServerMfaVendorTypePingIdentityV1Args' ping_identity_v1: The PingIdentityV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        :param 'MfaServerMfaVendorTypeRsaSecuridAccessV1Args' rsa_securid_access_v1: The RsaSecuridAccessV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        """
        if duo_security_v2 is not None:
            pulumi.set(__self__, "duo_security_v2", duo_security_v2)
        if okta_adaptive_v1 is not None:
            pulumi.set(__self__, "okta_adaptive_v1", okta_adaptive_v1)
        if ping_identity_v1 is not None:
            pulumi.set(__self__, "ping_identity_v1", ping_identity_v1)
        if rsa_securid_access_v1 is not None:
            pulumi.set(__self__, "rsa_securid_access_v1", rsa_securid_access_v1)

    @_builtins.property
    @pulumi.getter(name="duoSecurityV2")
    def duo_security_v2(self) -> Optional['outputs.MfaServerMfaVendorTypeDuoSecurityV2']:
        """
        The DuoSecurityV2 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        """
        return pulumi.get(self, "duo_security_v2")

    @_builtins.property
    @pulumi.getter(name="oktaAdaptiveV1")
    def okta_adaptive_v1(self) -> Optional['outputs.MfaServerMfaVendorTypeOktaAdaptiveV1']:
        """
        The OktaAdaptiveV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        """
        return pulumi.get(self, "okta_adaptive_v1")

    @_builtins.property
    @pulumi.getter(name="pingIdentityV1")
    def ping_identity_v1(self) -> Optional['outputs.MfaServerMfaVendorTypePingIdentityV1']:
        """
        The PingIdentityV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        """
        return pulumi.get(self, "ping_identity_v1")

    @_builtins.property
    @pulumi.getter(name="rsaSecuridAccessV1")
    def rsa_securid_access_v1(self) -> Optional['outputs.MfaServerMfaVendorTypeRsaSecuridAccessV1']:
        """
        The RsaSecuridAccessV1 param. Ensure that only one of the following is specified: `duo_security_v2`, `okta_adaptive_v1`, `ping_identity_v1`, `rsa_securid_access_v1`
        """
        return pulumi.get(self, "rsa_securid_access_v1")


@pulumi.output_type
class MfaServerMfaVendorTypeDuoSecurityV2(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "duoApiHost":
            suggest = "duo_api_host"
        elif key == "duoBaseuri":
            suggest = "duo_baseuri"
        elif key == "duoIntegrationKey":
            suggest = "duo_integration_key"
        elif key == "duoSecretKey":
            suggest = "duo_secret_key"
        elif key == "duoTimeout":
            suggest = "duo_timeout"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MfaServerMfaVendorTypeDuoSecurityV2. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MfaServerMfaVendorTypeDuoSecurityV2.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MfaServerMfaVendorTypeDuoSecurityV2.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duo_api_host: Optional[_builtins.str] = None,
                 duo_baseuri: Optional[_builtins.str] = None,
                 duo_integration_key: Optional[_builtins.str] = None,
                 duo_secret_key: Optional[_builtins.str] = None,
                 duo_timeout: Optional[_builtins.str] = None):
        """
        :param _builtins.str duo_api_host: The DuoApiHost param.
        :param _builtins.str duo_baseuri: The DuoBaseuri param.
        :param _builtins.str duo_integration_key: The DuoIntegrationKey param.
        :param _builtins.str duo_secret_key: The DuoSecretKey param.
        :param _builtins.str duo_timeout: The DuoTimeout param.
        """
        if duo_api_host is not None:
            pulumi.set(__self__, "duo_api_host", duo_api_host)
        if duo_baseuri is not None:
            pulumi.set(__self__, "duo_baseuri", duo_baseuri)
        if duo_integration_key is not None:
            pulumi.set(__self__, "duo_integration_key", duo_integration_key)
        if duo_secret_key is not None:
            pulumi.set(__self__, "duo_secret_key", duo_secret_key)
        if duo_timeout is not None:
            pulumi.set(__self__, "duo_timeout", duo_timeout)

    @_builtins.property
    @pulumi.getter(name="duoApiHost")
    def duo_api_host(self) -> Optional[_builtins.str]:
        """
        The DuoApiHost param.
        """
        return pulumi.get(self, "duo_api_host")

    @_builtins.property
    @pulumi.getter(name="duoBaseuri")
    def duo_baseuri(self) -> Optional[_builtins.str]:
        """
        The DuoBaseuri param.
        """
        return pulumi.get(self, "duo_baseuri")

    @_builtins.property
    @pulumi.getter(name="duoIntegrationKey")
    def duo_integration_key(self) -> Optional[_builtins.str]:
        """
        The DuoIntegrationKey param.
        """
        return pulumi.get(self, "duo_integration_key")

    @_builtins.property
    @pulumi.getter(name="duoSecretKey")
    def duo_secret_key(self) -> Optional[_builtins.str]:
        """
        The DuoSecretKey param.
        """
        return pulumi.get(self, "duo_secret_key")

    @_builtins.property
    @pulumi.getter(name="duoTimeout")
    def duo_timeout(self) -> Optional[_builtins.str]:
        """
        The DuoTimeout param.
        """
        return pulumi.get(self, "duo_timeout")


@pulumi.output_type
class MfaServerMfaVendorTypeOktaAdaptiveV1(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "oktaApiHost":
            suggest = "okta_api_host"
        elif key == "oktaBaseuri":
            suggest = "okta_baseuri"
        elif key == "oktaOrg":
            suggest = "okta_org"
        elif key == "oktaTimeout":
            suggest = "okta_timeout"
        elif key == "oktaToken":
            suggest = "okta_token"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MfaServerMfaVendorTypeOktaAdaptiveV1. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MfaServerMfaVendorTypeOktaAdaptiveV1.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MfaServerMfaVendorTypeOktaAdaptiveV1.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 okta_api_host: Optional[_builtins.str] = None,
                 okta_baseuri: Optional[_builtins.str] = None,
                 okta_org: Optional[_builtins.str] = None,
                 okta_timeout: Optional[_builtins.str] = None,
                 okta_token: Optional[_builtins.str] = None):
        """
        :param _builtins.str okta_api_host: The OktaApiHost param.
        :param _builtins.str okta_baseuri: The OktaBaseuri param.
        :param _builtins.str okta_org: The OktaOrg param.
        :param _builtins.str okta_timeout: The OktaTimeout param.
        :param _builtins.str okta_token: The OktaToken param.
        """
        if okta_api_host is not None:
            pulumi.set(__self__, "okta_api_host", okta_api_host)
        if okta_baseuri is not None:
            pulumi.set(__self__, "okta_baseuri", okta_baseuri)
        if okta_org is not None:
            pulumi.set(__self__, "okta_org", okta_org)
        if okta_timeout is not None:
            pulumi.set(__self__, "okta_timeout", okta_timeout)
        if okta_token is not None:
            pulumi.set(__self__, "okta_token", okta_token)

    @_builtins.property
    @pulumi.getter(name="oktaApiHost")
    def okta_api_host(self) -> Optional[_builtins.str]:
        """
        The OktaApiHost param.
        """
        return pulumi.get(self, "okta_api_host")

    @_builtins.property
    @pulumi.getter(name="oktaBaseuri")
    def okta_baseuri(self) -> Optional[_builtins.str]:
        """
        The OktaBaseuri param.
        """
        return pulumi.get(self, "okta_baseuri")

    @_builtins.property
    @pulumi.getter(name="oktaOrg")
    def okta_org(self) -> Optional[_builtins.str]:
        """
        The OktaOrg param.
        """
        return pulumi.get(self, "okta_org")

    @_builtins.property
    @pulumi.getter(name="oktaTimeout")
    def okta_timeout(self) -> Optional[_builtins.str]:
        """
        The OktaTimeout param.
        """
        return pulumi.get(self, "okta_timeout")

    @_builtins.property
    @pulumi.getter(name="oktaToken")
    def okta_token(self) -> Optional[_builtins.str]:
        """
        The OktaToken param.
        """
        return pulumi.get(self, "okta_token")


@pulumi.output_type
class MfaServerMfaVendorTypePingIdentityV1(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "pingApiHost":
            suggest = "ping_api_host"
        elif key == "pingBaseuri":
            suggest = "ping_baseuri"
        elif key == "pingOrg":
            suggest = "ping_org"
        elif key == "pingOrgAlias":
            suggest = "ping_org_alias"
        elif key == "pingTimeout":
            suggest = "ping_timeout"
        elif key == "pingToken":
            suggest = "ping_token"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MfaServerMfaVendorTypePingIdentityV1. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MfaServerMfaVendorTypePingIdentityV1.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MfaServerMfaVendorTypePingIdentityV1.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ping_api_host: Optional[_builtins.str] = None,
                 ping_baseuri: Optional[_builtins.str] = None,
                 ping_org: Optional[_builtins.str] = None,
                 ping_org_alias: Optional[_builtins.str] = None,
                 ping_timeout: Optional[_builtins.str] = None,
                 ping_token: Optional[_builtins.str] = None):
        """
        :param _builtins.str ping_api_host: The PingApiHost param.
        :param _builtins.str ping_baseuri: The PingBaseuri param.
        :param _builtins.str ping_org: The PingOrg param.
        :param _builtins.str ping_org_alias: The PingOrgAlias param.
        :param _builtins.str ping_timeout: The PingTimeout param.
        :param _builtins.str ping_token: The PingToken param.
        """
        if ping_api_host is not None:
            pulumi.set(__self__, "ping_api_host", ping_api_host)
        if ping_baseuri is not None:
            pulumi.set(__self__, "ping_baseuri", ping_baseuri)
        if ping_org is not None:
            pulumi.set(__self__, "ping_org", ping_org)
        if ping_org_alias is not None:
            pulumi.set(__self__, "ping_org_alias", ping_org_alias)
        if ping_timeout is not None:
            pulumi.set(__self__, "ping_timeout", ping_timeout)
        if ping_token is not None:
            pulumi.set(__self__, "ping_token", ping_token)

    @_builtins.property
    @pulumi.getter(name="pingApiHost")
    def ping_api_host(self) -> Optional[_builtins.str]:
        """
        The PingApiHost param.
        """
        return pulumi.get(self, "ping_api_host")

    @_builtins.property
    @pulumi.getter(name="pingBaseuri")
    def ping_baseuri(self) -> Optional[_builtins.str]:
        """
        The PingBaseuri param.
        """
        return pulumi.get(self, "ping_baseuri")

    @_builtins.property
    @pulumi.getter(name="pingOrg")
    def ping_org(self) -> Optional[_builtins.str]:
        """
        The PingOrg param.
        """
        return pulumi.get(self, "ping_org")

    @_builtins.property
    @pulumi.getter(name="pingOrgAlias")
    def ping_org_alias(self) -> Optional[_builtins.str]:
        """
        The PingOrgAlias param.
        """
        return pulumi.get(self, "ping_org_alias")

    @_builtins.property
    @pulumi.getter(name="pingTimeout")
    def ping_timeout(self) -> Optional[_builtins.str]:
        """
        The PingTimeout param.
        """
        return pulumi.get(self, "ping_timeout")

    @_builtins.property
    @pulumi.getter(name="pingToken")
    def ping_token(self) -> Optional[_builtins.str]:
        """
        The PingToken param.
        """
        return pulumi.get(self, "ping_token")


@pulumi.output_type
class MfaServerMfaVendorTypeRsaSecuridAccessV1(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "rsaAccessid":
            suggest = "rsa_accessid"
        elif key == "rsaAccesskey":
            suggest = "rsa_accesskey"
        elif key == "rsaApiHost":
            suggest = "rsa_api_host"
        elif key == "rsaAssurancepolicyid":
            suggest = "rsa_assurancepolicyid"
        elif key == "rsaBaseuri":
            suggest = "rsa_baseuri"
        elif key == "rsaTimeout":
            suggest = "rsa_timeout"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in MfaServerMfaVendorTypeRsaSecuridAccessV1. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        MfaServerMfaVendorTypeRsaSecuridAccessV1.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        MfaServerMfaVendorTypeRsaSecuridAccessV1.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 rsa_accessid: Optional[_builtins.str] = None,
                 rsa_accesskey: Optional[_builtins.str] = None,
                 rsa_api_host: Optional[_builtins.str] = None,
                 rsa_assurancepolicyid: Optional[_builtins.str] = None,
                 rsa_baseuri: Optional[_builtins.str] = None,
                 rsa_timeout: Optional[_builtins.str] = None):
        """
        :param _builtins.str rsa_accessid: The RsaAccessid param.
        :param _builtins.str rsa_accesskey: The RsaAccesskey param.
        :param _builtins.str rsa_api_host: The RsaApiHost param.
        :param _builtins.str rsa_assurancepolicyid: The RsaAssurancepolicyid param.
        :param _builtins.str rsa_baseuri: The RsaBaseuri param.
        :param _builtins.str rsa_timeout: The RsaTimeout param.
        """
        if rsa_accessid is not None:
            pulumi.set(__self__, "rsa_accessid", rsa_accessid)
        if rsa_accesskey is not None:
            pulumi.set(__self__, "rsa_accesskey", rsa_accesskey)
        if rsa_api_host is not None:
            pulumi.set(__self__, "rsa_api_host", rsa_api_host)
        if rsa_assurancepolicyid is not None:
            pulumi.set(__self__, "rsa_assurancepolicyid", rsa_assurancepolicyid)
        if rsa_baseuri is not None:
            pulumi.set(__self__, "rsa_baseuri", rsa_baseuri)
        if rsa_timeout is not None:
            pulumi.set(__self__, "rsa_timeout", rsa_timeout)

    @_builtins.property
    @pulumi.getter(name="rsaAccessid")
    def rsa_accessid(self) -> Optional[_builtins.str]:
        """
        The RsaAccessid param.
        """
        return pulumi.get(self, "rsa_accessid")

    @_builtins.property
    @pulumi.getter(name="rsaAccesskey")
    def rsa_accesskey(self) -> Optional[_builtins.str]:
        """
        The RsaAccesskey param.
        """
        return pulumi.get(self, "rsa_accesskey")

    @_builtins.property
    @pulumi.getter(name="rsaApiHost")
    def rsa_api_host(self) -> Optional[_builtins.str]:
        """
        The RsaApiHost param.
        """
        return pulumi.get(self, "rsa_api_host")

    @_builtins.property
    @pulumi.getter(name="rsaAssurancepolicyid")
    def rsa_assurancepolicyid(self) -> Optional[_builtins.str]:
        """
        The RsaAssurancepolicyid param.
        """
        return pulumi.get(self, "rsa_assurancepolicyid")

    @_builtins.property
    @pulumi.getter(name="rsaBaseuri")
    def rsa_baseuri(self) -> Optional[_builtins.str]:
        """
        The RsaBaseuri param.
        """
        return pulumi.get(self, "rsa_baseuri")

    @_builtins.property
    @pulumi.getter(name="rsaTimeout")
    def rsa_timeout(self) -> Optional[_builtins.str]:
        """
        The RsaTimeout param.
        """
        return pulumi.get(self, "rsa_timeout")


@pulumi.output_type
class NatRuleDestinationTranslation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "translatedAddressSingle":
            suggest = "translated_address_single"
        elif key == "dnsRewrite":
            suggest = "dns_rewrite"
        elif key == "translatedPort":
            suggest = "translated_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NatRuleDestinationTranslation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NatRuleDestinationTranslation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NatRuleDestinationTranslation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 translated_address_single: _builtins.str,
                 dns_rewrite: Optional['outputs.NatRuleDestinationTranslationDnsRewrite'] = None,
                 translated_port: Optional[_builtins.int] = None):
        """
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param 'NatRuleDestinationTranslationDnsRewriteArgs' dns_rewrite: The DnsRewrite param.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        if dns_rewrite is not None:
            pulumi.set(__self__, "dns_rewrite", dns_rewrite)
        if translated_port is not None:
            pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter(name="dnsRewrite")
    def dns_rewrite(self) -> Optional['outputs.NatRuleDestinationTranslationDnsRewrite']:
        """
        The DnsRewrite param.
        """
        return pulumi.get(self, "dns_rewrite")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> Optional[_builtins.int]:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class NatRuleDestinationTranslationDnsRewrite(dict):
    def __init__(__self__, *,
                 direction: Optional[_builtins.str] = None):
        """
        :param _builtins.str direction: The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        if direction is not None:
            pulumi.set(__self__, "direction", direction)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[_builtins.str]:
        """
        The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        return pulumi.get(self, "direction")


@pulumi.output_type
class NatRuleDynamicDestinationTranslation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "translatedAddressSingle":
            suggest = "translated_address_single"
        elif key == "translatedPort":
            suggest = "translated_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NatRuleDynamicDestinationTranslation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NatRuleDynamicDestinationTranslation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NatRuleDynamicDestinationTranslation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 translated_address_single: _builtins.str,
                 distribution: Optional[_builtins.str] = None,
                 translated_port: Optional[_builtins.int] = None):
        """
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param _builtins.str distribution: The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        if distribution is not None:
            pulumi.set(__self__, "distribution", distribution)
        if translated_port is not None:
            pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> Optional[_builtins.str]:
        """
        The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> Optional[_builtins.int]:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class NatRuleSourceTranslation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "biDirectional":
            suggest = "bi_directional"
        elif key == "translatedAddressArrays":
            suggest = "translated_address_arrays"
        elif key == "translatedAddressSingle":
            suggest = "translated_address_single"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in NatRuleSourceTranslation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        NatRuleSourceTranslation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        NatRuleSourceTranslation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 bi_directional: Optional[_builtins.str] = None,
                 fallback: Optional['outputs.NatRuleSourceTranslationFallback'] = None,
                 translated_address_arrays: Optional[Sequence[_builtins.str]] = None,
                 translated_address_single: Optional[_builtins.str] = None):
        """
        :param _builtins.str bi_directional: The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        :param 'NatRuleSourceTranslationFallbackArgs' fallback: The Fallback param.
        :param Sequence[_builtins.str] translated_address_arrays: The TranslatedAddressArray param. Ensure that only one of the following is specified: `translated_address_array`, `translated_address_single`
        :param _builtins.str translated_address_single: The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`. Ensure that only one of the following is specified: `translated_address_array`, `translated_address_single`
        """
        if bi_directional is not None:
            pulumi.set(__self__, "bi_directional", bi_directional)
        if fallback is not None:
            pulumi.set(__self__, "fallback", fallback)
        if translated_address_arrays is not None:
            pulumi.set(__self__, "translated_address_arrays", translated_address_arrays)
        if translated_address_single is not None:
            pulumi.set(__self__, "translated_address_single", translated_address_single)

    @_builtins.property
    @pulumi.getter(name="biDirectional")
    def bi_directional(self) -> Optional[_builtins.str]:
        """
        The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        """
        return pulumi.get(self, "bi_directional")

    @_builtins.property
    @pulumi.getter
    def fallback(self) -> Optional['outputs.NatRuleSourceTranslationFallback']:
        """
        The Fallback param.
        """
        return pulumi.get(self, "fallback")

    @_builtins.property
    @pulumi.getter(name="translatedAddressArrays")
    def translated_address_arrays(self) -> Optional[Sequence[_builtins.str]]:
        """
        The TranslatedAddressArray param. Ensure that only one of the following is specified: `translated_address_array`, `translated_address_single`
        """
        return pulumi.get(self, "translated_address_arrays")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> Optional[_builtins.str]:
        """
        The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`. Ensure that only one of the following is specified: `translated_address_array`, `translated_address_single`
        """
        return pulumi.get(self, "translated_address_single")


@pulumi.output_type
class NatRuleSourceTranslationFallback(dict):
    def __init__(__self__, *,
                 interface: Optional[_builtins.str] = None):
        """
        :param _builtins.str interface: The Interface param. Ensure that only one of the following is specified: `interface`
        """
        if interface is not None:
            pulumi.set(__self__, "interface", interface)

    @_builtins.property
    @pulumi.getter
    def interface(self) -> Optional[_builtins.str]:
        """
        The Interface param. Ensure that only one of the following is specified: `interface`
        """
        return pulumi.get(self, "interface")


@pulumi.output_type
class NatRuleTarget(dict):
    def __init__(__self__, *,
                 devices: Optional[Sequence['outputs.NatRuleTargetDevice']] = None,
                 negate: Optional[_builtins.bool] = None,
                 tags: Optional[Sequence[_builtins.str]] = None):
        """
        :param Sequence['NatRuleTargetDeviceArgs'] devices: The Devices param.
        :param _builtins.bool negate: The Negate param.
        :param Sequence[_builtins.str] tags: The Tags param.
        """
        if devices is not None:
            pulumi.set(__self__, "devices", devices)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def devices(self) -> Optional[Sequence['outputs.NatRuleTargetDevice']]:
        """
        The Devices param.
        """
        return pulumi.get(self, "devices")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        The Negate param.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class NatRuleTargetDevice(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class QosPolicyRuleAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "class":
            suggest = "class_"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosPolicyRuleAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosPolicyRuleAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosPolicyRuleAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 class_: Optional[_builtins.str] = None):
        """
        :param _builtins.str class_: The Class param.
        """
        if class_ is not None:
            pulumi.set(__self__, "class_", class_)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> Optional[_builtins.str]:
        """
        The Class param.
        """
        return pulumi.get(self, "class_")


@pulumi.output_type
class QosPolicyRuleDscpTos(dict):
    def __init__(__self__, *,
                 codepoints: Optional[Sequence['outputs.QosPolicyRuleDscpTosCodepoint']] = None):
        """
        :param Sequence['QosPolicyRuleDscpTosCodepointArgs'] codepoints: The Codepoints param.
        """
        if codepoints is not None:
            pulumi.set(__self__, "codepoints", codepoints)

    @_builtins.property
    @pulumi.getter
    def codepoints(self) -> Optional[Sequence['outputs.QosPolicyRuleDscpTosCodepoint']]:
        """
        The Codepoints param.
        """
        return pulumi.get(self, "codepoints")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepoint(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 type: Optional['outputs.QosPolicyRuleDscpTosCodepointType'] = None):
        """
        :param _builtins.str name: The Name param.
        :param 'QosPolicyRuleDscpTosCodepointTypeArgs' type: The Type param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointType']:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointType(dict):
    def __init__(__self__, *,
                 af: Optional['outputs.QosPolicyRuleDscpTosCodepointTypeAf'] = None,
                 cs: Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCs'] = None,
                 custom: Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCustom'] = None,
                 ef: Optional[_builtins.bool] = None,
                 tos: Optional['outputs.QosPolicyRuleDscpTosCodepointTypeTos'] = None):
        """
        :param 'QosPolicyRuleDscpTosCodepointTypeAfArgs' af: The Af param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        :param 'QosPolicyRuleDscpTosCodepointTypeCsArgs' cs: The Cs param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        :param 'QosPolicyRuleDscpTosCodepointTypeCustomArgs' custom: The Custom param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        :param _builtins.bool ef: The Ef param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        :param 'QosPolicyRuleDscpTosCodepointTypeTosArgs' tos: The Tos param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        if af is not None:
            pulumi.set(__self__, "af", af)
        if cs is not None:
            pulumi.set(__self__, "cs", cs)
        if custom is not None:
            pulumi.set(__self__, "custom", custom)
        if ef is not None:
            pulumi.set(__self__, "ef", ef)
        if tos is not None:
            pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter
    def af(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointTypeAf']:
        """
        The Af param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        return pulumi.get(self, "af")

    @_builtins.property
    @pulumi.getter
    def cs(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCs']:
        """
        The Cs param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        return pulumi.get(self, "cs")

    @_builtins.property
    @pulumi.getter
    def custom(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCustom']:
        """
        The Custom param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        return pulumi.get(self, "custom")

    @_builtins.property
    @pulumi.getter
    def ef(self) -> Optional[_builtins.bool]:
        """
        The Ef param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        return pulumi.get(self, "ef")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointTypeTos']:
        """
        The Tos param. Ensure that only one of the following is specified: `af`, `cs`, `custom`, `ef`, `tos`
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointTypeAf(dict):
    def __init__(__self__, *,
                 codepoint: Optional[_builtins.str] = None):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        if codepoint is not None:
            pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> Optional[_builtins.str]:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointTypeCs(dict):
    def __init__(__self__, *,
                 codepoint: Optional[_builtins.str] = None):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        if codepoint is not None:
            pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> Optional[_builtins.str]:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointTypeCustom(dict):
    def __init__(__self__, *,
                 codepoint: Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCustomCodepoint'] = None):
        """
        :param 'QosPolicyRuleDscpTosCodepointTypeCustomCodepointArgs' codepoint: The Codepoint param.
        """
        if codepoint is not None:
            pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> Optional['outputs.QosPolicyRuleDscpTosCodepointTypeCustomCodepoint']:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointTypeCustomCodepoint(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "binaryValue":
            suggest = "binary_value"
        elif key == "codepointName":
            suggest = "codepoint_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosPolicyRuleDscpTosCodepointTypeCustomCodepoint. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosPolicyRuleDscpTosCodepointTypeCustomCodepoint.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosPolicyRuleDscpTosCodepointTypeCustomCodepoint.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 binary_value: Optional[_builtins.str] = None,
                 codepoint_name: Optional[_builtins.str] = None):
        """
        :param _builtins.str binary_value: The BinaryValue param.
        :param _builtins.str codepoint_name: The CodepointName param.
        """
        if binary_value is not None:
            pulumi.set(__self__, "binary_value", binary_value)
        if codepoint_name is not None:
            pulumi.set(__self__, "codepoint_name", codepoint_name)

    @_builtins.property
    @pulumi.getter(name="binaryValue")
    def binary_value(self) -> Optional[_builtins.str]:
        """
        The BinaryValue param.
        """
        return pulumi.get(self, "binary_value")

    @_builtins.property
    @pulumi.getter(name="codepointName")
    def codepoint_name(self) -> Optional[_builtins.str]:
        """
        The CodepointName param.
        """
        return pulumi.get(self, "codepoint_name")


@pulumi.output_type
class QosPolicyRuleDscpTosCodepointTypeTos(dict):
    def __init__(__self__, *,
                 codepoint: Optional[_builtins.str] = None):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        if codepoint is not None:
            pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> Optional[_builtins.str]:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class QosProfileAggregateBandwidth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "egressGuaranteed":
            suggest = "egress_guaranteed"
        elif key == "egressMax":
            suggest = "egress_max"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosProfileAggregateBandwidth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosProfileAggregateBandwidth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosProfileAggregateBandwidth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 egress_guaranteed: Optional[_builtins.int] = None,
                 egress_max: Optional[_builtins.int] = None):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        if egress_guaranteed is not None:
            pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        if egress_max is not None:
            pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> Optional[_builtins.int]:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> Optional[_builtins.int]:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class QosProfileClassBandwidthType(dict):
    def __init__(__self__, *,
                 mbps: Optional['outputs.QosProfileClassBandwidthTypeMbps'] = None,
                 percentage: Optional['outputs.QosProfileClassBandwidthTypePercentage'] = None):
        """
        :param 'QosProfileClassBandwidthTypeMbpsArgs' mbps: The Mbps param. Ensure that only one of the following is specified: `mbps`, `percentage`
        :param 'QosProfileClassBandwidthTypePercentageArgs' percentage: The Percentage param. Ensure that only one of the following is specified: `mbps`, `percentage`
        """
        if mbps is not None:
            pulumi.set(__self__, "mbps", mbps)
        if percentage is not None:
            pulumi.set(__self__, "percentage", percentage)

    @_builtins.property
    @pulumi.getter
    def mbps(self) -> Optional['outputs.QosProfileClassBandwidthTypeMbps']:
        """
        The Mbps param. Ensure that only one of the following is specified: `mbps`, `percentage`
        """
        return pulumi.get(self, "mbps")

    @_builtins.property
    @pulumi.getter
    def percentage(self) -> Optional['outputs.QosProfileClassBandwidthTypePercentage']:
        """
        The Percentage param. Ensure that only one of the following is specified: `mbps`, `percentage`
        """
        return pulumi.get(self, "percentage")


@pulumi.output_type
class QosProfileClassBandwidthTypeMbps(dict):
    def __init__(__self__, *,
                 classes: Optional[Sequence['outputs.QosProfileClassBandwidthTypeMbpsClass']] = None):
        """
        :param Sequence['QosProfileClassBandwidthTypeMbpsClassArgs'] classes: QoS setting for traffic classes.
        """
        if classes is not None:
            pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Optional[Sequence['outputs.QosProfileClassBandwidthTypeMbpsClass']]:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class QosProfileClassBandwidthTypeMbpsClass(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "classBandwidth":
            suggest = "class_bandwidth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosProfileClassBandwidthTypeMbpsClass. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosProfileClassBandwidthTypeMbpsClass.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosProfileClassBandwidthTypeMbpsClass.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 class_bandwidth: Optional['outputs.QosProfileClassBandwidthTypeMbpsClassClassBandwidth'] = None,
                 name: Optional[_builtins.str] = None,
                 priority: Optional[_builtins.str] = None):
        """
        :param 'QosProfileClassBandwidthTypeMbpsClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        if class_bandwidth is not None:
            pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> Optional['outputs.QosProfileClassBandwidthTypeMbpsClassClassBandwidth']:
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[_builtins.str]:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class QosProfileClassBandwidthTypeMbpsClassClassBandwidth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "egressGuaranteed":
            suggest = "egress_guaranteed"
        elif key == "egressMax":
            suggest = "egress_max"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosProfileClassBandwidthTypeMbpsClassClassBandwidth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosProfileClassBandwidthTypeMbpsClassClassBandwidth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosProfileClassBandwidthTypeMbpsClassClassBandwidth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 egress_guaranteed: Optional[_builtins.int] = None,
                 egress_max: Optional[_builtins.int] = None):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        if egress_guaranteed is not None:
            pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        if egress_max is not None:
            pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> Optional[_builtins.int]:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> Optional[_builtins.int]:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class QosProfileClassBandwidthTypePercentage(dict):
    def __init__(__self__, *,
                 classes: Optional[Sequence['outputs.QosProfileClassBandwidthTypePercentageClass']] = None):
        """
        :param Sequence['QosProfileClassBandwidthTypePercentageClassArgs'] classes: QoS setting for traffic classes.
        """
        if classes is not None:
            pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Optional[Sequence['outputs.QosProfileClassBandwidthTypePercentageClass']]:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class QosProfileClassBandwidthTypePercentageClass(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "classBandwidth":
            suggest = "class_bandwidth"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosProfileClassBandwidthTypePercentageClass. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosProfileClassBandwidthTypePercentageClass.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosProfileClassBandwidthTypePercentageClass.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 class_bandwidth: Optional['outputs.QosProfileClassBandwidthTypePercentageClassClassBandwidth'] = None,
                 name: Optional[_builtins.str] = None,
                 priority: Optional[_builtins.str] = None):
        """
        :param 'QosProfileClassBandwidthTypePercentageClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        if class_bandwidth is not None:
            pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if priority is not None:
            pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> Optional['outputs.QosProfileClassBandwidthTypePercentageClassClassBandwidth']:
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> Optional[_builtins.str]:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class QosProfileClassBandwidthTypePercentageClassClassBandwidth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "egressGuaranteed":
            suggest = "egress_guaranteed"
        elif key == "egressMax":
            suggest = "egress_max"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in QosProfileClassBandwidthTypePercentageClassClassBandwidth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        QosProfileClassBandwidthTypePercentageClassClassBandwidth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        QosProfileClassBandwidthTypePercentageClassClassBandwidth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 egress_guaranteed: Optional[_builtins.int] = None,
                 egress_max: Optional[_builtins.int] = None):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        :param _builtins.int egress_max: max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        if egress_guaranteed is not None:
            pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        if egress_max is not None:
            pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> Optional[_builtins.int]:
        """
        guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> Optional[_builtins.int]:
        """
        max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class RadiusServerProfileProtocol(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "eapTtlsWithPap":
            suggest = "eap_ttls_with_pap"
        elif key == "peapMschapV2":
            suggest = "peap_mschap_v2"
        elif key == "peapWithGtc":
            suggest = "peap_with_gtc"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RadiusServerProfileProtocol. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RadiusServerProfileProtocol.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RadiusServerProfileProtocol.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 chap: Optional[_builtins.bool] = None,
                 eap_ttls_with_pap: Optional['outputs.RadiusServerProfileProtocolEapTtlsWithPap'] = None,
                 pap: Optional[_builtins.bool] = None,
                 peap_mschap_v2: Optional['outputs.RadiusServerProfileProtocolPeapMschapV2'] = None,
                 peap_with_gtc: Optional['outputs.RadiusServerProfileProtocolPeapWithGtc'] = None):
        """
        :param _builtins.bool chap: The Chap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        :param 'RadiusServerProfileProtocolEapTtlsWithPapArgs' eap_ttls_with_pap: The EapTtlsWithPap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        :param _builtins.bool pap: The Pap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        :param 'RadiusServerProfileProtocolPeapMschapV2Args' peap_mschap_v2: The PeapMschapV2 param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        :param 'RadiusServerProfileProtocolPeapWithGtcArgs' peap_with_gtc: The PeapWithGtc param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        if chap is not None:
            pulumi.set(__self__, "chap", chap)
        if eap_ttls_with_pap is not None:
            pulumi.set(__self__, "eap_ttls_with_pap", eap_ttls_with_pap)
        if pap is not None:
            pulumi.set(__self__, "pap", pap)
        if peap_mschap_v2 is not None:
            pulumi.set(__self__, "peap_mschap_v2", peap_mschap_v2)
        if peap_with_gtc is not None:
            pulumi.set(__self__, "peap_with_gtc", peap_with_gtc)

    @_builtins.property
    @pulumi.getter
    def chap(self) -> Optional[_builtins.bool]:
        """
        The Chap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        return pulumi.get(self, "chap")

    @_builtins.property
    @pulumi.getter(name="eapTtlsWithPap")
    def eap_ttls_with_pap(self) -> Optional['outputs.RadiusServerProfileProtocolEapTtlsWithPap']:
        """
        The EapTtlsWithPap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        return pulumi.get(self, "eap_ttls_with_pap")

    @_builtins.property
    @pulumi.getter
    def pap(self) -> Optional[_builtins.bool]:
        """
        The Pap param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        return pulumi.get(self, "pap")

    @_builtins.property
    @pulumi.getter(name="peapMschapV2")
    def peap_mschap_v2(self) -> Optional['outputs.RadiusServerProfileProtocolPeapMschapV2']:
        """
        The PeapMschapV2 param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        return pulumi.get(self, "peap_mschap_v2")

    @_builtins.property
    @pulumi.getter(name="peapWithGtc")
    def peap_with_gtc(self) -> Optional['outputs.RadiusServerProfileProtocolPeapWithGtc']:
        """
        The PeapWithGtc param. Ensure that only one of the following is specified: `CHAP`, `EAP_TTLS_with_PAP`, `PAP`, `PEAP_MSCHAPv2`, `PEAP_with_GTC`
        """
        return pulumi.get(self, "peap_with_gtc")


@pulumi.output_type
class RadiusServerProfileProtocolEapTtlsWithPap(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "anonOuterId":
            suggest = "anon_outer_id"
        elif key == "radiusCertProfile":
            suggest = "radius_cert_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RadiusServerProfileProtocolEapTtlsWithPap. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RadiusServerProfileProtocolEapTtlsWithPap.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RadiusServerProfileProtocolEapTtlsWithPap.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 anon_outer_id: Optional[_builtins.bool] = None,
                 radius_cert_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        if anon_outer_id is not None:
            pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        if radius_cert_profile is not None:
            pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> Optional[_builtins.bool]:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> Optional[_builtins.str]:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class RadiusServerProfileProtocolPeapMschapV2(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "allowPwdChange":
            suggest = "allow_pwd_change"
        elif key == "anonOuterId":
            suggest = "anon_outer_id"
        elif key == "radiusCertProfile":
            suggest = "radius_cert_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RadiusServerProfileProtocolPeapMschapV2. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RadiusServerProfileProtocolPeapMschapV2.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RadiusServerProfileProtocolPeapMschapV2.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 allow_pwd_change: Optional[_builtins.bool] = None,
                 anon_outer_id: Optional[_builtins.bool] = None,
                 radius_cert_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool allow_pwd_change: The AllowPwdChange param.
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        if allow_pwd_change is not None:
            pulumi.set(__self__, "allow_pwd_change", allow_pwd_change)
        if anon_outer_id is not None:
            pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        if radius_cert_profile is not None:
            pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="allowPwdChange")
    def allow_pwd_change(self) -> Optional[_builtins.bool]:
        """
        The AllowPwdChange param.
        """
        return pulumi.get(self, "allow_pwd_change")

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> Optional[_builtins.bool]:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> Optional[_builtins.str]:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class RadiusServerProfileProtocolPeapWithGtc(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "anonOuterId":
            suggest = "anon_outer_id"
        elif key == "radiusCertProfile":
            suggest = "radius_cert_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RadiusServerProfileProtocolPeapWithGtc. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RadiusServerProfileProtocolPeapWithGtc.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RadiusServerProfileProtocolPeapWithGtc.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 anon_outer_id: Optional[_builtins.bool] = None,
                 radius_cert_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        if anon_outer_id is not None:
            pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        if radius_cert_profile is not None:
            pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> Optional[_builtins.bool]:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> Optional[_builtins.str]:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class RadiusServerProfileServer(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ipAddress":
            suggest = "ip_address"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RadiusServerProfileServer. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RadiusServerProfileServer.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RadiusServerProfileServer.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ip_address: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 port: Optional[_builtins.int] = None,
                 secret: Optional[_builtins.str] = None):
        """
        :param _builtins.str ip_address: The IpAddress param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[_builtins.str]:
        """
        The IpAddress param.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class RegionGeoLocation(dict):
    def __init__(__self__, *,
                 latitude: _builtins.float,
                 longitude: _builtins.float):
        """
        :param _builtins.float latitude: latitude coordinate. Value must be between -90 and 90.
        :param _builtins.float longitude: longitude coordinate. Value must be between -180 and 180.
        """
        pulumi.set(__self__, "latitude", latitude)
        pulumi.set(__self__, "longitude", longitude)

    @_builtins.property
    @pulumi.getter
    def latitude(self) -> _builtins.float:
        """
        latitude coordinate. Value must be between -90 and 90.
        """
        return pulumi.get(self, "latitude")

    @_builtins.property
    @pulumi.getter
    def longitude(self) -> _builtins.float:
        """
        longitude coordinate. Value must be between -180 and 180.
        """
        return pulumi.get(self, "longitude")


@pulumi.output_type
class RemoteNetworkEcmpTunnel(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "ipsecTunnel":
            suggest = "ipsec_tunnel"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RemoteNetworkEcmpTunnel. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RemoteNetworkEcmpTunnel.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RemoteNetworkEcmpTunnel.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ipsec_tunnel: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.RemoteNetworkEcmpTunnelProtocol'):
        """
        :param _builtins.str ipsec_tunnel: The IpsecTunnel param.
        :param _builtins.str name: The Name param.
        :param 'RemoteNetworkEcmpTunnelProtocolArgs' protocol: The Protocol param.
        """
        pulumi.set(__self__, "ipsec_tunnel", ipsec_tunnel)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)

    @_builtins.property
    @pulumi.getter(name="ipsecTunnel")
    def ipsec_tunnel(self) -> _builtins.str:
        """
        The IpsecTunnel param.
        """
        return pulumi.get(self, "ipsec_tunnel")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.RemoteNetworkEcmpTunnelProtocol':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")


@pulumi.output_type
class RemoteNetworkEcmpTunnelProtocol(dict):
    def __init__(__self__, *,
                 bgp: Optional['outputs.RemoteNetworkEcmpTunnelProtocolBgp'] = None):
        """
        :param 'RemoteNetworkEcmpTunnelProtocolBgpArgs' bgp: The Bgp param.
        """
        if bgp is not None:
            pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> Optional['outputs.RemoteNetworkEcmpTunnelProtocolBgp']:
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class RemoteNetworkEcmpTunnelProtocolBgp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "doNotExportRoutes":
            suggest = "do_not_export_routes"
        elif key == "localIpAddress":
            suggest = "local_ip_address"
        elif key == "originateDefaultRoute":
            suggest = "originate_default_route"
        elif key == "peerAs":
            suggest = "peer_as"
        elif key == "peerIpAddress":
            suggest = "peer_ip_address"
        elif key == "peeringType":
            suggest = "peering_type"
        elif key == "summarizeMobileUserRoutes":
            suggest = "summarize_mobile_user_routes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RemoteNetworkEcmpTunnelProtocolBgp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RemoteNetworkEcmpTunnelProtocolBgp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RemoteNetworkEcmpTunnelProtocolBgp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 do_not_export_routes: Optional[_builtins.bool] = None,
                 enable: Optional[_builtins.bool] = None,
                 local_ip_address: Optional[_builtins.str] = None,
                 originate_default_route: Optional[_builtins.bool] = None,
                 peer_as: Optional[_builtins.str] = None,
                 peer_ip_address: Optional[_builtins.str] = None,
                 peering_type: Optional[_builtins.str] = None,
                 secret: Optional[_builtins.str] = None,
                 summarize_mobile_user_routes: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        if do_not_export_routes is not None:
            pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if local_ip_address is not None:
            pulumi.set(__self__, "local_ip_address", local_ip_address)
        if originate_default_route is not None:
            pulumi.set(__self__, "originate_default_route", originate_default_route)
        if peer_as is not None:
            pulumi.set(__self__, "peer_as", peer_as)
        if peer_ip_address is not None:
            pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        if peering_type is not None:
            pulumi.set(__self__, "peering_type", peering_type)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)
        if summarize_mobile_user_routes is not None:
            pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> Optional[_builtins.bool]:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> Optional[_builtins.bool]:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> Optional[_builtins.str]:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> Optional[_builtins.str]:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> Optional[_builtins.bool]:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class RemoteNetworkProtocol(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "bgpPeer":
            suggest = "bgp_peer"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RemoteNetworkProtocol. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RemoteNetworkProtocol.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RemoteNetworkProtocol.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 bgp: Optional['outputs.RemoteNetworkProtocolBgp'] = None,
                 bgp_peer: Optional['outputs.RemoteNetworkProtocolBgpPeer'] = None):
        """
        :param 'RemoteNetworkProtocolBgpArgs' bgp: The Bgp param.
        :param 'RemoteNetworkProtocolBgpPeerArgs' bgp_peer: secondary bgp routing as bgp*peer.
        """
        if bgp is not None:
            pulumi.set(__self__, "bgp", bgp)
        if bgp_peer is not None:
            pulumi.set(__self__, "bgp_peer", bgp_peer)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> Optional['outputs.RemoteNetworkProtocolBgp']:
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")

    @_builtins.property
    @pulumi.getter(name="bgpPeer")
    def bgp_peer(self) -> Optional['outputs.RemoteNetworkProtocolBgpPeer']:
        """
        secondary bgp routing as bgp*peer.
        """
        return pulumi.get(self, "bgp_peer")


@pulumi.output_type
class RemoteNetworkProtocolBgp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "doNotExportRoutes":
            suggest = "do_not_export_routes"
        elif key == "localIpAddress":
            suggest = "local_ip_address"
        elif key == "originateDefaultRoute":
            suggest = "originate_default_route"
        elif key == "peerAs":
            suggest = "peer_as"
        elif key == "peerIpAddress":
            suggest = "peer_ip_address"
        elif key == "peeringType":
            suggest = "peering_type"
        elif key == "summarizeMobileUserRoutes":
            suggest = "summarize_mobile_user_routes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RemoteNetworkProtocolBgp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RemoteNetworkProtocolBgp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RemoteNetworkProtocolBgp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 do_not_export_routes: Optional[_builtins.bool] = None,
                 enable: Optional[_builtins.bool] = None,
                 local_ip_address: Optional[_builtins.str] = None,
                 originate_default_route: Optional[_builtins.bool] = None,
                 peer_as: Optional[_builtins.str] = None,
                 peer_ip_address: Optional[_builtins.str] = None,
                 peering_type: Optional[_builtins.str] = None,
                 secret: Optional[_builtins.str] = None,
                 summarize_mobile_user_routes: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        if do_not_export_routes is not None:
            pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if local_ip_address is not None:
            pulumi.set(__self__, "local_ip_address", local_ip_address)
        if originate_default_route is not None:
            pulumi.set(__self__, "originate_default_route", originate_default_route)
        if peer_as is not None:
            pulumi.set(__self__, "peer_as", peer_as)
        if peer_ip_address is not None:
            pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        if peering_type is not None:
            pulumi.set(__self__, "peering_type", peering_type)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)
        if summarize_mobile_user_routes is not None:
            pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> Optional[_builtins.bool]:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> Optional[_builtins.bool]:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> Optional[_builtins.str]:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> Optional[_builtins.str]:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> Optional[_builtins.bool]:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class RemoteNetworkProtocolBgpPeer(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localIpAddress":
            suggest = "local_ip_address"
        elif key == "peerIpAddress":
            suggest = "peer_ip_address"
        elif key == "sameAsPrimary":
            suggest = "same_as_primary"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RemoteNetworkProtocolBgpPeer. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RemoteNetworkProtocolBgpPeer.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RemoteNetworkProtocolBgpPeer.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_ip_address: Optional[_builtins.str] = None,
                 peer_ip_address: Optional[_builtins.str] = None,
                 same_as_primary: Optional[_builtins.bool] = None,
                 secret: Optional[_builtins.str] = None):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.bool same_as_primary: If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        :param _builtins.str secret: The Secret param.
        """
        if local_ip_address is not None:
            pulumi.set(__self__, "local_ip_address", local_ip_address)
        if peer_ip_address is not None:
            pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        if same_as_primary is not None:
            pulumi.set(__self__, "same_as_primary", same_as_primary)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> Optional[_builtins.bool]:
        """
        If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class ScepProfileAlgorithm(dict):
    def __init__(__self__, *,
                 rsa: Optional['outputs.ScepProfileAlgorithmRsa'] = None):
        """
        :param 'ScepProfileAlgorithmRsaArgs' rsa: The Rsa param.
        """
        if rsa is not None:
            pulumi.set(__self__, "rsa", rsa)

    @_builtins.property
    @pulumi.getter
    def rsa(self) -> Optional['outputs.ScepProfileAlgorithmRsa']:
        """
        The Rsa param.
        """
        return pulumi.get(self, "rsa")


@pulumi.output_type
class ScepProfileAlgorithmRsa(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "rsaNbits":
            suggest = "rsa_nbits"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScepProfileAlgorithmRsa. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScepProfileAlgorithmRsa.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScepProfileAlgorithmRsa.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 rsa_nbits: Optional[_builtins.str] = None):
        """
        :param _builtins.str rsa_nbits: The RsaNbits param.
        """
        if rsa_nbits is not None:
            pulumi.set(__self__, "rsa_nbits", rsa_nbits)

    @_builtins.property
    @pulumi.getter(name="rsaNbits")
    def rsa_nbits(self) -> Optional[_builtins.str]:
        """
        The RsaNbits param.
        """
        return pulumi.get(self, "rsa_nbits")


@pulumi.output_type
class ScepProfileCertificateAttributes(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "uniformResourceIdentifier":
            suggest = "uniform_resource_identifier"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScepProfileCertificateAttributes. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScepProfileCertificateAttributes.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScepProfileCertificateAttributes.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dnsname: Optional[_builtins.str] = None,
                 rfc822name: Optional[_builtins.str] = None,
                 uniform_resource_identifier: Optional[_builtins.str] = None):
        """
        :param _builtins.str dnsname: The Dnsname param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        :param _builtins.str rfc822name: The Rfc822name param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        :param _builtins.str uniform_resource_identifier: The UniformResourceIdentifier param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        """
        if dnsname is not None:
            pulumi.set(__self__, "dnsname", dnsname)
        if rfc822name is not None:
            pulumi.set(__self__, "rfc822name", rfc822name)
        if uniform_resource_identifier is not None:
            pulumi.set(__self__, "uniform_resource_identifier", uniform_resource_identifier)

    @_builtins.property
    @pulumi.getter
    def dnsname(self) -> Optional[_builtins.str]:
        """
        The Dnsname param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        """
        return pulumi.get(self, "dnsname")

    @_builtins.property
    @pulumi.getter
    def rfc822name(self) -> Optional[_builtins.str]:
        """
        The Rfc822name param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        """
        return pulumi.get(self, "rfc822name")

    @_builtins.property
    @pulumi.getter(name="uniformResourceIdentifier")
    def uniform_resource_identifier(self) -> Optional[_builtins.str]:
        """
        The UniformResourceIdentifier param. Ensure that only one of the following is specified: `dnsname`, `rfc822name`, `uniform_resource_identifier`
        """
        return pulumi.get(self, "uniform_resource_identifier")


@pulumi.output_type
class ScepProfileScepChallenge(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dynamicChallenge":
            suggest = "dynamic_challenge"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScepProfileScepChallenge. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScepProfileScepChallenge.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScepProfileScepChallenge.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dynamic_challenge: Optional['outputs.ScepProfileScepChallengeDynamicChallenge'] = None,
                 fixed: Optional[_builtins.str] = None,
                 none: Optional[_builtins.str] = None):
        """
        :param 'ScepProfileScepChallengeDynamicChallengeArgs' dynamic_challenge: The DynamicChallenge param. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        :param _builtins.str fixed: Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        :param _builtins.str none: The None param. String must be one of these: `""`. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        """
        if dynamic_challenge is not None:
            pulumi.set(__self__, "dynamic_challenge", dynamic_challenge)
        if fixed is not None:
            pulumi.set(__self__, "fixed", fixed)
        if none is not None:
            pulumi.set(__self__, "none", none)

    @_builtins.property
    @pulumi.getter(name="dynamicChallenge")
    def dynamic_challenge(self) -> Optional['outputs.ScepProfileScepChallengeDynamicChallenge']:
        """
        The DynamicChallenge param. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        """
        return pulumi.get(self, "dynamic_challenge")

    @_builtins.property
    @pulumi.getter
    def fixed(self) -> Optional[_builtins.str]:
        """
        Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        """
        return pulumi.get(self, "fixed")

    @_builtins.property
    @pulumi.getter
    def none(self) -> Optional[_builtins.str]:
        """
        The None param. String must be one of these: `""`. Ensure that only one of the following is specified: `dynamic`, `fixed`, `none`
        """
        return pulumi.get(self, "none")


@pulumi.output_type
class ScepProfileScepChallengeDynamicChallenge(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "otpServerUrl":
            suggest = "otp_server_url"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScepProfileScepChallengeDynamicChallenge. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScepProfileScepChallengeDynamicChallenge.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScepProfileScepChallengeDynamicChallenge.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 otp_server_url: Optional[_builtins.str] = None,
                 password: Optional[_builtins.str] = None,
                 username: Optional[_builtins.str] = None):
        """
        :param _builtins.str otp_server_url: The OtpServerUrl param. String length must not exceed 255 characters.
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must not exceed 255 characters.
        """
        if otp_server_url is not None:
            pulumi.set(__self__, "otp_server_url", otp_server_url)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if username is not None:
            pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter(name="otpServerUrl")
    def otp_server_url(self) -> Optional[_builtins.str]:
        """
        The OtpServerUrl param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "otp_server_url")

    @_builtins.property
    @pulumi.getter
    def password(self) -> Optional[_builtins.str]:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> Optional[_builtins.str]:
        """
        The Username param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class ScheduleScheduleType(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "nonRecurringLists":
            suggest = "non_recurring_lists"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScheduleScheduleType. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScheduleScheduleType.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScheduleScheduleType.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 non_recurring_lists: Optional[Sequence[_builtins.str]] = None,
                 recurring: Optional['outputs.ScheduleScheduleTypeRecurring'] = None):
        """
        :param Sequence[_builtins.str] non_recurring_lists: The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `non_recurring`, `recurring`
        :param 'ScheduleScheduleTypeRecurringArgs' recurring: The Recurring param. Ensure that only one of the following is specified: `non_recurring`, `recurring`
        """
        if non_recurring_lists is not None:
            pulumi.set(__self__, "non_recurring_lists", non_recurring_lists)
        if recurring is not None:
            pulumi.set(__self__, "recurring", recurring)

    @_builtins.property
    @pulumi.getter(name="nonRecurringLists")
    def non_recurring_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `non_recurring`, `recurring`
        """
        return pulumi.get(self, "non_recurring_lists")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> Optional['outputs.ScheduleScheduleTypeRecurring']:
        """
        The Recurring param. Ensure that only one of the following is specified: `non_recurring`, `recurring`
        """
        return pulumi.get(self, "recurring")


@pulumi.output_type
class ScheduleScheduleTypeRecurring(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dailyLists":
            suggest = "daily_lists"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScheduleScheduleTypeRecurring. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScheduleScheduleTypeRecurring.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScheduleScheduleTypeRecurring.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 daily_lists: Optional[Sequence[_builtins.str]] = None,
                 weekly: Optional['outputs.ScheduleScheduleTypeRecurringWeekly'] = None):
        """
        :param Sequence[_builtins.str] daily_lists: The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `daily`, `weekly`
        :param 'ScheduleScheduleTypeRecurringWeeklyArgs' weekly: The Weekly param. Ensure that only one of the following is specified: `daily`, `weekly`
        """
        if daily_lists is not None:
            pulumi.set(__self__, "daily_lists", daily_lists)
        if weekly is not None:
            pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter(name="dailyLists")
    def daily_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`. Ensure that only one of the following is specified: `daily`, `weekly`
        """
        return pulumi.get(self, "daily_lists")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> Optional['outputs.ScheduleScheduleTypeRecurringWeekly']:
        """
        The Weekly param. Ensure that only one of the following is specified: `daily`, `weekly`
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class ScheduleScheduleTypeRecurringWeekly(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fridayLists":
            suggest = "friday_lists"
        elif key == "mondayLists":
            suggest = "monday_lists"
        elif key == "saturdayLists":
            suggest = "saturday_lists"
        elif key == "sundayLists":
            suggest = "sunday_lists"
        elif key == "thursdayLists":
            suggest = "thursday_lists"
        elif key == "tuesdayLists":
            suggest = "tuesday_lists"
        elif key == "wednesdayLists":
            suggest = "wednesday_lists"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ScheduleScheduleTypeRecurringWeekly. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ScheduleScheduleTypeRecurringWeekly.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ScheduleScheduleTypeRecurringWeekly.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 friday_lists: Optional[Sequence[_builtins.str]] = None,
                 monday_lists: Optional[Sequence[_builtins.str]] = None,
                 saturday_lists: Optional[Sequence[_builtins.str]] = None,
                 sunday_lists: Optional[Sequence[_builtins.str]] = None,
                 thursday_lists: Optional[Sequence[_builtins.str]] = None,
                 tuesday_lists: Optional[Sequence[_builtins.str]] = None,
                 wednesday_lists: Optional[Sequence[_builtins.str]] = None):
        """
        :param Sequence[_builtins.str] friday_lists: The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] monday_lists: The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] saturday_lists: The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] sunday_lists: The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] thursday_lists: The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] tuesday_lists: The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] wednesday_lists: The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        if friday_lists is not None:
            pulumi.set(__self__, "friday_lists", friday_lists)
        if monday_lists is not None:
            pulumi.set(__self__, "monday_lists", monday_lists)
        if saturday_lists is not None:
            pulumi.set(__self__, "saturday_lists", saturday_lists)
        if sunday_lists is not None:
            pulumi.set(__self__, "sunday_lists", sunday_lists)
        if thursday_lists is not None:
            pulumi.set(__self__, "thursday_lists", thursday_lists)
        if tuesday_lists is not None:
            pulumi.set(__self__, "tuesday_lists", tuesday_lists)
        if wednesday_lists is not None:
            pulumi.set(__self__, "wednesday_lists", wednesday_lists)

    @_builtins.property
    @pulumi.getter(name="fridayLists")
    def friday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "friday_lists")

    @_builtins.property
    @pulumi.getter(name="mondayLists")
    def monday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "monday_lists")

    @_builtins.property
    @pulumi.getter(name="saturdayLists")
    def saturday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "saturday_lists")

    @_builtins.property
    @pulumi.getter(name="sundayLists")
    def sunday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "sunday_lists")

    @_builtins.property
    @pulumi.getter(name="thursdayLists")
    def thursday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "thursday_lists")

    @_builtins.property
    @pulumi.getter(name="tuesdayLists")
    def tuesday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "tuesday_lists")

    @_builtins.property
    @pulumi.getter(name="wednesdayLists")
    def wednesday_lists(self) -> Optional[Sequence[_builtins.str]]:
        """
        The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "wednesday_lists")


@pulumi.output_type
class SecurityRuleProfileSetting(dict):
    def __init__(__self__, *,
                 groups: Optional[Sequence[_builtins.str]] = None):
        """
        :param Sequence[_builtins.str] groups: The security profile group.
        """
        if groups is not None:
            pulumi.set(__self__, "groups", groups)

    @_builtins.property
    @pulumi.getter
    def groups(self) -> Optional[Sequence[_builtins.str]]:
        """
        The security profile group.
        """
        return pulumi.get(self, "groups")


@pulumi.output_type
class ServiceConnectionBgpPeer(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localIpAddress":
            suggest = "local_ip_address"
        elif key == "localIpv6Address":
            suggest = "local_ipv6_address"
        elif key == "peerIpAddress":
            suggest = "peer_ip_address"
        elif key == "peerIpv6Address":
            suggest = "peer_ipv6_address"
        elif key == "sameAsPrimary":
            suggest = "same_as_primary"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceConnectionBgpPeer. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceConnectionBgpPeer.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceConnectionBgpPeer.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_ip_address: Optional[_builtins.str] = None,
                 local_ipv6_address: Optional[_builtins.str] = None,
                 peer_ip_address: Optional[_builtins.str] = None,
                 peer_ipv6_address: Optional[_builtins.str] = None,
                 same_as_primary: Optional[_builtins.bool] = None,
                 secret: Optional[_builtins.str] = None):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str local_ipv6_address: The LocalIpv6Address param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peer_ipv6_address: The PeerIpv6Address param.
        :param _builtins.bool same_as_primary: The SameAsPrimary param.
        :param _builtins.str secret: The Secret param.
        """
        if local_ip_address is not None:
            pulumi.set(__self__, "local_ip_address", local_ip_address)
        if local_ipv6_address is not None:
            pulumi.set(__self__, "local_ipv6_address", local_ipv6_address)
        if peer_ip_address is not None:
            pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        if peer_ipv6_address is not None:
            pulumi.set(__self__, "peer_ipv6_address", peer_ipv6_address)
        if same_as_primary is not None:
            pulumi.set(__self__, "same_as_primary", same_as_primary)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="localIpv6Address")
    def local_ipv6_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpv6Address param.
        """
        return pulumi.get(self, "local_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpv6Address")
    def peer_ipv6_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpv6Address param.
        """
        return pulumi.get(self, "peer_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> Optional[_builtins.bool]:
        """
        The SameAsPrimary param.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class ServiceConnectionProtocol(dict):
    def __init__(__self__, *,
                 bgp: Optional['outputs.ServiceConnectionProtocolBgp'] = None):
        """
        :param 'ServiceConnectionProtocolBgpArgs' bgp: The Bgp param.
        """
        if bgp is not None:
            pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> Optional['outputs.ServiceConnectionProtocolBgp']:
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class ServiceConnectionProtocolBgp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "doNotExportRoutes":
            suggest = "do_not_export_routes"
        elif key == "fastFailover":
            suggest = "fast_failover"
        elif key == "localIpAddress":
            suggest = "local_ip_address"
        elif key == "originateDefaultRoute":
            suggest = "originate_default_route"
        elif key == "peerAs":
            suggest = "peer_as"
        elif key == "peerIpAddress":
            suggest = "peer_ip_address"
        elif key == "summarizeMobileUserRoutes":
            suggest = "summarize_mobile_user_routes"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceConnectionProtocolBgp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceConnectionProtocolBgp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceConnectionProtocolBgp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 do_not_export_routes: Optional[_builtins.bool] = None,
                 enable: Optional[_builtins.bool] = None,
                 fast_failover: Optional[_builtins.bool] = None,
                 local_ip_address: Optional[_builtins.str] = None,
                 originate_default_route: Optional[_builtins.bool] = None,
                 peer_as: Optional[_builtins.str] = None,
                 peer_ip_address: Optional[_builtins.str] = None,
                 secret: Optional[_builtins.str] = None,
                 summarize_mobile_user_routes: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: The Enable param.
        :param _builtins.bool fast_failover: The FastFailover param.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        if do_not_export_routes is not None:
            pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if fast_failover is not None:
            pulumi.set(__self__, "fast_failover", fast_failover)
        if local_ip_address is not None:
            pulumi.set(__self__, "local_ip_address", local_ip_address)
        if originate_default_route is not None:
            pulumi.set(__self__, "originate_default_route", originate_default_route)
        if peer_as is not None:
            pulumi.set(__self__, "peer_as", peer_as)
        if peer_ip_address is not None:
            pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)
        if summarize_mobile_user_routes is not None:
            pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> Optional[_builtins.bool]:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="fastFailover")
    def fast_failover(self) -> Optional[_builtins.bool]:
        """
        The FastFailover param.
        """
        return pulumi.get(self, "fast_failover")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> Optional[_builtins.str]:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> Optional[_builtins.bool]:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> Optional[_builtins.str]:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> Optional[_builtins.str]:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> Optional[_builtins.bool]:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class ServiceConnectionQos(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "qosProfile":
            suggest = "qos_profile"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceConnectionQos. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceConnectionQos.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceConnectionQos.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 enable: Optional[_builtins.bool] = None,
                 qos_profile: Optional[_builtins.str] = None):
        """
        :param _builtins.bool enable: The Enable param.
        :param _builtins.str qos_profile: The QosProfile param.
        """
        if enable is not None:
            pulumi.set(__self__, "enable", enable)
        if qos_profile is not None:
            pulumi.set(__self__, "qos_profile", qos_profile)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> Optional[_builtins.bool]:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="qosProfile")
    def qos_profile(self) -> Optional[_builtins.str]:
        """
        The QosProfile param.
        """
        return pulumi.get(self, "qos_profile")


@pulumi.output_type
class ServiceProtocol(dict):
    def __init__(__self__, *,
                 tcp: Optional['outputs.ServiceProtocolTcp'] = None,
                 udp: Optional['outputs.ServiceProtocolUdp'] = None):
        """
        :param 'ServiceProtocolTcpArgs' tcp: The Tcp param. Ensure that only one of the following is specified: `tcp`, `udp`
        :param 'ServiceProtocolUdpArgs' udp: The Udp param. Ensure that only one of the following is specified: `tcp`, `udp`
        """
        if tcp is not None:
            pulumi.set(__self__, "tcp", tcp)
        if udp is not None:
            pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> Optional['outputs.ServiceProtocolTcp']:
        """
        The Tcp param. Ensure that only one of the following is specified: `tcp`, `udp`
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> Optional['outputs.ServiceProtocolUdp']:
        """
        The Udp param. Ensure that only one of the following is specified: `tcp`, `udp`
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class ServiceProtocolTcp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "sourcePort":
            suggest = "source_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceProtocolTcp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceProtocolTcp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceProtocolTcp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 port: _builtins.str,
                 override: Optional['outputs.ServiceProtocolTcpOverride'] = None,
                 source_port: Optional[_builtins.str] = None):
        """
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param 'ServiceProtocolTcpOverrideArgs' override: The Override param.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "port", port)
        if override is not None:
            pulumi.set(__self__, "override", override)
        if source_port is not None:
            pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def override(self) -> Optional['outputs.ServiceProtocolTcpOverride']:
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> Optional[_builtins.str]:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class ServiceProtocolTcpOverride(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "halfcloseTimeout":
            suggest = "halfclose_timeout"
        elif key == "timewaitTimeout":
            suggest = "timewait_timeout"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceProtocolTcpOverride. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceProtocolTcpOverride.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceProtocolTcpOverride.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 halfclose_timeout: Optional[_builtins.int] = None,
                 timeout: Optional[_builtins.int] = None,
                 timewait_timeout: Optional[_builtins.int] = None):
        """
        :param _builtins.int halfclose_timeout: tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        :param _builtins.int timeout: tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        :param _builtins.int timewait_timeout: tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        if halfclose_timeout is not None:
            pulumi.set(__self__, "halfclose_timeout", halfclose_timeout)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)
        if timewait_timeout is not None:
            pulumi.set(__self__, "timewait_timeout", timewait_timeout)

    @_builtins.property
    @pulumi.getter(name="halfcloseTimeout")
    def halfclose_timeout(self) -> Optional[_builtins.int]:
        """
        tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        """
        return pulumi.get(self, "halfclose_timeout")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> Optional[_builtins.int]:
        """
        tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter(name="timewaitTimeout")
    def timewait_timeout(self) -> Optional[_builtins.int]:
        """
        tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        return pulumi.get(self, "timewait_timeout")


@pulumi.output_type
class ServiceProtocolUdp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "sourcePort":
            suggest = "source_port"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ServiceProtocolUdp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ServiceProtocolUdp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ServiceProtocolUdp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 port: _builtins.str,
                 override: Optional['outputs.ServiceProtocolUdpOverride'] = None,
                 source_port: Optional[_builtins.str] = None):
        """
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param 'ServiceProtocolUdpOverrideArgs' override: The Override param.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "port", port)
        if override is not None:
            pulumi.set(__self__, "override", override)
        if source_port is not None:
            pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def override(self) -> Optional['outputs.ServiceProtocolUdpOverride']:
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> Optional[_builtins.str]:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class ServiceProtocolUdpOverride(dict):
    def __init__(__self__, *,
                 timeout: Optional[_builtins.int] = None):
        """
        :param _builtins.int timeout: udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> Optional[_builtins.int]:
        """
        udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class TacacsServerProfileServer(dict):
    def __init__(__self__, *,
                 address: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 port: Optional[_builtins.int] = None,
                 secret: Optional[_builtins.str] = None):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        if address is not None:
            pulumi.set(__self__, "address", address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter
    def address(self) -> Optional[_builtins.str]:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> Optional[_builtins.int]:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> Optional[_builtins.str]:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class TlsServiceProfileProtocolSettings(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "authAlgoSha1":
            suggest = "auth_algo_sha1"
        elif key == "authAlgoSha256":
            suggest = "auth_algo_sha256"
        elif key == "authAlgoSha384":
            suggest = "auth_algo_sha384"
        elif key == "encAlgo3des":
            suggest = "enc_algo3des"
        elif key == "encAlgoAes128Cbc":
            suggest = "enc_algo_aes128_cbc"
        elif key == "encAlgoAes128Gcm":
            suggest = "enc_algo_aes128_gcm"
        elif key == "encAlgoAes256Cbc":
            suggest = "enc_algo_aes256_cbc"
        elif key == "encAlgoAes256Gcm":
            suggest = "enc_algo_aes256_gcm"
        elif key == "encAlgoRc4":
            suggest = "enc_algo_rc4"
        elif key == "keyxchgAlgoDhe":
            suggest = "keyxchg_algo_dhe"
        elif key == "keyxchgAlgoEcdhe":
            suggest = "keyxchg_algo_ecdhe"
        elif key == "keyxchgAlgoRsa":
            suggest = "keyxchg_algo_rsa"
        elif key == "maxVersion":
            suggest = "max_version"
        elif key == "minVersion":
            suggest = "min_version"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TlsServiceProfileProtocolSettings. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TlsServiceProfileProtocolSettings.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TlsServiceProfileProtocolSettings.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 auth_algo_sha1: Optional[_builtins.bool] = None,
                 auth_algo_sha256: Optional[_builtins.bool] = None,
                 auth_algo_sha384: Optional[_builtins.bool] = None,
                 enc_algo3des: Optional[_builtins.bool] = None,
                 enc_algo_aes128_cbc: Optional[_builtins.bool] = None,
                 enc_algo_aes128_gcm: Optional[_builtins.bool] = None,
                 enc_algo_aes256_cbc: Optional[_builtins.bool] = None,
                 enc_algo_aes256_gcm: Optional[_builtins.bool] = None,
                 enc_algo_rc4: Optional[_builtins.bool] = None,
                 keyxchg_algo_dhe: Optional[_builtins.bool] = None,
                 keyxchg_algo_ecdhe: Optional[_builtins.bool] = None,
                 keyxchg_algo_rsa: Optional[_builtins.bool] = None,
                 max_version: Optional[_builtins.str] = None,
                 min_version: Optional[_builtins.str] = None):
        """
        :param _builtins.bool auth_algo_sha1: Allow authentication SHA1.
        :param _builtins.bool auth_algo_sha256: Allow authentication SHA256.
        :param _builtins.bool auth_algo_sha384: Allow authentication SHA384.
        :param _builtins.bool enc_algo3des: Allow algorithm 3DES.
        :param _builtins.bool enc_algo_aes128_cbc: Allow algorithm AES-128-CBC.
        :param _builtins.bool enc_algo_aes128_gcm: Allow algorithm AES-128-GCM.
        :param _builtins.bool enc_algo_aes256_cbc: Allow algorithm AES-256-CBC.
        :param _builtins.bool enc_algo_aes256_gcm: Allow algorithm AES-256-GCM.
        :param _builtins.bool enc_algo_rc4: Allow algorithm RC4.
        :param _builtins.bool keyxchg_algo_dhe: Allow algorithm DHE.
        :param _builtins.bool keyxchg_algo_ecdhe: Allow algorithm ECDHE.
        :param _builtins.bool keyxchg_algo_rsa: Allow algorithm RSA.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        if auth_algo_sha1 is not None:
            pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        if auth_algo_sha256 is not None:
            pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        if auth_algo_sha384 is not None:
            pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        if enc_algo3des is not None:
            pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        if enc_algo_aes128_cbc is not None:
            pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        if enc_algo_aes128_gcm is not None:
            pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        if enc_algo_aes256_cbc is not None:
            pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        if enc_algo_aes256_gcm is not None:
            pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        if enc_algo_rc4 is not None:
            pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        if keyxchg_algo_dhe is not None:
            pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        if keyxchg_algo_ecdhe is not None:
            pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        if keyxchg_algo_rsa is not None:
            pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        if max_version is not None:
            pulumi.set(__self__, "max_version", max_version)
        if min_version is not None:
            pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> Optional[_builtins.bool]:
        """
        Allow authentication SHA1.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> Optional[_builtins.bool]:
        """
        Allow authentication SHA256.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> Optional[_builtins.bool]:
        """
        Allow authentication SHA384.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm 3DES.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm AES-128-CBC.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm AES-128-GCM.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm AES-256-CBC.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm AES-256-GCM.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm RC4.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm DHE.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm ECDHE.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> Optional[_builtins.bool]:
        """
        Allow algorithm RSA.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> Optional[_builtins.str]:
        """
        The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> Optional[_builtins.str]:
        """
        The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class TrafficSteeringRuleAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "noPbf":
            suggest = "no_pbf"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TrafficSteeringRuleAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TrafficSteeringRuleAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TrafficSteeringRuleAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 forward: Optional['outputs.TrafficSteeringRuleActionForward'] = None,
                 no_pbf: Optional[_builtins.bool] = None):
        """
        :param 'TrafficSteeringRuleActionForwardArgs' forward: The Forward param. Ensure that only one of the following is specified: `forward`, `no-pbf`
        :param _builtins.bool no_pbf: The NoPbf param. Ensure that only one of the following is specified: `forward`, `no-pbf`
        """
        if forward is not None:
            pulumi.set(__self__, "forward", forward)
        if no_pbf is not None:
            pulumi.set(__self__, "no_pbf", no_pbf)

    @_builtins.property
    @pulumi.getter
    def forward(self) -> Optional['outputs.TrafficSteeringRuleActionForward']:
        """
        The Forward param. Ensure that only one of the following is specified: `forward`, `no-pbf`
        """
        return pulumi.get(self, "forward")

    @_builtins.property
    @pulumi.getter(name="noPbf")
    def no_pbf(self) -> Optional[_builtins.bool]:
        """
        The NoPbf param. Ensure that only one of the following is specified: `forward`, `no-pbf`
        """
        return pulumi.get(self, "no_pbf")


@pulumi.output_type
class TrafficSteeringRuleActionForward(dict):
    def __init__(__self__, *,
                 target: Optional[_builtins.str] = None):
        """
        :param _builtins.str target: The Target param.
        """
        if target is not None:
            pulumi.set(__self__, "target", target)

    @_builtins.property
    @pulumi.getter
    def target(self) -> Optional[_builtins.str]:
        """
        The Target param.
        """
        return pulumi.get(self, "target")


@pulumi.output_type
class UrlAccessProfileCredentialEnforcement(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "logSeverity":
            suggest = "log_severity"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in UrlAccessProfileCredentialEnforcement. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        UrlAccessProfileCredentialEnforcement.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        UrlAccessProfileCredentialEnforcement.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alerts: Optional[Sequence[_builtins.str]] = None,
                 allows: Optional[Sequence[_builtins.str]] = None,
                 blocks: Optional[Sequence[_builtins.str]] = None,
                 continues: Optional[Sequence[_builtins.str]] = None,
                 log_severity: Optional[_builtins.str] = None,
                 mode: Optional['outputs.UrlAccessProfileCredentialEnforcementMode'] = None):
        """
        :param Sequence[_builtins.str] alerts: The Alerts param.
        :param Sequence[_builtins.str] allows: The Allows param.
        :param Sequence[_builtins.str] blocks: The Blocks param.
        :param Sequence[_builtins.str] continues: The Continues param.
        :param _builtins.str log_severity: The LogSeverity param. Default: `"medium"`.
        :param 'UrlAccessProfileCredentialEnforcementModeArgs' mode: The Mode param.
        """
        if alerts is not None:
            pulumi.set(__self__, "alerts", alerts)
        if allows is not None:
            pulumi.set(__self__, "allows", allows)
        if blocks is not None:
            pulumi.set(__self__, "blocks", blocks)
        if continues is not None:
            pulumi.set(__self__, "continues", continues)
        if log_severity is not None:
            pulumi.set(__self__, "log_severity", log_severity)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)

    @_builtins.property
    @pulumi.getter
    def alerts(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @_builtins.property
    @pulumi.getter
    def allows(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @_builtins.property
    @pulumi.getter
    def blocks(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @_builtins.property
    @pulumi.getter
    def continues(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @_builtins.property
    @pulumi.getter(name="logSeverity")
    def log_severity(self) -> Optional[_builtins.str]:
        """
        The LogSeverity param. Default: `"medium"`.
        """
        return pulumi.get(self, "log_severity")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> Optional['outputs.UrlAccessProfileCredentialEnforcementMode']:
        """
        The Mode param.
        """
        return pulumi.get(self, "mode")


@pulumi.output_type
class UrlAccessProfileCredentialEnforcementMode(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "domainCredentials":
            suggest = "domain_credentials"
        elif key == "groupMapping":
            suggest = "group_mapping"
        elif key == "ipUser":
            suggest = "ip_user"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in UrlAccessProfileCredentialEnforcementMode. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        UrlAccessProfileCredentialEnforcementMode.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        UrlAccessProfileCredentialEnforcementMode.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 disabled: Optional[_builtins.bool] = None,
                 domain_credentials: Optional[_builtins.bool] = None,
                 group_mapping: Optional[_builtins.str] = None,
                 ip_user: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool disabled: The Disabled param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        :param _builtins.bool domain_credentials: The DomainCredentials param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        :param _builtins.str group_mapping: The GroupMapping param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        :param _builtins.bool ip_user: The IpUser param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        """
        if disabled is not None:
            pulumi.set(__self__, "disabled", disabled)
        if domain_credentials is not None:
            pulumi.set(__self__, "domain_credentials", domain_credentials)
        if group_mapping is not None:
            pulumi.set(__self__, "group_mapping", group_mapping)
        if ip_user is not None:
            pulumi.set(__self__, "ip_user", ip_user)

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> Optional[_builtins.bool]:
        """
        The Disabled param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter(name="domainCredentials")
    def domain_credentials(self) -> Optional[_builtins.bool]:
        """
        The DomainCredentials param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        """
        return pulumi.get(self, "domain_credentials")

    @_builtins.property
    @pulumi.getter(name="groupMapping")
    def group_mapping(self) -> Optional[_builtins.str]:
        """
        The GroupMapping param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        """
        return pulumi.get(self, "group_mapping")

    @_builtins.property
    @pulumi.getter(name="ipUser")
    def ip_user(self) -> Optional[_builtins.bool]:
        """
        The IpUser param. Ensure that only one of the following is specified: `disabled`, `domain_credentials`, `group_mapping`, `ip_user`
        """
        return pulumi.get(self, "ip_user")


@pulumi.output_type
class VulnerabilityProtectionProfileRule(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "packetCapture":
            suggest = "packet_capture"
        elif key == "threatName":
            suggest = "threat_name"
        elif key == "vendorIds":
            suggest = "vendor_ids"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileRule. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileRule.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileRule.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional['outputs.VulnerabilityProtectionProfileRuleAction'] = None,
                 category: Optional[_builtins.str] = None,
                 cves: Optional[Sequence[_builtins.str]] = None,
                 host: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None,
                 packet_capture: Optional[_builtins.str] = None,
                 severities: Optional[Sequence[_builtins.str]] = None,
                 threat_name: Optional[_builtins.str] = None,
                 vendor_ids: Optional[Sequence[_builtins.str]] = None):
        """
        :param 'VulnerabilityProtectionProfileRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        :param Sequence[_builtins.str] cves: The Cves param.
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param.
        :param Sequence[_builtins.str] vendor_ids: The VendorIds param.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if category is not None:
            pulumi.set(__self__, "category", category)
        if cves is not None:
            pulumi.set(__self__, "cves", cves)
        if host is not None:
            pulumi.set(__self__, "host", host)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)
        if severities is not None:
            pulumi.set(__self__, "severities", severities)
        if threat_name is not None:
            pulumi.set(__self__, "threat_name", threat_name)
        if vendor_ids is not None:
            pulumi.set(__self__, "vendor_ids", vendor_ids)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional['outputs.VulnerabilityProtectionProfileRuleAction']:
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> Optional[_builtins.str]:
        """
        The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def cves(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Cves param.
        """
        return pulumi.get(self, "cves")

    @_builtins.property
    @pulumi.getter
    def host(self) -> Optional[_builtins.str]:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> Optional[_builtins.str]:
        """
        The ThreatName param.
        """
        return pulumi.get(self, "threat_name")

    @_builtins.property
    @pulumi.getter(name="vendorIds")
    def vendor_ids(self) -> Optional[Sequence[_builtins.str]]:
        """
        The VendorIds param.
        """
        return pulumi.get(self, "vendor_ids")


@pulumi.output_type
class VulnerabilityProtectionProfileRuleAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileRuleAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileRuleAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileRuleAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.VulnerabilityProtectionProfileRuleActionBlockIp'] = None,
                 default: Optional[_builtins.bool] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'VulnerabilityProtectionProfileRuleActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool default: The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.VulnerabilityProtectionProfileRuleActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> Optional[_builtins.bool]:
        """
        The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class VulnerabilityProtectionProfileRuleActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileRuleActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileRuleActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileRuleActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class VulnerabilityProtectionProfileThreatException(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "exemptIps":
            suggest = "exempt_ips"
        elif key == "packetCapture":
            suggest = "packet_capture"
        elif key == "timeAttribute":
            suggest = "time_attribute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileThreatException. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileThreatException.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileThreatException.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 action: Optional['outputs.VulnerabilityProtectionProfileThreatExceptionAction'] = None,
                 exempt_ips: Optional[Sequence['outputs.VulnerabilityProtectionProfileThreatExceptionExemptIp']] = None,
                 name: Optional[_builtins.str] = None,
                 notes: Optional[_builtins.str] = None,
                 packet_capture: Optional[_builtins.str] = None,
                 time_attribute: Optional['outputs.VulnerabilityProtectionProfileThreatExceptionTimeAttribute'] = None):
        """
        :param 'VulnerabilityProtectionProfileThreatExceptionActionArgs' action: The Action param.
        :param Sequence['VulnerabilityProtectionProfileThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param 'VulnerabilityProtectionProfileThreatExceptionTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if exempt_ips is not None:
            pulumi.set(__self__, "exempt_ips", exempt_ips)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if notes is not None:
            pulumi.set(__self__, "notes", notes)
        if packet_capture is not None:
            pulumi.set(__self__, "packet_capture", packet_capture)
        if time_attribute is not None:
            pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter
    def action(self) -> Optional['outputs.VulnerabilityProtectionProfileThreatExceptionAction']:
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Optional[Sequence['outputs.VulnerabilityProtectionProfileThreatExceptionExemptIp']]:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> Optional[_builtins.str]:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> Optional[_builtins.str]:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> Optional['outputs.VulnerabilityProtectionProfileThreatExceptionTimeAttribute']:
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class VulnerabilityProtectionProfileThreatExceptionAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileThreatExceptionAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileThreatExceptionAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileThreatExceptionAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.VulnerabilityProtectionProfileThreatExceptionActionBlockIp'] = None,
                 default: Optional[_builtins.bool] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'VulnerabilityProtectionProfileThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool default: The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if default is not None:
            pulumi.set(__self__, "default", default)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.VulnerabilityProtectionProfileThreatExceptionActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> Optional[_builtins.bool]:
        """
        The Default param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `default`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class VulnerabilityProtectionProfileThreatExceptionActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileThreatExceptionActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileThreatExceptionActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileThreatExceptionActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class VulnerabilityProtectionProfileThreatExceptionExemptIp(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class VulnerabilityProtectionProfileThreatExceptionTimeAttribute(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionProfileThreatExceptionTimeAttribute. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionProfileThreatExceptionTimeAttribute.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionProfileThreatExceptionTimeAttribute.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 interval: Optional[_builtins.int] = None,
                 threshold: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 65535.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        if interval is not None:
            pulumi.set(__self__, "interval", interval)
        if threshold is not None:
            pulumi.set(__self__, "threshold", threshold)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> Optional[_builtins.int]:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> Optional[_builtins.int]:
        """
        The Threshold param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class VulnerabilityProtectionSignaturesAffectedHost(dict):
    def __init__(__self__, *,
                 client: Optional[_builtins.bool] = None,
                 server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool client: The Client param. Ensure that only one of the following is specified: `client`, `server`
        :param _builtins.bool server: The Server param. Ensure that only one of the following is specified: `client`, `server`
        """
        if client is not None:
            pulumi.set(__self__, "client", client)
        if server is not None:
            pulumi.set(__self__, "server", server)

    @_builtins.property
    @pulumi.getter
    def client(self) -> Optional[_builtins.bool]:
        """
        The Client param. Ensure that only one of the following is specified: `client`, `server`
        """
        return pulumi.get(self, "client")

    @_builtins.property
    @pulumi.getter
    def server(self) -> Optional[_builtins.bool]:
        """
        The Server param. Ensure that only one of the following is specified: `client`, `server`
        """
        return pulumi.get(self, "server")


@pulumi.output_type
class VulnerabilityProtectionSignaturesDefaultAction(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "blockIp":
            suggest = "block_ip"
        elif key == "resetBoth":
            suggest = "reset_both"
        elif key == "resetClient":
            suggest = "reset_client"
        elif key == "resetServer":
            suggest = "reset_server"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesDefaultAction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesDefaultAction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesDefaultAction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 alert: Optional[_builtins.bool] = None,
                 allow: Optional[_builtins.bool] = None,
                 block_ip: Optional['outputs.VulnerabilityProtectionSignaturesDefaultActionBlockIp'] = None,
                 drop: Optional[_builtins.bool] = None,
                 reset_both: Optional[_builtins.bool] = None,
                 reset_client: Optional[_builtins.bool] = None,
                 reset_server: Optional[_builtins.bool] = None):
        """
        :param _builtins.bool alert: The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool allow: The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param 'VulnerabilityProtectionSignaturesDefaultActionBlockIpArgs' block_ip: The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool drop: The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_both: The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_client: The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        :param _builtins.bool reset_server: The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        if alert is not None:
            pulumi.set(__self__, "alert", alert)
        if allow is not None:
            pulumi.set(__self__, "allow", allow)
        if block_ip is not None:
            pulumi.set(__self__, "block_ip", block_ip)
        if drop is not None:
            pulumi.set(__self__, "drop", drop)
        if reset_both is not None:
            pulumi.set(__self__, "reset_both", reset_both)
        if reset_client is not None:
            pulumi.set(__self__, "reset_client", reset_client)
        if reset_server is not None:
            pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> Optional[_builtins.bool]:
        """
        The Alert param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> Optional[_builtins.bool]:
        """
        The Allow param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> Optional['outputs.VulnerabilityProtectionSignaturesDefaultActionBlockIp']:
        """
        The BlockIp param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> Optional[_builtins.bool]:
        """
        The Drop param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> Optional[_builtins.bool]:
        """
        The ResetBoth param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> Optional[_builtins.bool]:
        """
        The ResetClient param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> Optional[_builtins.bool]:
        """
        The ResetServer param. Ensure that only one of the following is specified: `alert`, `allow`, `block_ip`, `drop`, `reset_both`, `reset_client`, `reset_server`
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class VulnerabilityProtectionSignaturesDefaultActionBlockIp(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesDefaultActionBlockIp. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesDefaultActionBlockIp.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesDefaultActionBlockIp.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 duration: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        if duration is not None:
            pulumi.set(__self__, "duration", duration)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> Optional[_builtins.int]:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignature(dict):
    def __init__(__self__, *,
                 combination: Optional['outputs.VulnerabilityProtectionSignaturesSignatureCombination'] = None,
                 standards: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandard']] = None):
        """
        :param 'VulnerabilityProtectionSignaturesSignatureCombinationArgs' combination: The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardArgs'] standards: The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        if combination is not None:
            pulumi.set(__self__, "combination", combination)
        if standards is not None:
            pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureCombination']:
        """
        The Combination param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandard']]:
        """
        The Standards param. Ensure that only one of the following is specified: `combination`, `standard`
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureCombination(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "andConditions":
            suggest = "and_conditions"
        elif key == "orderFree":
            suggest = "order_free"
        elif key == "timeAttribute":
            suggest = "time_attribute"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureCombination. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombination.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombination.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 and_conditions: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndCondition']] = None,
                 order_free: Optional[_builtins.bool] = None,
                 time_attribute: Optional['outputs.VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute'] = None):
        """
        :param Sequence['VulnerabilityProtectionSignaturesSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'VulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        if and_conditions is not None:
            pulumi.set(__self__, "and_conditions", and_conditions)
        if order_free is not None:
            pulumi.set(__self__, "order_free", order_free)
        if time_attribute is not None:
            pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndCondition']]:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> Optional[_builtins.bool]:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute']:
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureCombinationAndCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "orConditions":
            suggest = "or_conditions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureCombinationAndCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationAndCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationAndCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 or_conditions: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition']] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if or_conditions is not None:
            pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition']]:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "threatId":
            suggest = "threat_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 threat_id: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if threat_id is not None:
            pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> Optional[_builtins.str]:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "trackBy":
            suggest = "track_by"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureCombinationTimeAttribute.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 interval: Optional[_builtins.int] = None,
                 threshold: Optional[_builtins.int] = None,
                 track_by: Optional[_builtins.str] = None):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        if interval is not None:
            pulumi.set(__self__, "interval", interval)
        if threshold is not None:
            pulumi.set(__self__, "threshold", threshold)
        if track_by is not None:
            pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> Optional[_builtins.int]:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> Optional[_builtins.int]:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> Optional[_builtins.str]:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandard(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "andConditions":
            suggest = "and_conditions"
        elif key == "orderFree":
            suggest = "order_free"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureStandard. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandard.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandard.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: _builtins.str,
                 and_conditions: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndCondition']] = None,
                 comment: Optional[_builtins.str] = None,
                 order_free: Optional[_builtins.bool] = None,
                 scope: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "name", name)
        if and_conditions is not None:
            pulumi.set(__self__, "and_conditions", and_conditions)
        if comment is not None:
            pulumi.set(__self__, "comment", comment)
        if order_free is not None:
            pulumi.set(__self__, "order_free", order_free)
        if scope is not None:
            pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndCondition']]:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> Optional[_builtins.str]:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> Optional[_builtins.bool]:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> Optional[_builtins.str]:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndCondition(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "orConditions":
            suggest = "or_conditions"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureStandardAndCondition. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandardAndCondition.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandardAndCondition.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 or_conditions: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition']] = None):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if or_conditions is not None:
            pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition']]:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrCondition(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 operator: Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator'] = None):
        """
        :param _builtins.str name: The Name param.
        :param 'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if operator is not None:
            pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator']:
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "equalTo":
            suggest = "equal_to"
        elif key == "greaterThan":
            suggest = "greater_than"
        elif key == "lessThan":
            suggest = "less_than"
        elif key == "patternMatch":
            suggest = "pattern_match"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperator.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 equal_to: Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo'] = None,
                 greater_than: Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan'] = None,
                 less_than: Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan'] = None,
                 pattern_match: Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch'] = None):
        """
        :param 'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        if equal_to is not None:
            pulumi.set(__self__, "equal_to", equal_to)
        if greater_than is not None:
            pulumi.set(__self__, "greater_than", greater_than)
        if less_than is not None:
            pulumi.set(__self__, "less_than", less_than)
        if pattern_match is not None:
            pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo']:
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan']:
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan']:
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> Optional['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch']:
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualTo(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 negate: Optional[_builtins.bool] = None,
                 qualifiers: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThan(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThan(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier']] = None,
                 value: Optional[_builtins.int] = None):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.int]:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatch(dict):
    def __init__(__self__, *,
                 context: Optional[_builtins.str] = None,
                 negate: Optional[_builtins.bool] = None,
                 pattern: Optional[_builtins.str] = None,
                 qualifiers: Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier']] = None):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        if context is not None:
            pulumi.set(__self__, "context", context)
        if negate is not None:
            pulumi.set(__self__, "negate", negate)
        if pattern is not None:
            pulumi.set(__self__, "pattern", pattern)
        if qualifiers is not None:
            pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> Optional[_builtins.str]:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> Optional[_builtins.bool]:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> Optional[_builtins.str]:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Optional[Sequence['outputs.VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier']]:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class VulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifier(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 value: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> Optional[_builtins.str]:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class WildfireAntiVirusProfileMlavException(dict):
    def __init__(__self__, *,
                 description: Optional[_builtins.str] = None,
                 filename: Optional[_builtins.str] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str filename: The Filename param.
        :param _builtins.str name: The Name param.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if filename is not None:
            pulumi.set(__self__, "filename", filename)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> Optional[_builtins.str]:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def filename(self) -> Optional[_builtins.str]:
        """
        The Filename param.
        """
        return pulumi.get(self, "filename")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class WildfireAntiVirusProfileRule(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileTypes":
            suggest = "file_types"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in WildfireAntiVirusProfileRule. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        WildfireAntiVirusProfileRule.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        WildfireAntiVirusProfileRule.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 analysis: Optional[_builtins.str] = None,
                 applications: Optional[Sequence[_builtins.str]] = None,
                 direction: Optional[_builtins.str] = None,
                 file_types: Optional[Sequence[_builtins.str]] = None,
                 name: Optional[_builtins.str] = None):
        """
        :param _builtins.str analysis: The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        :param Sequence[_builtins.str] applications: The Applications param.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        :param Sequence[_builtins.str] file_types: The FileTypes param.
        :param _builtins.str name: The Name param.
        """
        if analysis is not None:
            pulumi.set(__self__, "analysis", analysis)
        if applications is not None:
            pulumi.set(__self__, "applications", applications)
        if direction is not None:
            pulumi.set(__self__, "direction", direction)
        if file_types is not None:
            pulumi.set(__self__, "file_types", file_types)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def analysis(self) -> Optional[_builtins.str]:
        """
        The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        """
        return pulumi.get(self, "analysis")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Optional[Sequence[_builtins.str]]:
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> Optional[_builtins.str]:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Optional[Sequence[_builtins.str]]:
        """
        The FileTypes param.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class WildfireAntiVirusProfileThreatException(dict):
    def __init__(__self__, *,
                 name: Optional[_builtins.str] = None,
                 notes: Optional[_builtins.str] = None):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if notes is not None:
            pulumi.set(__self__, "notes", notes)

    @_builtins.property
    @pulumi.getter
    def name(self) -> Optional[_builtins.str]:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> Optional[_builtins.str]:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")


@pulumi.output_type
class GetAddressGroupDynamicValueResult(dict):
    def __init__(__self__, *,
                 filter: _builtins.str):
        """
        :param _builtins.str filter: Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        pulumi.set(__self__, "filter", filter)

    @_builtins.property
    @pulumi.getter
    def filter(self) -> _builtins.str:
        """
        Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        return pulumi.get(self, "filter")


@pulumi.output_type
class GetAddressGroupListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 dynamic_value: 'outputs.GetAddressGroupListDataDynamicValueResult',
                 id: _builtins.str,
                 name: _builtins.str,
                 static_lists: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param 'GetAddressGroupListDataDynamicValueArgs' dynamic_value: The DynamicValue param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param Sequence[_builtins.str] static_lists: The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        :param Sequence[_builtins.str] tags: Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dynamic_value", dynamic_value)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "static_lists", static_lists)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="dynamicValue")
    def dynamic_value(self) -> 'outputs.GetAddressGroupListDataDynamicValueResult':
        """
        The DynamicValue param.
        """
        return pulumi.get(self, "dynamic_value")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="staticLists")
    def static_lists(self) -> Sequence[_builtins.str]:
        """
        The StaticList param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "static_lists")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for address group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetAddressGroupListDataDynamicValueResult(dict):
    def __init__(__self__, *,
                 filter: _builtins.str):
        """
        :param _builtins.str filter: Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        pulumi.set(__self__, "filter", filter)

    @_builtins.property
    @pulumi.getter
    def filter(self) -> _builtins.str:
        """
        Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        return pulumi.get(self, "filter")


@pulumi.output_type
class GetAddressObjectListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 fqdn: _builtins.str,
                 id: _builtins.str,
                 ip_netmask: _builtins.str,
                 ip_range: _builtins.str,
                 ip_wildcard: _builtins.str,
                 name: _builtins.str,
                 tags: Sequence[_builtins.str],
                 type: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param _builtins.str fqdn: The Fqdn param. String length must be between 1 and 255 characters. String validation regex: `^a-zA-Z0-9_+[a-zA-Z0-9]$`.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str ip_netmask: The IpNetmask param.
        :param _builtins.str ip_range: The IpRange param.
        :param _builtins.str ip_wildcard: The IpWildcard param.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param Sequence[_builtins.str] tags: Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "fqdn", fqdn)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ip_netmask", ip_netmask)
        pulumi.set(__self__, "ip_range", ip_range)
        pulumi.set(__self__, "ip_wildcard", ip_wildcard)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def fqdn(self) -> _builtins.str:
        """
        The Fqdn param. String length must be between 1 and 255 characters. String validation regex: `^a-zA-Z0-9_+[a-zA-Z0-9]$`.
        """
        return pulumi.get(self, "fqdn")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipNetmask")
    def ip_netmask(self) -> _builtins.str:
        """
        The IpNetmask param.
        """
        return pulumi.get(self, "ip_netmask")

    @_builtins.property
    @pulumi.getter(name="ipRange")
    def ip_range(self) -> _builtins.str:
        """
        The IpRange param.
        """
        return pulumi.get(self, "ip_range")

    @_builtins.property
    @pulumi.getter(name="ipWildcard")
    def ip_wildcard(self) -> _builtins.str:
        """
        The IpWildcard param.
        """
        return pulumi.get(self, "ip_wildcard")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetAntiSpywareProfileListDataResult(dict):
    def __init__(__self__, *,
                 cloud_inline_analysis: _builtins.bool,
                 description: _builtins.str,
                 id: _builtins.str,
                 inline_exception_edl_urls: Sequence[_builtins.str],
                 inline_exception_ip_addresses: Sequence[_builtins.str],
                 mica_engine_spyware_enabled_lists: Sequence['outputs.GetAntiSpywareProfileListDataMicaEngineSpywareEnabledListResult'],
                 name: _builtins.str,
                 rules: Sequence['outputs.GetAntiSpywareProfileListDataRuleResult'],
                 threat_exceptions: Sequence['outputs.GetAntiSpywareProfileListDataThreatExceptionResult']):
        """
        :param _builtins.bool cloud_inline_analysis: The CloudInlineAnalysis param. Default: `false`.
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] inline_exception_edl_urls: The InlineExceptionEdlUrls param.
        :param Sequence[_builtins.str] inline_exception_ip_addresses: The InlineExceptionIpAddresses param.
        :param Sequence['GetAntiSpywareProfileListDataMicaEngineSpywareEnabledListArgs'] mica_engine_spyware_enabled_lists: The MicaEngineSpywareEnabledList param.
        :param _builtins.str name: The Name param.
        :param Sequence['GetAntiSpywareProfileListDataRuleArgs'] rules: The Rules param.
        :param Sequence['GetAntiSpywareProfileListDataThreatExceptionArgs'] threat_exceptions: The ThreatExceptions param.
        """
        pulumi.set(__self__, "cloud_inline_analysis", cloud_inline_analysis)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "inline_exception_edl_urls", inline_exception_edl_urls)
        pulumi.set(__self__, "inline_exception_ip_addresses", inline_exception_ip_addresses)
        pulumi.set(__self__, "mica_engine_spyware_enabled_lists", mica_engine_spyware_enabled_lists)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "rules", rules)
        pulumi.set(__self__, "threat_exceptions", threat_exceptions)

    @_builtins.property
    @pulumi.getter(name="cloudInlineAnalysis")
    def cloud_inline_analysis(self) -> _builtins.bool:
        """
        The CloudInlineAnalysis param. Default: `false`.
        """
        return pulumi.get(self, "cloud_inline_analysis")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="inlineExceptionEdlUrls")
    def inline_exception_edl_urls(self) -> Sequence[_builtins.str]:
        """
        The InlineExceptionEdlUrls param.
        """
        return pulumi.get(self, "inline_exception_edl_urls")

    @_builtins.property
    @pulumi.getter(name="inlineExceptionIpAddresses")
    def inline_exception_ip_addresses(self) -> Sequence[_builtins.str]:
        """
        The InlineExceptionIpAddresses param.
        """
        return pulumi.get(self, "inline_exception_ip_addresses")

    @_builtins.property
    @pulumi.getter(name="micaEngineSpywareEnabledLists")
    def mica_engine_spyware_enabled_lists(self) -> Sequence['outputs.GetAntiSpywareProfileListDataMicaEngineSpywareEnabledListResult']:
        """
        The MicaEngineSpywareEnabledList param.
        """
        return pulumi.get(self, "mica_engine_spyware_enabled_lists")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetAntiSpywareProfileListDataRuleResult']:
        """
        The Rules param.
        """
        return pulumi.get(self, "rules")

    @_builtins.property
    @pulumi.getter(name="threatExceptions")
    def threat_exceptions(self) -> Sequence['outputs.GetAntiSpywareProfileListDataThreatExceptionResult']:
        """
        The ThreatExceptions param.
        """
        return pulumi.get(self, "threat_exceptions")


@pulumi.output_type
class GetAntiSpywareProfileListDataMicaEngineSpywareEnabledListResult(dict):
    def __init__(__self__, *,
                 inline_policy_action: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str inline_policy_action: The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "inline_policy_action", inline_policy_action)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="inlinePolicyAction")
    def inline_policy_action(self) -> _builtins.str:
        """
        The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        """
        return pulumi.get(self, "inline_policy_action")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetAntiSpywareProfileListDataRuleResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetAntiSpywareProfileListDataRuleActionResult',
                 category: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str,
                 severities: Sequence[_builtins.str],
                 threat_name: _builtins.str):
        """
        :param 'GetAntiSpywareProfileListDataRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param. String length must exceed 4 characters.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "severities", severities)
        pulumi.set(__self__, "threat_name", threat_name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetAntiSpywareProfileListDataRuleActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        """
        The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Sequence[_builtins.str]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> _builtins.str:
        """
        The ThreatName param. String length must exceed 4 characters.
        """
        return pulumi.get(self, "threat_name")


@pulumi.output_type
class GetAntiSpywareProfileListDataRuleActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareProfileListDataRuleActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareProfileListDataRuleActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareProfileListDataRuleActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareProfileListDataRuleActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareProfileListDataThreatExceptionResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetAntiSpywareProfileListDataThreatExceptionActionResult',
                 exempt_ips: Sequence['outputs.GetAntiSpywareProfileListDataThreatExceptionExemptIpResult'],
                 name: _builtins.str,
                 notes: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param 'GetAntiSpywareProfileListDataThreatExceptionActionArgs' action: The Action param.
        :param Sequence['GetAntiSpywareProfileListDataThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "exempt_ips", exempt_ips)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetAntiSpywareProfileListDataThreatExceptionActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Sequence['outputs.GetAntiSpywareProfileListDataThreatExceptionExemptIpResult']:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetAntiSpywareProfileListDataThreatExceptionActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareProfileListDataThreatExceptionActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareProfileListDataThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareProfileListDataThreatExceptionActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareProfileListDataThreatExceptionActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareProfileListDataThreatExceptionExemptIpResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetAntiSpywareProfileMicaEngineSpywareEnabledListResult(dict):
    def __init__(__self__, *,
                 inline_policy_action: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str inline_policy_action: The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "inline_policy_action", inline_policy_action)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="inlinePolicyAction")
    def inline_policy_action(self) -> _builtins.str:
        """
        The InlinePolicyAction param. String must be one of these: `"alert"`, `"allow"`, `"drop"`, `"reset-both"`, `"reset-client"`, `"reset-server"`. Default: `"alert"`.
        """
        return pulumi.get(self, "inline_policy_action")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetAntiSpywareProfileRuleResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetAntiSpywareProfileRuleActionResult',
                 category: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str,
                 severities: Sequence[_builtins.str],
                 threat_name: _builtins.str):
        """
        :param 'GetAntiSpywareProfileRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param. String length must exceed 4 characters.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "severities", severities)
        pulumi.set(__self__, "threat_name", threat_name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetAntiSpywareProfileRuleActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        """
        The Category param. String must be one of these: `"dns-proxy"`, `"backdoor"`, `"data-theft"`, `"autogen"`, `"spyware"`, `"dns-security"`, `"downloader"`, `"dns-phishing"`, `"phishing-kit"`, `"cryptominer"`, `"hacktool"`, `"dns-benign"`, `"dns-wildfire"`, `"botnet"`, `"dns-grayware"`, `"inline-cloud-c2"`, `"keylogger"`, `"p2p-communication"`, `"domain-edl"`, `"webshell"`, `"command-and-control"`, `"dns-ddns"`, `"net-worm"`, `"any"`, `"tls-fingerprint"`, `"dns-new-domain"`, `"dns"`, `"fraud"`, `"dns-c2"`, `"adware"`, `"post-exploitation"`, `"dns-malware"`, `"browser-hijack"`, `"dns-parked"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Sequence[_builtins.str]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> _builtins.str:
        """
        The ThreatName param. String length must exceed 4 characters.
        """
        return pulumi.get(self, "threat_name")


@pulumi.output_type
class GetAntiSpywareProfileRuleActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareProfileRuleActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareProfileRuleActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareProfileRuleActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareProfileRuleActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareProfileThreatExceptionResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetAntiSpywareProfileThreatExceptionActionResult',
                 exempt_ips: Sequence['outputs.GetAntiSpywareProfileThreatExceptionExemptIpResult'],
                 name: _builtins.str,
                 notes: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param 'GetAntiSpywareProfileThreatExceptionActionArgs' action: The Action param.
        :param Sequence['GetAntiSpywareProfileThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "exempt_ips", exempt_ips)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetAntiSpywareProfileThreatExceptionActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Sequence['outputs.GetAntiSpywareProfileThreatExceptionExemptIpResult']:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetAntiSpywareProfileThreatExceptionActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareProfileThreatExceptionActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareProfileThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareProfileThreatExceptionActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareProfileThreatExceptionActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareProfileThreatExceptionExemptIpResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetAntiSpywareSignatureDefaultActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareSignatureDefaultActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareSignatureDefaultActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareSignatureDefaultActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareSignatureDefaultActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareSignatureListDataResult(dict):
    def __init__(__self__, *,
                 bugtraqs: Sequence[_builtins.str],
                 comment: _builtins.str,
                 cves: Sequence[_builtins.str],
                 default_action: 'outputs.GetAntiSpywareSignatureListDataDefaultActionResult',
                 direction: _builtins.str,
                 id: _builtins.str,
                 references: Sequence[_builtins.str],
                 severity: _builtins.str,
                 signature: 'outputs.GetAntiSpywareSignatureListDataSignatureResult',
                 threat_id: _builtins.int,
                 threatname: _builtins.str,
                 vendors: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] bugtraqs: The Bugtraqs param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param Sequence[_builtins.str] cves: The Cves param.
        :param 'GetAntiSpywareSignatureListDataDefaultActionArgs' default_action: The DefaultAction param.
        :param _builtins.str direction: The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] references: The References param.
        :param _builtins.str severity: The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        :param 'GetAntiSpywareSignatureListDataSignatureArgs' signature: The Signature param.
        :param _builtins.int threat_id: threat id range \\n\\n and \\n\\n. Value must be between 15000 and 70000000.
        :param _builtins.str threatname: The Threatname param. String length must not exceed 1024 characters.
        :param Sequence[_builtins.str] vendors: The Vendors param.
        """
        pulumi.set(__self__, "bugtraqs", bugtraqs)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "cves", cves)
        pulumi.set(__self__, "default_action", default_action)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "references", references)
        pulumi.set(__self__, "severity", severity)
        pulumi.set(__self__, "signature", signature)
        pulumi.set(__self__, "threat_id", threat_id)
        pulumi.set(__self__, "threatname", threatname)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def bugtraqs(self) -> Sequence[_builtins.str]:
        """
        The Bugtraqs param.
        """
        return pulumi.get(self, "bugtraqs")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def cves(self) -> Sequence[_builtins.str]:
        """
        The Cves param.
        """
        return pulumi.get(self, "cves")

    @_builtins.property
    @pulumi.getter(name="defaultAction")
    def default_action(self) -> 'outputs.GetAntiSpywareSignatureListDataDefaultActionResult':
        """
        The DefaultAction param.
        """
        return pulumi.get(self, "default_action")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def references(self) -> Sequence[_builtins.str]:
        """
        The References param.
        """
        return pulumi.get(self, "references")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> _builtins.str:
        """
        The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        """
        return pulumi.get(self, "severity")

    @_builtins.property
    @pulumi.getter
    def signature(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureResult':
        """
        The Signature param.
        """
        return pulumi.get(self, "signature")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.int:
        """
        threat id range \\n\\n and \\n\\n. Value must be between 15000 and 70000000.
        """
        return pulumi.get(self, "threat_id")

    @_builtins.property
    @pulumi.getter
    def threatname(self) -> _builtins.str:
        """
        The Threatname param. String length must not exceed 1024 characters.
        """
        return pulumi.get(self, "threatname")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence[_builtins.str]:
        """
        The Vendors param.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetAntiSpywareSignatureListDataDefaultActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetAntiSpywareSignatureListDataDefaultActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetAntiSpywareSignatureListDataDefaultActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetAntiSpywareSignatureListDataDefaultActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetAntiSpywareSignatureListDataDefaultActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureResult(dict):
    def __init__(__self__, *,
                 combination: 'outputs.GetAntiSpywareSignatureListDataSignatureCombinationResult',
                 standards: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardResult']):
        """
        :param 'GetAntiSpywareSignatureListDataSignatureCombinationArgs' combination: The Combination param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardArgs'] standards: The Standards param.
        """
        pulumi.set(__self__, "combination", combination)
        pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureCombinationResult':
        """
        The Combination param.
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardResult']:
        """
        The Standards param.
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureCombinationResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndConditionResult'],
                 order_free: _builtins.bool,
                 time_attribute: 'outputs.GetAntiSpywareSignatureListDataSignatureCombinationTimeAttributeResult'):
        """
        :param Sequence['GetAntiSpywareSignatureListDataSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'GetAntiSpywareSignatureListDataSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureCombinationTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureCombinationAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureCombinationAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 threat_id: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.str:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureCombinationTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: The Name param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetAntiSpywareSignatureListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureResult(dict):
    def __init__(__self__, *,
                 combination: 'outputs.GetAntiSpywareSignatureSignatureCombinationResult',
                 standards: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardResult']):
        """
        :param 'GetAntiSpywareSignatureSignatureCombinationArgs' combination: The Combination param.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardArgs'] standards: The Standards param.
        """
        pulumi.set(__self__, "combination", combination)
        pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> 'outputs.GetAntiSpywareSignatureSignatureCombinationResult':
        """
        The Combination param.
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardResult']:
        """
        The Standards param.
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureCombinationResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetAntiSpywareSignatureSignatureCombinationAndConditionResult'],
                 order_free: _builtins.bool,
                 time_attribute: 'outputs.GetAntiSpywareSignatureSignatureCombinationTimeAttributeResult'):
        """
        :param Sequence['GetAntiSpywareSignatureSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'GetAntiSpywareSignatureSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureCombinationAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetAntiSpywareSignatureSignatureCombinationTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureCombinationAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetAntiSpywareSignatureSignatureCombinationAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetAntiSpywareSignatureSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureCombinationAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureCombinationAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 threat_id: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.str:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureCombinationTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: The Name param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetAntiSpywareSignatureSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAppOverrideRuleListDataResult(dict):
    def __init__(__self__, *,
                 application: _builtins.str,
                 description: _builtins.str,
                 destinations: Sequence[_builtins.str],
                 disabled: _builtins.bool,
                 froms: Sequence[_builtins.str],
                 group_tag: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 negate_destination: _builtins.bool,
                 negate_source: _builtins.bool,
                 port: _builtins.int,
                 protocol: _builtins.str,
                 sources: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str],
                 tos: Sequence[_builtins.str]):
        """
        :param _builtins.str application: The Application param.
        :param _builtins.str description: The Description param. String length must not exceed 1024 characters.
        :param Sequence[_builtins.str] destinations: The Destinations param.
        :param _builtins.bool disabled: The Disabled param. Default: `false`.
        :param Sequence[_builtins.str] froms: The Froms param.
        :param _builtins.str group_tag: The GroupTag param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        :param _builtins.bool negate_destination: The NegateDestination param. Default: `false`.
        :param _builtins.bool negate_source: The NegateSource param. Default: `false`.
        :param _builtins.int port: The Port param. Value must be between 0 and 65535.
        :param _builtins.str protocol: The Protocol param. String must be one of these: `"tcp"`, `"udp"`.
        :param Sequence[_builtins.str] sources: The Sources param.
        :param Sequence[_builtins.str] tags: The Tags param.
        :param Sequence[_builtins.str] tos: The Tos param.
        """
        pulumi.set(__self__, "application", application)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "froms", froms)
        pulumi.set(__self__, "group_tag", group_tag)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate_destination", negate_destination)
        pulumi.set(__self__, "negate_source", negate_source)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter
    def application(self) -> _builtins.str:
        """
        The Application param.
        """
        return pulumi.get(self, "application")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1024 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The Destinations param.
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param. Default: `false`.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter
    def froms(self) -> Sequence[_builtins.str]:
        """
        The Froms param.
        """
        return pulumi.get(self, "froms")

    @_builtins.property
    @pulumi.getter(name="groupTag")
    def group_tag(self) -> _builtins.str:
        """
        The GroupTag param.
        """
        return pulumi.get(self, "group_tag")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="negateDestination")
    def negate_destination(self) -> _builtins.bool:
        """
        The NegateDestination param. Default: `false`.
        """
        return pulumi.get(self, "negate_destination")

    @_builtins.property
    @pulumi.getter(name="negateSource")
    def negate_source(self) -> _builtins.bool:
        """
        The NegateSource param. Default: `false`.
        """
        return pulumi.get(self, "negate_source")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 0 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> _builtins.str:
        """
        The Protocol param. String must be one of these: `"tcp"`, `"udp"`.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The Sources param.
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Sequence[_builtins.str]:
        """
        The Tos param.
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetApplicationDefaultResult(dict):
    def __init__(__self__, *,
                 ident_by_icmp6_type: 'outputs.GetApplicationDefaultIdentByIcmp6TypeResult',
                 ident_by_icmp_type: 'outputs.GetApplicationDefaultIdentByIcmpTypeResult',
                 ident_by_ip_protocol: _builtins.str,
                 ports: Sequence[_builtins.str]):
        """
        :param 'GetApplicationDefaultIdentByIcmp6TypeArgs' ident_by_icmp6_type: The IdentByIcmp6Type param.
        :param 'GetApplicationDefaultIdentByIcmpTypeArgs' ident_by_icmp_type: The IdentByIcmpType param.
        :param _builtins.str ident_by_ip_protocol: The IdentByIpProtocol param.
        :param Sequence[_builtins.str] ports: The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        pulumi.set(__self__, "ident_by_icmp6_type", ident_by_icmp6_type)
        pulumi.set(__self__, "ident_by_icmp_type", ident_by_icmp_type)
        pulumi.set(__self__, "ident_by_ip_protocol", ident_by_ip_protocol)
        pulumi.set(__self__, "ports", ports)

    @_builtins.property
    @pulumi.getter(name="identByIcmp6Type")
    def ident_by_icmp6_type(self) -> 'outputs.GetApplicationDefaultIdentByIcmp6TypeResult':
        """
        The IdentByIcmp6Type param.
        """
        return pulumi.get(self, "ident_by_icmp6_type")

    @_builtins.property
    @pulumi.getter(name="identByIcmpType")
    def ident_by_icmp_type(self) -> 'outputs.GetApplicationDefaultIdentByIcmpTypeResult':
        """
        The IdentByIcmpType param.
        """
        return pulumi.get(self, "ident_by_icmp_type")

    @_builtins.property
    @pulumi.getter(name="identByIpProtocol")
    def ident_by_ip_protocol(self) -> _builtins.str:
        """
        The IdentByIpProtocol param.
        """
        return pulumi.get(self, "ident_by_ip_protocol")

    @_builtins.property
    @pulumi.getter
    def ports(self) -> Sequence[_builtins.str]:
        """
        The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "ports")


@pulumi.output_type
class GetApplicationDefaultIdentByIcmp6TypeResult(dict):
    def __init__(__self__, *,
                 code: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str code: The Code param.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def code(self) -> _builtins.str:
        """
        The Code param.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetApplicationDefaultIdentByIcmpTypeResult(dict):
    def __init__(__self__, *,
                 code: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str code: The Code param.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def code(self) -> _builtins.str:
        """
        The Code param.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetApplicationFilterListDataResult(dict):
    def __init__(__self__, *,
                 categories: Sequence[_builtins.str],
                 evasive: _builtins.bool,
                 excessive_bandwidth_use: _builtins.bool,
                 excludes: Sequence[_builtins.str],
                 has_known_vulnerabilities: _builtins.bool,
                 id: _builtins.str,
                 is_saas: _builtins.bool,
                 name: _builtins.str,
                 new_appid: _builtins.bool,
                 pervasive: _builtins.bool,
                 prone_to_misuse: _builtins.bool,
                 risks: Sequence[_builtins.int],
                 saas_certifications: Sequence[_builtins.str],
                 saas_risks: Sequence[_builtins.str],
                 subcategories: Sequence[_builtins.str],
                 tagging: 'outputs.GetApplicationFilterListDataTaggingResult',
                 technologies: Sequence[_builtins.str],
                 transfers_files: _builtins.bool,
                 tunnels_other_apps: _builtins.bool,
                 used_by_malware: _builtins.bool):
        """
        :param Sequence[_builtins.str] categories: The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        :param _builtins.bool evasive: only True is a valid value.
        :param _builtins.bool excessive_bandwidth_use: only True is a valid value.
        :param Sequence[_builtins.str] excludes: The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        :param _builtins.bool has_known_vulnerabilities: only True is a valid value.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.bool is_saas: only True is a valid value.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool new_appid: only True is a valid value.
        :param _builtins.bool pervasive: only True is a valid value.
        :param _builtins.bool prone_to_misuse: only True is a valid value.
        :param Sequence[_builtins.int] risks: The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
        :param Sequence[_builtins.str] saas_certifications: The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        :param Sequence[_builtins.str] saas_risks: The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        :param Sequence[_builtins.str] subcategories: The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        :param 'GetApplicationFilterListDataTaggingArgs' tagging: The Tagging param.
        :param Sequence[_builtins.str] technologies: The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        :param _builtins.bool transfers_files: only True is a valid value.
        :param _builtins.bool tunnels_other_apps: only True is a valid value.
        :param _builtins.bool used_by_malware: only True is a valid value.
        """
        pulumi.set(__self__, "categories", categories)
        pulumi.set(__self__, "evasive", evasive)
        pulumi.set(__self__, "excessive_bandwidth_use", excessive_bandwidth_use)
        pulumi.set(__self__, "excludes", excludes)
        pulumi.set(__self__, "has_known_vulnerabilities", has_known_vulnerabilities)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "is_saas", is_saas)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "new_appid", new_appid)
        pulumi.set(__self__, "pervasive", pervasive)
        pulumi.set(__self__, "prone_to_misuse", prone_to_misuse)
        pulumi.set(__self__, "risks", risks)
        pulumi.set(__self__, "saas_certifications", saas_certifications)
        pulumi.set(__self__, "saas_risks", saas_risks)
        pulumi.set(__self__, "subcategories", subcategories)
        pulumi.set(__self__, "tagging", tagging)
        pulumi.set(__self__, "technologies", technologies)
        pulumi.set(__self__, "transfers_files", transfers_files)
        pulumi.set(__self__, "tunnels_other_apps", tunnels_other_apps)
        pulumi.set(__self__, "used_by_malware", used_by_malware)

    @_builtins.property
    @pulumi.getter
    def categories(self) -> Sequence[_builtins.str]:
        """
        The Categories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        """
        return pulumi.get(self, "categories")

    @_builtins.property
    @pulumi.getter
    def evasive(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "evasive")

    @_builtins.property
    @pulumi.getter(name="excessiveBandwidthUse")
    def excessive_bandwidth_use(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "excessive_bandwidth_use")

    @_builtins.property
    @pulumi.getter
    def excludes(self) -> Sequence[_builtins.str]:
        """
        The Excludes param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "excludes")

    @_builtins.property
    @pulumi.getter(name="hasKnownVulnerabilities")
    def has_known_vulnerabilities(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "has_known_vulnerabilities")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="isSaas")
    def is_saas(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "is_saas")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="newAppid")
    def new_appid(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "new_appid")

    @_builtins.property
    @pulumi.getter
    def pervasive(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "pervasive")

    @_builtins.property
    @pulumi.getter(name="proneToMisuse")
    def prone_to_misuse(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "prone_to_misuse")

    @_builtins.property
    @pulumi.getter
    def risks(self) -> Sequence[_builtins.int]:
        """
        The Risks param. Individual elements in this list are subject to additional validation. Value must be between 1 and 5.
        """
        return pulumi.get(self, "risks")

    @_builtins.property
    @pulumi.getter(name="saasCertifications")
    def saas_certifications(self) -> Sequence[_builtins.str]:
        """
        The SaasCertifications param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        """
        return pulumi.get(self, "saas_certifications")

    @_builtins.property
    @pulumi.getter(name="saasRisks")
    def saas_risks(self) -> Sequence[_builtins.str]:
        """
        The SaasRisks param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        """
        return pulumi.get(self, "saas_risks")

    @_builtins.property
    @pulumi.getter
    def subcategories(self) -> Sequence[_builtins.str]:
        """
        The Subcategories param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        """
        return pulumi.get(self, "subcategories")

    @_builtins.property
    @pulumi.getter
    def tagging(self) -> 'outputs.GetApplicationFilterListDataTaggingResult':
        """
        The Tagging param.
        """
        return pulumi.get(self, "tagging")

    @_builtins.property
    @pulumi.getter
    def technologies(self) -> Sequence[_builtins.str]:
        """
        The Technologies param. Individual elements in this list are subject to additional validation. String length must not exceed 128 characters.
        """
        return pulumi.get(self, "technologies")

    @_builtins.property
    @pulumi.getter(name="transfersFiles")
    def transfers_files(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "transfers_files")

    @_builtins.property
    @pulumi.getter(name="tunnelsOtherApps")
    def tunnels_other_apps(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "tunnels_other_apps")

    @_builtins.property
    @pulumi.getter(name="usedByMalware")
    def used_by_malware(self) -> _builtins.bool:
        """
        only True is a valid value.
        """
        return pulumi.get(self, "used_by_malware")


@pulumi.output_type
class GetApplicationFilterListDataTaggingResult(dict):
    def __init__(__self__, *,
                 no_tag: _builtins.bool,
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.bool no_tag: The NoTag param.
        :param Sequence[_builtins.str] tags: The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "no_tag", no_tag)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="noTag")
    def no_tag(self) -> _builtins.bool:
        """
        The NoTag param.
        """
        return pulumi.get(self, "no_tag")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetApplicationFilterTaggingResult(dict):
    def __init__(__self__, *,
                 no_tag: _builtins.bool,
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.bool no_tag: The NoTag param.
        :param Sequence[_builtins.str] tags: The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "no_tag", no_tag)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter(name="noTag")
    def no_tag(self) -> _builtins.bool:
        """
        The NoTag param.
        """
        return pulumi.get(self, "no_tag")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetApplicationGroupListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 members: Sequence[_builtins.str],
                 name: _builtins.str):
        """
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] members: The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "members", members)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def members(self) -> Sequence[_builtins.str]:
        """
        The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "members")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetApplicationListDataResult(dict):
    def __init__(__self__, *,
                 able_to_transfer_file: _builtins.bool,
                 alg_disable_capability: _builtins.str,
                 category: _builtins.str,
                 consume_big_bandwidth: _builtins.bool,
                 data_ident: _builtins.bool,
                 default: 'outputs.GetApplicationListDataDefaultResult',
                 description: _builtins.str,
                 evasive_behavior: _builtins.bool,
                 file_type_ident: _builtins.bool,
                 has_known_vulnerability: _builtins.bool,
                 id: _builtins.str,
                 name: _builtins.str,
                 no_appid_caching: _builtins.bool,
                 parent_app: _builtins.str,
                 pervasive_use: _builtins.bool,
                 prone_to_misuse: _builtins.bool,
                 risk: _builtins.int,
                 signatures: Sequence['outputs.GetApplicationListDataSignatureResult'],
                 subcategory: _builtins.str,
                 tcp_half_closed_timeout: _builtins.int,
                 tcp_time_wait_timeout: _builtins.int,
                 tcp_timeout: _builtins.int,
                 technology: _builtins.str,
                 timeout: _builtins.int,
                 tunnel_applications: _builtins.bool,
                 tunnel_other_application: _builtins.bool,
                 udp_timeout: _builtins.int,
                 used_by_malware: _builtins.bool,
                 virus_ident: _builtins.bool):
        """
        :param _builtins.bool able_to_transfer_file: The AbleToTransferFile param.
        :param _builtins.str alg_disable_capability: The AlgDisableCapability param. String length must not exceed 127 characters.
        :param _builtins.str category: The Category param.
        :param _builtins.bool consume_big_bandwidth: The ConsumeBigBandwidth param.
        :param _builtins.bool data_ident: The DataIdent param.
        :param 'GetApplicationListDataDefaultArgs' default: The Default param.
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param _builtins.bool evasive_behavior: The EvasiveBehavior param.
        :param _builtins.bool file_type_ident: The FileTypeIdent param.
        :param _builtins.bool has_known_vulnerability: The HasKnownVulnerability param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool no_appid_caching: The NoAppidCaching param.
        :param _builtins.str parent_app: The ParentApp param. String length must not exceed 127 characters.
        :param _builtins.bool pervasive_use: The PervasiveUse param.
        :param _builtins.bool prone_to_misuse: The ProneToMisuse param.
        :param _builtins.int risk: The Risk param. Value must be between 1 and 5.
        :param Sequence['GetApplicationListDataSignatureArgs'] signatures: The Signatures param.
        :param _builtins.str subcategory: The Subcategory param. String length must not exceed 63 characters.
        :param _builtins.int tcp_half_closed_timeout: timeout for half-close session in seconds. Value must be between 1 and 604800.
        :param _builtins.int tcp_time_wait_timeout: timeout for session in time_wait state in seconds. Value must be between 1 and 600.
        :param _builtins.int tcp_timeout: timeout in seconds. Value must be between 0 and 604800.
        :param _builtins.str technology: The Technology param. String length must not exceed 63 characters.
        :param _builtins.int timeout: timeout in seconds. Value must be between 0 and 604800.
        :param _builtins.bool tunnel_applications: The TunnelApplications param.
        :param _builtins.bool tunnel_other_application: The TunnelOtherApplication param.
        :param _builtins.int udp_timeout: timeout in seconds. Value must be between 0 and 604800.
        :param _builtins.bool used_by_malware: The UsedByMalware param.
        :param _builtins.bool virus_ident: The VirusIdent param.
        """
        pulumi.set(__self__, "able_to_transfer_file", able_to_transfer_file)
        pulumi.set(__self__, "alg_disable_capability", alg_disable_capability)
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "consume_big_bandwidth", consume_big_bandwidth)
        pulumi.set(__self__, "data_ident", data_ident)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "evasive_behavior", evasive_behavior)
        pulumi.set(__self__, "file_type_ident", file_type_ident)
        pulumi.set(__self__, "has_known_vulnerability", has_known_vulnerability)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "no_appid_caching", no_appid_caching)
        pulumi.set(__self__, "parent_app", parent_app)
        pulumi.set(__self__, "pervasive_use", pervasive_use)
        pulumi.set(__self__, "prone_to_misuse", prone_to_misuse)
        pulumi.set(__self__, "risk", risk)
        pulumi.set(__self__, "signatures", signatures)
        pulumi.set(__self__, "subcategory", subcategory)
        pulumi.set(__self__, "tcp_half_closed_timeout", tcp_half_closed_timeout)
        pulumi.set(__self__, "tcp_time_wait_timeout", tcp_time_wait_timeout)
        pulumi.set(__self__, "tcp_timeout", tcp_timeout)
        pulumi.set(__self__, "technology", technology)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "tunnel_applications", tunnel_applications)
        pulumi.set(__self__, "tunnel_other_application", tunnel_other_application)
        pulumi.set(__self__, "udp_timeout", udp_timeout)
        pulumi.set(__self__, "used_by_malware", used_by_malware)
        pulumi.set(__self__, "virus_ident", virus_ident)

    @_builtins.property
    @pulumi.getter(name="ableToTransferFile")
    def able_to_transfer_file(self) -> _builtins.bool:
        """
        The AbleToTransferFile param.
        """
        return pulumi.get(self, "able_to_transfer_file")

    @_builtins.property
    @pulumi.getter(name="algDisableCapability")
    def alg_disable_capability(self) -> _builtins.str:
        """
        The AlgDisableCapability param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "alg_disable_capability")

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        """
        The Category param.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter(name="consumeBigBandwidth")
    def consume_big_bandwidth(self) -> _builtins.bool:
        """
        The ConsumeBigBandwidth param.
        """
        return pulumi.get(self, "consume_big_bandwidth")

    @_builtins.property
    @pulumi.getter(name="dataIdent")
    def data_ident(self) -> _builtins.bool:
        """
        The DataIdent param.
        """
        return pulumi.get(self, "data_ident")

    @_builtins.property
    @pulumi.getter
    def default(self) -> 'outputs.GetApplicationListDataDefaultResult':
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="evasiveBehavior")
    def evasive_behavior(self) -> _builtins.bool:
        """
        The EvasiveBehavior param.
        """
        return pulumi.get(self, "evasive_behavior")

    @_builtins.property
    @pulumi.getter(name="fileTypeIdent")
    def file_type_ident(self) -> _builtins.bool:
        """
        The FileTypeIdent param.
        """
        return pulumi.get(self, "file_type_ident")

    @_builtins.property
    @pulumi.getter(name="hasKnownVulnerability")
    def has_known_vulnerability(self) -> _builtins.bool:
        """
        The HasKnownVulnerability param.
        """
        return pulumi.get(self, "has_known_vulnerability")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="noAppidCaching")
    def no_appid_caching(self) -> _builtins.bool:
        """
        The NoAppidCaching param.
        """
        return pulumi.get(self, "no_appid_caching")

    @_builtins.property
    @pulumi.getter(name="parentApp")
    def parent_app(self) -> _builtins.str:
        """
        The ParentApp param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "parent_app")

    @_builtins.property
    @pulumi.getter(name="pervasiveUse")
    def pervasive_use(self) -> _builtins.bool:
        """
        The PervasiveUse param.
        """
        return pulumi.get(self, "pervasive_use")

    @_builtins.property
    @pulumi.getter(name="proneToMisuse")
    def prone_to_misuse(self) -> _builtins.bool:
        """
        The ProneToMisuse param.
        """
        return pulumi.get(self, "prone_to_misuse")

    @_builtins.property
    @pulumi.getter
    def risk(self) -> _builtins.int:
        """
        The Risk param. Value must be between 1 and 5.
        """
        return pulumi.get(self, "risk")

    @_builtins.property
    @pulumi.getter
    def signatures(self) -> Sequence['outputs.GetApplicationListDataSignatureResult']:
        """
        The Signatures param.
        """
        return pulumi.get(self, "signatures")

    @_builtins.property
    @pulumi.getter
    def subcategory(self) -> _builtins.str:
        """
        The Subcategory param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "subcategory")

    @_builtins.property
    @pulumi.getter(name="tcpHalfClosedTimeout")
    def tcp_half_closed_timeout(self) -> _builtins.int:
        """
        timeout for half-close session in seconds. Value must be between 1 and 604800.
        """
        return pulumi.get(self, "tcp_half_closed_timeout")

    @_builtins.property
    @pulumi.getter(name="tcpTimeWaitTimeout")
    def tcp_time_wait_timeout(self) -> _builtins.int:
        """
        timeout for session in time_wait state in seconds. Value must be between 1 and 600.
        """
        return pulumi.get(self, "tcp_time_wait_timeout")

    @_builtins.property
    @pulumi.getter(name="tcpTimeout")
    def tcp_timeout(self) -> _builtins.int:
        """
        timeout in seconds. Value must be between 0 and 604800.
        """
        return pulumi.get(self, "tcp_timeout")

    @_builtins.property
    @pulumi.getter
    def technology(self) -> _builtins.str:
        """
        The Technology param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "technology")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        timeout in seconds. Value must be between 0 and 604800.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter(name="tunnelApplications")
    def tunnel_applications(self) -> _builtins.bool:
        """
        The TunnelApplications param.
        """
        return pulumi.get(self, "tunnel_applications")

    @_builtins.property
    @pulumi.getter(name="tunnelOtherApplication")
    def tunnel_other_application(self) -> _builtins.bool:
        """
        The TunnelOtherApplication param.
        """
        return pulumi.get(self, "tunnel_other_application")

    @_builtins.property
    @pulumi.getter(name="udpTimeout")
    def udp_timeout(self) -> _builtins.int:
        """
        timeout in seconds. Value must be between 0 and 604800.
        """
        return pulumi.get(self, "udp_timeout")

    @_builtins.property
    @pulumi.getter(name="usedByMalware")
    def used_by_malware(self) -> _builtins.bool:
        """
        The UsedByMalware param.
        """
        return pulumi.get(self, "used_by_malware")

    @_builtins.property
    @pulumi.getter(name="virusIdent")
    def virus_ident(self) -> _builtins.bool:
        """
        The VirusIdent param.
        """
        return pulumi.get(self, "virus_ident")


@pulumi.output_type
class GetApplicationListDataDefaultResult(dict):
    def __init__(__self__, *,
                 ident_by_icmp6_type: 'outputs.GetApplicationListDataDefaultIdentByIcmp6TypeResult',
                 ident_by_icmp_type: 'outputs.GetApplicationListDataDefaultIdentByIcmpTypeResult',
                 ident_by_ip_protocol: _builtins.str,
                 ports: Sequence[_builtins.str]):
        """
        :param 'GetApplicationListDataDefaultIdentByIcmp6TypeArgs' ident_by_icmp6_type: The IdentByIcmp6Type param.
        :param 'GetApplicationListDataDefaultIdentByIcmpTypeArgs' ident_by_icmp_type: The IdentByIcmpType param.
        :param _builtins.str ident_by_ip_protocol: The IdentByIpProtocol param.
        :param Sequence[_builtins.str] ports: The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        pulumi.set(__self__, "ident_by_icmp6_type", ident_by_icmp6_type)
        pulumi.set(__self__, "ident_by_icmp_type", ident_by_icmp_type)
        pulumi.set(__self__, "ident_by_ip_protocol", ident_by_ip_protocol)
        pulumi.set(__self__, "ports", ports)

    @_builtins.property
    @pulumi.getter(name="identByIcmp6Type")
    def ident_by_icmp6_type(self) -> 'outputs.GetApplicationListDataDefaultIdentByIcmp6TypeResult':
        """
        The IdentByIcmp6Type param.
        """
        return pulumi.get(self, "ident_by_icmp6_type")

    @_builtins.property
    @pulumi.getter(name="identByIcmpType")
    def ident_by_icmp_type(self) -> 'outputs.GetApplicationListDataDefaultIdentByIcmpTypeResult':
        """
        The IdentByIcmpType param.
        """
        return pulumi.get(self, "ident_by_icmp_type")

    @_builtins.property
    @pulumi.getter(name="identByIpProtocol")
    def ident_by_ip_protocol(self) -> _builtins.str:
        """
        The IdentByIpProtocol param.
        """
        return pulumi.get(self, "ident_by_ip_protocol")

    @_builtins.property
    @pulumi.getter
    def ports(self) -> Sequence[_builtins.str]:
        """
        The Ports param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "ports")


@pulumi.output_type
class GetApplicationListDataDefaultIdentByIcmp6TypeResult(dict):
    def __init__(__self__, *,
                 code: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str code: The Code param.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def code(self) -> _builtins.str:
        """
        The Code param.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetApplicationListDataDefaultIdentByIcmpTypeResult(dict):
    def __init__(__self__, *,
                 code: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str code: The Code param.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "code", code)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def code(self) -> _builtins.str:
        """
        The Code param.
        """
        return pulumi.get(self, "code")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetApplicationListDataSignatureResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetApplicationListDataSignatureAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetApplicationListDataSignatureAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetApplicationListDataSignatureAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionResult']):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param Sequence['GetApplicationListDataSignatureAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param 'GetApplicationListDataSignatureAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 mask: _builtins.str,
                 position: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.str mask: 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        :param _builtins.str position: The Position param. String length must not exceed 127 characters.
        :param _builtins.str value: The Value param. String length must not exceed 10 characters.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "mask", mask)
        pulumi.set(__self__, "position", position)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def mask(self) -> _builtins.str:
        """
        4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        """
        return pulumi.get(self, "mask")

    @_builtins.property
    @pulumi.getter
    def position(self) -> _builtins.str:
        """
        The Position param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "position")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param. String length must not exceed 10 characters.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param _builtins.str pattern: The Pattern param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetApplicationListDataSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetApplicationSignatureAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetApplicationSignatureAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetApplicationSignatureAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`. Default: `"protocol-data-unit"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetApplicationSignatureAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetApplicationSignatureAndConditionOrConditionResult']):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param Sequence['GetApplicationSignatureAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetApplicationSignatureAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param 'GetApplicationSignatureAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetApplicationSignatureAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetApplicationSignatureAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 mask: _builtins.str,
                 position: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.str mask: 4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        :param _builtins.str position: The Position param. String length must not exceed 127 characters.
        :param _builtins.str value: The Value param. String length must not exceed 10 characters.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "mask", mask)
        pulumi.set(__self__, "position", position)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def mask(self) -> _builtins.str:
        """
        4-byte hex value. String length must not exceed 10 characters. String validation regex: `^[0][xX][0-9A-Fa-f]{8}$`.
        """
        return pulumi.get(self, "mask")

    @_builtins.property
    @pulumi.getter
    def position(self) -> _builtins.str:
        """
        The Position param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "position")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param. String length must not exceed 10 characters.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param. String length must not exceed 127 characters.
        :param _builtins.str pattern: The Pattern param. String length must not exceed 127 characters.
        :param Sequence['GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetApplicationSignatureAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetAuthenticationPortalListDataResult(dict):
    def __init__(__self__, *,
                 authentication_profile: _builtins.str,
                 certificate_profile: _builtins.str,
                 gp_udp_port: _builtins.int,
                 id: _builtins.str,
                 idle_timer: _builtins.int,
                 redirect_host: _builtins.str,
                 timer: _builtins.int,
                 tls_service_profile: _builtins.str):
        """
        :param _builtins.str authentication_profile: The AuthenticationProfile param.
        :param _builtins.str certificate_profile: The CertificateProfile param.
        :param _builtins.int gp_udp_port: The GpUdpPort param. Value must be between 1 and 65535.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.int idle_timer: The IdleTimer param. Value must be between 1 and 1440.
        :param _builtins.str redirect_host: The RedirectHost param.
        :param _builtins.int timer: The Timer param. Value must be between 1 and 1440.
        :param _builtins.str tls_service_profile: The TlsServiceProfile param.
        """
        pulumi.set(__self__, "authentication_profile", authentication_profile)
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "gp_udp_port", gp_udp_port)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "idle_timer", idle_timer)
        pulumi.set(__self__, "redirect_host", redirect_host)
        pulumi.set(__self__, "timer", timer)
        pulumi.set(__self__, "tls_service_profile", tls_service_profile)

    @_builtins.property
    @pulumi.getter(name="authenticationProfile")
    def authentication_profile(self) -> _builtins.str:
        """
        The AuthenticationProfile param.
        """
        return pulumi.get(self, "authentication_profile")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="gpUdpPort")
    def gp_udp_port(self) -> _builtins.int:
        """
        The GpUdpPort param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "gp_udp_port")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="idleTimer")
    def idle_timer(self) -> _builtins.int:
        """
        The IdleTimer param. Value must be between 1 and 1440.
        """
        return pulumi.get(self, "idle_timer")

    @_builtins.property
    @pulumi.getter(name="redirectHost")
    def redirect_host(self) -> _builtins.str:
        """
        The RedirectHost param.
        """
        return pulumi.get(self, "redirect_host")

    @_builtins.property
    @pulumi.getter
    def timer(self) -> _builtins.int:
        """
        The Timer param. Value must be between 1 and 1440.
        """
        return pulumi.get(self, "timer")

    @_builtins.property
    @pulumi.getter(name="tlsServiceProfile")
    def tls_service_profile(self) -> _builtins.str:
        """
        The TlsServiceProfile param.
        """
        return pulumi.get(self, "tls_service_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataResult(dict):
    def __init__(__self__, *,
                 allow_lists: Sequence[_builtins.str],
                 id: _builtins.str,
                 lockout: 'outputs.GetAuthenticationProfileListDataLockoutResult',
                 method: 'outputs.GetAuthenticationProfileListDataMethodResult',
                 multi_factor_auth: 'outputs.GetAuthenticationProfileListDataMultiFactorAuthResult',
                 name: _builtins.str,
                 single_sign_on: 'outputs.GetAuthenticationProfileListDataSingleSignOnResult',
                 user_domain: _builtins.str,
                 username_modifier: _builtins.str):
        """
        :param Sequence[_builtins.str] allow_lists: The AllowList param.
        :param _builtins.str id: UUID of the resource.
        :param 'GetAuthenticationProfileListDataLockoutArgs' lockout: The Lockout param.
        :param 'GetAuthenticationProfileListDataMethodArgs' method: The Method param.
        :param 'GetAuthenticationProfileListDataMultiFactorAuthArgs' multi_factor_auth: The MultiFactorAuth param.
        :param _builtins.str name: The Name param.
        :param 'GetAuthenticationProfileListDataSingleSignOnArgs' single_sign_on: The SingleSignOn param.
        :param _builtins.str user_domain: The UserDomain param. String length must not exceed 63 characters.
        :param _builtins.str username_modifier: The UsernameModifier param. String must be one of these: `"%USERINPUT%"`, `"%USERINPUT%@%USERDOMAIN%"`, `"%USERDOMAIN%\\\\%USERINPUT%"`.
        """
        pulumi.set(__self__, "allow_lists", allow_lists)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lockout", lockout)
        pulumi.set(__self__, "method", method)
        pulumi.set(__self__, "multi_factor_auth", multi_factor_auth)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "single_sign_on", single_sign_on)
        pulumi.set(__self__, "user_domain", user_domain)
        pulumi.set(__self__, "username_modifier", username_modifier)

    @_builtins.property
    @pulumi.getter(name="allowLists")
    def allow_lists(self) -> Sequence[_builtins.str]:
        """
        The AllowList param.
        """
        return pulumi.get(self, "allow_lists")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def lockout(self) -> 'outputs.GetAuthenticationProfileListDataLockoutResult':
        """
        The Lockout param.
        """
        return pulumi.get(self, "lockout")

    @_builtins.property
    @pulumi.getter
    def method(self) -> 'outputs.GetAuthenticationProfileListDataMethodResult':
        """
        The Method param.
        """
        return pulumi.get(self, "method")

    @_builtins.property
    @pulumi.getter(name="multiFactorAuth")
    def multi_factor_auth(self) -> 'outputs.GetAuthenticationProfileListDataMultiFactorAuthResult':
        """
        The MultiFactorAuth param.
        """
        return pulumi.get(self, "multi_factor_auth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="singleSignOn")
    def single_sign_on(self) -> 'outputs.GetAuthenticationProfileListDataSingleSignOnResult':
        """
        The SingleSignOn param.
        """
        return pulumi.get(self, "single_sign_on")

    @_builtins.property
    @pulumi.getter(name="userDomain")
    def user_domain(self) -> _builtins.str:
        """
        The UserDomain param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "user_domain")

    @_builtins.property
    @pulumi.getter(name="usernameModifier")
    def username_modifier(self) -> _builtins.str:
        """
        The UsernameModifier param. String must be one of these: `"%USERINPUT%"`, `"%USERINPUT%@%USERDOMAIN%"`, `"%USERDOMAIN%\\\\%USERINPUT%"`.
        """
        return pulumi.get(self, "username_modifier")


@pulumi.output_type
class GetAuthenticationProfileListDataLockoutResult(dict):
    def __init__(__self__, *,
                 failed_attempts: _builtins.int,
                 lockout_time: _builtins.int):
        """
        :param _builtins.int failed_attempts: The FailedAttempts param. Value must be between 0 and 10.
        :param _builtins.int lockout_time: The LockoutTime param. Value must be between 0 and 60.
        """
        pulumi.set(__self__, "failed_attempts", failed_attempts)
        pulumi.set(__self__, "lockout_time", lockout_time)

    @_builtins.property
    @pulumi.getter(name="failedAttempts")
    def failed_attempts(self) -> _builtins.int:
        """
        The FailedAttempts param. Value must be between 0 and 10.
        """
        return pulumi.get(self, "failed_attempts")

    @_builtins.property
    @pulumi.getter(name="lockoutTime")
    def lockout_time(self) -> _builtins.int:
        """
        The LockoutTime param. Value must be between 0 and 60.
        """
        return pulumi.get(self, "lockout_time")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodResult(dict):
    def __init__(__self__, *,
                 cloud: 'outputs.GetAuthenticationProfileListDataMethodCloudResult',
                 kerberos: 'outputs.GetAuthenticationProfileListDataMethodKerberosResult',
                 ldap: 'outputs.GetAuthenticationProfileListDataMethodLdapResult',
                 local_database: _builtins.bool,
                 radius: 'outputs.GetAuthenticationProfileListDataMethodRadiusResult',
                 saml_idp: 'outputs.GetAuthenticationProfileListDataMethodSamlIdpResult',
                 tacplus: 'outputs.GetAuthenticationProfileListDataMethodTacplusResult'):
        """
        :param 'GetAuthenticationProfileListDataMethodCloudArgs' cloud: The Cloud param.
        :param 'GetAuthenticationProfileListDataMethodKerberosArgs' kerberos: The Kerberos param.
        :param 'GetAuthenticationProfileListDataMethodLdapArgs' ldap: The Ldap param.
        :param _builtins.bool local_database: The LocalDatabase param.
        :param 'GetAuthenticationProfileListDataMethodRadiusArgs' radius: The Radius param.
        :param 'GetAuthenticationProfileListDataMethodSamlIdpArgs' saml_idp: The SamlIdp param.
        :param 'GetAuthenticationProfileListDataMethodTacplusArgs' tacplus: The Tacplus param.
        """
        pulumi.set(__self__, "cloud", cloud)
        pulumi.set(__self__, "kerberos", kerberos)
        pulumi.set(__self__, "ldap", ldap)
        pulumi.set(__self__, "local_database", local_database)
        pulumi.set(__self__, "radius", radius)
        pulumi.set(__self__, "saml_idp", saml_idp)
        pulumi.set(__self__, "tacplus", tacplus)

    @_builtins.property
    @pulumi.getter
    def cloud(self) -> 'outputs.GetAuthenticationProfileListDataMethodCloudResult':
        """
        The Cloud param.
        """
        return pulumi.get(self, "cloud")

    @_builtins.property
    @pulumi.getter
    def kerberos(self) -> 'outputs.GetAuthenticationProfileListDataMethodKerberosResult':
        """
        The Kerberos param.
        """
        return pulumi.get(self, "kerberos")

    @_builtins.property
    @pulumi.getter
    def ldap(self) -> 'outputs.GetAuthenticationProfileListDataMethodLdapResult':
        """
        The Ldap param.
        """
        return pulumi.get(self, "ldap")

    @_builtins.property
    @pulumi.getter(name="localDatabase")
    def local_database(self) -> _builtins.bool:
        """
        The LocalDatabase param.
        """
        return pulumi.get(self, "local_database")

    @_builtins.property
    @pulumi.getter
    def radius(self) -> 'outputs.GetAuthenticationProfileListDataMethodRadiusResult':
        """
        The Radius param.
        """
        return pulumi.get(self, "radius")

    @_builtins.property
    @pulumi.getter(name="samlIdp")
    def saml_idp(self) -> 'outputs.GetAuthenticationProfileListDataMethodSamlIdpResult':
        """
        The SamlIdp param.
        """
        return pulumi.get(self, "saml_idp")

    @_builtins.property
    @pulumi.getter
    def tacplus(self) -> 'outputs.GetAuthenticationProfileListDataMethodTacplusResult':
        """
        The Tacplus param.
        """
        return pulumi.get(self, "tacplus")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodCloudResult(dict):
    def __init__(__self__, *,
                 profile_name: _builtins.str):
        """
        :param _builtins.str profile_name: The tenant profile name.
        """
        pulumi.set(__self__, "profile_name", profile_name)

    @_builtins.property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> _builtins.str:
        """
        The tenant profile name.
        """
        return pulumi.get(self, "profile_name")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodKerberosResult(dict):
    def __init__(__self__, *,
                 realm: _builtins.str,
                 server_profile: _builtins.str):
        """
        :param _builtins.str realm: The Realm param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "realm", realm)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def realm(self) -> _builtins.str:
        """
        The Realm param.
        """
        return pulumi.get(self, "realm")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodLdapResult(dict):
    def __init__(__self__, *,
                 login_attribute: _builtins.str,
                 passwd_exp_days: _builtins.int,
                 server_profile: _builtins.str):
        """
        :param _builtins.str login_attribute: The LoginAttribute param.
        :param _builtins.int passwd_exp_days: The PasswdExpDays param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "login_attribute", login_attribute)
        pulumi.set(__self__, "passwd_exp_days", passwd_exp_days)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="loginAttribute")
    def login_attribute(self) -> _builtins.str:
        """
        The LoginAttribute param.
        """
        return pulumi.get(self, "login_attribute")

    @_builtins.property
    @pulumi.getter(name="passwdExpDays")
    def passwd_exp_days(self) -> _builtins.int:
        """
        The PasswdExpDays param.
        """
        return pulumi.get(self, "passwd_exp_days")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodRadiusResult(dict):
    def __init__(__self__, *,
                 checkgroup: _builtins.bool,
                 server_profile: _builtins.str):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "checkgroup", checkgroup)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> _builtins.bool:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodSamlIdpResult(dict):
    def __init__(__self__, *,
                 attribute_name_usergroup: _builtins.str,
                 attribute_name_username: _builtins.str,
                 certificate_profile: _builtins.str,
                 enable_single_logout: _builtins.bool,
                 request_signing_certificate: _builtins.str,
                 server_profile: _builtins.str):
        """
        :param _builtins.str attribute_name_usergroup: The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        :param _builtins.str attribute_name_username: The AttributeNameUsername param. String length must be between 1 and 63 characters.
        :param _builtins.str certificate_profile: The CertificateProfile param. String length must not exceed 31 characters.
        :param _builtins.bool enable_single_logout: The EnableSingleLogout param.
        :param _builtins.str request_signing_certificate: The RequestSigningCertificate param. String length must not exceed 64 characters.
        :param _builtins.str server_profile: The ServerProfile param. String length must not exceed 63 characters.
        """
        pulumi.set(__self__, "attribute_name_usergroup", attribute_name_usergroup)
        pulumi.set(__self__, "attribute_name_username", attribute_name_username)
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "enable_single_logout", enable_single_logout)
        pulumi.set(__self__, "request_signing_certificate", request_signing_certificate)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="attributeNameUsergroup")
    def attribute_name_usergroup(self) -> _builtins.str:
        """
        The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_usergroup")

    @_builtins.property
    @pulumi.getter(name="attributeNameUsername")
    def attribute_name_username(self) -> _builtins.str:
        """
        The AttributeNameUsername param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_username")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="enableSingleLogout")
    def enable_single_logout(self) -> _builtins.bool:
        """
        The EnableSingleLogout param.
        """
        return pulumi.get(self, "enable_single_logout")

    @_builtins.property
    @pulumi.getter(name="requestSigningCertificate")
    def request_signing_certificate(self) -> _builtins.str:
        """
        The RequestSigningCertificate param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "request_signing_certificate")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataMethodTacplusResult(dict):
    def __init__(__self__, *,
                 checkgroup: _builtins.bool,
                 server_profile: _builtins.str):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "checkgroup", checkgroup)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> _builtins.bool:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileListDataMultiFactorAuthResult(dict):
    def __init__(__self__, *,
                 factors: Sequence[_builtins.str],
                 mfa_enable: _builtins.bool):
        """
        :param Sequence[_builtins.str] factors: The Factors param.
        :param _builtins.bool mfa_enable: The MfaEnable param.
        """
        pulumi.set(__self__, "factors", factors)
        pulumi.set(__self__, "mfa_enable", mfa_enable)

    @_builtins.property
    @pulumi.getter
    def factors(self) -> Sequence[_builtins.str]:
        """
        The Factors param.
        """
        return pulumi.get(self, "factors")

    @_builtins.property
    @pulumi.getter(name="mfaEnable")
    def mfa_enable(self) -> _builtins.bool:
        """
        The MfaEnable param.
        """
        return pulumi.get(self, "mfa_enable")


@pulumi.output_type
class GetAuthenticationProfileListDataSingleSignOnResult(dict):
    def __init__(__self__, *,
                 kerberos_keytab: _builtins.str,
                 realm: _builtins.str):
        """
        :param _builtins.str kerberos_keytab: The KerberosKeytab param. String length must not exceed 8192 characters.
        :param _builtins.str realm: The Realm param. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "kerberos_keytab", kerberos_keytab)
        pulumi.set(__self__, "realm", realm)

    @_builtins.property
    @pulumi.getter(name="kerberosKeytab")
    def kerberos_keytab(self) -> _builtins.str:
        """
        The KerberosKeytab param. String length must not exceed 8192 characters.
        """
        return pulumi.get(self, "kerberos_keytab")

    @_builtins.property
    @pulumi.getter
    def realm(self) -> _builtins.str:
        """
        The Realm param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "realm")


@pulumi.output_type
class GetAuthenticationProfileLockoutResult(dict):
    def __init__(__self__, *,
                 failed_attempts: _builtins.int,
                 lockout_time: _builtins.int):
        """
        :param _builtins.int failed_attempts: The FailedAttempts param. Value must be between 0 and 10.
        :param _builtins.int lockout_time: The LockoutTime param. Value must be between 0 and 60.
        """
        pulumi.set(__self__, "failed_attempts", failed_attempts)
        pulumi.set(__self__, "lockout_time", lockout_time)

    @_builtins.property
    @pulumi.getter(name="failedAttempts")
    def failed_attempts(self) -> _builtins.int:
        """
        The FailedAttempts param. Value must be between 0 and 10.
        """
        return pulumi.get(self, "failed_attempts")

    @_builtins.property
    @pulumi.getter(name="lockoutTime")
    def lockout_time(self) -> _builtins.int:
        """
        The LockoutTime param. Value must be between 0 and 60.
        """
        return pulumi.get(self, "lockout_time")


@pulumi.output_type
class GetAuthenticationProfileMethodResult(dict):
    def __init__(__self__, *,
                 cloud: 'outputs.GetAuthenticationProfileMethodCloudResult',
                 kerberos: 'outputs.GetAuthenticationProfileMethodKerberosResult',
                 ldap: 'outputs.GetAuthenticationProfileMethodLdapResult',
                 local_database: _builtins.bool,
                 radius: 'outputs.GetAuthenticationProfileMethodRadiusResult',
                 saml_idp: 'outputs.GetAuthenticationProfileMethodSamlIdpResult',
                 tacplus: 'outputs.GetAuthenticationProfileMethodTacplusResult'):
        """
        :param 'GetAuthenticationProfileMethodCloudArgs' cloud: The Cloud param.
        :param 'GetAuthenticationProfileMethodKerberosArgs' kerberos: The Kerberos param.
        :param 'GetAuthenticationProfileMethodLdapArgs' ldap: The Ldap param.
        :param _builtins.bool local_database: The LocalDatabase param.
        :param 'GetAuthenticationProfileMethodRadiusArgs' radius: The Radius param.
        :param 'GetAuthenticationProfileMethodSamlIdpArgs' saml_idp: The SamlIdp param.
        :param 'GetAuthenticationProfileMethodTacplusArgs' tacplus: The Tacplus param.
        """
        pulumi.set(__self__, "cloud", cloud)
        pulumi.set(__self__, "kerberos", kerberos)
        pulumi.set(__self__, "ldap", ldap)
        pulumi.set(__self__, "local_database", local_database)
        pulumi.set(__self__, "radius", radius)
        pulumi.set(__self__, "saml_idp", saml_idp)
        pulumi.set(__self__, "tacplus", tacplus)

    @_builtins.property
    @pulumi.getter
    def cloud(self) -> 'outputs.GetAuthenticationProfileMethodCloudResult':
        """
        The Cloud param.
        """
        return pulumi.get(self, "cloud")

    @_builtins.property
    @pulumi.getter
    def kerberos(self) -> 'outputs.GetAuthenticationProfileMethodKerberosResult':
        """
        The Kerberos param.
        """
        return pulumi.get(self, "kerberos")

    @_builtins.property
    @pulumi.getter
    def ldap(self) -> 'outputs.GetAuthenticationProfileMethodLdapResult':
        """
        The Ldap param.
        """
        return pulumi.get(self, "ldap")

    @_builtins.property
    @pulumi.getter(name="localDatabase")
    def local_database(self) -> _builtins.bool:
        """
        The LocalDatabase param.
        """
        return pulumi.get(self, "local_database")

    @_builtins.property
    @pulumi.getter
    def radius(self) -> 'outputs.GetAuthenticationProfileMethodRadiusResult':
        """
        The Radius param.
        """
        return pulumi.get(self, "radius")

    @_builtins.property
    @pulumi.getter(name="samlIdp")
    def saml_idp(self) -> 'outputs.GetAuthenticationProfileMethodSamlIdpResult':
        """
        The SamlIdp param.
        """
        return pulumi.get(self, "saml_idp")

    @_builtins.property
    @pulumi.getter
    def tacplus(self) -> 'outputs.GetAuthenticationProfileMethodTacplusResult':
        """
        The Tacplus param.
        """
        return pulumi.get(self, "tacplus")


@pulumi.output_type
class GetAuthenticationProfileMethodCloudResult(dict):
    def __init__(__self__, *,
                 profile_name: _builtins.str):
        """
        :param _builtins.str profile_name: The tenant profile name.
        """
        pulumi.set(__self__, "profile_name", profile_name)

    @_builtins.property
    @pulumi.getter(name="profileName")
    def profile_name(self) -> _builtins.str:
        """
        The tenant profile name.
        """
        return pulumi.get(self, "profile_name")


@pulumi.output_type
class GetAuthenticationProfileMethodKerberosResult(dict):
    def __init__(__self__, *,
                 realm: _builtins.str,
                 server_profile: _builtins.str):
        """
        :param _builtins.str realm: The Realm param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "realm", realm)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def realm(self) -> _builtins.str:
        """
        The Realm param.
        """
        return pulumi.get(self, "realm")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileMethodLdapResult(dict):
    def __init__(__self__, *,
                 login_attribute: _builtins.str,
                 passwd_exp_days: _builtins.int,
                 server_profile: _builtins.str):
        """
        :param _builtins.str login_attribute: The LoginAttribute param.
        :param _builtins.int passwd_exp_days: The PasswdExpDays param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "login_attribute", login_attribute)
        pulumi.set(__self__, "passwd_exp_days", passwd_exp_days)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="loginAttribute")
    def login_attribute(self) -> _builtins.str:
        """
        The LoginAttribute param.
        """
        return pulumi.get(self, "login_attribute")

    @_builtins.property
    @pulumi.getter(name="passwdExpDays")
    def passwd_exp_days(self) -> _builtins.int:
        """
        The PasswdExpDays param.
        """
        return pulumi.get(self, "passwd_exp_days")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileMethodRadiusResult(dict):
    def __init__(__self__, *,
                 checkgroup: _builtins.bool,
                 server_profile: _builtins.str):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "checkgroup", checkgroup)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> _builtins.bool:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileMethodSamlIdpResult(dict):
    def __init__(__self__, *,
                 attribute_name_usergroup: _builtins.str,
                 attribute_name_username: _builtins.str,
                 certificate_profile: _builtins.str,
                 enable_single_logout: _builtins.bool,
                 request_signing_certificate: _builtins.str,
                 server_profile: _builtins.str):
        """
        :param _builtins.str attribute_name_usergroup: The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        :param _builtins.str attribute_name_username: The AttributeNameUsername param. String length must be between 1 and 63 characters.
        :param _builtins.str certificate_profile: The CertificateProfile param. String length must not exceed 31 characters.
        :param _builtins.bool enable_single_logout: The EnableSingleLogout param.
        :param _builtins.str request_signing_certificate: The RequestSigningCertificate param. String length must not exceed 64 characters.
        :param _builtins.str server_profile: The ServerProfile param. String length must not exceed 63 characters.
        """
        pulumi.set(__self__, "attribute_name_usergroup", attribute_name_usergroup)
        pulumi.set(__self__, "attribute_name_username", attribute_name_username)
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "enable_single_logout", enable_single_logout)
        pulumi.set(__self__, "request_signing_certificate", request_signing_certificate)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter(name="attributeNameUsergroup")
    def attribute_name_usergroup(self) -> _builtins.str:
        """
        The AttributeNameUsergroup param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_usergroup")

    @_builtins.property
    @pulumi.getter(name="attributeNameUsername")
    def attribute_name_username(self) -> _builtins.str:
        """
        The AttributeNameUsername param. String length must be between 1 and 63 characters.
        """
        return pulumi.get(self, "attribute_name_username")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="enableSingleLogout")
    def enable_single_logout(self) -> _builtins.bool:
        """
        The EnableSingleLogout param.
        """
        return pulumi.get(self, "enable_single_logout")

    @_builtins.property
    @pulumi.getter(name="requestSigningCertificate")
    def request_signing_certificate(self) -> _builtins.str:
        """
        The RequestSigningCertificate param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "request_signing_certificate")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileMethodTacplusResult(dict):
    def __init__(__self__, *,
                 checkgroup: _builtins.bool,
                 server_profile: _builtins.str):
        """
        :param _builtins.bool checkgroup: The Checkgroup param.
        :param _builtins.str server_profile: The ServerProfile param.
        """
        pulumi.set(__self__, "checkgroup", checkgroup)
        pulumi.set(__self__, "server_profile", server_profile)

    @_builtins.property
    @pulumi.getter
    def checkgroup(self) -> _builtins.bool:
        """
        The Checkgroup param.
        """
        return pulumi.get(self, "checkgroup")

    @_builtins.property
    @pulumi.getter(name="serverProfile")
    def server_profile(self) -> _builtins.str:
        """
        The ServerProfile param.
        """
        return pulumi.get(self, "server_profile")


@pulumi.output_type
class GetAuthenticationProfileMultiFactorAuthResult(dict):
    def __init__(__self__, *,
                 factors: Sequence[_builtins.str],
                 mfa_enable: _builtins.bool):
        """
        :param Sequence[_builtins.str] factors: The Factors param.
        :param _builtins.bool mfa_enable: The MfaEnable param.
        """
        pulumi.set(__self__, "factors", factors)
        pulumi.set(__self__, "mfa_enable", mfa_enable)

    @_builtins.property
    @pulumi.getter
    def factors(self) -> Sequence[_builtins.str]:
        """
        The Factors param.
        """
        return pulumi.get(self, "factors")

    @_builtins.property
    @pulumi.getter(name="mfaEnable")
    def mfa_enable(self) -> _builtins.bool:
        """
        The MfaEnable param.
        """
        return pulumi.get(self, "mfa_enable")


@pulumi.output_type
class GetAuthenticationProfileSingleSignOnResult(dict):
    def __init__(__self__, *,
                 kerberos_keytab: _builtins.str,
                 realm: _builtins.str):
        """
        :param _builtins.str kerberos_keytab: The KerberosKeytab param. String length must not exceed 8192 characters.
        :param _builtins.str realm: The Realm param. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "kerberos_keytab", kerberos_keytab)
        pulumi.set(__self__, "realm", realm)

    @_builtins.property
    @pulumi.getter(name="kerberosKeytab")
    def kerberos_keytab(self) -> _builtins.str:
        """
        The KerberosKeytab param. String length must not exceed 8192 characters.
        """
        return pulumi.get(self, "kerberos_keytab")

    @_builtins.property
    @pulumi.getter
    def realm(self) -> _builtins.str:
        """
        The Realm param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "realm")


@pulumi.output_type
class GetAuthenticationRuleListDataResult(dict):
    def __init__(__self__, *,
                 authentication_enforcement: _builtins.str,
                 categories: Sequence[_builtins.str],
                 description: _builtins.str,
                 destination_hips: Sequence[_builtins.str],
                 destinations: Sequence[_builtins.str],
                 disabled: _builtins.bool,
                 froms: Sequence[_builtins.str],
                 group_tag: _builtins.str,
                 hip_profiles: Sequence[_builtins.str],
                 id: _builtins.str,
                 log_authentication_timeout: _builtins.bool,
                 log_setting: _builtins.str,
                 name: _builtins.str,
                 negate_destination: _builtins.bool,
                 negate_source: _builtins.bool,
                 services: Sequence[_builtins.str],
                 source_hips: Sequence[_builtins.str],
                 source_users: Sequence[_builtins.str],
                 sources: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str],
                 timeout: _builtins.int,
                 tos: Sequence[_builtins.str]):
        """
        :param _builtins.str authentication_enforcement: the authentication profile name to apply to authentication rule.
        :param Sequence[_builtins.str] categories: The Categories param.
        :param _builtins.str description: The Description param.
        :param Sequence[_builtins.str] destination_hips: The DestinationHips param.
        :param Sequence[_builtins.str] destinations: The Destinations param.
        :param _builtins.bool disabled: The Disabled param. Default: `false`.
        :param Sequence[_builtins.str] froms: The Froms param.
        :param _builtins.str group_tag: The GroupTag param.
        :param Sequence[_builtins.str] hip_profiles: The HipProfiles param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.bool log_authentication_timeout: The LogAuthenticationTimeout param. Default: `false`.
        :param _builtins.str log_setting: The LogSetting param.
        :param _builtins.str name: The Name param.
        :param _builtins.bool negate_destination: The NegateDestination param. Default: `false`.
        :param _builtins.bool negate_source: The NegateSource param. Default: `false`.
        :param Sequence[_builtins.str] services: The Services param.
        :param Sequence[_builtins.str] source_hips: The SourceHips param.
        :param Sequence[_builtins.str] source_users: The SourceUsers param.
        :param Sequence[_builtins.str] sources: The Sources param.
        :param Sequence[_builtins.str] tags: The Tags param.
        :param _builtins.int timeout: The Timeout param. Value must be between 1 and 1440.
        :param Sequence[_builtins.str] tos: The Tos param.
        """
        pulumi.set(__self__, "authentication_enforcement", authentication_enforcement)
        pulumi.set(__self__, "categories", categories)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination_hips", destination_hips)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "froms", froms)
        pulumi.set(__self__, "group_tag", group_tag)
        pulumi.set(__self__, "hip_profiles", hip_profiles)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "log_authentication_timeout", log_authentication_timeout)
        pulumi.set(__self__, "log_setting", log_setting)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate_destination", negate_destination)
        pulumi.set(__self__, "negate_source", negate_source)
        pulumi.set(__self__, "services", services)
        pulumi.set(__self__, "source_hips", source_hips)
        pulumi.set(__self__, "source_users", source_users)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter(name="authenticationEnforcement")
    def authentication_enforcement(self) -> _builtins.str:
        """
        the authentication profile name to apply to authentication rule.
        """
        return pulumi.get(self, "authentication_enforcement")

    @_builtins.property
    @pulumi.getter
    def categories(self) -> Sequence[_builtins.str]:
        """
        The Categories param.
        """
        return pulumi.get(self, "categories")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationHips")
    def destination_hips(self) -> Sequence[_builtins.str]:
        """
        The DestinationHips param.
        """
        return pulumi.get(self, "destination_hips")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The Destinations param.
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param. Default: `false`.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter
    def froms(self) -> Sequence[_builtins.str]:
        """
        The Froms param.
        """
        return pulumi.get(self, "froms")

    @_builtins.property
    @pulumi.getter(name="groupTag")
    def group_tag(self) -> _builtins.str:
        """
        The GroupTag param.
        """
        return pulumi.get(self, "group_tag")

    @_builtins.property
    @pulumi.getter(name="hipProfiles")
    def hip_profiles(self) -> Sequence[_builtins.str]:
        """
        The HipProfiles param.
        """
        return pulumi.get(self, "hip_profiles")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="logAuthenticationTimeout")
    def log_authentication_timeout(self) -> _builtins.bool:
        """
        The LogAuthenticationTimeout param. Default: `false`.
        """
        return pulumi.get(self, "log_authentication_timeout")

    @_builtins.property
    @pulumi.getter(name="logSetting")
    def log_setting(self) -> _builtins.str:
        """
        The LogSetting param.
        """
        return pulumi.get(self, "log_setting")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="negateDestination")
    def negate_destination(self) -> _builtins.bool:
        """
        The NegateDestination param. Default: `false`.
        """
        return pulumi.get(self, "negate_destination")

    @_builtins.property
    @pulumi.getter(name="negateSource")
    def negate_source(self) -> _builtins.bool:
        """
        The NegateSource param. Default: `false`.
        """
        return pulumi.get(self, "negate_source")

    @_builtins.property
    @pulumi.getter
    def services(self) -> Sequence[_builtins.str]:
        """
        The Services param.
        """
        return pulumi.get(self, "services")

    @_builtins.property
    @pulumi.getter(name="sourceHips")
    def source_hips(self) -> Sequence[_builtins.str]:
        """
        The SourceHips param.
        """
        return pulumi.get(self, "source_hips")

    @_builtins.property
    @pulumi.getter(name="sourceUsers")
    def source_users(self) -> Sequence[_builtins.str]:
        """
        The SourceUsers param.
        """
        return pulumi.get(self, "source_users")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The Sources param.
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        The Timeout param. Value must be between 1 and 1440.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Sequence[_builtins.str]:
        """
        The Tos param.
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetAuthenticationSequenceListDataResult(dict):
    def __init__(__self__, *,
                 authentication_profiles: Sequence[_builtins.str],
                 id: _builtins.str,
                 name: _builtins.str,
                 use_domain_find_profile: _builtins.bool):
        """
        :param Sequence[_builtins.str] authentication_profiles: The AuthenticationProfiles param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        :param _builtins.bool use_domain_find_profile: The UseDomainFindProfile param. Default: `true`.
        """
        pulumi.set(__self__, "authentication_profiles", authentication_profiles)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "use_domain_find_profile", use_domain_find_profile)

    @_builtins.property
    @pulumi.getter(name="authenticationProfiles")
    def authentication_profiles(self) -> Sequence[_builtins.str]:
        """
        The AuthenticationProfiles param.
        """
        return pulumi.get(self, "authentication_profiles")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="useDomainFindProfile")
    def use_domain_find_profile(self) -> _builtins.bool:
        """
        The UseDomainFindProfile param. Default: `true`.
        """
        return pulumi.get(self, "use_domain_find_profile")


@pulumi.output_type
class GetAutoTagActionsListDataResult(dict):
    def __init__(__self__, *,
                 actions: Sequence['outputs.GetAutoTagActionsListDataActionResult'],
                 description: _builtins.str,
                 filter: _builtins.str,
                 log_type: _builtins.str,
                 name: _builtins.str,
                 quarantine: _builtins.bool,
                 send_to_panorama: _builtins.bool):
        """
        :param Sequence['GetAutoTagActionsListDataActionArgs'] actions: The Actions param.
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param _builtins.str filter: Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        :param _builtins.str log_type: The LogType param.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param _builtins.bool quarantine: The Quarantine param.
        :param _builtins.bool send_to_panorama: The SendToPanorama param.
        """
        pulumi.set(__self__, "actions", actions)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "filter", filter)
        pulumi.set(__self__, "log_type", log_type)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "quarantine", quarantine)
        pulumi.set(__self__, "send_to_panorama", send_to_panorama)

    @_builtins.property
    @pulumi.getter
    def actions(self) -> Sequence['outputs.GetAutoTagActionsListDataActionResult']:
        """
        The Actions param.
        """
        return pulumi.get(self, "actions")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def filter(self) -> _builtins.str:
        """
        Tag based filter defining group membership e.g. `tag1 AND tag2 OR tag3`. String length must not exceed 2047 characters.
        """
        return pulumi.get(self, "filter")

    @_builtins.property
    @pulumi.getter(name="logType")
    def log_type(self) -> _builtins.str:
        """
        The LogType param.
        """
        return pulumi.get(self, "log_type")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def quarantine(self) -> _builtins.bool:
        """
        The Quarantine param.
        """
        return pulumi.get(self, "quarantine")

    @_builtins.property
    @pulumi.getter(name="sendToPanorama")
    def send_to_panorama(self) -> _builtins.bool:
        """
        The SendToPanorama param.
        """
        return pulumi.get(self, "send_to_panorama")


@pulumi.output_type
class GetAutoTagActionsListDataActionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 type: 'outputs.GetAutoTagActionsListDataActionTypeResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetAutoTagActionsListDataActionTypeArgs' type: The Type param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'outputs.GetAutoTagActionsListDataActionTypeResult':
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetAutoTagActionsListDataActionTypeResult(dict):
    def __init__(__self__, *,
                 tagging: 'outputs.GetAutoTagActionsListDataActionTypeTaggingResult'):
        """
        :param 'GetAutoTagActionsListDataActionTypeTaggingArgs' tagging: The Tagging param.
        """
        pulumi.set(__self__, "tagging", tagging)

    @_builtins.property
    @pulumi.getter
    def tagging(self) -> 'outputs.GetAutoTagActionsListDataActionTypeTaggingResult':
        """
        The Tagging param.
        """
        return pulumi.get(self, "tagging")


@pulumi.output_type
class GetAutoTagActionsListDataActionTypeTaggingResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 tags: Sequence[_builtins.str],
                 target: _builtins.str,
                 timeout: _builtins.int):
        """
        :param _builtins.str action: Add or Remove tag option. String must be one of these: `"add-tag"`, `"remove-tag"`.
        :param Sequence[_builtins.str] tags: Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        :param _builtins.str target: Source or Destination Address, User, X-Forwarded-For Address.
        :param _builtins.int timeout: The Timeout param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "target", target)
        pulumi.set(__self__, "timeout", timeout)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        Add or Remove tag option. String must be one of these: `"add-tag"`, `"remove-tag"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for address object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def target(self) -> _builtins.str:
        """
        Source or Destination Address, User, X-Forwarded-For Address.
        """
        return pulumi.get(self, "target")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        The Timeout param.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class GetCertificateProfileCaCertificateResult(dict):
    def __init__(__self__, *,
                 default_ocsp_url: _builtins.str,
                 name: _builtins.str,
                 ocsp_verify_cert: _builtins.str,
                 template_name: _builtins.str):
        """
        :param _builtins.str default_ocsp_url: The DefaultOcspUrl param.
        :param _builtins.str name: The Name param.
        :param _builtins.str ocsp_verify_cert: The OcspVerifyCert param.
        :param _builtins.str template_name: The TemplateName param.
        """
        pulumi.set(__self__, "default_ocsp_url", default_ocsp_url)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "ocsp_verify_cert", ocsp_verify_cert)
        pulumi.set(__self__, "template_name", template_name)

    @_builtins.property
    @pulumi.getter(name="defaultOcspUrl")
    def default_ocsp_url(self) -> _builtins.str:
        """
        The DefaultOcspUrl param.
        """
        return pulumi.get(self, "default_ocsp_url")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="ocspVerifyCert")
    def ocsp_verify_cert(self) -> _builtins.str:
        """
        The OcspVerifyCert param.
        """
        return pulumi.get(self, "ocsp_verify_cert")

    @_builtins.property
    @pulumi.getter(name="templateName")
    def template_name(self) -> _builtins.str:
        """
        The TemplateName param.
        """
        return pulumi.get(self, "template_name")


@pulumi.output_type
class GetCertificateProfileListDataResult(dict):
    def __init__(__self__, *,
                 block_expired_cert: _builtins.bool,
                 block_timeout_cert: _builtins.bool,
                 block_unauthenticated_cert: _builtins.bool,
                 block_unknown_cert: _builtins.bool,
                 ca_certificates: Sequence['outputs.GetCertificateProfileListDataCaCertificateResult'],
                 cert_status_timeout: _builtins.str,
                 crl_receive_timeout: _builtins.str,
                 domain: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 ocsp_receive_timeout: _builtins.str,
                 use_crl: _builtins.bool,
                 use_ocsp: _builtins.bool,
                 username_field: 'outputs.GetCertificateProfileListDataUsernameFieldResult'):
        """
        :param _builtins.bool block_expired_cert: The BlockExpiredCert param.
        :param _builtins.bool block_timeout_cert: The BlockTimeoutCert param.
        :param _builtins.bool block_unauthenticated_cert: The BlockUnauthenticatedCert param.
        :param _builtins.bool block_unknown_cert: The BlockUnknownCert param.
        :param Sequence['GetCertificateProfileListDataCaCertificateArgs'] ca_certificates: The CaCertificates param.
        :param _builtins.str cert_status_timeout: The CertStatusTimeout param.
        :param _builtins.str crl_receive_timeout: The CrlReceiveTimeout param.
        :param _builtins.str domain: The Domain param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param _builtins.str ocsp_receive_timeout: The OcspReceiveTimeout param.
        :param _builtins.bool use_crl: The UseCrl param.
        :param _builtins.bool use_ocsp: The UseOcsp param.
        :param 'GetCertificateProfileListDataUsernameFieldArgs' username_field: The UsernameField param.
        """
        pulumi.set(__self__, "block_expired_cert", block_expired_cert)
        pulumi.set(__self__, "block_timeout_cert", block_timeout_cert)
        pulumi.set(__self__, "block_unauthenticated_cert", block_unauthenticated_cert)
        pulumi.set(__self__, "block_unknown_cert", block_unknown_cert)
        pulumi.set(__self__, "ca_certificates", ca_certificates)
        pulumi.set(__self__, "cert_status_timeout", cert_status_timeout)
        pulumi.set(__self__, "crl_receive_timeout", crl_receive_timeout)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "ocsp_receive_timeout", ocsp_receive_timeout)
        pulumi.set(__self__, "use_crl", use_crl)
        pulumi.set(__self__, "use_ocsp", use_ocsp)
        pulumi.set(__self__, "username_field", username_field)

    @_builtins.property
    @pulumi.getter(name="blockExpiredCert")
    def block_expired_cert(self) -> _builtins.bool:
        """
        The BlockExpiredCert param.
        """
        return pulumi.get(self, "block_expired_cert")

    @_builtins.property
    @pulumi.getter(name="blockTimeoutCert")
    def block_timeout_cert(self) -> _builtins.bool:
        """
        The BlockTimeoutCert param.
        """
        return pulumi.get(self, "block_timeout_cert")

    @_builtins.property
    @pulumi.getter(name="blockUnauthenticatedCert")
    def block_unauthenticated_cert(self) -> _builtins.bool:
        """
        The BlockUnauthenticatedCert param.
        """
        return pulumi.get(self, "block_unauthenticated_cert")

    @_builtins.property
    @pulumi.getter(name="blockUnknownCert")
    def block_unknown_cert(self) -> _builtins.bool:
        """
        The BlockUnknownCert param.
        """
        return pulumi.get(self, "block_unknown_cert")

    @_builtins.property
    @pulumi.getter(name="caCertificates")
    def ca_certificates(self) -> Sequence['outputs.GetCertificateProfileListDataCaCertificateResult']:
        """
        The CaCertificates param.
        """
        return pulumi.get(self, "ca_certificates")

    @_builtins.property
    @pulumi.getter(name="certStatusTimeout")
    def cert_status_timeout(self) -> _builtins.str:
        """
        The CertStatusTimeout param.
        """
        return pulumi.get(self, "cert_status_timeout")

    @_builtins.property
    @pulumi.getter(name="crlReceiveTimeout")
    def crl_receive_timeout(self) -> _builtins.str:
        """
        The CrlReceiveTimeout param.
        """
        return pulumi.get(self, "crl_receive_timeout")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> _builtins.str:
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="ocspReceiveTimeout")
    def ocsp_receive_timeout(self) -> _builtins.str:
        """
        The OcspReceiveTimeout param.
        """
        return pulumi.get(self, "ocsp_receive_timeout")

    @_builtins.property
    @pulumi.getter(name="useCrl")
    def use_crl(self) -> _builtins.bool:
        """
        The UseCrl param.
        """
        return pulumi.get(self, "use_crl")

    @_builtins.property
    @pulumi.getter(name="useOcsp")
    def use_ocsp(self) -> _builtins.bool:
        """
        The UseOcsp param.
        """
        return pulumi.get(self, "use_ocsp")

    @_builtins.property
    @pulumi.getter(name="usernameField")
    def username_field(self) -> 'outputs.GetCertificateProfileListDataUsernameFieldResult':
        """
        The UsernameField param.
        """
        return pulumi.get(self, "username_field")


@pulumi.output_type
class GetCertificateProfileListDataCaCertificateResult(dict):
    def __init__(__self__, *,
                 default_ocsp_url: _builtins.str,
                 name: _builtins.str,
                 ocsp_verify_cert: _builtins.str,
                 template_name: _builtins.str):
        """
        :param _builtins.str default_ocsp_url: The DefaultOcspUrl param.
        :param _builtins.str name: The Name param.
        :param _builtins.str ocsp_verify_cert: The OcspVerifyCert param.
        :param _builtins.str template_name: The TemplateName param.
        """
        pulumi.set(__self__, "default_ocsp_url", default_ocsp_url)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "ocsp_verify_cert", ocsp_verify_cert)
        pulumi.set(__self__, "template_name", template_name)

    @_builtins.property
    @pulumi.getter(name="defaultOcspUrl")
    def default_ocsp_url(self) -> _builtins.str:
        """
        The DefaultOcspUrl param.
        """
        return pulumi.get(self, "default_ocsp_url")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="ocspVerifyCert")
    def ocsp_verify_cert(self) -> _builtins.str:
        """
        The OcspVerifyCert param.
        """
        return pulumi.get(self, "ocsp_verify_cert")

    @_builtins.property
    @pulumi.getter(name="templateName")
    def template_name(self) -> _builtins.str:
        """
        The TemplateName param.
        """
        return pulumi.get(self, "template_name")


@pulumi.output_type
class GetCertificateProfileListDataUsernameFieldResult(dict):
    def __init__(__self__, *,
                 subject: _builtins.str,
                 subject_alt: _builtins.str):
        """
        :param _builtins.str subject: The Subject param. String must be one of these: `"common-name"`.
        :param _builtins.str subject_alt: The SubjectAlt param. String must be one of these: `"email"`.
        """
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "subject_alt", subject_alt)

    @_builtins.property
    @pulumi.getter
    def subject(self) -> _builtins.str:
        """
        The Subject param. String must be one of these: `"common-name"`.
        """
        return pulumi.get(self, "subject")

    @_builtins.property
    @pulumi.getter(name="subjectAlt")
    def subject_alt(self) -> _builtins.str:
        """
        The SubjectAlt param. String must be one of these: `"email"`.
        """
        return pulumi.get(self, "subject_alt")


@pulumi.output_type
class GetCertificateProfileUsernameFieldResult(dict):
    def __init__(__self__, *,
                 subject: _builtins.str,
                 subject_alt: _builtins.str):
        """
        :param _builtins.str subject: The Subject param. String must be one of these: `"common-name"`.
        :param _builtins.str subject_alt: The SubjectAlt param. String must be one of these: `"email"`.
        """
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "subject_alt", subject_alt)

    @_builtins.property
    @pulumi.getter
    def subject(self) -> _builtins.str:
        """
        The Subject param. String must be one of these: `"common-name"`.
        """
        return pulumi.get(self, "subject")

    @_builtins.property
    @pulumi.getter(name="subjectAlt")
    def subject_alt(self) -> _builtins.str:
        """
        The SubjectAlt param. String must be one of these: `"email"`.
        """
        return pulumi.get(self, "subject_alt")


@pulumi.output_type
class GetDecryptionProfileListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 ssl_forward_proxy: 'outputs.GetDecryptionProfileListDataSslForwardProxyResult',
                 ssl_inbound_proxy: 'outputs.GetDecryptionProfileListDataSslInboundProxyResult',
                 ssl_no_proxy: 'outputs.GetDecryptionProfileListDataSslNoProxyResult',
                 ssl_protocol_settings: 'outputs.GetDecryptionProfileListDataSslProtocolSettingsResult'):
        """
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Must start with alphanumeric char and should contain only alphanemeric, underscore, hyphen, dot or space. String validation regex: `^[A-Za-z0-9]{1}[A-Za-z0-9_\\-\\.\\s]{0,}$`.
        :param 'GetDecryptionProfileListDataSslForwardProxyArgs' ssl_forward_proxy: The SslForwardProxy param.
        :param 'GetDecryptionProfileListDataSslInboundProxyArgs' ssl_inbound_proxy: The SslInboundProxy param.
        :param 'GetDecryptionProfileListDataSslNoProxyArgs' ssl_no_proxy: The SslNoProxy param.
        :param 'GetDecryptionProfileListDataSslProtocolSettingsArgs' ssl_protocol_settings: The SslProtocolSettings param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "ssl_forward_proxy", ssl_forward_proxy)
        pulumi.set(__self__, "ssl_inbound_proxy", ssl_inbound_proxy)
        pulumi.set(__self__, "ssl_no_proxy", ssl_no_proxy)
        pulumi.set(__self__, "ssl_protocol_settings", ssl_protocol_settings)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Must start with alphanumeric char and should contain only alphanemeric, underscore, hyphen, dot or space. String validation regex: `^[A-Za-z0-9]{1}[A-Za-z0-9_\\-\\.\\s]{0,}$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="sslForwardProxy")
    def ssl_forward_proxy(self) -> 'outputs.GetDecryptionProfileListDataSslForwardProxyResult':
        """
        The SslForwardProxy param.
        """
        return pulumi.get(self, "ssl_forward_proxy")

    @_builtins.property
    @pulumi.getter(name="sslInboundProxy")
    def ssl_inbound_proxy(self) -> 'outputs.GetDecryptionProfileListDataSslInboundProxyResult':
        """
        The SslInboundProxy param.
        """
        return pulumi.get(self, "ssl_inbound_proxy")

    @_builtins.property
    @pulumi.getter(name="sslNoProxy")
    def ssl_no_proxy(self) -> 'outputs.GetDecryptionProfileListDataSslNoProxyResult':
        """
        The SslNoProxy param.
        """
        return pulumi.get(self, "ssl_no_proxy")

    @_builtins.property
    @pulumi.getter(name="sslProtocolSettings")
    def ssl_protocol_settings(self) -> 'outputs.GetDecryptionProfileListDataSslProtocolSettingsResult':
        """
        The SslProtocolSettings param.
        """
        return pulumi.get(self, "ssl_protocol_settings")


@pulumi.output_type
class GetDecryptionProfileListDataSslForwardProxyResult(dict):
    def __init__(__self__, *,
                 auto_include_altname: _builtins.bool,
                 block_client_cert: _builtins.bool,
                 block_expired_certificate: _builtins.bool,
                 block_timeout_cert: _builtins.bool,
                 block_tls13_downgrade_no_resource: _builtins.bool,
                 block_unknown_cert: _builtins.bool,
                 block_unsupported_cipher: _builtins.bool,
                 block_unsupported_version: _builtins.bool,
                 block_untrusted_issuer: _builtins.bool,
                 restrict_cert_exts: _builtins.bool,
                 strip_alpn: _builtins.bool):
        """
        :param _builtins.bool auto_include_altname: The AutoIncludeAltname param. Default: `false`.
        :param _builtins.bool block_client_cert: The BlockClientCert param. Default: `false`.
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_timeout_cert: The BlockTimeoutCert param. Default: `false`.
        :param _builtins.bool block_tls13_downgrade_no_resource: The BlockTls13DowngradeNoResource param. Default: `false`.
        :param _builtins.bool block_unknown_cert: The BlockUnknownCert param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        :param _builtins.bool restrict_cert_exts: The RestrictCertExts param. Default: `false`.
        :param _builtins.bool strip_alpn: The StripAlpn param. Default: `false`.
        """
        pulumi.set(__self__, "auto_include_altname", auto_include_altname)
        pulumi.set(__self__, "block_client_cert", block_client_cert)
        pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        pulumi.set(__self__, "block_timeout_cert", block_timeout_cert)
        pulumi.set(__self__, "block_tls13_downgrade_no_resource", block_tls13_downgrade_no_resource)
        pulumi.set(__self__, "block_unknown_cert", block_unknown_cert)
        pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)
        pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)
        pulumi.set(__self__, "restrict_cert_exts", restrict_cert_exts)
        pulumi.set(__self__, "strip_alpn", strip_alpn)

    @_builtins.property
    @pulumi.getter(name="autoIncludeAltname")
    def auto_include_altname(self) -> _builtins.bool:
        """
        The AutoIncludeAltname param. Default: `false`.
        """
        return pulumi.get(self, "auto_include_altname")

    @_builtins.property
    @pulumi.getter(name="blockClientCert")
    def block_client_cert(self) -> _builtins.bool:
        """
        The BlockClientCert param. Default: `false`.
        """
        return pulumi.get(self, "block_client_cert")

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> _builtins.bool:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockTimeoutCert")
    def block_timeout_cert(self) -> _builtins.bool:
        """
        The BlockTimeoutCert param. Default: `false`.
        """
        return pulumi.get(self, "block_timeout_cert")

    @_builtins.property
    @pulumi.getter(name="blockTls13DowngradeNoResource")
    def block_tls13_downgrade_no_resource(self) -> _builtins.bool:
        """
        The BlockTls13DowngradeNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_tls13_downgrade_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnknownCert")
    def block_unknown_cert(self) -> _builtins.bool:
        """
        The BlockUnknownCert param. Default: `false`.
        """
        return pulumi.get(self, "block_unknown_cert")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> _builtins.bool:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> _builtins.bool:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> _builtins.bool:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")

    @_builtins.property
    @pulumi.getter(name="restrictCertExts")
    def restrict_cert_exts(self) -> _builtins.bool:
        """
        The RestrictCertExts param. Default: `false`.
        """
        return pulumi.get(self, "restrict_cert_exts")

    @_builtins.property
    @pulumi.getter(name="stripAlpn")
    def strip_alpn(self) -> _builtins.bool:
        """
        The StripAlpn param. Default: `false`.
        """
        return pulumi.get(self, "strip_alpn")


@pulumi.output_type
class GetDecryptionProfileListDataSslInboundProxyResult(dict):
    def __init__(__self__, *,
                 block_if_hsm_unavailable: _builtins.bool,
                 block_if_no_resource: _builtins.bool,
                 block_unsupported_cipher: _builtins.bool,
                 block_unsupported_version: _builtins.bool):
        """
        :param _builtins.bool block_if_hsm_unavailable: The BlockIfHsmUnavailable param. Default: `false`.
        :param _builtins.bool block_if_no_resource: The BlockIfNoResource param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        """
        pulumi.set(__self__, "block_if_hsm_unavailable", block_if_hsm_unavailable)
        pulumi.set(__self__, "block_if_no_resource", block_if_no_resource)
        pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)

    @_builtins.property
    @pulumi.getter(name="blockIfHsmUnavailable")
    def block_if_hsm_unavailable(self) -> _builtins.bool:
        """
        The BlockIfHsmUnavailable param. Default: `false`.
        """
        return pulumi.get(self, "block_if_hsm_unavailable")

    @_builtins.property
    @pulumi.getter(name="blockIfNoResource")
    def block_if_no_resource(self) -> _builtins.bool:
        """
        The BlockIfNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_if_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> _builtins.bool:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> _builtins.bool:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")


@pulumi.output_type
class GetDecryptionProfileListDataSslNoProxyResult(dict):
    def __init__(__self__, *,
                 block_expired_certificate: _builtins.bool,
                 block_untrusted_issuer: _builtins.bool):
        """
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        """
        pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> _builtins.bool:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> _builtins.bool:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")


@pulumi.output_type
class GetDecryptionProfileListDataSslProtocolSettingsResult(dict):
    def __init__(__self__, *,
                 auth_algo_md5: _builtins.bool,
                 auth_algo_sha1: _builtins.bool,
                 auth_algo_sha256: _builtins.bool,
                 auth_algo_sha384: _builtins.bool,
                 enc_algo3des: _builtins.bool,
                 enc_algo_aes128_cbc: _builtins.bool,
                 enc_algo_aes128_gcm: _builtins.bool,
                 enc_algo_aes256_cbc: _builtins.bool,
                 enc_algo_aes256_gcm: _builtins.bool,
                 enc_algo_chacha20_poly1305: _builtins.bool,
                 enc_algo_rc4: _builtins.bool,
                 keyxchg_algo_dhe: _builtins.bool,
                 keyxchg_algo_ecdhe: _builtins.bool,
                 keyxchg_algo_rsa: _builtins.bool,
                 max_version: _builtins.str,
                 min_version: _builtins.str):
        """
        :param _builtins.bool auth_algo_md5: The AuthAlgoMd5 param. Default: `true`.
        :param _builtins.bool auth_algo_sha1: The AuthAlgoSha1 param. Default: `true`.
        :param _builtins.bool auth_algo_sha256: The AuthAlgoSha256 param. Default: `true`.
        :param _builtins.bool auth_algo_sha384: The AuthAlgoSha384 param. Default: `true`.
        :param _builtins.bool enc_algo3des: The EncAlgo3des param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_cbc: The EncAlgoAes128Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_gcm: The EncAlgoAes128Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_cbc: The EncAlgoAes256Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_gcm: The EncAlgoAes256Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_chacha20_poly1305: The EncAlgoChacha20Poly1305 param. Default: `true`.
        :param _builtins.bool enc_algo_rc4: The EncAlgoRc4 param. Default: `true`.
        :param _builtins.bool keyxchg_algo_dhe: The KeyxchgAlgoDhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_ecdhe: The KeyxchgAlgoEcdhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_rsa: The KeyxchgAlgoRsa param. Default: `true`.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        pulumi.set(__self__, "auth_algo_md5", auth_algo_md5)
        pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        pulumi.set(__self__, "enc_algo_chacha20_poly1305", enc_algo_chacha20_poly1305)
        pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        pulumi.set(__self__, "max_version", max_version)
        pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoMd5")
    def auth_algo_md5(self) -> _builtins.bool:
        """
        The AuthAlgoMd5 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_md5")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> _builtins.bool:
        """
        The AuthAlgoSha1 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> _builtins.bool:
        """
        The AuthAlgoSha256 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> _builtins.bool:
        """
        The AuthAlgoSha384 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> _builtins.bool:
        """
        The EncAlgo3des param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> _builtins.bool:
        """
        The EncAlgoAes128Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> _builtins.bool:
        """
        The EncAlgoAes128Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> _builtins.bool:
        """
        The EncAlgoAes256Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> _builtins.bool:
        """
        The EncAlgoAes256Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoChacha20Poly1305")
    def enc_algo_chacha20_poly1305(self) -> _builtins.bool:
        """
        The EncAlgoChacha20Poly1305 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_chacha20_poly1305")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> _builtins.bool:
        """
        The EncAlgoRc4 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> _builtins.bool:
        """
        The KeyxchgAlgoDhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> _builtins.bool:
        """
        The KeyxchgAlgoEcdhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> _builtins.bool:
        """
        The KeyxchgAlgoRsa param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> _builtins.str:
        """
        The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> _builtins.str:
        """
        The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class GetDecryptionProfileSslForwardProxyResult(dict):
    def __init__(__self__, *,
                 auto_include_altname: _builtins.bool,
                 block_client_cert: _builtins.bool,
                 block_expired_certificate: _builtins.bool,
                 block_timeout_cert: _builtins.bool,
                 block_tls13_downgrade_no_resource: _builtins.bool,
                 block_unknown_cert: _builtins.bool,
                 block_unsupported_cipher: _builtins.bool,
                 block_unsupported_version: _builtins.bool,
                 block_untrusted_issuer: _builtins.bool,
                 restrict_cert_exts: _builtins.bool,
                 strip_alpn: _builtins.bool):
        """
        :param _builtins.bool auto_include_altname: The AutoIncludeAltname param. Default: `false`.
        :param _builtins.bool block_client_cert: The BlockClientCert param. Default: `false`.
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_timeout_cert: The BlockTimeoutCert param. Default: `false`.
        :param _builtins.bool block_tls13_downgrade_no_resource: The BlockTls13DowngradeNoResource param. Default: `false`.
        :param _builtins.bool block_unknown_cert: The BlockUnknownCert param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        :param _builtins.bool restrict_cert_exts: The RestrictCertExts param. Default: `false`.
        :param _builtins.bool strip_alpn: The StripAlpn param. Default: `false`.
        """
        pulumi.set(__self__, "auto_include_altname", auto_include_altname)
        pulumi.set(__self__, "block_client_cert", block_client_cert)
        pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        pulumi.set(__self__, "block_timeout_cert", block_timeout_cert)
        pulumi.set(__self__, "block_tls13_downgrade_no_resource", block_tls13_downgrade_no_resource)
        pulumi.set(__self__, "block_unknown_cert", block_unknown_cert)
        pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)
        pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)
        pulumi.set(__self__, "restrict_cert_exts", restrict_cert_exts)
        pulumi.set(__self__, "strip_alpn", strip_alpn)

    @_builtins.property
    @pulumi.getter(name="autoIncludeAltname")
    def auto_include_altname(self) -> _builtins.bool:
        """
        The AutoIncludeAltname param. Default: `false`.
        """
        return pulumi.get(self, "auto_include_altname")

    @_builtins.property
    @pulumi.getter(name="blockClientCert")
    def block_client_cert(self) -> _builtins.bool:
        """
        The BlockClientCert param. Default: `false`.
        """
        return pulumi.get(self, "block_client_cert")

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> _builtins.bool:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockTimeoutCert")
    def block_timeout_cert(self) -> _builtins.bool:
        """
        The BlockTimeoutCert param. Default: `false`.
        """
        return pulumi.get(self, "block_timeout_cert")

    @_builtins.property
    @pulumi.getter(name="blockTls13DowngradeNoResource")
    def block_tls13_downgrade_no_resource(self) -> _builtins.bool:
        """
        The BlockTls13DowngradeNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_tls13_downgrade_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnknownCert")
    def block_unknown_cert(self) -> _builtins.bool:
        """
        The BlockUnknownCert param. Default: `false`.
        """
        return pulumi.get(self, "block_unknown_cert")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> _builtins.bool:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> _builtins.bool:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> _builtins.bool:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")

    @_builtins.property
    @pulumi.getter(name="restrictCertExts")
    def restrict_cert_exts(self) -> _builtins.bool:
        """
        The RestrictCertExts param. Default: `false`.
        """
        return pulumi.get(self, "restrict_cert_exts")

    @_builtins.property
    @pulumi.getter(name="stripAlpn")
    def strip_alpn(self) -> _builtins.bool:
        """
        The StripAlpn param. Default: `false`.
        """
        return pulumi.get(self, "strip_alpn")


@pulumi.output_type
class GetDecryptionProfileSslInboundProxyResult(dict):
    def __init__(__self__, *,
                 block_if_hsm_unavailable: _builtins.bool,
                 block_if_no_resource: _builtins.bool,
                 block_unsupported_cipher: _builtins.bool,
                 block_unsupported_version: _builtins.bool):
        """
        :param _builtins.bool block_if_hsm_unavailable: The BlockIfHsmUnavailable param. Default: `false`.
        :param _builtins.bool block_if_no_resource: The BlockIfNoResource param. Default: `false`.
        :param _builtins.bool block_unsupported_cipher: The BlockUnsupportedCipher param. Default: `false`.
        :param _builtins.bool block_unsupported_version: The BlockUnsupportedVersion param. Default: `false`.
        """
        pulumi.set(__self__, "block_if_hsm_unavailable", block_if_hsm_unavailable)
        pulumi.set(__self__, "block_if_no_resource", block_if_no_resource)
        pulumi.set(__self__, "block_unsupported_cipher", block_unsupported_cipher)
        pulumi.set(__self__, "block_unsupported_version", block_unsupported_version)

    @_builtins.property
    @pulumi.getter(name="blockIfHsmUnavailable")
    def block_if_hsm_unavailable(self) -> _builtins.bool:
        """
        The BlockIfHsmUnavailable param. Default: `false`.
        """
        return pulumi.get(self, "block_if_hsm_unavailable")

    @_builtins.property
    @pulumi.getter(name="blockIfNoResource")
    def block_if_no_resource(self) -> _builtins.bool:
        """
        The BlockIfNoResource param. Default: `false`.
        """
        return pulumi.get(self, "block_if_no_resource")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedCipher")
    def block_unsupported_cipher(self) -> _builtins.bool:
        """
        The BlockUnsupportedCipher param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_cipher")

    @_builtins.property
    @pulumi.getter(name="blockUnsupportedVersion")
    def block_unsupported_version(self) -> _builtins.bool:
        """
        The BlockUnsupportedVersion param. Default: `false`.
        """
        return pulumi.get(self, "block_unsupported_version")


@pulumi.output_type
class GetDecryptionProfileSslNoProxyResult(dict):
    def __init__(__self__, *,
                 block_expired_certificate: _builtins.bool,
                 block_untrusted_issuer: _builtins.bool):
        """
        :param _builtins.bool block_expired_certificate: The BlockExpiredCertificate param. Default: `false`.
        :param _builtins.bool block_untrusted_issuer: The BlockUntrustedIssuer param. Default: `false`.
        """
        pulumi.set(__self__, "block_expired_certificate", block_expired_certificate)
        pulumi.set(__self__, "block_untrusted_issuer", block_untrusted_issuer)

    @_builtins.property
    @pulumi.getter(name="blockExpiredCertificate")
    def block_expired_certificate(self) -> _builtins.bool:
        """
        The BlockExpiredCertificate param. Default: `false`.
        """
        return pulumi.get(self, "block_expired_certificate")

    @_builtins.property
    @pulumi.getter(name="blockUntrustedIssuer")
    def block_untrusted_issuer(self) -> _builtins.bool:
        """
        The BlockUntrustedIssuer param. Default: `false`.
        """
        return pulumi.get(self, "block_untrusted_issuer")


@pulumi.output_type
class GetDecryptionProfileSslProtocolSettingsResult(dict):
    def __init__(__self__, *,
                 auth_algo_md5: _builtins.bool,
                 auth_algo_sha1: _builtins.bool,
                 auth_algo_sha256: _builtins.bool,
                 auth_algo_sha384: _builtins.bool,
                 enc_algo3des: _builtins.bool,
                 enc_algo_aes128_cbc: _builtins.bool,
                 enc_algo_aes128_gcm: _builtins.bool,
                 enc_algo_aes256_cbc: _builtins.bool,
                 enc_algo_aes256_gcm: _builtins.bool,
                 enc_algo_chacha20_poly1305: _builtins.bool,
                 enc_algo_rc4: _builtins.bool,
                 keyxchg_algo_dhe: _builtins.bool,
                 keyxchg_algo_ecdhe: _builtins.bool,
                 keyxchg_algo_rsa: _builtins.bool,
                 max_version: _builtins.str,
                 min_version: _builtins.str):
        """
        :param _builtins.bool auth_algo_md5: The AuthAlgoMd5 param. Default: `true`.
        :param _builtins.bool auth_algo_sha1: The AuthAlgoSha1 param. Default: `true`.
        :param _builtins.bool auth_algo_sha256: The AuthAlgoSha256 param. Default: `true`.
        :param _builtins.bool auth_algo_sha384: The AuthAlgoSha384 param. Default: `true`.
        :param _builtins.bool enc_algo3des: The EncAlgo3des param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_cbc: The EncAlgoAes128Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes128_gcm: The EncAlgoAes128Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_cbc: The EncAlgoAes256Cbc param. Default: `true`.
        :param _builtins.bool enc_algo_aes256_gcm: The EncAlgoAes256Gcm param. Default: `true`.
        :param _builtins.bool enc_algo_chacha20_poly1305: The EncAlgoChacha20Poly1305 param. Default: `true`.
        :param _builtins.bool enc_algo_rc4: The EncAlgoRc4 param. Default: `true`.
        :param _builtins.bool keyxchg_algo_dhe: The KeyxchgAlgoDhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_ecdhe: The KeyxchgAlgoEcdhe param. Default: `true`.
        :param _builtins.bool keyxchg_algo_rsa: The KeyxchgAlgoRsa param. Default: `true`.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        pulumi.set(__self__, "auth_algo_md5", auth_algo_md5)
        pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        pulumi.set(__self__, "enc_algo_chacha20_poly1305", enc_algo_chacha20_poly1305)
        pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        pulumi.set(__self__, "max_version", max_version)
        pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoMd5")
    def auth_algo_md5(self) -> _builtins.bool:
        """
        The AuthAlgoMd5 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_md5")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> _builtins.bool:
        """
        The AuthAlgoSha1 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> _builtins.bool:
        """
        The AuthAlgoSha256 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> _builtins.bool:
        """
        The AuthAlgoSha384 param. Default: `true`.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> _builtins.bool:
        """
        The EncAlgo3des param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> _builtins.bool:
        """
        The EncAlgoAes128Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> _builtins.bool:
        """
        The EncAlgoAes128Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> _builtins.bool:
        """
        The EncAlgoAes256Cbc param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> _builtins.bool:
        """
        The EncAlgoAes256Gcm param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoChacha20Poly1305")
    def enc_algo_chacha20_poly1305(self) -> _builtins.bool:
        """
        The EncAlgoChacha20Poly1305 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_chacha20_poly1305")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> _builtins.bool:
        """
        The EncAlgoRc4 param. Default: `true`.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> _builtins.bool:
        """
        The KeyxchgAlgoDhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> _builtins.bool:
        """
        The KeyxchgAlgoEcdhe param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> _builtins.bool:
        """
        The KeyxchgAlgoRsa param. Default: `true`.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> _builtins.str:
        """
        The MaxVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"tls1-2"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> _builtins.str:
        """
        The MinVersion param. String must be one of these: `"sslv3"`, `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class GetDecryptionRuleListDataResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 categories: Sequence[_builtins.str],
                 description: _builtins.str,
                 destination_hips: Sequence[_builtins.str],
                 destinations: Sequence[_builtins.str],
                 disabled: _builtins.bool,
                 froms: Sequence[_builtins.str],
                 id: _builtins.str,
                 log_fail: _builtins.bool,
                 log_setting: _builtins.str,
                 log_success: _builtins.bool,
                 name: _builtins.str,
                 negate_destination: _builtins.bool,
                 negate_source: _builtins.bool,
                 profile: _builtins.str,
                 services: Sequence[_builtins.str],
                 source_hips: Sequence[_builtins.str],
                 source_users: Sequence[_builtins.str],
                 sources: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str],
                 tos: Sequence[_builtins.str],
                 type: 'outputs.GetDecryptionRuleListDataTypeResult'):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
        :param Sequence[_builtins.str] categories: The Categories param.
        :param _builtins.str description: The Description param.
        :param Sequence[_builtins.str] destination_hips: The DestinationHips param.
        :param Sequence[_builtins.str] destinations: The Destinations param.
        :param _builtins.bool disabled: The Disabled param.
        :param Sequence[_builtins.str] froms: The Froms param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.bool log_fail: The LogFail param.
        :param _builtins.str log_setting: The LogSetting param.
        :param _builtins.bool log_success: The LogSuccess param.
        :param _builtins.str name: The Name param.
        :param _builtins.bool negate_destination: The NegateDestination param.
        :param _builtins.bool negate_source: The NegateSource param.
        :param _builtins.str profile: The Profile param.
        :param Sequence[_builtins.str] services: The Services param.
        :param Sequence[_builtins.str] source_hips: The SourceHips param.
        :param Sequence[_builtins.str] source_users: The SourceUsers param.
        :param Sequence[_builtins.str] sources: The Sources param.
        :param Sequence[_builtins.str] tags: The Tags param.
        :param Sequence[_builtins.str] tos: The Tos param.
        :param 'GetDecryptionRuleListDataTypeArgs' type: The Type param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "categories", categories)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination_hips", destination_hips)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "froms", froms)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "log_fail", log_fail)
        pulumi.set(__self__, "log_setting", log_setting)
        pulumi.set(__self__, "log_success", log_success)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate_destination", negate_destination)
        pulumi.set(__self__, "negate_source", negate_source)
        pulumi.set(__self__, "profile", profile)
        pulumi.set(__self__, "services", services)
        pulumi.set(__self__, "source_hips", source_hips)
        pulumi.set(__self__, "source_users", source_users)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "tos", tos)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The Action param. String must be one of these: `"decrypt"`, `"no-decrypt"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def categories(self) -> Sequence[_builtins.str]:
        """
        The Categories param.
        """
        return pulumi.get(self, "categories")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationHips")
    def destination_hips(self) -> Sequence[_builtins.str]:
        """
        The DestinationHips param.
        """
        return pulumi.get(self, "destination_hips")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The Destinations param.
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter
    def froms(self) -> Sequence[_builtins.str]:
        """
        The Froms param.
        """
        return pulumi.get(self, "froms")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="logFail")
    def log_fail(self) -> _builtins.bool:
        """
        The LogFail param.
        """
        return pulumi.get(self, "log_fail")

    @_builtins.property
    @pulumi.getter(name="logSetting")
    def log_setting(self) -> _builtins.str:
        """
        The LogSetting param.
        """
        return pulumi.get(self, "log_setting")

    @_builtins.property
    @pulumi.getter(name="logSuccess")
    def log_success(self) -> _builtins.bool:
        """
        The LogSuccess param.
        """
        return pulumi.get(self, "log_success")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="negateDestination")
    def negate_destination(self) -> _builtins.bool:
        """
        The NegateDestination param.
        """
        return pulumi.get(self, "negate_destination")

    @_builtins.property
    @pulumi.getter(name="negateSource")
    def negate_source(self) -> _builtins.bool:
        """
        The NegateSource param.
        """
        return pulumi.get(self, "negate_source")

    @_builtins.property
    @pulumi.getter
    def profile(self) -> _builtins.str:
        """
        The Profile param.
        """
        return pulumi.get(self, "profile")

    @_builtins.property
    @pulumi.getter
    def services(self) -> Sequence[_builtins.str]:
        """
        The Services param.
        """
        return pulumi.get(self, "services")

    @_builtins.property
    @pulumi.getter(name="sourceHips")
    def source_hips(self) -> Sequence[_builtins.str]:
        """
        The SourceHips param.
        """
        return pulumi.get(self, "source_hips")

    @_builtins.property
    @pulumi.getter(name="sourceUsers")
    def source_users(self) -> Sequence[_builtins.str]:
        """
        The SourceUsers param.
        """
        return pulumi.get(self, "source_users")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The Sources param.
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Sequence[_builtins.str]:
        """
        The Tos param.
        """
        return pulumi.get(self, "tos")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'outputs.GetDecryptionRuleListDataTypeResult':
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetDecryptionRuleListDataTypeResult(dict):
    def __init__(__self__, *,
                 ssl_forward_proxy: _builtins.bool,
                 ssl_inbound_inspection: _builtins.str):
        """
        :param _builtins.bool ssl_forward_proxy: The SslForwardProxy param.
        :param _builtins.str ssl_inbound_inspection: add the certificate name for SSL inbound inspection.
        """
        pulumi.set(__self__, "ssl_forward_proxy", ssl_forward_proxy)
        pulumi.set(__self__, "ssl_inbound_inspection", ssl_inbound_inspection)

    @_builtins.property
    @pulumi.getter(name="sslForwardProxy")
    def ssl_forward_proxy(self) -> _builtins.bool:
        """
        The SslForwardProxy param.
        """
        return pulumi.get(self, "ssl_forward_proxy")

    @_builtins.property
    @pulumi.getter(name="sslInboundInspection")
    def ssl_inbound_inspection(self) -> _builtins.str:
        """
        add the certificate name for SSL inbound inspection.
        """
        return pulumi.get(self, "ssl_inbound_inspection")


@pulumi.output_type
class GetDecryptionRuleTypeResult(dict):
    def __init__(__self__, *,
                 ssl_forward_proxy: _builtins.bool,
                 ssl_inbound_inspection: _builtins.str):
        """
        :param _builtins.bool ssl_forward_proxy: The SslForwardProxy param.
        :param _builtins.str ssl_inbound_inspection: add the certificate name for SSL inbound inspection.
        """
        pulumi.set(__self__, "ssl_forward_proxy", ssl_forward_proxy)
        pulumi.set(__self__, "ssl_inbound_inspection", ssl_inbound_inspection)

    @_builtins.property
    @pulumi.getter(name="sslForwardProxy")
    def ssl_forward_proxy(self) -> _builtins.bool:
        """
        The SslForwardProxy param.
        """
        return pulumi.get(self, "ssl_forward_proxy")

    @_builtins.property
    @pulumi.getter(name="sslInboundInspection")
    def ssl_inbound_inspection(self) -> _builtins.str:
        """
        add the certificate name for SSL inbound inspection.
        """
        return pulumi.get(self, "ssl_inbound_inspection")


@pulumi.output_type
class GetDeviceAvailableLicensessResult(dict):
    def __init__(__self__, *,
                 authcode: _builtins.str,
                 expires: _builtins.str,
                 feature: _builtins.str,
                 issued: _builtins.str):
        """
        :param _builtins.str authcode: The Authcode param.
        :param _builtins.str expires: The Expires param.
        :param _builtins.str feature: The Feature param.
        :param _builtins.str issued: The Issued param.
        """
        pulumi.set(__self__, "authcode", authcode)
        pulumi.set(__self__, "expires", expires)
        pulumi.set(__self__, "feature", feature)
        pulumi.set(__self__, "issued", issued)

    @_builtins.property
    @pulumi.getter
    def authcode(self) -> _builtins.str:
        """
        The Authcode param.
        """
        return pulumi.get(self, "authcode")

    @_builtins.property
    @pulumi.getter
    def expires(self) -> _builtins.str:
        """
        The Expires param.
        """
        return pulumi.get(self, "expires")

    @_builtins.property
    @pulumi.getter
    def feature(self) -> _builtins.str:
        """
        The Feature param.
        """
        return pulumi.get(self, "feature")

    @_builtins.property
    @pulumi.getter
    def issued(self) -> _builtins.str:
        """
        The Issued param.
        """
        return pulumi.get(self, "issued")


@pulumi.output_type
class GetDeviceInstalledLicenseResult(dict):
    def __init__(__self__, *,
                 authcode: _builtins.str,
                 expired: _builtins.str,
                 expires: _builtins.str,
                 feature: _builtins.str,
                 issued: _builtins.str):
        """
        :param _builtins.str authcode: The Authcode param.
        :param _builtins.str expired: The Expired param.
        :param _builtins.str expires: The Expires param.
        :param _builtins.str feature: The Feature param.
        :param _builtins.str issued: The Issued param.
        """
        pulumi.set(__self__, "authcode", authcode)
        pulumi.set(__self__, "expired", expired)
        pulumi.set(__self__, "expires", expires)
        pulumi.set(__self__, "feature", feature)
        pulumi.set(__self__, "issued", issued)

    @_builtins.property
    @pulumi.getter
    def authcode(self) -> _builtins.str:
        """
        The Authcode param.
        """
        return pulumi.get(self, "authcode")

    @_builtins.property
    @pulumi.getter
    def expired(self) -> _builtins.str:
        """
        The Expired param.
        """
        return pulumi.get(self, "expired")

    @_builtins.property
    @pulumi.getter
    def expires(self) -> _builtins.str:
        """
        The Expires param.
        """
        return pulumi.get(self, "expires")

    @_builtins.property
    @pulumi.getter
    def feature(self) -> _builtins.str:
        """
        The Feature param.
        """
        return pulumi.get(self, "feature")

    @_builtins.property
    @pulumi.getter
    def issued(self) -> _builtins.str:
        """
        The Issued param.
        """
        return pulumi.get(self, "issued")


@pulumi.output_type
class GetDeviceListDataResult(dict):
    def __init__(__self__, *,
                 anti_virus_version: _builtins.str,
                 app_release_date: _builtins.str,
                 app_version: _builtins.str,
                 av_release_date: _builtins.str,
                 available_licensesses: Sequence['outputs.GetDeviceListDataAvailableLicensessResult'],
                 connected_since: _builtins.str,
                 dev_cert_detail: _builtins.str,
                 dev_cert_expiry_date: _builtins.str,
                 family: _builtins.str,
                 gp_client_verion: _builtins.str,
                 gp_data_version: _builtins.str,
                 ha_peer_serial: _builtins.str,
                 ha_peer_state: _builtins.str,
                 ha_state: _builtins.str,
                 hostname: _builtins.str,
                 id: _builtins.str,
                 installed_licenses: Sequence['outputs.GetDeviceListDataInstalledLicenseResult'],
                 iot_release_date: _builtins.str,
                 iot_version: _builtins.str,
                 ip_address: _builtins.str,
                 ip_v6_address: _builtins.str,
                 is_connected: _builtins.bool,
                 license_match: _builtins.bool,
                 log_db_version: _builtins.str,
                 mac_address: _builtins.str,
                 model: _builtins.str,
                 software_version: _builtins.str,
                 threat_release_date: _builtins.str,
                 threat_version: _builtins.str,
                 uptime: _builtins.str,
                 url_db_type: _builtins.str,
                 url_db_ver: _builtins.str,
                 vm_state: _builtins.str,
                 wf_release_date: _builtins.str,
                 wf_ver: _builtins.str):
        """
        :param _builtins.str anti_virus_version: The AntiVirusVersion param.
        :param _builtins.str app_release_date: The AppReleaseDate param.
        :param _builtins.str app_version: The AppVersion param.
        :param _builtins.str av_release_date: The AvReleaseDate param.
        :param Sequence['GetDeviceListDataAvailableLicensessArgs'] available_licensesses: The AvailableLicensess param.
        :param _builtins.str connected_since: The ConnectedSince param.
        :param _builtins.str dev_cert_detail: The DevCertDetail param.
        :param _builtins.str dev_cert_expiry_date: The DevCertExpiryDate param.
        :param _builtins.str family: The Family param.
        :param _builtins.str gp_client_verion: The GpClientVerion param.
        :param _builtins.str gp_data_version: The GpDataVersion param.
        :param _builtins.str ha_peer_serial: The HaPeerSerial param.
        :param _builtins.str ha_peer_state: The HaPeerState param.
        :param _builtins.str ha_state: The HaState param.
        :param _builtins.str hostname: The Hostname param.
        :param _builtins.str id: The Id param.
        :param Sequence['GetDeviceListDataInstalledLicenseArgs'] installed_licenses: The InstalledLicenses param.
        :param _builtins.str iot_release_date: The IotReleaseDate param.
        :param _builtins.str iot_version: The IotVersion param.
        :param _builtins.str ip_address: The IpAddress param.
        :param _builtins.str ip_v6_address: The IpV6Address param.
        :param _builtins.bool is_connected: The IsConnected param.
        :param _builtins.bool license_match: The LicenseMatch param.
        :param _builtins.str log_db_version: The LogDbVersion param.
        :param _builtins.str mac_address: The MacAddress param.
        :param _builtins.str model: The Model param.
        :param _builtins.str software_version: The SoftwareVersion param.
        :param _builtins.str threat_release_date: The ThreatReleaseDate param.
        :param _builtins.str threat_version: The ThreatVersion param.
        :param _builtins.str uptime: The Uptime param.
        :param _builtins.str url_db_type: The UrlDbType param.
        :param _builtins.str url_db_ver: The UrlDbVer param.
        :param _builtins.str vm_state: The VmState param.
        :param _builtins.str wf_release_date: The WfReleaseDate param.
        :param _builtins.str wf_ver: The WfVer param.
        """
        pulumi.set(__self__, "anti_virus_version", anti_virus_version)
        pulumi.set(__self__, "app_release_date", app_release_date)
        pulumi.set(__self__, "app_version", app_version)
        pulumi.set(__self__, "av_release_date", av_release_date)
        pulumi.set(__self__, "available_licensesses", available_licensesses)
        pulumi.set(__self__, "connected_since", connected_since)
        pulumi.set(__self__, "dev_cert_detail", dev_cert_detail)
        pulumi.set(__self__, "dev_cert_expiry_date", dev_cert_expiry_date)
        pulumi.set(__self__, "family", family)
        pulumi.set(__self__, "gp_client_verion", gp_client_verion)
        pulumi.set(__self__, "gp_data_version", gp_data_version)
        pulumi.set(__self__, "ha_peer_serial", ha_peer_serial)
        pulumi.set(__self__, "ha_peer_state", ha_peer_state)
        pulumi.set(__self__, "ha_state", ha_state)
        pulumi.set(__self__, "hostname", hostname)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "installed_licenses", installed_licenses)
        pulumi.set(__self__, "iot_release_date", iot_release_date)
        pulumi.set(__self__, "iot_version", iot_version)
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "ip_v6_address", ip_v6_address)
        pulumi.set(__self__, "is_connected", is_connected)
        pulumi.set(__self__, "license_match", license_match)
        pulumi.set(__self__, "log_db_version", log_db_version)
        pulumi.set(__self__, "mac_address", mac_address)
        pulumi.set(__self__, "model", model)
        pulumi.set(__self__, "software_version", software_version)
        pulumi.set(__self__, "threat_release_date", threat_release_date)
        pulumi.set(__self__, "threat_version", threat_version)
        pulumi.set(__self__, "uptime", uptime)
        pulumi.set(__self__, "url_db_type", url_db_type)
        pulumi.set(__self__, "url_db_ver", url_db_ver)
        pulumi.set(__self__, "vm_state", vm_state)
        pulumi.set(__self__, "wf_release_date", wf_release_date)
        pulumi.set(__self__, "wf_ver", wf_ver)

    @_builtins.property
    @pulumi.getter(name="antiVirusVersion")
    def anti_virus_version(self) -> _builtins.str:
        """
        The AntiVirusVersion param.
        """
        return pulumi.get(self, "anti_virus_version")

    @_builtins.property
    @pulumi.getter(name="appReleaseDate")
    def app_release_date(self) -> _builtins.str:
        """
        The AppReleaseDate param.
        """
        return pulumi.get(self, "app_release_date")

    @_builtins.property
    @pulumi.getter(name="appVersion")
    def app_version(self) -> _builtins.str:
        """
        The AppVersion param.
        """
        return pulumi.get(self, "app_version")

    @_builtins.property
    @pulumi.getter(name="avReleaseDate")
    def av_release_date(self) -> _builtins.str:
        """
        The AvReleaseDate param.
        """
        return pulumi.get(self, "av_release_date")

    @_builtins.property
    @pulumi.getter(name="availableLicensesses")
    def available_licensesses(self) -> Sequence['outputs.GetDeviceListDataAvailableLicensessResult']:
        """
        The AvailableLicensess param.
        """
        return pulumi.get(self, "available_licensesses")

    @_builtins.property
    @pulumi.getter(name="connectedSince")
    def connected_since(self) -> _builtins.str:
        """
        The ConnectedSince param.
        """
        return pulumi.get(self, "connected_since")

    @_builtins.property
    @pulumi.getter(name="devCertDetail")
    def dev_cert_detail(self) -> _builtins.str:
        """
        The DevCertDetail param.
        """
        return pulumi.get(self, "dev_cert_detail")

    @_builtins.property
    @pulumi.getter(name="devCertExpiryDate")
    def dev_cert_expiry_date(self) -> _builtins.str:
        """
        The DevCertExpiryDate param.
        """
        return pulumi.get(self, "dev_cert_expiry_date")

    @_builtins.property
    @pulumi.getter
    def family(self) -> _builtins.str:
        """
        The Family param.
        """
        return pulumi.get(self, "family")

    @_builtins.property
    @pulumi.getter(name="gpClientVerion")
    def gp_client_verion(self) -> _builtins.str:
        """
        The GpClientVerion param.
        """
        return pulumi.get(self, "gp_client_verion")

    @_builtins.property
    @pulumi.getter(name="gpDataVersion")
    def gp_data_version(self) -> _builtins.str:
        """
        The GpDataVersion param.
        """
        return pulumi.get(self, "gp_data_version")

    @_builtins.property
    @pulumi.getter(name="haPeerSerial")
    def ha_peer_serial(self) -> _builtins.str:
        """
        The HaPeerSerial param.
        """
        return pulumi.get(self, "ha_peer_serial")

    @_builtins.property
    @pulumi.getter(name="haPeerState")
    def ha_peer_state(self) -> _builtins.str:
        """
        The HaPeerState param.
        """
        return pulumi.get(self, "ha_peer_state")

    @_builtins.property
    @pulumi.getter(name="haState")
    def ha_state(self) -> _builtins.str:
        """
        The HaState param.
        """
        return pulumi.get(self, "ha_state")

    @_builtins.property
    @pulumi.getter
    def hostname(self) -> _builtins.str:
        """
        The Hostname param.
        """
        return pulumi.get(self, "hostname")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="installedLicenses")
    def installed_licenses(self) -> Sequence['outputs.GetDeviceListDataInstalledLicenseResult']:
        """
        The InstalledLicenses param.
        """
        return pulumi.get(self, "installed_licenses")

    @_builtins.property
    @pulumi.getter(name="iotReleaseDate")
    def iot_release_date(self) -> _builtins.str:
        """
        The IotReleaseDate param.
        """
        return pulumi.get(self, "iot_release_date")

    @_builtins.property
    @pulumi.getter(name="iotVersion")
    def iot_version(self) -> _builtins.str:
        """
        The IotVersion param.
        """
        return pulumi.get(self, "iot_version")

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> _builtins.str:
        """
        The IpAddress param.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter(name="ipV6Address")
    def ip_v6_address(self) -> _builtins.str:
        """
        The IpV6Address param.
        """
        return pulumi.get(self, "ip_v6_address")

    @_builtins.property
    @pulumi.getter(name="isConnected")
    def is_connected(self) -> _builtins.bool:
        """
        The IsConnected param.
        """
        return pulumi.get(self, "is_connected")

    @_builtins.property
    @pulumi.getter(name="licenseMatch")
    def license_match(self) -> _builtins.bool:
        """
        The LicenseMatch param.
        """
        return pulumi.get(self, "license_match")

    @_builtins.property
    @pulumi.getter(name="logDbVersion")
    def log_db_version(self) -> _builtins.str:
        """
        The LogDbVersion param.
        """
        return pulumi.get(self, "log_db_version")

    @_builtins.property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> _builtins.str:
        """
        The MacAddress param.
        """
        return pulumi.get(self, "mac_address")

    @_builtins.property
    @pulumi.getter
    def model(self) -> _builtins.str:
        """
        The Model param.
        """
        return pulumi.get(self, "model")

    @_builtins.property
    @pulumi.getter(name="softwareVersion")
    def software_version(self) -> _builtins.str:
        """
        The SoftwareVersion param.
        """
        return pulumi.get(self, "software_version")

    @_builtins.property
    @pulumi.getter(name="threatReleaseDate")
    def threat_release_date(self) -> _builtins.str:
        """
        The ThreatReleaseDate param.
        """
        return pulumi.get(self, "threat_release_date")

    @_builtins.property
    @pulumi.getter(name="threatVersion")
    def threat_version(self) -> _builtins.str:
        """
        The ThreatVersion param.
        """
        return pulumi.get(self, "threat_version")

    @_builtins.property
    @pulumi.getter
    def uptime(self) -> _builtins.str:
        """
        The Uptime param.
        """
        return pulumi.get(self, "uptime")

    @_builtins.property
    @pulumi.getter(name="urlDbType")
    def url_db_type(self) -> _builtins.str:
        """
        The UrlDbType param.
        """
        return pulumi.get(self, "url_db_type")

    @_builtins.property
    @pulumi.getter(name="urlDbVer")
    def url_db_ver(self) -> _builtins.str:
        """
        The UrlDbVer param.
        """
        return pulumi.get(self, "url_db_ver")

    @_builtins.property
    @pulumi.getter(name="vmState")
    def vm_state(self) -> _builtins.str:
        """
        The VmState param.
        """
        return pulumi.get(self, "vm_state")

    @_builtins.property
    @pulumi.getter(name="wfReleaseDate")
    def wf_release_date(self) -> _builtins.str:
        """
        The WfReleaseDate param.
        """
        return pulumi.get(self, "wf_release_date")

    @_builtins.property
    @pulumi.getter(name="wfVer")
    def wf_ver(self) -> _builtins.str:
        """
        The WfVer param.
        """
        return pulumi.get(self, "wf_ver")


@pulumi.output_type
class GetDeviceListDataAvailableLicensessResult(dict):
    def __init__(__self__, *,
                 authcode: _builtins.str,
                 expires: _builtins.str,
                 feature: _builtins.str,
                 issued: _builtins.str):
        """
        :param _builtins.str authcode: The Authcode param.
        :param _builtins.str expires: The Expires param.
        :param _builtins.str feature: The Feature param.
        :param _builtins.str issued: The Issued param.
        """
        pulumi.set(__self__, "authcode", authcode)
        pulumi.set(__self__, "expires", expires)
        pulumi.set(__self__, "feature", feature)
        pulumi.set(__self__, "issued", issued)

    @_builtins.property
    @pulumi.getter
    def authcode(self) -> _builtins.str:
        """
        The Authcode param.
        """
        return pulumi.get(self, "authcode")

    @_builtins.property
    @pulumi.getter
    def expires(self) -> _builtins.str:
        """
        The Expires param.
        """
        return pulumi.get(self, "expires")

    @_builtins.property
    @pulumi.getter
    def feature(self) -> _builtins.str:
        """
        The Feature param.
        """
        return pulumi.get(self, "feature")

    @_builtins.property
    @pulumi.getter
    def issued(self) -> _builtins.str:
        """
        The Issued param.
        """
        return pulumi.get(self, "issued")


@pulumi.output_type
class GetDeviceListDataInstalledLicenseResult(dict):
    def __init__(__self__, *,
                 authcode: _builtins.str,
                 expired: _builtins.str,
                 expires: _builtins.str,
                 feature: _builtins.str,
                 issued: _builtins.str):
        """
        :param _builtins.str authcode: The Authcode param.
        :param _builtins.str expired: The Expired param.
        :param _builtins.str expires: The Expires param.
        :param _builtins.str feature: The Feature param.
        :param _builtins.str issued: The Issued param.
        """
        pulumi.set(__self__, "authcode", authcode)
        pulumi.set(__self__, "expired", expired)
        pulumi.set(__self__, "expires", expires)
        pulumi.set(__self__, "feature", feature)
        pulumi.set(__self__, "issued", issued)

    @_builtins.property
    @pulumi.getter
    def authcode(self) -> _builtins.str:
        """
        The Authcode param.
        """
        return pulumi.get(self, "authcode")

    @_builtins.property
    @pulumi.getter
    def expired(self) -> _builtins.str:
        """
        The Expired param.
        """
        return pulumi.get(self, "expired")

    @_builtins.property
    @pulumi.getter
    def expires(self) -> _builtins.str:
        """
        The Expires param.
        """
        return pulumi.get(self, "expires")

    @_builtins.property
    @pulumi.getter
    def feature(self) -> _builtins.str:
        """
        The Feature param.
        """
        return pulumi.get(self, "feature")

    @_builtins.property
    @pulumi.getter
    def issued(self) -> _builtins.str:
        """
        The Issued param.
        """
        return pulumi.get(self, "issued")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsResult(dict):
    def __init__(__self__, *,
                 dns_security_categories: Sequence['outputs.GetDnsSecurityProfileBotnetDomainsDnsSecurityCategoryResult'],
                 lists: Sequence['outputs.GetDnsSecurityProfileBotnetDomainsListResult'],
                 sinkhole: 'outputs.GetDnsSecurityProfileBotnetDomainsSinkholeResult',
                 whitelists: Sequence['outputs.GetDnsSecurityProfileBotnetDomainsWhitelistResult']):
        """
        :param Sequence['GetDnsSecurityProfileBotnetDomainsDnsSecurityCategoryArgs'] dns_security_categories: The DnsSecurityCategories param.
        :param Sequence['GetDnsSecurityProfileBotnetDomainsListArgs'] lists: The Lists param.
        :param 'GetDnsSecurityProfileBotnetDomainsSinkholeArgs' sinkhole: The Sinkhole param.
        :param Sequence['GetDnsSecurityProfileBotnetDomainsWhitelistArgs'] whitelists: The Whitelists param.
        """
        pulumi.set(__self__, "dns_security_categories", dns_security_categories)
        pulumi.set(__self__, "lists", lists)
        pulumi.set(__self__, "sinkhole", sinkhole)
        pulumi.set(__self__, "whitelists", whitelists)

    @_builtins.property
    @pulumi.getter(name="dnsSecurityCategories")
    def dns_security_categories(self) -> Sequence['outputs.GetDnsSecurityProfileBotnetDomainsDnsSecurityCategoryResult']:
        """
        The DnsSecurityCategories param.
        """
        return pulumi.get(self, "dns_security_categories")

    @_builtins.property
    @pulumi.getter
    def lists(self) -> Sequence['outputs.GetDnsSecurityProfileBotnetDomainsListResult']:
        """
        The Lists param.
        """
        return pulumi.get(self, "lists")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> 'outputs.GetDnsSecurityProfileBotnetDomainsSinkholeResult':
        """
        The Sinkhole param.
        """
        return pulumi.get(self, "sinkhole")

    @_builtins.property
    @pulumi.getter
    def whitelists(self) -> Sequence['outputs.GetDnsSecurityProfileBotnetDomainsWhitelistResult']:
        """
        The Whitelists param.
        """
        return pulumi.get(self, "whitelists")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsDnsSecurityCategoryResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 log_level: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        :param _builtins.str log_level: The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "log_level", log_level)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> _builtins.str:
        """
        The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        """
        return pulumi.get(self, "log_level")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsListResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetDnsSecurityProfileBotnetDomainsListActionResult',
                 name: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param 'GetDnsSecurityProfileBotnetDomainsListActionArgs' action: The Action param.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetDnsSecurityProfileBotnetDomainsListActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsListActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block: _builtins.bool,
                 sinkhole: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param _builtins.bool block: The Block param.
        :param _builtins.bool sinkhole: The Sinkhole param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block", block)
        pulumi.set(__self__, "sinkhole", sinkhole)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter
    def block(self) -> _builtins.bool:
        """
        The Block param.
        """
        return pulumi.get(self, "block")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> _builtins.bool:
        """
        The Sinkhole param.
        """
        return pulumi.get(self, "sinkhole")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsSinkholeResult(dict):
    def __init__(__self__, *,
                 ipv4_address: _builtins.str,
                 ipv6_address: _builtins.str):
        """
        :param _builtins.str ipv4_address: The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        :param _builtins.str ipv6_address: The Ipv6Address param. String must be one of these: `"::1"`.
        """
        pulumi.set(__self__, "ipv4_address", ipv4_address)
        pulumi.set(__self__, "ipv6_address", ipv6_address)

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> _builtins.str:
        """
        The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        """
        return pulumi.get(self, "ipv4_address")

    @_builtins.property
    @pulumi.getter(name="ipv6Address")
    def ipv6_address(self) -> _builtins.str:
        """
        The Ipv6Address param. String must be one of these: `"::1"`.
        """
        return pulumi.get(self, "ipv6_address")


@pulumi.output_type
class GetDnsSecurityProfileBotnetDomainsWhitelistResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetDnsSecurityProfileListDataResult(dict):
    def __init__(__self__, *,
                 botnet_domains: 'outputs.GetDnsSecurityProfileListDataBotnetDomainsResult',
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param 'GetDnsSecurityProfileListDataBotnetDomainsArgs' botnet_domains: The BotnetDomains param.
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "botnet_domains", botnet_domains)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="botnetDomains")
    def botnet_domains(self) -> 'outputs.GetDnsSecurityProfileListDataBotnetDomainsResult':
        """
        The BotnetDomains param.
        """
        return pulumi.get(self, "botnet_domains")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsResult(dict):
    def __init__(__self__, *,
                 dns_security_categories: Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategoryResult'],
                 lists: Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsListResult'],
                 sinkhole: 'outputs.GetDnsSecurityProfileListDataBotnetDomainsSinkholeResult',
                 whitelists: Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsWhitelistResult']):
        """
        :param Sequence['GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategoryArgs'] dns_security_categories: The DnsSecurityCategories param.
        :param Sequence['GetDnsSecurityProfileListDataBotnetDomainsListArgs'] lists: The Lists param.
        :param 'GetDnsSecurityProfileListDataBotnetDomainsSinkholeArgs' sinkhole: The Sinkhole param.
        :param Sequence['GetDnsSecurityProfileListDataBotnetDomainsWhitelistArgs'] whitelists: The Whitelists param.
        """
        pulumi.set(__self__, "dns_security_categories", dns_security_categories)
        pulumi.set(__self__, "lists", lists)
        pulumi.set(__self__, "sinkhole", sinkhole)
        pulumi.set(__self__, "whitelists", whitelists)

    @_builtins.property
    @pulumi.getter(name="dnsSecurityCategories")
    def dns_security_categories(self) -> Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategoryResult']:
        """
        The DnsSecurityCategories param.
        """
        return pulumi.get(self, "dns_security_categories")

    @_builtins.property
    @pulumi.getter
    def lists(self) -> Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsListResult']:
        """
        The Lists param.
        """
        return pulumi.get(self, "lists")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> 'outputs.GetDnsSecurityProfileListDataBotnetDomainsSinkholeResult':
        """
        The Sinkhole param.
        """
        return pulumi.get(self, "sinkhole")

    @_builtins.property
    @pulumi.getter
    def whitelists(self) -> Sequence['outputs.GetDnsSecurityProfileListDataBotnetDomainsWhitelistResult']:
        """
        The Whitelists param.
        """
        return pulumi.get(self, "whitelists")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsDnsSecurityCategoryResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 log_level: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        :param _builtins.str log_level: The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "log_level", log_level)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The Action param. String must be one of these: `"default"`, `"allow"`, `"block"`, `"sinkhole"`. Default: `"default"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="logLevel")
    def log_level(self) -> _builtins.str:
        """
        The LogLevel param. String must be one of these: `"default"`, `"none"`, `"low"`, `"informational"`, `"medium"`, `"high"`, `"critical"`. Default: `"default"`.
        """
        return pulumi.get(self, "log_level")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsListResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetDnsSecurityProfileListDataBotnetDomainsListActionResult',
                 name: _builtins.str,
                 packet_capture: _builtins.str):
        """
        :param 'GetDnsSecurityProfileListDataBotnetDomainsListActionArgs' action: The Action param.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetDnsSecurityProfileListDataBotnetDomainsListActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsListActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block: _builtins.bool,
                 sinkhole: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param _builtins.bool block: The Block param.
        :param _builtins.bool sinkhole: The Sinkhole param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block", block)
        pulumi.set(__self__, "sinkhole", sinkhole)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter
    def block(self) -> _builtins.bool:
        """
        The Block param.
        """
        return pulumi.get(self, "block")

    @_builtins.property
    @pulumi.getter
    def sinkhole(self) -> _builtins.bool:
        """
        The Sinkhole param.
        """
        return pulumi.get(self, "sinkhole")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsSinkholeResult(dict):
    def __init__(__self__, *,
                 ipv4_address: _builtins.str,
                 ipv6_address: _builtins.str):
        """
        :param _builtins.str ipv4_address: The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        :param _builtins.str ipv6_address: The Ipv6Address param. String must be one of these: `"::1"`.
        """
        pulumi.set(__self__, "ipv4_address", ipv4_address)
        pulumi.set(__self__, "ipv6_address", ipv6_address)

    @_builtins.property
    @pulumi.getter(name="ipv4Address")
    def ipv4_address(self) -> _builtins.str:
        """
        The Ipv4Address param. String must be one of these: `"127.0.0.1"`, `"pan-sinkhole-default-ip"`.
        """
        return pulumi.get(self, "ipv4_address")

    @_builtins.property
    @pulumi.getter(name="ipv6Address")
    def ipv6_address(self) -> _builtins.str:
        """
        The Ipv6Address param. String must be one of these: `"::1"`.
        """
        return pulumi.get(self, "ipv6_address")


@pulumi.output_type
class GetDnsSecurityProfileListDataBotnetDomainsWhitelistResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetDynamicUserGroupListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 filter: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param _builtins.str filter: tag-based filter. String length must not exceed 2047 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param Sequence[_builtins.str] tags: Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "filter", filter)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def filter(self) -> _builtins.str:
        """
        tag-based filter. String length must not exceed 2047 characters.
        """
        return pulumi.get(self, "filter")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for dynamic user group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetExternalDynamicListListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 type: 'outputs.GetExternalDynamicListListDataTypeResult'):
        """
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param 'GetExternalDynamicListListDataTypeArgs' type: The Type param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'outputs.GetExternalDynamicListListDataTypeResult':
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetExternalDynamicListListDataTypeResult(dict):
    def __init__(__self__, *,
                 domain: 'outputs.GetExternalDynamicListListDataTypeDomainResult',
                 imei: 'outputs.GetExternalDynamicListListDataTypeImeiResult',
                 imsi: 'outputs.GetExternalDynamicListListDataTypeImsiResult',
                 ip: 'outputs.GetExternalDynamicListListDataTypeIpResult',
                 predefined_ip: 'outputs.GetExternalDynamicListListDataTypePredefinedIpResult',
                 predefined_url: 'outputs.GetExternalDynamicListListDataTypePredefinedUrlResult',
                 url: 'outputs.GetExternalDynamicListListDataTypeUrlResult'):
        """
        :param 'GetExternalDynamicListListDataTypeDomainArgs' domain: The Domain param.
        :param 'GetExternalDynamicListListDataTypeImeiArgs' imei: The Imei param.
        :param 'GetExternalDynamicListListDataTypeImsiArgs' imsi: The Imsi param.
        :param 'GetExternalDynamicListListDataTypeIpArgs' ip: The Ip param.
        :param 'GetExternalDynamicListListDataTypePredefinedIpArgs' predefined_ip: The PredefinedIp param.
        :param 'GetExternalDynamicListListDataTypePredefinedUrlArgs' predefined_url: The PredefinedUrl param.
        :param 'GetExternalDynamicListListDataTypeUrlArgs' url: The Url param.
        """
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "imei", imei)
        pulumi.set(__self__, "imsi", imsi)
        pulumi.set(__self__, "ip", ip)
        pulumi.set(__self__, "predefined_ip", predefined_ip)
        pulumi.set(__self__, "predefined_url", predefined_url)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainResult':
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiResult':
        """
        The Imei param.
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def imsi(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiResult':
        """
        The Imsi param.
        """
        return pulumi.get(self, "imsi")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> 'outputs.GetExternalDynamicListListDataTypeIpResult':
        """
        The Ip param.
        """
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter(name="predefinedIp")
    def predefined_ip(self) -> 'outputs.GetExternalDynamicListListDataTypePredefinedIpResult':
        """
        The PredefinedIp param.
        """
        return pulumi.get(self, "predefined_ip")

    @_builtins.property
    @pulumi.getter(name="predefinedUrl")
    def predefined_url(self) -> 'outputs.GetExternalDynamicListListDataTypePredefinedUrlResult':
        """
        The PredefinedUrl param.
        """
        return pulumi.get(self, "predefined_url")

    @_builtins.property
    @pulumi.getter
    def url(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlResult':
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 domain_auth: 'outputs.GetExternalDynamicListListDataTypeDomainDomainAuthResult',
                 exception_lists: Sequence[_builtins.str],
                 expand_domain: _builtins.bool,
                 recurring: 'outputs.GetExternalDynamicListListDataTypeDomainRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListListDataTypeDomainDomainAuthArgs' domain_auth: The DomainAuth param.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.bool expand_domain: Enable/Disable expand domain. Default: `false`.
        :param 'GetExternalDynamicListListDataTypeDomainRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "domain_auth", domain_auth)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "expand_domain", expand_domain)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainAuth")
    def domain_auth(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainDomainAuthResult':
        """
        The DomainAuth param.
        """
        return pulumi.get(self, "domain_auth")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="expandDomain")
    def expand_domain(self) -> _builtins.bool:
        """
        Enable/Disable expand domain. Default: `false`.
        """
        return pulumi.get(self, "expand_domain")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainDomainAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListListDataTypeDomainRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListListDataTypeDomainRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListListDataTypeDomainRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListListDataTypeDomainRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListListDataTypeDomainRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListListDataTypeDomainRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListListDataTypeDomainRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListListDataTypeDomainRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 imei_auth: 'outputs.GetExternalDynamicListListDataTypeImeiImeiAuthResult',
                 recurring: 'outputs.GetExternalDynamicListListDataTypeImeiRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        :param 'GetExternalDynamicListListDataTypeImeiImeiAuthArgs' imei_auth: The ImeiAuth param.
        :param 'GetExternalDynamicListListDataTypeImeiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "imei_auth", imei_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imeiAuth")
    def imei_auth(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiImeiAuthResult':
        """
        The ImeiAuth param.
        """
        return pulumi.get(self, "imei_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiImeiAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListListDataTypeImeiRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListListDataTypeImeiRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListListDataTypeImeiRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListListDataTypeImeiRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListListDataTypeImeiRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListListDataTypeImeiRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListListDataTypeImeiRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImeiRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 imsi_auth: 'outputs.GetExternalDynamicListListDataTypeImsiImsiAuthResult',
                 recurring: 'outputs.GetExternalDynamicListListDataTypeImsiRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        :param 'GetExternalDynamicListListDataTypeImsiImsiAuthArgs' imsi_auth: The ImsiAuth param.
        :param 'GetExternalDynamicListListDataTypeImsiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "imsi_auth", imsi_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imsiAuth")
    def imsi_auth(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiImsiAuthResult':
        """
        The ImsiAuth param.
        """
        return pulumi.get(self, "imsi_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiImsiAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListListDataTypeImsiRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListListDataTypeImsiRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListListDataTypeImsiRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListListDataTypeImsiRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListListDataTypeImsiRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListListDataTypeImsiRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListListDataTypeImsiRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListListDataTypeImsiRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 ip_auth: 'outputs.GetExternalDynamicListListDataTypeIpIpAuthResult',
                 recurring: 'outputs.GetExternalDynamicListListDataTypeIpRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListListDataTypeIpIpAuthArgs' ip_auth: The IpAuth param.
        :param 'GetExternalDynamicListListDataTypeIpRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "ip_auth", ip_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="ipAuth")
    def ip_auth(self) -> 'outputs.GetExternalDynamicListListDataTypeIpIpAuthResult':
        """
        The IpAuth param.
        """
        return pulumi.get(self, "ip_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListListDataTypeIpRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpIpAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListListDataTypeIpRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListListDataTypeIpRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListListDataTypeIpRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListListDataTypeIpRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListListDataTypeIpRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListListDataTypeIpRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListListDataTypeIpRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListListDataTypeIpRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListListDataTypeIpRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListListDataTypeIpRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListListDataTypePredefinedIpResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 url: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.str url: The Url param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypePredefinedUrlResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 url: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.str url: The Url param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 recurring: 'outputs.GetExternalDynamicListListDataTypeUrlRecurringResult',
                 url: _builtins.str,
                 url_auth: 'outputs.GetExternalDynamicListListDataTypeUrlUrlAuthResult'):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListListDataTypeUrlRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        :param 'GetExternalDynamicListListDataTypeUrlUrlAuthArgs' url_auth: The UrlAuth param.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)
        pulumi.set(__self__, "url_auth", url_auth)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter(name="urlAuth")
    def url_auth(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlUrlAuthResult':
        """
        The UrlAuth param.
        """
        return pulumi.get(self, "url_auth")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListListDataTypeUrlRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListListDataTypeUrlRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListListDataTypeUrlRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListListDataTypeUrlRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListListDataTypeUrlRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListListDataTypeUrlRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListListDataTypeUrlRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListListDataTypeUrlUrlAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListTypeResult(dict):
    def __init__(__self__, *,
                 domain: 'outputs.GetExternalDynamicListTypeDomainResult',
                 imei: 'outputs.GetExternalDynamicListTypeImeiResult',
                 imsi: 'outputs.GetExternalDynamicListTypeImsiResult',
                 ip: 'outputs.GetExternalDynamicListTypeIpResult',
                 predefined_ip: 'outputs.GetExternalDynamicListTypePredefinedIpResult',
                 predefined_url: 'outputs.GetExternalDynamicListTypePredefinedUrlResult',
                 url: 'outputs.GetExternalDynamicListTypeUrlResult'):
        """
        :param 'GetExternalDynamicListTypeDomainArgs' domain: The Domain param.
        :param 'GetExternalDynamicListTypeImeiArgs' imei: The Imei param.
        :param 'GetExternalDynamicListTypeImsiArgs' imsi: The Imsi param.
        :param 'GetExternalDynamicListTypeIpArgs' ip: The Ip param.
        :param 'GetExternalDynamicListTypePredefinedIpArgs' predefined_ip: The PredefinedIp param.
        :param 'GetExternalDynamicListTypePredefinedUrlArgs' predefined_url: The PredefinedUrl param.
        :param 'GetExternalDynamicListTypeUrlArgs' url: The Url param.
        """
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "imei", imei)
        pulumi.set(__self__, "imsi", imsi)
        pulumi.set(__self__, "ip", ip)
        pulumi.set(__self__, "predefined_ip", predefined_ip)
        pulumi.set(__self__, "predefined_url", predefined_url)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def domain(self) -> 'outputs.GetExternalDynamicListTypeDomainResult':
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> 'outputs.GetExternalDynamicListTypeImeiResult':
        """
        The Imei param.
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def imsi(self) -> 'outputs.GetExternalDynamicListTypeImsiResult':
        """
        The Imsi param.
        """
        return pulumi.get(self, "imsi")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> 'outputs.GetExternalDynamicListTypeIpResult':
        """
        The Ip param.
        """
        return pulumi.get(self, "ip")

    @_builtins.property
    @pulumi.getter(name="predefinedIp")
    def predefined_ip(self) -> 'outputs.GetExternalDynamicListTypePredefinedIpResult':
        """
        The PredefinedIp param.
        """
        return pulumi.get(self, "predefined_ip")

    @_builtins.property
    @pulumi.getter(name="predefinedUrl")
    def predefined_url(self) -> 'outputs.GetExternalDynamicListTypePredefinedUrlResult':
        """
        The PredefinedUrl param.
        """
        return pulumi.get(self, "predefined_url")

    @_builtins.property
    @pulumi.getter
    def url(self) -> 'outputs.GetExternalDynamicListTypeUrlResult':
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeDomainResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 domain_auth: 'outputs.GetExternalDynamicListTypeDomainDomainAuthResult',
                 exception_lists: Sequence[_builtins.str],
                 expand_domain: _builtins.bool,
                 recurring: 'outputs.GetExternalDynamicListTypeDomainRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListTypeDomainDomainAuthArgs' domain_auth: The DomainAuth param.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.bool expand_domain: Enable/Disable expand domain. Default: `false`.
        :param 'GetExternalDynamicListTypeDomainRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "domain_auth", domain_auth)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "expand_domain", expand_domain)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="domainAuth")
    def domain_auth(self) -> 'outputs.GetExternalDynamicListTypeDomainDomainAuthResult':
        """
        The DomainAuth param.
        """
        return pulumi.get(self, "domain_auth")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="expandDomain")
    def expand_domain(self) -> _builtins.bool:
        """
        Enable/Disable expand domain. Default: `false`.
        """
        return pulumi.get(self, "expand_domain")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListTypeDomainRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeDomainDomainAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListTypeDomainRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListTypeDomainRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListTypeDomainRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListTypeDomainRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListTypeDomainRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListTypeDomainRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListTypeDomainRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListTypeDomainRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListTypeDomainRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListTypeDomainRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListTypeDomainRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListTypeDomainRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListTypeDomainRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListTypeImeiResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 imei_auth: 'outputs.GetExternalDynamicListTypeImeiImeiAuthResult',
                 recurring: 'outputs.GetExternalDynamicListTypeImeiRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        :param 'GetExternalDynamicListTypeImeiImeiAuthArgs' imei_auth: The ImeiAuth param.
        :param 'GetExternalDynamicListTypeImeiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "imei_auth", imei_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 32 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imeiAuth")
    def imei_auth(self) -> 'outputs.GetExternalDynamicListTypeImeiImeiAuthResult':
        """
        The ImeiAuth param.
        """
        return pulumi.get(self, "imei_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListTypeImeiRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeImeiImeiAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListTypeImeiRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListTypeImeiRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListTypeImeiRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListTypeImeiRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListTypeImeiRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListTypeImeiRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListTypeImeiRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListTypeImeiRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListTypeImeiRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListTypeImeiRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListTypeImeiRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListTypeImeiRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListTypeImeiRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListTypeImsiResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 imsi_auth: 'outputs.GetExternalDynamicListTypeImsiImsiAuthResult',
                 recurring: 'outputs.GetExternalDynamicListTypeImsiRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        :param 'GetExternalDynamicListTypeImsiImsiAuthArgs' imsi_auth: The ImsiAuth param.
        :param 'GetExternalDynamicListTypeImsiRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "imsi_auth", imsi_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 34 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="imsiAuth")
    def imsi_auth(self) -> 'outputs.GetExternalDynamicListTypeImsiImsiAuthResult':
        """
        The ImsiAuth param.
        """
        return pulumi.get(self, "imsi_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListTypeImsiRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeImsiImsiAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListTypeImsiRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListTypeImsiRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListTypeImsiRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListTypeImsiRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListTypeImsiRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListTypeImsiRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListTypeImsiRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListTypeImsiRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListTypeImsiRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListTypeImsiRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListTypeImsiRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListTypeImsiRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListTypeImsiRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListTypeIpResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 ip_auth: 'outputs.GetExternalDynamicListTypeIpIpAuthResult',
                 recurring: 'outputs.GetExternalDynamicListTypeIpRecurringResult',
                 url: _builtins.str):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListTypeIpIpAuthArgs' ip_auth: The IpAuth param.
        :param 'GetExternalDynamicListTypeIpRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "ip_auth", ip_auth)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter(name="ipAuth")
    def ip_auth(self) -> 'outputs.GetExternalDynamicListTypeIpIpAuthResult':
        """
        The IpAuth param.
        """
        return pulumi.get(self, "ip_auth")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListTypeIpRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeIpIpAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetExternalDynamicListTypeIpRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListTypeIpRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListTypeIpRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListTypeIpRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListTypeIpRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListTypeIpRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListTypeIpRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListTypeIpRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListTypeIpRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListTypeIpRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListTypeIpRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListTypeIpRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListTypeIpRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListTypePredefinedIpResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 url: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.str url: The Url param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypePredefinedUrlResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 url: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param _builtins.str url: The Url param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "url", url)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param.
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetExternalDynamicListTypeUrlResult(dict):
    def __init__(__self__, *,
                 certificate_profile: _builtins.str,
                 description: _builtins.str,
                 exception_lists: Sequence[_builtins.str],
                 recurring: 'outputs.GetExternalDynamicListTypeUrlRecurringResult',
                 url: _builtins.str,
                 url_auth: 'outputs.GetExternalDynamicListTypeUrlUrlAuthResult'):
        """
        :param _builtins.str certificate_profile: Profile for authenticating client certificates. Default: `"None"`.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param Sequence[_builtins.str] exception_lists: The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        :param 'GetExternalDynamicListTypeUrlRecurringArgs' recurring: The Recurring param.
        :param _builtins.str url: The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        :param 'GetExternalDynamicListTypeUrlUrlAuthArgs' url_auth: The UrlAuth param.
        """
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "exception_lists", exception_lists)
        pulumi.set(__self__, "recurring", recurring)
        pulumi.set(__self__, "url", url)
        pulumi.set(__self__, "url_auth", url_auth)

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates. Default: `"None"`.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="exceptionLists")
    def exception_lists(self) -> Sequence[_builtins.str]:
        """
        The ExceptionList param. Individual elements in this list are subject to additional validation. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "exception_lists")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetExternalDynamicListTypeUrlRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")

    @_builtins.property
    @pulumi.getter
    def url(self) -> _builtins.str:
        """
        The Url param. String length must not exceed 255 characters. Default: `"http://"`.
        """
        return pulumi.get(self, "url")

    @_builtins.property
    @pulumi.getter(name="urlAuth")
    def url_auth(self) -> 'outputs.GetExternalDynamicListTypeUrlUrlAuthResult':
        """
        The UrlAuth param.
        """
        return pulumi.get(self, "url_auth")


@pulumi.output_type
class GetExternalDynamicListTypeUrlRecurringResult(dict):
    def __init__(__self__, *,
                 daily: 'outputs.GetExternalDynamicListTypeUrlRecurringDailyResult',
                 five_minute: _builtins.bool,
                 hourly: _builtins.bool,
                 monthly: 'outputs.GetExternalDynamicListTypeUrlRecurringMonthlyResult',
                 weekly: 'outputs.GetExternalDynamicListTypeUrlRecurringWeeklyResult'):
        """
        :param 'GetExternalDynamicListTypeUrlRecurringDailyArgs' daily: The Daily param.
        :param _builtins.bool five_minute: The FiveMinute param.
        :param _builtins.bool hourly: The Hourly param.
        :param 'GetExternalDynamicListTypeUrlRecurringMonthlyArgs' monthly: The Monthly param.
        :param 'GetExternalDynamicListTypeUrlRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily", daily)
        pulumi.set(__self__, "five_minute", five_minute)
        pulumi.set(__self__, "hourly", hourly)
        pulumi.set(__self__, "monthly", monthly)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter
    def daily(self) -> 'outputs.GetExternalDynamicListTypeUrlRecurringDailyResult':
        """
        The Daily param.
        """
        return pulumi.get(self, "daily")

    @_builtins.property
    @pulumi.getter(name="fiveMinute")
    def five_minute(self) -> _builtins.bool:
        """
        The FiveMinute param.
        """
        return pulumi.get(self, "five_minute")

    @_builtins.property
    @pulumi.getter
    def hourly(self) -> _builtins.bool:
        """
        The Hourly param.
        """
        return pulumi.get(self, "hourly")

    @_builtins.property
    @pulumi.getter
    def monthly(self) -> 'outputs.GetExternalDynamicListTypeUrlRecurringMonthlyResult':
        """
        The Monthly param.
        """
        return pulumi.get(self, "monthly")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetExternalDynamicListTypeUrlRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetExternalDynamicListTypeUrlRecurringDailyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        pulumi.set(__self__, "at", at)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")


@pulumi.output_type
class GetExternalDynamicListTypeUrlRecurringMonthlyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_month: _builtins.int):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.int day_of_month: The DayOfMonth param. Value must be between 1 and 31.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_month", day_of_month)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfMonth")
    def day_of_month(self) -> _builtins.int:
        """
        The DayOfMonth param. Value must be between 1 and 31.
        """
        return pulumi.get(self, "day_of_month")


@pulumi.output_type
class GetExternalDynamicListTypeUrlRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 at: _builtins.str,
                 day_of_week: _builtins.str):
        """
        :param _builtins.str at: Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        :param _builtins.str day_of_week: The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        pulumi.set(__self__, "at", at)
        pulumi.set(__self__, "day_of_week", day_of_week)

    @_builtins.property
    @pulumi.getter
    def at(self) -> _builtins.str:
        """
        Time specification hh (e.g. 20). String length must be between 2 and 2 characters. String validation regex: `([01][0-9]|[2][0-3])`. Default: `"00"`.
        """
        return pulumi.get(self, "at")

    @_builtins.property
    @pulumi.getter(name="dayOfWeek")
    def day_of_week(self) -> _builtins.str:
        """
        The DayOfWeek param. String must be one of these: `"sunday"`, `"monday"`, `"tuesday"`, `"wednesday"`, `"thursday"`, `"friday"`, `"saturday"`.
        """
        return pulumi.get(self, "day_of_week")


@pulumi.output_type
class GetExternalDynamicListTypeUrlUrlAuthResult(dict):
    def __init__(__self__, *,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must be between 1 and 255 characters.
        """
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetFileBlockingProfileListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 rules: Sequence['outputs.GetFileBlockingProfileListDataRuleResult']):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: The Id param.
        :param _builtins.str name: The Name param.
        :param Sequence['GetFileBlockingProfileListDataRuleArgs'] rules: The Rules param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "rules", rules)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetFileBlockingProfileListDataRuleResult']:
        """
        The Rules param.
        """
        return pulumi.get(self, "rules")


@pulumi.output_type
class GetFileBlockingProfileListDataRuleResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 applications: Sequence[_builtins.str],
                 direction: _builtins.str,
                 file_types: Sequence[_builtins.str],
                 name: _builtins.str):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        :param Sequence[_builtins.str] applications: The Applications param. List must contain at least 1 elements.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        :param Sequence[_builtins.str] file_types: The FileTypes param. List must contain at least 1 elements.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "file_types", file_types)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The Applications param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Sequence[_builtins.str]:
        """
        The FileTypes param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetFileBlockingProfileRuleResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 applications: Sequence[_builtins.str],
                 direction: _builtins.str,
                 file_types: Sequence[_builtins.str],
                 name: _builtins.str):
        """
        :param _builtins.str action: The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        :param Sequence[_builtins.str] applications: The Applications param. List must contain at least 1 elements.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        :param Sequence[_builtins.str] file_types: The FileTypes param. List must contain at least 1 elements.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "file_types", file_types)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The Action param. String must be one of these: `"alert"`, `"block"`, `"continue"`. Default: `"alert"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The Applications param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`. Default: `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Sequence[_builtins.str]:
        """
        The FileTypes param. List must contain at least 1 elements.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetFolderListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 labels: Sequence[_builtins.str],
                 name: _builtins.str,
                 parent: _builtins.str,
                 snippets: Sequence[_builtins.str]):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: The Id param.
        :param Sequence[_builtins.str] labels: The Labels param.
        :param _builtins.str name: The Name param.
        :param _builtins.str parent: The Parent param.
        :param Sequence[_builtins.str] snippets: The Snippets param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "labels", labels)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "parent", parent)
        pulumi.set(__self__, "snippets", snippets)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Sequence[_builtins.str]:
        """
        The Labels param.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def parent(self) -> _builtins.str:
        """
        The Parent param.
        """
        return pulumi.get(self, "parent")

    @_builtins.property
    @pulumi.getter
    def snippets(self) -> Sequence[_builtins.str]:
        """
        The Snippets param.
        """
        return pulumi.get(self, "snippets")


@pulumi.output_type
class GetHipObjectAntiMalwareResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectAntiMalwareCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectAntiMalwareVendorResult']):
        """
        :param 'GetHipObjectAntiMalwareCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectAntiMalwareVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectAntiMalwareVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaResult(dict):
    def __init__(__self__, *,
                 is_installed: _builtins.bool,
                 last_scan_time: 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeResult',
                 product_version: 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionResult',
                 real_time_protection: _builtins.str,
                 virdef_version: 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionResult'):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectAntiMalwareCriteriaLastScanTimeArgs' last_scan_time: The LastScanTime param.
        :param 'GetHipObjectAntiMalwareCriteriaProductVersionArgs' product_version: The ProductVersion param.
        :param _builtins.str real_time_protection: real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param 'GetHipObjectAntiMalwareCriteriaVirdefVersionArgs' virdef_version: The VirdefVersion param.
        """
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "last_scan_time", last_scan_time)
        pulumi.set(__self__, "product_version", product_version)
        pulumi.set(__self__, "real_time_protection", real_time_protection)
        pulumi.set(__self__, "virdef_version", virdef_version)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastScanTime")
    def last_scan_time(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeResult':
        """
        The LastScanTime param.
        """
        return pulumi.get(self, "last_scan_time")

    @_builtins.property
    @pulumi.getter(name="productVersion")
    def product_version(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionResult':
        """
        The ProductVersion param.
        """
        return pulumi.get(self, "product_version")

    @_builtins.property
    @pulumi.getter(name="realTimeProtection")
    def real_time_protection(self) -> _builtins.str:
        """
        real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "real_time_protection")

    @_builtins.property
    @pulumi.getter(name="virdefVersion")
    def virdef_version(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionResult':
        """
        The VirdefVersion param.
        """
        return pulumi.get(self, "virdef_version")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaLastScanTimeResult(dict):
    def __init__(__self__, *,
                 not_available: _builtins.bool,
                 not_within: 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithinResult',
                 within: 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeWithinResult'):
        """
        :param _builtins.bool not_available: The NotAvailable param.
        :param 'GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectAntiMalwareCriteriaLastScanTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_available", not_available)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> _builtins.bool:
        """
        The NotAvailable param.
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaLastScanTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaLastScanTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaLastScanTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaProductVersionResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 greater_equal: _builtins.str,
                 greater_than: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str,
                 less_equal: _builtins.str,
                 less_than: _builtins.str,
                 not_within: 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionNotWithinResult',
                 within: 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionWithinResult'):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str greater_equal: The GreaterEqual param. String length must not exceed 255 characters.
        :param _builtins.str greater_than: The GreaterThan param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        :param _builtins.str less_equal: The LessEqual param. String length must not exceed 255 characters.
        :param _builtins.str less_than: The LessThan param. String length must not exceed 255 characters.
        :param 'GetHipObjectAntiMalwareCriteriaProductVersionNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectAntiMalwareCriteriaProductVersionWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "greater_equal", greater_equal)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)
        pulumi.set(__self__, "less_equal", less_equal)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> _builtins.str:
        """
        The GreaterEqual param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> _builtins.str:
        """
        The GreaterThan param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> _builtins.str:
        """
        The LessEqual param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> _builtins.str:
        """
        The LessThan param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaProductVersionWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaProductVersionNotWithinResult(dict):
    def __init__(__self__, *,
                 versions: _builtins.int):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaProductVersionWithinResult(dict):
    def __init__(__self__, *,
                 versions: _builtins.int):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaVirdefVersionResult(dict):
    def __init__(__self__, *,
                 not_within: 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithinResult',
                 within: 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionWithinResult'):
        """
        :param 'GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectAntiMalwareCriteriaVirdefVersionWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectAntiMalwareCriteriaVirdefVersionWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaVirdefVersionNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 versions: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        specify versions range. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectAntiMalwareCriteriaVirdefVersionWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 versions: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        specify versions range. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectAntiMalwareVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectCertificateResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectCertificateCriteriaResult'):
        """
        :param 'GetHipObjectCertificateCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectCertificateCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectCertificateCriteriaResult(dict):
    def __init__(__self__, *,
                 certificate_attributes: Sequence['outputs.GetHipObjectCertificateCriteriaCertificateAttributeResult'],
                 certificate_profile: _builtins.str):
        """
        :param Sequence['GetHipObjectCertificateCriteriaCertificateAttributeArgs'] certificate_attributes: The CertificateAttributes param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates.
        """
        pulumi.set(__self__, "certificate_attributes", certificate_attributes)
        pulumi.set(__self__, "certificate_profile", certificate_profile)

    @_builtins.property
    @pulumi.getter(name="certificateAttributes")
    def certificate_attributes(self) -> Sequence['outputs.GetHipObjectCertificateCriteriaCertificateAttributeResult']:
        """
        The CertificateAttributes param.
        """
        return pulumi.get(self, "certificate_attributes")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates.
        """
        return pulumi.get(self, "certificate_profile")


@pulumi.output_type
class GetHipObjectCertificateCriteriaCertificateAttributeResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: Attribute Name.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Attribute Name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetHipObjectCustomChecksResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectCustomChecksCriteriaResult'):
        """
        :param 'GetHipObjectCustomChecksCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectCustomChecksCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaResult(dict):
    def __init__(__self__, *,
                 plists: Sequence['outputs.GetHipObjectCustomChecksCriteriaPlistResult'],
                 process_lists: Sequence['outputs.GetHipObjectCustomChecksCriteriaProcessListResult'],
                 registry_keys: Sequence['outputs.GetHipObjectCustomChecksCriteriaRegistryKeyResult']):
        """
        :param Sequence['GetHipObjectCustomChecksCriteriaPlistArgs'] plists: The Plist param.
        :param Sequence['GetHipObjectCustomChecksCriteriaProcessListArgs'] process_lists: The ProcessList param.
        :param Sequence['GetHipObjectCustomChecksCriteriaRegistryKeyArgs'] registry_keys: The RegistryKeys param.
        """
        pulumi.set(__self__, "plists", plists)
        pulumi.set(__self__, "process_lists", process_lists)
        pulumi.set(__self__, "registry_keys", registry_keys)

    @_builtins.property
    @pulumi.getter
    def plists(self) -> Sequence['outputs.GetHipObjectCustomChecksCriteriaPlistResult']:
        """
        The Plist param.
        """
        return pulumi.get(self, "plists")

    @_builtins.property
    @pulumi.getter(name="processLists")
    def process_lists(self) -> Sequence['outputs.GetHipObjectCustomChecksCriteriaProcessListResult']:
        """
        The ProcessList param.
        """
        return pulumi.get(self, "process_lists")

    @_builtins.property
    @pulumi.getter(name="registryKeys")
    def registry_keys(self) -> Sequence['outputs.GetHipObjectCustomChecksCriteriaRegistryKeyResult']:
        """
        The RegistryKeys param.
        """
        return pulumi.get(self, "registry_keys")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaPlistResult(dict):
    def __init__(__self__, *,
                 keys: Sequence['outputs.GetHipObjectCustomChecksCriteriaPlistKeyResult'],
                 name: _builtins.str,
                 negate: _builtins.bool):
        """
        :param Sequence['GetHipObjectCustomChecksCriteriaPlistKeyArgs'] keys: The Keys param.
        :param _builtins.str name: Preference list. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Plist does not exist. Default: `false`.
        """
        pulumi.set(__self__, "keys", keys)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)

    @_builtins.property
    @pulumi.getter
    def keys(self) -> Sequence['outputs.GetHipObjectCustomChecksCriteriaPlistKeyResult']:
        """
        The Keys param.
        """
        return pulumi.get(self, "keys")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Preference list. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Plist does not exist. Default: `false`.
        """
        return pulumi.get(self, "negate")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaPlistKeyResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 value: _builtins.str):
        """
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaProcessListResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 running: _builtins.bool):
        """
        :param _builtins.str name: Process Name. String length must not exceed 1023 characters.
        :param _builtins.bool running: The Running param. Default: `true`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "running", running)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Process Name. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def running(self) -> _builtins.bool:
        """
        The Running param. Default: `true`.
        """
        return pulumi.get(self, "running")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaRegistryKeyResult(dict):
    def __init__(__self__, *,
                 default_value_data: _builtins.str,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 registry_values: Sequence['outputs.GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValueResult']):
        """
        :param _builtins.str default_value_data: Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: Registry key. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Key does not exist or match specified value data. Default: `false`.
        :param Sequence['GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValueArgs'] registry_values: The RegistryValues param.
        """
        pulumi.set(__self__, "default_value_data", default_value_data)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "registry_values", registry_values)

    @_builtins.property
    @pulumi.getter(name="defaultValueData")
    def default_value_data(self) -> _builtins.str:
        """
        Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "default_value_data")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry key. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Key does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="registryValues")
    def registry_values(self) -> Sequence['outputs.GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValueResult']:
        """
        The RegistryValues param.
        """
        return pulumi.get(self, "registry_values")


@pulumi.output_type
class GetHipObjectCustomChecksCriteriaRegistryKeyRegistryValueResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 value_data: _builtins.str):
        """
        :param _builtins.str name: Registry value name. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value_data: Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "value_data", value_data)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry value name. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="valueData")
    def value_data(self) -> _builtins.str:
        """
        Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value_data")


@pulumi.output_type
class GetHipObjectDataLossPreventionResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectDataLossPreventionCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectDataLossPreventionVendorResult']):
        """
        :param 'GetHipObjectDataLossPreventionCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectDataLossPreventionVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectDataLossPreventionCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectDataLossPreventionVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectDataLossPreventionCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectDataLossPreventionVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectDiskBackupResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectDiskBackupCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectDiskBackupVendorResult']):
        """
        :param 'GetHipObjectDiskBackupCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectDiskBackupVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectDiskBackupCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectDiskBackupVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectDiskBackupCriteriaResult(dict):
    def __init__(__self__, *,
                 is_installed: _builtins.bool,
                 last_backup_time: 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeResult'):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectDiskBackupCriteriaLastBackupTimeArgs' last_backup_time: The LastBackupTime param.
        """
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "last_backup_time", last_backup_time)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastBackupTime")
    def last_backup_time(self) -> 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeResult':
        """
        The LastBackupTime param.
        """
        return pulumi.get(self, "last_backup_time")


@pulumi.output_type
class GetHipObjectDiskBackupCriteriaLastBackupTimeResult(dict):
    def __init__(__self__, *,
                 not_available: _builtins.bool,
                 not_within: 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithinResult',
                 within: 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeWithinResult'):
        """
        :param _builtins.bool not_available: The NotAvailable param.
        :param 'GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectDiskBackupCriteriaLastBackupTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_available", not_available)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> _builtins.bool:
        """
        The NotAvailable param.
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectDiskBackupCriteriaLastBackupTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectDiskBackupCriteriaLastBackupTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectDiskBackupCriteriaLastBackupTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectDiskBackupVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectDiskEncryptionResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectDiskEncryptionCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectDiskEncryptionVendorResult']):
        """
        :param 'GetHipObjectDiskEncryptionCriteriaArgs' criteria: Encryption locations.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectDiskEncryptionVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectDiskEncryptionCriteriaResult':
        """
        Encryption locations.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectDiskEncryptionVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectDiskEncryptionCriteriaResult(dict):
    def __init__(__self__, *,
                 encrypted_locations: Sequence['outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocationResult'],
                 is_installed: _builtins.bool):
        """
        :param Sequence['GetHipObjectDiskEncryptionCriteriaEncryptedLocationArgs'] encrypted_locations: The EncryptedLocations param.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "encrypted_locations", encrypted_locations)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="encryptedLocations")
    def encrypted_locations(self) -> Sequence['outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocationResult']:
        """
        The EncryptedLocations param.
        """
        return pulumi.get(self, "encrypted_locations")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectDiskEncryptionCriteriaEncryptedLocationResult(dict):
    def __init__(__self__, *,
                 encryption_state: 'outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult',
                 name: _builtins.str):
        """
        :param 'GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateArgs' encryption_state: The EncryptionState param.
        :param _builtins.str name: Encryption location. String length must not exceed 1023 characters.
        """
        pulumi.set(__self__, "encryption_state", encryption_state)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="encryptionState")
    def encryption_state(self) -> 'outputs.GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult':
        """
        The EncryptionState param.
        """
        return pulumi.get(self, "encryption_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Encryption location. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHipObjectDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult(dict):
    def __init__(__self__, *,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str is_: The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        :param _builtins.str is_not: The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectDiskEncryptionVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectFirewallResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectFirewallCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectFirewallVendorResult']):
        """
        :param 'GetHipObjectFirewallCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectFirewallVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectFirewallCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectFirewallVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectFirewallCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectFirewallVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectHostInfoResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectHostInfoCriteriaResult'):
        """
        :param 'GetHipObjectHostInfoCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectHostInfoCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaResult(dict):
    def __init__(__self__, *,
                 client_version: 'outputs.GetHipObjectHostInfoCriteriaClientVersionResult',
                 domain: 'outputs.GetHipObjectHostInfoCriteriaDomainResult',
                 host_id: 'outputs.GetHipObjectHostInfoCriteriaHostIdResult',
                 host_name: 'outputs.GetHipObjectHostInfoCriteriaHostNameResult',
                 managed: _builtins.bool,
                 os: 'outputs.GetHipObjectHostInfoCriteriaOsResult',
                 serial_number: 'outputs.GetHipObjectHostInfoCriteriaSerialNumberResult'):
        """
        :param 'GetHipObjectHostInfoCriteriaClientVersionArgs' client_version: The ClientVersion param.
        :param 'GetHipObjectHostInfoCriteriaDomainArgs' domain: The Domain param.
        :param 'GetHipObjectHostInfoCriteriaHostIdArgs' host_id: The HostId param.
        :param 'GetHipObjectHostInfoCriteriaHostNameArgs' host_name: The HostName param.
        :param _builtins.bool managed: If device is managed.
        :param 'GetHipObjectHostInfoCriteriaOsArgs' os: The Os param.
        :param 'GetHipObjectHostInfoCriteriaSerialNumberArgs' serial_number: The SerialNumber param.
        """
        pulumi.set(__self__, "client_version", client_version)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "host_id", host_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "managed", managed)
        pulumi.set(__self__, "os", os)
        pulumi.set(__self__, "serial_number", serial_number)

    @_builtins.property
    @pulumi.getter(name="clientVersion")
    def client_version(self) -> 'outputs.GetHipObjectHostInfoCriteriaClientVersionResult':
        """
        The ClientVersion param.
        """
        return pulumi.get(self, "client_version")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> 'outputs.GetHipObjectHostInfoCriteriaDomainResult':
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> 'outputs.GetHipObjectHostInfoCriteriaHostIdResult':
        """
        The HostId param.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> 'outputs.GetHipObjectHostInfoCriteriaHostNameResult':
        """
        The HostName param.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def managed(self) -> _builtins.bool:
        """
        If device is managed.
        """
        return pulumi.get(self, "managed")

    @_builtins.property
    @pulumi.getter
    def os(self) -> 'outputs.GetHipObjectHostInfoCriteriaOsResult':
        """
        The Os param.
        """
        return pulumi.get(self, "os")

    @_builtins.property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> 'outputs.GetHipObjectHostInfoCriteriaSerialNumberResult':
        """
        The SerialNumber param.
        """
        return pulumi.get(self, "serial_number")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaClientVersionResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaDomainResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaHostIdResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaHostNameResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaOsResult(dict):
    def __init__(__self__, *,
                 contains: 'outputs.GetHipObjectHostInfoCriteriaOsContainsResult'):
        """
        :param 'GetHipObjectHostInfoCriteriaOsContainsArgs' contains: The Contains param.
        """
        pulumi.set(__self__, "contains", contains)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> 'outputs.GetHipObjectHostInfoCriteriaOsContainsResult':
        """
        The Contains param.
        """
        return pulumi.get(self, "contains")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaOsContainsResult(dict):
    def __init__(__self__, *,
                 apple: _builtins.str,
                 google: _builtins.str,
                 linux: _builtins.str,
                 microsoft: _builtins.str,
                 other: _builtins.str):
        """
        :param _builtins.str apple: Apple vendor. String length must not exceed 255 characters.
        :param _builtins.str google: Google vendor. String length must not exceed 255 characters.
        :param _builtins.str linux: Linux vendor. String length must not exceed 255 characters.
        :param _builtins.str microsoft: Microsoft vendor. String length must not exceed 255 characters.
        :param _builtins.str other: Other vendor. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "apple", apple)
        pulumi.set(__self__, "google", google)
        pulumi.set(__self__, "linux", linux)
        pulumi.set(__self__, "microsoft", microsoft)
        pulumi.set(__self__, "other", other)

    @_builtins.property
    @pulumi.getter
    def apple(self) -> _builtins.str:
        """
        Apple vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "apple")

    @_builtins.property
    @pulumi.getter
    def google(self) -> _builtins.str:
        """
        Google vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "google")

    @_builtins.property
    @pulumi.getter
    def linux(self) -> _builtins.str:
        """
        Linux vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "linux")

    @_builtins.property
    @pulumi.getter
    def microsoft(self) -> _builtins.str:
        """
        Microsoft vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "microsoft")

    @_builtins.property
    @pulumi.getter
    def other(self) -> _builtins.str:
        """
        Other vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "other")


@pulumi.output_type
class GetHipObjectHostInfoCriteriaSerialNumberResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataResult(dict):
    def __init__(__self__, *,
                 anti_malware: 'outputs.GetHipObjectListDataAntiMalwareResult',
                 certificate: 'outputs.GetHipObjectListDataCertificateResult',
                 custom_checks: 'outputs.GetHipObjectListDataCustomChecksResult',
                 data_loss_prevention: 'outputs.GetHipObjectListDataDataLossPreventionResult',
                 description: _builtins.str,
                 disk_backup: 'outputs.GetHipObjectListDataDiskBackupResult',
                 disk_encryption: 'outputs.GetHipObjectListDataDiskEncryptionResult',
                 firewall: 'outputs.GetHipObjectListDataFirewallResult',
                 host_info: 'outputs.GetHipObjectListDataHostInfoResult',
                 id: _builtins.str,
                 mobile_device: 'outputs.GetHipObjectListDataMobileDeviceResult',
                 name: _builtins.str,
                 network_info: 'outputs.GetHipObjectListDataNetworkInfoResult',
                 patch_management: 'outputs.GetHipObjectListDataPatchManagementResult'):
        """
        :param 'GetHipObjectListDataAntiMalwareArgs' anti_malware: The AntiMalware param.
        :param 'GetHipObjectListDataCertificateArgs' certificate: The Certificate param.
        :param 'GetHipObjectListDataCustomChecksArgs' custom_checks: The CustomChecks param.
        :param 'GetHipObjectListDataDataLossPreventionArgs' data_loss_prevention: The DataLossPrevention param.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param 'GetHipObjectListDataDiskBackupArgs' disk_backup: The DiskBackup param.
        :param 'GetHipObjectListDataDiskEncryptionArgs' disk_encryption: The DiskEncryption param.
        :param 'GetHipObjectListDataFirewallArgs' firewall: The Firewall param.
        :param 'GetHipObjectListDataHostInfoArgs' host_info: The HostInfo param.
        :param _builtins.str id: UUID of the resource.
        :param 'GetHipObjectListDataMobileDeviceArgs' mobile_device: The MobileDevice param.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param 'GetHipObjectListDataNetworkInfoArgs' network_info: The NetworkInfo param.
        :param 'GetHipObjectListDataPatchManagementArgs' patch_management: The PatchManagement param.
        """
        pulumi.set(__self__, "anti_malware", anti_malware)
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "custom_checks", custom_checks)
        pulumi.set(__self__, "data_loss_prevention", data_loss_prevention)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "disk_backup", disk_backup)
        pulumi.set(__self__, "disk_encryption", disk_encryption)
        pulumi.set(__self__, "firewall", firewall)
        pulumi.set(__self__, "host_info", host_info)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "mobile_device", mobile_device)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "network_info", network_info)
        pulumi.set(__self__, "patch_management", patch_management)

    @_builtins.property
    @pulumi.getter(name="antiMalware")
    def anti_malware(self) -> 'outputs.GetHipObjectListDataAntiMalwareResult':
        """
        The AntiMalware param.
        """
        return pulumi.get(self, "anti_malware")

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> 'outputs.GetHipObjectListDataCertificateResult':
        """
        The Certificate param.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="customChecks")
    def custom_checks(self) -> 'outputs.GetHipObjectListDataCustomChecksResult':
        """
        The CustomChecks param.
        """
        return pulumi.get(self, "custom_checks")

    @_builtins.property
    @pulumi.getter(name="dataLossPrevention")
    def data_loss_prevention(self) -> 'outputs.GetHipObjectListDataDataLossPreventionResult':
        """
        The DataLossPrevention param.
        """
        return pulumi.get(self, "data_loss_prevention")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="diskBackup")
    def disk_backup(self) -> 'outputs.GetHipObjectListDataDiskBackupResult':
        """
        The DiskBackup param.
        """
        return pulumi.get(self, "disk_backup")

    @_builtins.property
    @pulumi.getter(name="diskEncryption")
    def disk_encryption(self) -> 'outputs.GetHipObjectListDataDiskEncryptionResult':
        """
        The DiskEncryption param.
        """
        return pulumi.get(self, "disk_encryption")

    @_builtins.property
    @pulumi.getter
    def firewall(self) -> 'outputs.GetHipObjectListDataFirewallResult':
        """
        The Firewall param.
        """
        return pulumi.get(self, "firewall")

    @_builtins.property
    @pulumi.getter(name="hostInfo")
    def host_info(self) -> 'outputs.GetHipObjectListDataHostInfoResult':
        """
        The HostInfo param.
        """
        return pulumi.get(self, "host_info")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="mobileDevice")
    def mobile_device(self) -> 'outputs.GetHipObjectListDataMobileDeviceResult':
        """
        The MobileDevice param.
        """
        return pulumi.get(self, "mobile_device")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="networkInfo")
    def network_info(self) -> 'outputs.GetHipObjectListDataNetworkInfoResult':
        """
        The NetworkInfo param.
        """
        return pulumi.get(self, "network_info")

    @_builtins.property
    @pulumi.getter(name="patchManagement")
    def patch_management(self) -> 'outputs.GetHipObjectListDataPatchManagementResult':
        """
        The PatchManagement param.
        """
        return pulumi.get(self, "patch_management")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataAntiMalwareCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataAntiMalwareVendorResult']):
        """
        :param 'GetHipObjectListDataAntiMalwareCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataAntiMalwareVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataAntiMalwareVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaResult(dict):
    def __init__(__self__, *,
                 is_installed: _builtins.bool,
                 last_scan_time: 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeResult',
                 product_version: 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionResult',
                 real_time_protection: _builtins.str,
                 virdef_version: 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionResult'):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeArgs' last_scan_time: The LastScanTime param.
        :param 'GetHipObjectListDataAntiMalwareCriteriaProductVersionArgs' product_version: The ProductVersion param.
        :param _builtins.str real_time_protection: real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param 'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionArgs' virdef_version: The VirdefVersion param.
        """
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "last_scan_time", last_scan_time)
        pulumi.set(__self__, "product_version", product_version)
        pulumi.set(__self__, "real_time_protection", real_time_protection)
        pulumi.set(__self__, "virdef_version", virdef_version)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastScanTime")
    def last_scan_time(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeResult':
        """
        The LastScanTime param.
        """
        return pulumi.get(self, "last_scan_time")

    @_builtins.property
    @pulumi.getter(name="productVersion")
    def product_version(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionResult':
        """
        The ProductVersion param.
        """
        return pulumi.get(self, "product_version")

    @_builtins.property
    @pulumi.getter(name="realTimeProtection")
    def real_time_protection(self) -> _builtins.str:
        """
        real time protection. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "real_time_protection")

    @_builtins.property
    @pulumi.getter(name="virdefVersion")
    def virdef_version(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionResult':
        """
        The VirdefVersion param.
        """
        return pulumi.get(self, "virdef_version")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaLastScanTimeResult(dict):
    def __init__(__self__, *,
                 not_available: _builtins.bool,
                 not_within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithinResult',
                 within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithinResult'):
        """
        :param _builtins.bool not_available: The NotAvailable param.
        :param 'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_available", not_available)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> _builtins.bool:
        """
        The NotAvailable param.
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaLastScanTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaLastScanTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaProductVersionResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 greater_equal: _builtins.str,
                 greater_than: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str,
                 less_equal: _builtins.str,
                 less_than: _builtins.str,
                 not_within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithinResult',
                 within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionWithinResult'):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str greater_equal: The GreaterEqual param. String length must not exceed 255 characters.
        :param _builtins.str greater_than: The GreaterThan param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        :param _builtins.str less_equal: The LessEqual param. String length must not exceed 255 characters.
        :param _builtins.str less_than: The LessThan param. String length must not exceed 255 characters.
        :param 'GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectListDataAntiMalwareCriteriaProductVersionWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "greater_equal", greater_equal)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)
        pulumi.set(__self__, "less_equal", less_equal)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> _builtins.str:
        """
        The GreaterEqual param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> _builtins.str:
        """
        The GreaterThan param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> _builtins.str:
        """
        The LessEqual param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> _builtins.str:
        """
        The LessThan param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaProductVersionWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaProductVersionNotWithinResult(dict):
    def __init__(__self__, *,
                 versions: _builtins.int):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaProductVersionWithinResult(dict):
    def __init__(__self__, *,
                 versions: _builtins.int):
        """
        :param _builtins.int versions: versions range. Value must be between 1 and 65535. Default: `1`.
        """
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        versions range. Value must be between 1 and 65535. Default: `1`.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaVirdefVersionResult(dict):
    def __init__(__self__, *,
                 not_within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithinResult',
                 within: 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithinResult'):
        """
        :param 'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaVirdefVersionNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 versions: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        specify versions range. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareCriteriaVirdefVersionWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 versions: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int versions: specify versions range. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "versions", versions)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def versions(self) -> _builtins.int:
        """
        specify versions range. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "versions")


@pulumi.output_type
class GetHipObjectListDataAntiMalwareVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectListDataCertificateResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataCertificateCriteriaResult'):
        """
        :param 'GetHipObjectListDataCertificateCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataCertificateCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectListDataCertificateCriteriaResult(dict):
    def __init__(__self__, *,
                 certificate_attributes: Sequence['outputs.GetHipObjectListDataCertificateCriteriaCertificateAttributeResult'],
                 certificate_profile: _builtins.str):
        """
        :param Sequence['GetHipObjectListDataCertificateCriteriaCertificateAttributeArgs'] certificate_attributes: The CertificateAttributes param.
        :param _builtins.str certificate_profile: Profile for authenticating client certificates.
        """
        pulumi.set(__self__, "certificate_attributes", certificate_attributes)
        pulumi.set(__self__, "certificate_profile", certificate_profile)

    @_builtins.property
    @pulumi.getter(name="certificateAttributes")
    def certificate_attributes(self) -> Sequence['outputs.GetHipObjectListDataCertificateCriteriaCertificateAttributeResult']:
        """
        The CertificateAttributes param.
        """
        return pulumi.get(self, "certificate_attributes")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        Profile for authenticating client certificates.
        """
        return pulumi.get(self, "certificate_profile")


@pulumi.output_type
class GetHipObjectListDataCertificateCriteriaCertificateAttributeResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetHipObjectListDataCustomChecksResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataCustomChecksCriteriaResult'):
        """
        :param 'GetHipObjectListDataCustomChecksCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataCustomChecksCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaResult(dict):
    def __init__(__self__, *,
                 plists: Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaPlistResult'],
                 process_lists: Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaProcessListResult'],
                 registry_keys: Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKeyResult']):
        """
        :param Sequence['GetHipObjectListDataCustomChecksCriteriaPlistArgs'] plists: The Plist param.
        :param Sequence['GetHipObjectListDataCustomChecksCriteriaProcessListArgs'] process_lists: The ProcessList param.
        :param Sequence['GetHipObjectListDataCustomChecksCriteriaRegistryKeyArgs'] registry_keys: The RegistryKeys param.
        """
        pulumi.set(__self__, "plists", plists)
        pulumi.set(__self__, "process_lists", process_lists)
        pulumi.set(__self__, "registry_keys", registry_keys)

    @_builtins.property
    @pulumi.getter
    def plists(self) -> Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaPlistResult']:
        """
        The Plist param.
        """
        return pulumi.get(self, "plists")

    @_builtins.property
    @pulumi.getter(name="processLists")
    def process_lists(self) -> Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaProcessListResult']:
        """
        The ProcessList param.
        """
        return pulumi.get(self, "process_lists")

    @_builtins.property
    @pulumi.getter(name="registryKeys")
    def registry_keys(self) -> Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKeyResult']:
        """
        The RegistryKeys param.
        """
        return pulumi.get(self, "registry_keys")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaPlistResult(dict):
    def __init__(__self__, *,
                 keys: Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaPlistKeyResult'],
                 name: _builtins.str,
                 negate: _builtins.bool):
        """
        :param Sequence['GetHipObjectListDataCustomChecksCriteriaPlistKeyArgs'] keys: The Keys param.
        :param _builtins.str name: The Name param.
        :param _builtins.bool negate: Plist does not exist. Default: `false`.
        """
        pulumi.set(__self__, "keys", keys)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)

    @_builtins.property
    @pulumi.getter
    def keys(self) -> Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaPlistKeyResult']:
        """
        The Keys param.
        """
        return pulumi.get(self, "keys")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Plist does not exist. Default: `false`.
        """
        return pulumi.get(self, "negate")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaPlistKeyResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value: Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        Key value. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaProcessListResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 running: _builtins.bool):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.bool running: The Running param. Default: `true`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "running", running)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def running(self) -> _builtins.bool:
        """
        The Running param. Default: `true`.
        """
        return pulumi.get(self, "running")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaRegistryKeyResult(dict):
    def __init__(__self__, *,
                 default_value_data: _builtins.str,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 registry_values: Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValueResult']):
        """
        :param _builtins.str default_value_data: Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: Registry key. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Key does not exist or match specified value data. Default: `false`.
        :param Sequence['GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValueArgs'] registry_values: The RegistryValues param.
        """
        pulumi.set(__self__, "default_value_data", default_value_data)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "registry_values", registry_values)

    @_builtins.property
    @pulumi.getter(name="defaultValueData")
    def default_value_data(self) -> _builtins.str:
        """
        Registry key default value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "default_value_data")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry key. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Key does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="registryValues")
    def registry_values(self) -> Sequence['outputs.GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValueResult']:
        """
        The RegistryValues param.
        """
        return pulumi.get(self, "registry_values")


@pulumi.output_type
class GetHipObjectListDataCustomChecksCriteriaRegistryKeyRegistryValueResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 negate: _builtins.bool,
                 value_data: _builtins.str):
        """
        :param _builtins.str name: Registry value name. String length must not exceed 1023 characters.
        :param _builtins.bool negate: Value does not exist or match specified value data. Default: `false`.
        :param _builtins.str value_data: Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "value_data", value_data)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Registry value name. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        Value does not exist or match specified value data. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter(name="valueData")
    def value_data(self) -> _builtins.str:
        """
        Registry value data. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "value_data")


@pulumi.output_type
class GetHipObjectListDataDataLossPreventionResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataDataLossPreventionCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataDataLossPreventionVendorResult']):
        """
        :param 'GetHipObjectListDataDataLossPreventionCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataDataLossPreventionVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataDataLossPreventionCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataDataLossPreventionVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataDataLossPreventionCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectListDataDataLossPreventionVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectListDataDiskBackupResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataDiskBackupCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataDiskBackupVendorResult']):
        """
        :param 'GetHipObjectListDataDiskBackupCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataDiskBackupVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataDiskBackupCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataDiskBackupVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataDiskBackupCriteriaResult(dict):
    def __init__(__self__, *,
                 is_installed: _builtins.bool,
                 last_backup_time: 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeResult'):
        """
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeArgs' last_backup_time: The LastBackupTime param.
        """
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "last_backup_time", last_backup_time)

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="lastBackupTime")
    def last_backup_time(self) -> 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeResult':
        """
        The LastBackupTime param.
        """
        return pulumi.get(self, "last_backup_time")


@pulumi.output_type
class GetHipObjectListDataDiskBackupCriteriaLastBackupTimeResult(dict):
    def __init__(__self__, *,
                 not_available: _builtins.bool,
                 not_within: 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithinResult',
                 within: 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithinResult'):
        """
        :param _builtins.bool not_available: The NotAvailable param.
        :param 'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_available", not_available)
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notAvailable")
    def not_available(self) -> _builtins.bool:
        """
        The NotAvailable param.
        """
        return pulumi.get(self, "not_available")

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectListDataDiskBackupCriteriaLastBackupTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectListDataDiskBackupCriteriaLastBackupTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 65535.
        :param _builtins.int hours: specify time in hours. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify time in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")


@pulumi.output_type
class GetHipObjectListDataDiskBackupVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectListDataDiskEncryptionResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataDiskEncryptionCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataDiskEncryptionVendorResult']):
        """
        :param 'GetHipObjectListDataDiskEncryptionCriteriaArgs' criteria: Encryption locations.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataDiskEncryptionVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataDiskEncryptionCriteriaResult':
        """
        Encryption locations.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataDiskEncryptionVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataDiskEncryptionCriteriaResult(dict):
    def __init__(__self__, *,
                 encrypted_locations: Sequence['outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationResult'],
                 is_installed: _builtins.bool):
        """
        :param Sequence['GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationArgs'] encrypted_locations: The EncryptedLocations param.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "encrypted_locations", encrypted_locations)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="encryptedLocations")
    def encrypted_locations(self) -> Sequence['outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationResult']:
        """
        The EncryptedLocations param.
        """
        return pulumi.get(self, "encrypted_locations")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationResult(dict):
    def __init__(__self__, *,
                 encryption_state: 'outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult',
                 name: _builtins.str):
        """
        :param 'GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionStateArgs' encryption_state: The EncryptionState param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "encryption_state", encryption_state)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="encryptionState")
    def encryption_state(self) -> 'outputs.GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult':
        """
        The EncryptionState param.
        """
        return pulumi.get(self, "encryption_state")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHipObjectListDataDiskEncryptionCriteriaEncryptedLocationEncryptionStateResult(dict):
    def __init__(__self__, *,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str is_: The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        :param _builtins.str is_not: The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String must be one of these: `"encrypted"`, `"unencrypted"`, `"partial"`, `"unknown"`.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataDiskEncryptionVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectListDataFirewallResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataFirewallCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataFirewallVendorResult']):
        """
        :param 'GetHipObjectListDataFirewallCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataFirewallVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataFirewallCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataFirewallVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataFirewallCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")


@pulumi.output_type
class GetHipObjectListDataFirewallVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        The Products param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectListDataHostInfoResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataHostInfoCriteriaResult'):
        """
        :param 'GetHipObjectListDataHostInfoCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaResult(dict):
    def __init__(__self__, *,
                 client_version: 'outputs.GetHipObjectListDataHostInfoCriteriaClientVersionResult',
                 domain: 'outputs.GetHipObjectListDataHostInfoCriteriaDomainResult',
                 host_id: 'outputs.GetHipObjectListDataHostInfoCriteriaHostIdResult',
                 host_name: 'outputs.GetHipObjectListDataHostInfoCriteriaHostNameResult',
                 managed: _builtins.bool,
                 os: 'outputs.GetHipObjectListDataHostInfoCriteriaOsResult',
                 serial_number: 'outputs.GetHipObjectListDataHostInfoCriteriaSerialNumberResult'):
        """
        :param 'GetHipObjectListDataHostInfoCriteriaClientVersionArgs' client_version: The ClientVersion param.
        :param 'GetHipObjectListDataHostInfoCriteriaDomainArgs' domain: The Domain param.
        :param 'GetHipObjectListDataHostInfoCriteriaHostIdArgs' host_id: The HostId param.
        :param 'GetHipObjectListDataHostInfoCriteriaHostNameArgs' host_name: The HostName param.
        :param _builtins.bool managed: If device is managed.
        :param 'GetHipObjectListDataHostInfoCriteriaOsArgs' os: The Os param.
        :param 'GetHipObjectListDataHostInfoCriteriaSerialNumberArgs' serial_number: The SerialNumber param.
        """
        pulumi.set(__self__, "client_version", client_version)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "host_id", host_id)
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "managed", managed)
        pulumi.set(__self__, "os", os)
        pulumi.set(__self__, "serial_number", serial_number)

    @_builtins.property
    @pulumi.getter(name="clientVersion")
    def client_version(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaClientVersionResult':
        """
        The ClientVersion param.
        """
        return pulumi.get(self, "client_version")

    @_builtins.property
    @pulumi.getter
    def domain(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaDomainResult':
        """
        The Domain param.
        """
        return pulumi.get(self, "domain")

    @_builtins.property
    @pulumi.getter(name="hostId")
    def host_id(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaHostIdResult':
        """
        The HostId param.
        """
        return pulumi.get(self, "host_id")

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaHostNameResult':
        """
        The HostName param.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def managed(self) -> _builtins.bool:
        """
        If device is managed.
        """
        return pulumi.get(self, "managed")

    @_builtins.property
    @pulumi.getter
    def os(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaOsResult':
        """
        The Os param.
        """
        return pulumi.get(self, "os")

    @_builtins.property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaSerialNumberResult':
        """
        The SerialNumber param.
        """
        return pulumi.get(self, "serial_number")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaClientVersionResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaDomainResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaHostIdResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaHostNameResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaOsResult(dict):
    def __init__(__self__, *,
                 contains: 'outputs.GetHipObjectListDataHostInfoCriteriaOsContainsResult'):
        """
        :param 'GetHipObjectListDataHostInfoCriteriaOsContainsArgs' contains: The Contains param.
        """
        pulumi.set(__self__, "contains", contains)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> 'outputs.GetHipObjectListDataHostInfoCriteriaOsContainsResult':
        """
        The Contains param.
        """
        return pulumi.get(self, "contains")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaOsContainsResult(dict):
    def __init__(__self__, *,
                 apple: _builtins.str,
                 google: _builtins.str,
                 linux: _builtins.str,
                 microsoft: _builtins.str,
                 other: _builtins.str):
        """
        :param _builtins.str apple: Apple vendor. String length must not exceed 255 characters.
        :param _builtins.str google: Google vendor. String length must not exceed 255 characters.
        :param _builtins.str linux: Linux vendor. String length must not exceed 255 characters.
        :param _builtins.str microsoft: Microsoft vendor. String length must not exceed 255 characters.
        :param _builtins.str other: Other vendor. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "apple", apple)
        pulumi.set(__self__, "google", google)
        pulumi.set(__self__, "linux", linux)
        pulumi.set(__self__, "microsoft", microsoft)
        pulumi.set(__self__, "other", other)

    @_builtins.property
    @pulumi.getter
    def apple(self) -> _builtins.str:
        """
        Apple vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "apple")

    @_builtins.property
    @pulumi.getter
    def google(self) -> _builtins.str:
        """
        Google vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "google")

    @_builtins.property
    @pulumi.getter
    def linux(self) -> _builtins.str:
        """
        Linux vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "linux")

    @_builtins.property
    @pulumi.getter
    def microsoft(self) -> _builtins.str:
        """
        Microsoft vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "microsoft")

    @_builtins.property
    @pulumi.getter
    def other(self) -> _builtins.str:
        """
        Other vendor. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "other")


@pulumi.output_type
class GetHipObjectListDataHostInfoCriteriaSerialNumberResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataMobileDeviceCriteriaResult'):
        """
        :param 'GetHipObjectListDataMobileDeviceCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaResult(dict):
    def __init__(__self__, *,
                 applications: 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsResult',
                 disk_encrypted: _builtins.bool,
                 imei: 'outputs.GetHipObjectListDataMobileDeviceCriteriaImeiResult',
                 jailbroken: _builtins.bool,
                 last_checkin_time: 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeResult',
                 model: 'outputs.GetHipObjectListDataMobileDeviceCriteriaModelResult',
                 passcode_set: _builtins.bool,
                 phone_number: 'outputs.GetHipObjectListDataMobileDeviceCriteriaPhoneNumberResult',
                 tag: 'outputs.GetHipObjectListDataMobileDeviceCriteriaTagResult'):
        """
        :param 'GetHipObjectListDataMobileDeviceCriteriaApplicationsArgs' applications: The Applications param.
        :param _builtins.bool disk_encrypted: If device's disk is encrypted.
        :param 'GetHipObjectListDataMobileDeviceCriteriaImeiArgs' imei: The Imei param.
        :param _builtins.bool jailbroken: If device is by rooted/jailbroken.
        :param 'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeArgs' last_checkin_time: The LastCheckinTime param.
        :param 'GetHipObjectListDataMobileDeviceCriteriaModelArgs' model: The Model param.
        :param _builtins.bool passcode_set: If device's passcode is present.
        :param 'GetHipObjectListDataMobileDeviceCriteriaPhoneNumberArgs' phone_number: The PhoneNumber param.
        :param 'GetHipObjectListDataMobileDeviceCriteriaTagArgs' tag: The Tag param.
        """
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "disk_encrypted", disk_encrypted)
        pulumi.set(__self__, "imei", imei)
        pulumi.set(__self__, "jailbroken", jailbroken)
        pulumi.set(__self__, "last_checkin_time", last_checkin_time)
        pulumi.set(__self__, "model", model)
        pulumi.set(__self__, "passcode_set", passcode_set)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "tag", tag)

    @_builtins.property
    @pulumi.getter
    def applications(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsResult':
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter(name="diskEncrypted")
    def disk_encrypted(self) -> _builtins.bool:
        """
        If device's disk is encrypted.
        """
        return pulumi.get(self, "disk_encrypted")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaImeiResult':
        """
        The Imei param.
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def jailbroken(self) -> _builtins.bool:
        """
        If device is by rooted/jailbroken.
        """
        return pulumi.get(self, "jailbroken")

    @_builtins.property
    @pulumi.getter(name="lastCheckinTime")
    def last_checkin_time(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeResult':
        """
        The LastCheckinTime param.
        """
        return pulumi.get(self, "last_checkin_time")

    @_builtins.property
    @pulumi.getter
    def model(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaModelResult':
        """
        The Model param.
        """
        return pulumi.get(self, "model")

    @_builtins.property
    @pulumi.getter(name="passcodeSet")
    def passcode_set(self) -> _builtins.bool:
        """
        If device's passcode is present.
        """
        return pulumi.get(self, "passcode_set")

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaPhoneNumberResult':
        """
        The PhoneNumber param.
        """
        return pulumi.get(self, "phone_number")

    @_builtins.property
    @pulumi.getter
    def tag(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaTagResult':
        """
        The Tag param.
        """
        return pulumi.get(self, "tag")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaApplicationsResult(dict):
    def __init__(__self__, *,
                 has_malware: 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareResult',
                 has_unmanaged_app: _builtins.bool,
                 includes: Sequence['outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsIncludeResult']):
        """
        :param 'GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareArgs' has_malware: The HasMalware param.
        :param _builtins.bool has_unmanaged_app: Has apps that are not managed.
        :param Sequence['GetHipObjectListDataMobileDeviceCriteriaApplicationsIncludeArgs'] includes: The Includes param.
        """
        pulumi.set(__self__, "has_malware", has_malware)
        pulumi.set(__self__, "has_unmanaged_app", has_unmanaged_app)
        pulumi.set(__self__, "includes", includes)

    @_builtins.property
    @pulumi.getter(name="hasMalware")
    def has_malware(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareResult':
        """
        The HasMalware param.
        """
        return pulumi.get(self, "has_malware")

    @_builtins.property
    @pulumi.getter(name="hasUnmanagedApp")
    def has_unmanaged_app(self) -> _builtins.bool:
        """
        Has apps that are not managed.
        """
        return pulumi.get(self, "has_unmanaged_app")

    @_builtins.property
    @pulumi.getter
    def includes(self) -> Sequence['outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsIncludeResult']:
        """
        The Includes param.
        """
        return pulumi.get(self, "includes")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareResult(dict):
    def __init__(__self__, *,
                 no: _builtins.bool,
                 yes: 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesResult'):
        """
        :param _builtins.bool no: The No param.
        :param 'GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesArgs' yes: The Yes param.
        """
        pulumi.set(__self__, "no", no)
        pulumi.set(__self__, "yes", yes)

    @_builtins.property
    @pulumi.getter
    def no(self) -> _builtins.bool:
        """
        The No param.
        """
        return pulumi.get(self, "no")

    @_builtins.property
    @pulumi.getter
    def yes(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesResult':
        """
        The Yes param.
        """
        return pulumi.get(self, "yes")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesResult(dict):
    def __init__(__self__, *,
                 excludes: Sequence['outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult']):
        """
        :param Sequence['GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExcludeArgs'] excludes: The Excludes param.
        """
        pulumi.set(__self__, "excludes", excludes)

    @_builtins.property
    @pulumi.getter
    def excludes(self) -> Sequence['outputs.GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult']:
        """
        The Excludes param.
        """
        return pulumi.get(self, "excludes")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult(dict):
    def __init__(__self__, *,
                 hash: _builtins.str,
                 name: _builtins.str,
                 package: _builtins.str):
        """
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: The Name param.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "hash", hash)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def hash(self) -> _builtins.str:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def package(self) -> _builtins.str:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaApplicationsIncludeResult(dict):
    def __init__(__self__, *,
                 hash: _builtins.str,
                 name: _builtins.str,
                 package: _builtins.str):
        """
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: The Name param.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "hash", hash)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def hash(self) -> _builtins.str:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def package(self) -> _builtins.str:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaImeiResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeResult(dict):
    def __init__(__self__, *,
                 not_within: 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithinResult',
                 within: 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithinResult'):
        """
        :param 'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaLastCheckinTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaModelResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaPhoneNumberResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataMobileDeviceCriteriaTagResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataNetworkInfoCriteriaResult'):
        """
        :param 'GetHipObjectListDataNetworkInfoCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaResult(dict):
    def __init__(__self__, *,
                 network: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkResult'):
        """
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkArgs' network: The Network param.
        """
        pulumi.set(__self__, "network", network)

    @_builtins.property
    @pulumi.getter
    def network(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkResult':
        """
        The Network param.
        """
        return pulumi.get(self, "network")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkResult(dict):
    def __init__(__self__, *,
                 is_: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsResult',
                 is_not: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotResult'):
        """
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsArgs' is_: The Is param.
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotArgs' is_not: The IsNot param.
        """
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsResult':
        """
        The Is param.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotResult':
        """
        The IsNot param.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsResult(dict):
    def __init__(__self__, *,
                 mobile: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobileResult',
                 unknown: _builtins.bool,
                 wifi: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifiResult'):
        """
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobileArgs' mobile: The Mobile param.
        :param _builtins.bool unknown: The Unknown param.
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifiArgs' wifi: The Wifi param.
        """
        pulumi.set(__self__, "mobile", mobile)
        pulumi.set(__self__, "unknown", unknown)
        pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobileResult':
        """
        The Mobile param.
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> _builtins.bool:
        """
        The Unknown param.
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifiResult':
        """
        The Wifi param.
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsMobileResult(dict):
    def __init__(__self__, *,
                 carrier: _builtins.str):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> _builtins.str:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotResult(dict):
    def __init__(__self__, *,
                 ethernet: _builtins.bool,
                 mobile: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobileResult',
                 unknown: _builtins.bool,
                 wifi: 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifiResult'):
        """
        :param _builtins.bool ethernet: The Ethernet param.
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobileArgs' mobile: The Mobile param.
        :param _builtins.bool unknown: The Unknown param.
        :param 'GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifiArgs' wifi: The Wifi param.
        """
        pulumi.set(__self__, "ethernet", ethernet)
        pulumi.set(__self__, "mobile", mobile)
        pulumi.set(__self__, "unknown", unknown)
        pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def ethernet(self) -> _builtins.bool:
        """
        The Ethernet param.
        """
        return pulumi.get(self, "ethernet")

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobileResult':
        """
        The Mobile param.
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> _builtins.bool:
        """
        The Unknown param.
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> 'outputs.GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifiResult':
        """
        The Wifi param.
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotMobileResult(dict):
    def __init__(__self__, *,
                 carrier: _builtins.str):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> _builtins.str:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsNotWifiResult(dict):
    def __init__(__self__, *,
                 ssid: _builtins.str):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> _builtins.str:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class GetHipObjectListDataNetworkInfoCriteriaNetworkIsWifiResult(dict):
    def __init__(__self__, *,
                 ssid: _builtins.str):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> _builtins.str:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class GetHipObjectListDataPatchManagementResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectListDataPatchManagementCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectListDataPatchManagementVendorResult']):
        """
        :param 'GetHipObjectListDataPatchManagementCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectListDataPatchManagementVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectListDataPatchManagementCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectListDataPatchManagementVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectListDataPatchManagementCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool,
                 missing_patches: 'outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesResult'):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectListDataPatchManagementCriteriaMissingPatchesArgs' missing_patches: The MissingPatches param.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "missing_patches", missing_patches)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="missingPatches")
    def missing_patches(self) -> 'outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesResult':
        """
        The MissingPatches param.
        """
        return pulumi.get(self, "missing_patches")


@pulumi.output_type
class GetHipObjectListDataPatchManagementCriteriaMissingPatchesResult(dict):
    def __init__(__self__, *,
                 check: _builtins.str,
                 patches: Sequence[_builtins.str],
                 severity: 'outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverityResult'):
        """
        :param _builtins.str check: The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        :param Sequence[_builtins.str] patches: The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        :param 'GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverityArgs' severity: The Severity param.
        """
        pulumi.set(__self__, "check", check)
        pulumi.set(__self__, "patches", patches)
        pulumi.set(__self__, "severity", severity)

    @_builtins.property
    @pulumi.getter
    def check(self) -> _builtins.str:
        """
        The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        """
        return pulumi.get(self, "check")

    @_builtins.property
    @pulumi.getter
    def patches(self) -> Sequence[_builtins.str]:
        """
        The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "patches")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> 'outputs.GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverityResult':
        """
        The Severity param.
        """
        return pulumi.get(self, "severity")


@pulumi.output_type
class GetHipObjectListDataPatchManagementCriteriaMissingPatchesSeverityResult(dict):
    def __init__(__self__, *,
                 greater_equal: _builtins.int,
                 greater_than: _builtins.int,
                 is_: _builtins.int,
                 is_not: _builtins.int,
                 less_equal: _builtins.int,
                 less_than: _builtins.int):
        """
        :param _builtins.int greater_equal: The GreaterEqual param. Value must be between 0 and 100000.
        :param _builtins.int greater_than: The GreaterThan param. Value must be between 0 and 100000.
        :param _builtins.int is_: The Is param. Value must be between 0 and 100000.
        :param _builtins.int is_not: The IsNot param. Value must be between 0 and 100000.
        :param _builtins.int less_equal: The LessEqual param. Value must be between 0 and 100000.
        :param _builtins.int less_than: The LessThan param. Value must be between 0 and 100000.
        """
        pulumi.set(__self__, "greater_equal", greater_equal)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)
        pulumi.set(__self__, "less_equal", less_equal)
        pulumi.set(__self__, "less_than", less_than)

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> _builtins.int:
        """
        The GreaterEqual param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> _builtins.int:
        """
        The GreaterThan param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.int:
        """
        The Is param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.int:
        """
        The IsNot param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> _builtins.int:
        """
        The LessEqual param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> _builtins.int:
        """
        The LessThan param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "less_than")


@pulumi.output_type
class GetHipObjectListDataPatchManagementVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipObjectMobileDeviceResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectMobileDeviceCriteriaResult'):
        """
        :param 'GetHipObjectMobileDeviceCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaResult(dict):
    def __init__(__self__, *,
                 applications: 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsResult',
                 disk_encrypted: _builtins.bool,
                 imei: 'outputs.GetHipObjectMobileDeviceCriteriaImeiResult',
                 jailbroken: _builtins.bool,
                 last_checkin_time: 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeResult',
                 model: 'outputs.GetHipObjectMobileDeviceCriteriaModelResult',
                 passcode_set: _builtins.bool,
                 phone_number: 'outputs.GetHipObjectMobileDeviceCriteriaPhoneNumberResult',
                 tag: 'outputs.GetHipObjectMobileDeviceCriteriaTagResult'):
        """
        :param 'GetHipObjectMobileDeviceCriteriaApplicationsArgs' applications: The Applications param.
        :param _builtins.bool disk_encrypted: If device's disk is encrypted.
        :param 'GetHipObjectMobileDeviceCriteriaImeiArgs' imei: The Imei param.
        :param _builtins.bool jailbroken: If device is by rooted/jailbroken.
        :param 'GetHipObjectMobileDeviceCriteriaLastCheckinTimeArgs' last_checkin_time: The LastCheckinTime param.
        :param 'GetHipObjectMobileDeviceCriteriaModelArgs' model: The Model param.
        :param _builtins.bool passcode_set: If device's passcode is present.
        :param 'GetHipObjectMobileDeviceCriteriaPhoneNumberArgs' phone_number: The PhoneNumber param.
        :param 'GetHipObjectMobileDeviceCriteriaTagArgs' tag: The Tag param.
        """
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "disk_encrypted", disk_encrypted)
        pulumi.set(__self__, "imei", imei)
        pulumi.set(__self__, "jailbroken", jailbroken)
        pulumi.set(__self__, "last_checkin_time", last_checkin_time)
        pulumi.set(__self__, "model", model)
        pulumi.set(__self__, "passcode_set", passcode_set)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "tag", tag)

    @_builtins.property
    @pulumi.getter
    def applications(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsResult':
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter(name="diskEncrypted")
    def disk_encrypted(self) -> _builtins.bool:
        """
        If device's disk is encrypted.
        """
        return pulumi.get(self, "disk_encrypted")

    @_builtins.property
    @pulumi.getter
    def imei(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaImeiResult':
        """
        The Imei param.
        """
        return pulumi.get(self, "imei")

    @_builtins.property
    @pulumi.getter
    def jailbroken(self) -> _builtins.bool:
        """
        If device is by rooted/jailbroken.
        """
        return pulumi.get(self, "jailbroken")

    @_builtins.property
    @pulumi.getter(name="lastCheckinTime")
    def last_checkin_time(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeResult':
        """
        The LastCheckinTime param.
        """
        return pulumi.get(self, "last_checkin_time")

    @_builtins.property
    @pulumi.getter
    def model(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaModelResult':
        """
        The Model param.
        """
        return pulumi.get(self, "model")

    @_builtins.property
    @pulumi.getter(name="passcodeSet")
    def passcode_set(self) -> _builtins.bool:
        """
        If device's passcode is present.
        """
        return pulumi.get(self, "passcode_set")

    @_builtins.property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaPhoneNumberResult':
        """
        The PhoneNumber param.
        """
        return pulumi.get(self, "phone_number")

    @_builtins.property
    @pulumi.getter
    def tag(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaTagResult':
        """
        The Tag param.
        """
        return pulumi.get(self, "tag")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaApplicationsResult(dict):
    def __init__(__self__, *,
                 has_malware: 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareResult',
                 has_unmanaged_app: _builtins.bool,
                 includes: Sequence['outputs.GetHipObjectMobileDeviceCriteriaApplicationsIncludeResult']):
        """
        :param 'GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareArgs' has_malware: The HasMalware param.
        :param _builtins.bool has_unmanaged_app: Has apps that are not managed.
        :param Sequence['GetHipObjectMobileDeviceCriteriaApplicationsIncludeArgs'] includes: The Includes param.
        """
        pulumi.set(__self__, "has_malware", has_malware)
        pulumi.set(__self__, "has_unmanaged_app", has_unmanaged_app)
        pulumi.set(__self__, "includes", includes)

    @_builtins.property
    @pulumi.getter(name="hasMalware")
    def has_malware(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareResult':
        """
        The HasMalware param.
        """
        return pulumi.get(self, "has_malware")

    @_builtins.property
    @pulumi.getter(name="hasUnmanagedApp")
    def has_unmanaged_app(self) -> _builtins.bool:
        """
        Has apps that are not managed.
        """
        return pulumi.get(self, "has_unmanaged_app")

    @_builtins.property
    @pulumi.getter
    def includes(self) -> Sequence['outputs.GetHipObjectMobileDeviceCriteriaApplicationsIncludeResult']:
        """
        The Includes param.
        """
        return pulumi.get(self, "includes")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareResult(dict):
    def __init__(__self__, *,
                 no: _builtins.bool,
                 yes: 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesResult'):
        """
        :param _builtins.bool no: The No param.
        :param 'GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesArgs' yes: The Yes param.
        """
        pulumi.set(__self__, "no", no)
        pulumi.set(__self__, "yes", yes)

    @_builtins.property
    @pulumi.getter
    def no(self) -> _builtins.bool:
        """
        The No param.
        """
        return pulumi.get(self, "no")

    @_builtins.property
    @pulumi.getter
    def yes(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesResult':
        """
        The Yes param.
        """
        return pulumi.get(self, "yes")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesResult(dict):
    def __init__(__self__, *,
                 excludes: Sequence['outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult']):
        """
        :param Sequence['GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeArgs'] excludes: The Excludes param.
        """
        pulumi.set(__self__, "excludes", excludes)

    @_builtins.property
    @pulumi.getter
    def excludes(self) -> Sequence['outputs.GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult']:
        """
        The Excludes param.
        """
        return pulumi.get(self, "excludes")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaApplicationsHasMalwareYesExcludeResult(dict):
    def __init__(__self__, *,
                 hash: _builtins.str,
                 name: _builtins.str,
                 package: _builtins.str):
        """
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "hash", hash)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def hash(self) -> _builtins.str:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def package(self) -> _builtins.str:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaApplicationsIncludeResult(dict):
    def __init__(__self__, *,
                 hash: _builtins.str,
                 name: _builtins.str,
                 package: _builtins.str):
        """
        :param _builtins.str hash: application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        :param _builtins.str name: The Name param. String length must not exceed 31 characters.
        :param _builtins.str package: application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "hash", hash)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "package", package)

    @_builtins.property
    @pulumi.getter
    def hash(self) -> _builtins.str:
        """
        application hash. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "hash")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def package(self) -> _builtins.str:
        """
        application package name. String length must not exceed 1024 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "package")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaImeiResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaLastCheckinTimeResult(dict):
    def __init__(__self__, *,
                 not_within: 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinResult',
                 within: 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithinResult'):
        """
        :param 'GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinArgs' not_within: The NotWithin param.
        :param 'GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithinArgs' within: The Within param.
        """
        pulumi.set(__self__, "not_within", not_within)
        pulumi.set(__self__, "within", within)

    @_builtins.property
    @pulumi.getter(name="notWithin")
    def not_within(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinResult':
        """
        The NotWithin param.
        """
        return pulumi.get(self, "not_within")

    @_builtins.property
    @pulumi.getter
    def within(self) -> 'outputs.GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithinResult':
        """
        The Within param.
        """
        return pulumi.get(self, "within")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaLastCheckinTimeNotWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaLastCheckinTimeWithinResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int):
        """
        :param _builtins.int days: specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        pulumi.set(__self__, "days", days)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify time in days. Value must be between 1 and 365. Default: `30`.
        """
        return pulumi.get(self, "days")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaModelResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaPhoneNumberResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectMobileDeviceCriteriaTagResult(dict):
    def __init__(__self__, *,
                 contains: _builtins.str,
                 is_: _builtins.str,
                 is_not: _builtins.str):
        """
        :param _builtins.str contains: The Contains param. String length must not exceed 255 characters.
        :param _builtins.str is_: The Is param. String length must not exceed 255 characters.
        :param _builtins.str is_not: The IsNot param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "contains", contains)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter
    def contains(self) -> _builtins.str:
        """
        The Contains param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "contains")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.str:
        """
        The Is param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.str:
        """
        The IsNot param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectNetworkInfoResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectNetworkInfoCriteriaResult'):
        """
        :param 'GetHipObjectNetworkInfoCriteriaArgs' criteria: The Criteria param.
        """
        pulumi.set(__self__, "criteria", criteria)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaResult(dict):
    def __init__(__self__, *,
                 network: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkResult'):
        """
        :param 'GetHipObjectNetworkInfoCriteriaNetworkArgs' network: The Network param.
        """
        pulumi.set(__self__, "network", network)

    @_builtins.property
    @pulumi.getter
    def network(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkResult':
        """
        The Network param.
        """
        return pulumi.get(self, "network")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkResult(dict):
    def __init__(__self__, *,
                 is_: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsResult',
                 is_not: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotResult'):
        """
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsArgs' is_: The Is param.
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsNotArgs' is_not: The IsNot param.
        """
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsResult':
        """
        The Is param.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotResult':
        """
        The IsNot param.
        """
        return pulumi.get(self, "is_not")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsResult(dict):
    def __init__(__self__, *,
                 mobile: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsMobileResult',
                 unknown: _builtins.bool,
                 wifi: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsWifiResult'):
        """
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsMobileArgs' mobile: The Mobile param.
        :param _builtins.bool unknown: The Unknown param.
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsWifiArgs' wifi: The Wifi param.
        """
        pulumi.set(__self__, "mobile", mobile)
        pulumi.set(__self__, "unknown", unknown)
        pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsMobileResult':
        """
        The Mobile param.
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> _builtins.bool:
        """
        The Unknown param.
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsWifiResult':
        """
        The Wifi param.
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsMobileResult(dict):
    def __init__(__self__, *,
                 carrier: _builtins.str):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> _builtins.str:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsNotResult(dict):
    def __init__(__self__, *,
                 ethernet: _builtins.bool,
                 mobile: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotMobileResult',
                 unknown: _builtins.bool,
                 wifi: 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotWifiResult'):
        """
        :param _builtins.bool ethernet: The Ethernet param.
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsNotMobileArgs' mobile: The Mobile param.
        :param _builtins.bool unknown: The Unknown param.
        :param 'GetHipObjectNetworkInfoCriteriaNetworkIsNotWifiArgs' wifi: The Wifi param.
        """
        pulumi.set(__self__, "ethernet", ethernet)
        pulumi.set(__self__, "mobile", mobile)
        pulumi.set(__self__, "unknown", unknown)
        pulumi.set(__self__, "wifi", wifi)

    @_builtins.property
    @pulumi.getter
    def ethernet(self) -> _builtins.bool:
        """
        The Ethernet param.
        """
        return pulumi.get(self, "ethernet")

    @_builtins.property
    @pulumi.getter
    def mobile(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotMobileResult':
        """
        The Mobile param.
        """
        return pulumi.get(self, "mobile")

    @_builtins.property
    @pulumi.getter
    def unknown(self) -> _builtins.bool:
        """
        The Unknown param.
        """
        return pulumi.get(self, "unknown")

    @_builtins.property
    @pulumi.getter
    def wifi(self) -> 'outputs.GetHipObjectNetworkInfoCriteriaNetworkIsNotWifiResult':
        """
        The Wifi param.
        """
        return pulumi.get(self, "wifi")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsNotMobileResult(dict):
    def __init__(__self__, *,
                 carrier: _builtins.str):
        """
        :param _builtins.str carrier: The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "carrier", carrier)

    @_builtins.property
    @pulumi.getter
    def carrier(self) -> _builtins.str:
        """
        The Carrier param. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "carrier")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsNotWifiResult(dict):
    def __init__(__self__, *,
                 ssid: _builtins.str):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> _builtins.str:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class GetHipObjectNetworkInfoCriteriaNetworkIsWifiResult(dict):
    def __init__(__self__, *,
                 ssid: _builtins.str):
        """
        :param _builtins.str ssid: SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "ssid", ssid)

    @_builtins.property
    @pulumi.getter
    def ssid(self) -> _builtins.str:
        """
        SSID. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "ssid")


@pulumi.output_type
class GetHipObjectPatchManagementResult(dict):
    def __init__(__self__, *,
                 criteria: 'outputs.GetHipObjectPatchManagementCriteriaResult',
                 exclude_vendor: _builtins.bool,
                 vendors: Sequence['outputs.GetHipObjectPatchManagementVendorResult']):
        """
        :param 'GetHipObjectPatchManagementCriteriaArgs' criteria: The Criteria param.
        :param _builtins.bool exclude_vendor: The ExcludeVendor param. Default: `false`.
        :param Sequence['GetHipObjectPatchManagementVendorArgs'] vendors: Vendor name.
        """
        pulumi.set(__self__, "criteria", criteria)
        pulumi.set(__self__, "exclude_vendor", exclude_vendor)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter
    def criteria(self) -> 'outputs.GetHipObjectPatchManagementCriteriaResult':
        """
        The Criteria param.
        """
        return pulumi.get(self, "criteria")

    @_builtins.property
    @pulumi.getter(name="excludeVendor")
    def exclude_vendor(self) -> _builtins.bool:
        """
        The ExcludeVendor param. Default: `false`.
        """
        return pulumi.get(self, "exclude_vendor")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence['outputs.GetHipObjectPatchManagementVendorResult']:
        """
        Vendor name.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetHipObjectPatchManagementCriteriaResult(dict):
    def __init__(__self__, *,
                 is_enabled: _builtins.str,
                 is_installed: _builtins.bool,
                 missing_patches: 'outputs.GetHipObjectPatchManagementCriteriaMissingPatchesResult'):
        """
        :param _builtins.str is_enabled: is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        :param _builtins.bool is_installed: Is Installed. Default: `true`.
        :param 'GetHipObjectPatchManagementCriteriaMissingPatchesArgs' missing_patches: The MissingPatches param.
        """
        pulumi.set(__self__, "is_enabled", is_enabled)
        pulumi.set(__self__, "is_installed", is_installed)
        pulumi.set(__self__, "missing_patches", missing_patches)

    @_builtins.property
    @pulumi.getter(name="isEnabled")
    def is_enabled(self) -> _builtins.str:
        """
        is enabled. String must be one of these: `"no"`, `"yes"`, `"not-available"`.
        """
        return pulumi.get(self, "is_enabled")

    @_builtins.property
    @pulumi.getter(name="isInstalled")
    def is_installed(self) -> _builtins.bool:
        """
        Is Installed. Default: `true`.
        """
        return pulumi.get(self, "is_installed")

    @_builtins.property
    @pulumi.getter(name="missingPatches")
    def missing_patches(self) -> 'outputs.GetHipObjectPatchManagementCriteriaMissingPatchesResult':
        """
        The MissingPatches param.
        """
        return pulumi.get(self, "missing_patches")


@pulumi.output_type
class GetHipObjectPatchManagementCriteriaMissingPatchesResult(dict):
    def __init__(__self__, *,
                 check: _builtins.str,
                 patches: Sequence[_builtins.str],
                 severity: 'outputs.GetHipObjectPatchManagementCriteriaMissingPatchesSeverityResult'):
        """
        :param _builtins.str check: The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        :param Sequence[_builtins.str] patches: The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        :param 'GetHipObjectPatchManagementCriteriaMissingPatchesSeverityArgs' severity: The Severity param.
        """
        pulumi.set(__self__, "check", check)
        pulumi.set(__self__, "patches", patches)
        pulumi.set(__self__, "severity", severity)

    @_builtins.property
    @pulumi.getter
    def check(self) -> _builtins.str:
        """
        The Check param. String must be one of these: `"has-any"`, `"has-none"`, `"has-all"`. Default: `"has-any"`.
        """
        return pulumi.get(self, "check")

    @_builtins.property
    @pulumi.getter
    def patches(self) -> Sequence[_builtins.str]:
        """
        The Patches param. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "patches")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> 'outputs.GetHipObjectPatchManagementCriteriaMissingPatchesSeverityResult':
        """
        The Severity param.
        """
        return pulumi.get(self, "severity")


@pulumi.output_type
class GetHipObjectPatchManagementCriteriaMissingPatchesSeverityResult(dict):
    def __init__(__self__, *,
                 greater_equal: _builtins.int,
                 greater_than: _builtins.int,
                 is_: _builtins.int,
                 is_not: _builtins.int,
                 less_equal: _builtins.int,
                 less_than: _builtins.int):
        """
        :param _builtins.int greater_equal: The GreaterEqual param. Value must be between 0 and 100000.
        :param _builtins.int greater_than: The GreaterThan param. Value must be between 0 and 100000.
        :param _builtins.int is_: The Is param. Value must be between 0 and 100000.
        :param _builtins.int is_not: The IsNot param. Value must be between 0 and 100000.
        :param _builtins.int less_equal: The LessEqual param. Value must be between 0 and 100000.
        :param _builtins.int less_than: The LessThan param. Value must be between 0 and 100000.
        """
        pulumi.set(__self__, "greater_equal", greater_equal)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "is_", is_)
        pulumi.set(__self__, "is_not", is_not)
        pulumi.set(__self__, "less_equal", less_equal)
        pulumi.set(__self__, "less_than", less_than)

    @_builtins.property
    @pulumi.getter(name="greaterEqual")
    def greater_equal(self) -> _builtins.int:
        """
        The GreaterEqual param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "greater_equal")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> _builtins.int:
        """
        The GreaterThan param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="is")
    def is_(self) -> _builtins.int:
        """
        The Is param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "is_")

    @_builtins.property
    @pulumi.getter(name="isNot")
    def is_not(self) -> _builtins.int:
        """
        The IsNot param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "is_not")

    @_builtins.property
    @pulumi.getter(name="lessEqual")
    def less_equal(self) -> _builtins.int:
        """
        The LessEqual param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "less_equal")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> _builtins.int:
        """
        The LessThan param. Value must be between 0 and 100000.
        """
        return pulumi.get(self, "less_than")


@pulumi.output_type
class GetHipObjectPatchManagementVendorResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 products: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 103 characters.
        :param Sequence[_builtins.str] products: Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "products", products)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 103 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def products(self) -> Sequence[_builtins.str]:
        """
        Product name. Individual elements in this list are subject to additional validation. String length must not exceed 1023 characters. String validation regex: `.*`.
        """
        return pulumi.get(self, "products")


@pulumi.output_type
class GetHipProfileListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 match: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str match: The Match param. String length must not exceed 2048 characters.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "match", match)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def match(self) -> _builtins.str:
        """
        The Match param. String length must not exceed 2048 characters.
        """
        return pulumi.get(self, "match")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHttpHeaderProfileHttpHeaderInsertionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 types: Sequence['outputs.GetHttpHeaderProfileHttpHeaderInsertionTypeResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetHttpHeaderProfileHttpHeaderInsertionTypeArgs'] types: The Types param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "types", types)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def types(self) -> Sequence['outputs.GetHttpHeaderProfileHttpHeaderInsertionTypeResult']:
        """
        The Types param.
        """
        return pulumi.get(self, "types")


@pulumi.output_type
class GetHttpHeaderProfileHttpHeaderInsertionTypeResult(dict):
    def __init__(__self__, *,
                 domains: Sequence[_builtins.str],
                 headers: Sequence['outputs.GetHttpHeaderProfileHttpHeaderInsertionTypeHeaderResult'],
                 name: _builtins.str):
        """
        :param Sequence[_builtins.str] domains: The Domains param.
        :param Sequence['GetHttpHeaderProfileHttpHeaderInsertionTypeHeaderArgs'] headers: The Headers param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "headers", headers)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def domains(self) -> Sequence[_builtins.str]:
        """
        The Domains param.
        """
        return pulumi.get(self, "domains")

    @_builtins.property
    @pulumi.getter
    def headers(self) -> Sequence['outputs.GetHttpHeaderProfileHttpHeaderInsertionTypeHeaderResult']:
        """
        The Headers param.
        """
        return pulumi.get(self, "headers")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHttpHeaderProfileHttpHeaderInsertionTypeHeaderResult(dict):
    def __init__(__self__, *,
                 header: _builtins.str,
                 log: _builtins.bool,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str header: The Header param.
        :param _builtins.bool log: The Log param. Default: `false`.
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "header", header)
        pulumi.set(__self__, "log", log)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def header(self) -> _builtins.str:
        """
        The Header param.
        """
        return pulumi.get(self, "header")

    @_builtins.property
    @pulumi.getter
    def log(self) -> _builtins.bool:
        """
        The Log param. Default: `false`.
        """
        return pulumi.get(self, "log")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetHttpHeaderProfileListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 http_header_insertions: Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionResult'],
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param Sequence['GetHttpHeaderProfileListDataHttpHeaderInsertionArgs'] http_header_insertions: The HttpHeaderInsertions param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "http_header_insertions", http_header_insertions)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="httpHeaderInsertions")
    def http_header_insertions(self) -> Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionResult']:
        """
        The HttpHeaderInsertions param.
        """
        return pulumi.get(self, "http_header_insertions")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHttpHeaderProfileListDataHttpHeaderInsertionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 types: Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionTypeResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetHttpHeaderProfileListDataHttpHeaderInsertionTypeArgs'] types: The Types param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "types", types)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def types(self) -> Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionTypeResult']:
        """
        The Types param.
        """
        return pulumi.get(self, "types")


@pulumi.output_type
class GetHttpHeaderProfileListDataHttpHeaderInsertionTypeResult(dict):
    def __init__(__self__, *,
                 domains: Sequence[_builtins.str],
                 headers: Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeaderResult'],
                 name: _builtins.str):
        """
        :param Sequence[_builtins.str] domains: The Domains param.
        :param Sequence['GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeaderArgs'] headers: The Headers param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "headers", headers)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def domains(self) -> Sequence[_builtins.str]:
        """
        The Domains param.
        """
        return pulumi.get(self, "domains")

    @_builtins.property
    @pulumi.getter
    def headers(self) -> Sequence['outputs.GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeaderResult']:
        """
        The Headers param.
        """
        return pulumi.get(self, "headers")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetHttpHeaderProfileListDataHttpHeaderInsertionTypeHeaderResult(dict):
    def __init__(__self__, *,
                 header: _builtins.str,
                 log: _builtins.bool,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str header: The Header param.
        :param _builtins.bool log: The Log param. Default: `false`.
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "header", header)
        pulumi.set(__self__, "log", log)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def header(self) -> _builtins.str:
        """
        The Header param.
        """
        return pulumi.get(self, "header")

    @_builtins.property
    @pulumi.getter
    def log(self) -> _builtins.bool:
        """
        The Log param. Default: `false`.
        """
        return pulumi.get(self, "log")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetIkeCryptoProfileLifetimeResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int,
                 minutes: _builtins.int,
                 seconds: _builtins.int):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365.
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535.
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535.
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)
        pulumi.set(__self__, "minutes", minutes)
        pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify lifetime in days. Value must be between 1 and 365.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify lifetime in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> _builtins.int:
        """
        specify lifetime in minutes. Value must be between 3 and 65535.
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> _builtins.int:
        """
        specify lifetime in seconds. Value must be between 180 and 65535.
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class GetIkeCryptoProfileListDataResult(dict):
    def __init__(__self__, *,
                 authentication_multiple: _builtins.int,
                 dh_groups: Sequence[_builtins.str],
                 encryptions: Sequence[_builtins.str],
                 hashes: Sequence[_builtins.str],
                 id: _builtins.str,
                 lifetime: 'outputs.GetIkeCryptoProfileListDataLifetimeResult',
                 name: _builtins.str):
        """
        :param _builtins.int authentication_multiple: IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
        :param Sequence[_builtins.str] dh_groups: The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`.
        :param Sequence[_builtins.str] encryptions: Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`.
        :param Sequence[_builtins.str] hashes: The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        :param _builtins.str id: UUID of the resource.
        :param 'GetIkeCryptoProfileListDataLifetimeArgs' lifetime: The Lifetime param.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "authentication_multiple", authentication_multiple)
        pulumi.set(__self__, "dh_groups", dh_groups)
        pulumi.set(__self__, "encryptions", encryptions)
        pulumi.set(__self__, "hashes", hashes)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifetime", lifetime)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="authenticationMultiple")
    def authentication_multiple(self) -> _builtins.int:
        """
        IKEv2 SA reauthentication interval equals authetication-multiple * rekey-lifetime; 0 means reauthentication disabled. Value must be less than or equal to 50. Default: `0`.
        """
        return pulumi.get(self, "authentication_multiple")

    @_builtins.property
    @pulumi.getter(name="dhGroups")
    def dh_groups(self) -> Sequence[_builtins.str]:
        """
        The DhGroups param. Individual elements in this list are subject to additional validation. String must be one of these: `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`.
        """
        return pulumi.get(self, "dh_groups")

    @_builtins.property
    @pulumi.getter
    def encryptions(self) -> Sequence[_builtins.str]:
        """
        Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`.
        """
        return pulumi.get(self, "encryptions")

    @_builtins.property
    @pulumi.getter
    def hashes(self) -> Sequence[_builtins.str]:
        """
        The Hashes param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        return pulumi.get(self, "hashes")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def lifetime(self) -> 'outputs.GetIkeCryptoProfileListDataLifetimeResult':
        """
        The Lifetime param.
        """
        return pulumi.get(self, "lifetime")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetIkeCryptoProfileListDataLifetimeResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int,
                 minutes: _builtins.int,
                 seconds: _builtins.int):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365.
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535.
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535.
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)
        pulumi.set(__self__, "minutes", minutes)
        pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify lifetime in days. Value must be between 1 and 365.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify lifetime in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> _builtins.int:
        """
        specify lifetime in minutes. Value must be between 3 and 65535.
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> _builtins.int:
        """
        specify lifetime in seconds. Value must be between 180 and 65535.
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class GetIkeGatewayAuthenticationResult(dict):
    def __init__(__self__, *,
                 certificate: 'outputs.GetIkeGatewayAuthenticationCertificateResult',
                 pre_shared_key: 'outputs.GetIkeGatewayAuthenticationPreSharedKeyResult'):
        """
        :param 'GetIkeGatewayAuthenticationCertificateArgs' certificate: The Certificate param.
        :param 'GetIkeGatewayAuthenticationPreSharedKeyArgs' pre_shared_key: The PreSharedKey param.
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "pre_shared_key", pre_shared_key)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> 'outputs.GetIkeGatewayAuthenticationCertificateResult':
        """
        The Certificate param.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="preSharedKey")
    def pre_shared_key(self) -> 'outputs.GetIkeGatewayAuthenticationPreSharedKeyResult':
        """
        The PreSharedKey param.
        """
        return pulumi.get(self, "pre_shared_key")


@pulumi.output_type
class GetIkeGatewayAuthenticationCertificateResult(dict):
    def __init__(__self__, *,
                 allow_id_payload_mismatch: _builtins.bool,
                 certificate_profile: _builtins.str,
                 local_certificate: 'outputs.GetIkeGatewayAuthenticationCertificateLocalCertificateResult',
                 strict_validation_revocation: _builtins.bool,
                 use_management_as_source: _builtins.bool):
        """
        :param _builtins.bool allow_id_payload_mismatch: The AllowIdPayloadMismatch param.
        :param _builtins.str certificate_profile: The CertificateProfile param.
        :param 'GetIkeGatewayAuthenticationCertificateLocalCertificateArgs' local_certificate: The LocalCertificate param.
        :param _builtins.bool strict_validation_revocation: The StrictValidationRevocation param.
        :param _builtins.bool use_management_as_source: The UseManagementAsSource param.
        """
        pulumi.set(__self__, "allow_id_payload_mismatch", allow_id_payload_mismatch)
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "local_certificate", local_certificate)
        pulumi.set(__self__, "strict_validation_revocation", strict_validation_revocation)
        pulumi.set(__self__, "use_management_as_source", use_management_as_source)

    @_builtins.property
    @pulumi.getter(name="allowIdPayloadMismatch")
    def allow_id_payload_mismatch(self) -> _builtins.bool:
        """
        The AllowIdPayloadMismatch param.
        """
        return pulumi.get(self, "allow_id_payload_mismatch")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="localCertificate")
    def local_certificate(self) -> 'outputs.GetIkeGatewayAuthenticationCertificateLocalCertificateResult':
        """
        The LocalCertificate param.
        """
        return pulumi.get(self, "local_certificate")

    @_builtins.property
    @pulumi.getter(name="strictValidationRevocation")
    def strict_validation_revocation(self) -> _builtins.bool:
        """
        The StrictValidationRevocation param.
        """
        return pulumi.get(self, "strict_validation_revocation")

    @_builtins.property
    @pulumi.getter(name="useManagementAsSource")
    def use_management_as_source(self) -> _builtins.bool:
        """
        The UseManagementAsSource param.
        """
        return pulumi.get(self, "use_management_as_source")


@pulumi.output_type
class GetIkeGatewayAuthenticationCertificateLocalCertificateResult(dict):
    def __init__(__self__, *,
                 local_certificate_name: _builtins.str):
        """
        :param _builtins.str local_certificate_name: The LocalCertificateName param.
        """
        pulumi.set(__self__, "local_certificate_name", local_certificate_name)

    @_builtins.property
    @pulumi.getter(name="localCertificateName")
    def local_certificate_name(self) -> _builtins.str:
        """
        The LocalCertificateName param.
        """
        return pulumi.get(self, "local_certificate_name")


@pulumi.output_type
class GetIkeGatewayAuthenticationPreSharedKeyResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str):
        """
        :param _builtins.str key: The Key param.
        """
        pulumi.set(__self__, "key", key)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        The Key param.
        """
        return pulumi.get(self, "key")


@pulumi.output_type
class GetIkeGatewayListDataResult(dict):
    def __init__(__self__, *,
                 authentication: 'outputs.GetIkeGatewayListDataAuthenticationResult',
                 id: _builtins.str,
                 local_id: 'outputs.GetIkeGatewayListDataLocalIdResult',
                 name: _builtins.str,
                 peer_address: 'outputs.GetIkeGatewayListDataPeerAddressResult',
                 peer_id: 'outputs.GetIkeGatewayListDataPeerIdResult',
                 protocol: 'outputs.GetIkeGatewayListDataProtocolResult',
                 protocol_common: 'outputs.GetIkeGatewayListDataProtocolCommonResult'):
        """
        :param 'GetIkeGatewayListDataAuthenticationArgs' authentication: The Authentication param.
        :param _builtins.str id: UUID of the resource.
        :param 'GetIkeGatewayListDataLocalIdArgs' local_id: The LocalId param.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param 'GetIkeGatewayListDataPeerAddressArgs' peer_address: The PeerAddress param.
        :param 'GetIkeGatewayListDataPeerIdArgs' peer_id: The PeerId param.
        :param 'GetIkeGatewayListDataProtocolArgs' protocol: The Protocol param.
        :param 'GetIkeGatewayListDataProtocolCommonArgs' protocol_common: The ProtocolCommon param.
        """
        pulumi.set(__self__, "authentication", authentication)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "local_id", local_id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "peer_address", peer_address)
        pulumi.set(__self__, "peer_id", peer_id)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "protocol_common", protocol_common)

    @_builtins.property
    @pulumi.getter
    def authentication(self) -> 'outputs.GetIkeGatewayListDataAuthenticationResult':
        """
        The Authentication param.
        """
        return pulumi.get(self, "authentication")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="localId")
    def local_id(self) -> 'outputs.GetIkeGatewayListDataLocalIdResult':
        """
        The LocalId param.
        """
        return pulumi.get(self, "local_id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="peerAddress")
    def peer_address(self) -> 'outputs.GetIkeGatewayListDataPeerAddressResult':
        """
        The PeerAddress param.
        """
        return pulumi.get(self, "peer_address")

    @_builtins.property
    @pulumi.getter(name="peerId")
    def peer_id(self) -> 'outputs.GetIkeGatewayListDataPeerIdResult':
        """
        The PeerId param.
        """
        return pulumi.get(self, "peer_id")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetIkeGatewayListDataProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter(name="protocolCommon")
    def protocol_common(self) -> 'outputs.GetIkeGatewayListDataProtocolCommonResult':
        """
        The ProtocolCommon param.
        """
        return pulumi.get(self, "protocol_common")


@pulumi.output_type
class GetIkeGatewayListDataAuthenticationResult(dict):
    def __init__(__self__, *,
                 certificate: 'outputs.GetIkeGatewayListDataAuthenticationCertificateResult',
                 pre_shared_key: 'outputs.GetIkeGatewayListDataAuthenticationPreSharedKeyResult'):
        """
        :param 'GetIkeGatewayListDataAuthenticationCertificateArgs' certificate: The Certificate param.
        :param 'GetIkeGatewayListDataAuthenticationPreSharedKeyArgs' pre_shared_key: The PreSharedKey param.
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "pre_shared_key", pre_shared_key)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> 'outputs.GetIkeGatewayListDataAuthenticationCertificateResult':
        """
        The Certificate param.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="preSharedKey")
    def pre_shared_key(self) -> 'outputs.GetIkeGatewayListDataAuthenticationPreSharedKeyResult':
        """
        The PreSharedKey param.
        """
        return pulumi.get(self, "pre_shared_key")


@pulumi.output_type
class GetIkeGatewayListDataAuthenticationCertificateResult(dict):
    def __init__(__self__, *,
                 allow_id_payload_mismatch: _builtins.bool,
                 certificate_profile: _builtins.str,
                 local_certificate: 'outputs.GetIkeGatewayListDataAuthenticationCertificateLocalCertificateResult',
                 strict_validation_revocation: _builtins.bool,
                 use_management_as_source: _builtins.bool):
        """
        :param _builtins.bool allow_id_payload_mismatch: The AllowIdPayloadMismatch param.
        :param _builtins.str certificate_profile: The CertificateProfile param.
        :param 'GetIkeGatewayListDataAuthenticationCertificateLocalCertificateArgs' local_certificate: The LocalCertificate param.
        :param _builtins.bool strict_validation_revocation: The StrictValidationRevocation param.
        :param _builtins.bool use_management_as_source: The UseManagementAsSource param.
        """
        pulumi.set(__self__, "allow_id_payload_mismatch", allow_id_payload_mismatch)
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        pulumi.set(__self__, "local_certificate", local_certificate)
        pulumi.set(__self__, "strict_validation_revocation", strict_validation_revocation)
        pulumi.set(__self__, "use_management_as_source", use_management_as_source)

    @_builtins.property
    @pulumi.getter(name="allowIdPayloadMismatch")
    def allow_id_payload_mismatch(self) -> _builtins.bool:
        """
        The AllowIdPayloadMismatch param.
        """
        return pulumi.get(self, "allow_id_payload_mismatch")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="localCertificate")
    def local_certificate(self) -> 'outputs.GetIkeGatewayListDataAuthenticationCertificateLocalCertificateResult':
        """
        The LocalCertificate param.
        """
        return pulumi.get(self, "local_certificate")

    @_builtins.property
    @pulumi.getter(name="strictValidationRevocation")
    def strict_validation_revocation(self) -> _builtins.bool:
        """
        The StrictValidationRevocation param.
        """
        return pulumi.get(self, "strict_validation_revocation")

    @_builtins.property
    @pulumi.getter(name="useManagementAsSource")
    def use_management_as_source(self) -> _builtins.bool:
        """
        The UseManagementAsSource param.
        """
        return pulumi.get(self, "use_management_as_source")


@pulumi.output_type
class GetIkeGatewayListDataAuthenticationCertificateLocalCertificateResult(dict):
    def __init__(__self__, *,
                 local_certificate_name: _builtins.str):
        """
        :param _builtins.str local_certificate_name: The LocalCertificateName param.
        """
        pulumi.set(__self__, "local_certificate_name", local_certificate_name)

    @_builtins.property
    @pulumi.getter(name="localCertificateName")
    def local_certificate_name(self) -> _builtins.str:
        """
        The LocalCertificateName param.
        """
        return pulumi.get(self, "local_certificate_name")


@pulumi.output_type
class GetIkeGatewayListDataAuthenticationPreSharedKeyResult(dict):
    def __init__(__self__, *,
                 key: _builtins.str):
        """
        :param _builtins.str key: The Key param.
        """
        pulumi.set(__self__, "key", key)

    @_builtins.property
    @pulumi.getter
    def key(self) -> _builtins.str:
        """
        The Key param.
        """
        return pulumi.get(self, "key")


@pulumi.output_type
class GetIkeGatewayListDataLocalIdResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetIkeGatewayListDataPeerAddressResult(dict):
    def __init__(__self__, *,
                 dynamic_address: _builtins.bool,
                 fqdn: _builtins.str,
                 ip: _builtins.str):
        """
        :param _builtins.bool dynamic_address: The DynamicAddress param.
        :param _builtins.str fqdn: peer gateway FQDN name. String length must not exceed 255 characters.
        :param _builtins.str ip: peer gateway has static IP address.
        """
        pulumi.set(__self__, "dynamic_address", dynamic_address)
        pulumi.set(__self__, "fqdn", fqdn)
        pulumi.set(__self__, "ip", ip)

    @_builtins.property
    @pulumi.getter(name="dynamicAddress")
    def dynamic_address(self) -> _builtins.bool:
        """
        The DynamicAddress param.
        """
        return pulumi.get(self, "dynamic_address")

    @_builtins.property
    @pulumi.getter
    def fqdn(self) -> _builtins.str:
        """
        peer gateway FQDN name. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "fqdn")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> _builtins.str:
        """
        peer gateway has static IP address.
        """
        return pulumi.get(self, "ip")


@pulumi.output_type
class GetIkeGatewayListDataPeerIdResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetIkeGatewayListDataProtocolResult(dict):
    def __init__(__self__, *,
                 ikev1: 'outputs.GetIkeGatewayListDataProtocolIkev1Result',
                 ikev2: 'outputs.GetIkeGatewayListDataProtocolIkev2Result',
                 version: _builtins.str):
        """
        :param 'GetIkeGatewayListDataProtocolIkev1Args' ikev1: The Ikev1 param.
        :param 'GetIkeGatewayListDataProtocolIkev2Args' ikev2: The Ikev2 param.
        :param _builtins.str version: The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        pulumi.set(__self__, "ikev1", ikev1)
        pulumi.set(__self__, "ikev2", ikev2)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def ikev1(self) -> 'outputs.GetIkeGatewayListDataProtocolIkev1Result':
        """
        The Ikev1 param.
        """
        return pulumi.get(self, "ikev1")

    @_builtins.property
    @pulumi.getter
    def ikev2(self) -> 'outputs.GetIkeGatewayListDataProtocolIkev2Result':
        """
        The Ikev2 param.
        """
        return pulumi.get(self, "ikev2")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetIkeGatewayListDataProtocolCommonResult(dict):
    def __init__(__self__, *,
                 fragmentation: 'outputs.GetIkeGatewayListDataProtocolCommonFragmentationResult',
                 nat_traversal: 'outputs.GetIkeGatewayListDataProtocolCommonNatTraversalResult',
                 passive_mode: _builtins.bool):
        """
        :param 'GetIkeGatewayListDataProtocolCommonFragmentationArgs' fragmentation: The Fragmentation param.
        :param 'GetIkeGatewayListDataProtocolCommonNatTraversalArgs' nat_traversal: The NatTraversal param.
        :param _builtins.bool passive_mode: The PassiveMode param.
        """
        pulumi.set(__self__, "fragmentation", fragmentation)
        pulumi.set(__self__, "nat_traversal", nat_traversal)
        pulumi.set(__self__, "passive_mode", passive_mode)

    @_builtins.property
    @pulumi.getter
    def fragmentation(self) -> 'outputs.GetIkeGatewayListDataProtocolCommonFragmentationResult':
        """
        The Fragmentation param.
        """
        return pulumi.get(self, "fragmentation")

    @_builtins.property
    @pulumi.getter(name="natTraversal")
    def nat_traversal(self) -> 'outputs.GetIkeGatewayListDataProtocolCommonNatTraversalResult':
        """
        The NatTraversal param.
        """
        return pulumi.get(self, "nat_traversal")

    @_builtins.property
    @pulumi.getter(name="passiveMode")
    def passive_mode(self) -> _builtins.bool:
        """
        The PassiveMode param.
        """
        return pulumi.get(self, "passive_mode")


@pulumi.output_type
class GetIkeGatewayListDataProtocolCommonFragmentationResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param. Default: `false`.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param. Default: `false`.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayListDataProtocolCommonNatTraversalResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayListDataProtocolIkev1Result(dict):
    def __init__(__self__, *,
                 dpd: 'outputs.GetIkeGatewayListDataProtocolIkev1DpdResult',
                 ike_crypto_profile: _builtins.str):
        """
        :param 'GetIkeGatewayListDataProtocolIkev1DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        pulumi.set(__self__, "dpd", dpd)
        pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> 'outputs.GetIkeGatewayListDataProtocolIkev1DpdResult':
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> _builtins.str:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class GetIkeGatewayListDataProtocolIkev1DpdResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayListDataProtocolIkev2Result(dict):
    def __init__(__self__, *,
                 dpd: 'outputs.GetIkeGatewayListDataProtocolIkev2DpdResult',
                 ike_crypto_profile: _builtins.str):
        """
        :param 'GetIkeGatewayListDataProtocolIkev2DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        pulumi.set(__self__, "dpd", dpd)
        pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> 'outputs.GetIkeGatewayListDataProtocolIkev2DpdResult':
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> _builtins.str:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class GetIkeGatewayListDataProtocolIkev2DpdResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayLocalIdResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Local ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[a-zA-Z0-9.-]+)$|^([$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetIkeGatewayPeerAddressResult(dict):
    def __init__(__self__, *,
                 dynamic_address: _builtins.bool,
                 fqdn: _builtins.str,
                 ip: _builtins.str):
        """
        :param _builtins.bool dynamic_address: The DynamicAddress param.
        :param _builtins.str fqdn: peer gateway FQDN name. String length must not exceed 255 characters.
        :param _builtins.str ip: peer gateway has static IP address.
        """
        pulumi.set(__self__, "dynamic_address", dynamic_address)
        pulumi.set(__self__, "fqdn", fqdn)
        pulumi.set(__self__, "ip", ip)

    @_builtins.property
    @pulumi.getter(name="dynamicAddress")
    def dynamic_address(self) -> _builtins.bool:
        """
        The DynamicAddress param.
        """
        return pulumi.get(self, "dynamic_address")

    @_builtins.property
    @pulumi.getter
    def fqdn(self) -> _builtins.str:
        """
        peer gateway FQDN name. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "fqdn")

    @_builtins.property
    @pulumi.getter
    def ip(self) -> _builtins.str:
        """
        peer gateway has static IP address.
        """
        return pulumi.get(self, "ip")


@pulumi.output_type
class GetIkeGatewayPeerIdResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str id: Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        :param _builtins.str type: The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        Peer ID string. String length must be between 1 and 1024 characters. String validation regex: `^(.+\\@[\\*a-zA-Z0-9.-]+)$|^([\\*$a-zA-Z0-9_:.-]+)$|^(([[:xdigit:]][[:xdigit:]])+)$|^([a-zA-Z0-9.]+=(\\\\,|[^,])+[, ]+)*([a-zA-Z0-9.]+=(\\\\,|[^,])+)$`.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param. String must be one of these: `"ipaddr"`, `"keyid"`, `"fqdn"`, `"ufqdn"`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetIkeGatewayProtocolResult(dict):
    def __init__(__self__, *,
                 ikev1: 'outputs.GetIkeGatewayProtocolIkev1Result',
                 ikev2: 'outputs.GetIkeGatewayProtocolIkev2Result',
                 version: _builtins.str):
        """
        :param 'GetIkeGatewayProtocolIkev1Args' ikev1: The Ikev1 param.
        :param 'GetIkeGatewayProtocolIkev2Args' ikev2: The Ikev2 param.
        :param _builtins.str version: The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        pulumi.set(__self__, "ikev1", ikev1)
        pulumi.set(__self__, "ikev2", ikev2)
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def ikev1(self) -> 'outputs.GetIkeGatewayProtocolIkev1Result':
        """
        The Ikev1 param.
        """
        return pulumi.get(self, "ikev1")

    @_builtins.property
    @pulumi.getter
    def ikev2(self) -> 'outputs.GetIkeGatewayProtocolIkev2Result':
        """
        The Ikev2 param.
        """
        return pulumi.get(self, "ikev2")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        """
        The Version param. String must be one of these: `"ikev2-preferred"`, `"ikev1"`, `"ikev2"`. Default: `"ikev2-preferred"`.
        """
        return pulumi.get(self, "version")


@pulumi.output_type
class GetIkeGatewayProtocolCommonResult(dict):
    def __init__(__self__, *,
                 fragmentation: 'outputs.GetIkeGatewayProtocolCommonFragmentationResult',
                 nat_traversal: 'outputs.GetIkeGatewayProtocolCommonNatTraversalResult',
                 passive_mode: _builtins.bool):
        """
        :param 'GetIkeGatewayProtocolCommonFragmentationArgs' fragmentation: The Fragmentation param.
        :param 'GetIkeGatewayProtocolCommonNatTraversalArgs' nat_traversal: The NatTraversal param.
        :param _builtins.bool passive_mode: The PassiveMode param.
        """
        pulumi.set(__self__, "fragmentation", fragmentation)
        pulumi.set(__self__, "nat_traversal", nat_traversal)
        pulumi.set(__self__, "passive_mode", passive_mode)

    @_builtins.property
    @pulumi.getter
    def fragmentation(self) -> 'outputs.GetIkeGatewayProtocolCommonFragmentationResult':
        """
        The Fragmentation param.
        """
        return pulumi.get(self, "fragmentation")

    @_builtins.property
    @pulumi.getter(name="natTraversal")
    def nat_traversal(self) -> 'outputs.GetIkeGatewayProtocolCommonNatTraversalResult':
        """
        The NatTraversal param.
        """
        return pulumi.get(self, "nat_traversal")

    @_builtins.property
    @pulumi.getter(name="passiveMode")
    def passive_mode(self) -> _builtins.bool:
        """
        The PassiveMode param.
        """
        return pulumi.get(self, "passive_mode")


@pulumi.output_type
class GetIkeGatewayProtocolCommonFragmentationResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param. Default: `false`.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param. Default: `false`.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayProtocolCommonNatTraversalResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayProtocolIkev1Result(dict):
    def __init__(__self__, *,
                 dpd: 'outputs.GetIkeGatewayProtocolIkev1DpdResult',
                 ike_crypto_profile: _builtins.str):
        """
        :param 'GetIkeGatewayProtocolIkev1DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        pulumi.set(__self__, "dpd", dpd)
        pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> 'outputs.GetIkeGatewayProtocolIkev1DpdResult':
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> _builtins.str:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class GetIkeGatewayProtocolIkev1DpdResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetIkeGatewayProtocolIkev2Result(dict):
    def __init__(__self__, *,
                 dpd: 'outputs.GetIkeGatewayProtocolIkev2DpdResult',
                 ike_crypto_profile: _builtins.str):
        """
        :param 'GetIkeGatewayProtocolIkev2DpdArgs' dpd: The Dpd param.
        :param _builtins.str ike_crypto_profile: The IkeCryptoProfile param.
        """
        pulumi.set(__self__, "dpd", dpd)
        pulumi.set(__self__, "ike_crypto_profile", ike_crypto_profile)

    @_builtins.property
    @pulumi.getter
    def dpd(self) -> 'outputs.GetIkeGatewayProtocolIkev2DpdResult':
        """
        The Dpd param.
        """
        return pulumi.get(self, "dpd")

    @_builtins.property
    @pulumi.getter(name="ikeCryptoProfile")
    def ike_crypto_profile(self) -> _builtins.str:
        """
        The IkeCryptoProfile param.
        """
        return pulumi.get(self, "ike_crypto_profile")


@pulumi.output_type
class GetIkeGatewayProtocolIkev2DpdResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool):
        """
        :param _builtins.bool enable: The Enable param.
        """
        pulumi.set(__self__, "enable", enable)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")


@pulumi.output_type
class GetInternalDnsServerListDataResult(dict):
    def __init__(__self__, *,
                 domain_names: Sequence[_builtins.str],
                 id: _builtins.str,
                 name: _builtins.str,
                 primary: _builtins.str,
                 secondary: _builtins.str):
        """
        :param Sequence[_builtins.str] domain_names: The DomainNames param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        :param _builtins.str primary: The Primary param.
        :param _builtins.str secondary: The Secondary param.
        """
        pulumi.set(__self__, "domain_names", domain_names)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "primary", primary)
        pulumi.set(__self__, "secondary", secondary)

    @_builtins.property
    @pulumi.getter(name="domainNames")
    def domain_names(self) -> Sequence[_builtins.str]:
        """
        The DomainNames param.
        """
        return pulumi.get(self, "domain_names")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def primary(self) -> _builtins.str:
        """
        The Primary param.
        """
        return pulumi.get(self, "primary")

    @_builtins.property
    @pulumi.getter
    def secondary(self) -> _builtins.str:
        """
        The Secondary param.
        """
        return pulumi.get(self, "secondary")


@pulumi.output_type
class GetIpsecCryptoProfileAhResult(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        pulumi.set(__self__, "authentications", authentications)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        return pulumi.get(self, "authentications")


@pulumi.output_type
class GetIpsecCryptoProfileEspResult(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str],
                 encryptions: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: Authentication algorithm.
        :param Sequence[_builtins.str] encryptions: Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        pulumi.set(__self__, "authentications", authentications)
        pulumi.set(__self__, "encryptions", encryptions)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        Authentication algorithm.
        """
        return pulumi.get(self, "authentications")

    @_builtins.property
    @pulumi.getter
    def encryptions(self) -> Sequence[_builtins.str]:
        """
        Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        return pulumi.get(self, "encryptions")


@pulumi.output_type
class GetIpsecCryptoProfileLifesizeResult(dict):
    def __init__(__self__, *,
                 gb: _builtins.int,
                 kb: _builtins.int,
                 mb: _builtins.int,
                 tb: _builtins.int):
        """
        :param _builtins.int gb: specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
        :param _builtins.int kb: specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
        :param _builtins.int mb: specify lifesize in megabytes(MB). Value must be between 1 and 65535.
        :param _builtins.int tb: specify lifesize in terabytes(TB). Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "gb", gb)
        pulumi.set(__self__, "kb", kb)
        pulumi.set(__self__, "mb", mb)
        pulumi.set(__self__, "tb", tb)

    @_builtins.property
    @pulumi.getter
    def gb(self) -> _builtins.int:
        """
        specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "gb")

    @_builtins.property
    @pulumi.getter
    def kb(self) -> _builtins.int:
        """
        specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "kb")

    @_builtins.property
    @pulumi.getter
    def mb(self) -> _builtins.int:
        """
        specify lifesize in megabytes(MB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "mb")

    @_builtins.property
    @pulumi.getter
    def tb(self) -> _builtins.int:
        """
        specify lifesize in terabytes(TB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "tb")


@pulumi.output_type
class GetIpsecCryptoProfileLifetimeResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int,
                 minutes: _builtins.int,
                 seconds: _builtins.int):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365.
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535.
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535.
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)
        pulumi.set(__self__, "minutes", minutes)
        pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify lifetime in days. Value must be between 1 and 365.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify lifetime in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> _builtins.int:
        """
        specify lifetime in minutes. Value must be between 3 and 65535.
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> _builtins.int:
        """
        specify lifetime in seconds. Value must be between 180 and 65535.
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class GetIpsecCryptoProfileListDataResult(dict):
    def __init__(__self__, *,
                 ah: 'outputs.GetIpsecCryptoProfileListDataAhResult',
                 dh_group: _builtins.str,
                 esp: 'outputs.GetIpsecCryptoProfileListDataEspResult',
                 id: _builtins.str,
                 lifesize: 'outputs.GetIpsecCryptoProfileListDataLifesizeResult',
                 lifetime: 'outputs.GetIpsecCryptoProfileListDataLifetimeResult',
                 name: _builtins.str):
        """
        :param 'GetIpsecCryptoProfileListDataAhArgs' ah: The Ah param.
        :param _builtins.str dh_group: phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
        :param 'GetIpsecCryptoProfileListDataEspArgs' esp: The Esp param.
        :param _builtins.str id: UUID of the resource.
        :param 'GetIpsecCryptoProfileListDataLifesizeArgs' lifesize: The Lifesize param.
        :param 'GetIpsecCryptoProfileListDataLifetimeArgs' lifetime: The Lifetime param.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "ah", ah)
        pulumi.set(__self__, "dh_group", dh_group)
        pulumi.set(__self__, "esp", esp)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lifesize", lifesize)
        pulumi.set(__self__, "lifetime", lifetime)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def ah(self) -> 'outputs.GetIpsecCryptoProfileListDataAhResult':
        """
        The Ah param.
        """
        return pulumi.get(self, "ah")

    @_builtins.property
    @pulumi.getter(name="dhGroup")
    def dh_group(self) -> _builtins.str:
        """
        phase-2 DH group (PFS DH group). String must be one of these: `"no-pfs"`, `"group1"`, `"group2"`, `"group5"`, `"group14"`, `"group19"`, `"group20"`. Default: `"group2"`.
        """
        return pulumi.get(self, "dh_group")

    @_builtins.property
    @pulumi.getter
    def esp(self) -> 'outputs.GetIpsecCryptoProfileListDataEspResult':
        """
        The Esp param.
        """
        return pulumi.get(self, "esp")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def lifesize(self) -> 'outputs.GetIpsecCryptoProfileListDataLifesizeResult':
        """
        The Lifesize param.
        """
        return pulumi.get(self, "lifesize")

    @_builtins.property
    @pulumi.getter
    def lifetime(self) -> 'outputs.GetIpsecCryptoProfileListDataLifetimeResult':
        """
        The Lifetime param.
        """
        return pulumi.get(self, "lifetime")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetIpsecCryptoProfileListDataAhResult(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        pulumi.set(__self__, "authentications", authentications)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        The Authentications param. Individual elements in this list are subject to additional validation. String must be one of these: `"md5"`, `"sha1"`, `"sha256"`, `"sha384"`, `"sha512"`.
        """
        return pulumi.get(self, "authentications")


@pulumi.output_type
class GetIpsecCryptoProfileListDataEspResult(dict):
    def __init__(__self__, *,
                 authentications: Sequence[_builtins.str],
                 encryptions: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] authentications: Authentication algorithm.
        :param Sequence[_builtins.str] encryptions: Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        pulumi.set(__self__, "authentications", authentications)
        pulumi.set(__self__, "encryptions", encryptions)

    @_builtins.property
    @pulumi.getter
    def authentications(self) -> Sequence[_builtins.str]:
        """
        Authentication algorithm.
        """
        return pulumi.get(self, "authentications")

    @_builtins.property
    @pulumi.getter
    def encryptions(self) -> Sequence[_builtins.str]:
        """
        Encryption algorithm. Individual elements in this list are subject to additional validation. String must be one of these: `"des"`, `"3des"`, `"aes-128-cbc"`, `"aes-192-cbc"`, `"aes-256-cbc"`, `"aes-128-gcm"`, `"aes-256-gcm"`, `"null"`.
        """
        return pulumi.get(self, "encryptions")


@pulumi.output_type
class GetIpsecCryptoProfileListDataLifesizeResult(dict):
    def __init__(__self__, *,
                 gb: _builtins.int,
                 kb: _builtins.int,
                 mb: _builtins.int,
                 tb: _builtins.int):
        """
        :param _builtins.int gb: specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
        :param _builtins.int kb: specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
        :param _builtins.int mb: specify lifesize in megabytes(MB). Value must be between 1 and 65535.
        :param _builtins.int tb: specify lifesize in terabytes(TB). Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "gb", gb)
        pulumi.set(__self__, "kb", kb)
        pulumi.set(__self__, "mb", mb)
        pulumi.set(__self__, "tb", tb)

    @_builtins.property
    @pulumi.getter
    def gb(self) -> _builtins.int:
        """
        specify lifesize in gigabytes(GB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "gb")

    @_builtins.property
    @pulumi.getter
    def kb(self) -> _builtins.int:
        """
        specify lifesize in kilobytes(KB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "kb")

    @_builtins.property
    @pulumi.getter
    def mb(self) -> _builtins.int:
        """
        specify lifesize in megabytes(MB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "mb")

    @_builtins.property
    @pulumi.getter
    def tb(self) -> _builtins.int:
        """
        specify lifesize in terabytes(TB). Value must be between 1 and 65535.
        """
        return pulumi.get(self, "tb")


@pulumi.output_type
class GetIpsecCryptoProfileListDataLifetimeResult(dict):
    def __init__(__self__, *,
                 days: _builtins.int,
                 hours: _builtins.int,
                 minutes: _builtins.int,
                 seconds: _builtins.int):
        """
        :param _builtins.int days: specify lifetime in days. Value must be between 1 and 365.
        :param _builtins.int hours: specify lifetime in hours. Value must be between 1 and 65535.
        :param _builtins.int minutes: specify lifetime in minutes. Value must be between 3 and 65535.
        :param _builtins.int seconds: specify lifetime in seconds. Value must be between 180 and 65535.
        """
        pulumi.set(__self__, "days", days)
        pulumi.set(__self__, "hours", hours)
        pulumi.set(__self__, "minutes", minutes)
        pulumi.set(__self__, "seconds", seconds)

    @_builtins.property
    @pulumi.getter
    def days(self) -> _builtins.int:
        """
        specify lifetime in days. Value must be between 1 and 365.
        """
        return pulumi.get(self, "days")

    @_builtins.property
    @pulumi.getter
    def hours(self) -> _builtins.int:
        """
        specify lifetime in hours. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "hours")

    @_builtins.property
    @pulumi.getter
    def minutes(self) -> _builtins.int:
        """
        specify lifetime in minutes. Value must be between 3 and 65535.
        """
        return pulumi.get(self, "minutes")

    @_builtins.property
    @pulumi.getter
    def seconds(self) -> _builtins.int:
        """
        specify lifetime in seconds. Value must be between 180 and 65535.
        """
        return pulumi.get(self, "seconds")


@pulumi.output_type
class GetIpsecTunnelAutoKeyResult(dict):
    def __init__(__self__, *,
                 ike_gateways: Sequence['outputs.GetIpsecTunnelAutoKeyIkeGatewayResult'],
                 ipsec_crypto_profile: _builtins.str,
                 proxy_id_v6s: Sequence['outputs.GetIpsecTunnelAutoKeyProxyIdV6Result'],
                 proxy_ids: Sequence['outputs.GetIpsecTunnelAutoKeyProxyIdResult']):
        """
        :param Sequence['GetIpsecTunnelAutoKeyIkeGatewayArgs'] ike_gateways: The IkeGateways param.
        :param _builtins.str ipsec_crypto_profile: The IpsecCryptoProfile param.
        :param Sequence['GetIpsecTunnelAutoKeyProxyIdV6Args'] proxy_id_v6s: IPv6 type of proxy*id values.
        :param Sequence['GetIpsecTunnelAutoKeyProxyIdArgs'] proxy_ids: IPv4 type of proxy*id values.
        """
        pulumi.set(__self__, "ike_gateways", ike_gateways)
        pulumi.set(__self__, "ipsec_crypto_profile", ipsec_crypto_profile)
        pulumi.set(__self__, "proxy_id_v6s", proxy_id_v6s)
        pulumi.set(__self__, "proxy_ids", proxy_ids)

    @_builtins.property
    @pulumi.getter(name="ikeGateways")
    def ike_gateways(self) -> Sequence['outputs.GetIpsecTunnelAutoKeyIkeGatewayResult']:
        """
        The IkeGateways param.
        """
        return pulumi.get(self, "ike_gateways")

    @_builtins.property
    @pulumi.getter(name="ipsecCryptoProfile")
    def ipsec_crypto_profile(self) -> _builtins.str:
        """
        The IpsecCryptoProfile param.
        """
        return pulumi.get(self, "ipsec_crypto_profile")

    @_builtins.property
    @pulumi.getter(name="proxyIdV6s")
    def proxy_id_v6s(self) -> Sequence['outputs.GetIpsecTunnelAutoKeyProxyIdV6Result']:
        """
        IPv6 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_id_v6s")

    @_builtins.property
    @pulumi.getter(name="proxyIds")
    def proxy_ids(self) -> Sequence['outputs.GetIpsecTunnelAutoKeyProxyIdResult']:
        """
        IPv4 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_ids")


@pulumi.output_type
class GetIpsecTunnelAutoKeyIkeGatewayResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdResult(dict):
    def __init__(__self__, *,
                 local: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolResult',
                 remote: _builtins.str):
        """
        :param _builtins.str local: The Local param.
        :param _builtins.str name: The Name param.
        :param 'GetIpsecTunnelAutoKeyProxyIdProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "local", local)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def local(self) -> _builtins.str:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> _builtins.str:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdProtocolResult(dict):
    def __init__(__self__, *,
                 number: _builtins.int,
                 tcp: 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolTcpResult',
                 udp: 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolUdpResult'):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254.
        :param 'GetIpsecTunnelAutoKeyProxyIdProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetIpsecTunnelAutoKeyProxyIdProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "number", number)
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> _builtins.int:
        """
        IP protocol number. Value must be between 1 and 254.
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdProtocolTcpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdProtocolUdpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdV6Result(dict):
    def __init__(__self__, *,
                 local: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolResult',
                 remote: _builtins.str):
        """
        :param _builtins.str local: The Local param.
        :param _builtins.str name: The Name param.
        :param 'GetIpsecTunnelAutoKeyProxyIdV6ProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "local", local)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def local(self) -> _builtins.str:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> _builtins.str:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdV6ProtocolResult(dict):
    def __init__(__self__, *,
                 number: _builtins.int,
                 tcp: 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcpResult',
                 udp: 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdpResult'):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254.
        :param 'GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "number", number)
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> _builtins.int:
        """
        IP protocol number. Value must be between 1 and 254.
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdV6ProtocolTcpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelAutoKeyProxyIdV6ProtocolUdpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelListDataResult(dict):
    def __init__(__self__, *,
                 anti_replay: _builtins.bool,
                 auto_key: 'outputs.GetIpsecTunnelListDataAutoKeyResult',
                 copy_tos: _builtins.bool,
                 enable_gre_encapsulation: _builtins.bool,
                 id: _builtins.str,
                 name: _builtins.str,
                 tunnel_monitor: 'outputs.GetIpsecTunnelListDataTunnelMonitorResult'):
        """
        :param _builtins.bool anti_replay: Enable Anti-Replay check on this tunnel.
        :param 'GetIpsecTunnelListDataAutoKeyArgs' auto_key: The AutoKey param.
        :param _builtins.bool copy_tos: Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
        :param _builtins.bool enable_gre_encapsulation: allow GRE over IPSec. Default: `false`.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param 'GetIpsecTunnelListDataTunnelMonitorArgs' tunnel_monitor: The TunnelMonitor param.
        """
        pulumi.set(__self__, "anti_replay", anti_replay)
        pulumi.set(__self__, "auto_key", auto_key)
        pulumi.set(__self__, "copy_tos", copy_tos)
        pulumi.set(__self__, "enable_gre_encapsulation", enable_gre_encapsulation)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tunnel_monitor", tunnel_monitor)

    @_builtins.property
    @pulumi.getter(name="antiReplay")
    def anti_replay(self) -> _builtins.bool:
        """
        Enable Anti-Replay check on this tunnel.
        """
        return pulumi.get(self, "anti_replay")

    @_builtins.property
    @pulumi.getter(name="autoKey")
    def auto_key(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyResult':
        """
        The AutoKey param.
        """
        return pulumi.get(self, "auto_key")

    @_builtins.property
    @pulumi.getter(name="copyTos")
    def copy_tos(self) -> _builtins.bool:
        """
        Copy IP TOS bits from inner packet to IPSec packet (not recommended). Default: `false`.
        """
        return pulumi.get(self, "copy_tos")

    @_builtins.property
    @pulumi.getter(name="enableGreEncapsulation")
    def enable_gre_encapsulation(self) -> _builtins.bool:
        """
        allow GRE over IPSec. Default: `false`.
        """
        return pulumi.get(self, "enable_gre_encapsulation")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="tunnelMonitor")
    def tunnel_monitor(self) -> 'outputs.GetIpsecTunnelListDataTunnelMonitorResult':
        """
        The TunnelMonitor param.
        """
        return pulumi.get(self, "tunnel_monitor")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyResult(dict):
    def __init__(__self__, *,
                 ike_gateways: Sequence['outputs.GetIpsecTunnelListDataAutoKeyIkeGatewayResult'],
                 ipsec_crypto_profile: _builtins.str,
                 proxy_id_v6s: Sequence['outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6Result'],
                 proxy_ids: Sequence['outputs.GetIpsecTunnelListDataAutoKeyProxyIdResult']):
        """
        :param Sequence['GetIpsecTunnelListDataAutoKeyIkeGatewayArgs'] ike_gateways: The IkeGateways param.
        :param _builtins.str ipsec_crypto_profile: The IpsecCryptoProfile param.
        :param Sequence['GetIpsecTunnelListDataAutoKeyProxyIdV6Args'] proxy_id_v6s: IPv6 type of proxy*id values.
        :param Sequence['GetIpsecTunnelListDataAutoKeyProxyIdArgs'] proxy_ids: IPv4 type of proxy*id values.
        """
        pulumi.set(__self__, "ike_gateways", ike_gateways)
        pulumi.set(__self__, "ipsec_crypto_profile", ipsec_crypto_profile)
        pulumi.set(__self__, "proxy_id_v6s", proxy_id_v6s)
        pulumi.set(__self__, "proxy_ids", proxy_ids)

    @_builtins.property
    @pulumi.getter(name="ikeGateways")
    def ike_gateways(self) -> Sequence['outputs.GetIpsecTunnelListDataAutoKeyIkeGatewayResult']:
        """
        The IkeGateways param.
        """
        return pulumi.get(self, "ike_gateways")

    @_builtins.property
    @pulumi.getter(name="ipsecCryptoProfile")
    def ipsec_crypto_profile(self) -> _builtins.str:
        """
        The IpsecCryptoProfile param.
        """
        return pulumi.get(self, "ipsec_crypto_profile")

    @_builtins.property
    @pulumi.getter(name="proxyIdV6s")
    def proxy_id_v6s(self) -> Sequence['outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6Result']:
        """
        IPv6 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_id_v6s")

    @_builtins.property
    @pulumi.getter(name="proxyIds")
    def proxy_ids(self) -> Sequence['outputs.GetIpsecTunnelListDataAutoKeyProxyIdResult']:
        """
        IPv4 type of proxy*id values.
        """
        return pulumi.get(self, "proxy_ids")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyIkeGatewayResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdResult(dict):
    def __init__(__self__, *,
                 local: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolResult',
                 remote: _builtins.str):
        """
        :param _builtins.str local: The Local param.
        :param _builtins.str name: The Name param.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "local", local)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def local(self) -> _builtins.str:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> _builtins.str:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdProtocolResult(dict):
    def __init__(__self__, *,
                 number: _builtins.int,
                 tcp: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcpResult',
                 udp: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdpResult'):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "number", number)
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> _builtins.int:
        """
        IP protocol number. Value must be between 1 and 254.
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdProtocolTcpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdProtocolUdpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdV6Result(dict):
    def __init__(__self__, *,
                 local: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolResult',
                 remote: _builtins.str):
        """
        :param _builtins.str local: The Local param.
        :param _builtins.str name: The Name param.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolArgs' protocol: The Protocol param.
        :param _builtins.str remote: The Remote param.
        """
        pulumi.set(__self__, "local", local)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "remote", remote)

    @_builtins.property
    @pulumi.getter
    def local(self) -> _builtins.str:
        """
        The Local param.
        """
        return pulumi.get(self, "local")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def remote(self) -> _builtins.str:
        """
        The Remote param.
        """
        return pulumi.get(self, "remote")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolResult(dict):
    def __init__(__self__, *,
                 number: _builtins.int,
                 tcp: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcpResult',
                 udp: 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdpResult'):
        """
        :param _builtins.int number: IP protocol number. Value must be between 1 and 254.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "number", number)
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def number(self) -> _builtins.int:
        """
        IP protocol number. Value must be between 1 and 254.
        """
        return pulumi.get(self, "number")

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolTcpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelListDataAutoKeyProxyIdV6ProtocolUdpResult(dict):
    def __init__(__self__, *,
                 local_port: _builtins.int,
                 remote_port: _builtins.int):
        """
        :param _builtins.int local_port: The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        :param _builtins.int remote_port: The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        pulumi.set(__self__, "local_port", local_port)
        pulumi.set(__self__, "remote_port", remote_port)

    @_builtins.property
    @pulumi.getter(name="localPort")
    def local_port(self) -> _builtins.int:
        """
        The LocalPort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "local_port")

    @_builtins.property
    @pulumi.getter(name="remotePort")
    def remote_port(self) -> _builtins.int:
        """
        The RemotePort param. Value must be between 0 and 65535. Default: `0`.
        """
        return pulumi.get(self, "remote_port")


@pulumi.output_type
class GetIpsecTunnelListDataTunnelMonitorResult(dict):
    def __init__(__self__, *,
                 destination_ip: _builtins.str,
                 enable: _builtins.bool,
                 proxy_id: _builtins.str):
        """
        :param _builtins.str destination_ip: Destination IP to send ICMP probe.
        :param _builtins.bool enable: Enable tunnel monitoring on this tunnel. Default: `true`.
        :param _builtins.str proxy_id: Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        pulumi.set(__self__, "destination_ip", destination_ip)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "proxy_id", proxy_id)

    @_builtins.property
    @pulumi.getter(name="destinationIp")
    def destination_ip(self) -> _builtins.str:
        """
        Destination IP to send ICMP probe.
        """
        return pulumi.get(self, "destination_ip")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        Enable tunnel monitoring on this tunnel. Default: `true`.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="proxyId")
    def proxy_id(self) -> _builtins.str:
        """
        Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        return pulumi.get(self, "proxy_id")


@pulumi.output_type
class GetIpsecTunnelTunnelMonitorResult(dict):
    def __init__(__self__, *,
                 destination_ip: _builtins.str,
                 enable: _builtins.bool,
                 proxy_id: _builtins.str):
        """
        :param _builtins.str destination_ip: Destination IP to send ICMP probe.
        :param _builtins.bool enable: Enable tunnel monitoring on this tunnel. Default: `true`.
        :param _builtins.str proxy_id: Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        pulumi.set(__self__, "destination_ip", destination_ip)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "proxy_id", proxy_id)

    @_builtins.property
    @pulumi.getter(name="destinationIp")
    def destination_ip(self) -> _builtins.str:
        """
        Destination IP to send ICMP probe.
        """
        return pulumi.get(self, "destination_ip")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        Enable tunnel monitoring on this tunnel. Default: `true`.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="proxyId")
    def proxy_id(self) -> _builtins.str:
        """
        Which proxy-id (or proxy-id-v6) the monitoring traffic will use.
        """
        return pulumi.get(self, "proxy_id")


@pulumi.output_type
class GetJobsListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 device_name: _builtins.str,
                 end_ts: _builtins.str,
                 id: _builtins.int,
                 job_result: _builtins.int,
                 job_status: _builtins.int,
                 job_type: _builtins.int,
                 parent_id: _builtins.int,
                 percent: _builtins.int,
                 result_str: _builtins.str,
                 start_ts: _builtins.str,
                 status_str: _builtins.str,
                 summary: _builtins.str,
                 type_str: _builtins.str,
                 uname: _builtins.str):
        """
        :param _builtins.str description: A description provided by the administrator or service account.
        :param _builtins.str device_name: The name of the device.
        :param _builtins.str end_ts: The timestamp indicating when the job was finished.
        :param _builtins.int id: The job ID.
        :param _builtins.int job_result: The job result.
        :param _builtins.int job_status: The current status of the job.
        :param _builtins.int job_type: The job type.
        :param _builtins.int parent_id: The parent job ID.
        :param _builtins.int percent: Job completion percentage. Value must be less than or equal to 100.
        :param _builtins.str result_str: The result of the job. String must be one of these: `"OK"`, `"FAIL"`, `"PEND"`, `"WAIT"`, `"CANCELLED"`.
        :param _builtins.str start_ts: The timestamp indicating when the job was created.
        :param _builtins.str status_str: The current status of the job. String must be one of these: `"ACT"`, `"FIN"`, `"PEND"`, `"PUSHSENT"`, `"PUSHFAIL"`.
        :param _builtins.str summary: The completion summary of the job.
        :param _builtins.str type_str: The job type. String must be one of these: `"CommitAll"`, `"CommitAndPush"`, `"NGFW-Bootstrap-Push"`, `"Validate"`.
        :param _builtins.str uname: The administrator or service account that created the job.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "device_name", device_name)
        pulumi.set(__self__, "end_ts", end_ts)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "job_result", job_result)
        pulumi.set(__self__, "job_status", job_status)
        pulumi.set(__self__, "job_type", job_type)
        pulumi.set(__self__, "parent_id", parent_id)
        pulumi.set(__self__, "percent", percent)
        pulumi.set(__self__, "result_str", result_str)
        pulumi.set(__self__, "start_ts", start_ts)
        pulumi.set(__self__, "status_str", status_str)
        pulumi.set(__self__, "summary", summary)
        pulumi.set(__self__, "type_str", type_str)
        pulumi.set(__self__, "uname", uname)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        A description provided by the administrator or service account.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="deviceName")
    def device_name(self) -> _builtins.str:
        """
        The name of the device.
        """
        return pulumi.get(self, "device_name")

    @_builtins.property
    @pulumi.getter(name="endTs")
    def end_ts(self) -> _builtins.str:
        """
        The timestamp indicating when the job was finished.
        """
        return pulumi.get(self, "end_ts")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        """
        The job ID.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="jobResult")
    def job_result(self) -> _builtins.int:
        """
        The job result.
        """
        return pulumi.get(self, "job_result")

    @_builtins.property
    @pulumi.getter(name="jobStatus")
    def job_status(self) -> _builtins.int:
        """
        The current status of the job.
        """
        return pulumi.get(self, "job_status")

    @_builtins.property
    @pulumi.getter(name="jobType")
    def job_type(self) -> _builtins.int:
        """
        The job type.
        """
        return pulumi.get(self, "job_type")

    @_builtins.property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> _builtins.int:
        """
        The parent job ID.
        """
        return pulumi.get(self, "parent_id")

    @_builtins.property
    @pulumi.getter
    def percent(self) -> _builtins.int:
        """
        Job completion percentage. Value must be less than or equal to 100.
        """
        return pulumi.get(self, "percent")

    @_builtins.property
    @pulumi.getter(name="resultStr")
    def result_str(self) -> _builtins.str:
        """
        The result of the job. String must be one of these: `"OK"`, `"FAIL"`, `"PEND"`, `"WAIT"`, `"CANCELLED"`.
        """
        return pulumi.get(self, "result_str")

    @_builtins.property
    @pulumi.getter(name="startTs")
    def start_ts(self) -> _builtins.str:
        """
        The timestamp indicating when the job was created.
        """
        return pulumi.get(self, "start_ts")

    @_builtins.property
    @pulumi.getter(name="statusStr")
    def status_str(self) -> _builtins.str:
        """
        The current status of the job. String must be one of these: `"ACT"`, `"FIN"`, `"PEND"`, `"PUSHSENT"`, `"PUSHFAIL"`.
        """
        return pulumi.get(self, "status_str")

    @_builtins.property
    @pulumi.getter
    def summary(self) -> _builtins.str:
        """
        The completion summary of the job.
        """
        return pulumi.get(self, "summary")

    @_builtins.property
    @pulumi.getter(name="typeStr")
    def type_str(self) -> _builtins.str:
        """
        The job type. String must be one of these: `"CommitAll"`, `"CommitAndPush"`, `"NGFW-Bootstrap-Push"`, `"Validate"`.
        """
        return pulumi.get(self, "type_str")

    @_builtins.property
    @pulumi.getter
    def uname(self) -> _builtins.str:
        """
        The administrator or service account that created the job.
        """
        return pulumi.get(self, "uname")


@pulumi.output_type
class GetKerberosServerProfileListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 servers: Sequence['outputs.GetKerberosServerProfileListDataServerResult']):
        """
        :param _builtins.str id: UUID of the resource.
        :param Sequence['GetKerberosServerProfileListDataServerArgs'] servers: The Servers param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "servers", servers)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetKerberosServerProfileListDataServerResult']:
        """
        The Servers param.
        """
        return pulumi.get(self, "servers")


@pulumi.output_type
class GetKerberosServerProfileListDataServerResult(dict):
    def __init__(__self__, *,
                 host: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int):
        """
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def host(self) -> _builtins.str:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class GetKerberosServerProfileServerResult(dict):
    def __init__(__self__, *,
                 host: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int):
        """
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def host(self) -> _builtins.str:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class GetLabelListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: The Id param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetLdapServerProfileListDataResult(dict):
    def __init__(__self__, *,
                 base: _builtins.str,
                 bind_dn: _builtins.str,
                 bind_password: _builtins.str,
                 bind_timelimit: _builtins.str,
                 id: _builtins.str,
                 ldap_type: _builtins.str,
                 retry_interval: _builtins.int,
                 servers: Sequence['outputs.GetLdapServerProfileListDataServerResult'],
                 ssl: _builtins.bool,
                 timelimit: _builtins.int,
                 verify_server_certificate: _builtins.bool):
        """
        :param _builtins.str base: The Base param. String length must not exceed 255 characters.
        :param _builtins.str bind_dn: The BindDn param. String length must not exceed 255 characters.
        :param _builtins.str bind_password: The BindPassword param. String length must not exceed 121 characters.
        :param _builtins.str bind_timelimit: The BindTimelimit param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str ldap_type: The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
        :param _builtins.int retry_interval: The RetryInterval param.
        :param Sequence['GetLdapServerProfileListDataServerArgs'] servers: The Servers param.
        :param _builtins.bool ssl: The Ssl param.
        :param _builtins.int timelimit: The Timelimit param.
        :param _builtins.bool verify_server_certificate: The VerifyServerCertificate param.
        """
        pulumi.set(__self__, "base", base)
        pulumi.set(__self__, "bind_dn", bind_dn)
        pulumi.set(__self__, "bind_password", bind_password)
        pulumi.set(__self__, "bind_timelimit", bind_timelimit)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ldap_type", ldap_type)
        pulumi.set(__self__, "retry_interval", retry_interval)
        pulumi.set(__self__, "servers", servers)
        pulumi.set(__self__, "ssl", ssl)
        pulumi.set(__self__, "timelimit", timelimit)
        pulumi.set(__self__, "verify_server_certificate", verify_server_certificate)

    @_builtins.property
    @pulumi.getter
    def base(self) -> _builtins.str:
        """
        The Base param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "base")

    @_builtins.property
    @pulumi.getter(name="bindDn")
    def bind_dn(self) -> _builtins.str:
        """
        The BindDn param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "bind_dn")

    @_builtins.property
    @pulumi.getter(name="bindPassword")
    def bind_password(self) -> _builtins.str:
        """
        The BindPassword param. String length must not exceed 121 characters.
        """
        return pulumi.get(self, "bind_password")

    @_builtins.property
    @pulumi.getter(name="bindTimelimit")
    def bind_timelimit(self) -> _builtins.str:
        """
        The BindTimelimit param.
        """
        return pulumi.get(self, "bind_timelimit")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ldapType")
    def ldap_type(self) -> _builtins.str:
        """
        The LdapType param. String must be one of these: `"active-directory"`, `"e-directory"`, `"sun"`, `"other"`.
        """
        return pulumi.get(self, "ldap_type")

    @_builtins.property
    @pulumi.getter(name="retryInterval")
    def retry_interval(self) -> _builtins.int:
        """
        The RetryInterval param.
        """
        return pulumi.get(self, "retry_interval")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetLdapServerProfileListDataServerResult']:
        """
        The Servers param.
        """
        return pulumi.get(self, "servers")

    @_builtins.property
    @pulumi.getter
    def ssl(self) -> _builtins.bool:
        """
        The Ssl param.
        """
        return pulumi.get(self, "ssl")

    @_builtins.property
    @pulumi.getter
    def timelimit(self) -> _builtins.int:
        """
        The Timelimit param.
        """
        return pulumi.get(self, "timelimit")

    @_builtins.property
    @pulumi.getter(name="verifyServerCertificate")
    def verify_server_certificate(self) -> _builtins.bool:
        """
        The VerifyServerCertificate param.
        """
        return pulumi.get(self, "verify_server_certificate")


@pulumi.output_type
class GetLdapServerProfileListDataServerResult(dict):
    def __init__(__self__, *,
                 address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "address", address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def address(self) -> _builtins.str:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class GetLdapServerProfileServerResult(dict):
    def __init__(__self__, *,
                 address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        """
        pulumi.set(__self__, "address", address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)

    @_builtins.property
    @pulumi.getter
    def address(self) -> _builtins.str:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")


@pulumi.output_type
class GetLocalUserGroupListDataResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 users: Sequence[_builtins.str]):
        """
        :param _builtins.str name: The Name param. String length must not exceed 31 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        :param Sequence[_builtins.str] users: The Users param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "users", users)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 31 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def users(self) -> Sequence[_builtins.str]:
        """
        The Users param.
        """
        return pulumi.get(self, "users")


@pulumi.output_type
class GetLocalUserListDataResult(dict):
    def __init__(__self__, *,
                 disabled: _builtins.bool,
                 id: _builtins.str,
                 name: _builtins.str,
                 password: _builtins.str):
        """
        :param _builtins.bool disabled: The Disabled param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param. String length must not exceed 31 characters.
        :param _builtins.str password: The Password param. String length must not exceed 63 characters.
        """
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "password", password)

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "password")


@pulumi.output_type
class GetMfaServerMfaVendorTypeResult(dict):
    def __init__(__self__, *,
                 duo_security_v2: 'outputs.GetMfaServerMfaVendorTypeDuoSecurityV2Result',
                 okta_adaptive_v1: 'outputs.GetMfaServerMfaVendorTypeOktaAdaptiveV1Result',
                 ping_identity_v1: 'outputs.GetMfaServerMfaVendorTypePingIdentityV1Result',
                 rsa_securid_access_v1: 'outputs.GetMfaServerMfaVendorTypeRsaSecuridAccessV1Result'):
        """
        :param 'GetMfaServerMfaVendorTypeDuoSecurityV2Args' duo_security_v2: The DuoSecurityV2 param.
        :param 'GetMfaServerMfaVendorTypeOktaAdaptiveV1Args' okta_adaptive_v1: The OktaAdaptiveV1 param.
        :param 'GetMfaServerMfaVendorTypePingIdentityV1Args' ping_identity_v1: The PingIdentityV1 param.
        :param 'GetMfaServerMfaVendorTypeRsaSecuridAccessV1Args' rsa_securid_access_v1: The RsaSecuridAccessV1 param.
        """
        pulumi.set(__self__, "duo_security_v2", duo_security_v2)
        pulumi.set(__self__, "okta_adaptive_v1", okta_adaptive_v1)
        pulumi.set(__self__, "ping_identity_v1", ping_identity_v1)
        pulumi.set(__self__, "rsa_securid_access_v1", rsa_securid_access_v1)

    @_builtins.property
    @pulumi.getter(name="duoSecurityV2")
    def duo_security_v2(self) -> 'outputs.GetMfaServerMfaVendorTypeDuoSecurityV2Result':
        """
        The DuoSecurityV2 param.
        """
        return pulumi.get(self, "duo_security_v2")

    @_builtins.property
    @pulumi.getter(name="oktaAdaptiveV1")
    def okta_adaptive_v1(self) -> 'outputs.GetMfaServerMfaVendorTypeOktaAdaptiveV1Result':
        """
        The OktaAdaptiveV1 param.
        """
        return pulumi.get(self, "okta_adaptive_v1")

    @_builtins.property
    @pulumi.getter(name="pingIdentityV1")
    def ping_identity_v1(self) -> 'outputs.GetMfaServerMfaVendorTypePingIdentityV1Result':
        """
        The PingIdentityV1 param.
        """
        return pulumi.get(self, "ping_identity_v1")

    @_builtins.property
    @pulumi.getter(name="rsaSecuridAccessV1")
    def rsa_securid_access_v1(self) -> 'outputs.GetMfaServerMfaVendorTypeRsaSecuridAccessV1Result':
        """
        The RsaSecuridAccessV1 param.
        """
        return pulumi.get(self, "rsa_securid_access_v1")


@pulumi.output_type
class GetMfaServerMfaVendorTypeDuoSecurityV2Result(dict):
    def __init__(__self__, *,
                 duo_api_host: _builtins.str,
                 duo_baseuri: _builtins.str,
                 duo_integration_key: _builtins.str,
                 duo_secret_key: _builtins.str,
                 duo_timeout: _builtins.str):
        """
        :param _builtins.str duo_api_host: The DuoApiHost param.
        :param _builtins.str duo_baseuri: The DuoBaseuri param.
        :param _builtins.str duo_integration_key: The DuoIntegrationKey param.
        :param _builtins.str duo_secret_key: The DuoSecretKey param.
        :param _builtins.str duo_timeout: The DuoTimeout param.
        """
        pulumi.set(__self__, "duo_api_host", duo_api_host)
        pulumi.set(__self__, "duo_baseuri", duo_baseuri)
        pulumi.set(__self__, "duo_integration_key", duo_integration_key)
        pulumi.set(__self__, "duo_secret_key", duo_secret_key)
        pulumi.set(__self__, "duo_timeout", duo_timeout)

    @_builtins.property
    @pulumi.getter(name="duoApiHost")
    def duo_api_host(self) -> _builtins.str:
        """
        The DuoApiHost param.
        """
        return pulumi.get(self, "duo_api_host")

    @_builtins.property
    @pulumi.getter(name="duoBaseuri")
    def duo_baseuri(self) -> _builtins.str:
        """
        The DuoBaseuri param.
        """
        return pulumi.get(self, "duo_baseuri")

    @_builtins.property
    @pulumi.getter(name="duoIntegrationKey")
    def duo_integration_key(self) -> _builtins.str:
        """
        The DuoIntegrationKey param.
        """
        return pulumi.get(self, "duo_integration_key")

    @_builtins.property
    @pulumi.getter(name="duoSecretKey")
    def duo_secret_key(self) -> _builtins.str:
        """
        The DuoSecretKey param.
        """
        return pulumi.get(self, "duo_secret_key")

    @_builtins.property
    @pulumi.getter(name="duoTimeout")
    def duo_timeout(self) -> _builtins.str:
        """
        The DuoTimeout param.
        """
        return pulumi.get(self, "duo_timeout")


@pulumi.output_type
class GetMfaServerMfaVendorTypeOktaAdaptiveV1Result(dict):
    def __init__(__self__, *,
                 okta_api_host: _builtins.str,
                 okta_baseuri: _builtins.str,
                 okta_org: _builtins.str,
                 okta_timeout: _builtins.str,
                 okta_token: _builtins.str):
        """
        :param _builtins.str okta_api_host: The OktaApiHost param.
        :param _builtins.str okta_baseuri: The OktaBaseuri param.
        :param _builtins.str okta_org: The OktaOrg param.
        :param _builtins.str okta_timeout: The OktaTimeout param.
        :param _builtins.str okta_token: The OktaToken param.
        """
        pulumi.set(__self__, "okta_api_host", okta_api_host)
        pulumi.set(__self__, "okta_baseuri", okta_baseuri)
        pulumi.set(__self__, "okta_org", okta_org)
        pulumi.set(__self__, "okta_timeout", okta_timeout)
        pulumi.set(__self__, "okta_token", okta_token)

    @_builtins.property
    @pulumi.getter(name="oktaApiHost")
    def okta_api_host(self) -> _builtins.str:
        """
        The OktaApiHost param.
        """
        return pulumi.get(self, "okta_api_host")

    @_builtins.property
    @pulumi.getter(name="oktaBaseuri")
    def okta_baseuri(self) -> _builtins.str:
        """
        The OktaBaseuri param.
        """
        return pulumi.get(self, "okta_baseuri")

    @_builtins.property
    @pulumi.getter(name="oktaOrg")
    def okta_org(self) -> _builtins.str:
        """
        The OktaOrg param.
        """
        return pulumi.get(self, "okta_org")

    @_builtins.property
    @pulumi.getter(name="oktaTimeout")
    def okta_timeout(self) -> _builtins.str:
        """
        The OktaTimeout param.
        """
        return pulumi.get(self, "okta_timeout")

    @_builtins.property
    @pulumi.getter(name="oktaToken")
    def okta_token(self) -> _builtins.str:
        """
        The OktaToken param.
        """
        return pulumi.get(self, "okta_token")


@pulumi.output_type
class GetMfaServerMfaVendorTypePingIdentityV1Result(dict):
    def __init__(__self__, *,
                 ping_api_host: _builtins.str,
                 ping_baseuri: _builtins.str,
                 ping_org: _builtins.str,
                 ping_org_alias: _builtins.str,
                 ping_timeout: _builtins.str,
                 ping_token: _builtins.str):
        """
        :param _builtins.str ping_api_host: The PingApiHost param.
        :param _builtins.str ping_baseuri: The PingBaseuri param.
        :param _builtins.str ping_org: The PingOrg param.
        :param _builtins.str ping_org_alias: The PingOrgAlias param.
        :param _builtins.str ping_timeout: The PingTimeout param.
        :param _builtins.str ping_token: The PingToken param.
        """
        pulumi.set(__self__, "ping_api_host", ping_api_host)
        pulumi.set(__self__, "ping_baseuri", ping_baseuri)
        pulumi.set(__self__, "ping_org", ping_org)
        pulumi.set(__self__, "ping_org_alias", ping_org_alias)
        pulumi.set(__self__, "ping_timeout", ping_timeout)
        pulumi.set(__self__, "ping_token", ping_token)

    @_builtins.property
    @pulumi.getter(name="pingApiHost")
    def ping_api_host(self) -> _builtins.str:
        """
        The PingApiHost param.
        """
        return pulumi.get(self, "ping_api_host")

    @_builtins.property
    @pulumi.getter(name="pingBaseuri")
    def ping_baseuri(self) -> _builtins.str:
        """
        The PingBaseuri param.
        """
        return pulumi.get(self, "ping_baseuri")

    @_builtins.property
    @pulumi.getter(name="pingOrg")
    def ping_org(self) -> _builtins.str:
        """
        The PingOrg param.
        """
        return pulumi.get(self, "ping_org")

    @_builtins.property
    @pulumi.getter(name="pingOrgAlias")
    def ping_org_alias(self) -> _builtins.str:
        """
        The PingOrgAlias param.
        """
        return pulumi.get(self, "ping_org_alias")

    @_builtins.property
    @pulumi.getter(name="pingTimeout")
    def ping_timeout(self) -> _builtins.str:
        """
        The PingTimeout param.
        """
        return pulumi.get(self, "ping_timeout")

    @_builtins.property
    @pulumi.getter(name="pingToken")
    def ping_token(self) -> _builtins.str:
        """
        The PingToken param.
        """
        return pulumi.get(self, "ping_token")


@pulumi.output_type
class GetMfaServerMfaVendorTypeRsaSecuridAccessV1Result(dict):
    def __init__(__self__, *,
                 rsa_accessid: _builtins.str,
                 rsa_accesskey: _builtins.str,
                 rsa_api_host: _builtins.str,
                 rsa_assurancepolicyid: _builtins.str,
                 rsa_baseuri: _builtins.str,
                 rsa_timeout: _builtins.str):
        """
        :param _builtins.str rsa_accessid: The RsaAccessid param.
        :param _builtins.str rsa_accesskey: The RsaAccesskey param.
        :param _builtins.str rsa_api_host: The RsaApiHost param.
        :param _builtins.str rsa_assurancepolicyid: The RsaAssurancepolicyid param.
        :param _builtins.str rsa_baseuri: The RsaBaseuri param.
        :param _builtins.str rsa_timeout: The RsaTimeout param.
        """
        pulumi.set(__self__, "rsa_accessid", rsa_accessid)
        pulumi.set(__self__, "rsa_accesskey", rsa_accesskey)
        pulumi.set(__self__, "rsa_api_host", rsa_api_host)
        pulumi.set(__self__, "rsa_assurancepolicyid", rsa_assurancepolicyid)
        pulumi.set(__self__, "rsa_baseuri", rsa_baseuri)
        pulumi.set(__self__, "rsa_timeout", rsa_timeout)

    @_builtins.property
    @pulumi.getter(name="rsaAccessid")
    def rsa_accessid(self) -> _builtins.str:
        """
        The RsaAccessid param.
        """
        return pulumi.get(self, "rsa_accessid")

    @_builtins.property
    @pulumi.getter(name="rsaAccesskey")
    def rsa_accesskey(self) -> _builtins.str:
        """
        The RsaAccesskey param.
        """
        return pulumi.get(self, "rsa_accesskey")

    @_builtins.property
    @pulumi.getter(name="rsaApiHost")
    def rsa_api_host(self) -> _builtins.str:
        """
        The RsaApiHost param.
        """
        return pulumi.get(self, "rsa_api_host")

    @_builtins.property
    @pulumi.getter(name="rsaAssurancepolicyid")
    def rsa_assurancepolicyid(self) -> _builtins.str:
        """
        The RsaAssurancepolicyid param.
        """
        return pulumi.get(self, "rsa_assurancepolicyid")

    @_builtins.property
    @pulumi.getter(name="rsaBaseuri")
    def rsa_baseuri(self) -> _builtins.str:
        """
        The RsaBaseuri param.
        """
        return pulumi.get(self, "rsa_baseuri")

    @_builtins.property
    @pulumi.getter(name="rsaTimeout")
    def rsa_timeout(self) -> _builtins.str:
        """
        The RsaTimeout param.
        """
        return pulumi.get(self, "rsa_timeout")


@pulumi.output_type
class GetNatRuleDestinationTranslationResult(dict):
    def __init__(__self__, *,
                 dns_rewrite: 'outputs.GetNatRuleDestinationTranslationDnsRewriteResult',
                 translated_address_single: _builtins.str,
                 translated_port: _builtins.int):
        """
        :param 'GetNatRuleDestinationTranslationDnsRewriteArgs' dns_rewrite: The DnsRewrite param.
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "dns_rewrite", dns_rewrite)
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter(name="dnsRewrite")
    def dns_rewrite(self) -> 'outputs.GetNatRuleDestinationTranslationDnsRewriteResult':
        """
        The DnsRewrite param.
        """
        return pulumi.get(self, "dns_rewrite")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> _builtins.int:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class GetNatRuleDestinationTranslationDnsRewriteResult(dict):
    def __init__(__self__, *,
                 direction: _builtins.str):
        """
        :param _builtins.str direction: The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        pulumi.set(__self__, "direction", direction)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        return pulumi.get(self, "direction")


@pulumi.output_type
class GetNatRuleDynamicDestinationTranslationResult(dict):
    def __init__(__self__, *,
                 distribution: _builtins.str,
                 translated_address_single: _builtins.str,
                 translated_port: _builtins.int):
        """
        :param _builtins.str distribution: The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> _builtins.int:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class GetNatRuleListDataResult(dict):
    def __init__(__self__, *,
                 active_active_device_binding: _builtins.str,
                 description: _builtins.str,
                 destination_translation: 'outputs.GetNatRuleListDataDestinationTranslationResult',
                 destinations: Sequence[_builtins.str],
                 device: _builtins.str,
                 disabled: _builtins.bool,
                 dynamic_destination_translation: 'outputs.GetNatRuleListDataDynamicDestinationTranslationResult',
                 folder: _builtins.str,
                 froms: Sequence[_builtins.str],
                 group_tag: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 nat_type: _builtins.str,
                 service: _builtins.str,
                 snippet: _builtins.str,
                 source_translation: 'outputs.GetNatRuleListDataSourceTranslationResult',
                 sources: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str],
                 target: 'outputs.GetNatRuleListDataTargetResult',
                 to_interface: _builtins.str,
                 tos: Sequence[_builtins.str]):
        """
        :param _builtins.str active_active_device_binding: The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
        :param _builtins.str description: The Description param.
        :param 'GetNatRuleListDataDestinationTranslationArgs' destination_translation: Static destination translation parameter.
        :param Sequence[_builtins.str] destinations: The destination address(es).
        :param _builtins.str device: The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        :param _builtins.bool disabled: The Disabled param.
        :param 'GetNatRuleListDataDynamicDestinationTranslationArgs' dynamic_destination_translation: Dynamic destination translation parameter.
        :param _builtins.str folder: The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        :param Sequence[_builtins.str] froms: The source security zone(s).
        :param _builtins.str group_tag: The GroupTag param.
        :param _builtins.str id: The Id param.
        :param _builtins.str name: The Name param.
        :param _builtins.str nat_type: The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
        :param _builtins.str service: The Service param.
        :param _builtins.str snippet: The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        :param 'GetNatRuleListDataSourceTranslationArgs' source_translation: The SourceTranslation param.
        :param Sequence[_builtins.str] sources: The source address(es).
        :param Sequence[_builtins.str] tags: The Tags param.
        :param 'GetNatRuleListDataTargetArgs' target: The Target param.
        :param _builtins.str to_interface: The ToInterface param.
        :param Sequence[_builtins.str] tos: The destination security zone(s).
        """
        pulumi.set(__self__, "active_active_device_binding", active_active_device_binding)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination_translation", destination_translation)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "device", device)
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "dynamic_destination_translation", dynamic_destination_translation)
        pulumi.set(__self__, "folder", folder)
        pulumi.set(__self__, "froms", froms)
        pulumi.set(__self__, "group_tag", group_tag)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "nat_type", nat_type)
        pulumi.set(__self__, "service", service)
        pulumi.set(__self__, "snippet", snippet)
        pulumi.set(__self__, "source_translation", source_translation)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "target", target)
        pulumi.set(__self__, "to_interface", to_interface)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter(name="activeActiveDeviceBinding")
    def active_active_device_binding(self) -> _builtins.str:
        """
        The ActiveActiveDeviceBinding param. String must be one of these: `"primary"`, `"both"`, `"0"`, `"1"`.
        """
        return pulumi.get(self, "active_active_device_binding")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationTranslation")
    def destination_translation(self) -> 'outputs.GetNatRuleListDataDestinationTranslationResult':
        """
        Static destination translation parameter.
        """
        return pulumi.get(self, "destination_translation")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The destination address(es).
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def device(self) -> _builtins.str:
        """
        The device in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        """
        return pulumi.get(self, "device")

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter(name="dynamicDestinationTranslation")
    def dynamic_destination_translation(self) -> 'outputs.GetNatRuleListDataDynamicDestinationTranslationResult':
        """
        Dynamic destination translation parameter.
        """
        return pulumi.get(self, "dynamic_destination_translation")

    @_builtins.property
    @pulumi.getter
    def folder(self) -> _builtins.str:
        """
        The folder in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        """
        return pulumi.get(self, "folder")

    @_builtins.property
    @pulumi.getter
    def froms(self) -> Sequence[_builtins.str]:
        """
        The source security zone(s).
        """
        return pulumi.get(self, "froms")

    @_builtins.property
    @pulumi.getter(name="groupTag")
    def group_tag(self) -> _builtins.str:
        """
        The GroupTag param.
        """
        return pulumi.get(self, "group_tag")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="natType")
    def nat_type(self) -> _builtins.str:
        """
        The NatType param. String must be one of these: `"ipv4"`, `"nat64"`, `"nptv6"`.
        """
        return pulumi.get(self, "nat_type")

    @_builtins.property
    @pulumi.getter
    def service(self) -> _builtins.str:
        """
        The Service param.
        """
        return pulumi.get(self, "service")

    @_builtins.property
    @pulumi.getter
    def snippet(self) -> _builtins.str:
        """
        The snippet in which the resource is defined. String length must not exceed 64 characters. String validation regex: `^[a-zA-Z\\d-_\\. ]+$`.
        """
        return pulumi.get(self, "snippet")

    @_builtins.property
    @pulumi.getter(name="sourceTranslation")
    def source_translation(self) -> 'outputs.GetNatRuleListDataSourceTranslationResult':
        """
        The SourceTranslation param.
        """
        return pulumi.get(self, "source_translation")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The source address(es).
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def target(self) -> 'outputs.GetNatRuleListDataTargetResult':
        """
        The Target param.
        """
        return pulumi.get(self, "target")

    @_builtins.property
    @pulumi.getter(name="toInterface")
    def to_interface(self) -> _builtins.str:
        """
        The ToInterface param.
        """
        return pulumi.get(self, "to_interface")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Sequence[_builtins.str]:
        """
        The destination security zone(s).
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetNatRuleListDataDestinationTranslationResult(dict):
    def __init__(__self__, *,
                 dns_rewrite: 'outputs.GetNatRuleListDataDestinationTranslationDnsRewriteResult',
                 translated_address_single: _builtins.str,
                 translated_port: _builtins.int):
        """
        :param 'GetNatRuleListDataDestinationTranslationDnsRewriteArgs' dns_rewrite: The DnsRewrite param.
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "dns_rewrite", dns_rewrite)
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter(name="dnsRewrite")
    def dns_rewrite(self) -> 'outputs.GetNatRuleListDataDestinationTranslationDnsRewriteResult':
        """
        The DnsRewrite param.
        """
        return pulumi.get(self, "dns_rewrite")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> _builtins.int:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class GetNatRuleListDataDestinationTranslationDnsRewriteResult(dict):
    def __init__(__self__, *,
                 direction: _builtins.str):
        """
        :param _builtins.str direction: The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        pulumi.set(__self__, "direction", direction)

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"reverse"`, `"forward"`. Default: `"reverse"`.
        """
        return pulumi.get(self, "direction")


@pulumi.output_type
class GetNatRuleListDataDynamicDestinationTranslationResult(dict):
    def __init__(__self__, *,
                 distribution: _builtins.str,
                 translated_address_single: _builtins.str,
                 translated_port: _builtins.int):
        """
        :param _builtins.str distribution: The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        :param _builtins.str translated_address_single: The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        :param _builtins.int translated_port: The TranslatedPort param.
        """
        pulumi.set(__self__, "distribution", distribution)
        pulumi.set(__self__, "translated_address_single", translated_address_single)
        pulumi.set(__self__, "translated_port", translated_port)

    @_builtins.property
    @pulumi.getter
    def distribution(self) -> _builtins.str:
        """
        The Distribution param. String must be one of these: `"round-robin"`, `"source-ip-hash"`, `"ip-modulo"`, `"ip-hash"`, `"least-sessions"`. Default: `"round-robin"`.
        """
        return pulumi.get(self, "distribution")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The ip address to be translated. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")

    @_builtins.property
    @pulumi.getter(name="translatedPort")
    def translated_port(self) -> _builtins.int:
        """
        The TranslatedPort param.
        """
        return pulumi.get(self, "translated_port")


@pulumi.output_type
class GetNatRuleListDataSourceTranslationResult(dict):
    def __init__(__self__, *,
                 bi_directional: _builtins.str,
                 fallback: 'outputs.GetNatRuleListDataSourceTranslationFallbackResult',
                 translated_address_arrays: Sequence[_builtins.str],
                 translated_address_single: _builtins.str):
        """
        :param _builtins.str bi_directional: The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        :param 'GetNatRuleListDataSourceTranslationFallbackArgs' fallback: The Fallback param.
        :param Sequence[_builtins.str] translated_address_arrays: The TranslatedAddressArray param.
        :param _builtins.str translated_address_single: The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        pulumi.set(__self__, "bi_directional", bi_directional)
        pulumi.set(__self__, "fallback", fallback)
        pulumi.set(__self__, "translated_address_arrays", translated_address_arrays)
        pulumi.set(__self__, "translated_address_single", translated_address_single)

    @_builtins.property
    @pulumi.getter(name="biDirectional")
    def bi_directional(self) -> _builtins.str:
        """
        The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        """
        return pulumi.get(self, "bi_directional")

    @_builtins.property
    @pulumi.getter
    def fallback(self) -> 'outputs.GetNatRuleListDataSourceTranslationFallbackResult':
        """
        The Fallback param.
        """
        return pulumi.get(self, "fallback")

    @_builtins.property
    @pulumi.getter(name="translatedAddressArrays")
    def translated_address_arrays(self) -> Sequence[_builtins.str]:
        """
        The TranslatedAddressArray param.
        """
        return pulumi.get(self, "translated_address_arrays")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")


@pulumi.output_type
class GetNatRuleListDataSourceTranslationFallbackResult(dict):
    def __init__(__self__, *,
                 interface: _builtins.str):
        """
        :param _builtins.str interface: The Interface param.
        """
        pulumi.set(__self__, "interface", interface)

    @_builtins.property
    @pulumi.getter
    def interface(self) -> _builtins.str:
        """
        The Interface param.
        """
        return pulumi.get(self, "interface")


@pulumi.output_type
class GetNatRuleListDataTargetResult(dict):
    def __init__(__self__, *,
                 devices: Sequence['outputs.GetNatRuleListDataTargetDeviceResult'],
                 negate: _builtins.bool,
                 tags: Sequence[_builtins.str]):
        """
        :param Sequence['GetNatRuleListDataTargetDeviceArgs'] devices: The Devices param.
        :param _builtins.bool negate: The Negate param.
        :param Sequence[_builtins.str] tags: The Tags param.
        """
        pulumi.set(__self__, "devices", devices)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def devices(self) -> Sequence['outputs.GetNatRuleListDataTargetDeviceResult']:
        """
        The Devices param.
        """
        return pulumi.get(self, "devices")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetNatRuleListDataTargetDeviceResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetNatRuleSourceTranslationResult(dict):
    def __init__(__self__, *,
                 bi_directional: _builtins.str,
                 fallback: 'outputs.GetNatRuleSourceTranslationFallbackResult',
                 translated_address_arrays: Sequence[_builtins.str],
                 translated_address_single: _builtins.str):
        """
        :param _builtins.str bi_directional: The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        :param 'GetNatRuleSourceTranslationFallbackArgs' fallback: The Fallback param.
        :param Sequence[_builtins.str] translated_address_arrays: The TranslatedAddressArray param.
        :param _builtins.str translated_address_single: The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        pulumi.set(__self__, "bi_directional", bi_directional)
        pulumi.set(__self__, "fallback", fallback)
        pulumi.set(__self__, "translated_address_arrays", translated_address_arrays)
        pulumi.set(__self__, "translated_address_single", translated_address_single)

    @_builtins.property
    @pulumi.getter(name="biDirectional")
    def bi_directional(self) -> _builtins.str:
        """
        The BiDirectional param. String must be one of these: `"yes"`, `"no"`.
        """
        return pulumi.get(self, "bi_directional")

    @_builtins.property
    @pulumi.getter
    def fallback(self) -> 'outputs.GetNatRuleSourceTranslationFallbackResult':
        """
        The Fallback param.
        """
        return pulumi.get(self, "fallback")

    @_builtins.property
    @pulumi.getter(name="translatedAddressArrays")
    def translated_address_arrays(self) -> Sequence[_builtins.str]:
        """
        The TranslatedAddressArray param.
        """
        return pulumi.get(self, "translated_address_arrays")

    @_builtins.property
    @pulumi.getter(name="translatedAddressSingle")
    def translated_address_single(self) -> _builtins.str:
        """
        The TranslatedAddressSingle param. String validation regex: `^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?:[A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}$`.
        """
        return pulumi.get(self, "translated_address_single")


@pulumi.output_type
class GetNatRuleSourceTranslationFallbackResult(dict):
    def __init__(__self__, *,
                 interface: _builtins.str):
        """
        :param _builtins.str interface: The Interface param.
        """
        pulumi.set(__self__, "interface", interface)

    @_builtins.property
    @pulumi.getter
    def interface(self) -> _builtins.str:
        """
        The Interface param.
        """
        return pulumi.get(self, "interface")


@pulumi.output_type
class GetNatRuleTargetResult(dict):
    def __init__(__self__, *,
                 devices: Sequence['outputs.GetNatRuleTargetDeviceResult'],
                 negate: _builtins.bool,
                 tags: Sequence[_builtins.str]):
        """
        :param Sequence['GetNatRuleTargetDeviceArgs'] devices: The Devices param.
        :param _builtins.bool negate: The Negate param.
        :param Sequence[_builtins.str] tags: The Tags param.
        """
        pulumi.set(__self__, "devices", devices)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def devices(self) -> Sequence['outputs.GetNatRuleTargetDeviceResult']:
        """
        The Devices param.
        """
        return pulumi.get(self, "devices")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The Tags param.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetNatRuleTargetDeviceResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetOcspResponderListDataResult(dict):
    def __init__(__self__, *,
                 host_name: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str host_name: The HostName param. String length must be between 1 and 255 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: alphanumeric string [:0-9a-zA-Z._-]. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        pulumi.set(__self__, "host_name", host_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="hostName")
    def host_name(self) -> _builtins.str:
        """
        The HostName param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "host_name")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        alphanumeric string [:0-9a-zA-Z._-]. String length must not exceed 63 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetProfileGroupListDataResult(dict):
    def __init__(__self__, *,
                 ai_securities: Sequence[_builtins.str],
                 dns_securities: Sequence[_builtins.str],
                 file_blockings: Sequence[_builtins.str],
                 id: _builtins.str,
                 name: _builtins.str,
                 saas_securities: Sequence[_builtins.str],
                 spywares: Sequence[_builtins.str],
                 url_filterings: Sequence[_builtins.str],
                 virus_and_wildfire_analyses: Sequence[_builtins.str],
                 vulnerabilities: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] ai_securities: List of AI security profiles.
        :param Sequence[_builtins.str] dns_securities: List of DNS security profiles.
        :param Sequence[_builtins.str] file_blockings: List of file blocking profiles.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The name of the profile group.
        :param Sequence[_builtins.str] saas_securities: List of HTTP header insertion profiles.
        :param Sequence[_builtins.str] spywares: List of anti-spyware profiles.
        :param Sequence[_builtins.str] url_filterings: List of URL filtering profiles.
        :param Sequence[_builtins.str] virus_and_wildfire_analyses: List of anti-virus and Wildfire analysis profiles.
        :param Sequence[_builtins.str] vulnerabilities: List of vulnerability protection profiles.
        """
        pulumi.set(__self__, "ai_securities", ai_securities)
        pulumi.set(__self__, "dns_securities", dns_securities)
        pulumi.set(__self__, "file_blockings", file_blockings)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "saas_securities", saas_securities)
        pulumi.set(__self__, "spywares", spywares)
        pulumi.set(__self__, "url_filterings", url_filterings)
        pulumi.set(__self__, "virus_and_wildfire_analyses", virus_and_wildfire_analyses)
        pulumi.set(__self__, "vulnerabilities", vulnerabilities)

    @_builtins.property
    @pulumi.getter(name="aiSecurities")
    def ai_securities(self) -> Sequence[_builtins.str]:
        """
        List of AI security profiles.
        """
        return pulumi.get(self, "ai_securities")

    @_builtins.property
    @pulumi.getter(name="dnsSecurities")
    def dns_securities(self) -> Sequence[_builtins.str]:
        """
        List of DNS security profiles.
        """
        return pulumi.get(self, "dns_securities")

    @_builtins.property
    @pulumi.getter(name="fileBlockings")
    def file_blockings(self) -> Sequence[_builtins.str]:
        """
        List of file blocking profiles.
        """
        return pulumi.get(self, "file_blockings")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the profile group.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="saasSecurities")
    def saas_securities(self) -> Sequence[_builtins.str]:
        """
        List of HTTP header insertion profiles.
        """
        return pulumi.get(self, "saas_securities")

    @_builtins.property
    @pulumi.getter
    def spywares(self) -> Sequence[_builtins.str]:
        """
        List of anti-spyware profiles.
        """
        return pulumi.get(self, "spywares")

    @_builtins.property
    @pulumi.getter(name="urlFilterings")
    def url_filterings(self) -> Sequence[_builtins.str]:
        """
        List of URL filtering profiles.
        """
        return pulumi.get(self, "url_filterings")

    @_builtins.property
    @pulumi.getter(name="virusAndWildfireAnalyses")
    def virus_and_wildfire_analyses(self) -> Sequence[_builtins.str]:
        """
        List of anti-virus and Wildfire analysis profiles.
        """
        return pulumi.get(self, "virus_and_wildfire_analyses")

    @_builtins.property
    @pulumi.getter
    def vulnerabilities(self) -> Sequence[_builtins.str]:
        """
        List of vulnerability protection profiles.
        """
        return pulumi.get(self, "vulnerabilities")


@pulumi.output_type
class GetQosPolicyRuleActionResult(dict):
    def __init__(__self__, *,
                 class_: _builtins.str):
        """
        :param _builtins.str class_: The Class param.
        """
        pulumi.set(__self__, "class_", class_)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> _builtins.str:
        """
        The Class param.
        """
        return pulumi.get(self, "class_")


@pulumi.output_type
class GetQosPolicyRuleDscpTosResult(dict):
    def __init__(__self__, *,
                 codepoints: Sequence['outputs.GetQosPolicyRuleDscpTosCodepointResult']):
        """
        :param Sequence['GetQosPolicyRuleDscpTosCodepointArgs'] codepoints: The Codepoints param.
        """
        pulumi.set(__self__, "codepoints", codepoints)

    @_builtins.property
    @pulumi.getter
    def codepoints(self) -> Sequence['outputs.GetQosPolicyRuleDscpTosCodepointResult']:
        """
        The Codepoints param.
        """
        return pulumi.get(self, "codepoints")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 type: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetQosPolicyRuleDscpTosCodepointTypeArgs' type: The Type param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeResult':
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeResult(dict):
    def __init__(__self__, *,
                 af: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeAfResult',
                 cs: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCsResult',
                 custom: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCustomResult',
                 ef: _builtins.bool,
                 tos: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeTosResult'):
        """
        :param 'GetQosPolicyRuleDscpTosCodepointTypeAfArgs' af: The Af param.
        :param 'GetQosPolicyRuleDscpTosCodepointTypeCsArgs' cs: The Cs param.
        :param 'GetQosPolicyRuleDscpTosCodepointTypeCustomArgs' custom: The Custom param.
        :param _builtins.bool ef: The Ef param.
        :param 'GetQosPolicyRuleDscpTosCodepointTypeTosArgs' tos: The Tos param.
        """
        pulumi.set(__self__, "af", af)
        pulumi.set(__self__, "cs", cs)
        pulumi.set(__self__, "custom", custom)
        pulumi.set(__self__, "ef", ef)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter
    def af(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeAfResult':
        """
        The Af param.
        """
        return pulumi.get(self, "af")

    @_builtins.property
    @pulumi.getter
    def cs(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCsResult':
        """
        The Cs param.
        """
        return pulumi.get(self, "cs")

    @_builtins.property
    @pulumi.getter
    def custom(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCustomResult':
        """
        The Custom param.
        """
        return pulumi.get(self, "custom")

    @_builtins.property
    @pulumi.getter
    def ef(self) -> _builtins.bool:
        """
        The Ef param.
        """
        return pulumi.get(self, "ef")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeTosResult':
        """
        The Tos param.
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeAfResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeCsResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeCustomResult(dict):
    def __init__(__self__, *,
                 codepoint: 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCustomCodepointResult'):
        """
        :param 'GetQosPolicyRuleDscpTosCodepointTypeCustomCodepointArgs' codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> 'outputs.GetQosPolicyRuleDscpTosCodepointTypeCustomCodepointResult':
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeCustomCodepointResult(dict):
    def __init__(__self__, *,
                 binary_value: _builtins.str,
                 codepoint_name: _builtins.str):
        """
        :param _builtins.str binary_value: The BinaryValue param.
        :param _builtins.str codepoint_name: The CodepointName param.
        """
        pulumi.set(__self__, "binary_value", binary_value)
        pulumi.set(__self__, "codepoint_name", codepoint_name)

    @_builtins.property
    @pulumi.getter(name="binaryValue")
    def binary_value(self) -> _builtins.str:
        """
        The BinaryValue param.
        """
        return pulumi.get(self, "binary_value")

    @_builtins.property
    @pulumi.getter(name="codepointName")
    def codepoint_name(self) -> _builtins.str:
        """
        The CodepointName param.
        """
        return pulumi.get(self, "codepoint_name")


@pulumi.output_type
class GetQosPolicyRuleDscpTosCodepointTypeTosResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleListDataResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetQosPolicyRuleListDataActionResult',
                 description: _builtins.str,
                 dscp_tos: 'outputs.GetQosPolicyRuleListDataDscpTosResult',
                 id: _builtins.str,
                 name: _builtins.str,
                 schedule: _builtins.str):
        """
        :param 'GetQosPolicyRuleListDataActionArgs' action: The Action param.
        :param _builtins.str description: The Description param.
        :param 'GetQosPolicyRuleListDataDscpTosArgs' dscp_tos: The DscpTos param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        :param _builtins.str schedule: The Schedule param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "dscp_tos", dscp_tos)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "schedule", schedule)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetQosPolicyRuleListDataActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="dscpTos")
    def dscp_tos(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosResult':
        """
        The DscpTos param.
        """
        return pulumi.get(self, "dscp_tos")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def schedule(self) -> _builtins.str:
        """
        The Schedule param.
        """
        return pulumi.get(self, "schedule")


@pulumi.output_type
class GetQosPolicyRuleListDataActionResult(dict):
    def __init__(__self__, *,
                 class_: _builtins.str):
        """
        :param _builtins.str class_: The Class param.
        """
        pulumi.set(__self__, "class_", class_)

    @_builtins.property
    @pulumi.getter(name="class")
    def class_(self) -> _builtins.str:
        """
        The Class param.
        """
        return pulumi.get(self, "class_")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosResult(dict):
    def __init__(__self__, *,
                 codepoints: Sequence['outputs.GetQosPolicyRuleListDataDscpTosCodepointResult']):
        """
        :param Sequence['GetQosPolicyRuleListDataDscpTosCodepointArgs'] codepoints: The Codepoints param.
        """
        pulumi.set(__self__, "codepoints", codepoints)

    @_builtins.property
    @pulumi.getter
    def codepoints(self) -> Sequence['outputs.GetQosPolicyRuleListDataDscpTosCodepointResult']:
        """
        The Codepoints param.
        """
        return pulumi.get(self, "codepoints")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 type: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeArgs' type: The Type param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeResult':
        """
        The Type param.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeResult(dict):
    def __init__(__self__, *,
                 af: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeAfResult',
                 cs: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCsResult',
                 custom: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustomResult',
                 ef: _builtins.bool,
                 tos: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeTosResult'):
        """
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeAfArgs' af: The Af param.
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeCsArgs' cs: The Cs param.
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeCustomArgs' custom: The Custom param.
        :param _builtins.bool ef: The Ef param.
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeTosArgs' tos: The Tos param.
        """
        pulumi.set(__self__, "af", af)
        pulumi.set(__self__, "cs", cs)
        pulumi.set(__self__, "custom", custom)
        pulumi.set(__self__, "ef", ef)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter
    def af(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeAfResult':
        """
        The Af param.
        """
        return pulumi.get(self, "af")

    @_builtins.property
    @pulumi.getter
    def cs(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCsResult':
        """
        The Cs param.
        """
        return pulumi.get(self, "cs")

    @_builtins.property
    @pulumi.getter
    def custom(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustomResult':
        """
        The Custom param.
        """
        return pulumi.get(self, "custom")

    @_builtins.property
    @pulumi.getter
    def ef(self) -> _builtins.bool:
        """
        The Ef param.
        """
        return pulumi.get(self, "ef")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeTosResult':
        """
        The Tos param.
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeAfResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeCsResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeCustomResult(dict):
    def __init__(__self__, *,
                 codepoint: 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepointResult'):
        """
        :param 'GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepointArgs' codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> 'outputs.GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepointResult':
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeCustomCodepointResult(dict):
    def __init__(__self__, *,
                 binary_value: _builtins.str,
                 codepoint_name: _builtins.str):
        """
        :param _builtins.str binary_value: The BinaryValue param.
        :param _builtins.str codepoint_name: The CodepointName param.
        """
        pulumi.set(__self__, "binary_value", binary_value)
        pulumi.set(__self__, "codepoint_name", codepoint_name)

    @_builtins.property
    @pulumi.getter(name="binaryValue")
    def binary_value(self) -> _builtins.str:
        """
        The BinaryValue param.
        """
        return pulumi.get(self, "binary_value")

    @_builtins.property
    @pulumi.getter(name="codepointName")
    def codepoint_name(self) -> _builtins.str:
        """
        The CodepointName param.
        """
        return pulumi.get(self, "codepoint_name")


@pulumi.output_type
class GetQosPolicyRuleListDataDscpTosCodepointTypeTosResult(dict):
    def __init__(__self__, *,
                 codepoint: _builtins.str):
        """
        :param _builtins.str codepoint: The Codepoint param.
        """
        pulumi.set(__self__, "codepoint", codepoint)

    @_builtins.property
    @pulumi.getter
    def codepoint(self) -> _builtins.str:
        """
        The Codepoint param.
        """
        return pulumi.get(self, "codepoint")


@pulumi.output_type
class GetQosProfileAggregateBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetQosProfileClassBandwidthTypeResult(dict):
    def __init__(__self__, *,
                 mbps: 'outputs.GetQosProfileClassBandwidthTypeMbpsResult',
                 percentage: 'outputs.GetQosProfileClassBandwidthTypePercentageResult'):
        """
        :param 'GetQosProfileClassBandwidthTypeMbpsArgs' mbps: The Mbps param.
        :param 'GetQosProfileClassBandwidthTypePercentageArgs' percentage: The Percentage param.
        """
        pulumi.set(__self__, "mbps", mbps)
        pulumi.set(__self__, "percentage", percentage)

    @_builtins.property
    @pulumi.getter
    def mbps(self) -> 'outputs.GetQosProfileClassBandwidthTypeMbpsResult':
        """
        The Mbps param.
        """
        return pulumi.get(self, "mbps")

    @_builtins.property
    @pulumi.getter
    def percentage(self) -> 'outputs.GetQosProfileClassBandwidthTypePercentageResult':
        """
        The Percentage param.
        """
        return pulumi.get(self, "percentage")


@pulumi.output_type
class GetQosProfileClassBandwidthTypeMbpsResult(dict):
    def __init__(__self__, *,
                 classes: Sequence['outputs.GetQosProfileClassBandwidthTypeMbpsClassResult']):
        """
        :param Sequence['GetQosProfileClassBandwidthTypeMbpsClassArgs'] classes: QoS setting for traffic classes.
        """
        pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Sequence['outputs.GetQosProfileClassBandwidthTypeMbpsClassResult']:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class GetQosProfileClassBandwidthTypeMbpsClassResult(dict):
    def __init__(__self__, *,
                 class_bandwidth: 'outputs.GetQosProfileClassBandwidthTypeMbpsClassClassBandwidthResult',
                 name: _builtins.str,
                 priority: _builtins.str):
        """
        :param 'GetQosProfileClassBandwidthTypeMbpsClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> 'outputs.GetQosProfileClassBandwidthTypeMbpsClassClassBandwidthResult':
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> _builtins.str:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class GetQosProfileClassBandwidthTypeMbpsClassClassBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetQosProfileClassBandwidthTypePercentageResult(dict):
    def __init__(__self__, *,
                 classes: Sequence['outputs.GetQosProfileClassBandwidthTypePercentageClassResult']):
        """
        :param Sequence['GetQosProfileClassBandwidthTypePercentageClassArgs'] classes: QoS setting for traffic classes.
        """
        pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Sequence['outputs.GetQosProfileClassBandwidthTypePercentageClassResult']:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class GetQosProfileClassBandwidthTypePercentageClassResult(dict):
    def __init__(__self__, *,
                 class_bandwidth: 'outputs.GetQosProfileClassBandwidthTypePercentageClassClassBandwidthResult',
                 name: _builtins.str,
                 priority: _builtins.str):
        """
        :param 'GetQosProfileClassBandwidthTypePercentageClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> 'outputs.GetQosProfileClassBandwidthTypePercentageClassClassBandwidthResult':
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> _builtins.str:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class GetQosProfileClassBandwidthTypePercentageClassClassBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        :param _builtins.int egress_max: max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetQosProfileListDataResult(dict):
    def __init__(__self__, *,
                 aggregate_bandwidth: 'outputs.GetQosProfileListDataAggregateBandwidthResult',
                 class_bandwidth_type: 'outputs.GetQosProfileListDataClassBandwidthTypeResult',
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param 'GetQosProfileListDataAggregateBandwidthArgs' aggregate_bandwidth: The AggregateBandwidth param.
        :param 'GetQosProfileListDataClassBandwidthTypeArgs' class_bandwidth_type: The ClassBandwidthType param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "aggregate_bandwidth", aggregate_bandwidth)
        pulumi.set(__self__, "class_bandwidth_type", class_bandwidth_type)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter(name="aggregateBandwidth")
    def aggregate_bandwidth(self) -> 'outputs.GetQosProfileListDataAggregateBandwidthResult':
        """
        The AggregateBandwidth param.
        """
        return pulumi.get(self, "aggregate_bandwidth")

    @_builtins.property
    @pulumi.getter(name="classBandwidthType")
    def class_bandwidth_type(self) -> 'outputs.GetQosProfileListDataClassBandwidthTypeResult':
        """
        The ClassBandwidthType param.
        """
        return pulumi.get(self, "class_bandwidth_type")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetQosProfileListDataAggregateBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 16000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypeResult(dict):
    def __init__(__self__, *,
                 mbps: 'outputs.GetQosProfileListDataClassBandwidthTypeMbpsResult',
                 percentage: 'outputs.GetQosProfileListDataClassBandwidthTypePercentageResult'):
        """
        :param 'GetQosProfileListDataClassBandwidthTypeMbpsArgs' mbps: The Mbps param.
        :param 'GetQosProfileListDataClassBandwidthTypePercentageArgs' percentage: The Percentage param.
        """
        pulumi.set(__self__, "mbps", mbps)
        pulumi.set(__self__, "percentage", percentage)

    @_builtins.property
    @pulumi.getter
    def mbps(self) -> 'outputs.GetQosProfileListDataClassBandwidthTypeMbpsResult':
        """
        The Mbps param.
        """
        return pulumi.get(self, "mbps")

    @_builtins.property
    @pulumi.getter
    def percentage(self) -> 'outputs.GetQosProfileListDataClassBandwidthTypePercentageResult':
        """
        The Percentage param.
        """
        return pulumi.get(self, "percentage")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypeMbpsResult(dict):
    def __init__(__self__, *,
                 classes: Sequence['outputs.GetQosProfileListDataClassBandwidthTypeMbpsClassResult']):
        """
        :param Sequence['GetQosProfileListDataClassBandwidthTypeMbpsClassArgs'] classes: QoS setting for traffic classes.
        """
        pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Sequence['outputs.GetQosProfileListDataClassBandwidthTypeMbpsClassResult']:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypeMbpsClassResult(dict):
    def __init__(__self__, *,
                 class_bandwidth: 'outputs.GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidthResult',
                 name: _builtins.str,
                 priority: _builtins.str):
        """
        :param 'GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> 'outputs.GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidthResult':
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> _builtins.str:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypeMbpsClassClassBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        :param _builtins.int egress_max: max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in mbps. Value must be between 0 and 60000.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypePercentageResult(dict):
    def __init__(__self__, *,
                 classes: Sequence['outputs.GetQosProfileListDataClassBandwidthTypePercentageClassResult']):
        """
        :param Sequence['GetQosProfileListDataClassBandwidthTypePercentageClassArgs'] classes: QoS setting for traffic classes.
        """
        pulumi.set(__self__, "classes", classes)

    @_builtins.property
    @pulumi.getter
    def classes(self) -> Sequence['outputs.GetQosProfileListDataClassBandwidthTypePercentageClassResult']:
        """
        QoS setting for traffic classes.
        """
        return pulumi.get(self, "classes")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypePercentageClassResult(dict):
    def __init__(__self__, *,
                 class_bandwidth: 'outputs.GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidthResult',
                 name: _builtins.str,
                 priority: _builtins.str):
        """
        :param 'GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidthArgs' class_bandwidth: The ClassBandwidth param.
        :param _builtins.str name: Traffic class. String length must not exceed 31 characters.
        :param _builtins.str priority: traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        pulumi.set(__self__, "class_bandwidth", class_bandwidth)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "priority", priority)

    @_builtins.property
    @pulumi.getter(name="classBandwidth")
    def class_bandwidth(self) -> 'outputs.GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidthResult':
        """
        The ClassBandwidth param.
        """
        return pulumi.get(self, "class_bandwidth")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Traffic class. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def priority(self) -> _builtins.str:
        """
        traffic class priority. String must be one of these: `"real-time"`, `"high"`, `"medium"`, `"low"`. Default: `"medium"`.
        """
        return pulumi.get(self, "priority")


@pulumi.output_type
class GetQosProfileListDataClassBandwidthTypePercentageClassClassBandwidthResult(dict):
    def __init__(__self__, *,
                 egress_guaranteed: _builtins.int,
                 egress_max: _builtins.int):
        """
        :param _builtins.int egress_guaranteed: guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        :param _builtins.int egress_max: max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        pulumi.set(__self__, "egress_guaranteed", egress_guaranteed)
        pulumi.set(__self__, "egress_max", egress_max)

    @_builtins.property
    @pulumi.getter(name="egressGuaranteed")
    def egress_guaranteed(self) -> _builtins.int:
        """
        guaranteed sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_guaranteed")

    @_builtins.property
    @pulumi.getter(name="egressMax")
    def egress_max(self) -> _builtins.int:
        """
        max sending bandwidth in percentage. Value must be between 0 and 100.
        """
        return pulumi.get(self, "egress_max")


@pulumi.output_type
class GetRadiusServerProfileListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 protocol: 'outputs.GetRadiusServerProfileListDataProtocolResult',
                 retries: _builtins.int,
                 servers: Sequence['outputs.GetRadiusServerProfileListDataServerResult'],
                 timeout: _builtins.int):
        """
        :param _builtins.str id: UUID of the resource.
        :param 'GetRadiusServerProfileListDataProtocolArgs' protocol: The Protocol param.
        :param _builtins.int retries: The Retries param. Value must be between 1 and 5.
        :param Sequence['GetRadiusServerProfileListDataServerArgs'] servers: The Servers param.
        :param _builtins.int timeout: The Timeout param. Value must be between 1 and 120.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "retries", retries)
        pulumi.set(__self__, "servers", servers)
        pulumi.set(__self__, "timeout", timeout)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetRadiusServerProfileListDataProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def retries(self) -> _builtins.int:
        """
        The Retries param. Value must be between 1 and 5.
        """
        return pulumi.get(self, "retries")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetRadiusServerProfileListDataServerResult']:
        """
        The Servers param.
        """
        return pulumi.get(self, "servers")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        The Timeout param. Value must be between 1 and 120.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class GetRadiusServerProfileListDataProtocolResult(dict):
    def __init__(__self__, *,
                 chap: _builtins.bool,
                 eap_ttls_with_pap: 'outputs.GetRadiusServerProfileListDataProtocolEapTtlsWithPapResult',
                 pap: _builtins.bool,
                 peap_mschap_v2: 'outputs.GetRadiusServerProfileListDataProtocolPeapMschapV2Result',
                 peap_with_gtc: 'outputs.GetRadiusServerProfileListDataProtocolPeapWithGtcResult'):
        """
        :param _builtins.bool chap: The Chap param.
        :param 'GetRadiusServerProfileListDataProtocolEapTtlsWithPapArgs' eap_ttls_with_pap: The EapTtlsWithPap param.
        :param _builtins.bool pap: The Pap param.
        :param 'GetRadiusServerProfileListDataProtocolPeapMschapV2Args' peap_mschap_v2: The PeapMschapV2 param.
        :param 'GetRadiusServerProfileListDataProtocolPeapWithGtcArgs' peap_with_gtc: The PeapWithGtc param.
        """
        pulumi.set(__self__, "chap", chap)
        pulumi.set(__self__, "eap_ttls_with_pap", eap_ttls_with_pap)
        pulumi.set(__self__, "pap", pap)
        pulumi.set(__self__, "peap_mschap_v2", peap_mschap_v2)
        pulumi.set(__self__, "peap_with_gtc", peap_with_gtc)

    @_builtins.property
    @pulumi.getter
    def chap(self) -> _builtins.bool:
        """
        The Chap param.
        """
        return pulumi.get(self, "chap")

    @_builtins.property
    @pulumi.getter(name="eapTtlsWithPap")
    def eap_ttls_with_pap(self) -> 'outputs.GetRadiusServerProfileListDataProtocolEapTtlsWithPapResult':
        """
        The EapTtlsWithPap param.
        """
        return pulumi.get(self, "eap_ttls_with_pap")

    @_builtins.property
    @pulumi.getter
    def pap(self) -> _builtins.bool:
        """
        The Pap param.
        """
        return pulumi.get(self, "pap")

    @_builtins.property
    @pulumi.getter(name="peapMschapV2")
    def peap_mschap_v2(self) -> 'outputs.GetRadiusServerProfileListDataProtocolPeapMschapV2Result':
        """
        The PeapMschapV2 param.
        """
        return pulumi.get(self, "peap_mschap_v2")

    @_builtins.property
    @pulumi.getter(name="peapWithGtc")
    def peap_with_gtc(self) -> 'outputs.GetRadiusServerProfileListDataProtocolPeapWithGtcResult':
        """
        The PeapWithGtc param.
        """
        return pulumi.get(self, "peap_with_gtc")


@pulumi.output_type
class GetRadiusServerProfileListDataProtocolEapTtlsWithPapResult(dict):
    def __init__(__self__, *,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileListDataProtocolPeapMschapV2Result(dict):
    def __init__(__self__, *,
                 allow_pwd_change: _builtins.bool,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool allow_pwd_change: The AllowPwdChange param.
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "allow_pwd_change", allow_pwd_change)
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="allowPwdChange")
    def allow_pwd_change(self) -> _builtins.bool:
        """
        The AllowPwdChange param.
        """
        return pulumi.get(self, "allow_pwd_change")

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileListDataProtocolPeapWithGtcResult(dict):
    def __init__(__self__, *,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileListDataServerResult(dict):
    def __init__(__self__, *,
                 ip_address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int,
                 secret: _builtins.str):
        """
        :param _builtins.str ip_address: The IpAddress param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> _builtins.str:
        """
        The IpAddress param.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetRadiusServerProfileProtocolResult(dict):
    def __init__(__self__, *,
                 chap: _builtins.bool,
                 eap_ttls_with_pap: 'outputs.GetRadiusServerProfileProtocolEapTtlsWithPapResult',
                 pap: _builtins.bool,
                 peap_mschap_v2: 'outputs.GetRadiusServerProfileProtocolPeapMschapV2Result',
                 peap_with_gtc: 'outputs.GetRadiusServerProfileProtocolPeapWithGtcResult'):
        """
        :param _builtins.bool chap: The Chap param.
        :param 'GetRadiusServerProfileProtocolEapTtlsWithPapArgs' eap_ttls_with_pap: The EapTtlsWithPap param.
        :param _builtins.bool pap: The Pap param.
        :param 'GetRadiusServerProfileProtocolPeapMschapV2Args' peap_mschap_v2: The PeapMschapV2 param.
        :param 'GetRadiusServerProfileProtocolPeapWithGtcArgs' peap_with_gtc: The PeapWithGtc param.
        """
        pulumi.set(__self__, "chap", chap)
        pulumi.set(__self__, "eap_ttls_with_pap", eap_ttls_with_pap)
        pulumi.set(__self__, "pap", pap)
        pulumi.set(__self__, "peap_mschap_v2", peap_mschap_v2)
        pulumi.set(__self__, "peap_with_gtc", peap_with_gtc)

    @_builtins.property
    @pulumi.getter
    def chap(self) -> _builtins.bool:
        """
        The Chap param.
        """
        return pulumi.get(self, "chap")

    @_builtins.property
    @pulumi.getter(name="eapTtlsWithPap")
    def eap_ttls_with_pap(self) -> 'outputs.GetRadiusServerProfileProtocolEapTtlsWithPapResult':
        """
        The EapTtlsWithPap param.
        """
        return pulumi.get(self, "eap_ttls_with_pap")

    @_builtins.property
    @pulumi.getter
    def pap(self) -> _builtins.bool:
        """
        The Pap param.
        """
        return pulumi.get(self, "pap")

    @_builtins.property
    @pulumi.getter(name="peapMschapV2")
    def peap_mschap_v2(self) -> 'outputs.GetRadiusServerProfileProtocolPeapMschapV2Result':
        """
        The PeapMschapV2 param.
        """
        return pulumi.get(self, "peap_mschap_v2")

    @_builtins.property
    @pulumi.getter(name="peapWithGtc")
    def peap_with_gtc(self) -> 'outputs.GetRadiusServerProfileProtocolPeapWithGtcResult':
        """
        The PeapWithGtc param.
        """
        return pulumi.get(self, "peap_with_gtc")


@pulumi.output_type
class GetRadiusServerProfileProtocolEapTtlsWithPapResult(dict):
    def __init__(__self__, *,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileProtocolPeapMschapV2Result(dict):
    def __init__(__self__, *,
                 allow_pwd_change: _builtins.bool,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool allow_pwd_change: The AllowPwdChange param.
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "allow_pwd_change", allow_pwd_change)
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="allowPwdChange")
    def allow_pwd_change(self) -> _builtins.bool:
        """
        The AllowPwdChange param.
        """
        return pulumi.get(self, "allow_pwd_change")

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileProtocolPeapWithGtcResult(dict):
    def __init__(__self__, *,
                 anon_outer_id: _builtins.bool,
                 radius_cert_profile: _builtins.str):
        """
        :param _builtins.bool anon_outer_id: The AnonOuterId param.
        :param _builtins.str radius_cert_profile: The RadiusCertProfile param.
        """
        pulumi.set(__self__, "anon_outer_id", anon_outer_id)
        pulumi.set(__self__, "radius_cert_profile", radius_cert_profile)

    @_builtins.property
    @pulumi.getter(name="anonOuterId")
    def anon_outer_id(self) -> _builtins.bool:
        """
        The AnonOuterId param.
        """
        return pulumi.get(self, "anon_outer_id")

    @_builtins.property
    @pulumi.getter(name="radiusCertProfile")
    def radius_cert_profile(self) -> _builtins.str:
        """
        The RadiusCertProfile param.
        """
        return pulumi.get(self, "radius_cert_profile")


@pulumi.output_type
class GetRadiusServerProfileServerResult(dict):
    def __init__(__self__, *,
                 ip_address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int,
                 secret: _builtins.str):
        """
        :param _builtins.str ip_address: The IpAddress param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        pulumi.set(__self__, "ip_address", ip_address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> _builtins.str:
        """
        The IpAddress param.
        """
        return pulumi.get(self, "ip_address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetRegionGeoLocationResult(dict):
    def __init__(__self__, *,
                 latitude: _builtins.float,
                 longitude: _builtins.float):
        """
        :param _builtins.float latitude: latitude coordinate. Value must be between -90 and 90.
        :param _builtins.float longitude: longitude coordinate. Value must be between -180 and 180.
        """
        pulumi.set(__self__, "latitude", latitude)
        pulumi.set(__self__, "longitude", longitude)

    @_builtins.property
    @pulumi.getter
    def latitude(self) -> _builtins.float:
        """
        latitude coordinate. Value must be between -90 and 90.
        """
        return pulumi.get(self, "latitude")

    @_builtins.property
    @pulumi.getter
    def longitude(self) -> _builtins.float:
        """
        longitude coordinate. Value must be between -180 and 180.
        """
        return pulumi.get(self, "longitude")


@pulumi.output_type
class GetRegionListDataResult(dict):
    def __init__(__self__, *,
                 addresses: Sequence[_builtins.str],
                 geo_location: 'outputs.GetRegionListDataGeoLocationResult',
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param Sequence[_builtins.str] addresses: The Addresses param.
        :param 'GetRegionListDataGeoLocationArgs' geo_location: The GeoLocation param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        pulumi.set(__self__, "addresses", addresses)
        pulumi.set(__self__, "geo_location", geo_location)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def addresses(self) -> Sequence[_builtins.str]:
        """
        The Addresses param.
        """
        return pulumi.get(self, "addresses")

    @_builtins.property
    @pulumi.getter(name="geoLocation")
    def geo_location(self) -> 'outputs.GetRegionListDataGeoLocationResult':
        """
        The GeoLocation param.
        """
        return pulumi.get(self, "geo_location")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetRegionListDataGeoLocationResult(dict):
    def __init__(__self__, *,
                 latitude: _builtins.float,
                 longitude: _builtins.float):
        """
        :param _builtins.float latitude: latitude coordinate. Value must be between -90 and 90.
        :param _builtins.float longitude: longitude coordinate. Value must be between -180 and 180.
        """
        pulumi.set(__self__, "latitude", latitude)
        pulumi.set(__self__, "longitude", longitude)

    @_builtins.property
    @pulumi.getter
    def latitude(self) -> _builtins.float:
        """
        latitude coordinate. Value must be between -90 and 90.
        """
        return pulumi.get(self, "latitude")

    @_builtins.property
    @pulumi.getter
    def longitude(self) -> _builtins.float:
        """
        longitude coordinate. Value must be between -180 and 180.
        """
        return pulumi.get(self, "longitude")


@pulumi.output_type
class GetRemoteNetworkEcmpTunnelResult(dict):
    def __init__(__self__, *,
                 ipsec_tunnel: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetRemoteNetworkEcmpTunnelProtocolResult'):
        """
        :param _builtins.str ipsec_tunnel: The IpsecTunnel param.
        :param _builtins.str name: The Name param.
        :param 'GetRemoteNetworkEcmpTunnelProtocolArgs' protocol: The Protocol param.
        """
        pulumi.set(__self__, "ipsec_tunnel", ipsec_tunnel)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)

    @_builtins.property
    @pulumi.getter(name="ipsecTunnel")
    def ipsec_tunnel(self) -> _builtins.str:
        """
        The IpsecTunnel param.
        """
        return pulumi.get(self, "ipsec_tunnel")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetRemoteNetworkEcmpTunnelProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")


@pulumi.output_type
class GetRemoteNetworkEcmpTunnelProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetRemoteNetworkEcmpTunnelProtocolBgpResult'):
        """
        :param 'GetRemoteNetworkEcmpTunnelProtocolBgpArgs' bgp: The Bgp param.
        """
        pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetRemoteNetworkEcmpTunnelProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class GetRemoteNetworkEcmpTunnelProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peering_type: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peering_type", peering_type)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> _builtins.str:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetRemoteNetworkListDataResult(dict):
    def __init__(__self__, *,
                 ecmp_load_balancing: _builtins.str,
                 ecmp_tunnels: Sequence['outputs.GetRemoteNetworkListDataEcmpTunnelResult'],
                 id: _builtins.str,
                 ipsec_tunnel: _builtins.str,
                 license_type: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetRemoteNetworkListDataProtocolResult',
                 region: _builtins.str,
                 secondary_ipsec_tunnel: _builtins.str,
                 spn_name: _builtins.str,
                 subnets: Sequence[_builtins.str]):
        """
        :param _builtins.str ecmp_load_balancing: The EcmpLoadBalancing param. String must be one of these: `"enable"`, `"disable"`. Default: `"disable"`.
        :param Sequence['GetRemoteNetworkListDataEcmpTunnelArgs'] ecmp_tunnels: ecmp*tunnels is required when ecmp*load*balancing is enable.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str ipsec_tunnel: ipsec*tunnel is required when ecmp*load_balancing is disable.
        :param _builtins.str license_type: New customer will only be on aggregate bandwidth licensing. String length must exceed 1 characters. Default: `"FWAAS-AGGREGATE"`.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param 'GetRemoteNetworkListDataProtocolArgs' protocol: setup the protocol when ecmp*load*balancing is disable.
        :param _builtins.str region: The Region param. String length must exceed 1 characters.
        :param _builtins.str secondary_ipsec_tunnel: specify secondary ipsec_tunnel if needed.
        :param _builtins.str spn_name: spn-name is needed when license_type is FWAAS-AGGREGATE.
        :param Sequence[_builtins.str] subnets: The Subnets param.
        """
        pulumi.set(__self__, "ecmp_load_balancing", ecmp_load_balancing)
        pulumi.set(__self__, "ecmp_tunnels", ecmp_tunnels)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ipsec_tunnel", ipsec_tunnel)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "secondary_ipsec_tunnel", secondary_ipsec_tunnel)
        pulumi.set(__self__, "spn_name", spn_name)
        pulumi.set(__self__, "subnets", subnets)

    @_builtins.property
    @pulumi.getter(name="ecmpLoadBalancing")
    def ecmp_load_balancing(self) -> _builtins.str:
        """
        The EcmpLoadBalancing param. String must be one of these: `"enable"`, `"disable"`. Default: `"disable"`.
        """
        return pulumi.get(self, "ecmp_load_balancing")

    @_builtins.property
    @pulumi.getter(name="ecmpTunnels")
    def ecmp_tunnels(self) -> Sequence['outputs.GetRemoteNetworkListDataEcmpTunnelResult']:
        """
        ecmp*tunnels is required when ecmp*load*balancing is enable.
        """
        return pulumi.get(self, "ecmp_tunnels")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipsecTunnel")
    def ipsec_tunnel(self) -> _builtins.str:
        """
        ipsec*tunnel is required when ecmp*load_balancing is disable.
        """
        return pulumi.get(self, "ipsec_tunnel")

    @_builtins.property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> _builtins.str:
        """
        New customer will only be on aggregate bandwidth licensing. String length must exceed 1 characters. Default: `"FWAAS-AGGREGATE"`.
        """
        return pulumi.get(self, "license_type")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetRemoteNetworkListDataProtocolResult':
        """
        setup the protocol when ecmp*load*balancing is disable.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        """
        The Region param. String length must exceed 1 characters.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="secondaryIpsecTunnel")
    def secondary_ipsec_tunnel(self) -> _builtins.str:
        """
        specify secondary ipsec_tunnel if needed.
        """
        return pulumi.get(self, "secondary_ipsec_tunnel")

    @_builtins.property
    @pulumi.getter(name="spnName")
    def spn_name(self) -> _builtins.str:
        """
        spn-name is needed when license_type is FWAAS-AGGREGATE.
        """
        return pulumi.get(self, "spn_name")

    @_builtins.property
    @pulumi.getter
    def subnets(self) -> Sequence[_builtins.str]:
        """
        The Subnets param.
        """
        return pulumi.get(self, "subnets")


@pulumi.output_type
class GetRemoteNetworkListDataEcmpTunnelResult(dict):
    def __init__(__self__, *,
                 ipsec_tunnel: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetRemoteNetworkListDataEcmpTunnelProtocolResult'):
        """
        :param _builtins.str ipsec_tunnel: The IpsecTunnel param.
        :param _builtins.str name: The Name param.
        :param 'GetRemoteNetworkListDataEcmpTunnelProtocolArgs' protocol: The Protocol param.
        """
        pulumi.set(__self__, "ipsec_tunnel", ipsec_tunnel)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)

    @_builtins.property
    @pulumi.getter(name="ipsecTunnel")
    def ipsec_tunnel(self) -> _builtins.str:
        """
        The IpsecTunnel param.
        """
        return pulumi.get(self, "ipsec_tunnel")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetRemoteNetworkListDataEcmpTunnelProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")


@pulumi.output_type
class GetRemoteNetworkListDataEcmpTunnelProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetRemoteNetworkListDataEcmpTunnelProtocolBgpResult'):
        """
        :param 'GetRemoteNetworkListDataEcmpTunnelProtocolBgpArgs' bgp: The Bgp param.
        """
        pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetRemoteNetworkListDataEcmpTunnelProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class GetRemoteNetworkListDataEcmpTunnelProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peering_type: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peering_type", peering_type)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> _builtins.str:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetRemoteNetworkListDataProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetRemoteNetworkListDataProtocolBgpResult',
                 bgp_peer: 'outputs.GetRemoteNetworkListDataProtocolBgpPeerResult'):
        """
        :param 'GetRemoteNetworkListDataProtocolBgpArgs' bgp: The Bgp param.
        :param 'GetRemoteNetworkListDataProtocolBgpPeerArgs' bgp_peer: secondary bgp routing as bgp*peer.
        """
        pulumi.set(__self__, "bgp", bgp)
        pulumi.set(__self__, "bgp_peer", bgp_peer)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetRemoteNetworkListDataProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")

    @_builtins.property
    @pulumi.getter(name="bgpPeer")
    def bgp_peer(self) -> 'outputs.GetRemoteNetworkListDataProtocolBgpPeerResult':
        """
        secondary bgp routing as bgp*peer.
        """
        return pulumi.get(self, "bgp_peer")


@pulumi.output_type
class GetRemoteNetworkListDataProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peering_type: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peering_type", peering_type)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> _builtins.str:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetRemoteNetworkListDataProtocolBgpPeerResult(dict):
    def __init__(__self__, *,
                 local_ip_address: _builtins.str,
                 peer_ip_address: _builtins.str,
                 same_as_primary: _builtins.bool,
                 secret: _builtins.str):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.bool same_as_primary: If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        :param _builtins.str secret: The Secret param.
        """
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "same_as_primary", same_as_primary)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> _builtins.bool:
        """
        If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetRemoteNetworkProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetRemoteNetworkProtocolBgpResult',
                 bgp_peer: 'outputs.GetRemoteNetworkProtocolBgpPeerResult'):
        """
        :param 'GetRemoteNetworkProtocolBgpArgs' bgp: The Bgp param.
        :param 'GetRemoteNetworkProtocolBgpPeerArgs' bgp_peer: secondary bgp routing as bgp*peer.
        """
        pulumi.set(__self__, "bgp", bgp)
        pulumi.set(__self__, "bgp_peer", bgp_peer)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetRemoteNetworkProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")

    @_builtins.property
    @pulumi.getter(name="bgpPeer")
    def bgp_peer(self) -> 'outputs.GetRemoteNetworkProtocolBgpPeerResult':
        """
        secondary bgp routing as bgp*peer.
        """
        return pulumi.get(self, "bgp_peer")


@pulumi.output_type
class GetRemoteNetworkProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peering_type: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: to setup bgp protocol, enable need to set as true.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peering_type: Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peering_type", peering_type)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        to setup bgp protocol, enable need to set as true.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peeringType")
    def peering_type(self) -> _builtins.str:
        """
        Exchange Routes: exchange-v4-over-v4 stands for Exchange IPv4 routes over IPv4 peering. exchange-v4-v6-over-v4 stands for Exchange both IPv4 and IPv6 routes over IPv4 peering. exchange-v4-over-v4-v6-over-v6 stands for Exchange IPv4 routes over IPv4 peer and IPv6 route over IPv6 peer. exchange-v6-over-v6 stands for Exchange IPv6 routes over IPv6 peering. String must be one of these: `"exchange-v4-over-v4"`, `"exchange-v4-v6-over-v4"`, `"exchange-v4-over-v4-v6-over-v6"`, `"exchange-v6-over-v6"`.
        """
        return pulumi.get(self, "peering_type")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetRemoteNetworkProtocolBgpPeerResult(dict):
    def __init__(__self__, *,
                 local_ip_address: _builtins.str,
                 peer_ip_address: _builtins.str,
                 same_as_primary: _builtins.bool,
                 secret: _builtins.str):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.bool same_as_primary: If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        :param _builtins.str secret: The Secret param.
        """
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "same_as_primary", same_as_primary)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> _builtins.bool:
        """
        If true, the secondary BGP peer configuration will be the same as the primary BGP peer. Default: `true`.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetSamlServerProfileListDataResult(dict):
    def __init__(__self__, *,
                 certificate: _builtins.str,
                 entity_id: _builtins.str,
                 id: _builtins.str,
                 max_clock_skew: _builtins.int,
                 slo_bindings: _builtins.str,
                 sso_bindings: _builtins.str,
                 sso_url: _builtins.str,
                 validate_idp_certificate: _builtins.bool,
                 want_auth_requests_signed: _builtins.bool):
        """
        :param _builtins.str certificate: The Certificate param. String length must not exceed 63 characters.
        :param _builtins.str entity_id: The EntityId param. String length must be between 1 and 1024 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.int max_clock_skew: The MaxClockSkew param. Value must be between 1 and 900.
        :param _builtins.str slo_bindings: The SloBindings param. String must be one of these: `"post"`, `"redirect"`.
        :param _builtins.str sso_bindings: The SsoBindings param. String must be one of these: `"post"`, `"redirect"`.
        :param _builtins.str sso_url: The SsoUrl param. String length must be between 1 and 255 characters.
        :param _builtins.bool validate_idp_certificate: The ValidateIdpCertificate param.
        :param _builtins.bool want_auth_requests_signed: The WantAuthRequestsSigned param.
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "entity_id", entity_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "max_clock_skew", max_clock_skew)
        pulumi.set(__self__, "slo_bindings", slo_bindings)
        pulumi.set(__self__, "sso_bindings", sso_bindings)
        pulumi.set(__self__, "sso_url", sso_url)
        pulumi.set(__self__, "validate_idp_certificate", validate_idp_certificate)
        pulumi.set(__self__, "want_auth_requests_signed", want_auth_requests_signed)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> _builtins.str:
        """
        The Certificate param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter(name="entityId")
    def entity_id(self) -> _builtins.str:
        """
        The EntityId param. String length must be between 1 and 1024 characters.
        """
        return pulumi.get(self, "entity_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="maxClockSkew")
    def max_clock_skew(self) -> _builtins.int:
        """
        The MaxClockSkew param. Value must be between 1 and 900.
        """
        return pulumi.get(self, "max_clock_skew")

    @_builtins.property
    @pulumi.getter(name="sloBindings")
    def slo_bindings(self) -> _builtins.str:
        """
        The SloBindings param. String must be one of these: `"post"`, `"redirect"`.
        """
        return pulumi.get(self, "slo_bindings")

    @_builtins.property
    @pulumi.getter(name="ssoBindings")
    def sso_bindings(self) -> _builtins.str:
        """
        The SsoBindings param. String must be one of these: `"post"`, `"redirect"`.
        """
        return pulumi.get(self, "sso_bindings")

    @_builtins.property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> _builtins.str:
        """
        The SsoUrl param. String length must be between 1 and 255 characters.
        """
        return pulumi.get(self, "sso_url")

    @_builtins.property
    @pulumi.getter(name="validateIdpCertificate")
    def validate_idp_certificate(self) -> _builtins.bool:
        """
        The ValidateIdpCertificate param.
        """
        return pulumi.get(self, "validate_idp_certificate")

    @_builtins.property
    @pulumi.getter(name="wantAuthRequestsSigned")
    def want_auth_requests_signed(self) -> _builtins.bool:
        """
        The WantAuthRequestsSigned param.
        """
        return pulumi.get(self, "want_auth_requests_signed")


@pulumi.output_type
class GetScepProfileAlgorithmResult(dict):
    def __init__(__self__, *,
                 rsa: 'outputs.GetScepProfileAlgorithmRsaResult'):
        """
        :param 'GetScepProfileAlgorithmRsaArgs' rsa: The Rsa param.
        """
        pulumi.set(__self__, "rsa", rsa)

    @_builtins.property
    @pulumi.getter
    def rsa(self) -> 'outputs.GetScepProfileAlgorithmRsaResult':
        """
        The Rsa param.
        """
        return pulumi.get(self, "rsa")


@pulumi.output_type
class GetScepProfileAlgorithmRsaResult(dict):
    def __init__(__self__, *,
                 rsa_nbits: _builtins.str):
        """
        :param _builtins.str rsa_nbits: The RsaNbits param.
        """
        pulumi.set(__self__, "rsa_nbits", rsa_nbits)

    @_builtins.property
    @pulumi.getter(name="rsaNbits")
    def rsa_nbits(self) -> _builtins.str:
        """
        The RsaNbits param.
        """
        return pulumi.get(self, "rsa_nbits")


@pulumi.output_type
class GetScepProfileCertificateAttributesResult(dict):
    def __init__(__self__, *,
                 dnsname: _builtins.str,
                 rfc822name: _builtins.str,
                 uniform_resource_identifier: _builtins.str):
        """
        :param _builtins.str dnsname: The Dnsname param.
        :param _builtins.str rfc822name: The Rfc822name param.
        :param _builtins.str uniform_resource_identifier: The UniformResourceIdentifier param.
        """
        pulumi.set(__self__, "dnsname", dnsname)
        pulumi.set(__self__, "rfc822name", rfc822name)
        pulumi.set(__self__, "uniform_resource_identifier", uniform_resource_identifier)

    @_builtins.property
    @pulumi.getter
    def dnsname(self) -> _builtins.str:
        """
        The Dnsname param.
        """
        return pulumi.get(self, "dnsname")

    @_builtins.property
    @pulumi.getter
    def rfc822name(self) -> _builtins.str:
        """
        The Rfc822name param.
        """
        return pulumi.get(self, "rfc822name")

    @_builtins.property
    @pulumi.getter(name="uniformResourceIdentifier")
    def uniform_resource_identifier(self) -> _builtins.str:
        """
        The UniformResourceIdentifier param.
        """
        return pulumi.get(self, "uniform_resource_identifier")


@pulumi.output_type
class GetScepProfileListDataResult(dict):
    def __init__(__self__, *,
                 algorithm: 'outputs.GetScepProfileListDataAlgorithmResult',
                 ca_identity_name: _builtins.str,
                 certificate_attributes: 'outputs.GetScepProfileListDataCertificateAttributesResult',
                 digest: _builtins.str,
                 fingerprint: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 scep_ca_cert: _builtins.str,
                 scep_challenge: 'outputs.GetScepProfileListDataScepChallengeResult',
                 scep_client_cert: _builtins.str,
                 scep_url: _builtins.str,
                 subject: _builtins.str,
                 use_as_digital_signature: _builtins.bool,
                 use_for_key_encipherment: _builtins.bool):
        """
        :param 'GetScepProfileListDataAlgorithmArgs' algorithm: The Algorithm param.
        :param _builtins.str ca_identity_name: The CaIdentityName param.
        :param 'GetScepProfileListDataCertificateAttributesArgs' certificate_attributes: The CertificateAttributes param.
        :param _builtins.str digest: The Digest param.
        :param _builtins.str fingerprint: The Fingerprint param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param _builtins.str scep_ca_cert: The ScepCaCert param.
        :param 'GetScepProfileListDataScepChallengeArgs' scep_challenge: The ScepChallenge param.
        :param _builtins.str scep_client_cert: The ScepClientCert param.
        :param _builtins.str scep_url: The ScepUrl param.
        :param _builtins.str subject: The Subject param.
        :param _builtins.bool use_as_digital_signature: The UseAsDigitalSignature param.
        :param _builtins.bool use_for_key_encipherment: The UseForKeyEncipherment param.
        """
        pulumi.set(__self__, "algorithm", algorithm)
        pulumi.set(__self__, "ca_identity_name", ca_identity_name)
        pulumi.set(__self__, "certificate_attributes", certificate_attributes)
        pulumi.set(__self__, "digest", digest)
        pulumi.set(__self__, "fingerprint", fingerprint)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "scep_ca_cert", scep_ca_cert)
        pulumi.set(__self__, "scep_challenge", scep_challenge)
        pulumi.set(__self__, "scep_client_cert", scep_client_cert)
        pulumi.set(__self__, "scep_url", scep_url)
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "use_as_digital_signature", use_as_digital_signature)
        pulumi.set(__self__, "use_for_key_encipherment", use_for_key_encipherment)

    @_builtins.property
    @pulumi.getter
    def algorithm(self) -> 'outputs.GetScepProfileListDataAlgorithmResult':
        """
        The Algorithm param.
        """
        return pulumi.get(self, "algorithm")

    @_builtins.property
    @pulumi.getter(name="caIdentityName")
    def ca_identity_name(self) -> _builtins.str:
        """
        The CaIdentityName param.
        """
        return pulumi.get(self, "ca_identity_name")

    @_builtins.property
    @pulumi.getter(name="certificateAttributes")
    def certificate_attributes(self) -> 'outputs.GetScepProfileListDataCertificateAttributesResult':
        """
        The CertificateAttributes param.
        """
        return pulumi.get(self, "certificate_attributes")

    @_builtins.property
    @pulumi.getter
    def digest(self) -> _builtins.str:
        """
        The Digest param.
        """
        return pulumi.get(self, "digest")

    @_builtins.property
    @pulumi.getter
    def fingerprint(self) -> _builtins.str:
        """
        The Fingerprint param.
        """
        return pulumi.get(self, "fingerprint")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="scepCaCert")
    def scep_ca_cert(self) -> _builtins.str:
        """
        The ScepCaCert param.
        """
        return pulumi.get(self, "scep_ca_cert")

    @_builtins.property
    @pulumi.getter(name="scepChallenge")
    def scep_challenge(self) -> 'outputs.GetScepProfileListDataScepChallengeResult':
        """
        The ScepChallenge param.
        """
        return pulumi.get(self, "scep_challenge")

    @_builtins.property
    @pulumi.getter(name="scepClientCert")
    def scep_client_cert(self) -> _builtins.str:
        """
        The ScepClientCert param.
        """
        return pulumi.get(self, "scep_client_cert")

    @_builtins.property
    @pulumi.getter(name="scepUrl")
    def scep_url(self) -> _builtins.str:
        """
        The ScepUrl param.
        """
        return pulumi.get(self, "scep_url")

    @_builtins.property
    @pulumi.getter
    def subject(self) -> _builtins.str:
        """
        The Subject param.
        """
        return pulumi.get(self, "subject")

    @_builtins.property
    @pulumi.getter(name="useAsDigitalSignature")
    def use_as_digital_signature(self) -> _builtins.bool:
        """
        The UseAsDigitalSignature param.
        """
        return pulumi.get(self, "use_as_digital_signature")

    @_builtins.property
    @pulumi.getter(name="useForKeyEncipherment")
    def use_for_key_encipherment(self) -> _builtins.bool:
        """
        The UseForKeyEncipherment param.
        """
        return pulumi.get(self, "use_for_key_encipherment")


@pulumi.output_type
class GetScepProfileListDataAlgorithmResult(dict):
    def __init__(__self__, *,
                 rsa: 'outputs.GetScepProfileListDataAlgorithmRsaResult'):
        """
        :param 'GetScepProfileListDataAlgorithmRsaArgs' rsa: The Rsa param.
        """
        pulumi.set(__self__, "rsa", rsa)

    @_builtins.property
    @pulumi.getter
    def rsa(self) -> 'outputs.GetScepProfileListDataAlgorithmRsaResult':
        """
        The Rsa param.
        """
        return pulumi.get(self, "rsa")


@pulumi.output_type
class GetScepProfileListDataAlgorithmRsaResult(dict):
    def __init__(__self__, *,
                 rsa_nbits: _builtins.str):
        """
        :param _builtins.str rsa_nbits: The RsaNbits param.
        """
        pulumi.set(__self__, "rsa_nbits", rsa_nbits)

    @_builtins.property
    @pulumi.getter(name="rsaNbits")
    def rsa_nbits(self) -> _builtins.str:
        """
        The RsaNbits param.
        """
        return pulumi.get(self, "rsa_nbits")


@pulumi.output_type
class GetScepProfileListDataCertificateAttributesResult(dict):
    def __init__(__self__, *,
                 dnsname: _builtins.str,
                 rfc822name: _builtins.str,
                 uniform_resource_identifier: _builtins.str):
        """
        :param _builtins.str dnsname: The Dnsname param.
        :param _builtins.str rfc822name: The Rfc822name param.
        :param _builtins.str uniform_resource_identifier: The UniformResourceIdentifier param.
        """
        pulumi.set(__self__, "dnsname", dnsname)
        pulumi.set(__self__, "rfc822name", rfc822name)
        pulumi.set(__self__, "uniform_resource_identifier", uniform_resource_identifier)

    @_builtins.property
    @pulumi.getter
    def dnsname(self) -> _builtins.str:
        """
        The Dnsname param.
        """
        return pulumi.get(self, "dnsname")

    @_builtins.property
    @pulumi.getter
    def rfc822name(self) -> _builtins.str:
        """
        The Rfc822name param.
        """
        return pulumi.get(self, "rfc822name")

    @_builtins.property
    @pulumi.getter(name="uniformResourceIdentifier")
    def uniform_resource_identifier(self) -> _builtins.str:
        """
        The UniformResourceIdentifier param.
        """
        return pulumi.get(self, "uniform_resource_identifier")


@pulumi.output_type
class GetScepProfileListDataScepChallengeResult(dict):
    def __init__(__self__, *,
                 dynamic_challenge: 'outputs.GetScepProfileListDataScepChallengeDynamicChallengeResult',
                 fixed: _builtins.str,
                 none: _builtins.str):
        """
        :param 'GetScepProfileListDataScepChallengeDynamicChallengeArgs' dynamic_challenge: The DynamicChallenge param.
        :param _builtins.str fixed: Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
        :param _builtins.str none: The None param. String must be one of these: `""`.
        """
        pulumi.set(__self__, "dynamic_challenge", dynamic_challenge)
        pulumi.set(__self__, "fixed", fixed)
        pulumi.set(__self__, "none", none)

    @_builtins.property
    @pulumi.getter(name="dynamicChallenge")
    def dynamic_challenge(self) -> 'outputs.GetScepProfileListDataScepChallengeDynamicChallengeResult':
        """
        The DynamicChallenge param.
        """
        return pulumi.get(self, "dynamic_challenge")

    @_builtins.property
    @pulumi.getter
    def fixed(self) -> _builtins.str:
        """
        Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
        """
        return pulumi.get(self, "fixed")

    @_builtins.property
    @pulumi.getter
    def none(self) -> _builtins.str:
        """
        The None param. String must be one of these: `""`.
        """
        return pulumi.get(self, "none")


@pulumi.output_type
class GetScepProfileListDataScepChallengeDynamicChallengeResult(dict):
    def __init__(__self__, *,
                 otp_server_url: _builtins.str,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str otp_server_url: The OtpServerUrl param. String length must not exceed 255 characters.
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "otp_server_url", otp_server_url)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter(name="otpServerUrl")
    def otp_server_url(self) -> _builtins.str:
        """
        The OtpServerUrl param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "otp_server_url")

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetScepProfileScepChallengeResult(dict):
    def __init__(__self__, *,
                 dynamic_challenge: 'outputs.GetScepProfileScepChallengeDynamicChallengeResult',
                 fixed: _builtins.str,
                 none: _builtins.str):
        """
        :param 'GetScepProfileScepChallengeDynamicChallengeArgs' dynamic_challenge: The DynamicChallenge param.
        :param _builtins.str fixed: Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
        :param _builtins.str none: The None param. String must be one of these: `""`.
        """
        pulumi.set(__self__, "dynamic_challenge", dynamic_challenge)
        pulumi.set(__self__, "fixed", fixed)
        pulumi.set(__self__, "none", none)

    @_builtins.property
    @pulumi.getter(name="dynamicChallenge")
    def dynamic_challenge(self) -> 'outputs.GetScepProfileScepChallengeDynamicChallengeResult':
        """
        The DynamicChallenge param.
        """
        return pulumi.get(self, "dynamic_challenge")

    @_builtins.property
    @pulumi.getter
    def fixed(self) -> _builtins.str:
        """
        Challenge to use for SCEP server on mobile clients. String length must not exceed 1024 characters.
        """
        return pulumi.get(self, "fixed")

    @_builtins.property
    @pulumi.getter
    def none(self) -> _builtins.str:
        """
        The None param. String must be one of these: `""`.
        """
        return pulumi.get(self, "none")


@pulumi.output_type
class GetScepProfileScepChallengeDynamicChallengeResult(dict):
    def __init__(__self__, *,
                 otp_server_url: _builtins.str,
                 password: _builtins.str,
                 username: _builtins.str):
        """
        :param _builtins.str otp_server_url: The OtpServerUrl param. String length must not exceed 255 characters.
        :param _builtins.str password: The Password param. String length must not exceed 255 characters.
        :param _builtins.str username: The Username param. String length must not exceed 255 characters.
        """
        pulumi.set(__self__, "otp_server_url", otp_server_url)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "username", username)

    @_builtins.property
    @pulumi.getter(name="otpServerUrl")
    def otp_server_url(self) -> _builtins.str:
        """
        The OtpServerUrl param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "otp_server_url")

    @_builtins.property
    @pulumi.getter
    def password(self) -> _builtins.str:
        """
        The Password param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "password")

    @_builtins.property
    @pulumi.getter
    def username(self) -> _builtins.str:
        """
        The Username param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "username")


@pulumi.output_type
class GetScheduleListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 name: _builtins.str,
                 schedule_type: 'outputs.GetScheduleListDataScheduleTypeResult'):
        """
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        :param 'GetScheduleListDataScheduleTypeArgs' schedule_type: The ScheduleType param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "schedule_type", schedule_type)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 31 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="scheduleType")
    def schedule_type(self) -> 'outputs.GetScheduleListDataScheduleTypeResult':
        """
        The ScheduleType param.
        """
        return pulumi.get(self, "schedule_type")


@pulumi.output_type
class GetScheduleListDataScheduleTypeResult(dict):
    def __init__(__self__, *,
                 non_recurring_lists: Sequence[_builtins.str],
                 recurring: 'outputs.GetScheduleListDataScheduleTypeRecurringResult'):
        """
        :param Sequence[_builtins.str] non_recurring_lists: The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param 'GetScheduleListDataScheduleTypeRecurringArgs' recurring: The Recurring param.
        """
        pulumi.set(__self__, "non_recurring_lists", non_recurring_lists)
        pulumi.set(__self__, "recurring", recurring)

    @_builtins.property
    @pulumi.getter(name="nonRecurringLists")
    def non_recurring_lists(self) -> Sequence[_builtins.str]:
        """
        The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "non_recurring_lists")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetScheduleListDataScheduleTypeRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")


@pulumi.output_type
class GetScheduleListDataScheduleTypeRecurringResult(dict):
    def __init__(__self__, *,
                 daily_lists: Sequence[_builtins.str],
                 weekly: 'outputs.GetScheduleListDataScheduleTypeRecurringWeeklyResult'):
        """
        :param Sequence[_builtins.str] daily_lists: The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param 'GetScheduleListDataScheduleTypeRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily_lists", daily_lists)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter(name="dailyLists")
    def daily_lists(self) -> Sequence[_builtins.str]:
        """
        The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "daily_lists")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetScheduleListDataScheduleTypeRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetScheduleListDataScheduleTypeRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 friday_lists: Sequence[_builtins.str],
                 monday_lists: Sequence[_builtins.str],
                 saturday_lists: Sequence[_builtins.str],
                 sunday_lists: Sequence[_builtins.str],
                 thursday_lists: Sequence[_builtins.str],
                 tuesday_lists: Sequence[_builtins.str],
                 wednesday_lists: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] friday_lists: The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] monday_lists: The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] saturday_lists: The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] sunday_lists: The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] thursday_lists: The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] tuesday_lists: The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] wednesday_lists: The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        pulumi.set(__self__, "friday_lists", friday_lists)
        pulumi.set(__self__, "monday_lists", monday_lists)
        pulumi.set(__self__, "saturday_lists", saturday_lists)
        pulumi.set(__self__, "sunday_lists", sunday_lists)
        pulumi.set(__self__, "thursday_lists", thursday_lists)
        pulumi.set(__self__, "tuesday_lists", tuesday_lists)
        pulumi.set(__self__, "wednesday_lists", wednesday_lists)

    @_builtins.property
    @pulumi.getter(name="fridayLists")
    def friday_lists(self) -> Sequence[_builtins.str]:
        """
        The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "friday_lists")

    @_builtins.property
    @pulumi.getter(name="mondayLists")
    def monday_lists(self) -> Sequence[_builtins.str]:
        """
        The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "monday_lists")

    @_builtins.property
    @pulumi.getter(name="saturdayLists")
    def saturday_lists(self) -> Sequence[_builtins.str]:
        """
        The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "saturday_lists")

    @_builtins.property
    @pulumi.getter(name="sundayLists")
    def sunday_lists(self) -> Sequence[_builtins.str]:
        """
        The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "sunday_lists")

    @_builtins.property
    @pulumi.getter(name="thursdayLists")
    def thursday_lists(self) -> Sequence[_builtins.str]:
        """
        The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "thursday_lists")

    @_builtins.property
    @pulumi.getter(name="tuesdayLists")
    def tuesday_lists(self) -> Sequence[_builtins.str]:
        """
        The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "tuesday_lists")

    @_builtins.property
    @pulumi.getter(name="wednesdayLists")
    def wednesday_lists(self) -> Sequence[_builtins.str]:
        """
        The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "wednesday_lists")


@pulumi.output_type
class GetScheduleScheduleTypeResult(dict):
    def __init__(__self__, *,
                 non_recurring_lists: Sequence[_builtins.str],
                 recurring: 'outputs.GetScheduleScheduleTypeRecurringResult'):
        """
        :param Sequence[_builtins.str] non_recurring_lists: The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param 'GetScheduleScheduleTypeRecurringArgs' recurring: The Recurring param.
        """
        pulumi.set(__self__, "non_recurring_lists", non_recurring_lists)
        pulumi.set(__self__, "recurring", recurring)

    @_builtins.property
    @pulumi.getter(name="nonRecurringLists")
    def non_recurring_lists(self) -> Sequence[_builtins.str]:
        """
        The NonRecurringList param. Individual elements in this list are subject to additional validation. String length must be between 33 and 33 characters. String validation regex: `[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])-[0-9][0-9][0-9][0-9]\\/([0][1-9]|[1][0-2])\\/([0-2][0-9]|[3][0-1])@([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "non_recurring_lists")

    @_builtins.property
    @pulumi.getter
    def recurring(self) -> 'outputs.GetScheduleScheduleTypeRecurringResult':
        """
        The Recurring param.
        """
        return pulumi.get(self, "recurring")


@pulumi.output_type
class GetScheduleScheduleTypeRecurringResult(dict):
    def __init__(__self__, *,
                 daily_lists: Sequence[_builtins.str],
                 weekly: 'outputs.GetScheduleScheduleTypeRecurringWeeklyResult'):
        """
        :param Sequence[_builtins.str] daily_lists: The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param 'GetScheduleScheduleTypeRecurringWeeklyArgs' weekly: The Weekly param.
        """
        pulumi.set(__self__, "daily_lists", daily_lists)
        pulumi.set(__self__, "weekly", weekly)

    @_builtins.property
    @pulumi.getter(name="dailyLists")
    def daily_lists(self) -> Sequence[_builtins.str]:
        """
        The DailyList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "daily_lists")

    @_builtins.property
    @pulumi.getter
    def weekly(self) -> 'outputs.GetScheduleScheduleTypeRecurringWeeklyResult':
        """
        The Weekly param.
        """
        return pulumi.get(self, "weekly")


@pulumi.output_type
class GetScheduleScheduleTypeRecurringWeeklyResult(dict):
    def __init__(__self__, *,
                 friday_lists: Sequence[_builtins.str],
                 monday_lists: Sequence[_builtins.str],
                 saturday_lists: Sequence[_builtins.str],
                 sunday_lists: Sequence[_builtins.str],
                 thursday_lists: Sequence[_builtins.str],
                 tuesday_lists: Sequence[_builtins.str],
                 wednesday_lists: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] friday_lists: The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] monday_lists: The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] saturday_lists: The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] sunday_lists: The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] thursday_lists: The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] tuesday_lists: The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        :param Sequence[_builtins.str] wednesday_lists: The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        pulumi.set(__self__, "friday_lists", friday_lists)
        pulumi.set(__self__, "monday_lists", monday_lists)
        pulumi.set(__self__, "saturday_lists", saturday_lists)
        pulumi.set(__self__, "sunday_lists", sunday_lists)
        pulumi.set(__self__, "thursday_lists", thursday_lists)
        pulumi.set(__self__, "tuesday_lists", tuesday_lists)
        pulumi.set(__self__, "wednesday_lists", wednesday_lists)

    @_builtins.property
    @pulumi.getter(name="fridayLists")
    def friday_lists(self) -> Sequence[_builtins.str]:
        """
        The FridayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "friday_lists")

    @_builtins.property
    @pulumi.getter(name="mondayLists")
    def monday_lists(self) -> Sequence[_builtins.str]:
        """
        The MondayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "monday_lists")

    @_builtins.property
    @pulumi.getter(name="saturdayLists")
    def saturday_lists(self) -> Sequence[_builtins.str]:
        """
        The SaturdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "saturday_lists")

    @_builtins.property
    @pulumi.getter(name="sundayLists")
    def sunday_lists(self) -> Sequence[_builtins.str]:
        """
        The SundayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "sunday_lists")

    @_builtins.property
    @pulumi.getter(name="thursdayLists")
    def thursday_lists(self) -> Sequence[_builtins.str]:
        """
        The ThursdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "thursday_lists")

    @_builtins.property
    @pulumi.getter(name="tuesdayLists")
    def tuesday_lists(self) -> Sequence[_builtins.str]:
        """
        The TuesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "tuesday_lists")

    @_builtins.property
    @pulumi.getter(name="wednesdayLists")
    def wednesday_lists(self) -> Sequence[_builtins.str]:
        """
        The WednesdayList param. Individual elements in this list are subject to additional validation. String length must be between 11 and 11 characters. String validation regex: `([01][0-9]|[2][0-3]):([0-5][0-9])-([01][0-9]|[2][0-3]):([0-5][0-9])`.
        """
        return pulumi.get(self, "wednesday_lists")


@pulumi.output_type
class GetSecurityRuleListDataResult(dict):
    def __init__(__self__, *,
                 action: _builtins.str,
                 applications: Sequence[_builtins.str],
                 categories: Sequence[_builtins.str],
                 description: _builtins.str,
                 destination_hips: Sequence[_builtins.str],
                 destinations: Sequence[_builtins.str],
                 disabled: _builtins.bool,
                 froms: Sequence[_builtins.str],
                 id: _builtins.str,
                 log_setting: _builtins.str,
                 name: _builtins.str,
                 negate_destination: _builtins.bool,
                 negate_source: _builtins.bool,
                 profile_setting: 'outputs.GetSecurityRuleListDataProfileSettingResult',
                 services: Sequence[_builtins.str],
                 source_hips: Sequence[_builtins.str],
                 source_users: Sequence[_builtins.str],
                 sources: Sequence[_builtins.str],
                 tags: Sequence[_builtins.str],
                 tos: Sequence[_builtins.str]):
        """
        :param _builtins.str action: The action to be taken when the rule is matched. String must be one of these: `"allow"`, `"deny"`, `"drop"`, `"reset-client"`, `"reset-server"`, `"reset-both"`.
        :param Sequence[_builtins.str] applications: The application(s) being accessed.
        :param Sequence[_builtins.str] categories: The URL categories being accessed.
        :param _builtins.str description: The description of the security rule.
        :param Sequence[_builtins.str] destination_hips: The destination Host Integrity Profile(s).
        :param Sequence[_builtins.str] destinations: The destination address(es).
        :param _builtins.bool disabled: The state of the security rule. Default: `false`.
        :param Sequence[_builtins.str] froms: The source security zone(s).
        :param _builtins.str id: The UUID of the security rule.
        :param _builtins.str log_setting: The external log forwarding profile.
        :param _builtins.str name: The name of the security rule.
        :param _builtins.bool negate_destination: Negate the destination addresses(es). Default: `false`.
        :param _builtins.bool negate_source: Negate the source address(es). Default: `false`.
        :param 'GetSecurityRuleListDataProfileSettingArgs' profile_setting: The security profile object.
        :param Sequence[_builtins.str] services: The service(s) being accessed.
        :param Sequence[_builtins.str] source_hips: The source Host Integrity Profile(s).
        :param Sequence[_builtins.str] source_users: The source user(s) or group(s).
        :param Sequence[_builtins.str] sources: The source address(es).
        :param Sequence[_builtins.str] tags: The tags associated with the security rule.
        :param Sequence[_builtins.str] tos: The destination security zone(s).
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "categories", categories)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "destination_hips", destination_hips)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "froms", froms)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "log_setting", log_setting)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "negate_destination", negate_destination)
        pulumi.set(__self__, "negate_source", negate_source)
        pulumi.set(__self__, "profile_setting", profile_setting)
        pulumi.set(__self__, "services", services)
        pulumi.set(__self__, "source_hips", source_hips)
        pulumi.set(__self__, "source_users", source_users)
        pulumi.set(__self__, "sources", sources)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "tos", tos)

    @_builtins.property
    @pulumi.getter
    def action(self) -> _builtins.str:
        """
        The action to be taken when the rule is matched. String must be one of these: `"allow"`, `"deny"`, `"drop"`, `"reset-client"`, `"reset-server"`, `"reset-both"`.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The application(s) being accessed.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def categories(self) -> Sequence[_builtins.str]:
        """
        The URL categories being accessed.
        """
        return pulumi.get(self, "categories")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The description of the security rule.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="destinationHips")
    def destination_hips(self) -> Sequence[_builtins.str]:
        """
        The destination Host Integrity Profile(s).
        """
        return pulumi.get(self, "destination_hips")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The destination address(es).
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The state of the security rule. Default: `false`.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter
    def froms(self) -> Sequence[_builtins.str]:
        """
        The source security zone(s).
        """
        return pulumi.get(self, "froms")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The UUID of the security rule.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="logSetting")
    def log_setting(self) -> _builtins.str:
        """
        The external log forwarding profile.
        """
        return pulumi.get(self, "log_setting")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The name of the security rule.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="negateDestination")
    def negate_destination(self) -> _builtins.bool:
        """
        Negate the destination addresses(es). Default: `false`.
        """
        return pulumi.get(self, "negate_destination")

    @_builtins.property
    @pulumi.getter(name="negateSource")
    def negate_source(self) -> _builtins.bool:
        """
        Negate the source address(es). Default: `false`.
        """
        return pulumi.get(self, "negate_source")

    @_builtins.property
    @pulumi.getter(name="profileSetting")
    def profile_setting(self) -> 'outputs.GetSecurityRuleListDataProfileSettingResult':
        """
        The security profile object.
        """
        return pulumi.get(self, "profile_setting")

    @_builtins.property
    @pulumi.getter
    def services(self) -> Sequence[_builtins.str]:
        """
        The service(s) being accessed.
        """
        return pulumi.get(self, "services")

    @_builtins.property
    @pulumi.getter(name="sourceHips")
    def source_hips(self) -> Sequence[_builtins.str]:
        """
        The source Host Integrity Profile(s).
        """
        return pulumi.get(self, "source_hips")

    @_builtins.property
    @pulumi.getter(name="sourceUsers")
    def source_users(self) -> Sequence[_builtins.str]:
        """
        The source user(s) or group(s).
        """
        return pulumi.get(self, "source_users")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The source address(es).
        """
        return pulumi.get(self, "sources")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        The tags associated with the security rule.
        """
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def tos(self) -> Sequence[_builtins.str]:
        """
        The destination security zone(s).
        """
        return pulumi.get(self, "tos")


@pulumi.output_type
class GetSecurityRuleListDataProfileSettingResult(dict):
    def __init__(__self__, *,
                 groups: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] groups: The security profile group.
        """
        pulumi.set(__self__, "groups", groups)

    @_builtins.property
    @pulumi.getter
    def groups(self) -> Sequence[_builtins.str]:
        """
        The security profile group.
        """
        return pulumi.get(self, "groups")


@pulumi.output_type
class GetSecurityRuleProfileSettingResult(dict):
    def __init__(__self__, *,
                 groups: Sequence[_builtins.str]):
        """
        :param Sequence[_builtins.str] groups: The security profile group.
        """
        pulumi.set(__self__, "groups", groups)

    @_builtins.property
    @pulumi.getter
    def groups(self) -> Sequence[_builtins.str]:
        """
        The security profile group.
        """
        return pulumi.get(self, "groups")


@pulumi.output_type
class GetServiceConnectionBgpPeerResult(dict):
    def __init__(__self__, *,
                 local_ip_address: _builtins.str,
                 local_ipv6_address: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peer_ipv6_address: _builtins.str,
                 same_as_primary: _builtins.bool,
                 secret: _builtins.str):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str local_ipv6_address: The LocalIpv6Address param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peer_ipv6_address: The PeerIpv6Address param.
        :param _builtins.bool same_as_primary: The SameAsPrimary param.
        :param _builtins.str secret: The Secret param.
        """
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "local_ipv6_address", local_ipv6_address)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peer_ipv6_address", peer_ipv6_address)
        pulumi.set(__self__, "same_as_primary", same_as_primary)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="localIpv6Address")
    def local_ipv6_address(self) -> _builtins.str:
        """
        The LocalIpv6Address param.
        """
        return pulumi.get(self, "local_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpv6Address")
    def peer_ipv6_address(self) -> _builtins.str:
        """
        The PeerIpv6Address param.
        """
        return pulumi.get(self, "peer_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> _builtins.bool:
        """
        The SameAsPrimary param.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetServiceConnectionGroupListDataResult(dict):
    def __init__(__self__, *,
                 disable_snat: _builtins.bool,
                 id: _builtins.str,
                 name: _builtins.str,
                 pbf_only: _builtins.bool,
                 targets: Sequence[_builtins.str]):
        """
        :param _builtins.bool disable_snat: The DisableSnat param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        :param _builtins.bool pbf_only: The PbfOnly param.
        :param Sequence[_builtins.str] targets: The Targets param.
        """
        pulumi.set(__self__, "disable_snat", disable_snat)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "pbf_only", pbf_only)
        pulumi.set(__self__, "targets", targets)

    @_builtins.property
    @pulumi.getter(name="disableSnat")
    def disable_snat(self) -> _builtins.bool:
        """
        The DisableSnat param.
        """
        return pulumi.get(self, "disable_snat")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="pbfOnly")
    def pbf_only(self) -> _builtins.bool:
        """
        The PbfOnly param.
        """
        return pulumi.get(self, "pbf_only")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence[_builtins.str]:
        """
        The Targets param.
        """
        return pulumi.get(self, "targets")


@pulumi.output_type
class GetServiceConnectionListDataResult(dict):
    def __init__(__self__, *,
                 backup_sc: _builtins.str,
                 bgp_peer: 'outputs.GetServiceConnectionListDataBgpPeerResult',
                 id: _builtins.str,
                 ipsec_tunnel: _builtins.str,
                 name: _builtins.str,
                 nat_pool: _builtins.str,
                 no_export_community: _builtins.str,
                 onboarding_type: _builtins.str,
                 protocol: 'outputs.GetServiceConnectionListDataProtocolResult',
                 qos: 'outputs.GetServiceConnectionListDataQosResult',
                 region: _builtins.str,
                 secondary_ipsec_tunnel: _builtins.str,
                 source_nat: _builtins.bool,
                 subnets: Sequence[_builtins.str]):
        """
        :param _builtins.str backup_sc: The BackupSC param.
        :param 'GetServiceConnectionListDataBgpPeerArgs' bgp_peer: The BgpPeer param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str ipsec_tunnel: The IpsecTunnel param.
        :param _builtins.str name: The Name param.
        :param _builtins.str nat_pool: The NatPool param.
        :param _builtins.str no_export_community: The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        :param _builtins.str onboarding_type: The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        :param 'GetServiceConnectionListDataProtocolArgs' protocol: The Protocol param.
        :param 'GetServiceConnectionListDataQosArgs' qos: The Qos param.
        :param _builtins.str region: The Region param.
        :param _builtins.str secondary_ipsec_tunnel: The SecondaryIpsecTunnel param.
        :param _builtins.bool source_nat: The SourceNat param.
        :param Sequence[_builtins.str] subnets: The Subnets param.
        """
        pulumi.set(__self__, "backup_sc", backup_sc)
        pulumi.set(__self__, "bgp_peer", bgp_peer)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ipsec_tunnel", ipsec_tunnel)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "nat_pool", nat_pool)
        pulumi.set(__self__, "no_export_community", no_export_community)
        pulumi.set(__self__, "onboarding_type", onboarding_type)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "qos", qos)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "secondary_ipsec_tunnel", secondary_ipsec_tunnel)
        pulumi.set(__self__, "source_nat", source_nat)
        pulumi.set(__self__, "subnets", subnets)

    @_builtins.property
    @pulumi.getter(name="backupSC")
    def backup_sc(self) -> _builtins.str:
        """
        The BackupSC param.
        """
        return pulumi.get(self, "backup_sc")

    @_builtins.property
    @pulumi.getter(name="bgpPeer")
    def bgp_peer(self) -> 'outputs.GetServiceConnectionListDataBgpPeerResult':
        """
        The BgpPeer param.
        """
        return pulumi.get(self, "bgp_peer")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipsecTunnel")
    def ipsec_tunnel(self) -> _builtins.str:
        """
        The IpsecTunnel param.
        """
        return pulumi.get(self, "ipsec_tunnel")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="natPool")
    def nat_pool(self) -> _builtins.str:
        """
        The NatPool param.
        """
        return pulumi.get(self, "nat_pool")

    @_builtins.property
    @pulumi.getter(name="noExportCommunity")
    def no_export_community(self) -> _builtins.str:
        """
        The NoExportCommunity param. String must be one of these: `"Disabled"`, `"Enabled-In"`, `"Enabled-Out"`, `"Enabled-Both"`.
        """
        return pulumi.get(self, "no_export_community")

    @_builtins.property
    @pulumi.getter(name="onboardingType")
    def onboarding_type(self) -> _builtins.str:
        """
        The OnboardingType param. String must be one of these: `"classic"`. Default: `"classic"`.
        """
        return pulumi.get(self, "onboarding_type")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetServiceConnectionListDataProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def qos(self) -> 'outputs.GetServiceConnectionListDataQosResult':
        """
        The Qos param.
        """
        return pulumi.get(self, "qos")

    @_builtins.property
    @pulumi.getter
    def region(self) -> _builtins.str:
        """
        The Region param.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="secondaryIpsecTunnel")
    def secondary_ipsec_tunnel(self) -> _builtins.str:
        """
        The SecondaryIpsecTunnel param.
        """
        return pulumi.get(self, "secondary_ipsec_tunnel")

    @_builtins.property
    @pulumi.getter(name="sourceNat")
    def source_nat(self) -> _builtins.bool:
        """
        The SourceNat param.
        """
        return pulumi.get(self, "source_nat")

    @_builtins.property
    @pulumi.getter
    def subnets(self) -> Sequence[_builtins.str]:
        """
        The Subnets param.
        """
        return pulumi.get(self, "subnets")


@pulumi.output_type
class GetServiceConnectionListDataBgpPeerResult(dict):
    def __init__(__self__, *,
                 local_ip_address: _builtins.str,
                 local_ipv6_address: _builtins.str,
                 peer_ip_address: _builtins.str,
                 peer_ipv6_address: _builtins.str,
                 same_as_primary: _builtins.bool,
                 secret: _builtins.str):
        """
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.str local_ipv6_address: The LocalIpv6Address param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str peer_ipv6_address: The PeerIpv6Address param.
        :param _builtins.bool same_as_primary: The SameAsPrimary param.
        :param _builtins.str secret: The Secret param.
        """
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "local_ipv6_address", local_ipv6_address)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "peer_ipv6_address", peer_ipv6_address)
        pulumi.set(__self__, "same_as_primary", same_as_primary)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="localIpv6Address")
    def local_ipv6_address(self) -> _builtins.str:
        """
        The LocalIpv6Address param.
        """
        return pulumi.get(self, "local_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter(name="peerIpv6Address")
    def peer_ipv6_address(self) -> _builtins.str:
        """
        The PeerIpv6Address param.
        """
        return pulumi.get(self, "peer_ipv6_address")

    @_builtins.property
    @pulumi.getter(name="sameAsPrimary")
    def same_as_primary(self) -> _builtins.bool:
        """
        The SameAsPrimary param.
        """
        return pulumi.get(self, "same_as_primary")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetServiceConnectionListDataProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetServiceConnectionListDataProtocolBgpResult'):
        """
        :param 'GetServiceConnectionListDataProtocolBgpArgs' bgp: The Bgp param.
        """
        pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetServiceConnectionListDataProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class GetServiceConnectionListDataProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 fast_failover: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: The Enable param.
        :param _builtins.bool fast_failover: The FastFailover param.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "fast_failover", fast_failover)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="fastFailover")
    def fast_failover(self) -> _builtins.bool:
        """
        The FastFailover param.
        """
        return pulumi.get(self, "fast_failover")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetServiceConnectionListDataQosResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool,
                 qos_profile: _builtins.str):
        """
        :param _builtins.bool enable: The Enable param.
        :param _builtins.str qos_profile: The QosProfile param.
        """
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "qos_profile", qos_profile)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="qosProfile")
    def qos_profile(self) -> _builtins.str:
        """
        The QosProfile param.
        """
        return pulumi.get(self, "qos_profile")


@pulumi.output_type
class GetServiceConnectionProtocolResult(dict):
    def __init__(__self__, *,
                 bgp: 'outputs.GetServiceConnectionProtocolBgpResult'):
        """
        :param 'GetServiceConnectionProtocolBgpArgs' bgp: The Bgp param.
        """
        pulumi.set(__self__, "bgp", bgp)

    @_builtins.property
    @pulumi.getter
    def bgp(self) -> 'outputs.GetServiceConnectionProtocolBgpResult':
        """
        The Bgp param.
        """
        return pulumi.get(self, "bgp")


@pulumi.output_type
class GetServiceConnectionProtocolBgpResult(dict):
    def __init__(__self__, *,
                 do_not_export_routes: _builtins.bool,
                 enable: _builtins.bool,
                 fast_failover: _builtins.bool,
                 local_ip_address: _builtins.str,
                 originate_default_route: _builtins.bool,
                 peer_as: _builtins.str,
                 peer_ip_address: _builtins.str,
                 secret: _builtins.str,
                 summarize_mobile_user_routes: _builtins.bool):
        """
        :param _builtins.bool do_not_export_routes: The DoNotExportRoutes param.
        :param _builtins.bool enable: The Enable param.
        :param _builtins.bool fast_failover: The FastFailover param.
        :param _builtins.str local_ip_address: The LocalIpAddress param.
        :param _builtins.bool originate_default_route: The OriginateDefaultRoute param.
        :param _builtins.str peer_as: The PeerAs param.
        :param _builtins.str peer_ip_address: The PeerIpAddress param.
        :param _builtins.str secret: The Secret param.
        :param _builtins.bool summarize_mobile_user_routes: The SummarizeMobileUserRoutes param.
        """
        pulumi.set(__self__, "do_not_export_routes", do_not_export_routes)
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "fast_failover", fast_failover)
        pulumi.set(__self__, "local_ip_address", local_ip_address)
        pulumi.set(__self__, "originate_default_route", originate_default_route)
        pulumi.set(__self__, "peer_as", peer_as)
        pulumi.set(__self__, "peer_ip_address", peer_ip_address)
        pulumi.set(__self__, "secret", secret)
        pulumi.set(__self__, "summarize_mobile_user_routes", summarize_mobile_user_routes)

    @_builtins.property
    @pulumi.getter(name="doNotExportRoutes")
    def do_not_export_routes(self) -> _builtins.bool:
        """
        The DoNotExportRoutes param.
        """
        return pulumi.get(self, "do_not_export_routes")

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="fastFailover")
    def fast_failover(self) -> _builtins.bool:
        """
        The FastFailover param.
        """
        return pulumi.get(self, "fast_failover")

    @_builtins.property
    @pulumi.getter(name="localIpAddress")
    def local_ip_address(self) -> _builtins.str:
        """
        The LocalIpAddress param.
        """
        return pulumi.get(self, "local_ip_address")

    @_builtins.property
    @pulumi.getter(name="originateDefaultRoute")
    def originate_default_route(self) -> _builtins.bool:
        """
        The OriginateDefaultRoute param.
        """
        return pulumi.get(self, "originate_default_route")

    @_builtins.property
    @pulumi.getter(name="peerAs")
    def peer_as(self) -> _builtins.str:
        """
        The PeerAs param.
        """
        return pulumi.get(self, "peer_as")

    @_builtins.property
    @pulumi.getter(name="peerIpAddress")
    def peer_ip_address(self) -> _builtins.str:
        """
        The PeerIpAddress param.
        """
        return pulumi.get(self, "peer_ip_address")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param.
        """
        return pulumi.get(self, "secret")

    @_builtins.property
    @pulumi.getter(name="summarizeMobileUserRoutes")
    def summarize_mobile_user_routes(self) -> _builtins.bool:
        """
        The SummarizeMobileUserRoutes param.
        """
        return pulumi.get(self, "summarize_mobile_user_routes")


@pulumi.output_type
class GetServiceConnectionQosResult(dict):
    def __init__(__self__, *,
                 enable: _builtins.bool,
                 qos_profile: _builtins.str):
        """
        :param _builtins.bool enable: The Enable param.
        :param _builtins.str qos_profile: The QosProfile param.
        """
        pulumi.set(__self__, "enable", enable)
        pulumi.set(__self__, "qos_profile", qos_profile)

    @_builtins.property
    @pulumi.getter
    def enable(self) -> _builtins.bool:
        """
        The Enable param.
        """
        return pulumi.get(self, "enable")

    @_builtins.property
    @pulumi.getter(name="qosProfile")
    def qos_profile(self) -> _builtins.str:
        """
        The QosProfile param.
        """
        return pulumi.get(self, "qos_profile")


@pulumi.output_type
class GetServiceGroupListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 members: Sequence[_builtins.str],
                 name: _builtins.str,
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] members: The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param Sequence[_builtins.str] tags: Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "members", members)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def members(self) -> Sequence[_builtins.str]:
        """
        The Members param. Individual elements in this list are subject to additional validation. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "members")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for service group object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetServiceListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 protocol: 'outputs.GetServiceListDataProtocolResult',
                 tags: Sequence[_builtins.str]):
        """
        :param _builtins.str description: The Description param. String length must not exceed 1023 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param 'GetServiceListDataProtocolArgs' protocol: The Protocol param.
        :param Sequence[_builtins.str] tags: Tags for service object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "tags", tags)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string [ 0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> 'outputs.GetServiceListDataProtocolResult':
        """
        The Protocol param.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Sequence[_builtins.str]:
        """
        Tags for service object. List must contain at most 64 elements. Individual elements in this list are subject to additional validation. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "tags")


@pulumi.output_type
class GetServiceListDataProtocolResult(dict):
    def __init__(__self__, *,
                 tcp: 'outputs.GetServiceListDataProtocolTcpResult',
                 udp: 'outputs.GetServiceListDataProtocolUdpResult'):
        """
        :param 'GetServiceListDataProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetServiceListDataProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetServiceListDataProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetServiceListDataProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetServiceListDataProtocolTcpResult(dict):
    def __init__(__self__, *,
                 override: 'outputs.GetServiceListDataProtocolTcpOverrideResult',
                 port: _builtins.str,
                 source_port: _builtins.str):
        """
        :param 'GetServiceListDataProtocolTcpOverrideArgs' override: The Override param.
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "override", override)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def override(self) -> 'outputs.GetServiceListDataProtocolTcpOverrideResult':
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> _builtins.str:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class GetServiceListDataProtocolTcpOverrideResult(dict):
    def __init__(__self__, *,
                 halfclose_timeout: _builtins.int,
                 timeout: _builtins.int,
                 timewait_timeout: _builtins.int):
        """
        :param _builtins.int halfclose_timeout: tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        :param _builtins.int timeout: tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        :param _builtins.int timewait_timeout: tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        pulumi.set(__self__, "halfclose_timeout", halfclose_timeout)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "timewait_timeout", timewait_timeout)

    @_builtins.property
    @pulumi.getter(name="halfcloseTimeout")
    def halfclose_timeout(self) -> _builtins.int:
        """
        tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        """
        return pulumi.get(self, "halfclose_timeout")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter(name="timewaitTimeout")
    def timewait_timeout(self) -> _builtins.int:
        """
        tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        return pulumi.get(self, "timewait_timeout")


@pulumi.output_type
class GetServiceListDataProtocolUdpResult(dict):
    def __init__(__self__, *,
                 override: 'outputs.GetServiceListDataProtocolUdpOverrideResult',
                 port: _builtins.str,
                 source_port: _builtins.str):
        """
        :param 'GetServiceListDataProtocolUdpOverrideArgs' override: The Override param.
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "override", override)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def override(self) -> 'outputs.GetServiceListDataProtocolUdpOverrideResult':
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> _builtins.str:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class GetServiceListDataProtocolUdpOverrideResult(dict):
    def __init__(__self__, *,
                 timeout: _builtins.int):
        """
        :param _builtins.int timeout: udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        pulumi.set(__self__, "timeout", timeout)

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class GetServiceProtocolResult(dict):
    def __init__(__self__, *,
                 tcp: 'outputs.GetServiceProtocolTcpResult',
                 udp: 'outputs.GetServiceProtocolUdpResult'):
        """
        :param 'GetServiceProtocolTcpArgs' tcp: The Tcp param.
        :param 'GetServiceProtocolUdpArgs' udp: The Udp param.
        """
        pulumi.set(__self__, "tcp", tcp)
        pulumi.set(__self__, "udp", udp)

    @_builtins.property
    @pulumi.getter
    def tcp(self) -> 'outputs.GetServiceProtocolTcpResult':
        """
        The Tcp param.
        """
        return pulumi.get(self, "tcp")

    @_builtins.property
    @pulumi.getter
    def udp(self) -> 'outputs.GetServiceProtocolUdpResult':
        """
        The Udp param.
        """
        return pulumi.get(self, "udp")


@pulumi.output_type
class GetServiceProtocolTcpResult(dict):
    def __init__(__self__, *,
                 override: 'outputs.GetServiceProtocolTcpOverrideResult',
                 port: _builtins.str,
                 source_port: _builtins.str):
        """
        :param 'GetServiceProtocolTcpOverrideArgs' override: The Override param.
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "override", override)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def override(self) -> 'outputs.GetServiceProtocolTcpOverrideResult':
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> _builtins.str:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class GetServiceProtocolTcpOverrideResult(dict):
    def __init__(__self__, *,
                 halfclose_timeout: _builtins.int,
                 timeout: _builtins.int,
                 timewait_timeout: _builtins.int):
        """
        :param _builtins.int halfclose_timeout: tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        :param _builtins.int timeout: tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        :param _builtins.int timewait_timeout: tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        pulumi.set(__self__, "halfclose_timeout", halfclose_timeout)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "timewait_timeout", timewait_timeout)

    @_builtins.property
    @pulumi.getter(name="halfcloseTimeout")
    def halfclose_timeout(self) -> _builtins.int:
        """
        tcp session half-close timeout value (in second). Value must be between 1 and 604800. Default: `120`.
        """
        return pulumi.get(self, "halfclose_timeout")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        tcp session timeout value (in second). Value must be between 1 and 604800. Default: `3600`.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter(name="timewaitTimeout")
    def timewait_timeout(self) -> _builtins.int:
        """
        tcp session time-wait timeout value (in second). Value must be between 1 and 600. Default: `15`.
        """
        return pulumi.get(self, "timewait_timeout")


@pulumi.output_type
class GetServiceProtocolUdpResult(dict):
    def __init__(__self__, *,
                 override: 'outputs.GetServiceProtocolUdpOverrideResult',
                 port: _builtins.str,
                 source_port: _builtins.str):
        """
        :param 'GetServiceProtocolUdpOverrideArgs' override: The Override param.
        :param _builtins.str port: The Port param. String length must be between 1 and 1023 characters.
        :param _builtins.str source_port: The SourcePort param. String length must be between 1 and 1023 characters.
        """
        pulumi.set(__self__, "override", override)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "source_port", source_port)

    @_builtins.property
    @pulumi.getter
    def override(self) -> 'outputs.GetServiceProtocolUdpOverrideResult':
        """
        The Override param.
        """
        return pulumi.get(self, "override")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.str:
        """
        The Port param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter(name="sourcePort")
    def source_port(self) -> _builtins.str:
        """
        The SourcePort param. String length must be between 1 and 1023 characters.
        """
        return pulumi.get(self, "source_port")


@pulumi.output_type
class GetServiceProtocolUdpOverrideResult(dict):
    def __init__(__self__, *,
                 timeout: _builtins.int):
        """
        :param _builtins.int timeout: udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        pulumi.set(__self__, "timeout", timeout)

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        udp session timeout value (in second). Value must be between 1 and 604800. Default: `30`.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class GetSharedInfrastructureSettingsListDataResult(dict):
    def __init__(__self__, *,
                 api_key: _builtins.str,
                 captive_portal_redirect_ip_address: _builtins.str,
                 egress_ip_notification_url: _builtins.str,
                 infra_bgp_as: _builtins.str,
                 infrastructure_subnet: _builtins.str,
                 infrastructure_subnet_ipv6: _builtins.str,
                 ipv6: _builtins.bool,
                 loopback_ips: Sequence[_builtins.str],
                 tunnel_monitor_ip_address: _builtins.str):
        """
        :param _builtins.str api_key: The ApiKey param.
        :param _builtins.str captive_portal_redirect_ip_address: The CaptivePortalRedirectIpAddress param.
        :param _builtins.str egress_ip_notification_url: The EgressIpNotificationUrl param.
        :param _builtins.str infra_bgp_as: The InfraBgpAs param.
        :param _builtins.str infrastructure_subnet: The InfrastructureSubnet param.
        :param _builtins.str infrastructure_subnet_ipv6: The InfrastructureSubnetIpv6 param.
        :param _builtins.bool ipv6: The Ipv6 param.
        :param Sequence[_builtins.str] loopback_ips: The LoopbackIps param.
        :param _builtins.str tunnel_monitor_ip_address: The TunnelMonitorIpAddress param.
        """
        pulumi.set(__self__, "api_key", api_key)
        pulumi.set(__self__, "captive_portal_redirect_ip_address", captive_portal_redirect_ip_address)
        pulumi.set(__self__, "egress_ip_notification_url", egress_ip_notification_url)
        pulumi.set(__self__, "infra_bgp_as", infra_bgp_as)
        pulumi.set(__self__, "infrastructure_subnet", infrastructure_subnet)
        pulumi.set(__self__, "infrastructure_subnet_ipv6", infrastructure_subnet_ipv6)
        pulumi.set(__self__, "ipv6", ipv6)
        pulumi.set(__self__, "loopback_ips", loopback_ips)
        pulumi.set(__self__, "tunnel_monitor_ip_address", tunnel_monitor_ip_address)

    @_builtins.property
    @pulumi.getter(name="apiKey")
    def api_key(self) -> _builtins.str:
        """
        The ApiKey param.
        """
        return pulumi.get(self, "api_key")

    @_builtins.property
    @pulumi.getter(name="captivePortalRedirectIpAddress")
    def captive_portal_redirect_ip_address(self) -> _builtins.str:
        """
        The CaptivePortalRedirectIpAddress param.
        """
        return pulumi.get(self, "captive_portal_redirect_ip_address")

    @_builtins.property
    @pulumi.getter(name="egressIpNotificationUrl")
    def egress_ip_notification_url(self) -> _builtins.str:
        """
        The EgressIpNotificationUrl param.
        """
        return pulumi.get(self, "egress_ip_notification_url")

    @_builtins.property
    @pulumi.getter(name="infraBgpAs")
    def infra_bgp_as(self) -> _builtins.str:
        """
        The InfraBgpAs param.
        """
        return pulumi.get(self, "infra_bgp_as")

    @_builtins.property
    @pulumi.getter(name="infrastructureSubnet")
    def infrastructure_subnet(self) -> _builtins.str:
        """
        The InfrastructureSubnet param.
        """
        return pulumi.get(self, "infrastructure_subnet")

    @_builtins.property
    @pulumi.getter(name="infrastructureSubnetIpv6")
    def infrastructure_subnet_ipv6(self) -> _builtins.str:
        """
        The InfrastructureSubnetIpv6 param.
        """
        return pulumi.get(self, "infrastructure_subnet_ipv6")

    @_builtins.property
    @pulumi.getter
    def ipv6(self) -> _builtins.bool:
        """
        The Ipv6 param.
        """
        return pulumi.get(self, "ipv6")

    @_builtins.property
    @pulumi.getter(name="loopbackIps")
    def loopback_ips(self) -> Sequence[_builtins.str]:
        """
        The LoopbackIps param.
        """
        return pulumi.get(self, "loopback_ips")

    @_builtins.property
    @pulumi.getter(name="tunnelMonitorIpAddress")
    def tunnel_monitor_ip_address(self) -> _builtins.str:
        """
        The TunnelMonitorIpAddress param.
        """
        return pulumi.get(self, "tunnel_monitor_ip_address")


@pulumi.output_type
class GetSnippetListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 labels: Sequence[_builtins.str],
                 name: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: The Id param.
        :param Sequence[_builtins.str] labels: The Labels param.
        :param _builtins.str name: The Name param.
        :param _builtins.str type: The Type param. String must be one of these: `"predefined"`, `"custom"`.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "labels", labels)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Sequence[_builtins.str]:
        """
        The Labels param.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param. String must be one of these: `"predefined"`, `"custom"`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetTacacsServerProfileListDataResult(dict):
    def __init__(__self__, *,
                 id: _builtins.str,
                 protocol: _builtins.str,
                 servers: Sequence['outputs.GetTacacsServerProfileListDataServerResult'],
                 timeout: _builtins.int,
                 use_single_connection: _builtins.bool):
        """
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str protocol: The Protocol param. String must be one of these: `"CHAP"`, `"PAP"`.
        :param Sequence['GetTacacsServerProfileListDataServerArgs'] servers: The Servers param.
        :param _builtins.int timeout: The Timeout param. Value must be between 1 and 30.
        :param _builtins.bool use_single_connection: The UseSingleConnection param.
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "servers", servers)
        pulumi.set(__self__, "timeout", timeout)
        pulumi.set(__self__, "use_single_connection", use_single_connection)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def protocol(self) -> _builtins.str:
        """
        The Protocol param. String must be one of these: `"CHAP"`, `"PAP"`.
        """
        return pulumi.get(self, "protocol")

    @_builtins.property
    @pulumi.getter
    def servers(self) -> Sequence['outputs.GetTacacsServerProfileListDataServerResult']:
        """
        The Servers param.
        """
        return pulumi.get(self, "servers")

    @_builtins.property
    @pulumi.getter
    def timeout(self) -> _builtins.int:
        """
        The Timeout param. Value must be between 1 and 30.
        """
        return pulumi.get(self, "timeout")

    @_builtins.property
    @pulumi.getter(name="useSingleConnection")
    def use_single_connection(self) -> _builtins.bool:
        """
        The UseSingleConnection param.
        """
        return pulumi.get(self, "use_single_connection")


@pulumi.output_type
class GetTacacsServerProfileListDataServerResult(dict):
    def __init__(__self__, *,
                 address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int,
                 secret: _builtins.str):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        pulumi.set(__self__, "address", address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter
    def address(self) -> _builtins.str:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetTacacsServerProfileServerResult(dict):
    def __init__(__self__, *,
                 address: _builtins.str,
                 name: _builtins.str,
                 port: _builtins.int,
                 secret: _builtins.str):
        """
        :param _builtins.str address: The Address param.
        :param _builtins.str name: The Name param.
        :param _builtins.int port: The Port param. Value must be between 1 and 65535.
        :param _builtins.str secret: The Secret param. String length must not exceed 64 characters.
        """
        pulumi.set(__self__, "address", address)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "secret", secret)

    @_builtins.property
    @pulumi.getter
    def address(self) -> _builtins.str:
        """
        The Address param.
        """
        return pulumi.get(self, "address")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def port(self) -> _builtins.int:
        """
        The Port param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "port")

    @_builtins.property
    @pulumi.getter
    def secret(self) -> _builtins.str:
        """
        The Secret param. String length must not exceed 64 characters.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetTagListDataResult(dict):
    def __init__(__self__, *,
                 color: _builtins.str,
                 comments: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str color: The Color param. String must be one of these: `"Red"`, `"Green"`, `"Blue"`, `"Yellow"`, `"Copper"`, `"Orange"`, `"Purple"`, `"Gray"`, `"Light Green"`, `"Cyan"`, `"Light Gray"`, `"Blue Gray"`, `"Lime"`, `"Black"`, `"Gold"`, `"Brown"`, `"Olive"`, `"Maroon"`, `"Red-Orange"`, `"Yellow-Orange"`, `"Forest Green"`, `"Turquoise Blue"`, `"Azure Blue"`, `"Cerulean Blue"`, `"Midnight Blue"`, `"Medium Blue"`, `"Cobalt Blue"`, `"Violet Blue"`, `"Blue Violet"`, `"Medium Violet"`, `"Medium Rose"`, `"Lavender"`, `"Orchid"`, `"Thistle"`, `"Peach"`, `"Salmon"`, `"Magenta"`, `"Red Violet"`, `"Mahogany"`, `"Burnt Sienna"`, `"Chestnut"`.
        :param _builtins.str comments: The Comments param. String length must not exceed 1023 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param. String length must not exceed 127 characters.
        """
        pulumi.set(__self__, "color", color)
        pulumi.set(__self__, "comments", comments)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def color(self) -> _builtins.str:
        """
        The Color param. String must be one of these: `"Red"`, `"Green"`, `"Blue"`, `"Yellow"`, `"Copper"`, `"Orange"`, `"Purple"`, `"Gray"`, `"Light Green"`, `"Cyan"`, `"Light Gray"`, `"Blue Gray"`, `"Lime"`, `"Black"`, `"Gold"`, `"Brown"`, `"Olive"`, `"Maroon"`, `"Red-Orange"`, `"Yellow-Orange"`, `"Forest Green"`, `"Turquoise Blue"`, `"Azure Blue"`, `"Cerulean Blue"`, `"Midnight Blue"`, `"Medium Blue"`, `"Cobalt Blue"`, `"Violet Blue"`, `"Blue Violet"`, `"Medium Violet"`, `"Medium Rose"`, `"Lavender"`, `"Orchid"`, `"Thistle"`, `"Peach"`, `"Salmon"`, `"Magenta"`, `"Red Violet"`, `"Mahogany"`, `"Burnt Sienna"`, `"Chestnut"`.
        """
        return pulumi.get(self, "color")

    @_builtins.property
    @pulumi.getter
    def comments(self) -> _builtins.str:
        """
        The Comments param. String length must not exceed 1023 characters.
        """
        return pulumi.get(self, "comments")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 127 characters.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetTlsServiceProfileListDataResult(dict):
    def __init__(__self__, *,
                 certificate: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 protocol_settings: 'outputs.GetTlsServiceProfileListDataProtocolSettingsResult'):
        """
        :param _builtins.str certificate: SSL certificate file name. String length must not exceed 255 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        :param 'GetTlsServiceProfileListDataProtocolSettingsArgs' protocol_settings: The ProtocolSettings param.
        """
        pulumi.set(__self__, "certificate", certificate)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "protocol_settings", protocol_settings)

    @_builtins.property
    @pulumi.getter
    def certificate(self) -> _builtins.str:
        """
        SSL certificate file name. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "certificate")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        SSL TLS Service Profile name, value is muCustomDomainSSLProfile when it is used on mobile-agent infra settings. String length must not exceed 127 characters. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="protocolSettings")
    def protocol_settings(self) -> 'outputs.GetTlsServiceProfileListDataProtocolSettingsResult':
        """
        The ProtocolSettings param.
        """
        return pulumi.get(self, "protocol_settings")


@pulumi.output_type
class GetTlsServiceProfileListDataProtocolSettingsResult(dict):
    def __init__(__self__, *,
                 auth_algo_sha1: _builtins.bool,
                 auth_algo_sha256: _builtins.bool,
                 auth_algo_sha384: _builtins.bool,
                 enc_algo3des: _builtins.bool,
                 enc_algo_aes128_cbc: _builtins.bool,
                 enc_algo_aes128_gcm: _builtins.bool,
                 enc_algo_aes256_cbc: _builtins.bool,
                 enc_algo_aes256_gcm: _builtins.bool,
                 enc_algo_rc4: _builtins.bool,
                 keyxchg_algo_dhe: _builtins.bool,
                 keyxchg_algo_ecdhe: _builtins.bool,
                 keyxchg_algo_rsa: _builtins.bool,
                 max_version: _builtins.str,
                 min_version: _builtins.str):
        """
        :param _builtins.bool auth_algo_sha1: Allow authentication SHA1.
        :param _builtins.bool auth_algo_sha256: Allow authentication SHA256.
        :param _builtins.bool auth_algo_sha384: Allow authentication SHA384.
        :param _builtins.bool enc_algo3des: Allow algorithm 3DES.
        :param _builtins.bool enc_algo_aes128_cbc: Allow algorithm AES-128-CBC.
        :param _builtins.bool enc_algo_aes128_gcm: Allow algorithm AES-128-GCM.
        :param _builtins.bool enc_algo_aes256_cbc: Allow algorithm AES-256-CBC.
        :param _builtins.bool enc_algo_aes256_gcm: Allow algorithm AES-256-GCM.
        :param _builtins.bool enc_algo_rc4: Allow algorithm RC4.
        :param _builtins.bool keyxchg_algo_dhe: Allow algorithm DHE.
        :param _builtins.bool keyxchg_algo_ecdhe: Allow algorithm ECDHE.
        :param _builtins.bool keyxchg_algo_rsa: Allow algorithm RSA.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        pulumi.set(__self__, "max_version", max_version)
        pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> _builtins.bool:
        """
        Allow authentication SHA1.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> _builtins.bool:
        """
        Allow authentication SHA256.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> _builtins.bool:
        """
        Allow authentication SHA384.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> _builtins.bool:
        """
        Allow algorithm 3DES.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> _builtins.bool:
        """
        Allow algorithm AES-128-CBC.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> _builtins.bool:
        """
        Allow algorithm AES-128-GCM.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> _builtins.bool:
        """
        Allow algorithm AES-256-CBC.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> _builtins.bool:
        """
        Allow algorithm AES-256-GCM.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> _builtins.bool:
        """
        Allow algorithm RC4.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> _builtins.bool:
        """
        Allow algorithm DHE.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> _builtins.bool:
        """
        Allow algorithm ECDHE.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> _builtins.bool:
        """
        Allow algorithm RSA.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> _builtins.str:
        """
        The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> _builtins.str:
        """
        The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class GetTlsServiceProfileProtocolSettingsResult(dict):
    def __init__(__self__, *,
                 auth_algo_sha1: _builtins.bool,
                 auth_algo_sha256: _builtins.bool,
                 auth_algo_sha384: _builtins.bool,
                 enc_algo3des: _builtins.bool,
                 enc_algo_aes128_cbc: _builtins.bool,
                 enc_algo_aes128_gcm: _builtins.bool,
                 enc_algo_aes256_cbc: _builtins.bool,
                 enc_algo_aes256_gcm: _builtins.bool,
                 enc_algo_rc4: _builtins.bool,
                 keyxchg_algo_dhe: _builtins.bool,
                 keyxchg_algo_ecdhe: _builtins.bool,
                 keyxchg_algo_rsa: _builtins.bool,
                 max_version: _builtins.str,
                 min_version: _builtins.str):
        """
        :param _builtins.bool auth_algo_sha1: Allow authentication SHA1.
        :param _builtins.bool auth_algo_sha256: Allow authentication SHA256.
        :param _builtins.bool auth_algo_sha384: Allow authentication SHA384.
        :param _builtins.bool enc_algo3des: Allow algorithm 3DES.
        :param _builtins.bool enc_algo_aes128_cbc: Allow algorithm AES-128-CBC.
        :param _builtins.bool enc_algo_aes128_gcm: Allow algorithm AES-128-GCM.
        :param _builtins.bool enc_algo_aes256_cbc: Allow algorithm AES-256-CBC.
        :param _builtins.bool enc_algo_aes256_gcm: Allow algorithm AES-256-GCM.
        :param _builtins.bool enc_algo_rc4: Allow algorithm RC4.
        :param _builtins.bool keyxchg_algo_dhe: Allow algorithm DHE.
        :param _builtins.bool keyxchg_algo_ecdhe: Allow algorithm ECDHE.
        :param _builtins.bool keyxchg_algo_rsa: Allow algorithm RSA.
        :param _builtins.str max_version: The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        :param _builtins.str min_version: The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        pulumi.set(__self__, "auth_algo_sha1", auth_algo_sha1)
        pulumi.set(__self__, "auth_algo_sha256", auth_algo_sha256)
        pulumi.set(__self__, "auth_algo_sha384", auth_algo_sha384)
        pulumi.set(__self__, "enc_algo3des", enc_algo3des)
        pulumi.set(__self__, "enc_algo_aes128_cbc", enc_algo_aes128_cbc)
        pulumi.set(__self__, "enc_algo_aes128_gcm", enc_algo_aes128_gcm)
        pulumi.set(__self__, "enc_algo_aes256_cbc", enc_algo_aes256_cbc)
        pulumi.set(__self__, "enc_algo_aes256_gcm", enc_algo_aes256_gcm)
        pulumi.set(__self__, "enc_algo_rc4", enc_algo_rc4)
        pulumi.set(__self__, "keyxchg_algo_dhe", keyxchg_algo_dhe)
        pulumi.set(__self__, "keyxchg_algo_ecdhe", keyxchg_algo_ecdhe)
        pulumi.set(__self__, "keyxchg_algo_rsa", keyxchg_algo_rsa)
        pulumi.set(__self__, "max_version", max_version)
        pulumi.set(__self__, "min_version", min_version)

    @_builtins.property
    @pulumi.getter(name="authAlgoSha1")
    def auth_algo_sha1(self) -> _builtins.bool:
        """
        Allow authentication SHA1.
        """
        return pulumi.get(self, "auth_algo_sha1")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha256")
    def auth_algo_sha256(self) -> _builtins.bool:
        """
        Allow authentication SHA256.
        """
        return pulumi.get(self, "auth_algo_sha256")

    @_builtins.property
    @pulumi.getter(name="authAlgoSha384")
    def auth_algo_sha384(self) -> _builtins.bool:
        """
        Allow authentication SHA384.
        """
        return pulumi.get(self, "auth_algo_sha384")

    @_builtins.property
    @pulumi.getter(name="encAlgo3des")
    def enc_algo3des(self) -> _builtins.bool:
        """
        Allow algorithm 3DES.
        """
        return pulumi.get(self, "enc_algo3des")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Cbc")
    def enc_algo_aes128_cbc(self) -> _builtins.bool:
        """
        Allow algorithm AES-128-CBC.
        """
        return pulumi.get(self, "enc_algo_aes128_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes128Gcm")
    def enc_algo_aes128_gcm(self) -> _builtins.bool:
        """
        Allow algorithm AES-128-GCM.
        """
        return pulumi.get(self, "enc_algo_aes128_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Cbc")
    def enc_algo_aes256_cbc(self) -> _builtins.bool:
        """
        Allow algorithm AES-256-CBC.
        """
        return pulumi.get(self, "enc_algo_aes256_cbc")

    @_builtins.property
    @pulumi.getter(name="encAlgoAes256Gcm")
    def enc_algo_aes256_gcm(self) -> _builtins.bool:
        """
        Allow algorithm AES-256-GCM.
        """
        return pulumi.get(self, "enc_algo_aes256_gcm")

    @_builtins.property
    @pulumi.getter(name="encAlgoRc4")
    def enc_algo_rc4(self) -> _builtins.bool:
        """
        Allow algorithm RC4.
        """
        return pulumi.get(self, "enc_algo_rc4")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoDhe")
    def keyxchg_algo_dhe(self) -> _builtins.bool:
        """
        Allow algorithm DHE.
        """
        return pulumi.get(self, "keyxchg_algo_dhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoEcdhe")
    def keyxchg_algo_ecdhe(self) -> _builtins.bool:
        """
        Allow algorithm ECDHE.
        """
        return pulumi.get(self, "keyxchg_algo_ecdhe")

    @_builtins.property
    @pulumi.getter(name="keyxchgAlgoRsa")
    def keyxchg_algo_rsa(self) -> _builtins.bool:
        """
        Allow algorithm RSA.
        """
        return pulumi.get(self, "keyxchg_algo_rsa")

    @_builtins.property
    @pulumi.getter(name="maxVersion")
    def max_version(self) -> _builtins.str:
        """
        The MaxVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`, `"tls1-3"`, `"max"`. Default: `"max"`.
        """
        return pulumi.get(self, "max_version")

    @_builtins.property
    @pulumi.getter(name="minVersion")
    def min_version(self) -> _builtins.str:
        """
        The MinVersion param. String must be one of these: `"tls1-0"`, `"tls1-1"`, `"tls1-2"`. Default: `"tls1-0"`.
        """
        return pulumi.get(self, "min_version")


@pulumi.output_type
class GetTrafficSteeringRuleActionResult(dict):
    def __init__(__self__, *,
                 forward: 'outputs.GetTrafficSteeringRuleActionForwardResult',
                 no_pbf: _builtins.bool):
        """
        :param 'GetTrafficSteeringRuleActionForwardArgs' forward: The Forward param.
        :param _builtins.bool no_pbf: The NoPbf param.
        """
        pulumi.set(__self__, "forward", forward)
        pulumi.set(__self__, "no_pbf", no_pbf)

    @_builtins.property
    @pulumi.getter
    def forward(self) -> 'outputs.GetTrafficSteeringRuleActionForwardResult':
        """
        The Forward param.
        """
        return pulumi.get(self, "forward")

    @_builtins.property
    @pulumi.getter(name="noPbf")
    def no_pbf(self) -> _builtins.bool:
        """
        The NoPbf param.
        """
        return pulumi.get(self, "no_pbf")


@pulumi.output_type
class GetTrafficSteeringRuleActionForwardResult(dict):
    def __init__(__self__, *,
                 target: _builtins.str):
        """
        :param _builtins.str target: The Target param.
        """
        pulumi.set(__self__, "target", target)

    @_builtins.property
    @pulumi.getter
    def target(self) -> _builtins.str:
        """
        The Target param.
        """
        return pulumi.get(self, "target")


@pulumi.output_type
class GetTrafficSteeringRuleListDataResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetTrafficSteeringRuleListDataActionResult',
                 categories: Sequence[_builtins.str],
                 destinations: Sequence[_builtins.str],
                 id: _builtins.str,
                 name: _builtins.str,
                 services: Sequence[_builtins.str],
                 source_users: Sequence[_builtins.str],
                 sources: Sequence[_builtins.str]):
        """
        :param 'GetTrafficSteeringRuleListDataActionArgs' action: The Action param.
        :param Sequence[_builtins.str] categories: The Category param.
        :param Sequence[_builtins.str] destinations: The Destination param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param.
        :param Sequence[_builtins.str] services: The Service param.
        :param Sequence[_builtins.str] source_users: The SourceUser param.
        :param Sequence[_builtins.str] sources: The Source param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "categories", categories)
        pulumi.set(__self__, "destinations", destinations)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "services", services)
        pulumi.set(__self__, "source_users", source_users)
        pulumi.set(__self__, "sources", sources)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetTrafficSteeringRuleListDataActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def categories(self) -> Sequence[_builtins.str]:
        """
        The Category param.
        """
        return pulumi.get(self, "categories")

    @_builtins.property
    @pulumi.getter
    def destinations(self) -> Sequence[_builtins.str]:
        """
        The Destination param.
        """
        return pulumi.get(self, "destinations")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def services(self) -> Sequence[_builtins.str]:
        """
        The Service param.
        """
        return pulumi.get(self, "services")

    @_builtins.property
    @pulumi.getter(name="sourceUsers")
    def source_users(self) -> Sequence[_builtins.str]:
        """
        The SourceUser param.
        """
        return pulumi.get(self, "source_users")

    @_builtins.property
    @pulumi.getter
    def sources(self) -> Sequence[_builtins.str]:
        """
        The Source param.
        """
        return pulumi.get(self, "sources")


@pulumi.output_type
class GetTrafficSteeringRuleListDataActionResult(dict):
    def __init__(__self__, *,
                 forward: 'outputs.GetTrafficSteeringRuleListDataActionForwardResult',
                 no_pbf: _builtins.bool):
        """
        :param 'GetTrafficSteeringRuleListDataActionForwardArgs' forward: The Forward param.
        :param _builtins.bool no_pbf: The NoPbf param.
        """
        pulumi.set(__self__, "forward", forward)
        pulumi.set(__self__, "no_pbf", no_pbf)

    @_builtins.property
    @pulumi.getter
    def forward(self) -> 'outputs.GetTrafficSteeringRuleListDataActionForwardResult':
        """
        The Forward param.
        """
        return pulumi.get(self, "forward")

    @_builtins.property
    @pulumi.getter(name="noPbf")
    def no_pbf(self) -> _builtins.bool:
        """
        The NoPbf param.
        """
        return pulumi.get(self, "no_pbf")


@pulumi.output_type
class GetTrafficSteeringRuleListDataActionForwardResult(dict):
    def __init__(__self__, *,
                 target: _builtins.str):
        """
        :param _builtins.str target: The Target param.
        """
        pulumi.set(__self__, "target", target)

    @_builtins.property
    @pulumi.getter
    def target(self) -> _builtins.str:
        """
        The Target param.
        """
        return pulumi.get(self, "target")


@pulumi.output_type
class GetTrustedCertificateAuthorityListDataResult(dict):
    def __init__(__self__, *,
                 common_name: _builtins.str,
                 expiry_epoch: _builtins.str,
                 filename: _builtins.str,
                 id: _builtins.str,
                 issuer: _builtins.str,
                 name: _builtins.str,
                 not_valid_after: _builtins.str,
                 not_valid_before: _builtins.str,
                 serial_number: _builtins.str,
                 subject: _builtins.str):
        """
        :param _builtins.str common_name: The CommonName param. String length must not exceed 255 characters.
        :param _builtins.str expiry_epoch: The ExpiryEpoch param.
        :param _builtins.str filename: The Filename param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str issuer: The Issuer param.
        :param _builtins.str name: The Name param. String length must not exceed 63 characters.
        :param _builtins.str not_valid_after: The NotValidAfter param.
        :param _builtins.str not_valid_before: The NotValidBefore param.
        :param _builtins.str serial_number: The SerialNumber param.
        :param _builtins.str subject: The Subject param.
        """
        pulumi.set(__self__, "common_name", common_name)
        pulumi.set(__self__, "expiry_epoch", expiry_epoch)
        pulumi.set(__self__, "filename", filename)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "issuer", issuer)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "not_valid_after", not_valid_after)
        pulumi.set(__self__, "not_valid_before", not_valid_before)
        pulumi.set(__self__, "serial_number", serial_number)
        pulumi.set(__self__, "subject", subject)

    @_builtins.property
    @pulumi.getter(name="commonName")
    def common_name(self) -> _builtins.str:
        """
        The CommonName param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "common_name")

    @_builtins.property
    @pulumi.getter(name="expiryEpoch")
    def expiry_epoch(self) -> _builtins.str:
        """
        The ExpiryEpoch param.
        """
        return pulumi.get(self, "expiry_epoch")

    @_builtins.property
    @pulumi.getter
    def filename(self) -> _builtins.str:
        """
        The Filename param.
        """
        return pulumi.get(self, "filename")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def issuer(self) -> _builtins.str:
        """
        The Issuer param.
        """
        return pulumi.get(self, "issuer")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="notValidAfter")
    def not_valid_after(self) -> _builtins.str:
        """
        The NotValidAfter param.
        """
        return pulumi.get(self, "not_valid_after")

    @_builtins.property
    @pulumi.getter(name="notValidBefore")
    def not_valid_before(self) -> _builtins.str:
        """
        The NotValidBefore param.
        """
        return pulumi.get(self, "not_valid_before")

    @_builtins.property
    @pulumi.getter(name="serialNumber")
    def serial_number(self) -> _builtins.str:
        """
        The SerialNumber param.
        """
        return pulumi.get(self, "serial_number")

    @_builtins.property
    @pulumi.getter
    def subject(self) -> _builtins.str:
        """
        The Subject param.
        """
        return pulumi.get(self, "subject")


@pulumi.output_type
class GetUrlAccessProfileCredentialEnforcementResult(dict):
    def __init__(__self__, *,
                 alerts: Sequence[_builtins.str],
                 allows: Sequence[_builtins.str],
                 blocks: Sequence[_builtins.str],
                 continues: Sequence[_builtins.str],
                 log_severity: _builtins.str,
                 mode: 'outputs.GetUrlAccessProfileCredentialEnforcementModeResult'):
        """
        :param Sequence[_builtins.str] alerts: The Alerts param.
        :param Sequence[_builtins.str] allows: The Allows param.
        :param Sequence[_builtins.str] blocks: The Blocks param.
        :param Sequence[_builtins.str] continues: The Continues param.
        :param _builtins.str log_severity: The LogSeverity param. Default: `"medium"`.
        :param 'GetUrlAccessProfileCredentialEnforcementModeArgs' mode: The Mode param.
        """
        pulumi.set(__self__, "alerts", alerts)
        pulumi.set(__self__, "allows", allows)
        pulumi.set(__self__, "blocks", blocks)
        pulumi.set(__self__, "continues", continues)
        pulumi.set(__self__, "log_severity", log_severity)
        pulumi.set(__self__, "mode", mode)

    @_builtins.property
    @pulumi.getter
    def alerts(self) -> Sequence[_builtins.str]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @_builtins.property
    @pulumi.getter
    def allows(self) -> Sequence[_builtins.str]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @_builtins.property
    @pulumi.getter
    def blocks(self) -> Sequence[_builtins.str]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @_builtins.property
    @pulumi.getter
    def continues(self) -> Sequence[_builtins.str]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @_builtins.property
    @pulumi.getter(name="logSeverity")
    def log_severity(self) -> _builtins.str:
        """
        The LogSeverity param. Default: `"medium"`.
        """
        return pulumi.get(self, "log_severity")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> 'outputs.GetUrlAccessProfileCredentialEnforcementModeResult':
        """
        The Mode param.
        """
        return pulumi.get(self, "mode")


@pulumi.output_type
class GetUrlAccessProfileCredentialEnforcementModeResult(dict):
    def __init__(__self__, *,
                 disabled: _builtins.bool,
                 domain_credentials: _builtins.bool,
                 group_mapping: _builtins.str,
                 ip_user: _builtins.bool):
        """
        :param _builtins.bool disabled: The Disabled param.
        :param _builtins.bool domain_credentials: The DomainCredentials param.
        :param _builtins.str group_mapping: The GroupMapping param.
        :param _builtins.bool ip_user: The IpUser param.
        """
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "domain_credentials", domain_credentials)
        pulumi.set(__self__, "group_mapping", group_mapping)
        pulumi.set(__self__, "ip_user", ip_user)

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter(name="domainCredentials")
    def domain_credentials(self) -> _builtins.bool:
        """
        The DomainCredentials param.
        """
        return pulumi.get(self, "domain_credentials")

    @_builtins.property
    @pulumi.getter(name="groupMapping")
    def group_mapping(self) -> _builtins.str:
        """
        The GroupMapping param.
        """
        return pulumi.get(self, "group_mapping")

    @_builtins.property
    @pulumi.getter(name="ipUser")
    def ip_user(self) -> _builtins.bool:
        """
        The IpUser param.
        """
        return pulumi.get(self, "ip_user")


@pulumi.output_type
class GetUrlAccessProfileListDataResult(dict):
    def __init__(__self__, *,
                 alerts: Sequence[_builtins.str],
                 allows: Sequence[_builtins.str],
                 blocks: Sequence[_builtins.str],
                 cloud_inline_cat: _builtins.bool,
                 continues: Sequence[_builtins.str],
                 credential_enforcement: 'outputs.GetUrlAccessProfileListDataCredentialEnforcementResult',
                 description: _builtins.str,
                 id: _builtins.str,
                 local_inline_cat: _builtins.bool,
                 log_container_page_only: _builtins.bool,
                 log_http_hdr_referer: _builtins.bool,
                 log_http_hdr_user_agent: _builtins.bool,
                 log_http_hdr_xff: _builtins.bool,
                 mlav_category_exceptions: Sequence[_builtins.str],
                 name: _builtins.str,
                 safe_search_enforcement: _builtins.bool):
        """
        :param Sequence[_builtins.str] alerts: The Alerts param.
        :param Sequence[_builtins.str] allows: The Allows param.
        :param Sequence[_builtins.str] blocks: The Blocks param.
        :param _builtins.bool cloud_inline_cat: The CloudInlineCat param.
        :param Sequence[_builtins.str] continues: The Continues param.
        :param 'GetUrlAccessProfileListDataCredentialEnforcementArgs' credential_enforcement: The CredentialEnforcement param.
        :param _builtins.str description: The Description param. String length must not exceed 255 characters.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.bool local_inline_cat: The LocalInlineCat param.
        :param _builtins.bool log_container_page_only: The LogContainerPageOnly param. Default: `true`.
        :param _builtins.bool log_http_hdr_referer: The LogHttpHdrReferer param. Default: `false`.
        :param _builtins.bool log_http_hdr_user_agent: The LogHttpHdrUserAgent param. Default: `false`.
        :param _builtins.bool log_http_hdr_xff: The LogHttpHdrXff param. Default: `false`.
        :param Sequence[_builtins.str] mlav_category_exceptions: The MlavCategoryExceptions param.
        :param _builtins.str name: The Name param.
        :param _builtins.bool safe_search_enforcement: The SafeSearchEnforcement param. Default: `false`.
        """
        pulumi.set(__self__, "alerts", alerts)
        pulumi.set(__self__, "allows", allows)
        pulumi.set(__self__, "blocks", blocks)
        pulumi.set(__self__, "cloud_inline_cat", cloud_inline_cat)
        pulumi.set(__self__, "continues", continues)
        pulumi.set(__self__, "credential_enforcement", credential_enforcement)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "local_inline_cat", local_inline_cat)
        pulumi.set(__self__, "log_container_page_only", log_container_page_only)
        pulumi.set(__self__, "log_http_hdr_referer", log_http_hdr_referer)
        pulumi.set(__self__, "log_http_hdr_user_agent", log_http_hdr_user_agent)
        pulumi.set(__self__, "log_http_hdr_xff", log_http_hdr_xff)
        pulumi.set(__self__, "mlav_category_exceptions", mlav_category_exceptions)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "safe_search_enforcement", safe_search_enforcement)

    @_builtins.property
    @pulumi.getter
    def alerts(self) -> Sequence[_builtins.str]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @_builtins.property
    @pulumi.getter
    def allows(self) -> Sequence[_builtins.str]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @_builtins.property
    @pulumi.getter
    def blocks(self) -> Sequence[_builtins.str]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @_builtins.property
    @pulumi.getter(name="cloudInlineCat")
    def cloud_inline_cat(self) -> _builtins.bool:
        """
        The CloudInlineCat param.
        """
        return pulumi.get(self, "cloud_inline_cat")

    @_builtins.property
    @pulumi.getter
    def continues(self) -> Sequence[_builtins.str]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @_builtins.property
    @pulumi.getter(name="credentialEnforcement")
    def credential_enforcement(self) -> 'outputs.GetUrlAccessProfileListDataCredentialEnforcementResult':
        """
        The CredentialEnforcement param.
        """
        return pulumi.get(self, "credential_enforcement")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param. String length must not exceed 255 characters.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="localInlineCat")
    def local_inline_cat(self) -> _builtins.bool:
        """
        The LocalInlineCat param.
        """
        return pulumi.get(self, "local_inline_cat")

    @_builtins.property
    @pulumi.getter(name="logContainerPageOnly")
    def log_container_page_only(self) -> _builtins.bool:
        """
        The LogContainerPageOnly param. Default: `true`.
        """
        return pulumi.get(self, "log_container_page_only")

    @_builtins.property
    @pulumi.getter(name="logHttpHdrReferer")
    def log_http_hdr_referer(self) -> _builtins.bool:
        """
        The LogHttpHdrReferer param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_referer")

    @_builtins.property
    @pulumi.getter(name="logHttpHdrUserAgent")
    def log_http_hdr_user_agent(self) -> _builtins.bool:
        """
        The LogHttpHdrUserAgent param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_user_agent")

    @_builtins.property
    @pulumi.getter(name="logHttpHdrXff")
    def log_http_hdr_xff(self) -> _builtins.bool:
        """
        The LogHttpHdrXff param. Default: `false`.
        """
        return pulumi.get(self, "log_http_hdr_xff")

    @_builtins.property
    @pulumi.getter(name="mlavCategoryExceptions")
    def mlav_category_exceptions(self) -> Sequence[_builtins.str]:
        """
        The MlavCategoryExceptions param.
        """
        return pulumi.get(self, "mlav_category_exceptions")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="safeSearchEnforcement")
    def safe_search_enforcement(self) -> _builtins.bool:
        """
        The SafeSearchEnforcement param. Default: `false`.
        """
        return pulumi.get(self, "safe_search_enforcement")


@pulumi.output_type
class GetUrlAccessProfileListDataCredentialEnforcementResult(dict):
    def __init__(__self__, *,
                 alerts: Sequence[_builtins.str],
                 allows: Sequence[_builtins.str],
                 blocks: Sequence[_builtins.str],
                 continues: Sequence[_builtins.str],
                 log_severity: _builtins.str,
                 mode: 'outputs.GetUrlAccessProfileListDataCredentialEnforcementModeResult'):
        """
        :param Sequence[_builtins.str] alerts: The Alerts param.
        :param Sequence[_builtins.str] allows: The Allows param.
        :param Sequence[_builtins.str] blocks: The Blocks param.
        :param Sequence[_builtins.str] continues: The Continues param.
        :param _builtins.str log_severity: The LogSeverity param. Default: `"medium"`.
        :param 'GetUrlAccessProfileListDataCredentialEnforcementModeArgs' mode: The Mode param.
        """
        pulumi.set(__self__, "alerts", alerts)
        pulumi.set(__self__, "allows", allows)
        pulumi.set(__self__, "blocks", blocks)
        pulumi.set(__self__, "continues", continues)
        pulumi.set(__self__, "log_severity", log_severity)
        pulumi.set(__self__, "mode", mode)

    @_builtins.property
    @pulumi.getter
    def alerts(self) -> Sequence[_builtins.str]:
        """
        The Alerts param.
        """
        return pulumi.get(self, "alerts")

    @_builtins.property
    @pulumi.getter
    def allows(self) -> Sequence[_builtins.str]:
        """
        The Allows param.
        """
        return pulumi.get(self, "allows")

    @_builtins.property
    @pulumi.getter
    def blocks(self) -> Sequence[_builtins.str]:
        """
        The Blocks param.
        """
        return pulumi.get(self, "blocks")

    @_builtins.property
    @pulumi.getter
    def continues(self) -> Sequence[_builtins.str]:
        """
        The Continues param.
        """
        return pulumi.get(self, "continues")

    @_builtins.property
    @pulumi.getter(name="logSeverity")
    def log_severity(self) -> _builtins.str:
        """
        The LogSeverity param. Default: `"medium"`.
        """
        return pulumi.get(self, "log_severity")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> 'outputs.GetUrlAccessProfileListDataCredentialEnforcementModeResult':
        """
        The Mode param.
        """
        return pulumi.get(self, "mode")


@pulumi.output_type
class GetUrlAccessProfileListDataCredentialEnforcementModeResult(dict):
    def __init__(__self__, *,
                 disabled: _builtins.bool,
                 domain_credentials: _builtins.bool,
                 group_mapping: _builtins.str,
                 ip_user: _builtins.bool):
        """
        :param _builtins.bool disabled: The Disabled param.
        :param _builtins.bool domain_credentials: The DomainCredentials param.
        :param _builtins.str group_mapping: The GroupMapping param.
        :param _builtins.bool ip_user: The IpUser param.
        """
        pulumi.set(__self__, "disabled", disabled)
        pulumi.set(__self__, "domain_credentials", domain_credentials)
        pulumi.set(__self__, "group_mapping", group_mapping)
        pulumi.set(__self__, "ip_user", ip_user)

    @_builtins.property
    @pulumi.getter
    def disabled(self) -> _builtins.bool:
        """
        The Disabled param.
        """
        return pulumi.get(self, "disabled")

    @_builtins.property
    @pulumi.getter(name="domainCredentials")
    def domain_credentials(self) -> _builtins.bool:
        """
        The DomainCredentials param.
        """
        return pulumi.get(self, "domain_credentials")

    @_builtins.property
    @pulumi.getter(name="groupMapping")
    def group_mapping(self) -> _builtins.str:
        """
        The GroupMapping param.
        """
        return pulumi.get(self, "group_mapping")

    @_builtins.property
    @pulumi.getter(name="ipUser")
    def ip_user(self) -> _builtins.bool:
        """
        The IpUser param.
        """
        return pulumi.get(self, "ip_user")


@pulumi.output_type
class GetUrlCategoryListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 lists: Sequence[_builtins.str],
                 name: _builtins.str,
                 type: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] lists: The List param.
        :param _builtins.str name: The Name param.
        :param _builtins.str type: The Type param. String must be one of these: `"URL List"`, `"Category Match"`. Default: `"URL List"`.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "lists", lists)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def lists(self) -> Sequence[_builtins.str]:
        """
        The List param.
        """
        return pulumi.get(self, "lists")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param. String must be one of these: `"URL List"`, `"Category Match"`. Default: `"URL List"`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetUrlFilteringCategoryListDataResult(dict):
    def __init__(__self__, *,
                 type: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str type: The Type param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVariableListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 overridden: _builtins.bool,
                 type: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        :param _builtins.bool overridden: The Overridden param.
        :param _builtins.str type: The Type param. String must be one of these: `"percent"`, `"count"`, `"ip-netmask"`, `"zone"`, `"ip-range"`, `"ip-wildcard"`, `"device-priority"`, `"device-id"`, `"egress-max"`, `"as-number"`, `"fqdn"`, `"port"`, `"link-tag"`, `"group-id"`, `"rate"`, `"router-id"`, `"qos-profile"`, `"timer"`.
        :param _builtins.str value: value can accept either string or integer.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "overridden", overridden)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Alphanumeric string begin with letter: [0-9a-zA-Z._-]. String length must not exceed 63 characters.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def overridden(self) -> _builtins.bool:
        """
        The Overridden param.
        """
        return pulumi.get(self, "overridden")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        """
        The Type param. String must be one of these: `"percent"`, `"count"`, `"ip-netmask"`, `"zone"`, `"ip-range"`, `"ip-wildcard"`, `"device-priority"`, `"device-id"`, `"egress-max"`, `"as-number"`, `"fqdn"`, `"port"`, `"link-tag"`, `"group-id"`, `"rate"`, `"router-id"`, `"qos-profile"`, `"timer"`.
        """
        return pulumi.get(self, "type")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        value can accept either string or integer.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 name: _builtins.str,
                 rules: Sequence['outputs.GetVulnerabilityProtectionProfileListDataRuleResult'],
                 threat_exceptions: Sequence['outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionResult']):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param _builtins.str name: The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
        :param Sequence['GetVulnerabilityProtectionProfileListDataRuleArgs'] rules: The Rules param.
        :param Sequence['GetVulnerabilityProtectionProfileListDataThreatExceptionArgs'] threat_exceptions: The ThreatExceptions param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "rules", rules)
        pulumi.set(__self__, "threat_exceptions", threat_exceptions)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetVulnerabilityProtectionProfileListDataRuleResult']:
        """
        The Rules param.
        """
        return pulumi.get(self, "rules")

    @_builtins.property
    @pulumi.getter(name="threatExceptions")
    def threat_exceptions(self) -> Sequence['outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionResult']:
        """
        The ThreatExceptions param.
        """
        return pulumi.get(self, "threat_exceptions")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataRuleResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetVulnerabilityProtectionProfileListDataRuleActionResult',
                 category: _builtins.str,
                 cves: Sequence[_builtins.str],
                 host: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str,
                 severities: Sequence[_builtins.str],
                 threat_name: _builtins.str,
                 vendor_ids: Sequence[_builtins.str]):
        """
        :param 'GetVulnerabilityProtectionProfileListDataRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        :param Sequence[_builtins.str] cves: The Cves param.
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param.
        :param Sequence[_builtins.str] vendor_ids: The VendorIds param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "cves", cves)
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "severities", severities)
        pulumi.set(__self__, "threat_name", threat_name)
        pulumi.set(__self__, "vendor_ids", vendor_ids)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetVulnerabilityProtectionProfileListDataRuleActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        """
        The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def cves(self) -> Sequence[_builtins.str]:
        """
        The Cves param.
        """
        return pulumi.get(self, "cves")

    @_builtins.property
    @pulumi.getter
    def host(self) -> _builtins.str:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Sequence[_builtins.str]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> _builtins.str:
        """
        The ThreatName param.
        """
        return pulumi.get(self, "threat_name")

    @_builtins.property
    @pulumi.getter(name="vendorIds")
    def vendor_ids(self) -> Sequence[_builtins.str]:
        """
        The VendorIds param.
        """
        return pulumi.get(self, "vendor_ids")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataRuleActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionProfileListDataRuleActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionProfileListDataRuleActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionProfileListDataRuleActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataRuleActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataThreatExceptionResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionActionResult',
                 exempt_ips: Sequence['outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIpResult'],
                 name: _builtins.str,
                 notes: _builtins.str,
                 packet_capture: _builtins.str,
                 time_attribute: 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttributeResult'):
        """
        :param 'GetVulnerabilityProtectionProfileListDataThreatExceptionActionArgs' action: The Action param.
        :param Sequence['GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param 'GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "exempt_ips", exempt_ips)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Sequence['outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIpResult']:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataThreatExceptionActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataThreatExceptionActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataThreatExceptionExemptIpResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetVulnerabilityProtectionProfileListDataThreatExceptionTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 65535.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionProfileRuleResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetVulnerabilityProtectionProfileRuleActionResult',
                 category: _builtins.str,
                 cves: Sequence[_builtins.str],
                 host: _builtins.str,
                 name: _builtins.str,
                 packet_capture: _builtins.str,
                 severities: Sequence[_builtins.str],
                 threat_name: _builtins.str,
                 vendor_ids: Sequence[_builtins.str]):
        """
        :param 'GetVulnerabilityProtectionProfileRuleActionArgs' action: The Action param.
        :param _builtins.str category: The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        :param Sequence[_builtins.str] cves: The Cves param.
        :param _builtins.str host: The Host param.
        :param _builtins.str name: The Name param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param Sequence[_builtins.str] severities: The Severities param.
        :param _builtins.str threat_name: The ThreatName param.
        :param Sequence[_builtins.str] vendor_ids: The VendorIds param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "category", category)
        pulumi.set(__self__, "cves", cves)
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "severities", severities)
        pulumi.set(__self__, "threat_name", threat_name)
        pulumi.set(__self__, "vendor_ids", vendor_ids)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetVulnerabilityProtectionProfileRuleActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter
    def category(self) -> _builtins.str:
        """
        The Category param. String must be one of these: `"any"`, `"brute-force"`, `"code-execution"`, `"code-obfuscation"`, `"command-execution"`, `"dos"`, `"exploit-kit"`, `"info-leak"`, `"insecure-credentials"`, `"overflow"`, `"phishing"`, `"protocol-anomaly"`, `"scan"`, `"sql-injection"`.
        """
        return pulumi.get(self, "category")

    @_builtins.property
    @pulumi.getter
    def cves(self) -> Sequence[_builtins.str]:
        """
        The Cves param.
        """
        return pulumi.get(self, "cves")

    @_builtins.property
    @pulumi.getter
    def host(self) -> _builtins.str:
        """
        The Host param.
        """
        return pulumi.get(self, "host")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def severities(self) -> Sequence[_builtins.str]:
        """
        The Severities param.
        """
        return pulumi.get(self, "severities")

    @_builtins.property
    @pulumi.getter(name="threatName")
    def threat_name(self) -> _builtins.str:
        """
        The ThreatName param.
        """
        return pulumi.get(self, "threat_name")

    @_builtins.property
    @pulumi.getter(name="vendorIds")
    def vendor_ids(self) -> Sequence[_builtins.str]:
        """
        The VendorIds param.
        """
        return pulumi.get(self, "vendor_ids")


@pulumi.output_type
class GetVulnerabilityProtectionProfileRuleActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionProfileRuleActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionProfileRuleActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionProfileRuleActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionProfileRuleActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionProfileThreatExceptionResult(dict):
    def __init__(__self__, *,
                 action: 'outputs.GetVulnerabilityProtectionProfileThreatExceptionActionResult',
                 exempt_ips: Sequence['outputs.GetVulnerabilityProtectionProfileThreatExceptionExemptIpResult'],
                 name: _builtins.str,
                 notes: _builtins.str,
                 packet_capture: _builtins.str,
                 time_attribute: 'outputs.GetVulnerabilityProtectionProfileThreatExceptionTimeAttributeResult'):
        """
        :param 'GetVulnerabilityProtectionProfileThreatExceptionActionArgs' action: The Action param.
        :param Sequence['GetVulnerabilityProtectionProfileThreatExceptionExemptIpArgs'] exempt_ips: The ExemptIps param.
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        :param _builtins.str packet_capture: The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        :param 'GetVulnerabilityProtectionProfileThreatExceptionTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "action", action)
        pulumi.set(__self__, "exempt_ips", exempt_ips)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter
    def action(self) -> 'outputs.GetVulnerabilityProtectionProfileThreatExceptionActionResult':
        """
        The Action param.
        """
        return pulumi.get(self, "action")

    @_builtins.property
    @pulumi.getter(name="exemptIps")
    def exempt_ips(self) -> Sequence['outputs.GetVulnerabilityProtectionProfileThreatExceptionExemptIpResult']:
        """
        The ExemptIps param.
        """
        return pulumi.get(self, "exempt_ips")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.str:
        """
        The PacketCapture param. String must be one of these: `"disable"`, `"single-packet"`, `"extended-capture"`.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetVulnerabilityProtectionProfileThreatExceptionTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetVulnerabilityProtectionProfileThreatExceptionActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionProfileThreatExceptionActionBlockIpResult',
                 default: _builtins.bool,
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionProfileThreatExceptionActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool default: The Default param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "default", default)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionProfileThreatExceptionActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def default(self) -> _builtins.bool:
        """
        The Default param.
        """
        return pulumi.get(self, "default")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionProfileThreatExceptionActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionProfileThreatExceptionExemptIpResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetVulnerabilityProtectionProfileThreatExceptionTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 65535.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source"`, `"destination"`, `"source-and-destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesAffectedHostResult(dict):
    def __init__(__self__, *,
                 client: _builtins.bool,
                 server: _builtins.bool):
        """
        :param _builtins.bool client: The Client param.
        :param _builtins.bool server: The Server param.
        """
        pulumi.set(__self__, "client", client)
        pulumi.set(__self__, "server", server)

    @_builtins.property
    @pulumi.getter
    def client(self) -> _builtins.bool:
        """
        The Client param.
        """
        return pulumi.get(self, "client")

    @_builtins.property
    @pulumi.getter
    def server(self) -> _builtins.bool:
        """
        The Server param.
        """
        return pulumi.get(self, "server")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesDefaultActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionSignaturesDefaultActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionSignaturesDefaultActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionSignaturesDefaultActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesDefaultActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataResult(dict):
    def __init__(__self__, *,
                 affected_host: 'outputs.GetVulnerabilityProtectionSignaturesListDataAffectedHostResult',
                 bugtraqs: Sequence[_builtins.str],
                 comment: _builtins.str,
                 cves: Sequence[_builtins.str],
                 default_action: 'outputs.GetVulnerabilityProtectionSignaturesListDataDefaultActionResult',
                 direction: _builtins.str,
                 id: _builtins.str,
                 references: Sequence[_builtins.str],
                 severity: _builtins.str,
                 signature: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureResult',
                 threat_id: _builtins.int,
                 threatname: _builtins.str,
                 vendors: Sequence[_builtins.str]):
        """
        :param 'GetVulnerabilityProtectionSignaturesListDataAffectedHostArgs' affected_host: The AffectedHost param.
        :param Sequence[_builtins.str] bugtraqs: The Bugtraqs param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param Sequence[_builtins.str] cves: The Cves param.
        :param 'GetVulnerabilityProtectionSignaturesListDataDefaultActionArgs' default_action: The DefaultAction param.
        :param _builtins.str direction: The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        :param _builtins.str id: UUID of the resource.
        :param Sequence[_builtins.str] references: The References param.
        :param _builtins.str severity: The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureArgs' signature: The Signature param.
        :param _builtins.int threat_id: threat id range \\n\\n and \\n\\n. Value must be between 41000 and 6900000.
        :param _builtins.str threatname: The Threatname param. String length must not exceed 1024 characters.
        :param Sequence[_builtins.str] vendors: The Vendors param.
        """
        pulumi.set(__self__, "affected_host", affected_host)
        pulumi.set(__self__, "bugtraqs", bugtraqs)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "cves", cves)
        pulumi.set(__self__, "default_action", default_action)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "references", references)
        pulumi.set(__self__, "severity", severity)
        pulumi.set(__self__, "signature", signature)
        pulumi.set(__self__, "threat_id", threat_id)
        pulumi.set(__self__, "threatname", threatname)
        pulumi.set(__self__, "vendors", vendors)

    @_builtins.property
    @pulumi.getter(name="affectedHost")
    def affected_host(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataAffectedHostResult':
        """
        The AffectedHost param.
        """
        return pulumi.get(self, "affected_host")

    @_builtins.property
    @pulumi.getter
    def bugtraqs(self) -> Sequence[_builtins.str]:
        """
        The Bugtraqs param.
        """
        return pulumi.get(self, "bugtraqs")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def cves(self) -> Sequence[_builtins.str]:
        """
        The Cves param.
        """
        return pulumi.get(self, "cves")

    @_builtins.property
    @pulumi.getter(name="defaultAction")
    def default_action(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataDefaultActionResult':
        """
        The DefaultAction param.
        """
        return pulumi.get(self, "default_action")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"client2server"`, `"server2client"`, `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def references(self) -> Sequence[_builtins.str]:
        """
        The References param.
        """
        return pulumi.get(self, "references")

    @_builtins.property
    @pulumi.getter
    def severity(self) -> _builtins.str:
        """
        The Severity param. String must be one of these: `"critical"`, `"low"`, `"high"`, `"medium"`, `"informational"`.
        """
        return pulumi.get(self, "severity")

    @_builtins.property
    @pulumi.getter
    def signature(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureResult':
        """
        The Signature param.
        """
        return pulumi.get(self, "signature")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.int:
        """
        threat id range \\n\\n and \\n\\n. Value must be between 41000 and 6900000.
        """
        return pulumi.get(self, "threat_id")

    @_builtins.property
    @pulumi.getter
    def threatname(self) -> _builtins.str:
        """
        The Threatname param. String length must not exceed 1024 characters.
        """
        return pulumi.get(self, "threatname")

    @_builtins.property
    @pulumi.getter
    def vendors(self) -> Sequence[_builtins.str]:
        """
        The Vendors param.
        """
        return pulumi.get(self, "vendors")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataAffectedHostResult(dict):
    def __init__(__self__, *,
                 client: _builtins.bool,
                 server: _builtins.bool):
        """
        :param _builtins.bool client: The Client param.
        :param _builtins.bool server: The Server param.
        """
        pulumi.set(__self__, "client", client)
        pulumi.set(__self__, "server", server)

    @_builtins.property
    @pulumi.getter
    def client(self) -> _builtins.bool:
        """
        The Client param.
        """
        return pulumi.get(self, "client")

    @_builtins.property
    @pulumi.getter
    def server(self) -> _builtins.bool:
        """
        The Server param.
        """
        return pulumi.get(self, "server")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataDefaultActionResult(dict):
    def __init__(__self__, *,
                 alert: _builtins.bool,
                 allow: _builtins.bool,
                 block_ip: 'outputs.GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIpResult',
                 drop: _builtins.bool,
                 reset_both: _builtins.bool,
                 reset_client: _builtins.bool,
                 reset_server: _builtins.bool):
        """
        :param _builtins.bool alert: The Alert param.
        :param _builtins.bool allow: The Allow param.
        :param 'GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIpArgs' block_ip: The BlockIp param.
        :param _builtins.bool drop: The Drop param.
        :param _builtins.bool reset_both: The ResetBoth param.
        :param _builtins.bool reset_client: The ResetClient param.
        :param _builtins.bool reset_server: The ResetServer param.
        """
        pulumi.set(__self__, "alert", alert)
        pulumi.set(__self__, "allow", allow)
        pulumi.set(__self__, "block_ip", block_ip)
        pulumi.set(__self__, "drop", drop)
        pulumi.set(__self__, "reset_both", reset_both)
        pulumi.set(__self__, "reset_client", reset_client)
        pulumi.set(__self__, "reset_server", reset_server)

    @_builtins.property
    @pulumi.getter
    def alert(self) -> _builtins.bool:
        """
        The Alert param.
        """
        return pulumi.get(self, "alert")

    @_builtins.property
    @pulumi.getter
    def allow(self) -> _builtins.bool:
        """
        The Allow param.
        """
        return pulumi.get(self, "allow")

    @_builtins.property
    @pulumi.getter(name="blockIp")
    def block_ip(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIpResult':
        """
        The BlockIp param.
        """
        return pulumi.get(self, "block_ip")

    @_builtins.property
    @pulumi.getter
    def drop(self) -> _builtins.bool:
        """
        The Drop param.
        """
        return pulumi.get(self, "drop")

    @_builtins.property
    @pulumi.getter(name="resetBoth")
    def reset_both(self) -> _builtins.bool:
        """
        The ResetBoth param.
        """
        return pulumi.get(self, "reset_both")

    @_builtins.property
    @pulumi.getter(name="resetClient")
    def reset_client(self) -> _builtins.bool:
        """
        The ResetClient param.
        """
        return pulumi.get(self, "reset_client")

    @_builtins.property
    @pulumi.getter(name="resetServer")
    def reset_server(self) -> _builtins.bool:
        """
        The ResetServer param.
        """
        return pulumi.get(self, "reset_server")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataDefaultActionBlockIpResult(dict):
    def __init__(__self__, *,
                 duration: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int duration: The Duration param. Value must be between 1 and 3600.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        pulumi.set(__self__, "duration", duration)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def duration(self) -> _builtins.int:
        """
        The Duration param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "duration")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureResult(dict):
    def __init__(__self__, *,
                 combination: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationResult',
                 standards: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardResult']):
        """
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationArgs' combination: The Combination param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardArgs'] standards: The Standards param.
        """
        pulumi.set(__self__, "combination", combination)
        pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationResult':
        """
        The Combination param.
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardResult']:
        """
        The Standards param.
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureCombinationResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionResult'],
                 order_free: _builtins.bool,
                 time_attribute: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttributeResult'):
        """
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureCombinationAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 threat_id: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.str:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureCombinationTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: The Name param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesListDataSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureResult(dict):
    def __init__(__self__, *,
                 combination: 'outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationResult',
                 standards: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardResult']):
        """
        :param 'GetVulnerabilityProtectionSignaturesSignatureCombinationArgs' combination: The Combination param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardArgs'] standards: The Standards param.
        """
        pulumi.set(__self__, "combination", combination)
        pulumi.set(__self__, "standards", standards)

    @_builtins.property
    @pulumi.getter
    def combination(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationResult':
        """
        The Combination param.
        """
        return pulumi.get(self, "combination")

    @_builtins.property
    @pulumi.getter
    def standards(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardResult']:
        """
        The Standards param.
        """
        return pulumi.get(self, "standards")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureCombinationResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionResult'],
                 order_free: _builtins.bool,
                 time_attribute: 'outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeResult'):
        """
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param 'GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeArgs' time_attribute: The TimeAttribute param.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "time_attribute", time_attribute)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter(name="timeAttribute")
    def time_attribute(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeResult':
        """
        The TimeAttribute param.
        """
        return pulumi.get(self, "time_attribute")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureCombinationAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 threat_id: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str threat_id: The ThreatId param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "threat_id", threat_id)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="threatId")
    def threat_id(self) -> _builtins.str:
        """
        The ThreatId param.
        """
        return pulumi.get(self, "threat_id")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureCombinationTimeAttributeResult(dict):
    def __init__(__self__, *,
                 interval: _builtins.int,
                 threshold: _builtins.int,
                 track_by: _builtins.str):
        """
        :param _builtins.int interval: The Interval param. Value must be between 1 and 3600.
        :param _builtins.int threshold: The Threshold param. Value must be between 1 and 255.
        :param _builtins.str track_by: The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        pulumi.set(__self__, "interval", interval)
        pulumi.set(__self__, "threshold", threshold)
        pulumi.set(__self__, "track_by", track_by)

    @_builtins.property
    @pulumi.getter
    def interval(self) -> _builtins.int:
        """
        The Interval param. Value must be between 1 and 3600.
        """
        return pulumi.get(self, "interval")

    @_builtins.property
    @pulumi.getter
    def threshold(self) -> _builtins.int:
        """
        The Threshold param. Value must be between 1 and 255.
        """
        return pulumi.get(self, "threshold")

    @_builtins.property
    @pulumi.getter(name="trackBy")
    def track_by(self) -> _builtins.str:
        """
        The TrackBy param. String must be one of these: `"source-and-destination"`, `"source"`, `"destination"`.
        """
        return pulumi.get(self, "track_by")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardResult(dict):
    def __init__(__self__, *,
                 and_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionResult'],
                 comment: _builtins.str,
                 name: _builtins.str,
                 order_free: _builtins.bool,
                 scope: _builtins.str):
        """
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionArgs'] and_conditions: The AndConditions param.
        :param _builtins.str comment: The Comment param. String length must not exceed 256 characters.
        :param _builtins.str name: The Name param.
        :param _builtins.bool order_free: The OrderFree param. Default: `false`.
        :param _builtins.str scope: The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        pulumi.set(__self__, "and_conditions", and_conditions)
        pulumi.set(__self__, "comment", comment)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_free", order_free)
        pulumi.set(__self__, "scope", scope)

    @_builtins.property
    @pulumi.getter(name="andConditions")
    def and_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionResult']:
        """
        The AndConditions param.
        """
        return pulumi.get(self, "and_conditions")

    @_builtins.property
    @pulumi.getter
    def comment(self) -> _builtins.str:
        """
        The Comment param. String length must not exceed 256 characters.
        """
        return pulumi.get(self, "comment")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orderFree")
    def order_free(self) -> _builtins.bool:
        """
        The OrderFree param. Default: `false`.
        """
        return pulumi.get(self, "order_free")

    @_builtins.property
    @pulumi.getter
    def scope(self) -> _builtins.str:
        """
        The Scope param. String must be one of these: `"protocol-data-unit"`, `"session"`.
        """
        return pulumi.get(self, "scope")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 or_conditions: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionResult']):
        """
        :param _builtins.str name: The Name param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionArgs'] or_conditions: The OrConditions param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "or_conditions", or_conditions)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="orConditions")
    def or_conditions(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionResult']:
        """
        The OrConditions param.
        """
        return pulumi.get(self, "or_conditions")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 operator: 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorResult'):
        """
        :param _builtins.str name: The Name param.
        :param 'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorArgs' operator: The Operator param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "operator", operator)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def operator(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorResult':
        """
        The Operator param.
        """
        return pulumi.get(self, "operator")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorResult(dict):
    def __init__(__self__, *,
                 equal_to: 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToResult',
                 greater_than: 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanResult',
                 less_than: 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanResult',
                 pattern_match: 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchResult'):
        """
        :param 'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToArgs' equal_to: The EqualTo param.
        :param 'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanArgs' greater_than: The GreaterThan param.
        :param 'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanArgs' less_than: The LessThan param.
        :param 'GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchArgs' pattern_match: The PatternMatch param.
        """
        pulumi.set(__self__, "equal_to", equal_to)
        pulumi.set(__self__, "greater_than", greater_than)
        pulumi.set(__self__, "less_than", less_than)
        pulumi.set(__self__, "pattern_match", pattern_match)

    @_builtins.property
    @pulumi.getter(name="equalTo")
    def equal_to(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToResult':
        """
        The EqualTo param.
        """
        return pulumi.get(self, "equal_to")

    @_builtins.property
    @pulumi.getter(name="greaterThan")
    def greater_than(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanResult':
        """
        The GreaterThan param.
        """
        return pulumi.get(self, "greater_than")

    @_builtins.property
    @pulumi.getter(name="lessThan")
    def less_than(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanResult':
        """
        The LessThan param.
        """
        return pulumi.get(self, "less_than")

    @_builtins.property
    @pulumi.getter(name="patternMatch")
    def pattern_match(self) -> 'outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchResult':
        """
        The PatternMatch param.
        """
        return pulumi.get(self, "pattern_match")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorEqualToQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorGreaterThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult'],
                 value: _builtins.int):
        """
        :param _builtins.str context: The Context param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierArgs'] qualifiers: The Qualifiers param.
        :param _builtins.int value: The Value param. Value must be between 0 and 4294967295.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "qualifiers", qualifiers)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.int:
        """
        The Value param. Value must be between 0 and 4294967295.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorLessThanQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchResult(dict):
    def __init__(__self__, *,
                 context: _builtins.str,
                 negate: _builtins.bool,
                 pattern: _builtins.str,
                 qualifiers: Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']):
        """
        :param _builtins.str context: The Context param.
        :param _builtins.bool negate: The Negate param. Default: `false`.
        :param _builtins.str pattern: The Pattern param.
        :param Sequence['GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierArgs'] qualifiers: The Qualifiers param.
        """
        pulumi.set(__self__, "context", context)
        pulumi.set(__self__, "negate", negate)
        pulumi.set(__self__, "pattern", pattern)
        pulumi.set(__self__, "qualifiers", qualifiers)

    @_builtins.property
    @pulumi.getter
    def context(self) -> _builtins.str:
        """
        The Context param.
        """
        return pulumi.get(self, "context")

    @_builtins.property
    @pulumi.getter
    def negate(self) -> _builtins.bool:
        """
        The Negate param. Default: `false`.
        """
        return pulumi.get(self, "negate")

    @_builtins.property
    @pulumi.getter
    def pattern(self) -> _builtins.str:
        """
        The Pattern param.
        """
        return pulumi.get(self, "pattern")

    @_builtins.property
    @pulumi.getter
    def qualifiers(self) -> Sequence['outputs.GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult']:
        """
        The Qualifiers param.
        """
        return pulumi.get(self, "qualifiers")


@pulumi.output_type
class GetVulnerabilityProtectionSignaturesSignatureStandardAndConditionOrConditionOperatorPatternMatchQualifierResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str value: The Value param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        """
        The Value param.
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetWildfireAntiVirusProfileListDataResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 id: _builtins.str,
                 mlav_exceptions: Sequence['outputs.GetWildfireAntiVirusProfileListDataMlavExceptionResult'],
                 name: _builtins.str,
                 packet_capture: _builtins.bool,
                 rules: Sequence['outputs.GetWildfireAntiVirusProfileListDataRuleResult'],
                 threat_exceptions: Sequence['outputs.GetWildfireAntiVirusProfileListDataThreatExceptionResult']):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str id: UUID of the resource.
        :param Sequence['GetWildfireAntiVirusProfileListDataMlavExceptionArgs'] mlav_exceptions: The MlavExceptions param.
        :param _builtins.str name: The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
        :param _builtins.bool packet_capture: The PacketCapture param.
        :param Sequence['GetWildfireAntiVirusProfileListDataRuleArgs'] rules: The Rules param.
        :param Sequence['GetWildfireAntiVirusProfileListDataThreatExceptionArgs'] threat_exceptions: The ThreatExceptions param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "mlav_exceptions", mlav_exceptions)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "packet_capture", packet_capture)
        pulumi.set(__self__, "rules", rules)
        pulumi.set(__self__, "threat_exceptions", threat_exceptions)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        UUID of the resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="mlavExceptions")
    def mlav_exceptions(self) -> Sequence['outputs.GetWildfireAntiVirusProfileListDataMlavExceptionResult']:
        """
        The MlavExceptions param.
        """
        return pulumi.get(self, "mlav_exceptions")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param. String validation regex: `^[a-zA-Z0-9._-]+$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="packetCapture")
    def packet_capture(self) -> _builtins.bool:
        """
        The PacketCapture param.
        """
        return pulumi.get(self, "packet_capture")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetWildfireAntiVirusProfileListDataRuleResult']:
        """
        The Rules param.
        """
        return pulumi.get(self, "rules")

    @_builtins.property
    @pulumi.getter(name="threatExceptions")
    def threat_exceptions(self) -> Sequence['outputs.GetWildfireAntiVirusProfileListDataThreatExceptionResult']:
        """
        The ThreatExceptions param.
        """
        return pulumi.get(self, "threat_exceptions")


@pulumi.output_type
class GetWildfireAntiVirusProfileListDataMlavExceptionResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 filename: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str filename: The Filename param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "filename", filename)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def filename(self) -> _builtins.str:
        """
        The Filename param.
        """
        return pulumi.get(self, "filename")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetWildfireAntiVirusProfileListDataRuleResult(dict):
    def __init__(__self__, *,
                 analysis: _builtins.str,
                 applications: Sequence[_builtins.str],
                 direction: _builtins.str,
                 file_types: Sequence[_builtins.str],
                 name: _builtins.str):
        """
        :param _builtins.str analysis: The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        :param Sequence[_builtins.str] applications: The Applications param.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        :param Sequence[_builtins.str] file_types: The FileTypes param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "analysis", analysis)
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "file_types", file_types)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def analysis(self) -> _builtins.str:
        """
        The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        """
        return pulumi.get(self, "analysis")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Sequence[_builtins.str]:
        """
        The FileTypes param.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetWildfireAntiVirusProfileListDataThreatExceptionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 notes: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")


@pulumi.output_type
class GetWildfireAntiVirusProfileMlavExceptionResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 filename: _builtins.str,
                 name: _builtins.str):
        """
        :param _builtins.str description: The Description param.
        :param _builtins.str filename: The Filename param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "filename", filename)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The Description param.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def filename(self) -> _builtins.str:
        """
        The Filename param.
        """
        return pulumi.get(self, "filename")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetWildfireAntiVirusProfileRuleResult(dict):
    def __init__(__self__, *,
                 analysis: _builtins.str,
                 applications: Sequence[_builtins.str],
                 direction: _builtins.str,
                 file_types: Sequence[_builtins.str],
                 name: _builtins.str):
        """
        :param _builtins.str analysis: The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        :param Sequence[_builtins.str] applications: The Applications param.
        :param _builtins.str direction: The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        :param Sequence[_builtins.str] file_types: The FileTypes param.
        :param _builtins.str name: The Name param.
        """
        pulumi.set(__self__, "analysis", analysis)
        pulumi.set(__self__, "applications", applications)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "file_types", file_types)
        pulumi.set(__self__, "name", name)

    @_builtins.property
    @pulumi.getter
    def analysis(self) -> _builtins.str:
        """
        The Analysis param. String must be one of these: `"public-cloud"`, `"private-cloud"`.
        """
        return pulumi.get(self, "analysis")

    @_builtins.property
    @pulumi.getter
    def applications(self) -> Sequence[_builtins.str]:
        """
        The Applications param.
        """
        return pulumi.get(self, "applications")

    @_builtins.property
    @pulumi.getter
    def direction(self) -> _builtins.str:
        """
        The Direction param. String must be one of these: `"download"`, `"upload"`, `"both"`.
        """
        return pulumi.get(self, "direction")

    @_builtins.property
    @pulumi.getter(name="fileTypes")
    def file_types(self) -> Sequence[_builtins.str]:
        """
        The FileTypes param.
        """
        return pulumi.get(self, "file_types")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")


@pulumi.output_type
class GetWildfireAntiVirusProfileThreatExceptionResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 notes: _builtins.str):
        """
        :param _builtins.str name: The Name param.
        :param _builtins.str notes: The Notes param.
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "notes", notes)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def notes(self) -> _builtins.str:
        """
        The Notes param.
        """
        return pulumi.get(self, "notes")


