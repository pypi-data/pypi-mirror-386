# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetServiceConnectionGroupResult',
    'AwaitableGetServiceConnectionGroupResult',
    'get_service_connection_group',
    'get_service_connection_group_output',
]

@pulumi.output_type
class GetServiceConnectionGroupResult:
    """
    A collection of values returned by getServiceConnectionGroup.
    """
    def __init__(__self__, disable_snat=None, folder=None, id=None, name=None, pbf_only=None, targets=None, tfid=None):
        if disable_snat and not isinstance(disable_snat, bool):
            raise TypeError("Expected argument 'disable_snat' to be a bool")
        pulumi.set(__self__, "disable_snat", disable_snat)
        if folder and not isinstance(folder, str):
            raise TypeError("Expected argument 'folder' to be a str")
        pulumi.set(__self__, "folder", folder)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if pbf_only and not isinstance(pbf_only, bool):
            raise TypeError("Expected argument 'pbf_only' to be a bool")
        pulumi.set(__self__, "pbf_only", pbf_only)
        if targets and not isinstance(targets, list):
            raise TypeError("Expected argument 'targets' to be a list")
        pulumi.set(__self__, "targets", targets)
        if tfid and not isinstance(tfid, str):
            raise TypeError("Expected argument 'tfid' to be a str")
        pulumi.set(__self__, "tfid", tfid)

    @_builtins.property
    @pulumi.getter(name="disableSnat")
    def disable_snat(self) -> _builtins.bool:
        """
        The DisableSnat param.
        """
        return pulumi.get(self, "disable_snat")

    @_builtins.property
    @pulumi.getter
    def folder(self) -> _builtins.str:
        """
        The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `"Service Connections"`.
        """
        return pulumi.get(self, "folder")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The Name param.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="pbfOnly")
    def pbf_only(self) -> _builtins.bool:
        """
        The PbfOnly param.
        """
        return pulumi.get(self, "pbf_only")

    @_builtins.property
    @pulumi.getter
    def targets(self) -> Sequence[_builtins.str]:
        """
        The Targets param.
        """
        return pulumi.get(self, "targets")

    @_builtins.property
    @pulumi.getter
    def tfid(self) -> _builtins.str:
        return pulumi.get(self, "tfid")


class AwaitableGetServiceConnectionGroupResult(GetServiceConnectionGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServiceConnectionGroupResult(
            disable_snat=self.disable_snat,
            folder=self.folder,
            id=self.id,
            name=self.name,
            pbf_only=self.pbf_only,
            targets=self.targets,
            tfid=self.tfid)


def get_service_connection_group(folder: Optional[_builtins.str] = None,
                                 id: Optional[_builtins.str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServiceConnectionGroupResult:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_service_connection_group(id="1234-56-789",
        folder="Service Connections")
    ```


    :param _builtins.str folder: The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `"Service Connections"`.
    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['folder'] = folder
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scm:index/getServiceConnectionGroup:getServiceConnectionGroup', __args__, opts=opts, typ=GetServiceConnectionGroupResult).value

    return AwaitableGetServiceConnectionGroupResult(
        disable_snat=pulumi.get(__ret__, 'disable_snat'),
        folder=pulumi.get(__ret__, 'folder'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        pbf_only=pulumi.get(__ret__, 'pbf_only'),
        targets=pulumi.get(__ret__, 'targets'),
        tfid=pulumi.get(__ret__, 'tfid'))
def get_service_connection_group_output(folder: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                        id: Optional[pulumi.Input[_builtins.str]] = None,
                                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetServiceConnectionGroupResult]:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_service_connection_group(id="1234-56-789",
        folder="Service Connections")
    ```


    :param _builtins.str folder: The Folder param. String can either be a specific string(`"Service Connections"`) or match this regex: `^[0-9a-zA-Z._\\s-]{1,}$`. Default: `"Service Connections"`.
    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['folder'] = folder
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scm:index/getServiceConnectionGroup:getServiceConnectionGroup', __args__, opts=opts, typ=GetServiceConnectionGroupResult)
    return __ret__.apply(lambda __response__: GetServiceConnectionGroupResult(
        disable_snat=pulumi.get(__response__, 'disable_snat'),
        folder=pulumi.get(__response__, 'folder'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        pbf_only=pulumi.get(__response__, 'pbf_only'),
        targets=pulumi.get(__response__, 'targets'),
        tfid=pulumi.get(__response__, 'tfid')))
