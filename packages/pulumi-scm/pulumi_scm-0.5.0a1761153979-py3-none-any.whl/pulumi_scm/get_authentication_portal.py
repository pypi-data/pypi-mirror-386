# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetAuthenticationPortalResult',
    'AwaitableGetAuthenticationPortalResult',
    'get_authentication_portal',
    'get_authentication_portal_output',
]

@pulumi.output_type
class GetAuthenticationPortalResult:
    """
    A collection of values returned by getAuthenticationPortal.
    """
    def __init__(__self__, authentication_profile=None, certificate_profile=None, gp_udp_port=None, id=None, idle_timer=None, redirect_host=None, tfid=None, timer=None, tls_service_profile=None):
        if authentication_profile and not isinstance(authentication_profile, str):
            raise TypeError("Expected argument 'authentication_profile' to be a str")
        pulumi.set(__self__, "authentication_profile", authentication_profile)
        if certificate_profile and not isinstance(certificate_profile, str):
            raise TypeError("Expected argument 'certificate_profile' to be a str")
        pulumi.set(__self__, "certificate_profile", certificate_profile)
        if gp_udp_port and not isinstance(gp_udp_port, int):
            raise TypeError("Expected argument 'gp_udp_port' to be a int")
        pulumi.set(__self__, "gp_udp_port", gp_udp_port)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if idle_timer and not isinstance(idle_timer, int):
            raise TypeError("Expected argument 'idle_timer' to be a int")
        pulumi.set(__self__, "idle_timer", idle_timer)
        if redirect_host and not isinstance(redirect_host, str):
            raise TypeError("Expected argument 'redirect_host' to be a str")
        pulumi.set(__self__, "redirect_host", redirect_host)
        if tfid and not isinstance(tfid, str):
            raise TypeError("Expected argument 'tfid' to be a str")
        pulumi.set(__self__, "tfid", tfid)
        if timer and not isinstance(timer, int):
            raise TypeError("Expected argument 'timer' to be a int")
        pulumi.set(__self__, "timer", timer)
        if tls_service_profile and not isinstance(tls_service_profile, str):
            raise TypeError("Expected argument 'tls_service_profile' to be a str")
        pulumi.set(__self__, "tls_service_profile", tls_service_profile)

    @_builtins.property
    @pulumi.getter(name="authenticationProfile")
    def authentication_profile(self) -> _builtins.str:
        """
        The AuthenticationProfile param.
        """
        return pulumi.get(self, "authentication_profile")

    @_builtins.property
    @pulumi.getter(name="certificateProfile")
    def certificate_profile(self) -> _builtins.str:
        """
        The CertificateProfile param.
        """
        return pulumi.get(self, "certificate_profile")

    @_builtins.property
    @pulumi.getter(name="gpUdpPort")
    def gp_udp_port(self) -> _builtins.int:
        """
        The GpUdpPort param. Value must be between 1 and 65535.
        """
        return pulumi.get(self, "gp_udp_port")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="idleTimer")
    def idle_timer(self) -> _builtins.int:
        """
        The IdleTimer param. Value must be between 1 and 1440.
        """
        return pulumi.get(self, "idle_timer")

    @_builtins.property
    @pulumi.getter(name="redirectHost")
    def redirect_host(self) -> _builtins.str:
        """
        The RedirectHost param.
        """
        return pulumi.get(self, "redirect_host")

    @_builtins.property
    @pulumi.getter
    def tfid(self) -> _builtins.str:
        return pulumi.get(self, "tfid")

    @_builtins.property
    @pulumi.getter
    def timer(self) -> _builtins.int:
        """
        The Timer param. Value must be between 1 and 1440.
        """
        return pulumi.get(self, "timer")

    @_builtins.property
    @pulumi.getter(name="tlsServiceProfile")
    def tls_service_profile(self) -> _builtins.str:
        """
        The TlsServiceProfile param.
        """
        return pulumi.get(self, "tls_service_profile")


class AwaitableGetAuthenticationPortalResult(GetAuthenticationPortalResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAuthenticationPortalResult(
            authentication_profile=self.authentication_profile,
            certificate_profile=self.certificate_profile,
            gp_udp_port=self.gp_udp_port,
            id=self.id,
            idle_timer=self.idle_timer,
            redirect_host=self.redirect_host,
            tfid=self.tfid,
            timer=self.timer,
            tls_service_profile=self.tls_service_profile)


def get_authentication_portal(id: Optional[_builtins.str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAuthenticationPortalResult:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_authentication_portal(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scm:index/getAuthenticationPortal:getAuthenticationPortal', __args__, opts=opts, typ=GetAuthenticationPortalResult).value

    return AwaitableGetAuthenticationPortalResult(
        authentication_profile=pulumi.get(__ret__, 'authentication_profile'),
        certificate_profile=pulumi.get(__ret__, 'certificate_profile'),
        gp_udp_port=pulumi.get(__ret__, 'gp_udp_port'),
        id=pulumi.get(__ret__, 'id'),
        idle_timer=pulumi.get(__ret__, 'idle_timer'),
        redirect_host=pulumi.get(__ret__, 'redirect_host'),
        tfid=pulumi.get(__ret__, 'tfid'),
        timer=pulumi.get(__ret__, 'timer'),
        tls_service_profile=pulumi.get(__ret__, 'tls_service_profile'))
def get_authentication_portal_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAuthenticationPortalResult]:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_authentication_portal(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scm:index/getAuthenticationPortal:getAuthenticationPortal', __args__, opts=opts, typ=GetAuthenticationPortalResult)
    return __ret__.apply(lambda __response__: GetAuthenticationPortalResult(
        authentication_profile=pulumi.get(__response__, 'authentication_profile'),
        certificate_profile=pulumi.get(__response__, 'certificate_profile'),
        gp_udp_port=pulumi.get(__response__, 'gp_udp_port'),
        id=pulumi.get(__response__, 'id'),
        idle_timer=pulumi.get(__response__, 'idle_timer'),
        redirect_host=pulumi.get(__response__, 'redirect_host'),
        tfid=pulumi.get(__response__, 'tfid'),
        timer=pulumi.get(__response__, 'timer'),
        tls_service_profile=pulumi.get(__response__, 'tls_service_profile')))
