# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetDecryptionProfileResult',
    'AwaitableGetDecryptionProfileResult',
    'get_decryption_profile',
    'get_decryption_profile_output',
]

@pulumi.output_type
class GetDecryptionProfileResult:
    """
    A collection of values returned by getDecryptionProfile.
    """
    def __init__(__self__, id=None, name=None, ssl_forward_proxy=None, ssl_inbound_proxy=None, ssl_no_proxy=None, ssl_protocol_settings=None, tfid=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if ssl_forward_proxy and not isinstance(ssl_forward_proxy, dict):
            raise TypeError("Expected argument 'ssl_forward_proxy' to be a dict")
        pulumi.set(__self__, "ssl_forward_proxy", ssl_forward_proxy)
        if ssl_inbound_proxy and not isinstance(ssl_inbound_proxy, dict):
            raise TypeError("Expected argument 'ssl_inbound_proxy' to be a dict")
        pulumi.set(__self__, "ssl_inbound_proxy", ssl_inbound_proxy)
        if ssl_no_proxy and not isinstance(ssl_no_proxy, dict):
            raise TypeError("Expected argument 'ssl_no_proxy' to be a dict")
        pulumi.set(__self__, "ssl_no_proxy", ssl_no_proxy)
        if ssl_protocol_settings and not isinstance(ssl_protocol_settings, dict):
            raise TypeError("Expected argument 'ssl_protocol_settings' to be a dict")
        pulumi.set(__self__, "ssl_protocol_settings", ssl_protocol_settings)
        if tfid and not isinstance(tfid, str):
            raise TypeError("Expected argument 'tfid' to be a str")
        pulumi.set(__self__, "tfid", tfid)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The Id param.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        Must start with alphanumeric char and should contain only alphanemeric, underscore, hyphen, dot or space. String validation regex: `^[A-Za-z0-9]{1}[A-Za-z0-9_\\-\\.\\s]{0,}$`.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="sslForwardProxy")
    def ssl_forward_proxy(self) -> 'outputs.GetDecryptionProfileSslForwardProxyResult':
        """
        The SslForwardProxy param.
        """
        return pulumi.get(self, "ssl_forward_proxy")

    @_builtins.property
    @pulumi.getter(name="sslInboundProxy")
    def ssl_inbound_proxy(self) -> 'outputs.GetDecryptionProfileSslInboundProxyResult':
        """
        The SslInboundProxy param.
        """
        return pulumi.get(self, "ssl_inbound_proxy")

    @_builtins.property
    @pulumi.getter(name="sslNoProxy")
    def ssl_no_proxy(self) -> 'outputs.GetDecryptionProfileSslNoProxyResult':
        """
        The SslNoProxy param.
        """
        return pulumi.get(self, "ssl_no_proxy")

    @_builtins.property
    @pulumi.getter(name="sslProtocolSettings")
    def ssl_protocol_settings(self) -> 'outputs.GetDecryptionProfileSslProtocolSettingsResult':
        """
        The SslProtocolSettings param.
        """
        return pulumi.get(self, "ssl_protocol_settings")

    @_builtins.property
    @pulumi.getter
    def tfid(self) -> _builtins.str:
        return pulumi.get(self, "tfid")


class AwaitableGetDecryptionProfileResult(GetDecryptionProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDecryptionProfileResult(
            id=self.id,
            name=self.name,
            ssl_forward_proxy=self.ssl_forward_proxy,
            ssl_inbound_proxy=self.ssl_inbound_proxy,
            ssl_no_proxy=self.ssl_no_proxy,
            ssl_protocol_settings=self.ssl_protocol_settings,
            tfid=self.tfid)


def get_decryption_profile(id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDecryptionProfileResult:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_decryption_profile(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('scm:index/getDecryptionProfile:getDecryptionProfile', __args__, opts=opts, typ=GetDecryptionProfileResult).value

    return AwaitableGetDecryptionProfileResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        ssl_forward_proxy=pulumi.get(__ret__, 'ssl_forward_proxy'),
        ssl_inbound_proxy=pulumi.get(__ret__, 'ssl_inbound_proxy'),
        ssl_no_proxy=pulumi.get(__ret__, 'ssl_no_proxy'),
        ssl_protocol_settings=pulumi.get(__ret__, 'ssl_protocol_settings'),
        tfid=pulumi.get(__ret__, 'tfid'))
def get_decryption_profile_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDecryptionProfileResult]:
    """
    Retrieves a config item.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_scm as scm

    example = scm.get_decryption_profile(id="1234-56-789")
    ```


    :param _builtins.str id: The Id param.
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('scm:index/getDecryptionProfile:getDecryptionProfile', __args__, opts=opts, typ=GetDecryptionProfileResult)
    return __ret__.apply(lambda __response__: GetDecryptionProfileResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        ssl_forward_proxy=pulumi.get(__response__, 'ssl_forward_proxy'),
        ssl_inbound_proxy=pulumi.get(__response__, 'ssl_inbound_proxy'),
        ssl_no_proxy=pulumi.get(__response__, 'ssl_no_proxy'),
        ssl_protocol_settings=pulumi.get(__response__, 'ssl_protocol_settings'),
        tfid=pulumi.get(__response__, 'tfid')))
