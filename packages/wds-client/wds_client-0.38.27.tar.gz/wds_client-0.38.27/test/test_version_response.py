# coding: utf-8

"""
    Workspace Data Service

    This page lists current APIs.  All v0.2 APIs are subject to change without notice.  Changelog at [https://github.com/DataBiosphere/terra-workspace-data-service/releases](https://github.com/DataBiosphere/terra-workspace-data-service/releases) 

    The version of the OpenAPI document: v0.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wds_client.models.version_response import VersionResponse

class TestVersionResponse(unittest.TestCase):
    """VersionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionResponse:
        """Test VersionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionResponse`
        """
        model = VersionResponse()
        if include_optional:
            return VersionResponse(
                app = wds_client.models.app.app(
                    chart_version = '', 
                    image = '', ),
                git = wds_client.models.git.git(
                    branch = '', 
                    commit = wds_client.models.commit.commit(
                        id = '', 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ),
                build = wds_client.models.build.build(
                    artifact = '', 
                    name = '', 
                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    version = '', 
                    group = '', )
            )
        else:
            return VersionResponse(
        )
        """

    def testVersionResponse(self):
        """Test VersionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
