%import common (INT, WS)

%ignore WS

// rules

start: iota

?iota: _known_non_pattern_iota
     | pattern
     | unknown

_known_non_pattern_iota: bubble
                       | jump
                       | call
                       | matrix
                       | list
                       | vector
                       | number
                       | boolean
                       | null
                       | string

bubble: "{" bubble_iota "}"

?bubble_iota: _known_non_pattern_iota
            | pattern
            | BUBBLE_UNKNOWN -> unknown

jump: "[" "Jump" ( "->" "(" _delimited{JUMP_FRAME, ","}? ")" )? "]"

call: "[" "Call" "->" "(" _delimited{JUMP_FRAME, ","}? ")" "]"

list: "[" _delimited{_list_item, ","}? "]"

_list_item: _known_non_pattern_iota
          | pattern+
          | list_unknown

?list_unknown: LIST_UNKNOWN -> unknown

pattern: "HexPattern" "(" DIRECTION ANGLES? ")"
       | "<" DIRECTION ","? ANGLES? ">"
       | "HexPattern" "[" DIRECTION "," ANGLES? "]"

vector: "(" NUMBER "," NUMBER "," NUMBER ")"

matrix.1: "[" "(" INT "," INT ")" ( "|" matrix_rows )? "]"
matrix_rows: _delimited{matrix_row, ";"}
matrix_row: _delimited{NUMBER, ","}

number: NUMBER

boolean: BOOLEAN

null: "null"i

string: STRING

unknown: UNKNOWN

// terminals

DIRECTION: ( ( "north"i | "south"i ) "_"? )? ( "west"i | "east"i )
ANGLES: /[aqweds]+/i

NUMBER: /-? [0-9]+ \. [0-9]{2}/x

BOOLEAN: "true"i | "false"i

STRING: "\"" /[^"]*/ "\""

JUMP_FRAME: /[a-zA-Z]+/ "*"?

UNKNOWN.-1: /[^\n\,]+/

BUBBLE_UNKNOWN.-1: /[^\n\,\}]+/

LIST_UNKNOWN.-1: /[^\n\,\]]+/

// templates

_delimited{value, separator}: value ( separator value )*
