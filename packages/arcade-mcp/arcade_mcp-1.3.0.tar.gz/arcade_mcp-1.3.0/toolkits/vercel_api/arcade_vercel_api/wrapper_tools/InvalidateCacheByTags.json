{
  "name": "InvalidateCacheByTags",
  "fully_qualified_name": "VercelApi.InvalidateCacheByTags@0.1.0",
  "description": "Mark cache tags as stale for revalidation in the background.\n\nUse this tool to mark specific cache tags as stale, prompting them to be revalidated during the next request. This is useful when data associated with these tags has changed and needs refreshing.",
  "toolkit": {
    "name": "ArcadeVercelApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "project_id_or_name",
        "required": true,
        "description": "Specify the project ID or name for which the cache tags should be marked as stale.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "projectIdOrName"
      },
      {
        "name": "team_id",
        "required": false,
        "description": "The Team identifier to execute the request for. Provide the team's unique ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The Team identifier to perform the request on behalf of."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "teamId"
      },
      {
        "name": "team_slug",
        "required": false,
        "description": "The identifier (slug) for the team to perform the request on their behalf.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The Team slug to perform the request on behalf of."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "slug"
      },
      {
        "name": "cache_invalidation_request",
        "required": false,
        "description": "JSON object containing 'tags' for cache entry identifiers and a 'target' environment ('production' or 'preview').",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "tags": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "target": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "production",
                "preview"
              ],
              "properties": null,
              "inner_properties": null,
              "description": null
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'invalidateByTags'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "VERCEL_ACCESS_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the vercel API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.vercel.com/v1/edge-cache/invalidate-by-tags",
    "http_method": "POST",
    "headers": {
      "Content-Type": "application/json"
    },
    "parameters": [
      {
        "name": "projectIdOrName",
        "tool_parameter_name": "project_id_or_name",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "teamId",
        "tool_parameter_name": "team_id",
        "description": "The Team identifier to perform the request on behalf of.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The Team identifier to perform the request on behalf of."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "slug",
        "tool_parameter_name": "team_slug",
        "description": "The Team slug to perform the request on behalf of.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The Team slug to perform the request on behalf of."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "cache_invalidation_request",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "tags": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "target": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "production",
                "preview"
              ],
              "properties": null,
              "inner_properties": null,
              "description": null
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "VERCEL_ACCESS_TOKEN",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"additionalProperties\": false,\n        \"type\": \"object\",\n        \"required\": [\n          \"tags\"\n        ],\n        \"properties\": {\n          \"tags\": {\n            \"oneOf\": [\n              {\n                \"items\": {\n                  \"maxLength\": 256,\n                  \"type\": \"string\"\n                },\n                \"maxItems\": 16,\n                \"minItems\": 1,\n                \"type\": \"array\"\n              },\n              {\n                \"maxLength\": 8196,\n                \"type\": \"string\"\n              }\n            ]\n          },\n          \"target\": {\n            \"enum\": [\n              \"production\",\n              \"preview\"\n            ],\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
