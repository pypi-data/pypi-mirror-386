{
  "name": "ListDataObjects",
  "fully_qualified_name": "WeaviateApi.ListDataObjects@0.1.0",
  "description": "Retrieve a list of data objects from a specified collection.\n\nUse this tool to get a list of data objects from a particular collection by providing the collection name parameter. The objects are returned in reverse order of creation.",
  "toolkit": {
    "name": "ArcadeWeaviateApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "threshold_uuid_after",
        "required": false,
        "description": "A UUID to retrieve objects after, excluding this object. Use with `class` and `limit`. Leave empty for the start.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A threshold UUID of the objects to retrieve after, using an UUID-based ordering. This object is not part of the set. <br/><br/>Must be used with collection name (`class`), typically in conjunction with `limit`. <br/><br/>Note `after` cannot be used with `offset` or `sort`. <br/><br/>For a null value similar to offset=0, set an empty string in the request, i.e. `after=` or `after`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "after"
      },
      {
        "name": "query_start_index",
        "required": false,
        "description": "The starting index for the result window. Retrieves `offset+limit` results and returns `limit` results from this index onward. Cannot be used with `after`. Should be used with `limit`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The starting index of the result window. Note `offset` will retrieve `offset+limit` results and return `limit` results from the object with index `offset` onwards. Limited by the value of `QUERY_MAXIMUM_RESULTS`. <br/><br/>Should be used in conjunction with `limit`. <br/><br/>Cannot be used with `after`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "offset"
      },
      {
        "name": "maximum_items_per_page",
        "required": false,
        "description": "The maximum number of items to be returned per page. The default is 25 unless set otherwise as an environment variable.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of items to be returned per page. The default is 25 unless set otherwise as an environment variable."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "include_additional_information",
        "required": false,
        "description": "Include additional information types such as `classification`, `vector`, or `interpretation`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Include additional information, such as classification information. Allowed values include: `classification`, `vector` and `interpretation`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "include"
      },
      {
        "name": "sort_properties",
        "required": false,
        "description": "Names of properties to sort by, e.g., 'city' or 'country,city'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Name(s) of the property to sort by - e.g. `city`, or `country,city`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Specify how to order the data within the sorted field(s). Use 'asc' for ascending and 'desc' for descending. Should match the order of fields used in `sort`. Multiple values should be separated by commas.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Order parameter to tell how to order (asc or desc) data within given field. Should be used in conjunction with `sort` parameter. If providing multiple `sort` values, provide multiple `order` values in corresponding order, e.g.: `sort=author_name,title&order=desc,asc`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "order"
      },
      {
        "name": "collection_name",
        "required": false,
        "description": "Specifies the collection name to query objects from. If not provided, no objects will be returned.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The collection from which to query objects.  <br/><br/>Note that if the collection name (`class`) is not provided, the response will not include any objects."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "class"
      },
      {
        "name": "tenant_identifier",
        "required": false,
        "description": "Specifies the tenant for requests targeting a multi-tenant collection (class).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the tenant in a request targeting a multi-tenant collection (class)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "tenant"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'objects.list'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "WEAVIATE_API_KEY"
      },
      {
        "key": "WEAVIATE_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the weaviate API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{weaviate_server_url}/v1/objects",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "after",
        "tool_parameter_name": "threshold_uuid_after",
        "description": "A threshold UUID of the objects to retrieve after, using an UUID-based ordering. This object is not part of the set. <br/><br/>Must be used with collection name (`class`), typically in conjunction with `limit`. <br/><br/>Note `after` cannot be used with `offset` or `sort`. <br/><br/>For a null value similar to offset=0, set an empty string in the request, i.e. `after=` or `after`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A threshold UUID of the objects to retrieve after, using an UUID-based ordering. This object is not part of the set. <br/><br/>Must be used with collection name (`class`), typically in conjunction with `limit`. <br/><br/>Note `after` cannot be used with `offset` or `sort`. <br/><br/>For a null value similar to offset=0, set an empty string in the request, i.e. `after=` or `after`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "offset",
        "tool_parameter_name": "query_start_index",
        "description": "The starting index of the result window. Note `offset` will retrieve `offset+limit` results and return `limit` results from the object with index `offset` onwards. Limited by the value of `QUERY_MAXIMUM_RESULTS`. <br/><br/>Should be used in conjunction with `limit`. <br/><br/>Cannot be used with `after`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The starting index of the result window. Note `offset` will retrieve `offset+limit` results and return `limit` results from the object with index `offset` onwards. Limited by the value of `QUERY_MAXIMUM_RESULTS`. <br/><br/>Should be used in conjunction with `limit`. <br/><br/>Cannot be used with `after`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 0,
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "maximum_items_per_page",
        "description": "The maximum number of items to be returned per page. The default is 25 unless set otherwise as an environment variable.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum number of items to be returned per page. The default is 25 unless set otherwise as an environment variable."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "include",
        "tool_parameter_name": "include_additional_information",
        "description": "Include additional information, such as classification information. Allowed values include: `classification`, `vector` and `interpretation`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Include additional information, such as classification information. Allowed values include: `classification`, `vector` and `interpretation`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_properties",
        "description": "Name(s) of the property to sort by - e.g. `city`, or `country,city`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Name(s) of the property to sort by - e.g. `city`, or `country,city`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "order",
        "tool_parameter_name": "sort_order",
        "description": "Order parameter to tell how to order (asc or desc) data within given field. Should be used in conjunction with `sort` parameter. If providing multiple `sort` values, provide multiple `order` values in corresponding order, e.g.: `sort=author_name,title&order=desc,asc`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Order parameter to tell how to order (asc or desc) data within given field. Should be used in conjunction with `sort` parameter. If providing multiple `sort` values, provide multiple `order` values in corresponding order, e.g.: `sort=author_name,title&order=desc,asc`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "class",
        "tool_parameter_name": "collection_name",
        "description": "The collection from which to query objects.  <br/><br/>Note that if the collection name (`class`) is not provided, the response will not include any objects.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The collection from which to query objects.  <br/><br/>Note that if the collection name (`class`) is not provided, the response will not include any objects."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "tenant",
        "tool_parameter_name": "tenant_identifier",
        "description": "Specifies the tenant in a request targeting a multi-tenant collection (class).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the tenant in a request targeting a multi-tenant collection (class)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "WEAVIATE_API_KEY",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "WEAVIATE_SERVER_URL",
        "parameter_name": "weaviate_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
