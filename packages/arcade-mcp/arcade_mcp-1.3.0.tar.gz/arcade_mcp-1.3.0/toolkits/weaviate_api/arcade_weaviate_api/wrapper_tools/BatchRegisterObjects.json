{
  "name": "BatchRegisterObjects",
  "fully_qualified_name": "WeaviateApi.BatchRegisterObjects@0.1.0",
  "description": "Register multiple data objects in a single request.\n\nThis tool registers multiple data objects in one request for efficiency. It validates metadata and schema values for each object. The operation is idempotent, meaning if an object with a given UUID already exists, it will be overwritten.",
  "toolkit": {
    "name": "ArcadeWeaviateApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "data_objects_to_register",
        "required": true,
        "description": "A JSON array containing objects to be created. Each object includes details like class name, properties, UUID, vectors, and optional vector weights.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "fields": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Controls which fields are returned in the response for each object. Default is `ALL`."
            },
            "objects": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "class": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Name of the collection (class) the object belongs to."
                },
                "vectorWeights": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Allow custom overrides of vector weights as math expressions. E.g. `pancake`: `7` will set the weight for the word pancake to 7 in the vectorization, whereas `w * 3` would triple the originally calculated word. This is an open object, with OpenAPI Specification 3.0 this will be more detailed. See Weaviate docs for more info. In the future this will become a key/value (string/string) object."
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Names and values of an individual property. A returned response may also contain additional metadata, such as from classification or feature projection."
                },
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The UUID of the object."
                },
                "creationTimeUnix": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Timestamp of creation of this object in milliseconds since epoch UTC."
                },
                "lastUpdateTimeUnix": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Timestamp of the last object update in milliseconds since epoch UTC."
                },
                "vector": {
                  "val_type": "array",
                  "inner_val_type": "number",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A vector representation of the object in the Contextionary. If provided at object creation, this wil take precedence over any vectorizer setting."
                },
                "vectors": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A map of named vectors for multi-vector representations."
                },
                "tenant": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the tenant the object belongs to."
                },
                "additional": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Additional meta information about a single object."
                }
              },
              "description": "Array of objects to be created."
            }
          },
          "inner_properties": null,
          "description": "The request body containing the objects to be created."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      },
      {
        "name": "consistency_level",
        "required": false,
        "description": "Specifies how many replicas must confirm a request for it to be successful.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Determines how many replicas must acknowledge a request before it is considered successful."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "consistency_level"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'batch.objects.create'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "WEAVIATE_API_KEY"
      },
      {
        "key": "WEAVIATE_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the weaviate API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{weaviate_server_url}/v1/batch/objects",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "consistency_level",
        "tool_parameter_name": "consistency_level",
        "description": "Determines how many replicas must acknowledge a request before it is considered successful.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Determines how many replicas must acknowledge a request before it is considered successful."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "data_objects_to_register",
        "description": "The request body containing the objects to be created.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "fields": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Controls which fields are returned in the response for each object. Default is `ALL`."
            },
            "objects": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "class": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Name of the collection (class) the object belongs to."
                },
                "vectorWeights": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Allow custom overrides of vector weights as math expressions. E.g. `pancake`: `7` will set the weight for the word pancake to 7 in the vectorization, whereas `w * 3` would triple the originally calculated word. This is an open object, with OpenAPI Specification 3.0 this will be more detailed. See Weaviate docs for more info. In the future this will become a key/value (string/string) object."
                },
                "properties": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Names and values of an individual property. A returned response may also contain additional metadata, such as from classification or feature projection."
                },
                "id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The UUID of the object."
                },
                "creationTimeUnix": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Timestamp of creation of this object in milliseconds since epoch UTC."
                },
                "lastUpdateTimeUnix": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Timestamp of the last object update in milliseconds since epoch UTC."
                },
                "vector": {
                  "val_type": "array",
                  "inner_val_type": "number",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A vector representation of the object in the Contextionary. If provided at object creation, this wil take precedence over any vectorizer setting."
                },
                "vectors": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "A map of named vectors for multi-vector representations."
                },
                "tenant": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The name of the tenant the object belongs to."
                },
                "additional": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "(Response only) Additional meta information about a single object."
                }
              },
              "description": "Array of objects to be created."
            }
          },
          "inner_properties": null,
          "description": "The request body containing the objects to be created."
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "WEAVIATE_API_KEY",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "WEAVIATE_SERVER_URL",
        "parameter_name": "weaviate_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"description\": \"The request body containing the objects to be created.\",\n  \"content\": {\n    \"application/yaml\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fields\": {\n            \"type\": \"array\",\n            \"description\": \"Controls which fields are returned in the response for each object. Default is `ALL`.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"default\": \"ALL\",\n              \"enum\": [\n                \"ALL\",\n                \"class\",\n                \"schema\",\n                \"id\",\n                \"creationTimeUnix\"\n              ]\n            }\n          },\n          \"objects\": {\n            \"type\": \"array\",\n            \"description\": \"Array of objects to be created.\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"class\": {\n                  \"type\": \"string\",\n                  \"description\": \"Name of the collection (class) the object belongs to.\"\n                },\n                \"vectorWeights\": {\n                  \"type\": \"object\",\n                  \"description\": \"Allow custom overrides of vector weights as math expressions. E.g. `pancake`: `7` will set the weight for the word pancake to 7 in the vectorization, whereas `w * 3` would triple the originally calculated word. This is an open object, with OpenAPI Specification 3.0 this will be more detailed. See Weaviate docs for more info. In the future this will become a key/value (string/string) object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"description\": \"Names and values of an individual property. A returned response may also contain additional metadata, such as from classification or feature projection.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The UUID of the object.\",\n                  \"format\": \"uuid\"\n                },\n                \"creationTimeUnix\": {\n                  \"type\": \"integer\",\n                  \"description\": \"(Response only) Timestamp of creation of this object in milliseconds since epoch UTC.\",\n                  \"format\": \"int64\"\n                },\n                \"lastUpdateTimeUnix\": {\n                  \"type\": \"integer\",\n                  \"description\": \"(Response only) Timestamp of the last object update in milliseconds since epoch UTC.\",\n                  \"format\": \"int64\"\n                },\n                \"vector\": {\n                  \"type\": \"array\",\n                  \"description\": \"A vector representation of the object in the Contextionary. If provided at object creation, this wil take precedence over any vectorizer setting.\",\n                  \"items\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  }\n                },\n                \"vectors\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"description\": \"A vector representation of the object. If provided at object creation, this wil take precedence over any vectorizer setting.\"\n                  },\n                  \"description\": \"A map of named vectors for multi-vector representations.\"\n                },\n                \"tenant\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the tenant the object belongs to.\"\n                },\n                \"additional\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"properties\": {}\n                  },\n                  \"description\": \"(Response only) Additional meta information about a single object.\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"fields\": {\n            \"type\": \"array\",\n            \"description\": \"Controls which fields are returned in the response for each object. Default is `ALL`.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"default\": \"ALL\",\n              \"enum\": [\n                \"ALL\",\n                \"class\",\n                \"schema\",\n                \"id\",\n                \"creationTimeUnix\"\n              ]\n            }\n          },\n          \"objects\": {\n            \"type\": \"array\",\n            \"description\": \"Array of objects to be created.\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"class\": {\n                  \"type\": \"string\",\n                  \"description\": \"Name of the collection (class) the object belongs to.\"\n                },\n                \"vectorWeights\": {\n                  \"type\": \"object\",\n                  \"description\": \"Allow custom overrides of vector weights as math expressions. E.g. `pancake`: `7` will set the weight for the word pancake to 7 in the vectorization, whereas `w * 3` would triple the originally calculated word. This is an open object, with OpenAPI Specification 3.0 this will be more detailed. See Weaviate docs for more info. In the future this will become a key/value (string/string) object.\"\n                },\n                \"properties\": {\n                  \"type\": \"object\",\n                  \"description\": \"Names and values of an individual property. A returned response may also contain additional metadata, such as from classification or feature projection.\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"The UUID of the object.\",\n                  \"format\": \"uuid\"\n                },\n                \"creationTimeUnix\": {\n                  \"type\": \"integer\",\n                  \"description\": \"(Response only) Timestamp of creation of this object in milliseconds since epoch UTC.\",\n                  \"format\": \"int64\"\n                },\n                \"lastUpdateTimeUnix\": {\n                  \"type\": \"integer\",\n                  \"description\": \"(Response only) Timestamp of the last object update in milliseconds since epoch UTC.\",\n                  \"format\": \"int64\"\n                },\n                \"vector\": {\n                  \"type\": \"array\",\n                  \"description\": \"A vector representation of the object in the Contextionary. If provided at object creation, this wil take precedence over any vectorizer setting.\",\n                  \"items\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\"\n                  }\n                },\n                \"vectors\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"description\": \"A vector representation of the object. If provided at object creation, this wil take precedence over any vectorizer setting.\"\n                  },\n                  \"description\": \"A map of named vectors for multi-vector representations.\"\n                },\n                \"tenant\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the tenant the object belongs to.\"\n                },\n                \"additional\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"object\",\n                    \"properties\": {}\n                  },\n                  \"description\": \"(Response only) Additional meta information about a single object.\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
