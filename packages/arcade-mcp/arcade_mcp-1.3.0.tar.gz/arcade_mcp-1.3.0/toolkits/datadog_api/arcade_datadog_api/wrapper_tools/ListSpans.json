{
  "name": "ListSpans",
  "fully_qualified_name": "DatadogApi.ListSpans@0.1.0",
  "description": "Fetch spans based on a search query with pagination.\n\nThis tool retrieves spans from Datadog that match a specified search query. Use it to filter and search spans for analysis or monitoring. Note that the endpoint supports paginated results and is subject to rate limits of 300 requests per hour.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "minimum_time_filter",
        "required": false,
        "description": "The minimum time for the requested spans. Supports ISO8601, date math, and timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.filter.from"
      },
      {
        "name": "span_search_query",
        "required": false,
        "description": "The search query string following the span search syntax to filter spans.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The search query - following the span search syntax."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.filter.query"
      },
      {
        "name": "end_time_filter",
        "required": false,
        "description": "The maximum time for requested spans. Supports ISO8601, date math, or timestamps in milliseconds.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.filter.to"
      },
      {
        "name": "time_offset_seconds",
        "required": false,
        "description": "The time offset in seconds to apply to the query for adjusting the time frame.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The time offset (in seconds) to apply to the query."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.options.timeOffset"
      },
      {
        "name": "timezone_option",
        "required": false,
        "description": "Specify the timezone using GMT, UTC, an offset (e.g., UTC+1), or a Timezone Database ID (e.g., America/New_York).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.options.timezone"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "A string cursor to fetch the next set of results from the previous query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.page.cursor"
      },
      {
        "name": "max_number_of_spans",
        "required": false,
        "description": "Maximum number of spans to return in the response. Integer value expected.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of spans in the response."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.page.limit"
      },
      {
        "name": "sort_order_for_spans",
        "required": false,
        "description": "Set the sort order for querying spans. Use 'timestamp' for ascending or '-timestamp' for descending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sort parameters when querying spans."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.sort"
      },
      {
        "name": "resource_type",
        "required": false,
        "description": "The type of resource; must be set to 'search_request' for the query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "search_request"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The type of resource. The value should always be search_request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.type"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'ListSpans'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/spans/events/search",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "data.attributes.filter.from",
        "tool_parameter_name": "minimum_time_filter",
        "description": "The minimum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "now-15m",
        "documentation_urls": []
      },
      {
        "name": "data.attributes.filter.query",
        "tool_parameter_name": "span_search_query",
        "description": "The search query - following the span search syntax.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The search query - following the span search syntax."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "*",
        "documentation_urls": []
      },
      {
        "name": "data.attributes.filter.to",
        "tool_parameter_name": "end_time_filter",
        "description": "The maximum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "now",
        "documentation_urls": []
      },
      {
        "name": "data.attributes.options.timeOffset",
        "tool_parameter_name": "time_offset_seconds",
        "description": "The time offset (in seconds) to apply to the query.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The time offset (in seconds) to apply to the query."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.attributes.options.timezone",
        "tool_parameter_name": "timezone_option",
        "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "UTC",
        "documentation_urls": []
      },
      {
        "name": "data.attributes.page.cursor",
        "tool_parameter_name": "pagination_cursor",
        "description": "List following results with a cursor provided in the previous query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.attributes.page.limit",
        "tool_parameter_name": "max_number_of_spans",
        "description": "Maximum number of spans in the response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of spans in the response."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      },
      {
        "name": "data.attributes.sort",
        "tool_parameter_name": "sort_order_for_spans",
        "description": "Sort parameters when querying spans.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sort parameters when querying spans."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.type",
        "tool_parameter_name": "resource_type",
        "description": "The type of resource. The value should always be search_request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "search_request"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The type of resource. The value should always be search_request."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "search_request",
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"description\": \"The request for a spans list.\",\n        \"properties\": {\n          \"data\": {\n            \"description\": \"The object containing the query content.\",\n            \"properties\": {\n              \"attributes\": {\n                \"description\": \"The object containing all the query parameters.\",\n                \"properties\": {\n                  \"filter\": {\n                    \"description\": \"The search and filter query settings.\",\n                    \"properties\": {\n                      \"from\": {\n                        \"default\": \"now-15m\",\n                        \"description\": \"The minimum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds).\",\n                        \"example\": \"now-15m\",\n                        \"type\": \"string\"\n                      },\n                      \"query\": {\n                        \"default\": \"*\",\n                        \"description\": \"The search query - following the span search syntax.\",\n                        \"example\": \"service:web* AND @http.status_code:[200 TO 299]\",\n                        \"type\": \"string\"\n                      },\n                      \"to\": {\n                        \"default\": \"now\",\n                        \"description\": \"The maximum time for the requested spans, supports date-time ISO8601, date math, and regular timestamps (milliseconds).\",\n                        \"example\": \"now\",\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"options\": {\n                    \"description\": \"Global query options that are used during the query.\\nNote: You should only supply timezone or time offset but not both otherwise the query will fail.\",\n                    \"properties\": {\n                      \"timeOffset\": {\n                        \"description\": \"The time offset (in seconds) to apply to the query.\",\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                      },\n                      \"timezone\": {\n                        \"default\": \"UTC\",\n                        \"description\": \"The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York).\",\n                        \"example\": \"GMT\",\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"page\": {\n                    \"description\": \"Paging attributes for listing spans.\",\n                    \"properties\": {\n                      \"cursor\": {\n                        \"description\": \"List following results with a cursor provided in the previous query.\",\n                        \"example\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n                        \"type\": \"string\"\n                      },\n                      \"limit\": {\n                        \"default\": 10,\n                        \"description\": \"Maximum number of spans in the response.\",\n                        \"example\": 25,\n                        \"format\": \"int32\",\n                        \"maximum\": 1000,\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"sort\": {\n                    \"description\": \"Sort parameters when querying spans.\",\n                    \"enum\": [\n                      \"timestamp\",\n                      \"-timestamp\"\n                    ],\n                    \"type\": \"string\",\n                    \"x-enum-varnames\": [\n                      \"TIMESTAMP_ASCENDING\",\n                      \"TIMESTAMP_DESCENDING\"\n                    ]\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"type\": {\n                \"default\": \"search_request\",\n                \"description\": \"The type of resource. The value should always be search_request.\",\n                \"enum\": [\n                  \"search_request\"\n                ],\n                \"example\": \"search_request\",\n                \"type\": \"string\",\n                \"x-enum-varnames\": [\n                  \"SEARCH_REQUEST\"\n                ]\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
