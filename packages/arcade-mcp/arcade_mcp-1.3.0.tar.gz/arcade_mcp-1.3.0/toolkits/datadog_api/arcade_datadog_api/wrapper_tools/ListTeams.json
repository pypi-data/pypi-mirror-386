{
  "name": "ListTeams",
  "fully_qualified_name": "DatadogApi.ListTeams@0.1.0",
  "description": "Retrieve all teams with optional filters.\n\nFetches a list of all teams, allowing optional filters by keyword or user.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "page_number",
        "required": false,
        "description": "The specific page number to return for the list of teams.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specific page number to return."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[number]"
      },
      {
        "name": "page_size",
        "required": false,
        "description": "Specify the number of teams to return per page, up to a maximum of 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Size for a given page. The maximum allowed value is 100."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[size]"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Determines the order of the returned teams. Options: 'name', '-name', 'user_count', '-user_count'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "name",
            "-name",
            "user_count",
            "-user_count"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the order of the returned teams"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "include_related_resources",
        "required": false,
        "description": "Specify related resources to include. Options: `team_links`, `user_team_permissions`.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "include"
      },
      {
        "name": "search_query_for_teams",
        "required": false,
        "description": "Search for teams by name, handle, or team member email.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query. Can be team name, team handle, or email of team member"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter[keyword]"
      },
      {
        "name": "fields_to_fetch",
        "required": false,
        "description": "List of fields to retrieve for each team.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List of fields that need to be fetched."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields[team]"
      },
      {
        "name": "include_only_user_teams",
        "required": false,
        "description": "When true, only teams the current user belongs to are returned.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "When true, only returns teams the current user belongs to"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter[me]"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'ListTeams'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/team",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "page[number]",
        "tool_parameter_name": "page_number",
        "description": "Specific page number to return.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specific page number to return."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 0,
        "documentation_urls": []
      },
      {
        "name": "page[size]",
        "tool_parameter_name": "page_size",
        "description": "Size for a given page. The maximum allowed value is 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Size for a given page. The maximum allowed value is 100."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_order",
        "description": "Specifies the order of the returned teams",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "name",
            "-name",
            "user_count",
            "-user_count"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the order of the returned teams"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "include",
        "tool_parameter_name": "include_related_resources",
        "description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Included related resources optionally requested. Allowed enum values: `team_links, user_team_permissions`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter[keyword]",
        "tool_parameter_name": "search_query_for_teams",
        "description": "Search query. Can be team name, team handle, or email of team member",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query. Can be team name, team handle, or email of team member"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter[me]",
        "tool_parameter_name": "include_only_user_teams",
        "description": "When true, only returns teams the current user belongs to",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "When true, only returns teams the current user belongs to"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "fields[team]",
        "tool_parameter_name": "fields_to_fetch",
        "description": "List of fields that need to be fetched.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List of fields that need to be fetched."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
