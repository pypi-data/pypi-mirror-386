{
  "name": "ListRumEvents",
  "fully_qualified_name": "DatadogApi.ListRumEvents@0.1.0",
  "description": "Retrieve RUM events matching a search query.\n\nThis tool is used to list RUM (Real User Monitoring) events that match a specific search query. It's useful for retrieving your latest RUM events, and results are paginated to handle large datasets.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "rum_search_query",
        "required": false,
        "description": "Search query following RUM syntax for filtering events.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query following RUM syntax."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter[query]"
      },
      {
        "name": "minimum_timestamp",
        "required": false,
        "description": "The starting timestamp for the requested RUM events. Use a string format compatible with the API.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Minimum timestamp for requested events."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter[from]"
      },
      {
        "name": "maximum_timestamp",
        "required": false,
        "description": "Maximum timestamp for requested events in ISO 8601 format.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum timestamp for requested events."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter[to]"
      },
      {
        "name": "event_sort_order",
        "required": false,
        "description": "Specify the order of events: 'timestamp' for ascending or '-timestamp' for descending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Order of events in results."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "Cursor for fetching the next set of paginated results in the queried RUM events.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[cursor]"
      },
      {
        "name": "maximum_event_count",
        "required": false,
        "description": "Specify the maximum number of events to retrieve in a single response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of events in the response."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[limit]"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'ListRUMEvents'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/rum/events",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "filter[query]",
        "tool_parameter_name": "rum_search_query",
        "description": "Search query following RUM syntax.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query following RUM syntax."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter[from]",
        "tool_parameter_name": "minimum_timestamp",
        "description": "Minimum timestamp for requested events.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Minimum timestamp for requested events."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter[to]",
        "tool_parameter_name": "maximum_timestamp",
        "description": "Maximum timestamp for requested events.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum timestamp for requested events."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "event_sort_order",
        "description": "Order of events in results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Order of events in results."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page[cursor]",
        "tool_parameter_name": "pagination_cursor",
        "description": "List following results with a cursor provided in the previous query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page[limit]",
        "tool_parameter_name": "maximum_event_count",
        "description": "Maximum number of events in the response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of events in the response."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
