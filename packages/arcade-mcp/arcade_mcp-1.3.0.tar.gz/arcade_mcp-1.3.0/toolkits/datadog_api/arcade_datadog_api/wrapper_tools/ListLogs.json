{
  "name": "ListLogs",
  "fully_qualified_name": "DatadogApi.ListLogs@0.1.0",
  "description": "Retrieve logs based on a search query with pagination.\n\nUse this tool to search and filter logs according to specified criteria. Note that results are paginated. Consider Datadog's archive capabilities for organizational log archiving needs.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "minimum_time",
        "required": false,
        "description": "The minimum time for the requested logs, supports date math and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum time for the requested logs, supports date math and regular timestamps (milliseconds)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter.from"
      },
      {
        "name": "indexes_to_search",
        "required": false,
        "description": "Specify the indexes to search. Defaults to ['*'] for all indexes.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For customers with multiple indexes, the indexes to search. Defaults to ['*'] which means all indexes."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter.indexes"
      },
      {
        "name": "search_query",
        "required": false,
        "description": "The search query following Datadog's log search syntax to filter logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The search query - following the log search syntax."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter.query"
      },
      {
        "name": "storage_type",
        "required": false,
        "description": "Specify the storage type: \"indexes\", \"online-archives\", or \"flex\".",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "indexes",
            "online-archives",
            "flex"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Specifies storage type as indexes, online-archives or flex"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter.storage_tier"
      },
      {
        "name": "max_log_time",
        "required": false,
        "description": "The maximum time for the requested logs. Supports date math and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum time for the requested logs, supports date math and regular timestamps (milliseconds)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter.to"
      },
      {
        "name": "time_offset_seconds",
        "required": false,
        "description": "The time offset in seconds to apply to the log search query.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The time offset (in seconds) to apply to the query."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "options.timeOffset"
      },
      {
        "name": "query_timezone",
        "required": false,
        "description": "Specify the timezone as GMT, UTC, an offset (e.g., UTC+1), or a Timezone Database ID (e.g., America/New_York).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "options.timezone"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "Cursor for retrieving the next set of paginated log results from a previous query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page.cursor"
      },
      {
        "name": "maximum_logs_in_response",
        "required": false,
        "description": "Specifies the maximum number of logs to return in the response, allowing control over pagination size.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of logs in the response."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page.limit"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Defines how logs are sorted: 'timestamp' for ascending order and '-timestamp' for descending order.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sort parameters when querying logs."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'ListLogs'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/logs/events/search",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "filter.from",
        "tool_parameter_name": "minimum_time",
        "description": "The minimum time for the requested logs, supports date math and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The minimum time for the requested logs, supports date math and regular timestamps (milliseconds)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "now-15m",
        "documentation_urls": []
      },
      {
        "name": "filter.indexes",
        "tool_parameter_name": "indexes_to_search",
        "description": "For customers with multiple indexes, the indexes to search. Defaults to ['*'] which means all indexes.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For customers with multiple indexes, the indexes to search. Defaults to ['*'] which means all indexes."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": [
          "*"
        ],
        "documentation_urls": []
      },
      {
        "name": "filter.query",
        "tool_parameter_name": "search_query",
        "description": "The search query - following the log search syntax.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The search query - following the log search syntax."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "*",
        "documentation_urls": []
      },
      {
        "name": "filter.storage_tier",
        "tool_parameter_name": "storage_type",
        "description": "Specifies storage type as indexes, online-archives or flex",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "indexes",
            "online-archives",
            "flex"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Specifies storage type as indexes, online-archives or flex"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "indexes",
        "documentation_urls": []
      },
      {
        "name": "filter.to",
        "tool_parameter_name": "max_log_time",
        "description": "The maximum time for the requested logs, supports date math and regular timestamps (milliseconds).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The maximum time for the requested logs, supports date math and regular timestamps (milliseconds)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "now",
        "documentation_urls": []
      },
      {
        "name": "options.timeOffset",
        "tool_parameter_name": "time_offset_seconds",
        "description": "The time offset (in seconds) to apply to the query.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The time offset (in seconds) to apply to the query."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "options.timezone",
        "tool_parameter_name": "query_timezone",
        "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York)."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "UTC",
        "documentation_urls": []
      },
      {
        "name": "page.cursor",
        "tool_parameter_name": "pagination_cursor",
        "description": "List following results with a cursor provided in the previous query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous query."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page.limit",
        "tool_parameter_name": "maximum_logs_in_response",
        "description": "Maximum number of logs in the response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of logs in the response."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_order",
        "description": "Sort parameters when querying logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "timestamp",
            "-timestamp"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sort parameters when querying logs."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"description\": \"The request for a logs list.\",\n        \"properties\": {\n          \"filter\": {\n            \"description\": \"The search and filter query settings\",\n            \"properties\": {\n              \"from\": {\n                \"default\": \"now-15m\",\n                \"description\": \"The minimum time for the requested logs, supports date math and regular timestamps (milliseconds).\",\n                \"example\": \"now-15m\",\n                \"type\": \"string\"\n              },\n              \"indexes\": {\n                \"default\": [\n                  \"*\"\n                ],\n                \"description\": \"For customers with multiple indexes, the indexes to search. Defaults to ['*'] which means all indexes.\",\n                \"example\": [\n                  \"main\",\n                  \"web\"\n                ],\n                \"items\": {\n                  \"description\": \"The name of a log index.\",\n                  \"type\": \"string\"\n                },\n                \"type\": \"array\"\n              },\n              \"query\": {\n                \"default\": \"*\",\n                \"description\": \"The search query - following the log search syntax.\",\n                \"example\": \"service:web* AND @http.status_code:[200 TO 299]\",\n                \"type\": \"string\"\n              },\n              \"storage_tier\": {\n                \"default\": \"indexes\",\n                \"description\": \"Specifies storage type as indexes, online-archives or flex\",\n                \"enum\": [\n                  \"indexes\",\n                  \"online-archives\",\n                  \"flex\"\n                ],\n                \"example\": \"indexes\",\n                \"type\": \"string\",\n                \"x-enum-varnames\": [\n                  \"INDEXES\",\n                  \"ONLINE_ARCHIVES\",\n                  \"FLEX\"\n                ]\n              },\n              \"to\": {\n                \"default\": \"now\",\n                \"description\": \"The maximum time for the requested logs, supports date math and regular timestamps (milliseconds).\",\n                \"example\": \"now\",\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"options\": {\n            \"deprecated\": true,\n            \"description\": \"Global query options that are used during the query.\\nNote: These fields are currently deprecated and do not affect the query results.\",\n            \"properties\": {\n              \"timeOffset\": {\n                \"description\": \"The time offset (in seconds) to apply to the query.\",\n                \"format\": \"int64\",\n                \"type\": \"integer\"\n              },\n              \"timezone\": {\n                \"default\": \"UTC\",\n                \"description\": \"The timezone can be specified as GMT, UTC, an offset from UTC (like UTC+1), or as a Timezone Database identifier (like America/New_York).\",\n                \"example\": \"GMT\",\n                \"type\": \"string\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"page\": {\n            \"description\": \"Paging attributes for listing logs.\",\n            \"properties\": {\n              \"cursor\": {\n                \"description\": \"List following results with a cursor provided in the previous query.\",\n                \"example\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n                \"type\": \"string\"\n              },\n              \"limit\": {\n                \"default\": 10,\n                \"description\": \"Maximum number of logs in the response.\",\n                \"example\": 25,\n                \"format\": \"int32\",\n                \"maximum\": 1000,\n                \"type\": \"integer\"\n              }\n            },\n            \"type\": \"object\"\n          },\n          \"sort\": {\n            \"description\": \"Sort parameters when querying logs.\",\n            \"enum\": [\n              \"timestamp\",\n              \"-timestamp\"\n            ],\n            \"type\": \"string\",\n            \"x-enum-varnames\": [\n              \"TIMESTAMP_ASCENDING\",\n              \"TIMESTAMP_DESCENDING\"\n            ]\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": false\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
