{
  "name": "GetAggregatedDnsTraffic",
  "fully_qualified_name": "DatadogApi.GetAggregatedDnsTraffic@0.1.0",
  "description": "Retrieve all aggregated DNS traffic data.\n\nThis tool fetches all the aggregated DNS traffic data using Datadog's API. It should be called when you need information about DNS traffic patterns or metrics.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "start_query_timestamp",
        "required": false,
        "description": "Unix timestamp for the query window start. Defaults to 15 min before `to` timestamp if not specified.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the start of the query window. If not provided, the start of the query window is 15 minutes before the `to` timestamp. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "from"
      },
      {
        "name": "end_timestamp",
        "required": false,
        "description": "Unix timestamp (seconds since epoch) for the end of the query window. Defaults to current time if not provided.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the end of the query window. If not provided, the end of the query window is the current time. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "to"
      },
      {
        "name": "group_dns_traffic_by_fields",
        "required": false,
        "description": "Comma-separated list of fields to group DNS traffic by. Defaults to `network.dns_query` if unspecified. Use `server_ungrouped` to avoid grouping. Maximum of 10 fields.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of fields to group DNS traffic by. The server side defaults to `network.dns_query` if unspecified. `server_ungrouped` may be used if groups are not desired. The maximum number of group_by(s) is 10."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "group_by"
      },
      {
        "name": "filter_dns_traffic_by_tags",
        "required": false,
        "description": "Comma-separated list of tags to filter the DNS traffic data within the query.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of tags to filter DNS traffic by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "tags"
      },
      {
        "name": "max_dns_entries",
        "required": false,
        "description": "Number of aggregated DNS entries to return, up to a maximum of 7500. Default is 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of aggregated DNS entries to be returned. The maximum value is 7500. The default is 100."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'GetAggregatedDns'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/network/dns/aggregate",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "from",
        "tool_parameter_name": "start_query_timestamp",
        "description": "Unix timestamp (number of seconds since epoch) of the start of the query window. If not provided, the start of the query window is 15 minutes before the `to` timestamp. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the start of the query window. If not provided, the start of the query window is 15 minutes before the `to` timestamp. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "to",
        "tool_parameter_name": "end_timestamp",
        "description": "Unix timestamp (number of seconds since epoch) of the end of the query window. If not provided, the end of the query window is the current time. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the end of the query window. If not provided, the end of the query window is the current time. If neither `from` nor `to` are provided, the query window is `[now - 15m, now]`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "group_by",
        "tool_parameter_name": "group_dns_traffic_by_fields",
        "description": "Comma-separated list of fields to group DNS traffic by. The server side defaults to `network.dns_query` if unspecified. `server_ungrouped` may be used if groups are not desired. The maximum number of group_by(s) is 10.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of fields to group DNS traffic by. The server side defaults to `network.dns_query` if unspecified. `server_ungrouped` may be used if groups are not desired. The maximum number of group_by(s) is 10."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "tags",
        "tool_parameter_name": "filter_dns_traffic_by_tags",
        "description": "Comma-separated list of tags to filter DNS traffic by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of tags to filter DNS traffic by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "max_dns_entries",
        "description": "The number of aggregated DNS entries to be returned. The maximum value is 7500. The default is 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of aggregated DNS entries to be returned. The maximum value is 7500. The default is 100."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 100,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
