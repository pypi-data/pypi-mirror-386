{
  "name": "ListAllOrganizationProcesses",
  "fully_qualified_name": "DatadogApi.ListAllOrganizationProcesses@0.1.0",
  "description": "Retrieve all processes for your organization from Datadog.\n\nThis tool is used to fetch a list of all processes associated with your organization in Datadog. It should be called when you need detailed information about the processes running across your organization's systems.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "search_string_for_processes",
        "required": false,
        "description": "String used to search and filter processes by specific criteria.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "String to search processes by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "search"
      },
      {
        "name": "filter_by_tags",
        "required": false,
        "description": "A comma-separated list of tags to filter the processes by. Use specific tags relevant to your organization's processes for targeted results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of tags to filter processes by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "tags"
      },
      {
        "name": "query_window_start_timestamp",
        "required": false,
        "description": "Unix timestamp marking the start of the query window. Defaults to 15 minutes before the end of the window if not provided.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "from"
      },
      {
        "name": "query_window_end_timestamp",
        "required": false,
        "description": "Unix timestamp (seconds since epoch) marking the end of the query window. Defaults to 15 minutes after 'from' if not provided. If 'from' and 'to' are omitted, defaults to 15 minutes from current time.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "to"
      },
      {
        "name": "max_results_per_page",
        "required": false,
        "description": "Maximum number of process results to return in one page.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of results returned."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[limit]"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "String token to retrieve the next page of process results. Use the value from `meta.page.after` provided in the previous API response.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page[cursor]"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'ListProcesses'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/processes",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "search",
        "tool_parameter_name": "search_string_for_processes",
        "description": "String to search processes by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "String to search processes by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "tags",
        "tool_parameter_name": "filter_by_tags",
        "description": "Comma-separated list of tags to filter processes by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of tags to filter processes by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "from",
        "tool_parameter_name": "query_window_start_timestamp",
        "description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the start of the query window.\nIf not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "to",
        "tool_parameter_name": "query_window_end_timestamp",
        "description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unix timestamp (number of seconds since epoch) of the end of the query window.\nIf not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither\n`from` nor `to` are provided, the query window will be `[now - 15m, now]`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page[limit]",
        "tool_parameter_name": "max_results_per_page",
        "description": "Maximum number of results returned.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of results returned."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1000,
        "documentation_urls": []
      },
      {
        "name": "page[cursor]",
        "tool_parameter_name": "pagination_cursor",
        "description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "String to query the next page of results.\nThis key is provided with each valid response from the API in `meta.page.after`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
