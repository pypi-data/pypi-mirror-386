{
  "name": "SearchFlakyTests",
  "fully_qualified_name": "DatadogApi.SearchFlakyTests@0.1.0",
  "description": "Retrieve a list of flaky tests with pagination support.\n\nUse this tool to fetch information about flaky tests from the Flaky Test Management system. Useful for identifying tests that frequently fail or are unreliable.",
  "toolkit": {
    "name": "ArcadeDatadogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "filter_query",
        "required": false,
        "description": "Search query for filtering flaky tests using log syntax. Keys include 'flaky_test_state', 'flaky_test_category', '@test.name', '@test.suite', '@test.module', '@test.service', '@git.repository.id_v2', '@git.branch', '@test.codeowners', 'env'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query following log syntax used to filter flaky tests, same as on Flaky Tests Management UI. The supported search keys are:\n- `flaky_test_state`\n- `flaky_test_category`\n- `@test.name`\n- `@test.suite`\n- `@test.module`\n- `@test.service`\n- `@git.repository.id_v2`\n- `@git.branch`\n- `@test.codeowners`\n- `env`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.filter.query"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "A cursor from the previous request to fetch the following results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous request."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.page.cursor"
      },
      {
        "name": "maximum_flaky_tests_limit",
        "required": false,
        "description": "Specify the maximum number of flaky tests to include in the response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of flaky tests in the response."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.page.limit"
      },
      {
        "name": "sort_flaky_tests",
        "required": false,
        "description": "Sort flaky test results by specified criteria: FQN, first or last flaked, failure rate, etc. Use prefixed '-' for descending order.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "fqn",
            "-fqn",
            "first_flaked",
            "-first_flaked",
            "last_flaked",
            "-last_flaked",
            "failure_rate",
            "-failure_rate",
            "pipelines_failed",
            "-pipelines_failed",
            "pipelines_duration_lost",
            "-pipelines_duration_lost"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Parameter for sorting flaky test results. The default sort is by ascending Fully Qualified Name (FQN). The FQN is the concatenation of the test module, suite, and name."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.attributes.sort"
      },
      {
        "name": "request_data_type",
        "required": false,
        "description": "Defines the data structure type for the Flaky Tests Search request. Use 'search_flaky_tests_request'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "search_flaky_tests_request"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The definition of `FlakyTestsSearchRequestDataType` object."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.type"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'SearchFlakyTests'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "DATADOG_API_KEY"
      },
      {
        "key": "DATADOG_APPLICATION_KEY"
      },
      {
        "key": "DATADOG_BASE_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{datadog_base_url}/api/v2/test/flaky-test-management/tests",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "data.attributes.filter.query",
        "tool_parameter_name": "filter_query",
        "description": "Search query following log syntax used to filter flaky tests, same as on Flaky Tests Management UI. The supported search keys are:\n- `flaky_test_state`\n- `flaky_test_category`\n- `@test.name`\n- `@test.suite`\n- `@test.module`\n- `@test.service`\n- `@git.repository.id_v2`\n- `@git.branch`\n- `@test.codeowners`\n- `env`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search query following log syntax used to filter flaky tests, same as on Flaky Tests Management UI. The supported search keys are:\n- `flaky_test_state`\n- `flaky_test_category`\n- `@test.name`\n- `@test.suite`\n- `@test.module`\n- `@test.service`\n- `@git.repository.id_v2`\n- `@git.branch`\n- `@test.codeowners`\n- `env`"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "*",
        "documentation_urls": []
      },
      {
        "name": "data.attributes.page.cursor",
        "tool_parameter_name": "pagination_cursor",
        "description": "List following results with a cursor provided in the previous request.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List following results with a cursor provided in the previous request."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.attributes.page.limit",
        "tool_parameter_name": "maximum_flaky_tests_limit",
        "description": "Maximum number of flaky tests in the response.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Maximum number of flaky tests in the response."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      },
      {
        "name": "data.attributes.sort",
        "tool_parameter_name": "sort_flaky_tests",
        "description": "Parameter for sorting flaky test results. The default sort is by ascending Fully Qualified Name (FQN). The FQN is the concatenation of the test module, suite, and name.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "fqn",
            "-fqn",
            "first_flaked",
            "-first_flaked",
            "last_flaked",
            "-last_flaked",
            "failure_rate",
            "-failure_rate",
            "pipelines_failed",
            "-pipelines_failed",
            "pipelines_duration_lost",
            "-pipelines_duration_lost"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Parameter for sorting flaky test results. The default sort is by ascending Fully Qualified Name (FQN). The FQN is the concatenation of the test module, suite, and name."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.type",
        "tool_parameter_name": "request_data_type",
        "description": "The definition of `FlakyTestsSearchRequestDataType` object.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "search_flaky_tests_request"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The definition of `FlakyTestsSearchRequestDataType` object."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "DATADOG_API_KEY",
        "parameter_name": "DD-API-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_APPLICATION_KEY",
        "parameter_name": "DD-APPLICATION-KEY",
        "accepted_as": "header",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "DATADOG_BASE_URL",
        "parameter_name": "datadog_base_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"description\": \"The request for a flaky tests search.\",\n        \"properties\": {\n          \"data\": {\n            \"description\": \"The JSON:API data for flaky tests search request.\",\n            \"properties\": {\n              \"attributes\": {\n                \"description\": \"Attributes for the flaky tests search request.\",\n                \"properties\": {\n                  \"filter\": {\n                    \"description\": \"Search filter settings.\",\n                    \"properties\": {\n                      \"query\": {\n                        \"default\": \"*\",\n                        \"description\": \"Search query following log syntax used to filter flaky tests, same as on Flaky Tests Management UI. The supported search keys are:\\n- `flaky_test_state`\\n- `flaky_test_category`\\n- `@test.name`\\n- `@test.suite`\\n- `@test.module`\\n- `@test.service`\\n- `@git.repository.id_v2`\\n- `@git.branch`\\n- `@test.codeowners`\\n- `env`\",\n                        \"example\": \"flaky_test_state:active @git.repository.id_v2:\\\"github.com/datadog/shopist\\\"\",\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"page\": {\n                    \"description\": \"Pagination attributes for listing flaky tests.\",\n                    \"properties\": {\n                      \"cursor\": {\n                        \"description\": \"List following results with a cursor provided in the previous request.\",\n                        \"example\": \"eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==\",\n                        \"type\": \"string\"\n                      },\n                      \"limit\": {\n                        \"default\": 10,\n                        \"description\": \"Maximum number of flaky tests in the response.\",\n                        \"example\": 25,\n                        \"format\": \"int64\",\n                        \"maximum\": 1000,\n                        \"minimum\": 1,\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  },\n                  \"sort\": {\n                    \"description\": \"Parameter for sorting flaky test results. The default sort is by ascending Fully Qualified Name (FQN). The FQN is the concatenation of the test module, suite, and name.\",\n                    \"enum\": [\n                      \"fqn\",\n                      \"-fqn\",\n                      \"first_flaked\",\n                      \"-first_flaked\",\n                      \"last_flaked\",\n                      \"-last_flaked\",\n                      \"failure_rate\",\n                      \"-failure_rate\",\n                      \"pipelines_failed\",\n                      \"-pipelines_failed\",\n                      \"pipelines_duration_lost\",\n                      \"-pipelines_duration_lost\"\n                    ],\n                    \"example\": \"failure_rate\",\n                    \"type\": \"string\",\n                    \"x-enum-varnames\": [\n                      \"FQN_ASCENDING\",\n                      \"FQN_DESCENDING\",\n                      \"FIRST_FLAKED_ASCENDING\",\n                      \"FIRST_FLAKED_DESCENDING\",\n                      \"LAST_FLAKED_ASCENDING\",\n                      \"LAST_FLAKED_DESCENDING\",\n                      \"FAILURE_RATE_ASCENDING\",\n                      \"FAILURE_RATE_DESCENDING\",\n                      \"PIPELINES_FAILED_ASCENDING\",\n                      \"PIPELINES_FAILED_DESCENDING\",\n                      \"PIPELINES_DURATION_LOST_ASCENDING\",\n                      \"PIPELINES_DURATION_LOST_DESCENDING\"\n                    ]\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"type\": {\n                \"description\": \"The definition of `FlakyTestsSearchRequestDataType` object.\",\n                \"enum\": [\n                  \"search_flaky_tests_request\"\n                ],\n                \"type\": \"string\",\n                \"x-enum-varnames\": [\n                  \"SEARCH_FLAKY_TESTS_REQUEST\"\n                ]\n              }\n            },\n            \"type\": \"object\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": false\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
