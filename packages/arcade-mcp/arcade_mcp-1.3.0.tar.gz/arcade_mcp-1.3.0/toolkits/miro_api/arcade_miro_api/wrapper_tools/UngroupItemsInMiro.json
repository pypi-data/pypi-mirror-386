{
  "name": "UngroupItemsInMiro",
  "fully_qualified_name": "MiroApi.UngroupItemsInMiro@0.1.0",
  "description": "Ungroups items from a group in Miro boards.\n\nThis tool is used to ungroup items within a specified group on a Miro board. It requires the 'boards:write' scope and adheres to level 3 rate limiting. Use this tool when you need to separate items that have been grouped together in a Miro board.",
  "toolkit": {
    "name": "ArcadeMiroApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "board_id",
        "required": true,
        "description": "Unique identifier (ID) of the Miro board for ungrouping items.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "board_id"
      },
      {
        "name": "group_identifier",
        "required": true,
        "description": "Unique identifier of the group to be ungrouped on the Miro board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the group."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "group_id"
      },
      {
        "name": "delete_items_after_ungrouping",
        "required": false,
        "description": "Indicate whether items should be removed after ungrouping. Defaults to false.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Indicates whether the items should be removed. By default, false."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "delete_items"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'unGroup'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-miro",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the miro API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.miro.com/v2/boards/{board_id}/groups/{group_id}",
    "http_method": "DELETE",
    "headers": {},
    "parameters": [
      {
        "name": "delete_items",
        "tool_parameter_name": "delete_items_after_ungrouping",
        "description": "Indicates whether the items should be removed. By default, false.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Indicates whether the items should be removed. By default, false."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "board_id",
        "tool_parameter_name": "board_id",
        "description": "Unique identifier (ID) of the board.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the board."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "group_id",
        "tool_parameter_name": "group_identifier",
        "description": "Unique identifier (ID) of the group.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier (ID) of the group."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
