{
  "name": "SendEmailToContact",
  "fully_qualified_name": "ZohoBooksApi.SendEmailToContact@0.1.0",
  "description": "Send an email directly to a specified contact.\n\nUse this tool to send an email to a contact by specifying their contact ID. Ideal for communicating directly with contacts via email.",
  "toolkit": {
    "name": "ArcadeZohoBooksApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "organization_identifier",
        "required": true,
        "description": "The unique ID of the organization to which the contact belongs. It is required for sending the email.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_id"
      },
      {
        "name": "contact_id",
        "required": true,
        "description": "Unique identifier for the contact to send the email to.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the contact."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "contact_id"
      },
      {
        "name": "email_content",
        "required": false,
        "description": "JSON object containing `to_mail_ids`, `subject`, `body`, and optional `attachments` for the email.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "to_mail_ids": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of email address of the recipients."
            },
            "subject": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Subject of an email has to be sent. Max-length [1000]"
            },
            "body": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Body of an email has to be sent. Max-length [5000]"
            },
            "attachments": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Files to be attached to the email. It has to be sent in multipart/formdata"
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      },
      {
        "name": "send_customer_statement_with_email",
        "required": false,
        "description": "Indicate if a customer statement PDF should be sent with the email. Use 'true' to send, 'false' otherwise.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Send customer statement pdf with email."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "send_customer_statement"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'email_contact'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-zoho",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "ZohoBooks.contacts.CREATE"
        ]
      }
    },
    "secrets": [
      {
        "key": "ZOHO_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the zoho-books API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.1.0",
      "description": ""
    },
    "url": "{zoho_server_url}/books/v3/contacts/{contact_id}/email",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "organization_id",
        "tool_parameter_name": "organization_identifier",
        "description": "ID of the organization",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "send_customer_statement",
        "tool_parameter_name": "send_customer_statement_with_email",
        "description": "Send customer statement pdf with email.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Send customer statement pdf with email."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "contact_id",
        "tool_parameter_name": "contact_id",
        "description": "Unique identifier of the contact.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the contact."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "email_content",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "to_mail_ids": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of email address of the recipients."
            },
            "subject": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Subject of an email has to be sent. Max-length [1000]"
            },
            "body": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Body of an email has to be sent. Max-length [5000]"
            },
            "attachments": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Files to be attached to the email. It has to be sent in multipart/formdata"
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "ZOHO_SERVER_URL",
        "parameter_name": "zoho_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"required\": [\n          \"to_mail_ids\",\n          \"subject\",\n          \"body\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"to_mail_ids\": {\n            \"description\": \"Array of email address of the recipients.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"example\": [\n              \"willsmith@bowmanfurniture.com\"\n            ]\n          },\n          \"subject\": {\n            \"description\": \"Subject of an email has to be sent. Max-length [1000]\",\n            \"type\": \"string\",\n            \"example\": \"Welcome to Zillium Inc .\"\n          },\n          \"body\": {\n            \"description\": \"Body of an email has to be sent. Max-length [5000]\",\n            \"type\": \"string\",\n            \"example\": \"Dear Customer,     <br/>We have attached with this email a list of all your transactions with us for the period 01 Sep 2013 to 30 Sep 2013. You can write to us or call us if you need any assistance or clarifications.     <br/>Thanks for your business.<br/>Regards<br/>Zillium Inc\"\n          },\n          \"attachments\": {\n            \"description\": \"Files to be attached to the email. It has to be sent in multipart/formdata\",\n            \"type\": \"string\",\n            \"format\": \"binary\"\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
