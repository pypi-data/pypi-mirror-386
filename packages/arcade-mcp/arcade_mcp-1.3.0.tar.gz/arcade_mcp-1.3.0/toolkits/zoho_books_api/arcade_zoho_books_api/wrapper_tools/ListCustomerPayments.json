{
  "name": "ListCustomerPayments",
  "fully_qualified_name": "ZohoBooksApi.ListCustomerPayments@0.1.0",
  "description": "List all payments made by your customers.\n\nUse this tool to retrieve a list of all the payments made by your customers. It is useful for financial analysis, reconciliation, or customer support purposes.",
  "toolkit": {
    "name": "ArcadeZohoBooksApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "organization_id",
        "required": true,
        "description": "The unique identifier of the organization. Required to specify which organization's payments to list.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_id"
      },
      {
        "name": "search_customer_name",
        "required": false,
        "description": "Filter payments by customer name using 'startswith' or 'contains' variants. Max length: 100 characters.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by customer name. Variants: <code>customer_name_startswith</code> and <code>customer_name_contains</code>. Max-len [100]"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "customer_name"
      },
      {
        "name": "search_by_reference_number",
        "required": false,
        "description": "Search payments by reference number. Supports 'startswith' and 'contains' variants. Max-length 100.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by reference number. Variants: <code>reference_number_startswith</code> and <code>reference_number_contains</code>. Max-len [100]"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "reference_number"
      },
      {
        "name": "payment_date",
        "required": false,
        "description": "Specify the date of the customer payment in YYYY-MM-DD format to filter results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "date"
      },
      {
        "name": "payment_amount_filter",
        "required": false,
        "description": "Filter payments by amount using variants: less_than, less_equals, greater_than, or greater_equals.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by payment amount. Variants: <code>amount_less_than</code>, <code>amount_less_equals</code>, <code>amount_greater_than</code> and <code>amount_greater_equals</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "amount"
      },
      {
        "name": "search_by_customer_notes",
        "required": false,
        "description": "Search payments using customer notes, supporting 'startswith' and 'contains' variants.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by customer notes. Variants: <code>notes_startswith</code> and <code>notes_contains</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "notes"
      },
      {
        "name": "payment_mode_filter",
        "required": false,
        "description": "Filter payments by specifying the payment mode. Use 'startswith' or 'contains' for partial matching.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by payment mode. Variants: <code>payment_mode_startswith</code> and <code>payment_mode_contains</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "payment_mode"
      },
      {
        "name": "filter_payments_by_mode",
        "required": false,
        "description": "Filter payments by the payment mode. Accepted values include: All, Check, Cash, BankTransfer, Paypal, CreditCard, GoogleCheckout, Credit, Authorizenet, BankRemittance, Payflowpro, Stripe, TwoCheckout, Braintree, Others.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter payments by mode.Allowed Values: <code>PaymentMode.All</code>, <code>PaymentMode.Check</code>, <code>PaymentMode.Cash</code>, <code>PaymentMode.BankTransfer</code>, <code>PaymentMode.Paypal</code>, <code>PaymentMode.CreditCard</code>, <code>PaymentMode.GoogleCheckout</code>, <code>PaymentMode.Credit</code>, <code>PaymentMode.Authorizenet</code>, <code>PaymentMode.BankRemittance</code>, <code>PaymentMode.Payflowpro</code>, <code>PaymentMode.Stripe</code>, <code>PaymentMode.TwoCheckout</code>, <code>PaymentMode.Braintree</code> and <code>PaymentMode.Others</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter_by"
      },
      {
        "name": "sort_column",
        "required": false,
        "description": "Specify the column to sort the payments by. Common options include date, amount, or customer name.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort_column"
      },
      {
        "name": "search_term_for_payments",
        "required": false,
        "description": "Search payments by reference number, customer name, or payment description. Maximum length is 100 characters.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by reference number or customer name or payment description. Max-length [100]"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "search_text"
      },
      {
        "name": "customer_id",
        "required": false,
        "description": "The unique identifier for the customer involved in the payment. Use this to target specific customer transactions.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Customer ID of the customer involved in the payment."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "customer_id"
      },
      {
        "name": "page_number_to_fetch",
        "required": false,
        "description": "The page number of payment records to be retrieved. Defaults to 1.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number to be fetched. Default value is 1."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "records_per_page",
        "required": false,
        "description": "Number of records to be fetched per page. Default is 200.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to be fetched per page. Default value is 200."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'list_customer_payments'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-zoho",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "ZohoBooks.customerpayments.READ"
        ]
      }
    },
    "secrets": [
      {
        "key": "ZOHO_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the zoho-books API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.1.0",
      "description": ""
    },
    "url": "{zoho_server_url}/books/v3/customerpayments",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "organization_id",
        "tool_parameter_name": "organization_id",
        "description": "ID of the organization",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "customer_name",
        "tool_parameter_name": "search_customer_name",
        "description": "Search payments by customer name. Variants: <code>customer_name_startswith</code> and <code>customer_name_contains</code>. Max-len [100]",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by customer name. Variants: <code>customer_name_startswith</code> and <code>customer_name_contains</code>. Max-len [100]"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "reference_number",
        "tool_parameter_name": "search_by_reference_number",
        "description": "Search payments by reference number. Variants: <code>reference_number_startswith</code> and <code>reference_number_contains</code>. Max-len [100]",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by reference number. Variants: <code>reference_number_startswith</code> and <code>reference_number_contains</code>. Max-len [100]"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "date",
        "tool_parameter_name": "payment_date",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "amount",
        "tool_parameter_name": "payment_amount_filter",
        "description": "Search payments by payment amount. Variants: <code>amount_less_than</code>, <code>amount_less_equals</code>, <code>amount_greater_than</code> and <code>amount_greater_equals</code>",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by payment amount. Variants: <code>amount_less_than</code>, <code>amount_less_equals</code>, <code>amount_greater_than</code> and <code>amount_greater_equals</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "notes",
        "tool_parameter_name": "search_by_customer_notes",
        "description": "Search payments by customer notes. Variants: <code>notes_startswith</code> and <code>notes_contains</code>",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by customer notes. Variants: <code>notes_startswith</code> and <code>notes_contains</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "payment_mode",
        "tool_parameter_name": "payment_mode_filter",
        "description": "Search payments by payment mode. Variants: <code>payment_mode_startswith</code> and <code>payment_mode_contains</code>",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by payment mode. Variants: <code>payment_mode_startswith</code> and <code>payment_mode_contains</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter_by",
        "tool_parameter_name": "filter_payments_by_mode",
        "description": "Filter payments by mode.Allowed Values: <code>PaymentMode.All</code>, <code>PaymentMode.Check</code>, <code>PaymentMode.Cash</code>, <code>PaymentMode.BankTransfer</code>, <code>PaymentMode.Paypal</code>, <code>PaymentMode.CreditCard</code>, <code>PaymentMode.GoogleCheckout</code>, <code>PaymentMode.Credit</code>, <code>PaymentMode.Authorizenet</code>, <code>PaymentMode.BankRemittance</code>, <code>PaymentMode.Payflowpro</code>, <code>PaymentMode.Stripe</code>, <code>PaymentMode.TwoCheckout</code>, <code>PaymentMode.Braintree</code> and <code>PaymentMode.Others</code>",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter payments by mode.Allowed Values: <code>PaymentMode.All</code>, <code>PaymentMode.Check</code>, <code>PaymentMode.Cash</code>, <code>PaymentMode.BankTransfer</code>, <code>PaymentMode.Paypal</code>, <code>PaymentMode.CreditCard</code>, <code>PaymentMode.GoogleCheckout</code>, <code>PaymentMode.Credit</code>, <code>PaymentMode.Authorizenet</code>, <code>PaymentMode.BankRemittance</code>, <code>PaymentMode.Payflowpro</code>, <code>PaymentMode.Stripe</code>, <code>PaymentMode.TwoCheckout</code>, <code>PaymentMode.Braintree</code> and <code>PaymentMode.Others</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort_column",
        "tool_parameter_name": "sort_column",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "search_text",
        "tool_parameter_name": "search_term_for_payments",
        "description": "Search payments by reference number or customer name or payment description. Max-length [100]",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search payments by reference number or customer name or payment description. Max-length [100]"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "customer_id",
        "tool_parameter_name": "customer_id",
        "description": "Customer ID of the customer involved in the payment.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Customer ID of the customer involved in the payment."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "page_number_to_fetch",
        "description": "Page number to be fetched. Default value is 1.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number to be fetched. Default value is 1."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "records_per_page",
        "description": "Number of records to be fetched per page. Default value is 200.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to be fetched per page. Default value is 200."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 200,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "ZOHO_SERVER_URL",
        "parameter_name": "zoho_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
