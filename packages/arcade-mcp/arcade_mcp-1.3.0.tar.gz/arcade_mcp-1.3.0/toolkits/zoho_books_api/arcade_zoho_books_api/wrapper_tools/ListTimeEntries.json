{
  "name": "ListTimeEntries",
  "fully_qualified_name": "ZohoBooksApi.ListTimeEntries@0.1.0",
  "description": "Retrieve all time entries with pagination.\n\nCall this tool to get a list of all time entries for projects, supporting pagination if needed.",
  "toolkit": {
    "name": "ArcadeZohoBooksApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "organization_identifier",
        "required": true,
        "description": "The unique identifier for the organization. Required to retrieve time entries specific to this organization.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_id"
      },
      {
        "name": "start_date_for_time_entries",
        "required": false,
        "description": "Date from which the time entries should start being fetched. Expected format is YYYY-MM-DD.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Date from which the time entries logged to be fetched"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "from_date"
      },
      {
        "name": "end_date_for_time_entries",
        "required": false,
        "description": "The end date for fetching logged time entries in YYYY-MM-DD format.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Date up to which the time entries logged to be fetched"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "to_date"
      },
      {
        "name": "filter_time_entries_by",
        "required": false,
        "description": "Filter time entries by date or status. Use values like Date.Today, Date.ThisMonth, Status.Unbilled, etc.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter time entries by date and status. Allowed Values: <code>Date.All</code>, <code>Date.Today</code>, <code>Date.ThisWeek</code>, <code>Date.ThisMonth</code>, <code>Date.ThisQuarter</code>, <code>Date.ThisYear</code>, <code>Date.PreviousDay</code>, <code>Date.PreviousWeek</code>, <code>Date.PreviousMonth</code>, <code>Date.PreviousQuarter</code>, <code>Date.PreviousYear</code>, <code>Date.CustomDate</code>, <code>Status.Unbilled</code> and <code>Status.Invoiced</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter_by"
      },
      {
        "name": "project_id",
        "required": false,
        "description": "Search for time entries by specifying the project ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search time entries by project_id."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "project_id"
      },
      {
        "name": "search_time_entries_by_user_id",
        "required": false,
        "description": "Search and filter time entries based on a specific user's ID. Provide the ID as a string.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search time entries by user_id."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "user_id"
      },
      {
        "name": "sort_time_entries_by",
        "required": false,
        "description": "Sort time entries by project name, task name, user name, log date, timer start time, or customer name.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Sort time entries. Allowed Values: <code>project_name</code>, <code>task_name</code>, <code>user_name</code>, <code>log_date</code>, <code>timer_started_at</code> and <code>customer_name</code>"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort_column"
      },
      {
        "name": "page_number_to_fetch",
        "required": false,
        "description": "Page number to retrieve time entries from, starting at 1 by default.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number to be fetched. Default value is 1."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "records_per_page",
        "required": false,
        "description": "Number of records to fetch per page. Defaults to 200.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to be fetched per page. Default value is 200."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'list_time_entries'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-zoho",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "ZohoBooks.projects.READ"
        ]
      }
    },
    "secrets": [
      {
        "key": "ZOHO_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the zoho-books API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.1.0",
      "description": ""
    },
    "url": "{zoho_server_url}/books/v3/projects/timeentries",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "organization_id",
        "tool_parameter_name": "organization_identifier",
        "description": "ID of the organization",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the organization"
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "from_date",
        "tool_parameter_name": "start_date_for_time_entries",
        "description": "Date from which the time entries logged to be fetched",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Date from which the time entries logged to be fetched"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "to_date",
        "tool_parameter_name": "end_date_for_time_entries",
        "description": "Date up to which the time entries logged to be fetched",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Date up to which the time entries logged to be fetched"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter_by",
        "tool_parameter_name": "filter_time_entries_by",
        "description": "Filter time entries by date and status. Allowed Values: <code>Date.All</code>, <code>Date.Today</code>, <code>Date.ThisWeek</code>, <code>Date.ThisMonth</code>, <code>Date.ThisQuarter</code>, <code>Date.ThisYear</code>, <code>Date.PreviousDay</code>, <code>Date.PreviousWeek</code>, <code>Date.PreviousMonth</code>, <code>Date.PreviousQuarter</code>, <code>Date.PreviousYear</code>, <code>Date.CustomDate</code>, <code>Status.Unbilled</code> and <code>Status.Invoiced</code>",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter time entries by date and status. Allowed Values: <code>Date.All</code>, <code>Date.Today</code>, <code>Date.ThisWeek</code>, <code>Date.ThisMonth</code>, <code>Date.ThisQuarter</code>, <code>Date.ThisYear</code>, <code>Date.PreviousDay</code>, <code>Date.PreviousWeek</code>, <code>Date.PreviousMonth</code>, <code>Date.PreviousQuarter</code>, <code>Date.PreviousYear</code>, <code>Date.CustomDate</code>, <code>Status.Unbilled</code> and <code>Status.Invoiced</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "project_id",
        "tool_parameter_name": "project_id",
        "description": "Search time entries by project_id.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search time entries by project_id."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "user_id",
        "tool_parameter_name": "search_time_entries_by_user_id",
        "description": "Search time entries by user_id.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search time entries by user_id."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort_column",
        "tool_parameter_name": "sort_time_entries_by",
        "description": "Sort time entries. Allowed Values: <code>project_name</code>, <code>task_name</code>, <code>user_name</code>, <code>log_date</code>, <code>timer_started_at</code> and <code>customer_name</code>",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Sort time entries. Allowed Values: <code>project_name</code>, <code>task_name</code>, <code>user_name</code>, <code>log_date</code>, <code>timer_started_at</code> and <code>customer_name</code>"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "page_number_to_fetch",
        "description": "Page number to be fetched. Default value is 1.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number to be fetched. Default value is 1."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "records_per_page",
        "description": "Number of records to be fetched per page. Default value is 200.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to be fetched per page. Default value is 200."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 200,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "ZOHO_SERVER_URL",
        "parameter_name": "zoho_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
