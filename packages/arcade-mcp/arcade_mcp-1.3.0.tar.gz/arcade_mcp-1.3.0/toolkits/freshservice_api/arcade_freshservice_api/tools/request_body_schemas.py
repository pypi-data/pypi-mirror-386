"""Request Body Schemas for API Tools

DO NOT EDIT THIS MODULE DIRECTLY.

THIS MODULE WAS AUTO-GENERATED AND CONTAINS OpenAPI REQUEST BODY SCHEMAS
FOR TOOLS WITH COMPLEX REQUEST BODIES. ANY CHANGES TO THIS MODULE WILL
BE OVERWRITTEN BY THE TRANSPILER.
"""

from typing import Any

REQUEST_BODY_SCHEMAS: dict[str, Any] = {
    "CREATEAGENTGROUPFRESHSERVICE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the agent group", "format": "int64", "readOnly": true, "example": 12345}, "name": {"type": "string", "description": "Name of the agent group", "example": "Analysts"}, "description": {"type": "string", "description": "Description about the agent group", "example": "IT Analysts Agent group"}, "business_hours_id": {"type": "integer", "description": "Unique ID of the business hours configuration associated with the group", "format": "int64", "example": 3458}, "escalate_to": {"type": "integer", "description": "The Unique ID of the user to whom an escalation email is sent if a ticket in this group is unassigned. To create/update a group with an escalate_to value of \u2018none\u2019, please set the value of this parameter to \u2018null\u2019.", "format": "int64", "example": 234123423}, "agent_ids": {"type": "array", "description": "<DEPRECATED> Array of user IDs of agents who belong to the group.", "example": ["2342342", "9943044"], "items": {"type": "string", "format": "int64"}}, "members": {"type": "array", "description": "Array of user IDs of agents who are members of the group.", "example": ["9284729", "9349857"], "items": {"type": "string", "format": "int64"}}, "observers": {"type": "array", "description": "Array of user IDs of agents who are observers of the group.", "example": ["3457384", "9827342"], "items": {"type": "string", "format": "int64"}}, "group_leaders": {"type": "array", "description": "Array of user IDs of agents who are leaders of the group.", "example": ["4785820", "5672910"], "items": {"type": "string", "format": "int64"}}, "auto_ticket_assign": {"type": "boolean", "description": "Describes the automatic ticket assignment type. Will not be supported if the "Round Robin" feature is disabled for the account. Set to true if automatic ticket assignment is enabled, and false otherwise.", "example": true}, "restricted": {"type": "boolean", "description": "Signifies whether the group is a resricted group", "example": true}, "approval_required": {"type": "boolean", "description": "Signifies whether approval is required from group leaders to add agents to the group, delete the group, disable restricted mode on the group, or disable approvals.", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which the agent group was created", "format": "date-time", "readOnly": true, "example": "2021-11-19T06:24:30Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the agent group was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-19T06:24:30Z"}}}',  # noqa: E501
    "UPDATEAGENTGROUP": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the agent group", "format": "int64", "readOnly": true, "example": 12345}, "name": {"type": "string", "description": "Name of the agent group", "example": "Analysts"}, "description": {"type": "string", "description": "Description about the agent group", "example": "IT Analysts Agent group"}, "business_hours_id": {"type": "integer", "description": "Unique ID of the business hours configuration associated with the group", "format": "int64", "example": 3458}, "escalate_to": {"type": "integer", "description": "The Unique ID of the user to whom an escalation email is sent if a ticket in this group is unassigned. To create/update a group with an escalate_to value of \u2018none\u2019, please set the value of this parameter to \u2018null\u2019.", "format": "int64", "example": 234123423}, "agent_ids": {"type": "array", "description": "<DEPRECATED> Array of user IDs of agents who belong to the group.", "example": ["2342342", "9943044"], "items": {"type": "string", "format": "int64"}}, "members": {"type": "array", "description": "Array of user IDs of agents who are members of the group.", "example": ["9284729", "9349857"], "items": {"type": "string", "format": "int64"}}, "observers": {"type": "array", "description": "Array of user IDs of agents who are observers of the group.", "example": ["3457384", "9827342"], "items": {"type": "string", "format": "int64"}}, "group_leaders": {"type": "array", "description": "Array of user IDs of agents who are leaders of the group.", "example": ["4785820", "5672910"], "items": {"type": "string", "format": "int64"}}, "auto_ticket_assign": {"type": "boolean", "description": "Describes the automatic ticket assignment type. Will not be supported if the "Round Robin" feature is disabled for the account. Set to true if automatic ticket assignment is enabled, and false otherwise.", "example": true}, "restricted": {"type": "boolean", "description": "Signifies whether the group is a resricted group", "example": true}, "approval_required": {"type": "boolean", "description": "Signifies whether approval is required from group leaders to add agents to the group, delete the group, disable restricted mode on the group, or disable approvals.", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which the agent group was created", "format": "date-time", "readOnly": true, "example": "2021-11-19T06:24:30Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the agent group was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-19T06:24:30Z"}}}',  # noqa: E501
    "UPDATELOCATIONINFO": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the location", "format": "int64", "readOnly": true, "example": 14000234324}, "name": {"type": "string", "description": "Name of the location", "example": "Apple Campus"}, "parent_location_id": {"type": "integer", "description": "Unique ID of the parent location", "format": "int64", "example": 14000234324}, "primary_contact_id": {"type": "integer", "description": "Unique ID of the primary contact (Primary contact is a requester. The primary contact name, email and phone number will be referenced from the requester details)", "format": "int64", "example": 14000234324}, "address_line1": {"type": "string", "description": "Address Line 1", "example": "1 Infinite Loop"}, "address_line2": {"type": "string", "description": "Address Line 2", "example": "1 Infinite Loop"}, "address_city": {"type": "string", "description": "City", "example": "Cupertino"}, "address_state": {"type": "string", "description": "State", "example": "California"}, "address_country": {"type": "string", "description": "Country", "example": "US"}, "address_zipcode": {"type": "string", "description": "Zip Code of the Location", "example": "95014"}}}',  # noqa: E501
    "UPDATEVENDORINFO": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the vendor", "format": "int64", "readOnly": true, "example": 14000234324}, "name": {"type": "string", "description": "Name of the vendor", "example": "Apple"}, "description": {"type": "string", "description": "Description of the vendor", "example": "Apple"}, "primary_contact_id": {"type": "integer", "description": "Unique ID of the primary contact (Primary contact is a requester. The primary contact name, email phone and mobile number will be referenced from the requester details)", "format": "int64", "example": 14000234324}, "address_line1": {"type": "string", "description": "Address Line 1", "example": "Cupertino"}, "address_line2": {"type": "string", "description": "Address Line 2", "example": "Cupertino"}, "address_city": {"type": "string", "description": "City", "example": "Cupertino"}, "address_state": {"type": "string", "description": "State", "example": "California"}, "address_country": {"type": "string", "description": "Country", "example": "US"}, "address_zipcode": {"type": "string", "description": "Zip Code of the location", "example": "95014"}}}',  # noqa: E501
    "CREATENEWASSET": '{"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "UPDATEEXISTINGASSET": '{"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "CREATECSATSURVEY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Customer Satisfaction Survey", "format": "int64", "readOnly": true, "example": 14000234324}, "name": {"type": "string", "description": "Name of the Survey", "example": "Buyer satisfaction"}, "active": {"type": "boolean", "description": "State of the survey. For an activated survey, active = true. For a deactivated survey, active = false.", "example": true}, "survey_trigger_event": {"type": "string", "description": "Field to capture when the survey should be sent.", "example": "Ticket Closure", "enum": ["Ticket Closure", "Ticket Resolution", "All Replies", "Agent Specified Emails"]}, "question": {"type": "string", "description": "Question that will be asked to the requester to capture the service experience", "example": "How do you rate the buying experience?"}, "order_of_options": {"type": "string", "description": "Gradient order of the options displayed", "example": "Good to Bad", "enum": ["Good to Bad", "Bad to Good"]}, "options": {"type": "object", "properties": {"option_1": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_2": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_3": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_4": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_5": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}}, "example": {"option_1": {"text": "Fantastic"}, "option_2": {"text": "Fantastic"}}}, "thank_you_message": {"type": "string", "description": "The final \\"Thank you\\" message that gets displayed to the requester upon completion of the survey", "example": "Thanks for taking the survey"}, "user_id": {"type": "integer", "description": "Unique identifier of the agent who last modified this survey", "format": "int64", "example": 14000234324}, "created_at": {"type": "string", "description": "Timestamp at which the survey was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the survey was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATECSATSURVEY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Customer Satisfaction Survey", "format": "int64", "readOnly": true, "example": 14000234324}, "name": {"type": "string", "description": "Name of the Survey", "example": "Buyer satisfaction"}, "active": {"type": "boolean", "description": "State of the survey. For an activated survey, active = true. For a deactivated survey, active = false.", "example": true}, "survey_trigger_event": {"type": "string", "description": "Field to capture when the survey should be sent.", "example": "Ticket Closure", "enum": ["Ticket Closure", "Ticket Resolution", "All Replies", "Agent Specified Emails"]}, "question": {"type": "string", "description": "Question that will be asked to the requester to capture the service experience", "example": "How do you rate the buying experience?"}, "order_of_options": {"type": "string", "description": "Gradient order of the options displayed", "example": "Good to Bad", "enum": ["Good to Bad", "Bad to Good"]}, "options": {"type": "object", "properties": {"option_1": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_2": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_3": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_4": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}, "option_5": {"type": "object", "properties": {"text": {"type": "string", "description": "Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.", "example": "Fantastic"}, "follow_up_question": {"type": "string", "description": "Follow-up question that will asked when the requester responds with the current option.", "example": "How do you rate overall experience?"}}, "description": "Response Options of the Customer Satisfaction Survey", "example": {"text": "Fantastic", "follow_up_question": "How do you rate overall experience?"}}}, "example": {"option_1": {"text": "Fantastic"}, "option_2": {"text": "Fantastic"}}}, "thank_you_message": {"type": "string", "description": "The final \\"Thank you\\" message that gets displayed to the requester upon completion of the survey", "example": "Thanks for taking the survey"}, "user_id": {"type": "integer", "description": "Unique identifier of the agent who last modified this survey", "format": "int64", "example": 14000234324}, "created_at": {"type": "string", "description": "Timestamp at which the survey was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the survey was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATESERVICEREQUEST": '{"type": "object", "properties": {"requester_email": {"type": "string", "description": "the email id of the requester", "example": "andrea@freshservice.com"}, "requested_for_email": {"type": "string", "description": "the email id of the user for whom this is requested.", "example": "andrea@freshservice.com"}, "subject": {"type": "string", "description": "the subject of the ticket", "example": "Request for VPN access"}, "status": {"type": "integer", "description": "the status of the ticket", "format": "int32", "example": 2}, "priority": {"type": "integer", "description": "the priority of the ticket", "format": "int32", "example": 2}, "description": {"type": "string", "description": "the description/body of the ticket", "example": "Request for VPN access"}, "agent_id": {"type": "integer", "description": "the agent ID to whom the ticket is assigned", "format": "int32", "example": 19234923}, "due_by": {"type": "string", "description": "Timestamp that denotes when the ticket is due to be resolved", "format": "date-time"}, "group_id": {"type": "number", "description": "ID of the group to which the ticket has been assigned. The default value is the ID of the group that is associated with the given email_config_id.", "format": "int32", "example": 12938743}, "source": {"type": "number", "description": "The channel through which the ticket was created. The default value is 2.", "format": "int32", "example": 2.0}, "tags": {"type": "array", "description": "Tags that have been associated with the ticket.", "example": ["VPN", "Network"], "items": {"type": "string"}}, "custom_fields": {"type": "object", "description": "Custom fields that are associated with a Freshservice entity", "example": {"field1": "Value 1"}}}}',  # noqa: E501
    "CREATESOLUTIONARTICLE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the solution article", "format": "int64", "readOnly": true, "example": 1400020394823}, "folder_id": {"type": "integer", "description": "ID of the folder under which the article is listed", "format": "int64", "example": 140000394234}, "category_id": {"type": "integer", "description": "Unique identifier of the solution category", "format": "int64", "example": 1400023423}, "title": {"type": "string", "description": "Title of the solution article", "example": "Unable to connect VPN"}, "description": {"type": "string", "description": "Content of the solution article in HTML format", "example": "<div>Login with AD credentials for VPN</div>"}, "description_text": {"type": "string", "description": "Content of the solution article in plain-text format", "example": "Login with AD credentials for VPN"}, "position": {"type": "integer", "description": "The rank of the solution article in the article listing", "format": "int32", "example": 1}, "article_type": {"type": "integer", "description": "The type of the article. ( 1 - permanent, 2 - workaround )", "format": "int32", "example": 1}, "status": {"type": "integer", "description": "Status of the article. ( 1 - draft, 2 - published )", "format": "int32", "example": 1}, "thumbs_up": {"type": "integer", "description": "Number of upvotes for the article", "format": "int64", "readOnly": true, "example": 34534}, "thumbs_down": {"type": "integer", "description": "Number of downvotes for the article", "format": "int64", "readOnly": true, "example": 43}, "created_by": {"type": "integer", "description": "ID of the user who created the article", "format": "int64", "example": 140004343}, "created_time": {"type": "string", "description": "Timestamp at which the department was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_by": {"type": "integer", "description": "ID of the user who last updated the article", "format": "int64", "example": 140004343}, "updated_time": {"type": "string", "description": "Timestamp at which the department was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "views": {"type": "integer", "description": "number of views for the article", "format": "int64", "readOnly": true, "example": 140004343}, "search_keywords": {"type": "array", "description": "Keywords for which this article should be mapped", "example": ["VPN", "WiFi", "Network"], "items": {"type": "string"}}, "tags": {"type": "array", "description": "The tags associated to the article", "example": ["VPN", "WiFi", "Network"], "items": {"type": "string"}}}}',  # noqa: E501
    "UPDATESOLUTIONARTICLE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the solution article", "format": "int64", "readOnly": true, "example": 1400020394823}, "folder_id": {"type": "integer", "description": "ID of the folder under which the article is listed", "format": "int64", "example": 140000394234}, "category_id": {"type": "integer", "description": "Unique identifier of the solution category", "format": "int64", "example": 1400023423}, "title": {"type": "string", "description": "Title of the solution article", "example": "Unable to connect VPN"}, "description": {"type": "string", "description": "Content of the solution article in HTML format", "example": "<div>Login with AD credentials for VPN</div>"}, "description_text": {"type": "string", "description": "Content of the solution article in plain-text format", "example": "Login with AD credentials for VPN"}, "position": {"type": "integer", "description": "The rank of the solution article in the article listing", "format": "int32", "example": 1}, "article_type": {"type": "integer", "description": "The type of the article. ( 1 - permanent, 2 - workaround )", "format": "int32", "example": 1}, "status": {"type": "integer", "description": "Status of the article. ( 1 - draft, 2 - published )", "format": "int32", "example": 1}, "thumbs_up": {"type": "integer", "description": "Number of upvotes for the article", "format": "int64", "readOnly": true, "example": 34534}, "thumbs_down": {"type": "integer", "description": "Number of downvotes for the article", "format": "int64", "readOnly": true, "example": 43}, "created_by": {"type": "integer", "description": "ID of the user who created the article", "format": "int64", "example": 140004343}, "created_time": {"type": "string", "description": "Timestamp at which the department was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_by": {"type": "integer", "description": "ID of the user who last updated the article", "format": "int64", "example": 140004343}, "updated_time": {"type": "string", "description": "Timestamp at which the department was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "views": {"type": "integer", "description": "number of views for the article", "format": "int64", "readOnly": true, "example": 140004343}, "search_keywords": {"type": "array", "description": "Keywords for which this article should be mapped", "example": ["VPN", "WiFi", "Network"], "items": {"type": "string"}}, "tags": {"type": "array", "description": "The tags associated to the article", "example": ["VPN", "WiFi", "Network"], "items": {"type": "string"}}}}',  # noqa: E501
    "CREATESOLUTIONFOLDER": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the solution folder", "format": "int64", "example": 14000234234}, "category_id": {"type": "integer", "description": "Unique identifier of the solution category", "format": "int64", "example": 140009808}, "name": {"type": "string", "description": "Name of the solution folder", "example": "Network FAQ"}, "description": {"type": "string", "description": "Description of the solution folder", "example": "Solution Articles for Network related queries"}, "position": {"type": "integer", "description": "The position of the solution folder in the folder listing. When there are more than 1 folders in a category, then this will determine the position.", "format": "int32", "example": 1}, "managed_by_group": {"type": "integer", "description": "Agent group ID who can edit the articles in the folder", "format": "int32", "example": 938453}, "managed_by_agent": {"type": "integer", "description": "The agent ID who can edit the articles in the folder", "format": "int32", "example": 349583}, "visibility": {"type": "object", "properties": {"requester_groups": {"type": "array", "description": "Requester group IDs that have access to view this folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "agent_groups": {"type": "array", "description": "Agent group IDs that have access to view this folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "departments": {"type": "array", "description": "The department IDs whose members will be able to view the folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "all_agents": {"type": "boolean", "description": "Is True if all agents can view this folder", "example": true}, "everyone": {"type": "boolean", "description": "Is True if all users can view this folder", "example": true}, "logged_in_users": {"type": "boolean", "description": "Is True if all logged in users can view this folder", "example": true}}, "description": "Users who can view this folder", "example": {"requester_groups": [234234, 543444], "agent_groups": [498034, 349534], "departments": [485792, 298732], "all_agents": false, "everyone": false, "logged_in_users": false}}, "default_folder": {"type": "boolean", "description": "If this is a default folder shipped with the product. You can create or rename a default folder.", "example": true}}}',  # noqa: E501
    "UPDATESOLUTIONFOLDER": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the solution folder", "format": "int64", "example": 14000234234}, "category_id": {"type": "integer", "description": "Unique identifier of the solution category", "format": "int64", "example": 140009808}, "name": {"type": "string", "description": "Name of the solution folder", "example": "Network FAQ"}, "description": {"type": "string", "description": "Description of the solution folder", "example": "Solution Articles for Network related queries"}, "position": {"type": "integer", "description": "The position of the solution folder in the folder listing. When there are more than 1 folders in a category, then this will determine the position.", "format": "int32", "example": 1}, "managed_by_group": {"type": "integer", "description": "Agent group ID who can edit the articles in the folder", "format": "int32", "example": 938453}, "managed_by_agent": {"type": "integer", "description": "The agent ID who can edit the articles in the folder", "format": "int32", "example": 349583}, "visibility": {"type": "object", "properties": {"requester_groups": {"type": "array", "description": "Requester group IDs that have access to view this folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "agent_groups": {"type": "array", "description": "Agent group IDs that have access to view this folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "departments": {"type": "array", "description": "The department IDs whose members will be able to view the folder", "example": [234234, 543444], "items": {"type": "integer", "format": "int32"}}, "all_agents": {"type": "boolean", "description": "Is True if all agents can view this folder", "example": true}, "everyone": {"type": "boolean", "description": "Is True if all users can view this folder", "example": true}, "logged_in_users": {"type": "boolean", "description": "Is True if all logged in users can view this folder", "example": true}}, "description": "Users who can view this folder", "example": {"requester_groups": [234234, 543444], "agent_groups": [498034, 349534], "departments": [485792, 298732], "all_agents": false, "everyone": false, "logged_in_users": false}}, "default_folder": {"type": "boolean", "description": "If this is a default folder shipped with the product. You can create or rename a default folder.", "example": true}}}',  # noqa: E501
    "CREATENEWREQUESTER": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the requester", "format": "int64", "readOnly": true, "example": 14000234324}, "first_name": {"type": "string", "description": "First Name of the requester", "example": "Andrea"}, "last_name": {"type": "string", "description": "Last Name of the requester", "example": "Smith"}, "job_title": {"type": "string", "description": "Job Title of the requester", "example": "Product Manager"}, "primary_email": {"type": "string", "description": "Primary email address of the requester", "example": "andrea@freshservice.com"}, "secondary_emails": {"type": "array", "description": "Secondary email addresses of the requester", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "work_phone_number": {"type": "string", "description": "Work phone number of the requester", "example": "+1-567-3492"}, "mobile_phone_number": {"type": "string", "description": "Mobile phone number of the requester", "example": "+1-567-3492"}, "department_ids": {"type": "array", "description": "Unique IDs of the departments associated with the requester", "example": [1400043345, 1400046983], "items": {"type": "integer", "format": "int64"}}, "can_see_all_tickets_from_associated_departments": {"type": "boolean", "description": "Set to true if the requester must be allowed to view tickets filed by other members of the department, and false otherwise", "example": true}, "reporting_manager_id": {"type": "integer", "description": "Unique identifier of the requester\'s reporting manager", "format": "int64", "example": 14000234324}, "address": {"type": "string", "description": "Address of the requester", "example": "2968 D Street, Bloomfield, Michigan"}, "time_zone": {"type": "string", "description": "Time zone of the requester", "example": "Eastern Time (US & Canada)"}, "language": {"type": "string", "description": "Language used by the requester", "example": "en"}, "location_id": {"type": "integer", "description": "Unique identifier of the location associated with the requester", "format": "int64", "example": 14000234324}, "background_information": {"type": "string", "description": "Address of the requester", "example": "Done"}, "active": {"type": "boolean", "description": "true if the user is active, and false if the user account has been deactivated.", "example": true}, "has_logged_in": {"type": "boolean", "description": "true if the user has logged in to Freshservice at least once, and false otherwise.", "example": true}, "created_time": {"type": "string", "description": "Timestamp at which the requester was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_time": {"type": "string", "description": "Timestamp at which the requester was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "custom_fields": {"type": "object", "description": "Custom fields that are associated with a Freshservice entity", "example": {"field1": "Value 1"}}}}',  # noqa: E501
    "UPDATEREQUESTERINFRESHSERVICE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the requester", "format": "int64", "readOnly": true, "example": 14000234324}, "first_name": {"type": "string", "description": "First Name of the requester", "example": "Andrea"}, "last_name": {"type": "string", "description": "Last Name of the requester", "example": "Smith"}, "job_title": {"type": "string", "description": "Job Title of the requester", "example": "Product Manager"}, "primary_email": {"type": "string", "description": "Primary email address of the requester", "example": "andrea@freshservice.com"}, "secondary_emails": {"type": "array", "description": "Secondary email addresses of the requester", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "work_phone_number": {"type": "string", "description": "Work phone number of the requester", "example": "+1-567-3492"}, "mobile_phone_number": {"type": "string", "description": "Mobile phone number of the requester", "example": "+1-567-3492"}, "department_ids": {"type": "array", "description": "Unique IDs of the departments associated with the requester", "example": [1400043345, 1400046983], "items": {"type": "integer", "format": "int64"}}, "can_see_all_tickets_from_associated_departments": {"type": "boolean", "description": "Set to true if the requester must be allowed to view tickets filed by other members of the department, and false otherwise", "example": true}, "reporting_manager_id": {"type": "integer", "description": "Unique identifier of the requester\'s reporting manager", "format": "int64", "example": 14000234324}, "address": {"type": "string", "description": "Address of the requester", "example": "2968 D Street, Bloomfield, Michigan"}, "time_zone": {"type": "string", "description": "Time zone of the requester", "example": "Eastern Time (US & Canada)"}, "language": {"type": "string", "description": "Language used by the requester", "example": "en"}, "location_id": {"type": "integer", "description": "Unique identifier of the location associated with the requester", "format": "int64", "example": 14000234324}, "background_information": {"type": "string", "description": "Address of the requester", "example": "Done"}, "active": {"type": "boolean", "description": "true if the user is active, and false if the user account has been deactivated.", "example": true}, "has_logged_in": {"type": "boolean", "description": "true if the user has logged in to Freshservice at least once, and false otherwise.", "example": true}, "created_time": {"type": "string", "description": "Timestamp at which the requester was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_time": {"type": "string", "description": "Timestamp at which the requester was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "custom_fields": {"type": "object", "description": "Custom fields that are associated with a Freshservice entity", "example": {"field1": "Value 1"}}}}',  # noqa: E501
    "CREATEFRESHSERVICEAGENT": '{"required": ["email", "first_name", "role_ids"], "type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the agent", "format": "int64", "readOnly": true, "example": 14000234324}, "first_name": {"type": "string", "description": "First Name of the agent", "example": "Andrea"}, "occasional": {"type": "boolean", "description": "True if the agent is an occasional agent, and false if full-time agent.", "example": true}, "last_name": {"type": "string", "description": "Last Name of the agent", "example": "Smith"}, "job_title": {"type": "string", "description": "Job Title of the agent", "example": "Product Manager"}, "email": {"type": "string", "description": "Email address of the agent", "example": "andrea@freshservice.com"}, "work_phone_number": {"type": "string", "description": "Work phone number of the agent", "example": "+1-567-3492"}, "mobile_phone_number": {"type": "string", "description": "Mobile phone number of the agent", "example": "+1-567-3492"}, "reporting_manager_id": {"type": "integer", "description": "Unique identifier of the agent\'s reporting manager", "format": "int64", "example": 14000234324}, "time_zone": {"type": "string", "description": "Time zone of the agent", "example": "Eastern Time (US & Canada)"}, "language": {"type": "string", "description": "Language used by the agent", "example": "en"}, "location_id": {"type": "integer", "description": "Unique identifier of the location associated with the agent", "format": "int64", "example": 14000234324}, "scoreboard_level_id": {"type": "integer", "description": "Unique ID of the level of the agent in the Arcade. Possible values: * 1 - Beginner * 2 - Intermediate * 3 - Professional * 4 - Expert * 5 - Master * 6 - Guru\n", "format": "int64", "example": 2, "enum": [1, 2, 3, 4, 5, 6]}, "scope": {"type": "object", "properties": {"ticket": {"type": "string", "example": "Global Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "problem": {"type": "string", "example": "Group Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "change": {"type": "string", "example": "Restricted Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "release": {"type": "string", "example": "Group Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "asset": {"type": "string", "example": "Global Access", "enum": ["Global Access", "Group Access"]}}, "description": "Access level of the agent in various modules", "readOnly": true, "example": {"ticket": "Global Access", "problem": "Global Access", "change": "Global Access", "release": "Global Access", "asset": "Global Access"}}, "group_ids": {"type": "array", "description": "<DEPRECATED> Unique IDs of the agent groups associated with the agent", "example": [1400023424, 1400023423], "items": {"type": "integer", "format": "int64"}}, "member_of": {"type": "array", "description": "Unique IDs of the agent groups that the agent is a member of", "example": [140002533, 140009834], "items": {"type": "integer", "format": "int64"}}, "observer_of": {"type": "array", "description": "Unique IDs of the agent groups that the agent is an observer of", "example": [1300045345, 1300049484], "items": {"type": "integer", "format": "int64"}}, "role_ids": {"type": "array", "description": "(DEPRECATED) Unique IDs of the agent roles associated with the agent", "example": [1300034059, 1300094583], "items": {"type": "integer", "format": "int64"}}, "roles": {"type": "array", "example": [{"role_id": 14000234324}], "items": {"type": "object", "properties": {"role_id": {"type": "integer", "description": "Unique identifier of the role assigned", "format": "int64", "example": 14000234324}, "assignment_scope": {"type": "string", "description": "The scope in which the agent can use the permissions granted by this role. Possible values are entire_helpdesk (all plans), member_groups (Blossom, Garden, and Estate), specified_groups (Forest only), and assigned_items (all plans)", "example": "entire_helpdesk", "enum": ["entire_helpdesk", "member_groups", "specified_groups", "assigned_items"]}, "groups": {"type": "array", "description": "Groups in which the permissions granted by the role applies. Returns an array of group identifiers when the assignment_scope is specified_groups, and null otherwise.", "example": [1400034334, 3523453453], "items": {"type": "integer", "format": "int64"}}}}}, "last_login_at": {"type": "string", "description": "Timestamp of the agent\'s last successful login", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "active": {"type": "boolean", "description": "true if the user is active, and false if the user account has been deactivated.", "example": true}, "has_logged_in": {"type": "boolean", "description": "true if the user has logged in to Freshservice at least once, and false otherwise.", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which the agent was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the agent was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATEEXISTINGAGENT": '{"required": ["email", "first_name", "role_ids"], "type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the agent", "format": "int64", "readOnly": true, "example": 14000234324}, "first_name": {"type": "string", "description": "First Name of the agent", "example": "Andrea"}, "occasional": {"type": "boolean", "description": "True if the agent is an occasional agent, and false if full-time agent.", "example": true}, "last_name": {"type": "string", "description": "Last Name of the agent", "example": "Smith"}, "job_title": {"type": "string", "description": "Job Title of the agent", "example": "Product Manager"}, "email": {"type": "string", "description": "Email address of the agent", "example": "andrea@freshservice.com"}, "work_phone_number": {"type": "string", "description": "Work phone number of the agent", "example": "+1-567-3492"}, "mobile_phone_number": {"type": "string", "description": "Mobile phone number of the agent", "example": "+1-567-3492"}, "reporting_manager_id": {"type": "integer", "description": "Unique identifier of the agent\'s reporting manager", "format": "int64", "example": 14000234324}, "time_zone": {"type": "string", "description": "Time zone of the agent", "example": "Eastern Time (US & Canada)"}, "language": {"type": "string", "description": "Language used by the agent", "example": "en"}, "location_id": {"type": "integer", "description": "Unique identifier of the location associated with the agent", "format": "int64", "example": 14000234324}, "scoreboard_level_id": {"type": "integer", "description": "Unique ID of the level of the agent in the Arcade. Possible values: * 1 - Beginner * 2 - Intermediate * 3 - Professional * 4 - Expert * 5 - Master * 6 - Guru\n", "format": "int64", "example": 2, "enum": [1, 2, 3, 4, 5, 6]}, "scope": {"type": "object", "properties": {"ticket": {"type": "string", "example": "Global Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "problem": {"type": "string", "example": "Group Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "change": {"type": "string", "example": "Restricted Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "release": {"type": "string", "example": "Group Access", "enum": ["Global Access", "Group Access", "Restricted Access"]}, "asset": {"type": "string", "example": "Global Access", "enum": ["Global Access", "Group Access"]}}, "description": "Access level of the agent in various modules", "readOnly": true, "example": {"ticket": "Global Access", "problem": "Global Access", "change": "Global Access", "release": "Global Access", "asset": "Global Access"}}, "group_ids": {"type": "array", "description": "<DEPRECATED> Unique IDs of the agent groups associated with the agent", "example": [1400023424, 1400023423], "items": {"type": "integer", "format": "int64"}}, "member_of": {"type": "array", "description": "Unique IDs of the agent groups that the agent is a member of", "example": [140002533, 140009834], "items": {"type": "integer", "format": "int64"}}, "observer_of": {"type": "array", "description": "Unique IDs of the agent groups that the agent is an observer of", "example": [1300045345, 1300049484], "items": {"type": "integer", "format": "int64"}}, "role_ids": {"type": "array", "description": "(DEPRECATED) Unique IDs of the agent roles associated with the agent", "example": [1300034059, 1300094583], "items": {"type": "integer", "format": "int64"}}, "roles": {"type": "array", "example": [{"role_id": 14000234324}], "items": {"type": "object", "properties": {"role_id": {"type": "integer", "description": "Unique identifier of the role assigned", "format": "int64", "example": 14000234324}, "assignment_scope": {"type": "string", "description": "The scope in which the agent can use the permissions granted by this role. Possible values are entire_helpdesk (all plans), member_groups (Blossom, Garden, and Estate), specified_groups (Forest only), and assigned_items (all plans)", "example": "entire_helpdesk", "enum": ["entire_helpdesk", "member_groups", "specified_groups", "assigned_items"]}, "groups": {"type": "array", "description": "Groups in which the permissions granted by the role applies. Returns an array of group identifiers when the assignment_scope is specified_groups, and null otherwise.", "example": [1400034334, 3523453453], "items": {"type": "integer", "format": "int64"}}}}}, "last_login_at": {"type": "string", "description": "Timestamp of the agent\'s last successful login", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "active": {"type": "boolean", "description": "true if the user is active, and false if the user account has been deactivated.", "example": true}, "has_logged_in": {"type": "boolean", "description": "true if the user has logged in to Freshservice at least once, and false otherwise.", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which the agent was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the agent was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "CREATEFRESHSERVICETICKET": '{"type": "object", "properties": {"cc_emails": {"type": "array", "description": "Email addresses added in the \'cc\' field of the incoming ticket email", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fwd_emails": {"type": "array", "description": "Email addresses added while forwarding a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "reply_cc_emails": {"type": "array", "description": "Email addresses added while replying to a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fr_escalated": {"type": "boolean", "description": "Set to \'true\' if the ticket has been escalated as a result of the first response time being breached", "readOnly": true, "example": true}, "spam": {"type": "boolean", "description": "Set to \'true\' if the ticket has been marked as spam", "readOnly": true, "example": true}, "priority": {"type": "number", "description": "Priority of the Freshservice Ticket. Low -> 1. Medium -> 2. High -> 3. Urgent -> 4.", "example": 2.0}, "requester_id": {"type": "number", "description": "User ID of the requester.", "example": 1400023894234}, "source": {"type": "number", "description": "The channel through which the ticket was created. Email -> 1 Portal -> 2 Phone -> 3 Chat -> 4 Feedback widget -> 5 Yammer -> 6 AWS Cloudwatch -> 7 Pagerduty -> 8 Walkup -> 9 Slack -> 10", "example": 1.0}, "status": {"type": "number", "description": "Status of the Ticket. Open -> 2 Pending -> 3 Resolved -> 4 Closed -> 5", "example": 2.0}, "subject": {"type": "string", "description": "Subject of the Ticket", "example": "Printer not connected""}, "id": {"type": "number", "description": "Unique ID of the ticket", "readOnly": true, "example": 14000239432}, "type": {"type": "string", "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with. [Support for only type \u2018incident\u2019 as of now]", "example": "Incident"}, "due_by": {"type": "string", "description": "Timestamp that denotes when the ticket is due to be resolved", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "fr_due_by": {"type": "string", "description": "Timestamp that denotes when the first response is due", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "is_escalated": {"type": "boolean", "example": true}, "description": {"type": "string", "example": "<div>How do I connect printer?</div>"}, "description_text": {"type": "string", "description": "Content of the ticket in plain text", "example": "How do I connect printer?"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"choice": "First Choice", "employee_id": "E1234"}}, "created_at": {"type": "string", "description": "Timestamp at which the ticket was created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the ticket was last updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "tags": {"type": "array", "description": "Tags that have been associated with the ticket", "example": ["Hardware", "Network", "VPN"], "items": {"type": "string"}}, "attachments": {"type": "array", "description": "Ticket attachments. The total size of these attachments cannot exceed 15MB", "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "EDITFRESHSERVICETICKET": '{"type": "object", "properties": {"cc_emails": {"type": "array", "description": "Email addresses added in the \'cc\' field of the incoming ticket email", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fwd_emails": {"type": "array", "description": "Email addresses added while forwarding a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "reply_cc_emails": {"type": "array", "description": "Email addresses added while replying to a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fr_escalated": {"type": "boolean", "description": "Set to \'true\' if the ticket has been escalated as a result of the first response time being breached", "readOnly": true, "example": true}, "spam": {"type": "boolean", "description": "Set to \'true\' if the ticket has been marked as spam", "readOnly": true, "example": true}, "priority": {"type": "number", "description": "Priority of the Freshservice Ticket. Low -> 1. Medium -> 2. High -> 3. Urgent -> 4.", "example": 2.0}, "requester_id": {"type": "number", "description": "User ID of the requester.", "example": 1400023894234}, "source": {"type": "number", "description": "The channel through which the ticket was created. Email -> 1 Portal -> 2 Phone -> 3 Chat -> 4 Feedback widget -> 5 Yammer -> 6 AWS Cloudwatch -> 7 Pagerduty -> 8 Walkup -> 9 Slack -> 10", "example": 1.0}, "status": {"type": "number", "description": "Status of the Ticket. Open -> 2 Pending -> 3 Resolved -> 4 Closed -> 5", "example": 2.0}, "subject": {"type": "string", "description": "Subject of the Ticket", "example": "Printer not connected""}, "id": {"type": "number", "description": "Unique ID of the ticket", "readOnly": true, "example": 14000239432}, "type": {"type": "string", "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with. [Support for only type \u2018incident\u2019 as of now]", "example": "Incident"}, "due_by": {"type": "string", "description": "Timestamp that denotes when the ticket is due to be resolved", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "fr_due_by": {"type": "string", "description": "Timestamp that denotes when the first response is due", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "is_escalated": {"type": "boolean", "example": true}, "description": {"type": "string", "example": "<div>How do I connect printer?</div>"}, "description_text": {"type": "string", "description": "Content of the ticket in plain text", "example": "How do I connect printer?"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"choice": "First Choice", "employee_id": "E1234"}}, "created_at": {"type": "string", "description": "Timestamp at which the ticket was created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the ticket was last updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "tags": {"type": "array", "description": "Tags that have been associated with the ticket", "example": ["Hardware", "Network", "VPN"], "items": {"type": "string"}}, "attachments": {"type": "array", "description": "Ticket attachments. The total size of these attachments cannot exceed 15MB", "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "CREATECHILDTICKET": '{"type": "object", "properties": {"cc_emails": {"type": "array", "description": "Email addresses added in the \'cc\' field of the incoming ticket email", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fwd_emails": {"type": "array", "description": "Email addresses added while forwarding a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "reply_cc_emails": {"type": "array", "description": "Email addresses added while replying to a ticket", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "fr_escalated": {"type": "boolean", "description": "Set to \'true\' if the ticket has been escalated as a result of the first response time being breached", "readOnly": true, "example": true}, "spam": {"type": "boolean", "description": "Set to \'true\' if the ticket has been marked as spam", "readOnly": true, "example": true}, "priority": {"type": "number", "description": "Priority of the Freshservice Ticket. Low -> 1. Medium -> 2. High -> 3. Urgent -> 4.", "example": 2.0}, "requester_id": {"type": "number", "description": "User ID of the requester.", "example": 1400023894234}, "source": {"type": "number", "description": "The channel through which the ticket was created. Email -> 1 Portal -> 2 Phone -> 3 Chat -> 4 Feedback widget -> 5 Yammer -> 6 AWS Cloudwatch -> 7 Pagerduty -> 8 Walkup -> 9 Slack -> 10", "example": 1.0}, "status": {"type": "number", "description": "Status of the Ticket. Open -> 2 Pending -> 3 Resolved -> 4 Closed -> 5", "example": 2.0}, "subject": {"type": "string", "description": "Subject of the Ticket", "example": "Printer not connected""}, "id": {"type": "number", "description": "Unique ID of the ticket", "readOnly": true, "example": 14000239432}, "type": {"type": "string", "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with. [Support for only type \u2018incident\u2019 as of now]", "example": "Incident"}, "due_by": {"type": "string", "description": "Timestamp that denotes when the ticket is due to be resolved", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "fr_due_by": {"type": "string", "description": "Timestamp that denotes when the first response is due", "format": "date_time", "example": "2021-11-22T16:58:45Z"}, "is_escalated": {"type": "boolean", "example": true}, "description": {"type": "string", "example": "<div>How do I connect printer?</div>"}, "description_text": {"type": "string", "description": "Content of the ticket in plain text", "example": "How do I connect printer?"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"choice": "First Choice", "employee_id": "E1234"}}, "created_at": {"type": "string", "description": "Timestamp at which the ticket was created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the ticket was last updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "tags": {"type": "array", "description": "Tags that have been associated with the ticket", "example": ["Hardware", "Network", "VPN"], "items": {"type": "string"}}, "attachments": {"type": "array", "description": "Ticket attachments. The total size of these attachments cannot exceed 15MB", "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "POSTTICKETREPLY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the reply", "format": "int64", "readOnly": true, "example": 14000982343}, "user_id": {"type": "integer", "description": "Unique ID of the user who created the reply", "format": "int64", "readOnly": true, "example": 1400023423}, "created_at": {"type": "string", "description": "Timestamp at which the note is created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the note is updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "body": {"type": "string", "description": "The body of the note in HTML format.", "example": "<p>Thanks for resolving the issue</p>"}, "body_text": {"type": "string", "description": "The body of the note in plain text format", "example": "Thanks for resolving the issue"}, "attachments": {"type": "array", "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}, "ticket_id": {"type": "integer", "description": "Unique ID of the ticket to which the reply belongs", "format": "int64", "example": 1012}, "from_email": {"type": "string", "example": "andrea@freshservice.com"}, "to_emails": {"type": "array", "description": "Addresses to which the conversation must be sent", "example": ["john.doe@freshservice.com", "david@freshservice.com"], "items": {"type": "string"}}, "cc_emails": {"type": "array", "description": "Addresses which must be copied on while sending the conversation", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "bcc_emails": {"type": "array", "description": "Addresses to which a blind copy must be sent", "example": ["andrea@freshservice.com", "david@freshservice.com"], "items": {"type": "string"}}}}',  # noqa: E501
    "ADDTICKETNOTE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the note", "format": "int64", "readOnly": true, "example": 14000398432}, "user_id": {"type": "integer", "description": "Unique ID of the user who created the note", "format": "int64", "readOnly": true, "example": 1400034853}, "private": {"type": "boolean", "description": "Set to true if the note is private. The default value is true.", "example": true}, "incoming": {"type": "boolean", "description": "Set to true if the note should appear as being created from the outside (i.e., not through the web portal)", "example": true}, "notify_emails": {"type": "array", "description": "Addresses to which the note must be notified to", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "body": {"type": "string", "description": "The body of the note in HTML format", "example": "<p>Developers debugging the isue</p>"}, "body_text": {"type": "string", "description": "The body of the note in plain text format", "example": "Developers debugging the issue"}, "created_at": {"type": "string", "description": "Date time at which the note was created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Date time at which the note was updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "attachments": {"type": "array", "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "EDITTICKETCONVERSATION": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the conversatoin", "format": "int64", "readOnly": true, "example": 140003948573}, "user_id": {"type": "integer", "description": "Unique ID of the user who created the note", "format": "int64", "readOnly": true, "example": 14000495822}, "source": {"type": "integer", "description": "Source of the note, 0-email, 1-form, 2-note, 3-status, 4-meta, 5-feedback, 6-forward_email)", "format": "int32", "readOnly": true, "example": 1, "enum": [0, 1, 2, 3, 4, 5, 6]}, "incoming": {"type": "boolean", "description": "Set to true if a particular conversation should appear as being created from the outside (i.e., not through the web portal)", "example": true}, "created_at": {"type": "string", "description": "Date time at which the conversation is created", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Date time at which the conversation is updated", "format": "date_time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "body": {"type": "string", "example": "<p>Thanks for swift response</p>"}, "body_text": {"type": "string", "example": "Thanks for swift response"}, "attachments": {"type": "array", "readOnly": true, "example": [{"id": 14000884384, "content_type": "application/pdf", "size": 1024, "name": "doc1.pdf", "attachment_url": "https://s3.amazonaws.com/fs/doc1.pdf"}], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}, "change_id": {"type": "integer", "description": "Unique ID of the change to which the note belongs", "format": "int64", "example": 140003498}, "ticket_id": {"type": "integer", "description": "Unique ID of the ticket to which the note belongs", "format": "int64", "example": 140002938232}, "from_email": {"type": "string", "example": "andrea@freshservice.com"}, "to_emails": {"type": "array", "description": "Addresses to which the conversation must be sent", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "cc_emails": {"type": "array", "description": "Addresses which must be copied on while sending the conversation", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}, "bcc_emails": {"type": "array", "description": "Addresses to which a blind copy must be sent", "example": ["andrea@freshservice.com", "john.doe@freshservice.com"], "items": {"type": "string"}}}}',  # noqa: E501
    "CREATETICKETTASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATEFRESHSERVICETICKETTASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "CREATETICKETTIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "UPDATETICKETTIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "CREATEFRESHSERVICECHANGEREQUEST": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the change", "format": "int64", "readOnly": true, "example": 140002342342}, "requester_id": {"type": "integer", "description": "Unique identifier of the initiator of the change", "format": "int64", "example": 14000234234}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the change is assigned", "format": "int64", "example": 1400023498}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the change is assigned", "format": "int64", "example": 1400097572}, "priority": {"type": "integer", "description": "Priority of the change 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "string", "example": 2}, "impact": {"type": "integer", "description": "Impact of the change 1-Low, 2-Medium, 3-High", "format": "string", "example": 1}, "status": {"type": "integer", "description": "Status identifier of the change. Open -> 1, Planning -> 2, Approval -> 3, Pending Release -> 4, Pending Review -> 5, closed -> 6", "format": "int32", "example": 1}, "risk": {"type": "integer", "description": "Risk of the change 1-Low, 2-Medium, 3-High, 4-Very High", "format": "string", "example": 1}, "change_type": {"type": "integer", "description": "Type of the change 1-minor, 2-standard, 3-major, 4-emergency", "format": "string", "example": 1}, "approval_status": {"type": "integer", "description": "Approval status of the change 1-Requested, 2-Approved, 3-Rejected 4-Not_Requested", "format": "string", "readOnly": true, "example": 1}, "subject": {"type": "string", "description": "Subject of the change", "example": "Replace Macbook"}, "description": {"type": "string", "description": "Short description of the change in HTML format", "example": "<p>Replace damaged Macbook</p>"}, "description_text": {"type": "string", "description": "Short description of the change in plain text format", "readOnly": true, "example": "Replace damaged Macbook"}, "planned_start_date": {"type": "string", "description": "Timestamp at which change is starting", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "planned_end_date": {"type": "string", "description": "Timestamp at which change is ending", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "project_id": {"type": "integer", "description": "Unique ID of the associated project", "format": "int64", "example": 1400023894}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the change", "format": "int64", "example": 14000495482}, "category": {"type": "string", "description": "Category of the change", "example": "Hardware"}, "sub_category": {"type": "string", "description": "Sub-category of the change", "example": "Computer"}, "item_category": {"type": "string", "description": "Item of the change", "example": "Mac"}, "created_at": {"type": "string", "description": "Timestamp at which change was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which change was last updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "associated_release": {"type": "integer", "description": "Unique ID of the associated release", "format": "int64", "readOnly": true, "example": 140004343}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [{"id": 14000234324, "display_id": 1453, "name": "Hardware-Monitor"}], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "associated_problems": {"type": "array", "description": "Unique IDs of the problems associated with the change request", "readOnly": true, "example": [140002394874, 140003948543], "items": {"type": "integer", "format": "int64"}}, "incidents_caused_by_change": {"type": "array", "description": "Unique IDs of the incidents caused by this change request", "readOnly": true, "example": [1400034598, 1400039485], "items": {"type": "integer", "format": "int64"}}, "tickets_initiating_change": {"type": "array", "description": "Unique IDs of the tickets initiating this change request", "readOnly": true, "example": [1400023984, 1400034984], "items": {"type": "integer", "format": "int64"}}, "associated_project": {"type": "integer", "description": "Id of the associated release", "format": "int64", "readOnly": true, "example": 140002394874}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"change_choices": "First Choice", "state": "TX"}}, "planning_fields": {"type": "object", "properties": {"reason_for_change": {"type": "object", "properties": {"description": {"type": "string", "description": "Reason for change", "example": "<p>Reason for change</p>"}, "description_text": {"type": "string", "description": "Reason for change in plain text format", "readOnly": true, "example": "Reason for Change"}}, "example": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}}, "impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact", "example": "<p>Impact</p>"}, "description_text": {"type": "string", "description": "Impact in plain text format", "readOnly": true, "example": "Impact"}}, "example": {"description": "<div>Impact</div>", "description_text": "Impact"}}, "rollout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Rollout Plan", "example": "<div>Rollout plan</div>"}, "description_text": {"type": "string", "description": "Rollout plan in plain text format", "readOnly": true, "example": "Rollout Plan"}}, "example": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}}, "backout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Backout Plan", "example": "<div>Backout plan</div>"}, "description_text": {"type": "string", "description": "Backout plan in plain text format", "readOnly": true, "example": "Backout Plan"}}, "example": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "example": {"reason_for_change": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}, "impact": {"description": "<div>Impact</div>", "description_text": "Impact"}, "rollout_plan": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}, "backout_plan": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "maintenance_window": {"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Change Window", "format": "int64", "example": 140009348572}, "name": {"type": "string", "description": "Name of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "description": {"type": "string", "description": "Description of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "window_start_date": {"type": "string", "description": "Timestamp at which Change Window is starting", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "window_end_date": {"type": "string", "description": "Timestamp at which Change Window is ending", "format": "date-time", "readOnly": true, "example": "2021-11-25T11:30:00Z"}}, "example": {"id": 140009348572, "name": "Router firmware upgrade", "description": "Router firmware upgrade", "window_start_date": "2021-11-24T11:30:00Z", "window_end_date": "2021-11-25T11:30:00Z"}}, "black_out_window": {"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Change Window", "format": "int64", "example": 140009348572}, "name": {"type": "string", "description": "Name of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "description": {"type": "string", "description": "Description of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "window_start_date": {"type": "string", "description": "Timestamp at which Change Window is starting", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "window_end_date": {"type": "string", "description": "Timestamp at which Change Window is ending", "format": "date-time", "readOnly": true, "example": "2021-11-25T11:30:00Z"}}, "example": {"id": 140009348572, "name": "Router firmware upgrade", "description": "Router firmware upgrade", "window_start_date": "2021-11-24T11:30:00Z", "window_end_date": "2021-11-25T11:30:00Z"}}}}',  # noqa: E501
    "UPDATECHANGEREQUEST": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the change", "format": "int64", "readOnly": true, "example": 140002342342}, "requester_id": {"type": "integer", "description": "Unique identifier of the initiator of the change", "format": "int64", "example": 14000234234}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the change is assigned", "format": "int64", "example": 1400023498}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the change is assigned", "format": "int64", "example": 1400097572}, "priority": {"type": "integer", "description": "Priority of the change 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "string", "example": 2}, "impact": {"type": "integer", "description": "Impact of the change 1-Low, 2-Medium, 3-High", "format": "string", "example": 1}, "status": {"type": "integer", "description": "Status identifier of the change. Open -> 1, Planning -> 2, Approval -> 3, Pending Release -> 4, Pending Review -> 5, closed -> 6", "format": "int32", "example": 1}, "risk": {"type": "integer", "description": "Risk of the change 1-Low, 2-Medium, 3-High, 4-Very High", "format": "string", "example": 1}, "change_type": {"type": "integer", "description": "Type of the change 1-minor, 2-standard, 3-major, 4-emergency", "format": "string", "example": 1}, "approval_status": {"type": "integer", "description": "Approval status of the change 1-Requested, 2-Approved, 3-Rejected 4-Not_Requested", "format": "string", "readOnly": true, "example": 1}, "subject": {"type": "string", "description": "Subject of the change", "example": "Replace Macbook"}, "description": {"type": "string", "description": "Short description of the change in HTML format", "example": "<p>Replace damaged Macbook</p>"}, "description_text": {"type": "string", "description": "Short description of the change in plain text format", "readOnly": true, "example": "Replace damaged Macbook"}, "planned_start_date": {"type": "string", "description": "Timestamp at which change is starting", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "planned_end_date": {"type": "string", "description": "Timestamp at which change is ending", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "project_id": {"type": "integer", "description": "Unique ID of the associated project", "format": "int64", "example": 1400023894}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the change", "format": "int64", "example": 14000495482}, "category": {"type": "string", "description": "Category of the change", "example": "Hardware"}, "sub_category": {"type": "string", "description": "Sub-category of the change", "example": "Computer"}, "item_category": {"type": "string", "description": "Item of the change", "example": "Mac"}, "created_at": {"type": "string", "description": "Timestamp at which change was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which change was last updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "associated_release": {"type": "integer", "description": "Unique ID of the associated release", "format": "int64", "readOnly": true, "example": 140004343}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [{"id": 14000234324, "display_id": 1453, "name": "Hardware-Monitor"}], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "associated_problems": {"type": "array", "description": "Unique IDs of the problems associated with the change request", "readOnly": true, "example": [140002394874, 140003948543], "items": {"type": "integer", "format": "int64"}}, "incidents_caused_by_change": {"type": "array", "description": "Unique IDs of the incidents caused by this change request", "readOnly": true, "example": [1400034598, 1400039485], "items": {"type": "integer", "format": "int64"}}, "tickets_initiating_change": {"type": "array", "description": "Unique IDs of the tickets initiating this change request", "readOnly": true, "example": [1400023984, 1400034984], "items": {"type": "integer", "format": "int64"}}, "associated_project": {"type": "integer", "description": "Id of the associated release", "format": "int64", "readOnly": true, "example": 140002394874}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"change_choices": "First Choice", "state": "TX"}}, "planning_fields": {"type": "object", "properties": {"reason_for_change": {"type": "object", "properties": {"description": {"type": "string", "description": "Reason for change", "example": "<p>Reason for change</p>"}, "description_text": {"type": "string", "description": "Reason for change in plain text format", "readOnly": true, "example": "Reason for Change"}}, "example": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}}, "impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact", "example": "<p>Impact</p>"}, "description_text": {"type": "string", "description": "Impact in plain text format", "readOnly": true, "example": "Impact"}}, "example": {"description": "<div>Impact</div>", "description_text": "Impact"}}, "rollout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Rollout Plan", "example": "<div>Rollout plan</div>"}, "description_text": {"type": "string", "description": "Rollout plan in plain text format", "readOnly": true, "example": "Rollout Plan"}}, "example": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}}, "backout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Backout Plan", "example": "<div>Backout plan</div>"}, "description_text": {"type": "string", "description": "Backout plan in plain text format", "readOnly": true, "example": "Backout Plan"}}, "example": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "example": {"reason_for_change": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}, "impact": {"description": "<div>Impact</div>", "description_text": "Impact"}, "rollout_plan": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}, "backout_plan": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "maintenance_window": {"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Change Window", "format": "int64", "example": 140009348572}, "name": {"type": "string", "description": "Name of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "description": {"type": "string", "description": "Description of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "window_start_date": {"type": "string", "description": "Timestamp at which Change Window is starting", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "window_end_date": {"type": "string", "description": "Timestamp at which Change Window is ending", "format": "date-time", "readOnly": true, "example": "2021-11-25T11:30:00Z"}}, "example": {"id": 140009348572, "name": "Router firmware upgrade", "description": "Router firmware upgrade", "window_start_date": "2021-11-24T11:30:00Z", "window_end_date": "2021-11-25T11:30:00Z"}}, "black_out_window": {"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Change Window", "format": "int64", "example": 140009348572}, "name": {"type": "string", "description": "Name of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "description": {"type": "string", "description": "Description of the Change Window", "readOnly": true, "example": "Router firmware upgrade"}, "window_start_date": {"type": "string", "description": "Timestamp at which Change Window is starting", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "window_end_date": {"type": "string", "description": "Timestamp at which Change Window is ending", "format": "date-time", "readOnly": true, "example": "2021-11-25T11:30:00Z"}}, "example": {"id": 140009348572, "name": "Router firmware upgrade", "description": "Router firmware upgrade", "window_start_date": "2021-11-24T11:30:00Z", "window_end_date": "2021-11-25T11:30:00Z"}}}}',  # noqa: E501
    "CREATECHANGETASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATEEXISTINGCHANGETASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "CREATEFRESHSERVICECHANGETIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "UPDATEFRESHSERVICECHANGETIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "CREATEFRESHSERVICEPROJECT": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the project", "format": "int64", "readOnly": true, "example": 13298}, "title": {"type": "string", "description": "Name of the project", "example": "Solution Articles for Ticket"}, "description": {"type": "string", "description": "Description about the project in HTML format", "example": "<div>Publish solution articles for Ticket</div>"}, "description_text": {"type": "string", "description": "Description about the project in text format", "readOnly": true, "example": "Publish solution articles for Ticket"}, "status": {"type": "integer", "description": "Status of the project", "format": "int32", "example": 2}, "priority": {"type": "integer", "description": "Priority of the project", "format": "int32", "example": 1}, "owner_id": {"type": "integer", "description": "Owner of the project", "format": "int64", "example": 43423}, "user_id": {"type": "integer", "description": "User who created the project", "format": "int64", "readOnly": true, "example": 123123}, "start_date": {"type": "string", "description": "Start date of the project", "format": "date-time", "example": "2021-04-01T07:16:45Z"}, "end_date": {"type": "string", "description": "End date of the project", "format": "date-time", "example": "2021-06-30T07:16:45Z"}, "archived": {"type": "boolean", "description": "Project archived status", "readOnly": true, "example": true}, "closed_at": {"type": "string", "description": "Closed time of the project", "format": "date-time", "readOnly": true, "example": "2021-06-11T07:16:45Z"}}}',  # noqa: E501
    "UPDATEPROJECT": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the project", "format": "int64", "readOnly": true, "example": 13298}, "title": {"type": "string", "description": "Name of the project", "example": "Solution Articles for Ticket"}, "description": {"type": "string", "description": "Description about the project in HTML format", "example": "<div>Publish solution articles for Ticket</div>"}, "description_text": {"type": "string", "description": "Description about the project in text format", "readOnly": true, "example": "Publish solution articles for Ticket"}, "status": {"type": "integer", "description": "Status of the project", "format": "int32", "example": 2}, "priority": {"type": "integer", "description": "Priority of the project", "format": "int32", "example": 1}, "owner_id": {"type": "integer", "description": "Owner of the project", "format": "int64", "example": 43423}, "user_id": {"type": "integer", "description": "User who created the project", "format": "int64", "readOnly": true, "example": 123123}, "start_date": {"type": "string", "description": "Start date of the project", "format": "date-time", "example": "2021-04-01T07:16:45Z"}, "end_date": {"type": "string", "description": "End date of the project", "format": "date-time", "example": "2021-06-30T07:16:45Z"}, "archived": {"type": "boolean", "description": "Project archived status", "readOnly": true, "example": true}, "closed_at": {"type": "string", "description": "Closed time of the project", "format": "date-time", "readOnly": true, "example": "2021-06-11T07:16:45Z"}}}',  # noqa: E501
    "CREATEPROJECTTASK": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the task", "format": "int64", "readOnly": true, "example": 1001}, "project_id": {"type": "integer", "description": "Unique identifier of the project", "format": "int64", "readOnly": true, "example": 10}, "title": {"type": "string", "description": "Name of the task", "example": "Clear backlog"}, "description": {"type": "string", "description": "Description about the task", "example": "Clear backlog"}, "status": {"type": "integer", "description": "Status of the task", "format": "int32", "example": 1}, "owner_id": {"type": "integer", "description": "Owner of the task", "format": "int64", "example": 984793}, "user_id": {"type": "integer", "description": "Agent who created the task", "format": "int64", "readOnly": true, "example": 23423423}, "closed_at": {"type": "string", "description": "Closed time of the task", "format": "date-time", "readOnly": true, "example": "2021-06-14T07:16:45Z"}, "start_date": {"type": "string", "description": "Start date of the task", "format": "date-time", "example": "2021-06-14T07:16:45Z"}, "end_date": {"type": "string", "description": "End date of the task", "format": "date-time", "example": "2021-06-11T07:16:45Z"}, "parent_id": {"type": "integer", "description": "Immediate parent of the task", "format": "int64", "example": 34534}, "root_id": {"type": "integer", "description": "Root parent of the task", "format": "int64", "readOnly": true, "example": 12312}, "has_subtasks": {"type": "boolean", "description": "States if the task has subtasks", "readOnly": true, "example": true}, "notification_needed": {"type": "boolean", "description": "Specify if needed to be notified", "example": true}, "notify": {"type": "object", "properties": {"type": {"type": "string", "description": "Specify whether notification should be sent before start or before end date", "example": "BEFORE_START_DATE", "enum": ["BEFORE_START_DATE", "BEFORE_END_DATE"]}, "value": {"type": "integer", "description": "Time period of notification", "example": 2}, "time_unit": {"type": "string", "description": "Time unit", "example": "hours", "enum": ["minutes", "hours", "days", "weeks"]}}, "description": "Task notification details. Allowed range - 15 minutes to 4 weeks", "example": {"type": "BEFORE_START_DATE", "value": 2, "time_unit": "hours"}}}}',  # noqa: E501
    "UPDATEPROJECTTASK": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the task", "format": "int64", "readOnly": true, "example": 1001}, "project_id": {"type": "integer", "description": "Unique identifier of the project", "format": "int64", "readOnly": true, "example": 10}, "title": {"type": "string", "description": "Name of the task", "example": "Clear backlog"}, "description": {"type": "string", "description": "Description about the task", "example": "Clear backlog"}, "status": {"type": "integer", "description": "Status of the task", "format": "int32", "example": 1}, "owner_id": {"type": "integer", "description": "Owner of the task", "format": "int64", "example": 984793}, "user_id": {"type": "integer", "description": "Agent who created the task", "format": "int64", "readOnly": true, "example": 23423423}, "closed_at": {"type": "string", "description": "Closed time of the task", "format": "date-time", "readOnly": true, "example": "2021-06-14T07:16:45Z"}, "start_date": {"type": "string", "description": "Start date of the task", "format": "date-time", "example": "2021-06-14T07:16:45Z"}, "end_date": {"type": "string", "description": "End date of the task", "format": "date-time", "example": "2021-06-11T07:16:45Z"}, "parent_id": {"type": "integer", "description": "Immediate parent of the task", "format": "int64", "example": 34534}, "root_id": {"type": "integer", "description": "Root parent of the task", "format": "int64", "readOnly": true, "example": 12312}, "has_subtasks": {"type": "boolean", "description": "States if the task has subtasks", "readOnly": true, "example": true}, "notification_needed": {"type": "boolean", "description": "Specify if needed to be notified", "example": true}, "notify": {"type": "object", "properties": {"type": {"type": "string", "description": "Specify whether notification should be sent before start or before end date", "example": "BEFORE_START_DATE", "enum": ["BEFORE_START_DATE", "BEFORE_END_DATE"]}, "value": {"type": "integer", "description": "Time period of notification", "example": 2}, "time_unit": {"type": "string", "description": "Time unit", "example": "hours", "enum": ["minutes", "hours", "days", "weeks"]}}, "description": "Task notification details. Allowed range - 15 minutes to 4 weeks", "example": {"type": "BEFORE_START_DATE", "value": 2, "time_unit": "hours"}}}}',  # noqa: E501
    "CREATEANNOUNCEMENT": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Announcement", "format": "int64", "readOnly": true, "example": 1400623}, "created_by": {"type": "integer", "description": "Unique identifier of the agent to created this Announcement", "format": "int64", "example": 1407423}, "state": {"type": "string", "description": "State of the Announcement active, archived, scheduled", "format": "string", "readOnly": true, "example": "active"}, "title": {"type": "string", "description": "Title of the Announcement", "example": "Welcome to Freshservice"}, "body": {"type": "string", "description": "Body of the Announcement in plain text", "readOnly": true, "example": "Your Freshservice account is now ready.Here are a few quick links to get you started : Getting Started with Freshservice Implementing ITIL Workflows and Best Practices Setting up your Self Service Portal If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317. Thanks, Freshservice Team. P.S.: This is a default announcement and can be removed whenever you want."}, "body_html": {"type": "string", "description": "Body of the Announcement in HTML format", "example": "<div>Your Freshservice account is now ready.<br>Here are a few quick links to get you started : <ol> <li> <a href="http://support.freshservice.com/support/solutions/folders/251426">Getting Started with Freshservice</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/253208">Implementing ITIL Workflows and Best Practices</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/254554">Setting up your Self Service Portal</a> </li> </ol>If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317.<br>Thanks, <br> Freshservice Team. <br> P.S.: This is a default announcement and can be removed whenever you want.</div>"}, "visible_from": {"type": "string", "description": "Timestamp at which Announcement becomes active", "format": "date-time", "example": "2019-06-11T07:16:43Z"}, "visible_till": {"type": "string", "description": "Timestamp until which Announcement is active", "format": "date-time", "example": "2019-06-18T07:16:43Z"}, "visibility": {"type": "string", "description": "Who can see the announcement. Values - everyone, agents_only, agents_and_groups", "example": "everyone"}, "departments": {"type": "array", "description": "Array of Department IDs that can view this Announcement", "example": [1001, 1003], "items": {"type": "integer", "format": "int64"}}, "groups": {"type": "array", "description": "Array of Group IDs that can view this Announcement", "example": [2002, 2004], "items": {"type": "integer", "format": "int64"}}, "is_read": {"type": "boolean", "description": "True if the logged-in-user has read the announcement. False, otherwise", "readOnly": true, "example": true}, "send_email": {"type": "boolean", "description": "True if the announcement needs to be sent via email as well. False, otherwise", "readOnly": true, "example": true}, "additional_emails": {"type": "array", "description": "Additional email addresses to which the announcement needs to be sent", "example": ["john.doe@acmecorp.com", "alice@acmecorp.com"], "items": {"type": "string"}}, "created_at": {"type": "string", "description": "Timestamp at which Announcement was created", "format": "date-time", "readOnly": true, "example": "2019-06-18T13:45:11Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Announcement was last updated", "format": "date-time", "readOnly": true, "example": "2019-06-18T13:45:11Z"}}}',  # noqa: E501
    "UPDATEFRESHSERVICEANNOUNCEMENT": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Announcement", "format": "int64", "readOnly": true, "example": 1400623}, "created_by": {"type": "integer", "description": "Unique identifier of the agent to created this Announcement", "format": "int64", "example": 1407423}, "state": {"type": "string", "description": "State of the Announcement active, archived, scheduled", "format": "string", "readOnly": true, "example": "active"}, "title": {"type": "string", "description": "Title of the Announcement", "example": "Welcome to Freshservice"}, "body": {"type": "string", "description": "Body of the Announcement in plain text", "readOnly": true, "example": "Your Freshservice account is now ready.Here are a few quick links to get you started : Getting Started with Freshservice Implementing ITIL Workflows and Best Practices Setting up your Self Service Portal If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317. Thanks, Freshservice Team. P.S.: This is a default announcement and can be removed whenever you want."}, "body_html": {"type": "string", "description": "Body of the Announcement in HTML format", "example": "<div>Your Freshservice account is now ready.<br>Here are a few quick links to get you started : <ol> <li> <a href="http://support.freshservice.com/support/solutions/folders/251426">Getting Started with Freshservice</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/253208">Implementing ITIL Workflows and Best Practices</a> </li><li> <a href="http://support.freshservice.com/support/solutions/folders/254554">Setting up your Self Service Portal</a> </li> </ol>If you have any questions, just shoot out an email to support@freshservice.com or call us at +1-(877)-485-0317.<br>Thanks, <br> Freshservice Team. <br> P.S.: This is a default announcement and can be removed whenever you want.</div>"}, "visible_from": {"type": "string", "description": "Timestamp at which Announcement becomes active", "format": "date-time", "example": "2019-06-11T07:16:43Z"}, "visible_till": {"type": "string", "description": "Timestamp until which Announcement is active", "format": "date-time", "example": "2019-06-18T07:16:43Z"}, "visibility": {"type": "string", "description": "Who can see the announcement. Values - everyone, agents_only, agents_and_groups", "example": "everyone"}, "departments": {"type": "array", "description": "Array of Department IDs that can view this Announcement", "example": [1001, 1003], "items": {"type": "integer", "format": "int64"}}, "groups": {"type": "array", "description": "Array of Group IDs that can view this Announcement", "example": [2002, 2004], "items": {"type": "integer", "format": "int64"}}, "is_read": {"type": "boolean", "description": "True if the logged-in-user has read the announcement. False, otherwise", "readOnly": true, "example": true}, "send_email": {"type": "boolean", "description": "True if the announcement needs to be sent via email as well. False, otherwise", "readOnly": true, "example": true}, "additional_emails": {"type": "array", "description": "Additional email addresses to which the announcement needs to be sent", "example": ["john.doe@acmecorp.com", "alice@acmecorp.com"], "items": {"type": "string"}}, "created_at": {"type": "string", "description": "Timestamp at which Announcement was created", "format": "date-time", "readOnly": true, "example": "2019-06-18T13:45:11Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Announcement was last updated", "format": "date-time", "readOnly": true, "example": "2019-06-18T13:45:11Z"}}}',  # noqa: E501
    "CREATENEWPROBLEM": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Problem", "format": "int64", "readOnly": true, "example": 1001}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the Problem is assigned", "format": "int64", "example": 34523423}, "requester_id": {"type": "integer", "description": "Unique identifier of the user who raised the Problem", "format": "int64", "example": 193845793}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the Problem is assigned", "format": "int64", "example": 12943209}, "priority": {"type": "integer", "description": "Priority of the Problem 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "int64", "example": 1, "enum": [1, 2, 3, 4]}, "impact": {"type": "integer", "description": "Impact of the Problem 1-Low, 2-Medium, 3-High", "format": "int64", "example": 1, "enum": [1, 2, 3]}, "status": {"type": "integer", "description": "Status identifier of the Problem. Open -> 1, Change Requested -> 2, Closed -> 3", "format": "int32", "example": 1}, "subject": {"type": "string", "description": "Subject of the Problem", "example": "Unable to reach email server"}, "due_by": {"type": "string", "description": "Timestamp at which Problem\'s resolution is due", "format": "date-time", "readOnly": true, "example": "2021-06-25T07:16:00Z"}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the Problem", "format": "int64", "example": 14002384}, "category": {"type": "string", "description": "Category of the Problem", "example": "Customer Support"}, "sub_category": {"type": "string", "description": "Sub-category of the Problem", "example": "Multi-DRM and Rights Management"}, "item_category": {"type": "string", "description": "Item of the Problem", "example": "Media Manager"}, "known_error": {"type": "boolean", "description": "true if the Problem is a known error, false otherwise", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which Problem was created", "format": "date-time", "readOnly": true, "example": "2021-10-12T15:01:27Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Problem was last updated", "format": "date-time", "readOnly": true, "example": "2021-10-12T15:01:27Z"}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "attachments": {"type": "array", "description": "URLs of attachments attached to the Problem request", "readOnly": true, "example": ["https://s3.amazonaws.com/fs/image1.jpg", "https://s3.amazonaws.com/fs/image2.jpg"], "items": {"type": "string", "format": "URL"}}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Sample value"}}, "analysis_fields": {"type": "object", "properties": {"problem_cause": {"type": "object", "properties": {"description": {"type": "string", "description": "Cause of the Problem", "example": "Router malfunction"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Cause", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Router malfunction"}}, "problem_symptoms": {"type": "object", "properties": {"description": {"type": "string", "description": "Symptoms of the Problem", "example": "Cannot connect mobile devices to Wi-fi"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Symptom", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Cannot connect mobile devices to Wi-fi"}}, "problem_impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact of the Problem", "example": "Affects Wi-fi connectivity in Block A"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Impact", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Affects Wi-fi connectivity in Block A"}}}, "example": {"problem_cause": {"description": "Router malfunction"}, "problem_symptoms": {"description": "Cannot connect mobile devices to Wi-fi"}, "problem_impact": {"description": "Affects Wi-fi connectivity in Block A"}}}}}',  # noqa: E501
    "UPDATESERVICEPROBLEM": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Problem", "format": "int64", "readOnly": true, "example": 1001}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the Problem is assigned", "format": "int64", "example": 34523423}, "requester_id": {"type": "integer", "description": "Unique identifier of the user who raised the Problem", "format": "int64", "example": 193845793}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the Problem is assigned", "format": "int64", "example": 12943209}, "priority": {"type": "integer", "description": "Priority of the Problem 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "int64", "example": 1, "enum": [1, 2, 3, 4]}, "impact": {"type": "integer", "description": "Impact of the Problem 1-Low, 2-Medium, 3-High", "format": "int64", "example": 1, "enum": [1, 2, 3]}, "status": {"type": "integer", "description": "Status identifier of the Problem. Open -> 1, Change Requested -> 2, Closed -> 3", "format": "int32", "example": 1}, "subject": {"type": "string", "description": "Subject of the Problem", "example": "Unable to reach email server"}, "due_by": {"type": "string", "description": "Timestamp at which Problem\'s resolution is due", "format": "date-time", "readOnly": true, "example": "2021-06-25T07:16:00Z"}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the Problem", "format": "int64", "example": 14002384}, "category": {"type": "string", "description": "Category of the Problem", "example": "Customer Support"}, "sub_category": {"type": "string", "description": "Sub-category of the Problem", "example": "Multi-DRM and Rights Management"}, "item_category": {"type": "string", "description": "Item of the Problem", "example": "Media Manager"}, "known_error": {"type": "boolean", "description": "true if the Problem is a known error, false otherwise", "example": true}, "created_at": {"type": "string", "description": "Timestamp at which Problem was created", "format": "date-time", "readOnly": true, "example": "2021-10-12T15:01:27Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Problem was last updated", "format": "date-time", "readOnly": true, "example": "2021-10-12T15:01:27Z"}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "attachments": {"type": "array", "description": "URLs of attachments attached to the Problem request", "readOnly": true, "example": ["https://s3.amazonaws.com/fs/image1.jpg", "https://s3.amazonaws.com/fs/image2.jpg"], "items": {"type": "string", "format": "URL"}}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Sample value"}}, "analysis_fields": {"type": "object", "properties": {"problem_cause": {"type": "object", "properties": {"description": {"type": "string", "description": "Cause of the Problem", "example": "Router malfunction"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Cause", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Router malfunction"}}, "problem_symptoms": {"type": "object", "properties": {"description": {"type": "string", "description": "Symptoms of the Problem", "example": "Cannot connect mobile devices to Wi-fi"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Symptom", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Cannot connect mobile devices to Wi-fi"}}, "problem_impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact of the Problem", "example": "Affects Wi-fi connectivity in Block A"}, "attachments": {"type": "array", "description": "URLs of attachments attached for Problem Impact", "example": ["https://s3.amazonaws.com/fs/doc1.pdf", "https://s3.amazonaws.com/fs/doc2.pdf"], "items": {"type": "string", "format": "URL"}}}, "example": {"description": "Affects Wi-fi connectivity in Block A"}}}, "example": {"problem_cause": {"description": "Router malfunction"}, "problem_symptoms": {"description": "Cannot connect mobile devices to Wi-fi"}, "problem_impact": {"description": "Affects Wi-fi connectivity in Block A"}}}}}',  # noqa: E501
    "CREATEFRESHSERVICEPROBLEMTASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATEPROBLEMTASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "CREATEPROBLEMTIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "UPDATEFRESHSERVICEPROBLEMTIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "GETONBOARDINGREQUESTFORM": "{}",
    "CREATEONBOARDINGREQUEST": '{"required": ["fields"], "type": "object", "properties": {"fields": {"type": "object", "additionalProperties": {"type": "string"}, "example": {"cf_employee_name": "Sample", "cf_department_name": "Customer Support", "cf_job_title": "it user", "cf_date_of_joining": "2019-06-15"}}}}',  # noqa: E501
    "CREATEFRESHSERVICECANNEDRESPONSE": '{"type": "object", "properties": {"id": {"type": "integer", "format": "int64", "readOnly": true, "example": 14006643}, "title": {"type": "string", "example": "Common L2 response"}, "folder_id": {"type": "integer", "format": "int32", "example": 14022945}, "content": {"type": "string", "readOnly": true, "example": "Raise a support ticket"}, "content_html": {"type": "string", "example": "<div>Raise a support ticket</div>"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "attachments": {"type": "array", "example": [], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "UPDATECANNEDRESPONSE": '{"type": "object", "properties": {"id": {"type": "integer", "format": "int64", "readOnly": true, "example": 14006643}, "title": {"type": "string", "example": "Common L2 response"}, "folder_id": {"type": "integer", "format": "int32", "example": 14022945}, "content": {"type": "string", "readOnly": true, "example": "Raise a support ticket"}, "content_html": {"type": "string", "example": "<div>Raise a support ticket</div>"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "attachments": {"type": "array", "example": [], "items": {"type": "object", "properties": {"id": {"type": "integer", "description": "Auto increment value", "format": "int64", "readOnly": true, "example": 14000884384}, "content_type": {"type": "string", "example": "application/pdf"}, "size": {"type": "number", "description": "Size of the attached file", "readOnly": true, "example": 1024.0}, "name": {"type": "string", "description": "Name of the attachment", "example": "doc1.pdf"}, "attachment_url": {"type": "string", "description": "URL of the attachment", "example": "https://s3.amazonaws.com/fs/doc1.pdf"}}}}}}',  # noqa: E501
    "CREATERELEASEREQUEST": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Release", "format": "int64", "readOnly": true, "example": 10}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the Release is assigned", "format": "int64", "example": 14043616}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the Release is assigned", "format": "int64", "example": 10184589}, "priority": {"type": "integer", "description": "Priority of the Release 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "string", "example": 1}, "status": {"type": "integer", "description": "Status identifier of the Release. Open -> 1, On hold -> 2, In Progress -> 3, Incomplete -> 4, Completed -> 5", "format": "int32", "example": 1}, "release_type": {"type": "integer", "description": "Type of the Release 1-minor, 2-standard, 3-major, 4-emergency", "format": "string", "example": 1}, "subject": {"type": "string", "description": "Subject of the Release", "example": "Security Patch Deployment"}, "planned_start_date": {"type": "string", "description": "Timestamp at which release is starting", "format": "date-time", "example": "2021-08-01T18:30:00Z"}, "planned_end_date": {"type": "string", "description": "Timestamp at which release is ending", "format": "date-time", "example": "2021-08-08T18:45:00Z"}, "work_start_date": {"type": "string", "description": "Timestamp at which release work started", "format": "date-time", "example": "2021-08-01T18:30:00Z"}, "work_end_date": {"type": "string", "description": "Timestamp at which release work ended", "format": "date-time", "example": "2021-08-08T18:45:00Z"}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the Release", "format": "int64", "example": 10143312}, "category": {"type": "string", "description": "Category of the Release", "example": "Security"}, "sub_category": {"type": "string", "description": "Sub-category of the Release", "example": "Deployment"}, "item_category": {"type": "string", "description": "Item of the Release", "example": "Security"}, "created_at": {"type": "string", "description": "Timestamp at which Release was created", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Release was last updated", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "associated_assets": {"type": "array", "description": "Unique IDs of the assets associated with the Release request", "readOnly": true, "example": [1001, 1002], "items": {"type": "integer", "format": "int64"}}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "associated_changes": {"type": "array", "description": "Unique IDs of the Changes associated with the Release", "readOnly": true, "example": [1001, 1002], "items": {"type": "integer", "format": "int64"}}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Some Value"}}, "planning_fields": {"type": "object", "properties": {"reason_for_change": {"type": "object", "properties": {"description": {"type": "string", "description": "Reason for change", "example": "<p>Reason for change</p>"}, "description_text": {"type": "string", "description": "Reason for change in plain text format", "readOnly": true, "example": "Reason for Change"}}, "example": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}}, "impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact", "example": "<p>Impact</p>"}, "description_text": {"type": "string", "description": "Impact in plain text format", "readOnly": true, "example": "Impact"}}, "example": {"description": "<div>Impact</div>", "description_text": "Impact"}}, "rollout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Rollout Plan", "example": "<div>Rollout plan</div>"}, "description_text": {"type": "string", "description": "Rollout plan in plain text format", "readOnly": true, "example": "Rollout Plan"}}, "example": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}}, "backout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Backout Plan", "example": "<div>Backout plan</div>"}, "description_text": {"type": "string", "description": "Backout plan in plain text format", "readOnly": true, "example": "Backout Plan"}}, "example": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "example": {"reason_for_change": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}, "impact": {"description": "<div>Impact</div>", "description_text": "Impact"}, "rollout_plan": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}, "backout_plan": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}}}',  # noqa: E501
    "UPDATEFRESHSERVICERELEASE": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique identifier of the Release", "format": "int64", "readOnly": true, "example": 10}, "agent_id": {"type": "integer", "description": "Unique identifier of the agent to whom the Release is assigned", "format": "int64", "example": 14043616}, "group_id": {"type": "integer", "description": "Unique identifier of the agent group to which the Release is assigned", "format": "int64", "example": 10184589}, "priority": {"type": "integer", "description": "Priority of the Release 1-Low, 2-Medium, 3-High, 4-Urgent", "format": "string", "example": 1}, "status": {"type": "integer", "description": "Status identifier of the Release. Open -> 1, On hold -> 2, In Progress -> 3, Incomplete -> 4, Completed -> 5", "format": "int32", "example": 1}, "release_type": {"type": "integer", "description": "Type of the Release 1-minor, 2-standard, 3-major, 4-emergency", "format": "string", "example": 1}, "subject": {"type": "string", "description": "Subject of the Release", "example": "Security Patch Deployment"}, "planned_start_date": {"type": "string", "description": "Timestamp at which release is starting", "format": "date-time", "example": "2021-08-01T18:30:00Z"}, "planned_end_date": {"type": "string", "description": "Timestamp at which release is ending", "format": "date-time", "example": "2021-08-08T18:45:00Z"}, "work_start_date": {"type": "string", "description": "Timestamp at which release work started", "format": "date-time", "example": "2021-08-01T18:30:00Z"}, "work_end_date": {"type": "string", "description": "Timestamp at which release work ended", "format": "date-time", "example": "2021-08-08T18:45:00Z"}, "department_id": {"type": "integer", "description": "Unique ID of the department initiating the Release", "format": "int64", "example": 10143312}, "category": {"type": "string", "description": "Category of the Release", "example": "Security"}, "sub_category": {"type": "string", "description": "Sub-category of the Release", "example": "Deployment"}, "item_category": {"type": "string", "description": "Item of the Release", "example": "Security"}, "created_at": {"type": "string", "description": "Timestamp at which Release was created", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "updated_at": {"type": "string", "description": "Timestamp at which Release was last updated", "format": "date-time", "readOnly": true, "example": "2021-08-12T10:10:20Z"}, "associated_assets": {"type": "array", "description": "Unique IDs of the assets associated with the Release request", "readOnly": true, "example": [1001, 1002], "items": {"type": "integer", "format": "int64"}}, "assets": {"type": "array", "description": "Assets associated with the Ticket", "example": [], "items": {"type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "id of the asset", "format": "int64", "readOnly": true, "example": 14000234324}, "display_id": {"minimum": 1, "type": "integer", "description": "display id of the asset that is used for all operations", "format": "int64", "readOnly": true, "example": 1453}, "name": {"type": "string", "description": "Display Name of the Asset", "example": "Hardware-Monitor"}, "description": {"type": "string", "description": "Description of the asset", "example": "28-inch Hardware-Monitor"}, "asset_type_id": {"minimum": 1, "type": "integer", "description": "Id of the asset type.", "format": "int64", "example": 14000284324}, "impact": {"type": "string", "description": "Impact of the asset (accepted values \'high\' \'medium\' \'low\')", "example": "low", "enum": ["low", "medium", "high"]}, "author_type": {"type": "string", "description": "Asset created by source", "readOnly": true, "example": "User"}, "usage_type": {"type": "string", "description": "Usage type of the asset  (accepted values are \'permanent\' & \'loaner\')", "example": "loaner", "enum": ["permanent", "loaner"]}, "asset_tag": {"type": "string", "description": "Asset tag of the asset", "example": "wxyzabcdefghij"}, "user_id": {"minimum": 1, "type": "integer", "description": "Used by of the asset", "format": "int64", "example": 14000234324}, "department_id": {"minimum": 1, "type": "integer", "description": "Department of the asset", "format": "int64", "example": 14000232343}, "location_id": {"minimum": 1, "type": "integer", "description": "Location of the asset", "format": "int64", "example": 140006394857}, "agent_id": {"minimum": 1, "type": "integer", "description": "Managed by of the asset", "format": "int64", "example": 14000234324}, "group_id": {"minimum": 1, "type": "integer", "description": "Managed by group of the asset", "format": "int64", "example": 14000234939}, "assigned_on": {"type": "string", "description": "Date and time when the asset was assigned", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "created_at": {"type": "string", "description": "Timestamp at which the asset was created", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the asset was last modified", "format": "date-time", "readOnly": true, "example": "2021-11-24T11:30:00Z"}, "type_fields": {"type": "object", "additionalProperties": true, "description": "Fields specific to every asset type (Every asset will have default base fields and type specific fields)", "example": {"field1": "Value 1", "field2": "Value 2"}}}}}, "associated_changes": {"type": "array", "description": "Unique IDs of the Changes associated with the Release", "readOnly": true, "example": [1001, 1002], "items": {"type": "integer", "format": "int64"}}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Some Value"}}, "planning_fields": {"type": "object", "properties": {"reason_for_change": {"type": "object", "properties": {"description": {"type": "string", "description": "Reason for change", "example": "<p>Reason for change</p>"}, "description_text": {"type": "string", "description": "Reason for change in plain text format", "readOnly": true, "example": "Reason for Change"}}, "example": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}}, "impact": {"type": "object", "properties": {"description": {"type": "string", "description": "Impact", "example": "<p>Impact</p>"}, "description_text": {"type": "string", "description": "Impact in plain text format", "readOnly": true, "example": "Impact"}}, "example": {"description": "<div>Impact</div>", "description_text": "Impact"}}, "rollout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Rollout Plan", "example": "<div>Rollout plan</div>"}, "description_text": {"type": "string", "description": "Rollout plan in plain text format", "readOnly": true, "example": "Rollout Plan"}}, "example": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}}, "backout_plan": {"type": "object", "properties": {"description": {"type": "string", "description": "Backout Plan", "example": "<div>Backout plan</div>"}, "description_text": {"type": "string", "description": "Backout plan in plain text format", "readOnly": true, "example": "Backout Plan"}}, "example": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}, "example": {"reason_for_change": {"description": "<div>Reason for change</div>", "description_text": "Reason for change"}, "impact": {"description": "<div>Impact</div>", "description_text": "Impact"}, "rollout_plan": {"description": "<div>Rollout plan</div>", "description_text": "Rollout Plan"}, "backout_plan": {"description": "<div>Backout plan</div>", "description_text": "Backout Plan"}}}}}',  # noqa: E501
    "CREATERELEASETASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "UPDATERELEASETASK": '{"type": "object", "properties": {"created_by": {"type": "integer", "description": "Unique ID of the user who created the task", "format": "int64", "readOnly": true, "example": 14000048691}, "agent_id": {"type": "integer", "description": "Id of the agent to whom the task is assigned", "format": "int64", "readOnly": true, "example": 14000043616}, "id": {"type": "integer", "description": "Unique ID of the task", "format": "int64", "readOnly": true, "example": 48}, "status": {"type": "integer", "description": "Status of the task, 1-Open, 2-In Progress, 3-Completed", "format": "int64", "readOnly": true, "example": 1, "enum": [1, 2, 3, 4]}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the task belongs", "format": "int64", "readOnly": true, "example": 589}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "due_date": {"type": "string", "description": "Due date of the task", "format": "date-time", "example": "2021-11-24T11:30:00Z"}, "notify_before": {"type": "integer", "description": "Time in seconds before which notification is sent prior to due date", "format": "int64", "example": 3600}, "title": {"type": "string", "description": "Title of the task", "example": "Renew license"}, "description": {"type": "string", "description": "Description of the task", "example": "Renew Software license"}, "created_at": {"type": "string", "description": "Timestamp at which the task was created", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "updated_at": {"type": "string", "description": "Timestamp at which the task was updated", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "closed_at": {"type": "string", "description": "Timestamp at which the task was closed", "format": "date-time", "readOnly": true, "example": "2021-11-22T16:58:45Z"}, "group_id": {"type": "integer", "description": "Unique ID of the group to which the task is assigned", "format": "int64", "readOnly": true, "example": 14000184589}, "start_date": {"type": "string", "description": "Timestamp at which the task is started", "format": "date-time", "example": "2021-11-22T16:58:45Z"}}}',  # noqa: E501
    "ADDRELEASETIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "UPDATERELEASETIMEENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "description": "Unique ID of the time entry", "format": "int64", "readOnly": true, "example": 14702899}, "task_id": {"type": "integer", "description": "Unique ID of the task associated with the time entry", "format": "int64", "example": 45}, "parent_id": {"type": "integer", "description": "Unique ID of the parent entity to which the time entry belongs", "format": "int64", "readOnly": true, "example": 500}, "parent_type": {"type": "string", "description": "Type of the parent entity - [Ticket, Problem, Change, Release, Project]", "example": "Ticket"}, "start_time": {"type": "string", "description": "Time at which the timer started", "format": "date-time", "example": "2021-10-15T12:31:42Z"}, "time_spent": {"type": "string", "description": "Duration of time spent in seconds", "example": "10:15"}, "timer_running": {"type": "boolean", "description": "true if timer is running, false otherwise", "example": true}, "billable": {"type": "boolean", "description": "true if billable, false otherwise", "example": true}, "agent_id": {"type": "integer", "description": "Unique ID of the user who created the time entry", "format": "int64", "example": 14007423}, "note": {"type": "string", "description": "Description note of the time entry", "format": "text", "example": "Spent time on task"}, "created_at": {"type": "string", "description": "Timestamp at which the time entry is created", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "updated_at": {"type": "string", "description": "Time stamp at which the time entry is updated", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:42Z"}, "executed_at": {"type": "string", "description": "Date time at which the time entry is executed", "format": "date-time", "readOnly": true, "example": "2021-10-15T12:31:00Z"}, "custom_fields": {"type": "object", "additionalProperties": {"type": "string"}, "description": "Key value pairs containing the names and values of custom fields", "example": {"field1": "Value 1", "field2": "Value 2"}}}}',  # noqa: E501
    "CREATEPURCHASEORDER": '{"allOf": [{"title": "PurchaseOrder", "type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "ID of the purchase order", "format": "int64", "readOnly": true, "example": 10}, "vendor_id": {"minimum": 1, "type": "integer", "description": "ID of the vendor with whom the order is placed", "format": "int64", "example": 100001633}, "name": {"type": "string", "description": "Title of the purchase order", "example": "Procure Adobe License"}, "po_number": {"type": "string", "description": "Purchase order number", "example": "PO-10"}, "vendor_details": {"type": "string", "description": "Details of the vendor with whom the order is placed", "example": "1 Infinite Loop Cupertino California United States 95014"}, "expected_delivery_date": {"type": "string", "description": "Expected delivery date of the purchase order", "format": "date-time", "example": "2020-01-01T05:00:01Z"}, "created_at": {"type": "string", "description": "Created date and time of the purchase order", "format": "date-time", "readOnly": true, "example": "2021-08-30T04:22:14Z"}, "updated_at": {"type": "string", "description": "Updated date and time of the purchase order", "format": "date-time", "readOnly": true, "example": "2021-08-30T04:22:14Z"}, "created_by": {"minimum": 1, "type": "integer", "description": "ID of the agent who created purchase order", "format": "int64", "readOnly": true, "example": 1001001256}, "status": {"type": "number", "description": "Status of the purchase order", "example": 20.0}, "shipping_address": {"type": "string", "description": "Address to which the order should be shipped", "example": "1 Infinite Loop Cupertino California"}, "billing_same_as_shipping": {"type": "boolean", "description": "True if Billing address is same as Shipping address", "example": true}, "billing_address": {"type": "string", "description": "Address to which the order should be billed", "example": "1 Infinite Loop Cupertino California"}, "currency_code": {"type": "string", "description": "Currency unit used in the transaction", "example": "USD", "enum": ["AUD", "THB", "CAD", "CNY", "DKK", "AED", "USD", "EGP", "EUR", "HUF", "CHF", "HKD", "IDR", "ILS", "CZK", "ISK", "TRL", "MYR", "MXN", "NOK", "OMR", "PHP", "PLN", "GBP", "BWP", "QAR", "ZAR", "BRL", "RUB", "INR", "SAR", "SGD", "SEK", "TWD", "VND", "KRW", "JPY", "NZD", "JOD"]}, "conversion_rate": {"type": "number", "description": "Conversion rate to convert selected currency unit to helpdesk currency", "format": "float", "example": 1.0}, "department_id": {"minimum": 1, "type": "integer", "description": "Unique ID of the department", "format": "int64", "example": 10123}, "discount_percentage": {"maximum": 100, "minimum": 0, "type": "number", "description": "Percentage of discount on the order", "format": "float", "example": 2.0}, "tax_percentage": {"minimum": 0, "type": "number", "description": "Percentage of tax on the order", "format": "float", "example": 5.0}, "shipping_cost": {"minimum": 0, "type": "number", "description": "Total cost of shipping the order", "format": "float", "example": 10.0}, "custom_fields": {"type": "object", "properties": {}, "example": {"manager": "andrea@freshservice.com", "department": "IT"}}}, "x-tags": ["Purchase Orders"]}, {"type": "object", "properties": {"purcahse_items": {"type": "array", "example": [{"item_type": 2, "item_name": "Macbook Air", "description": "Macbook Air", "cost": 2, "quantity": 1, "tax_percentage": 5}], "items": {"title": "PurchaseItem", "type": "object", "properties": {"item_type": {"type": "integer", "description": "Type of item to be ordered", "format": "int64", "example": 2, "enum": [1, 2, 3]}, "item_name": {"type": "string", "description": "Name of the items to be ordered", "example": "Macbook Air"}, "description": {"type": "string", "description": "Item description", "example": "Macbook Air"}, "cost": {"minimum": 0, "type": "number", "description": "Cost of the item", "example": 2.0}, "quantity": {"minimum": 1, "type": "integer", "description": "Quantity of item to be ordered", "example": 1}, "tax_percentage": {"minimum": 0, "type": "number", "description": "Percentage of tax on item cost", "example": 5.0}}, "x-tags": ["Purchase Orders"]}}}}]}',  # noqa: E501
    "UPDATEPURCHASEORDER": '{"allOf": [{"title": "PurchaseOrder", "type": "object", "properties": {"id": {"minimum": 1, "type": "integer", "description": "ID of the purchase order", "format": "int64", "readOnly": true, "example": 10}, "vendor_id": {"minimum": 1, "type": "integer", "description": "ID of the vendor with whom the order is placed", "format": "int64", "example": 100001633}, "name": {"type": "string", "description": "Title of the purchase order", "example": "Procure Adobe License"}, "po_number": {"type": "string", "description": "Purchase order number", "example": "PO-10"}, "vendor_details": {"type": "string", "description": "Details of the vendor with whom the order is placed", "example": "1 Infinite Loop Cupertino California United States 95014"}, "expected_delivery_date": {"type": "string", "description": "Expected delivery date of the purchase order", "format": "date-time", "example": "2020-01-01T05:00:01Z"}, "created_at": {"type": "string", "description": "Created date and time of the purchase order", "format": "date-time", "readOnly": true, "example": "2021-08-30T04:22:14Z"}, "updated_at": {"type": "string", "description": "Updated date and time of the purchase order", "format": "date-time", "readOnly": true, "example": "2021-08-30T04:22:14Z"}, "created_by": {"minimum": 1, "type": "integer", "description": "ID of the agent who created purchase order", "format": "int64", "readOnly": true, "example": 1001001256}, "status": {"type": "number", "description": "Status of the purchase order", "example": 20.0}, "shipping_address": {"type": "string", "description": "Address to which the order should be shipped", "example": "1 Infinite Loop Cupertino California"}, "billing_same_as_shipping": {"type": "boolean", "description": "True if Billing address is same as Shipping address", "example": true}, "billing_address": {"type": "string", "description": "Address to which the order should be billed", "example": "1 Infinite Loop Cupertino California"}, "currency_code": {"type": "string", "description": "Currency unit used in the transaction", "example": "USD", "enum": ["AUD", "THB", "CAD", "CNY", "DKK", "AED", "USD", "EGP", "EUR", "HUF", "CHF", "HKD", "IDR", "ILS", "CZK", "ISK", "TRL", "MYR", "MXN", "NOK", "OMR", "PHP", "PLN", "GBP", "BWP", "QAR", "ZAR", "BRL", "RUB", "INR", "SAR", "SGD", "SEK", "TWD", "VND", "KRW", "JPY", "NZD", "JOD"]}, "conversion_rate": {"type": "number", "description": "Conversion rate to convert selected currency unit to helpdesk currency", "format": "float", "example": 1.0}, "department_id": {"minimum": 1, "type": "integer", "description": "Unique ID of the department", "format": "int64", "example": 10123}, "discount_percentage": {"maximum": 100, "minimum": 0, "type": "number", "description": "Percentage of discount on the order", "format": "float", "example": 2.0}, "tax_percentage": {"minimum": 0, "type": "number", "description": "Percentage of tax on the order", "format": "float", "example": 5.0}, "shipping_cost": {"minimum": 0, "type": "number", "description": "Total cost of shipping the order", "format": "float", "example": 10.0}, "custom_fields": {"type": "object", "properties": {}, "example": {"manager": "andrea@freshservice.com", "department": "IT"}}}, "x-tags": ["Purchase Orders"]}, {"type": "object", "properties": {"purcahse_items": {"type": "array", "example": [{"item_type": 2, "item_name": "Macbook Air", "description": "Macbook Air", "cost": 2, "quantity": 1, "tax_percentage": 5}], "items": {"title": "PurchaseItem", "type": "object", "properties": {"item_type": {"type": "integer", "description": "Type of item to be ordered", "format": "int64", "example": 2, "enum": [1, 2, 3]}, "item_name": {"type": "string", "description": "Name of the items to be ordered", "example": "Macbook Air"}, "description": {"type": "string", "description": "Item description", "example": "Macbook Air"}, "cost": {"minimum": 0, "type": "number", "description": "Cost of the item", "example": 2.0}, "quantity": {"minimum": 1, "type": "integer", "description": "Quantity of item to be ordered", "example": 1}, "tax_percentage": {"minimum": 0, "type": "number", "description": "Percentage of tax on item cost", "example": 5.0}}, "x-tags": ["Purchase Orders"]}}}}]}',  # noqa: E501
}
