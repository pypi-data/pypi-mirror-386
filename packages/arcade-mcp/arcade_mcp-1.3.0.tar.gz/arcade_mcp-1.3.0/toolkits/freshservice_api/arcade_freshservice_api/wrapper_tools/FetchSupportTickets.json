{
  "name": "FetchSupportTickets",
  "fully_qualified_name": "FreshserviceApi.FetchSupportTickets@1.0.0",
  "description": "Fetch the list of all support tickets in Freshservice.\n\nUse this tool to retrieve a list of all support tickets from Freshservice. It can be helpful for viewing or managing support requests.",
  "toolkit": {
    "name": "ArcadeFreshserviceApi",
    "description": null,
    "version": "1.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "ticket_filter_type",
        "required": false,
        "description": "Pre-defined filters to categorize tickets. Available options: new_and_my_open, watching, spam, deleted.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pre-defined filters. The filters available are [new_and_my_open, watching, spam, deleted]."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "filter_by_requester_email",
        "required": false,
        "description": "Filter tickets by the requester's email ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets requester's email id."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "email"
      },
      {
        "name": "filter_by_requester_id",
        "required": false,
        "description": "Filter tickets by a specific requester using their unique ID.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets created by a particular requester."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requester_id"
      },
      {
        "name": "updated_since_datetime",
        "required": false,
        "description": "Filter tickets updated after this datetime (ISO 8601 format, e.g., '2015-01-19T02:00:00Z').",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets based on updated time. E.g. '?updated_since=2015-01-19T02:00:00Z'."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "updated_since"
      },
      {
        "name": "include_fields_in_response",
        "required": false,
        "description": "Specify fields to include in the response, such as 'stats' for ticket status times or 'requester' for requester details.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to include certain fields in response. E.g. '?include=stats' Will return the ticket\u2019s closed_at, resolved_at and first_responded_at time. '?include=requester' Will return the requester's email, id, mobile, name, and phone."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "include"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Sort the list of tickets. Supported values: 'asc' for ascending and 'desc' for descending. Default is 'desc'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to sort the list of tickets. Supported values - 'asc' and 'desc'. Default is 'desc'"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "order_type"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'list-tickets'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Freshservice API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.freshservice.com/api/v2/tickets",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "filter",
        "tool_parameter_name": "ticket_filter_type",
        "description": "Pre-defined filters. The filters available are [new_and_my_open, watching, spam, deleted].",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pre-defined filters. The filters available are [new_and_my_open, watching, spam, deleted]."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "email",
        "tool_parameter_name": "filter_by_requester_email",
        "description": "Query param to filter out tickets requester's email id.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets requester's email id."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requester_id",
        "tool_parameter_name": "filter_by_requester_id",
        "description": "Query param to filter out tickets created by a particular requester.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets created by a particular requester."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "updated_since",
        "tool_parameter_name": "updated_since_datetime",
        "description": "Query param to filter out tickets based on updated time. E.g. '?updated_since=2015-01-19T02:00:00Z'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to filter out tickets based on updated time. E.g. '?updated_since=2015-01-19T02:00:00Z'."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "include",
        "tool_parameter_name": "include_fields_in_response",
        "description": "Query param to include certain fields in response. E.g. '?include=stats' Will return the ticket\u2019s closed_at, resolved_at and first_responded_at time. '?include=requester' Will return the requester's email, id, mobile, name, and phone.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to include certain fields in response. E.g. '?include=stats' Will return the ticket\u2019s closed_at, resolved_at and first_responded_at time. '?include=requester' Will return the requester's email, id, mobile, name, and phone."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "order_type",
        "tool_parameter_name": "sort_order",
        "description": "Query param to sort the list of tickets. Supported values - 'asc' and 'desc'. Default is 'desc'",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Query param to sort the list of tickets. Supported values - 'asc' and 'desc'. Default is 'desc'"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
