{
  "name": "GetAllRequesters",
  "fully_qualified_name": "FreshserviceApi.GetAllRequesters@1.0.0",
  "description": "Retrieve a list of all requesters in Freshservice.\n\nCall this tool to get a comprehensive list of all requesters from the Freshservice platform.",
  "toolkit": {
    "name": "ArcadeFreshserviceApi",
    "description": null,
    "version": "1.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "entries_per_page",
        "required": false,
        "description": "The number of requesters to retrieve per page in the list.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of entries to retrieve in each page of a paginated list."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      },
      {
        "name": "retrieve_page_number",
        "required": false,
        "description": "Specify the page number to retrieve in the list of requesters.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The page number to retrieve."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "requester_email",
        "required": false,
        "description": "The email address to list the corresponding requester. Use this to filter results to a specific requester by email.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address for which the corresponding requester needs to be listed."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "email"
      },
      {
        "name": "filter_by_mobile_phone_number",
        "required": false,
        "description": "The mobile phone number to filter and list corresponding requesters.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The mobile phone number for which the corresponding requesters need to be listed."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "mobile_phone_number"
      },
      {
        "name": "filter_by_work_phone_number",
        "required": false,
        "description": "The work phone number to filter requesters by. Returns requesters matching the specified work phone number.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The work phone number for which the corresponding requesters need to be listed."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "work_phone_number"
      },
      {
        "name": "requester_filter_query",
        "required": false,
        "description": "A URL-encoded string to filter the list of requesters. Use parameters like first_name, job_title, etc. Example: \"job_title:'HR Manager' AND created_at:>'2018-08-10'\".",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The simple or compound query which needs to be applied as a filter to the list of requesters. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>first_name, last_name, job_title, primary_email, secondary_emails, work_phone_number, mobile_phone_number, department_id, reporting_manager_id, time_zone, language, location_id, created_at, updated_at, (all custom fields).<br/>Sample Query: https://account.freshservice.com/api/v2/requesters?query=\"job_titile:'HR Manager' AND created_at:>'2018-08-10'\""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "query"
      },
      {
        "name": "list_active_user_accounts",
        "required": false,
        "description": "Set to true to list only active user accounts. If false or not set, both active and deactivated accounts are returned.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Signifies if the user accounts to be listed are active (true), or have been deactivated. Not applying this filter returns both active and deactivated accounts."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "active"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'list-requesters'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "FRESHSERVICE_SUBDOMAIN"
      },
      {
        "key": "FRESHSERVICE_API_KEY"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Freshservice API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://{freshservice_subdomain}.freshservice.com/api/v2/requesters",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "per_page",
        "tool_parameter_name": "entries_per_page",
        "description": "The number of entries to retrieve in each page of a paginated list.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of entries to retrieve in each page of a paginated list."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 10,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "retrieve_page_number",
        "description": "The page number to retrieve.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The page number to retrieve."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "email",
        "tool_parameter_name": "requester_email",
        "description": "The email address for which the corresponding requester needs to be listed.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The email address for which the corresponding requester needs to be listed."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "mobile_phone_number",
        "tool_parameter_name": "filter_by_mobile_phone_number",
        "description": "The mobile phone number for which the corresponding requesters need to be listed.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The mobile phone number for which the corresponding requesters need to be listed."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "work_phone_number",
        "tool_parameter_name": "filter_by_work_phone_number",
        "description": "The work phone number for which the corresponding requesters need to be listed.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The work phone number for which the corresponding requesters need to be listed."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "active",
        "tool_parameter_name": "list_active_user_accounts",
        "description": "Signifies if the user accounts to be listed are active (true), or have been deactivated. Not applying this filter returns both active and deactivated accounts.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Signifies if the user accounts to be listed are active (true), or have been deactivated. Not applying this filter returns both active and deactivated accounts."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "query",
        "tool_parameter_name": "requester_filter_query",
        "description": "The simple or compound query which needs to be applied as a filter to the list of requesters. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>first_name, last_name, job_title, primary_email, secondary_emails, work_phone_number, mobile_phone_number, department_id, reporting_manager_id, time_zone, language, location_id, created_at, updated_at, (all custom fields).<br/>Sample Query: https://account.freshservice.com/api/v2/requesters?query=\"job_titile:'HR Manager' AND created_at:>'2018-08-10'\"",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The simple or compound query which needs to be applied as a filter to the list of requesters. This string needs to be URL encoded.<br/> Supported Query Parameters:<br/>first_name, last_name, job_title, primary_email, secondary_emails, work_phone_number, mobile_phone_number, department_id, reporting_manager_id, time_zone, language, location_id, created_at, updated_at, (all custom fields).<br/>Sample Query: https://account.freshservice.com/api/v2/requesters?query=\"job_titile:'HR Manager' AND created_at:>'2018-08-10'\""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "FRESHSERVICE_SUBDOMAIN",
        "parameter_name": "freshservice_subdomain",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "FRESHSERVICE_API_KEY",
        "parameter_name": "username",
        "accepted_as": "basic_auth_username",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
