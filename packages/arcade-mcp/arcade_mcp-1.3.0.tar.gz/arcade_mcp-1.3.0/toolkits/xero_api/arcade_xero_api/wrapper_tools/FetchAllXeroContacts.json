{
  "name": "FetchAllXeroContacts",
  "fully_qualified_name": "XeroApi.FetchAllXeroContacts@0.1.0",
  "description": "Retrieve all contacts from a Xero organization.\n\nUse this tool to obtain a list of all contacts within a specified Xero organization. It should be called when there's a need to access or manage contact information in Xero.",
  "toolkit": {
    "name": "ArcadeXeroApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "tenant_identifier",
        "required": true,
        "description": "A unique string to identify the tenant in Xero.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Xero identifier for Tenant"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "xero-tenant-id"
      },
      {
        "name": "filter_by_element",
        "required": false,
        "description": "Specify conditions to filter contacts by any element within their data fields.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by an any element"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "where"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Specifies the sorting order for contacts based on a specified element, such as name or date.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Order by an any element"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "order"
      },
      {
        "name": "contact_ids",
        "required": false,
        "description": "Comma-separated list of ContactIDs to retrieve specific contacts. Use this to filter the contacts returned by their unique IDs in a single call.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "IDs"
      },
      {
        "name": "pagination_page_number",
        "required": false,
        "description": "The specific page number to retrieve when fetching contacts. Each page returns up to 100 contacts.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "search_term",
        "required": false,
        "description": "A case-insensitive search term for filtering contacts by Name, FirstName, LastName, ContactNumber, or EmailAddress.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "searchTerm"
      },
      {
        "name": "records_per_page",
        "required": false,
        "description": "Number of contact records to retrieve per page.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to retrieve per page"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "pageSize"
      },
      {
        "name": "modified_since_timestamp",
        "required": false,
        "description": "Retrieve only records created or modified after the specified timestamp. Use ISO 8601 format for the timestamp.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only records created or modified since this timestamp will be returned"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "If-Modified-Since"
      },
      {
        "name": "include_archived_contacts",
        "required": false,
        "description": "Set to true to include contacts with a status of ARCHIVED in the response. False will exclude them.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "includeArchived"
      },
      {
        "name": "retrieve_summary_only_contacts",
        "required": false,
        "description": "Set to true to retrieve only lightweight contact fields, excluding computation-heavy data for faster API responses.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "summaryOnly"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'getContacts'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-xero",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "accounting.contacts.read",
          "accounting.contacts"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the Xero API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.xero.com/api.xro/2.0/Contacts",
    "http_method": "GET",
    "headers": {
      "Accept": "application/json"
    },
    "parameters": [
      {
        "name": "where",
        "tool_parameter_name": "filter_by_element",
        "description": "Filter by an any element",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by an any element"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "order",
        "tool_parameter_name": "sort_order",
        "description": "Order by an any element",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Order by an any element"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "IDs",
        "tool_parameter_name": "contact_ids",
        "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by a comma separated list of ContactIDs. Allows you to retrieve a specific set of contacts in a single call."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "pagination_page_number",
        "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "e.g. page=1 - Up to 100 contacts will be returned in a single API call."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "includeArchived",
        "tool_parameter_name": "include_archived_contacts",
        "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "e.g. includeArchived=true - Contacts with a status of ARCHIVED will be included in the response"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "summaryOnly",
        "tool_parameter_name": "retrieve_summary_only_contacts",
        "description": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Use summaryOnly=true in GET Contacts and Invoices endpoint to retrieve a smaller version of the response object. This returns only lightweight fields, excluding computation-heavy fields from the response, making the API calls quick and efficient."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "searchTerm",
        "tool_parameter_name": "search_term",
        "description": "Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Search parameter that performs a case-insensitive text search across the Name, FirstName, LastName, ContactNumber and EmailAddress fields."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "pageSize",
        "tool_parameter_name": "records_per_page",
        "description": "Number of records to retrieve per page",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Number of records to retrieve per page"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "xero-tenant-id",
        "tool_parameter_name": "tenant_identifier",
        "description": "Xero identifier for Tenant",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Xero identifier for Tenant"
        },
        "accepted_as": "header",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "If-Modified-Since",
        "tool_parameter_name": "modified_since_timestamp",
        "description": "Only records created or modified since this timestamp will be returned",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only records created or modified since this timestamp will be returned"
        },
        "accepted_as": "header",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
