{
  "name": "GetIntegrationLogs",
  "fully_qualified_name": "SlackApi.GetIntegrationLogs@0.1.0",
  "description": "Retrieve integration logs for the current Slack team.\n\nThis tool retrieves the integration logs for the current Slack team, providing insights into the team's integration history and activities. It requires admin OAuth scope to access the logs.",
  "toolkit": {
    "name": "ArcadeSlackApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "filter_by_app_id",
        "required": false,
        "description": "Filter integration logs to a specific Slack app. If not provided, logs for all apps are retrieved.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "app_id"
      },
      {
        "name": "filter_by_change_type",
        "required": false,
        "description": "Specify the change type to filter logs. Options: 'added', 'removed', 'enabled', 'disabled', 'updated'. Defaults to all logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "change_type"
      },
      {
        "name": "result_count",
        "required": false,
        "description": "The number of log entries to retrieve. Specify the maximum number of logs to return in a single request. (default: '100')",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "count"
      },
      {
        "name": "result_page_number",
        "required": false,
        "description": "The specific page number of the integration logs to retrieve. Used for pagination. (default: '1')",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "filter_by_service_id",
        "required": false,
        "description": "Specify the service ID to filter integration logs related to a specific service. If not provided, logs for all services will be retrieved.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "service_id"
      },
      {
        "name": "encoded_team_id",
        "required": false,
        "description": "The encoded team ID to get logs from, required if using an org-level token. Ignored if using a workspace-level token.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "team_id"
      },
      {
        "name": "filter_by_user",
        "required": false,
        "description": "Filter logs generated by a specific user's actions. Defaults to all logs if not specified.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "user"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'team.integrationLogs'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-slack",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "admin"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Arcade Wrapper Tools enabling LLMs to interact with low-level Slack API endpoints."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://slack.com/api/team.integrationLogs",
    "http_method": "GET",
    "headers": {
      "Content-Type": "application/x-www-form-urlencoded"
    },
    "parameters": [
      {
        "name": "app_id",
        "tool_parameter_name": "filter_by_app_id",
        "description": "Filter logs to this Slack app. Defaults to all logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "change_type",
        "tool_parameter_name": "filter_by_change_type",
        "description": "Filter logs with this change type. Possible values are `added`, `removed`, `enabled`, `disabled`, and `updated`. Defaults to all logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "count",
        "tool_parameter_name": "result_count",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "result_page_number",
        "description": "The page number of the result set to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "service_id",
        "tool_parameter_name": "filter_by_service_id",
        "description": "Filter logs to this service. Defaults to all logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "team_id",
        "tool_parameter_name": "encoded_team_id",
        "description": "Encoded team id to get logs from, required if org token is used.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "user",
        "tool_parameter_name": "filter_by_user",
        "description": "Filter logs generated by this user\u2019s actions. Defaults to all logs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": null
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [
      "https://docs.slack.dev/reference/methods/team.integrationlogs"
    ],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
