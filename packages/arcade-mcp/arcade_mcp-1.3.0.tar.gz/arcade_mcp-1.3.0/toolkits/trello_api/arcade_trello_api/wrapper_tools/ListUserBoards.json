{
  "name": "ListUserBoards",
  "fully_qualified_name": "TrelloApi.ListUserBoards@0.1.0",
  "description": "Lists the boards that a user is a member of.\n\nUse this tool to retrieve a list of boards associated with a specific user ID on Trello.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "member_id_or_username",
        "required": true,
        "description": "The ID or username of the Trello member whose boards are to be retrieved.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "board_filter",
        "required": false,
        "description": "Comma-separated list of board filters like 'closed', 'members', etc., or 'all'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "closed",
            "members",
            "open",
            "organization",
            "public",
            "starred"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "board_fields",
        "required": false,
        "description": "Specify `all` or a comma-separated list of board fields to include (e.g., `id,name,desc`).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name",
            "desc",
            "descData",
            "closed",
            "idMemberCreator",
            "idOrganization",
            "pinned",
            "url",
            "shortUrl",
            "prefs",
            "labelNames",
            "starred",
            "limits",
            "memberships",
            "enterpriseOwned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "include_lists_with_boards",
        "required": false,
        "description": "Specify which lists to include with the boards. Choose from: `all`, `closed`, `none`, `open`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "closed",
            "none",
            "open"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "lists"
      },
      {
        "name": "include_organization_fields",
        "required": false,
        "description": "Specify 'all' or a comma-separated list of organization fields to include (e.g., 'id,name').",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_fields"
      },
      {
        "name": "include_organization",
        "required": false,
        "description": "Indicates whether to include the Organization object with the Boards. Set to true to include.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether to include the Organization object with the Boards"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-members-id-boards'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/members/{id}/boards",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "filter",
        "tool_parameter_name": "board_filter",
        "description": "`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "closed",
            "members",
            "open",
            "organization",
            "public",
            "starred"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of: `closed`, `members`, `open`, `organization`, `public`, `starred`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "fields",
        "tool_parameter_name": "board_fields",
        "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name",
            "desc",
            "descData",
            "closed",
            "idMemberCreator",
            "idOrganization",
            "pinned",
            "url",
            "shortUrl",
            "prefs",
            "labelNames",
            "starred",
            "limits",
            "memberships",
            "enterpriseOwned"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of board [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "lists",
        "tool_parameter_name": "include_lists_with_boards",
        "description": "Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "closed",
            "none",
            "open"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Which lists to include with the boards. One of: `all`, `closed`, `none`, `open`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization",
        "tool_parameter_name": "include_organization",
        "description": "Whether to include the Organization object with the Boards",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether to include the Organization object with the Boards"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_fields",
        "tool_parameter_name": "include_organization_fields",
        "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "id",
            "name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "`all` or a comma-separated list of organization [fields](/cloud/trello/guides/rest-api/object-definitions/)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "member_id_or_username",
        "description": "The ID or username of the member",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID or username of the member"
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ]
  }
}
