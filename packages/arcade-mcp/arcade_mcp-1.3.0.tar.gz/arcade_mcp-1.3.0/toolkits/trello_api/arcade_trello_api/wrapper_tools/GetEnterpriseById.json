{
  "name": "GetEnterpriseById",
  "fully_qualified_name": "TrelloApi.GetEnterpriseById@0.1.0",
  "description": "Retrieve details of an enterprise by its ID.\n\nUse this tool to retrieve information about a specific enterprise in Trello using its ID.",
  "toolkit": {
    "name": "ArcadeTrelloApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "enterprise_id",
        "required": true,
        "description": "The unique ID of the enterprise to retrieve details for from Trello.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the enterprise to retrieve."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "enterprise_fields_to_retrieve",
        "required": false,
        "description": "Comma-separated list of fields to retrieve, such as `id`, `name`, `displayName`, etc.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "member_inclusion_type",
        "required": false,
        "description": "Specify the type of members to include: none, normal, admins, owners, or all.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `none`, `normal`, `admins`, `owners`, `all`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "members"
      },
      {
        "name": "member_fields",
        "required": false,
        "description": "Specify one member attribute to include: `avatarHash`, `fullName`, `initials`, or `username`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `avatarHash`, `fullName`, `initials`, `username`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_fields"
      },
      {
        "name": "member_filter_query",
        "required": false,
        "description": "A SCIM-style query to filter members. Overrides the normal/admins value of members.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_filter"
      },
      {
        "name": "member_sort_value",
        "required": false,
        "description": "Provide a SCIM-style sorting value. Prefix with '-' for descending order; default is ascending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_sort"
      },
      {
        "name": "member_sort",
        "required": false,
        "description": "SCIM-style sort value for members. Use `-` prefix to sort descending. Note: members array may be paginated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_sortBy"
      },
      {
        "name": "deprecated_member_sort_order",
        "required": false,
        "description": "Deprecated parameter for sorting members. Use 'member_sort' instead. Accepts: `ascending`, `descending`, `asc`, `desc`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_sortOrder"
      },
      {
        "name": "member_start_index",
        "required": false,
        "description": "An integer between 0 and 100 specifying the starting index for paginated member results.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any integer between 0 and 100."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_startIndex"
      },
      {
        "name": "member_count",
        "required": false,
        "description": "Specify the number of members to retrieve, ranging from 0 to 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "0 to 100"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "member_count"
      },
      {
        "name": "organization_visibility_filter",
        "required": false,
        "description": "Specify the level of visibility for the organizations. Options are: `none`, `members`, `public`, `all`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `none`, `members`, `public`, `all`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organizations"
      },
      {
        "name": "organization_fields",
        "required": false,
        "description": "Specify fields related to organizations to retrieve. Use values accepted by nested organization field resource.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested organization field resource]() accepts."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_fields"
      },
      {
        "name": "organization_memberships_filter",
        "required": false,
        "description": "Comma-separated list of workspace memberships to include, such as 'me', 'normal', 'admin', 'active', 'deactivated'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_memberships"
      },
      {
        "name": "include_paid_account_information",
        "required": false,
        "description": "Include paid account information in the returned workspace objects if true.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned workspace objects"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_paid_accounts"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get-enterprises-id'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "TRELLO_API_KEY"
      },
      {
        "key": "TRELLO_TOKEN"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the trello API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://api.trello.com/1/enterprises/{id}",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "fields",
        "tool_parameter_name": "enterprise_fields_to_retrieve",
        "description": "Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of: `id`, `name`, `displayName`, `prefs`, `ssoActivationFailed`, `idAdmins`, `idMembers` (Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data. Read the SCIM documentation [here]() for more information on filtering), `idOrganizations`, `products`, `userTypes`, `idMembers`, `idOrganizations`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "members",
        "tool_parameter_name": "member_inclusion_type",
        "description": "One of: `none`, `normal`, `admins`, `owners`, `all`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `none`, `normal`, `admins`, `owners`, `all`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_fields",
        "tool_parameter_name": "member_fields",
        "description": "One of: `avatarHash`, `fullName`, `initials`, `username`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `avatarHash`, `fullName`, `initials`, `username`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_filter",
        "tool_parameter_name": "member_filter_query",
        "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Pass a [SCIM-style query](/cloud/trello/scim/) to filter members. This takes precedence over the all/normal/admins value of members. If any of the member_* args are set, the member array will be paginated."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_sort",
        "tool_parameter_name": "member_sort_value",
        "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This parameter expects a [SCIM-style](/cloud/trello/scim/) sorting value prefixed by a `-` to sort descending. If no `-` is prefixed, it will be sorted ascending. Note that the members array returned will be paginated if `members` is 'normal' or 'admins'. Pagination can be controlled with member_startIndex, etc, but the API response will not contain the total available result count or pagination status data."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_sortBy",
        "tool_parameter_name": "member_sort",
        "description": "Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use member_sort. This parameter expects a [SCIM-style sorting value](/cloud/trello/scim/). Note that the members array returned will be paginated if `members` is `normal` or `admins`. Pagination can be controlled with `member_startIndex`, etc, and the API response's header will contain the total count and pagination state."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_sortOrder",
        "tool_parameter_name": "deprecated_member_sort_order",
        "description": "Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Deprecated: Please use member_sort. One of: `ascending`, `descending`, `asc`, `desc`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_startIndex",
        "tool_parameter_name": "member_start_index",
        "description": "Any integer between 0 and 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any integer between 0 and 100."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "member_count",
        "tool_parameter_name": "member_count",
        "description": "0 to 100",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "0 to 100"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organizations",
        "tool_parameter_name": "organization_visibility_filter",
        "description": "One of: `none`, `members`, `public`, `all`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "One of: `none`, `members`, `public`, `all`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_fields",
        "tool_parameter_name": "organization_fields",
        "description": "Any valid value that the [nested organization field resource]() accepts.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Any valid value that the [nested organization field resource]() accepts."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_paid_accounts",
        "tool_parameter_name": "include_paid_account_information",
        "description": "Whether or not to include paid account information in the returned workspace objects",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether or not to include paid account information in the returned workspace objects"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "organization_memberships",
        "tool_parameter_name": "organization_memberships_filter",
        "description": "Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-seperated list of: `me`, `normal`, `admin`, `active`, `deactivated`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "enterprise_id",
        "description": "ID of the enterprise to retrieve.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "ID of the enterprise to retrieve."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "TRELLO_API_KEY",
        "parameter_name": "key",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "TRELLO_TOKEN",
        "parameter_name": "token",
        "accepted_as": "query",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      }
    ]
  }
}
