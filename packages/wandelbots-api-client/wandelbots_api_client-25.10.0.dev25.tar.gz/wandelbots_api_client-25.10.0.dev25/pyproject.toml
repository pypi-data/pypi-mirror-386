[project]
name = "wandelbots_api_client"
version = "25.10.0.dev25"
description = "Wandelbots Python Client: Interact with robots in an easy and intuitive way. "
authors = [{ name="Copyright (c) 2025 Wandelbots GmbH", email="contact@wandelbots.com" }]
license = "Apache-2.0"
readme = "README.md"
urls = { homepage = "https://wandelbots.com/" }

classifiers = [
    'Typing :: Typed',
    'Topic :: Software Development',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]

requires-python = ">=3.9"

dependencies = [
  "urllib3 >= 1.25.3",
  "python-dateutil >=2.8.2",
  "aiohttp >= 3.8.4",
  "aiohttp-retry >= 2.8.3",
  "pydantic >=2",
  "websockets",
  "typing-extensions >=4.7.1",
  "furl",
  "pyhumps",
  "pydantic_core",
  "annotated-types",
  "pydantic[email]",
]

[tool.setuptools.package-data]
wandelbots_api_client = ["py.typed"]

[project.optional-dependencies]
dev = [
    "pytest>=7.2.1",
    "tox>=3.9.0",
    "flake8>=4.0.0",
    "types-python-dateutil>=2.8.19.14",
    "mypy==1.4.1"
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.mypy]
files = [
  "wandelbots_api_client",
  #"test",  # auto-generated tests
  "tests", # hand-written tests
]
# TODO: enable "strict" once all these individual checks are passing
# strict = true

# List from: https://mypy.readthedocs.io/en/stable/existing_code.html#introduce-stricter-options
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

## Getting these passing should be easy
strict_equality = true
strict_concatenate = true

## Strongly recommend enabling this one as soon as you can
check_untyped_defs = true

## These shouldn't be too much additional work, but may be tricky to
## get passing if you use a lot of untyped libraries
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = true

### These next few are various gradations of forcing use of type annotations
#disallow_untyped_calls = true
#disallow_incomplete_defs = true
#disallow_untyped_defs = true
#
### This one isn't too hard to get passing, but return on investment is lower
#no_implicit_reexport = true
#
### This one can be tricky to get passing if you use a lot of untyped libraries
#warn_return_any = true
