[tool.poetry]
name = "gnosari-realtime"
version = "0.1.0"
description = "Real-time WebSocket pub/sub server with optional AI processing"
authors = ["Gnosari Team <team@gnosari.com>"]
readme = "README.md"
packages = [{include = "gnosari_realtime", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
starlette = "^0.37.2"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
uvloop = "^0.19.0"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.0.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.23"}
asyncpg = "^0.29.0"
alembic = "^1.13.0"
redis = "^5.0.0"
opensearch-py = "^2.4.2"
structlog = "^23.2.0"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
httpx = "^0.25.2"
python-multipart = "^0.0.6"
websockets = "^12.0"
colorama = "^0.4.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.12.0"
black = "^23.11.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
httpx = "^0.25.2"
pytest-cov = "^4.1.0"
aiosqlite = "^0.19.0"

[tool.poetry.scripts]
gnosari-realtime-server = "gnosari_realtime.server.main:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
