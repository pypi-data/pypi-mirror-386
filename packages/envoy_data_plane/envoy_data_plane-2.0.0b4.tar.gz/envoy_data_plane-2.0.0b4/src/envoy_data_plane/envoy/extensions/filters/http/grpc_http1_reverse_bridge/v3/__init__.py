# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/grpc_http1_reverse_bridge/v3/config.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "FilterConfig",
    "FilterConfigPerRoute",
)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto2.Message):
    """
    [#protodoc-title: gRPC HTTP/1.1 Reverse Bridge]
    gRPC HTTP/1.1 Reverse Bridge :ref:`configuration overview
    <config_http_filters_grpc_http1_reverse_bridge>`.
    [#extension: envoy.filters.http.grpc_http1_reverse_bridge]

    gRPC reverse bridge filter configuration
    """

    content_type: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The content-type to pass to the upstream when the gRPC bridge filter is applied.
    The filter will also validate that the upstream responds with the same content type.
    """

    withhold_grpc_frames: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    If true, Envoy will assume that the upstream doesn't understand gRPC frames and
    strip the gRPC frame from the request, and add it back in to the response. This will
    hide the gRPC semantics from the upstream, allowing it to receive and respond with a
    simple binary encoded protobuf. In order to calculate the ``Content-Length`` header value, Envoy
    will buffer the upstream response unless :ref:`response_size_header
    <envoy_v3_api_field_extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig.response_size_header>`
    is set, in which case Envoy will use the value of an upstream header to calculate the content
    length.
    """

    response_size_header: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    When :ref:`withhold_grpc_frames
    <envoy_v3_api_field_extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig.withhold_grpc_frames>`
    is true, this option controls how Envoy calculates the ``Content-Length``. When
    ``response_size_header`` is empty, Envoy will buffer the upstream response to calculate its
    size. When ``response_size_header`` is set to a non-empty string, Envoy will stream the response
    to the downstream and it will use the value of the response header with this name to set the
    ``Content-Length`` header and gRPC frame size. If the header with this name is repeated, only
    the first value will be used.

    Envoy will treat the upstream response as an error if this option is specified and the header
    is missing or if the value does not match the actual response body size.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3",
    "FilterConfig",
    FilterConfig,
)


@dataclass(eq=False, repr=False)
class FilterConfigPerRoute(betterproto2.Message):
    """
    gRPC reverse bridge filter configuration per virtualhost/route/weighted-cluster level.
    """

    disabled: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)
    """
    If true, disables gRPC reverse bridge filter for this particular vhost or route.
    If disabled is specified in multiple per-filter-configs, the most specific one will be used.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3",
    "FilterConfigPerRoute",
    FilterConfigPerRoute,
)
