# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/tracers/opentelemetry/resource_detectors/v3/dynatrace_resource_detector.proto, envoy/extensions/tracers/opentelemetry/resource_detectors/v3/environment_resource_detector.proto, envoy/extensions/tracers/opentelemetry/resource_detectors/v3/static_config_resource_detector.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "DynatraceResourceDetectorConfig",
    "EnvironmentResourceDetectorConfig",
    "StaticConfigResourceDetectorConfig",
)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class DynatraceResourceDetectorConfig(betterproto2.Message):
    """
    [#protodoc-title: Dynatrace Resource Detector config]

    Configuration for the Dynatrace Resource Detector extension.
    The resource detector reads from the Dynatrace enrichment files
    and adds host/process related attributes to the OpenTelemetry resource.

    See:

    `Enrich ingested data with Dynatrace-specific dimensions <https://docs.dynatrace.com/docs/shortlink/enrichment-files>`_

    [#extension: envoy.tracers.opentelemetry.resource_detectors.dynatrace]
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.tracers.opentelemetry.resource_detectors.v3",
    "DynatraceResourceDetectorConfig",
    DynatraceResourceDetectorConfig,
)


@dataclass(eq=False, repr=False)
class EnvironmentResourceDetectorConfig(betterproto2.Message):
    """
    [#protodoc-title: Environment Resource Detector config]

    Configuration for the Environment Resource detector extension.
    The resource detector reads from the ``OTEL_RESOURCE_ATTRIBUTES``
    environment variable, as per the OpenTelemetry specification.

    See:

    `OpenTelemetry specification <https://github.com/open-telemetry/opentelemetry-specification/blob/v1.24.0/specification/resource/sdk.md#detecting-resource-information-from-the-environment>`_

    [#extension: envoy.tracers.opentelemetry.resource_detectors.environment]
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.tracers.opentelemetry.resource_detectors.v3",
    "EnvironmentResourceDetectorConfig",
    EnvironmentResourceDetectorConfig,
)


@dataclass(eq=False, repr=False)
class StaticConfigResourceDetectorConfig(betterproto2.Message):
    """
    [#protodoc-title: Static Config Resource Detector config]

    Configuration for the Static Resource detector extension.
    The resource detector uses static config for resource attribute,
    as per the OpenTelemetry specification.

    [#extension: envoy.tracers.opentelemetry.resource_detectors.static_config]
    """

    attributes: "dict[str, str]" = betterproto2.field(
        1,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_STRING
        ),
    )
    """
    Custom Resource attributes to be included.
    """


default_message_pool.register_message(
    "envoy.extensions.tracers.opentelemetry.resource_detectors.v3",
    "StaticConfigResourceDetectorConfig",
    StaticConfigResourceDetectorConfig,
)
