# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/proto_api_scrubber/v3/config.proto, envoy/extensions/filters/http/proto_api_scrubber/v3/matcher_actions.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "DescriptorSet",
    "MethodRestrictions",
    "ProtoApiScrubberConfig",
    "ProtoApiScrubberConfigFilteringMode",
    "RemoveFieldAction",
    "RestrictionConfig",
    "Restrictions",
)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class ProtoApiScrubberConfigFilteringMode(betterproto2.Enum):
    """
    An enum enlisting all the filtering modes supported by this filter.
    """

    OVERRIDE = 0
    """
    Override the original request/response body with the filtered
    request/response body.
    """


@dataclass(eq=False, repr=False)
class DescriptorSet(betterproto2.Message):
    """
    Specifies the descriptor set for proto services.
    """

    data_source: "_____config__core__v3__.DataSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    It could be passed by a local file through ``Datasource.filename`` or
    embedded in the ``Datasource.inline_bytes``.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3",
    "DescriptorSet",
    DescriptorSet,
)


@dataclass(eq=False, repr=False)
class MethodRestrictions(betterproto2.Message):
    """
    Contains the method restrictions which include the field level restrictions
    for the request and response fields.
    """

    request_field_restrictions: "dict[str, RestrictionConfig]" = betterproto2.field(
        1,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_MESSAGE
        ),
    )
    """
    Restrictions that apply to request fields of the method.
    Key - field mask like path of the field eg, foo.bar.baz
    Value - Restrictions map containing the mapping from restriction name to
    the restriction values.
    """

    response_field_restrictions: "dict[str, RestrictionConfig]" = betterproto2.field(
        2,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_MESSAGE
        ),
    )
    """
    Restrictions that apply to response fields of the method.
    Key - field mask like path of the field eg, foo.bar.baz
    Value - Restrictions map containing the mapping from restriction name to
    the restriction values.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3",
    "MethodRestrictions",
    MethodRestrictions,
)


@dataclass(eq=False, repr=False)
class ProtoApiScrubberConfig(betterproto2.Message):
    """
    [#protodoc-title: Proto API Scrubber]
    [#not-implemented-hide:] Implementation in progress.
    [#extension: envoy.filters.http.proto_api_scrubber]

    ProtoApiScrubber filter supports filtering of the request and
    response payloads based on the configured field restrictions and actions.
    The field restrictions and actions can be defined using unified matcher API.
    The filter evaluates the configured restriction for each field
    to produce the filtered output using the configured actions.
    This filter currently supports only field level restrictions.
    Restriction support for other proto elements (eg, message
    level restriction, method level restriction, etc.) are planned to be
    implemented in future. The design doc for this filter is available
    `here <https://docs.google.com/document/d/1jgRe5mhucFRgmKYf-Ukk20jW8kusIo53U5bcF74GkK8>`_
    """

    descriptor_set: "DescriptorSet | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The proto descriptor set for the proto services.
    """

    restrictions: "Restrictions | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Contains the restrictions for the supported proto elements.
    """

    filtering_mode: "ProtoApiScrubberConfigFilteringMode" = betterproto2.field(
        3,
        betterproto2.TYPE_ENUM,
        default_factory=lambda: ProtoApiScrubberConfigFilteringMode(0),
    )
    """
    Specifies the filtering mode of this filter.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3",
    "ProtoApiScrubberConfig",
    ProtoApiScrubberConfig,
)


@dataclass(eq=False, repr=False)
class RemoveFieldAction(betterproto2.Message):
    """
    [#protodoc-title: Proto API Scrubber Matcher Actions]

    Specifies an :ref:`Unified Matcher API <envoy_v3_api_msg_.xds.type.matcher.v3.Matcher>` action to remove a field.
    This actual action needs to be implemented by the filter using it.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3",
    "RemoveFieldAction",
    RemoveFieldAction,
)


@dataclass(eq=False, repr=False)
class RestrictionConfig(betterproto2.Message):
    """
    The restriction configuration.
    """

    matcher: "______xds__type__matcher__v3__.Matcher | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Matcher tree for matching requests and responses with the configured restrictions.
    NOTE: Currently, only CEL expressions are supported for matching. Support for more
    matchers will be added incrementally overtime.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3",
    "RestrictionConfig",
    RestrictionConfig,
)


@dataclass(eq=False, repr=False)
class Restrictions(betterproto2.Message):
    """
    Contains the restrictions for the methods.
    """

    method_restrictions: "dict[str, MethodRestrictions]" = betterproto2.field(
        1,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_MESSAGE
        ),
    )
    """
    Specifies the method restrictions.
    Key - Fully qualified method name e.g., ``endpoints.examples.bookstore.BookStore/GetShelf``.
    Value - Method restrictions.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.proto_api_scrubber.v3", "Restrictions", Restrictions
)


from .......xds.type.matcher import v3 as ______xds__type__matcher__v3__
from ......config.core import v3 as _____config__core__v3__
