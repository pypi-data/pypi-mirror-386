# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/access_loggers/open_telemetry/v3/logs_service.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("OpenTelemetryAccessLogConfig",)

from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class OpenTelemetryAccessLogConfig(betterproto2.Message):
    """
    [#protodoc-title: OpenTelemetry (gRPC) Access Log]

    Configuration for the built-in ``envoy.access_loggers.open_telemetry``
    :ref:`AccessLog <envoy_v3_api_msg_config.accesslog.v3.AccessLog>`. This configuration will
    populate `opentelemetry.proto.collector.v1.logs.ExportLogsServiceRequest.resource_logs <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/collector/logs/v1/logs_service.proto>`_.
    In addition, the request start time is set in the dedicated field.
    [#extension: envoy.access_loggers.open_telemetry]
    [#next-free-field: 8]
    """

    common_config: "__grpc__v3__.CommonGrpcAccessLogConfig | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    [#comment:TODO(itamarkam): add 'filter_state_objects_to_log' to logs.]
    """

    disable_builtin_labels: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)
    """
    If specified, Envoy will not generate built-in resource labels
    like ``log_name``, ``zone_name``, ``cluster_name``, ``node_name``.
    """

    resource_attributes: "_____opentelemetry__proto__common__v1__.KeyValueList | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    OpenTelemetry `Resource <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/logs/v1/logs.proto#L51>`_
    attributes are filled with Envoy node info.
    Example: ``resource_attributes { values { key: "region" value { string_value: "cn-north-7" } } }``.
    """

    body: "_____opentelemetry__proto__common__v1__.AnyValue | None" = (
        betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    OpenTelemetry `LogResource <https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/logs/v1/logs.proto>`_
    fields, following `Envoy access logging formatting <https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage>`_.

    See 'body' in the LogResource proto for more details.
    Example: ``body { string_value: "%PROTOCOL%" }``.
    """

    attributes: "_____opentelemetry__proto__common__v1__.KeyValueList | None" = (
        betterproto2.field(3, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    See 'attributes' in the LogResource proto for more details.
    Example: ``attributes { values { key: "user_agent" value { string_value: "%REQ(USER-AGENT)%" } } }``.
    """

    stat_prefix: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)
    """
    Optional. Additional prefix to use on OpenTelemetry access logger stats. If empty, the stats will be rooted at
    ``access_logs.open_telemetry_access_log.``. If non-empty, stats will be rooted at
    ``access_logs.open_telemetry_access_log.<stat_prefix>.``.
    """

    formatters: "list[____config__core__v3__.TypedExtensionConfig]" = (
        betterproto2.field(7, betterproto2.TYPE_MESSAGE, repeated=True)
    )
    """
    Specifies a collection of Formatter plugins that can be called from the access log configuration.
    See the formatters extensions documentation for details.
    [#extension-category: envoy.formatter]
    """


default_message_pool.register_message(
    "envoy.extensions.access_loggers.open_telemetry.v3",
    "OpenTelemetryAccessLogConfig",
    OpenTelemetryAccessLogConfig,
)


from ......opentelemetry.proto.common import (
    v1 as _____opentelemetry__proto__common__v1__,
)
from .....config.core import v3 as ____config__core__v3__
from ...grpc import v3 as __grpc__v3__
