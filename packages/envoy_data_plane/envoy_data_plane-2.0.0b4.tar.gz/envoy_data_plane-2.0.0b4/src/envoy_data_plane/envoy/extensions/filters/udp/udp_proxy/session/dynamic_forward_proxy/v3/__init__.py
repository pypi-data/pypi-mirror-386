# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/udp/udp_proxy/session/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "FilterConfig",
    "FilterConfigBufferOptions",
)

from dataclasses import dataclass

import betterproto2

from .........message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto2.Message):
    """
    [#protodoc-title: Filter state dynamic forward proxy]

    Configuration for the filter state based dynamic forward proxy filter. See the
    :ref:`architecture overview <arch_overview_http_dynamic_forward_proxy>` for
    more information. Note this filter must be used in conjunction to another filter that
    sets the 'envoy.upstream.dynamic_host' and the 'envoy.upstream.dynamic_port' filter
    state keys for the required upstream UDP session.
    [#extension: envoy.filters.udp.session.dynamic_forward_proxy]

    Oneofs:
        - implementation_specifier:
    """

    stat_prefix: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The prefix to use when emitting :ref:`statistics <config_udp_session_filters_dynamic_forward_proxy_stats>`.
    """

    dns_cache_config: "______common__dynamic_forward_proxy__v3__.DnsCacheConfig | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True, group="implementation_specifier"
    )
    """
    The DNS cache configuration that the filter will attach to. Note this
    configuration must match that of associated :ref:`dynamic forward proxy cluster configuration
    <envoy_v3_api_field_extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig.dns_cache_config>`.
    """

    buffer_options: "FilterConfigBufferOptions | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    If configured, the filter will buffer datagrams in case that it is waiting for a DNS response.
    If this field is not configured, there will be no buffering and downstream datagrams that arrive
    while the DNS resolution is in progress will be dropped. In case this field is set but the options
    are not configured, the default values will be applied as described in the ``BufferOptions``.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3",
    "FilterConfig",
    FilterConfig,
)


@dataclass(eq=False, repr=False)
class FilterConfigBufferOptions(betterproto2.Message):
    """
    Configuration for UDP datagrams buffering.
    """

    max_buffered_datagrams: "int | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ________google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    If set, the filter will only buffer datagrams up to the requested limit, and will drop
    new UDP datagrams if the buffer contains the max_buffered_datagrams value at the time
    of a new datagram arrival. If not set, the default value is 1024 datagrams.
    """

    max_buffered_bytes: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ________google__protobuf__.UInt64Value,
        optional=True,
    )
    """
    If set, the filter will only buffer datagrams up to the requested total buffered bytes limit,
    and will drop new UDP datagrams if the buffer contains the max_buffered_datagrams value
    at the time of a new datagram arrival. If not set, the default value is 16,384 (16KB).
    """


default_message_pool.register_message(
    "envoy.extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3",
    "FilterConfig.BufferOptions",
    FilterConfigBufferOptions,
)


from .........google import protobuf as ________google__protobuf__
from .......common.dynamic_forward_proxy import (
    v3 as ______common__dynamic_forward_proxy__v3__,
)
