# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/key_value/file_based/v3/config.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("FileBasedKeyValueStoreConfig",)

import datetime
from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FileBasedKeyValueStoreConfig(betterproto2.Message):
    """
    [#protodoc-title: Key/value file-based store storage plugin]

    [#extension: envoy.key_value.file_based]
    This is configuration to flush a key value store out to disk.
    """

    filename: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The filename to read the keys and values from, and write the keys and
    values to.
    """

    flush_interval: "datetime.timedelta | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    The interval at which the key value store should be flushed to the file.
    """

    max_entries: "int | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of entries to cache, or 0 to allow for unlimited entries.
    Defaults to 1000 if not present.
    """


default_message_pool.register_message(
    "envoy.extensions.key_value.file_based.v3",
    "FileBasedKeyValueStoreConfig",
    FileBasedKeyValueStoreConfig,
)


from ......google import protobuf as _____google__protobuf__
