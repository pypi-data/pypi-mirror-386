# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/compressor/v2/compressor.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Compressor",)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Compressor(betterproto2.Message):
    """
    [#protodoc-title: Compressor]

    [#next-free-field: 6]
    """

    content_length: "int | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Minimum response length, in bytes, which will trigger compression. The default value is 30.
    """

    content_type: "list[str]" = betterproto2.field(
        2, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Set of strings that allows specifying which mime-types yield compression; e.g.,
    application/json, text/html, etc. When this field is not defined, compression will be applied
    to the following mime-types: "application/javascript", "application/json",
    "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml"
    and their synonyms.
    """

    disable_on_etag_header: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)
    """
    If true, disables compression when the response contains an etag header. When it is false, the
    filter will preserve weak etags and remove the ones that require strong validation.
    """

    remove_accept_encoding_header: "bool" = betterproto2.field(
        4, betterproto2.TYPE_BOOL
    )
    """
    If true, removes accept-encoding from the request headers before dispatching it to the upstream
    so that responses do not get compressed before reaching the filter.
    .. attention:

       To avoid interfering with other compression filters in the same chain use this option in
       the filter closest to the upstream.
    """

    runtime_enabled: "_____api__v2__core__.RuntimeFeatureFlag | None" = (
        betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Runtime flag that controls whether the filter is enabled or not. If set to false, the
    filter will operate as a pass-through filter. If not specified, defaults to enabled.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.compressor.v2", "Compressor", Compressor
)


from .......google import protobuf as ______google__protobuf__
from ......api.v2 import core as _____api__v2__core__
