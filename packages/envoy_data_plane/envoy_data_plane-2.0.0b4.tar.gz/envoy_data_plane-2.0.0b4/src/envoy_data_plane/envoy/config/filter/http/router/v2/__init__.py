# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/router/v2/router.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Router",)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Router(betterproto2.Message):
    """
    [#protodoc-title: Router]
    Router :ref:`configuration overview <config_http_filters_router>`.
    [#extension: envoy.filters.http.router]

    [#next-free-field: 7]
    """

    dynamic_stats: "bool | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.BoolValue,
        optional=True,
    )
    """
    Whether the router generates dynamic cluster statistics. Defaults to
    true. Can be disabled in high performance scenarios.
    """

    start_child_span: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    Whether to start a child span for egress routed calls. This can be
    useful in scenarios where other filters (auth, ratelimit, etc.) make
    outbound calls and have child spans rooted at the same ingress
    parent. Defaults to false.
    """

    upstream_log: "list[___accesslog__v2__.AccessLog]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    Configuration for HTTP upstream logs emitted by the router. Upstream logs
    are configured in the same way as access logs, but each log entry represents
    an upstream request. Presuming retries are configured, multiple upstream
    requests may be made for each downstream (inbound) request.
    """

    suppress_envoy_headers: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)
    """
    Do not add any additional *x-envoy-* headers to requests or responses. This
    only affects the :ref:`router filter generated *x-envoy-* headers
    <config_http_filters_router_headers_set>`, other Envoy filters and the HTTP
    connection manager may continue to set *x-envoy-* headers.
    """

    strict_check_headers: "list[str]" = betterproto2.field(
        5, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Specifies a list of HTTP headers to strictly validate. Envoy will reject a
    request and respond with HTTP status 400 if the request contains an invalid
    value for any of the headers listed in this field. Strict header checking
    is only supported for the following headers:

    Value must be a ','-delimited list (i.e. no spaces) of supported retry
    policy values:

    * :ref:`config_http_filters_router_x-envoy-retry-grpc-on`
    * :ref:`config_http_filters_router_x-envoy-retry-on`

    Value must be an integer:

    * :ref:`config_http_filters_router_x-envoy-max-retries`
    * :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`
    * :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`
    """

    respect_expected_rq_timeout: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)
    """
    If not set, ingress Envoy will ignore
    :ref:`config_http_filters_router_x-envoy-expected-rq-timeout-ms` header, populated by egress
    Envoy, when deriving timeout for upstream cluster.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.router.v2", "Router", Router
)


from .......google import protobuf as ______google__protobuf__
from ....accesslog import v2 as ___accesslog__v2__
