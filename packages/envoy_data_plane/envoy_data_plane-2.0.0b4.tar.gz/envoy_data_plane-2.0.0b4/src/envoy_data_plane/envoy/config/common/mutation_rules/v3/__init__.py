# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/common/mutation_rules/v3/mutation_rules.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "HeaderMutation",
    "HeaderMutationRemoveOnMatch",
    "HeaderMutationRules",
)

from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class HeaderMutation(betterproto2.Message):
    """
    The HeaderMutation structure specifies an action that may be taken on HTTP
    headers.

    Oneofs:
        - action:
    """

    remove: "str | None" = betterproto2.field(
        1, betterproto2.TYPE_STRING, optional=True, group="action"
    )
    """
    Remove the specified header if it exists.
    """

    append: "___core__v3__.HeaderValueOption | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True, group="action"
    )
    """
    Append new header by the specified HeaderValueOption.
    """

    remove_on_match: "HeaderMutationRemoveOnMatch | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True, group="action"
    )
    """
    Remove the header if the key matches the specified string matcher.
    """


default_message_pool.register_message(
    "envoy.config.common.mutation_rules.v3", "HeaderMutation", HeaderMutation
)


@dataclass(eq=False, repr=False)
class HeaderMutationRemoveOnMatch(betterproto2.Message):
    key_matcher: "____type__matcher__v3__.StringMatcher | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    A string matcher that will be applied to the header key. If the header key
    matches, the header will be removed.
    """


default_message_pool.register_message(
    "envoy.config.common.mutation_rules.v3",
    "HeaderMutation.RemoveOnMatch",
    HeaderMutationRemoveOnMatch,
)


@dataclass(eq=False, repr=False)
class HeaderMutationRules(betterproto2.Message):
    """
    [#protodoc-title: Header mutation rules]

    The HeaderMutationRules structure specifies what headers may be
    manipulated by a processing filter. This set of rules makes it
    possible to control which modifications a filter may make.

    By default, an external processing server may add, modify, or remove
    any header except for an "Envoy internal" header (which is typically
    denoted by an x-envoy prefix) or specific headers that may affect
    further filter processing:

    * ``host``
    * ``:authority``
    * ``:scheme``
    * ``:method``

    Every attempt to add, change, append, or remove a header will be
    tested against the rules here. Disallowed header mutations will be
    ignored unless ``disallow_is_error`` is set to true.

    Attempts to remove headers are further constrained -- regardless of the
    settings, system-defined headers (that start with ``:``) and the ``host``
    header may never be removed.

    In addition, a counter will be incremented whenever a mutation is
    rejected. In the ext_proc filter, that counter is named
    ``rejected_header_mutations``.
    [#next-free-field: 8]
    """

    allow_all_routing: "bool | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.BoolValue,
        optional=True,
    )
    """
    By default, certain headers that could affect processing of subsequent
    filters or request routing cannot be modified. These headers are
    ``host``, ``:authority``, ``:scheme``, and ``:method``. Setting this parameter
    to true allows these headers to be modified as well.
    """

    allow_envoy: "bool | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.BoolValue,
        optional=True,
    )
    """
    If true, allow modification of envoy internal headers. By default, these
    start with ``x-envoy`` but this may be overridden in the ``Bootstrap``
    configuration using the
    :ref:`header_prefix <envoy_v3_api_field_config.bootstrap.v3.Bootstrap.header_prefix>`
    field. Default is false.
    """

    disallow_system: "bool | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.BoolValue,
        optional=True,
    )
    """
    If true, prevent modification of any system header, defined as a header
    that starts with a ``:`` character, regardless of any other settings.
    A processing server may still override the ``:status`` of an HTTP response
    using an ``ImmediateResponse`` message. Default is false.
    """

    disallow_all: "bool | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.BoolValue,
        optional=True,
    )
    """
    If true, prevent modifications of all header values, regardless of any
    other settings. A processing server may still override the ``:status``
    of an HTTP response using an ``ImmediateResponse`` message. Default is false.
    """

    allow_expression: "____type__matcher__v3__.RegexMatcher | None" = (
        betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    If set, specifically allow any header that matches this regular
    expression. This overrides all other settings except for
    ``disallow_expression``.
    """

    disallow_expression: "____type__matcher__v3__.RegexMatcher | None" = (
        betterproto2.field(6, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    If set, specifically disallow any header that matches this regular
    expression regardless of any other settings.
    """

    disallow_is_error: "bool | None" = betterproto2.field(
        7,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.BoolValue,
        optional=True,
    )
    """
    If true, and if the rules in this list cause a header mutation to be
    disallowed, then the filter using this configuration will terminate the
    request with a 500 error. In addition, regardless of the setting of this
    parameter, any attempt to set, add, or modify a disallowed header will
    cause the ``rejected_header_mutations`` counter to be incremented.
    Default is false.
    """


default_message_pool.register_message(
    "envoy.config.common.mutation_rules.v3", "HeaderMutationRules", HeaderMutationRules
)


from ......google import protobuf as _____google__protobuf__
from .....type.matcher import v3 as ____type__matcher__v3__
from ....core import v3 as ___core__v3__
