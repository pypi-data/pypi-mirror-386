# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/network/client_ssl_auth/v2/client_ssl_auth.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("ClientSslAuth",)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class ClientSslAuth(betterproto2.Message):
    """
    [#protodoc-title: Client TLS authentication]
    Client TLS authentication
    :ref:`configuration overview <config_network_filters_client_ssl_auth>`.
    [#extension: envoy.filters.network.client_ssl_auth]
    """

    auth_api_cluster: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The :ref:`cluster manager <arch_overview_cluster_manager>` cluster that runs
    the authentication service. The filter will connect to the service every 60s to fetch the list
    of principals. The service must support the expected :ref:`REST API
    <config_network_filters_client_ssl_auth_rest_api>`.
    """

    stat_prefix: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    The prefix to use when emitting :ref:`statistics
    <config_network_filters_client_ssl_auth_stats>`.
    """

    refresh_delay: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    Time in milliseconds between principal refreshes from the
    authentication service. Default is 60000 (60s). The actual fetch time
    will be this value plus a random jittered value between
    0-refresh_delay_ms milliseconds.
    """

    ip_white_list: "list[_____api__v2__core__.CidrRange]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    An optional list of IP address and subnet masks that should be white
    listed for access by the filter. If no list is provided, there is no
    IP allowlist.
    """


default_message_pool.register_message(
    "envoy.config.filter.network.client_ssl_auth.v2", "ClientSSLAuth", ClientSslAuth
)


from .......google import protobuf as ______google__protobuf__
from ......api.v2 import core as _____api__v2__core__
