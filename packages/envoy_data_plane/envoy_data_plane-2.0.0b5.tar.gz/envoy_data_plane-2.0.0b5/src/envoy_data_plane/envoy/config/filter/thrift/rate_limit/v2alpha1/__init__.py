# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/thrift/rate_limit/v2alpha1/rate_limit.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("RateLimit",)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class RateLimit(betterproto2.Message):
    """
    [#protodoc-title: Rate limit]
    Rate limit :ref:`configuration overview <config_thrift_filters_rate_limit>`.
    [#extension: envoy.filters.thrift.rate_limit]

    [#next-free-field: 6]
    """

    domain: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The rate limit domain to use in the rate limit service request.
    """

    stage: "typing.Annotated[int, pydantic.Field(ge=0, le=2**32 - 1)]" = (
        betterproto2.field(2, betterproto2.TYPE_UINT32)
    )
    """
    Specifies the rate limit configuration stage. Each configured rate limit filter performs a
    rate limit check using descriptors configured in the
    :ref:`envoy_api_msg_config.filter.network.thrift_proxy.v2alpha1.RouteAction` for the request.
    Only those entries with a matching stage number are used for a given filter. If not set, the
    default stage number is 0.

    .. note::

     The filter supports a range of 0 - 10 inclusively for stage numbers.
    """

    timeout: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    The timeout in milliseconds for the rate limit service RPC. If not
    set, this defaults to 20ms.
    """

    failure_mode_deny: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)
    """
    The filter's behaviour in case the rate limiting service does
    not respond back. When it is set to true, Envoy will not allow traffic in case of
    communication failure between rate limiting service and the proxy.
    Defaults to false.
    """

    rate_limit_service: "____ratelimit__v2__.RateLimitServiceConfig | None" = (
        betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Configuration for an external rate limit service provider. If not
    specified, any calls to the rate limit service will immediately return
    success.
    """


default_message_pool.register_message(
    "envoy.config.filter.thrift.rate_limit.v2alpha1", "RateLimit", RateLimit
)


from .......google import protobuf as ______google__protobuf__
from .....ratelimit import v2 as ____ratelimit__v2__
