# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/health_check/v2/health_check.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("HealthCheck",)

import datetime

import betterproto2
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class HealthCheck(betterproto2.Message):
    """
    [#protodoc-title: Health check]
    Health check :ref:`configuration overview <config_http_filters_health_check>`.
    [#extension: envoy.filters.http.health_check]

    [#next-free-field: 6]
    """

    pass_through_mode: "bool | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.BoolValue,
        optional=True,
    )
    """
    Specifies whether the filter operates in pass through mode or not.
    """

    cache_time: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    If operating in pass through mode, the amount of time in milliseconds
    that the filter should cache the upstream response.
    """

    cluster_min_healthy_percentages: "dict[str, _____type__.Percent]" = (
        betterproto2.field(
            4,
            betterproto2.TYPE_MAP,
            map_meta=betterproto2.map_meta(
                betterproto2.TYPE_STRING, betterproto2.TYPE_MESSAGE
            ),
        )
    )
    """
    If operating in non-pass-through mode, specifies a set of upstream cluster
    names and the minimum percentage of servers in each of those clusters that
    must be healthy or degraded in order for the filter to return a 200.

    .. note::

       This value is interpreted as an integer by truncating, so 12.50% will be calculated
       as if it were 12%.
    """

    headers: "list[_____api__v2__route__.HeaderMatcher]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    Specifies a set of health check request headers to match on. The health check filter will
    check a requestâ€™s headers against all the specified headers. To specify the health check
    endpoint, set the ``:path`` header to match on.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.health_check.v2", "HealthCheck", HealthCheck
)


from .......google import protobuf as ______google__protobuf__
from ...... import type as _____type__
from ......api.v2 import route as _____api__v2__route__
