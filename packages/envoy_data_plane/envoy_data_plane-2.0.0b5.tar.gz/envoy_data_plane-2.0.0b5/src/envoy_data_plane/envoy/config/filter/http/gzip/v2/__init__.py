# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/gzip/v2/gzip.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Gzip",
    "GzipCompressionLevel",
    "GzipCompressionLevelEnum",
    "GzipCompressionStrategy",
)

import typing
import warnings

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class GzipCompressionLevelEnum(betterproto2.Enum):
    DEFAULT = 0

    BEST = 1

    SPEED = 2


class GzipCompressionStrategy(betterproto2.Enum):
    DEFAULT = 0

    FILTERED = 1

    HUFFMAN = 2

    RLE = 3


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Gzip(betterproto2.Message):
    """
    [#protodoc-title: Gzip]

    [#next-free-field: 11]
    """

    memory_level: "int | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Value from 1 to 9 that controls the amount of internal memory used by zlib. Higher values
    use more memory, but are faster and produce better compression results. The default value is 5.
    """

    content_length: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Minimum response length, in bytes, which will trigger compression. The default value is 30.
    .. attention:

       **This field is deprecated**. Set the `compressor` field instead.
    """

    compression_level: "GzipCompressionLevelEnum" = betterproto2.field(
        3, betterproto2.TYPE_ENUM, default_factory=lambda: GzipCompressionLevelEnum(0)
    )
    """
    A value used for selecting the zlib compression level. This setting will affect speed and
    amount of compression applied to the content. "BEST" provides higher compression at the cost of
    higher latency, "SPEED" provides lower compression with minimum impact on response time.
    "DEFAULT" provides an optimal result between speed and compression. This field will be set to
    "DEFAULT" if not specified.
    """

    compression_strategy: "GzipCompressionStrategy" = betterproto2.field(
        4, betterproto2.TYPE_ENUM, default_factory=lambda: GzipCompressionStrategy(0)
    )
    """
    A value used for selecting the zlib compression strategy which is directly related to the
    characteristics of the content. Most of the time "DEFAULT" will be the best choice, though
    there are situations which changing this parameter might produce better results. For example,
    run-length encoding (RLE) is typically used when the content is known for having sequences
    which same data occurs many consecutive times. For more information about each strategy, please
    refer to zlib manual.
    """

    content_type: "list[typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]]" = betterproto2.field(
        6, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Set of strings that allows specifying which mime-types yield compression; e.g.,
    application/json, text/html, etc. When this field is not defined, compression will be applied
    to the following mime-types: "application/javascript", "application/json",
    "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml".
    .. attention:

       **This field is deprecated**. Set the `compressor` field instead.
    """

    disable_on_etag_header: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)
    """
    If true, disables compression when the response contains an etag header. When it is false, the
    filter will preserve weak etags and remove the ones that require strong validation.
    .. attention:

       **This field is deprecated**. Set the `compressor` field instead.
    """

    remove_accept_encoding_header: "bool" = betterproto2.field(
        8, betterproto2.TYPE_BOOL
    )
    """
    If true, removes accept-encoding from the request headers before dispatching it to the upstream
    so that responses do not get compressed before reaching the filter.
    .. attention:

       **This field is deprecated**. Set the `compressor` field instead.
    """

    window_bits: "int | None" = betterproto2.field(
        9,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Value from 9 to 15 that represents the base two logarithmic of the compressor's window size.
    Larger window results in better compression at the expense of memory usage. The default is 12
    which will produce a 4096 bytes window. For more details about this parameter, please refer to
    zlib manual > deflateInit2.
    """

    compressor: "__compressor__v2__.Compressor | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Set of configuration parameters common for all compression filters. If this field is set then
    the fields `content_length`, `content_type`, `disable_on_etag_header` and
    `remove_accept_encoding_header` are ignored.
    """

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("content_length"):
            warnings.warn("Gzip.content_length is deprecated", DeprecationWarning)
        if self.is_set("content_type"):
            warnings.warn("Gzip.content_type is deprecated", DeprecationWarning)
        if self.is_set("disable_on_etag_header"):
            warnings.warn(
                "Gzip.disable_on_etag_header is deprecated", DeprecationWarning
            )
        if self.is_set("remove_accept_encoding_header"):
            warnings.warn(
                "Gzip.remove_accept_encoding_header is deprecated", DeprecationWarning
            )


default_message_pool.register_message("envoy.config.filter.http.gzip.v2", "Gzip", Gzip)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GzipCompressionLevel(betterproto2.Message):
    pass


default_message_pool.register_message(
    "envoy.config.filter.http.gzip.v2", "Gzip.CompressionLevel", GzipCompressionLevel
)


from .......google import protobuf as ______google__protobuf__
from ...compressor import v2 as __compressor__v2__
