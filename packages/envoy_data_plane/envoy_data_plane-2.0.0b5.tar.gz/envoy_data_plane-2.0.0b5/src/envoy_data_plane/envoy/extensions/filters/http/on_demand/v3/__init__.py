# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/on_demand/v3/on_demand.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "OnDemand",
    "OnDemandCds",
    "PerRouteConfig",
)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OnDemand(betterproto2.Message):
    """
    On Demand Discovery filter config.
    """

    odcds: "OnDemandCds | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    An optional configuration for on-demand cluster discovery
    service. If not specified, the on-demand cluster discovery will
    be disabled. When it's specified, the filter will pause the
    request to an unknown cluster and will begin a cluster discovery
    process. When the discovery is finished (successfully or not), the
    request will be resumed for further processing.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.on_demand.v3", "OnDemand", OnDemand
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OnDemandCds(betterproto2.Message):
    """
    [#protodoc-title: On Demand Discovery]
    On Demand Discovery :ref:`configuration overview <config_http_filters_on_demand>`.
    [#extension: envoy.filters.http.on_demand]

    .. warning::

       Envoy currently only supports On-demand CDS when using Incremental-xDS and not State-of-the-World.

    Configuration of on-demand CDS.
    """

    source: "_____config__core__v3__.ConfigSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    A configuration source for the service that will be used for
    on-demand cluster discovery.
    """

    resources_locator: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    xdstp:// resource locator for on-demand cluster collection.
    """

    timeout: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    The timeout for on demand cluster lookup. If not set, defaults to 5 seconds.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.on_demand.v3", "OnDemandCds", OnDemandCds
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class PerRouteConfig(betterproto2.Message):
    """
    Per-route configuration for On Demand Discovery.
    """

    odcds: "OnDemandCds | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    An optional configuration for on-demand cluster discovery
    service. If not specified, the on-demand cluster discovery will
    be disabled. When it's specified, the filter will pause the
    request to an unknown cluster and will begin a cluster discovery
    process. When the discovery is finished (successfully or not), the
    request will be resumed for further processing.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.on_demand.v3", "PerRouteConfig", PerRouteConfig
)


from .......google import protobuf as ______google__protobuf__
from ......config.core import v3 as _____config__core__v3__
