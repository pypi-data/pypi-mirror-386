# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/clusters/reverse_connection/v3/reverse_connection.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("ReverseConnectionClusterConfig",)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class ReverseConnectionClusterConfig(betterproto2.Message):
    """
    [#protodoc-title: Reverse connection cluster]
    [#extension: envoy.clusters.reverse_connection]

    Configuration for a cluster of type REVERSE_CONNECTION.
    """

    cleanup_interval: "datetime.timedelta | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    Time interval after which Envoy removes unused dynamic hosts created for reverse connections.
    Hosts that are not referenced by any connection pool are deleted during cleanup.

    If unset, Envoy uses a default of 60s.
    """

    host_id_format: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    Host identifier format string.

    This format string is evaluated against the downstream request context to compute
    the host identifier for selecting the reverse connection endpoint. The format string
    supports Envoy's standard formatter syntax, including:

    * ``%REQ(header-name)%``: Extract request header value.
    * ``%DYNAMIC_METADATA(namespace:key)%``: Extract dynamic metadata value.
    * ``%CEL(expression)%``: Evaluate CEL expression.
    * ``%DOWNSTREAM_REMOTE_ADDRESS%``: Downstream connection address.
    * ``%DOWNSTREAM_LOCAL_ADDRESS%``: Downstream local address.
    * Plain text and combinations of the above.

    Examples:

    * ``%REQ(x-remote-node-id)%``: Use the value of the ``x-remote-node-id`` header.
    * ``%REQ(host):EXTRACT_FIRST_PART%``: Extract the first part of the Host header before a dot.
    * ``%CEL(request.headers['x-node-id'] | orValue('default'))%``: Use CEL with fallback.
    * ``node-%REQ(x-tenant-id)%-%REQ(x-region)%``: Combine multiple values.

    If the format string evaluates to an empty value, the request will not be routed.
    """


default_message_pool.register_message(
    "envoy.extensions.clusters.reverse_connection.v3",
    "ReverseConnectionClusterConfig",
    ReverseConnectionClusterConfig,
)


from ......google import protobuf as _____google__protobuf__
