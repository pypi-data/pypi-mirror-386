# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/original_src/v3/original_src.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("OriginalSrc",)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OriginalSrc(betterproto2.Message):
    """
    [#protodoc-title: Original Src Filter]
    Use the Original source address on upstream connections.

    The Original Src filter binds upstream connections to the original source address determined
    for the request. This address could come from something like the Proxy Protocol filter, or it
    could come from trusted http headers.
    [#extension: envoy.filters.http.original_src]
    """

    mark: "typing.Annotated[int, pydantic.Field(ge=0, le=2**32 - 1)]" = (
        betterproto2.field(1, betterproto2.TYPE_UINT32)
    )
    """
    Sets the SO_MARK option on the upstream connection's socket to the provided value. Used to
    ensure that non-local addresses may be routed back through envoy when binding to the original
    source address. The option will not be applied if the mark is 0.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.original_src.v3", "OriginalSrc", OriginalSrc
)
