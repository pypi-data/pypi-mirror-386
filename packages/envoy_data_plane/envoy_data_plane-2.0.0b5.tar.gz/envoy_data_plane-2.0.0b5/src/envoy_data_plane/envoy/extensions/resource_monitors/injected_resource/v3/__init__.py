# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/resource_monitors/injected_resource/v3/injected_resource.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("InjectedResourceConfig",)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class InjectedResourceConfig(betterproto2.Message):
    """
    [#protodoc-title: Injected resource]
    [#extension: envoy.resource_monitors.injected_resource]

    The injected resource monitor allows injecting a synthetic resource pressure into Envoy
    via a text file, which must contain a floating-point number in the range [0..1] representing
    the resource pressure and be updated atomically by a symbolic link swap.
    This is intended primarily for integration tests to force Envoy into an overloaded state.
    """

    filename: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )


default_message_pool.register_message(
    "envoy.extensions.resource_monitors.injected_resource.v3",
    "InjectedResourceConfig",
    InjectedResourceConfig,
)
