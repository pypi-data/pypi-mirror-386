# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/compression/zstd/compressor/v3/zstd.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Zstd", "ZstdStrategy")


import betterproto2
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class ZstdStrategy(betterproto2.Enum):
    """
    Reference to http://facebook.github.io/zstd/zstd_manual.html
    """

    DEFAULT = 0

    FAST = 1

    DFAST = 2

    GREEDY = 3

    LAZY = 4

    LAZY2 = 5

    BTLAZY2 = 6

    BTOPT = 7

    BTULTRA = 8

    BTULTRA2 = 9


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Zstd(betterproto2.Message):
    """
    [#protodoc-title: Zstd Compressor]
    [#extension: envoy.compression.zstd.compressor]

    [#next-free-field: 6]
    """

    compression_level: "int | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Set compression parameters according to pre-defined compression level table.
    Note that exact compression parameters are dynamically determined,
    depending on both compression level and source content size (when known).
    Value 0 means default, and default level is 3.
    Setting a level does not automatically set all other compression parameters
    to default. Setting this will however eventually dynamically impact the compression
    parameters which have not been manually set. The manually set
    ones will 'stick'.
    """

    enable_checksum: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    A 32-bits checksum of content is written at end of frame. If not set, defaults to false.
    """

    strategy: "ZstdStrategy" = betterproto2.field(
        3, betterproto2.TYPE_ENUM, default_factory=lambda: ZstdStrategy(0)
    )
    """
    The higher the value of selected strategy, the more complex it is,
    resulting in stronger and slower compression.
    Special: value 0 means "use default strategy".
    """

    dictionary: "_____config__core__v3__.DataSource | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    A dictionary for compression. Zstd offers dictionary compression, which greatly improves
    efficiency on small files and messages. Each dictionary will be generated with a dictionary ID
    that can be used to search the same dictionary during decompression.
    Please refer to `zstd manual <https://github.com/facebook/zstd/blob/dev/programs/zstd.1.md#dictionary-builder>`_
    to train a specific dictionary for compression.
    """

    chunk_size: "int | None" = betterproto2.field(
        5,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Value for compressor's next output buffer. If not set, defaults to 4096.
    """


default_message_pool.register_message(
    "envoy.extensions.compression.zstd.compressor.v3", "Zstd", Zstd
)


from .......google import protobuf as ______google__protobuf__
from ......config.core import v3 as _____config__core__v3__
