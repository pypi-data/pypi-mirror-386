# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/clusters/aggregate/v3/cluster.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AggregateClusterResource",
    "ClusterConfig",
)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class AggregateClusterResource(betterproto2.Message):
    """
    Configures an aggregate cluster whose
    :ref:`ClusterConfig <envoy_v3_api_msg_extensions.clusters.aggregate.v3.ClusterConfig>`
    is to be fetched from a separate xDS resource.
    [#extension: envoy.clusters.aggregate_resource]
    [#not-implemented-hide:]
    """

    config_source: "____config__core__v3__.ConfigSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Configuration source specifier for the ClusterConfig resource.
    Only the aggregated protocol variants are supported; if configured
    otherwise, the cluster resource will be NACKed.
    """

    resource_name: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    The name of the ClusterConfig resource to subscribe to.
    """


default_message_pool.register_message(
    "envoy.extensions.clusters.aggregate.v3",
    "AggregateClusterResource",
    AggregateClusterResource,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class ClusterConfig(betterproto2.Message):
    """
    [#protodoc-title: Aggregate cluster configuration]

    Configuration for the aggregate cluster. See the :ref:`architecture overview
    <arch_overview_aggregate_cluster>` for more information.
    [#extension: envoy.clusters.aggregate]
    """

    clusters: "list[typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Load balancing clusters in aggregate cluster. Clusters are prioritized based on the order they
    appear in this list.
    """


default_message_pool.register_message(
    "envoy.extensions.clusters.aggregate.v3", "ClusterConfig", ClusterConfig
)


from .....config.core import v3 as ____config__core__v3__
