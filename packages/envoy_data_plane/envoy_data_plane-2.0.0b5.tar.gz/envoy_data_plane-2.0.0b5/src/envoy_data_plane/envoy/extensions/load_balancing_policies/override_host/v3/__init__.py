# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/load_balancing_policies/override_host/v3/override_host.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "OverrideHost",
    "OverrideHostOverrideHostSource",
)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OverrideHost(betterproto2.Message):
    """
    [#protodoc-title: Override Host Load Balancing Policy]
    [#extension: envoy.load_balancing_policies.override_host]

    Configuration for the Override Host Load Balancing policy.

    This policy allows endpoint picking to be implemented in downstream HTTP filters. For example an ext_proc RPC to a service
    that implements k8s proposal for AI gateway inferences extensions
    https://github.com/kubernetes-sigs/gateway-api-inference-extension/tree/main/docs/proposals/004-endpoint-picker-protocol
    can provide hosts for serving a request using Override Host load balancing policy.

    This policy extracts selected override hosts from a list of ``OverrideHostSource`` (request headers, metadata, etc.).

    The override host source must specify at least one host in ``IP:Port`` format or multiple hosts in ``IP:Port,IP:Port,...``
    format. For example ``10.0.0.5:8080`` or ``[2600:4040:5204::1574:24ae]:80``. The IPv6 address is enclosed in square brackets.

    For specific example, to support k8s gateway inference extensions, which uses the ``x-gateway-destination-endpoint``
    header or metadata value under the "envoy.lb" key for selected hosts, the Override Host load balancing policy should be
    configured in the following way:

    .. code-block:: yaml

       override_host_sources:
         - header: "x-gateway-destination-endpoint"
         - metadata:
             key: "envoy.lb"
             path:
             - key: "x-gateway-destination-endpoint"

    If no valid host in the override host list, then the specified fallback load balancing policy is used. This allows load
    balancing to degrade to a a built in policy (i.e. Round Robin) in case external endpoint picker fails.

    See the :ref:`load balancing architecture
    overview<arch_overview_load_balancing_types>` for more information.
    """

    override_host_sources: "list[OverrideHostOverrideHostSource]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    A list of sources to get host addresses from. The host sources are searched in the order
    specified. The request is forwarded to the first address and subsequent addresses are used
    for request retries or hedging.
    Note that if an overridden host address is not present in the current endpoint set, it is
    skipped and the next found address is used. If there are not enough overridden addresses to
    satisfy all retry attempts the fallback load balancing policy is used to pick a host.
    """

    fallback_policy: "____config__cluster__v3__.LoadBalancingPolicy | None" = (
        betterproto2.field(3, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    The child LB policy to use in case neither header nor metadata with selected
    hosts is present.
    """


default_message_pool.register_message(
    "envoy.extensions.load_balancing_policies.override_host.v3",
    "OverrideHost",
    OverrideHost,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OverrideHostOverrideHostSource(betterproto2.Message):
    header: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The header to get the override host addresses.

    Only one of the header or metadata field could be set.
    """

    metadata: "____type__metadata__v3__.MetadataKey | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The metadata key to get the override host addresses from the request dynamic metadata. If
    set this field then it will take precedence over the header field.

    Only one of the header or metadata field could be set.
    """


default_message_pool.register_message(
    "envoy.extensions.load_balancing_policies.override_host.v3",
    "OverrideHost.OverrideHostSource",
    OverrideHostOverrideHostSource,
)


from .....config.cluster import v3 as ____config__cluster__v3__
from .....type.metadata import v3 as ____type__metadata__v3__
