# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/ext_authz/v3/ext_authz.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("ExtAuthz",)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class ExtAuthz(betterproto2.Message):
    """
    [#protodoc-title: Network External Authorization ]
    The network layer external authorization service configuration
    :ref:`configuration overview <config_network_filters_ext_authz>`.
    [#extension: envoy.filters.network.ext_authz]

    External Authorization filter calls out to an external service over the
    gRPC Authorization API defined by
    :ref:`CheckRequest <envoy_v3_api_msg_service.auth.v3.CheckRequest>`.
    A failed check will cause this filter to close the TCP connection.
    [#next-free-field: 10]
    """

    stat_prefix: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The prefix to use when emitting statistics.
    """

    grpc_service: "_____config__core__v3__.GrpcService | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The external authorization gRPC service configuration.
    The default timeout is set to 200ms by this filter.
    """

    failure_mode_allow: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)
    """
    The filter's behaviour in case the external authorization service does
    not respond back. When it is set to true, Envoy will also allow traffic in case of
    communication failure between authorization service and the proxy.
    Defaults to false.
    """

    include_peer_certificate: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)
    """
    Specifies if the peer certificate is sent to the external service.

    When this field is true, Envoy will include the peer X.509 certificate, if available, in the
    :ref:`certificate<envoy_v3_api_field_service.auth.v3.AttributeContext.Peer.certificate>`.
    """

    transport_api_version: "_____config__core__v3__.ApiVersion" = betterproto2.field(
        5,
        betterproto2.TYPE_ENUM,
        default_factory=lambda: _____config__core__v3__.ApiVersion(0),
    )
    """
    API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
    version of Check{Request,Response} used on the wire.
    """

    filter_enabled_metadata: "_____type__matcher__v3__.MetadataMatcher | None" = (
        betterproto2.field(6, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Specifies if the filter is enabled with metadata matcher.
    If this field is not specified, the filter will be enabled for all requests.
    """

    bootstrap_metadata_labels_key: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        7, betterproto2.TYPE_STRING
    )
    """
    Optional labels that will be passed to :ref:`labels<envoy_v3_api_field_service.auth.v3.AttributeContext.Peer.labels>` in
    :ref:`destination<envoy_v3_api_field_service.auth.v3.AttributeContext.destination>`.
    The labels will be read from :ref:`metadata<envoy_v3_api_msg_config.core.v3.Node>` with the specified key.
    """

    include_tls_session: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)
    """
    Specifies if the TLS session level details like SNI are sent to the external service.

    When this field is true, Envoy will include the SNI name used for TLSClientHello, if available, in the
    :ref:`tls_session<envoy_v3_api_field_service.auth.v3.AttributeContext.tls_session>`.
    """

    send_tls_alert_on_denial: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)
    """
    When set to ``true``, the filter will send a TLS ``access_denied(49)`` alert before closing
    the connection when authorization is denied. This provides better visibility to TLS clients
    about the reason for connection closure. This alert is only sent for TLS connections. The
    non-TLS connections will be closed without sending an alert.

    Defaults to ``false``.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.ext_authz.v3", "ExtAuthz", ExtAuthz
)


from ......config.core import v3 as _____config__core__v3__
from ......type.matcher import v3 as _____type__matcher__v3__
