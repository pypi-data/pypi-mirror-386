# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/network/dns_resolver/apple/v3/apple_dns_resolver.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("AppleDnsResolverConfig",)


import betterproto2
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class AppleDnsResolverConfig(betterproto2.Message):
    """
    [#protodoc-title: apple DNS resolver]
    [#extension: envoy.network.dns_resolver.apple]

    Configuration for apple DNS resolver.
    """

    include_unroutable_families: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)
    """
    The resolver will avoid the system's heuristics to only return
    IPv4 or IPv6 addresses that it considers to be "routable", instead
    returning all possible IPv4 or IPv6 addresses. This setting is
    ignored if the DNS lookup family is set to v4-only or v6-only.
    This should remain false in the vast majority of cases, but may be
    useful when performing custom filtering of addresses, such as with
    Happy Eyeballs.
    """


default_message_pool.register_message(
    "envoy.extensions.network.dns_resolver.apple.v3",
    "AppleDnsResolverConfig",
    AppleDnsResolverConfig,
)
