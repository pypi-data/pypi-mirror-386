# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/clusters/dns/v3/dns_cluster.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "DnsCluster",
    "DnsClusterRefreshRate",
)

import datetime

import betterproto2
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class DnsCluster(betterproto2.Message):
    """
    [#protodoc-title: DNS cluster configuration]

    Configuration for DNS discovery clusters.
    [#extension: envoy.clusters.dns]

    [#next-free-field: 10]
    """

    dns_refresh_rate: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    This value is the cluster’s DNS refresh rate. The value configured must be at least 1ms.
    If this setting is not specified, the
    value defaults to 5000ms.
    """

    dns_failure_refresh_rate: "DnsClusterRefreshRate | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    This is the cluster’s DNS refresh rate when requests are failing. If this setting is
    not specified, the failure refresh rate defaults to the DNS refresh rate.
    """

    respect_dns_ttl: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)
    """
    Optional configuration for setting cluster's DNS refresh rate. If the value is set to true,
    cluster's DNS refresh rate will be set to resource record's TTL which comes from DNS
    resolution.
    """

    dns_jitter: "datetime.timedelta | None" = betterproto2.field(
        6,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    DNS jitter causes the cluster to refresh DNS entries later by a random amount of time to avoid a
    stampede of DNS requests. This value sets the upper bound (exclusive) for the random amount.
    There will be no jitter if this value is omitted.
    """

    typed_dns_resolver_config: "____config__core__v3__.TypedExtensionConfig | None" = (
        betterproto2.field(7, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    DNS resolver type configuration extension. This extension can be used to configure c-ares, apple,
    or any other DNS resolver types and the related parameters.
    For example, an object of
    :ref:`CaresDnsResolverConfig<envoy_v3_api_msg_extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig>`
    can be packed into this ``typed_dns_resolver_config``. This configuration replaces the
    :ref:`Cluster.typed_dns_resolver_config<envoy_v3_api_field_config.cluster.v3.Cluster.typed_dns_resolver_config>`
    configuration which replaces :ref:`Cluster.dns_resolution_config<envoy_v3_api_field_config.cluster.v3.Cluster.dns_resolution_config>`.
    During the transition period when
    :ref:`DnsCluster.typed_dns_resolver_config<envoy_v3_api_field_extensions.clusters.dns.v3.DnsCluster.typed_dns_resolver_config>`,
    :ref:`Cluster.typed_dns_resolver_config<envoy_v3_api_field_config.cluster.v3.Cluster.typed_dns_resolver_config>`,
    and :ref:`Cluster.dns_resolution_config<envoy_v3_api_field_config.cluster.v3.Cluster.dns_resolution_config>`
    exist, Envoy will use
    :ref:`DnsCluster.typed_dns_resolver_config<envoy_v3_api_field_extensions.clusters.dns.v3.DnsCluster.typed_dns_resolver_config>`
    and ignore
    DNS resolver-related fields in :ref:`Cluster<envoy_v3_api_msg_config.cluster.v3.Cluster>` if the cluster is configured via the
    :ref:`Cluster.cluster_type<envoy_v3_api_field_config.cluster.v3.Cluster.cluster_type>` extension point with the
    :ref:`DnsCluster<envoy_v3_api_msg_extensions.clusters.dns.v3.DnsCluster>` extension type.
    Otherwise, see  :ref:`Cluster.typed_dns_resolver_config<envoy_v3_api_field_config.cluster.v3.Cluster.typed_dns_resolver_config>`.
    [#extension-category: envoy.network.dns_resolver]
    """

    dns_lookup_family: "__common__dns__v3__.DnsLookupFamily" = betterproto2.field(
        8,
        betterproto2.TYPE_ENUM,
        default_factory=lambda: __common__dns__v3__.DnsLookupFamily(0),
    )
    """
    The DNS IP address resolution policy. If this setting is not specified, the
    value defaults to
    :ref:`AUTO<envoy_v3_api_enum_value_extensions.clusters.common.dns.v3.DnsLookupFamily.AUTO>`.
    """

    all_addresses_in_single_endpoint: "bool" = betterproto2.field(
        9, betterproto2.TYPE_BOOL
    )
    """
    If true, all returned addresses are considered to be associated with a single endpoint,
    which maps to :ref:`logical DNS discovery <arch_overview_service_discovery_types_logical_dns>`
    semantics. Otherwise, each address is considered to be a separate endpoint, which maps to
    :ref:`strict DNS discovery <arch_overview_service_discovery_types_strict_dns>` semantics.
    """


default_message_pool.register_message(
    "envoy.extensions.clusters.dns.v3", "DnsCluster", DnsCluster
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class DnsClusterRefreshRate(betterproto2.Message):
    base_interval: "datetime.timedelta | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    Specifies the base interval between refreshes. This parameter is required and must be greater
    than zero and less than
    :ref:`max_interval <envoy_v3_api_field_extensions.clusters.dns.v3.DnsCluster.RefreshRate.max_interval>`.
    """

    max_interval: "datetime.timedelta | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    Specifies the maximum interval between refreshes. This parameter is optional, but must be
    greater than or equal to the
    :ref:`base_interval <envoy_v3_api_field_extensions.clusters.dns.v3.DnsCluster.RefreshRate.base_interval>`  if set. The default
    is 10 times the :ref:`base_interval <envoy_v3_api_field_extensions.clusters.dns.v3.DnsCluster.RefreshRate.base_interval>`.
    """


default_message_pool.register_message(
    "envoy.extensions.clusters.dns.v3", "DnsCluster.RefreshRate", DnsClusterRefreshRate
)


from ......google import protobuf as _____google__protobuf__
from .....config.core import v3 as ____config__core__v3__
from ...common.dns import v3 as __common__dns__v3__
