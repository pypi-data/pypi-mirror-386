# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/basic_auth/v3/basic_auth.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "BasicAuth",
    "BasicAuthPerRoute",
)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class BasicAuth(betterproto2.Message):
    """
    [#protodoc-title: Basic Auth]
    Basic Auth :ref:`configuration overview <config_http_filters_basic_auth>`.
    [#extension: envoy.filters.http.basic_auth]

    Basic HTTP authentication.

    Example:

    .. code-block:: yaml

      users:
        inline_string: |-
          user1:{SHA}hashed_user1_password
          user2:{SHA}hashed_user2_password
    """

    users: "_____config__core__v3__.DataSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Username-password pairs used to verify user credentials in the "Authorization" header.
    The value needs to be the htpasswd format.
    Reference to https://httpd.apache.org/docs/2.4/programs/htpasswd.html
    """

    forward_username_header: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    This field specifies the header name to forward a successfully authenticated user to
    the backend. The header will be added to the request with the username as the value.

    If it is not specified, the username will not be forwarded.
    """

    authentication_header: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        3, betterproto2.TYPE_STRING
    )
    """
    This field specifies the request header to load the basic credential from.

    If it is not specified, the filter loads the credential from  the "Authorization" header.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.basic_auth.v3", "BasicAuth", BasicAuth
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class BasicAuthPerRoute(betterproto2.Message):
    """
    Extra settings that may be added to per-route configuration for
    a virtual host or a cluster.
    """

    users: "_____config__core__v3__.DataSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Username-password pairs for this route.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.basic_auth.v3",
    "BasicAuthPerRoute",
    BasicAuthPerRoute,
)


from ......config.core import v3 as _____config__core__v3__
