# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/load_balancing_policies/round_robin/v3/round_robin.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("RoundRobin",)


import betterproto2
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class RoundRobin(betterproto2.Message):
    """
    [#protodoc-title: Round Robin Load Balancing Policy]
    [#extension: envoy.load_balancing_policies.round_robin]

    This configuration allows the built-in ROUND_ROBIN LB policy to be configured via the LB policy
    extension point. See the :ref:`load balancing architecture overview
    <arch_overview_load_balancing_types>` for more information.
    """

    slow_start_config: "__common__v3__.SlowStartConfig | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Configuration for slow start mode.
    If this configuration is not set, slow start will not be not enabled.
    """

    locality_lb_config: "__common__v3__.LocalityLbConfig | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Configuration for local zone aware load balancing or locality weighted load balancing.
    """


default_message_pool.register_message(
    "envoy.extensions.load_balancing_policies.round_robin.v3", "RoundRobin", RoundRobin
)


from ...common import v3 as __common__v3__
