# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/resource_monitors/cgroup_memory/v3/cgroup_memory.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("CgroupMemoryConfig",)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class CgroupMemoryConfig(betterproto2.Message):
    """
    [#protodoc-title: Cgroup Memory]
    [#extension: envoy.resource_monitors.cgroup_memory]
    """

    max_memory_bytes: "typing.Annotated[int, pydantic.Field(ge=0, le=2**64 - 1)]" = (
        betterproto2.field(1, betterproto2.TYPE_UINT64)
    )
    """
    Optional max memory limit in bytes used for memory pressure calculations.
    If set, this value is used as an upper bound on the memory limit, taking the minimum
    between this value and the system's cgroup memory limit. If not set, the system's
    cgroup memory limit is always used.
    """


default_message_pool.register_message(
    "envoy.extensions.resource_monitors.cgroup_memory.v3",
    "CgroupMemoryConfig",
    CgroupMemoryConfig,
)
