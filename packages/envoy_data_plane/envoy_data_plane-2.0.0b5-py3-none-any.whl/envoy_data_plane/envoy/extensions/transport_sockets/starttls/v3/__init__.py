# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/transport_sockets/starttls/v3/starttls.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "StartTlsConfig",
    "UpstreamStartTlsConfig",
)


import betterproto2
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class StartTlsConfig(betterproto2.Message):
    """
    [#protodoc-title: StartTls]
    [#extension: envoy.transport_sockets.starttls]

    StartTls transport socket addresses situations when a protocol starts in clear-text and
    negotiates an in-band switch to TLS. StartTls transport socket is protocol agnostic. In the
    case of downstream StartTls a network filter is required which understands protocol exchange
    and a state machine to signal to the StartTls transport socket when a switch to TLS is
    required. Similarly, upstream StartTls requires the owner of an upstream transport socket to
    manage the state machine necessary to properly coordinate negotiation with the upstream and
    signal to the transport socket when a switch to secure transport is required.

    Configuration for a downstream StartTls transport socket.
    StartTls transport socket wraps two sockets:
    * raw_buffer socket which is used at the beginning of the session
    * TLS socket used when a protocol negotiates a switch to encrypted traffic.
    """

    cleartext_socket_config: "__raw_buffer__v3__.RawBuffer | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    (optional) Configuration for clear-text socket used at the beginning of the session.
    """

    tls_socket_config: "__tls__v3__.DownstreamTlsContext | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Configuration for a downstream TLS socket.
    """


default_message_pool.register_message(
    "envoy.extensions.transport_sockets.starttls.v3", "StartTlsConfig", StartTlsConfig
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class UpstreamStartTlsConfig(betterproto2.Message):
    """
    Configuration for an upstream StartTls transport socket.
    StartTls transport socket wraps two sockets:
    * raw_buffer socket which is used at the beginning of the session
    * TLS socket used when a protocol negotiates a switch to encrypted traffic.
    """

    cleartext_socket_config: "__raw_buffer__v3__.RawBuffer | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    (optional) Configuration for clear-text socket used at the beginning of the session.
    """

    tls_socket_config: "__tls__v3__.UpstreamTlsContext | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Configuration for an upstream TLS socket.
    """


default_message_pool.register_message(
    "envoy.extensions.transport_sockets.starttls.v3",
    "UpstreamStartTlsConfig",
    UpstreamStartTlsConfig,
)


from ...raw_buffer import v3 as __raw_buffer__v3__
from ...tls import v3 as __tls__v3__
