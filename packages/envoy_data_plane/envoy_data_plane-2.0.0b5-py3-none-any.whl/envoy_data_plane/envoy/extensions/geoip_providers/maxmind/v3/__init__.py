# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/geoip_providers/maxmind/v3/maxmind.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("MaxMindConfig",)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class MaxMindConfig(betterproto2.Message):
    """
    [#protodoc-title: MaxMind Geolocation Provider]
    MaxMind geolocation provider :ref:`configuration overview <config_geoip_providers_maxmind>`.

    At least one geolocation database path must be configured:

    * :ref:`city_db_path <envoy_v3_api_field_extensions.geoip_providers.maxmind.v3.MaxMindConfig.city_db_path>`
    * :ref:`isp_db_path <envoy_v3_api_field_extensions.geoip_providers.maxmind.v3.MaxMindConfig.isp_db_path>`
    * :ref:`asn_db_path <envoy_v3_api_field_extensions.geoip_providers.maxmind.v3.MaxMindConfig.asn_db_path>`
    * :ref:`anon_db_path <envoy_v3_api_field_extensions.geoip_providers.maxmind.v3.MaxMindConfig.anon_db_path>`
    [#extension: envoy.geoip_providers.maxmind]

    [#next-free-field: 6]
    """

    city_db_path: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    Full file path to the MaxMind city database, e.g., ``/etc/GeoLite2-City.mmdb``.
    Database file is expected to have ``.mmdb`` extension.
    """

    asn_db_path: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        2, betterproto2.TYPE_STRING
    )
    """
    Full file path to the MaxMind ASN database, e.g., ``/etc/GeoLite2-ASN.mmdb``.
    Database file is expected to have ``.mmdb`` extension.
    When this is defined, the ASN information will always be fetched from the ``asn_db``.
    """

    anon_db_path: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        3, betterproto2.TYPE_STRING
    )
    """
    Full file path to the MaxMind Anonymous IP database, e.g., ``/etc/GeoIP2-Anonymous-IP.mmdb``.
    Database file is expected to have ``.mmdb`` extension.
    """

    isp_db_path: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        5, betterproto2.TYPE_STRING
    )
    """
    Full file path to the MaxMind ISP database, e.g., ``/etc/GeoLite2-ISP.mmdb``.
    Database file is expected to have ``.mmdb`` extension.
    If ``asn_db_path`` is not defined, ASN information will be fetched from
    ``isp_db`` instead.
    """

    common_provider_config: "__common__v3__.CommonGeoipProviderConfig | None" = (
        betterproto2.field(4, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Common provider configuration that specifies which geolocation headers will be populated with geolocation data.
    """


default_message_pool.register_message(
    "envoy.extensions.geoip_providers.maxmind.v3", "MaxMindConfig", MaxMindConfig
)


from ...common import v3 as __common__v3__
