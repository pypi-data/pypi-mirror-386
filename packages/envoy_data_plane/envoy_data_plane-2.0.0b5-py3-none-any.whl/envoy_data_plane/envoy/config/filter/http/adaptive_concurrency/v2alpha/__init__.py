# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AdaptiveConcurrency",
    "GradientControllerConfig",
    "GradientControllerConfigConcurrencyLimitCalculationParams",
    "GradientControllerConfigMinimumRttCalculationParams",
)

import datetime

import betterproto2
from pydantic import model_validator
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class AdaptiveConcurrency(betterproto2.Message):
    """


    Oneofs:
        - concurrency_controller_config:
    """

    gradient_controller_config: "GradientControllerConfig | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        optional=True,
        group="concurrency_controller_config",
    )
    """
    Gradient concurrency control will be used.
    """

    enabled: "_____api__v2__core__.RuntimeFeatureFlag | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    If set to false, the adaptive concurrency filter will operate as a pass-through filter. If the
    message is unspecified, the filter will be enabled.
    """

    @model_validator(mode="after")
    def check_oneof(cls, values):
        return cls._validate_field_groups(values)


default_message_pool.register_message(
    "envoy.config.filter.http.adaptive_concurrency.v2alpha",
    "AdaptiveConcurrency",
    AdaptiveConcurrency,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GradientControllerConfig(betterproto2.Message):
    """
    [#protodoc-title: Adaptive Concurrency]
    Adaptive Concurrency Control :ref:`configuration overview
    <config_http_filters_adaptive_concurrency>`.
    [#extension: envoy.filters.http.adaptive_concurrency]

    Configuration parameters for the gradient controller.
    """

    sample_aggregate_percentile: "_____type__.Percent | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The percentile to use when summarizing aggregated samples. Defaults to p50.
    """

    concurrency_limit_params: "GradientControllerConfigConcurrencyLimitCalculationParams | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    min_rtt_calc_params: "GradientControllerConfigMinimumRttCalculationParams | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "envoy.config.filter.http.adaptive_concurrency.v2alpha",
    "GradientControllerConfig",
    GradientControllerConfig,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GradientControllerConfigConcurrencyLimitCalculationParams(betterproto2.Message):
    """
    Parameters controlling the periodic recalculation of the concurrency limit from sampled request
    latencies.
    """

    max_concurrency_limit: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
    """

    concurrency_update_interval: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    The period of time samples are taken to recalculate the concurrency limit.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.adaptive_concurrency.v2alpha",
    "GradientControllerConfig.ConcurrencyLimitCalculationParams",
    GradientControllerConfigConcurrencyLimitCalculationParams,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GradientControllerConfigMinimumRttCalculationParams(betterproto2.Message):
    """
    Parameters controlling the periodic minRTT recalculation.
    [#next-free-field: 6]
    """

    interval: "datetime.timedelta | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    The time interval between recalculating the minimum request round-trip time.
    """

    request_count: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The number of requests to aggregate/sample during the minRTT recalculation window before
    updating. Defaults to 50.
    """

    jitter: "_____type__.Percent | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Randomized time delta that will be introduced to the start of the minRTT calculation window.
    This is represented as a percentage of the interval duration. Defaults to 15%.

    Example: If the interval is 10s and the jitter is 15%, the next window will begin
    somewhere in the range (10s - 11.5s).
    """

    min_concurrency: "int | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The concurrency limit set while measuring the minRTT. Defaults to 3.
    """

    buffer: "_____type__.Percent | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Amount added to the measured minRTT to add stability to the concurrency limit during natural
    variability in latency. This is expressed as a percentage of the measured value and can be
    adjusted to allow more or less tolerance to the sampled latency values.

    Defaults to 25%.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.adaptive_concurrency.v2alpha",
    "GradientControllerConfig.MinimumRTTCalculationParams",
    GradientControllerConfigMinimumRttCalculationParams,
)


from .......google import protobuf as ______google__protobuf__
from ...... import type as _____type__
from ......api.v2 import core as _____api__v2__core__
