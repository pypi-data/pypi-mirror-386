# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/filter/http/aws_lambda/v2alpha/aws_lambda.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Config", "ConfigInvocationMode", "PerRouteConfig")

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class ConfigInvocationMode(betterproto2.Enum):
    SYNCHRONOUS = 0
    """
    This is the more common mode of invocation, in which Lambda responds after it has completed the function. In
    this mode the output of the Lambda function becomes the response of the HTTP request.
    """

    ASYNCHRONOUS = 1
    """
    In this mode Lambda responds immediately but continues to process the function asynchronously. This mode can be
    used to signal events for example. In this mode, Lambda responds with an acknowledgment that it received the
    call which is translated to an HTTP 200 OK by the filter.
    """


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Config(betterproto2.Message):
    """
    [#protodoc-title: AWS Lambda]
    AWS Lambda :ref:`configuration overview <config_http_filters_aws_lambda>`.
    [#extension: envoy.filters.http.aws_lambda]

    AWS Lambda filter config
    """

    arn: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The ARN of the AWS Lambda to invoke when the filter is engaged
    Must be in the following format:
    arn:<partition>:lambda:<region>:<account-number>:function:<function-name>
    """

    payload_passthrough: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    Whether to transform the request (headers and body) to a JSON payload or pass it as is.
    """

    invocation_mode: "ConfigInvocationMode" = betterproto2.field(
        3, betterproto2.TYPE_ENUM, default_factory=lambda: ConfigInvocationMode(0)
    )
    """
    Determines the way to invoke the Lambda function.
    """


default_message_pool.register_message(
    "envoy.config.filter.http.aws_lambda.v2alpha", "Config", Config
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class PerRouteConfig(betterproto2.Message):
    """
    Per-route configuration for AWS Lambda. This can be useful when invoking a different Lambda function or a different
    version of the same Lambda depending on the route.
    """

    invoke_config: "Config | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "envoy.config.filter.http.aws_lambda.v2alpha", "PerRouteConfig", PerRouteConfig
)
