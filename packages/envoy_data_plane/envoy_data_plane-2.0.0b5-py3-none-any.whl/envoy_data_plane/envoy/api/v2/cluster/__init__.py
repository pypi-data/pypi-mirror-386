# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/api/v2/cluster/circuit_breaker.proto, envoy/api/v2/cluster/filter.proto, envoy/api/v2/cluster/outlier_detection.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "CircuitBreakers",
    "CircuitBreakersThresholds",
    "CircuitBreakersThresholdsRetryBudget",
    "Filter",
    "OutlierDetection",
)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from .....message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class CircuitBreakers(betterproto2.Message):
    """
    [#protodoc-title: Circuit breakers]

    :ref:`Circuit breaking<arch_overview_circuit_break>` settings can be
    specified individually for each defined priority.
    """

    thresholds: "list[CircuitBreakersThresholds]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    If multiple :ref:`Thresholds<envoy_api_msg_cluster.CircuitBreakers.Thresholds>`
    are defined with the same :ref:`RoutingPriority<envoy_api_enum_core.RoutingPriority>`,
    the first one in the list is used. If no Thresholds is defined for a given
    :ref:`RoutingPriority<envoy_api_enum_core.RoutingPriority>`, the default values
    are used.
    """


default_message_pool.register_message(
    "envoy.api.v2.cluster", "CircuitBreakers", CircuitBreakers
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class CircuitBreakersThresholds(betterproto2.Message):
    """
    A Thresholds defines CircuitBreaker settings for a
    :ref:`RoutingPriority<envoy_api_enum_core.RoutingPriority>`.
    [#next-free-field: 9]
    """

    priority: "_core__.RoutingPriority" = betterproto2.field(
        1, betterproto2.TYPE_ENUM, default_factory=lambda: _core__.RoutingPriority(0)
    )
    """
    The :ref:`RoutingPriority<envoy_api_enum_core.RoutingPriority>`
    the specified CircuitBreaker settings apply to.
    """

    max_connections: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of connections that Envoy will make to the upstream
    cluster. If not specified, the default is 1024.
    """

    max_pending_requests: "int | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of pending requests that Envoy will allow to the
    upstream cluster. If not specified, the default is 1024.
    """

    max_requests: "int | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of parallel requests that Envoy will make to the
    upstream cluster. If not specified, the default is 1024.
    """

    max_retries: "int | None" = betterproto2.field(
        5,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of parallel retries that Envoy will allow to the
    upstream cluster. If not specified, the default is 3.
    """

    retry_budget: "CircuitBreakersThresholdsRetryBudget | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Specifies a limit on concurrent retries in relation to the number of active requests. This
    parameter is optional.

    .. note::

       If this field is set, the retry budget will override any configured retry circuit
       breaker.
    """

    track_remaining: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)
    """
    If track_remaining is true, then stats will be published that expose
    the number of resources remaining until the circuit breakers open. If
    not specified, the default is false.

    .. note::

       If a retry budget is used in lieu of the max_retries circuit breaker,
       the remaining retry resources remaining will not be tracked.
    """

    max_connection_pools: "int | None" = betterproto2.field(
        7,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum number of connection pools per cluster that Envoy will concurrently support at
    once. If not specified, the default is unlimited. Set this for clusters which create a
    large number of connection pools. See
    :ref:`Circuit Breaking <arch_overview_circuit_break_cluster_maximum_connection_pools>` for
    more details.
    """


default_message_pool.register_message(
    "envoy.api.v2.cluster", "CircuitBreakers.Thresholds", CircuitBreakersThresholds
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class CircuitBreakersThresholdsRetryBudget(betterproto2.Message):
    budget_percent: "___type__.Percent | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Specifies the limit on concurrent retries as a percentage of the sum of active requests and
    active pending requests. For example, if there are 100 active requests and the
    budget_percent is set to 25, there may be 25 active retries.

    This parameter is optional. Defaults to 20%.
    """

    min_retry_concurrency: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Specifies the minimum retry concurrency allowed for the retry budget. The limit on the
    number of active retries may never go below this number.

    This parameter is optional. Defaults to 3.
    """


default_message_pool.register_message(
    "envoy.api.v2.cluster",
    "CircuitBreakers.Thresholds.RetryBudget",
    CircuitBreakersThresholdsRetryBudget,
)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Filter(betterproto2.Message):
    """
    [#protodoc-title: Upstream filters]
    Upstream filters apply to the connections to the upstream cluster hosts.
    """

    name: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = betterproto2.field(
        1, betterproto2.TYPE_STRING
    )
    """
    The name of the filter to instantiate. The name must match a
    :ref:`supported filter <config_network_filters>`.
    """

    typed_config: "____google__protobuf__.Any | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Filter specific configuration which depends on the filter being
    instantiated. See the supported filters for further documentation.
    """


default_message_pool.register_message("envoy.api.v2.cluster", "Filter", Filter)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class OutlierDetection(betterproto2.Message):
    """
    [#protodoc-title: Outlier detection]

    See the :ref:`architecture overview <arch_overview_outlier_detection>` for
    more information on outlier detection.
    [#next-free-field: 21]
    """

    consecutive_5xx: "int | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The number of consecutive server-side error responses (for HTTP traffic,
    5xx responses; for TCP traffic, connection failures; for Redis, failure to
    respond PONG; etc.) before a consecutive 5xx ejection occurs. Defaults to 5.
    """

    interval: "datetime.timedelta | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.Duration,
        optional=True,
    )
    """
    The time interval between ejection analysis sweeps. This can result in
    both new ejections as well as hosts being returned to service. Defaults
    to 10000ms or 10s.
    """

    base_ejection_time: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.Duration,
        optional=True,
    )
    """
    The base time that a host is ejected for. The real time is equal to the
    base time multiplied by the number of times the host has been ejected.
    Defaults to 30000ms or 30s.
    """

    max_ejection_percent: "int | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The maximum % of an upstream cluster that can be ejected due to outlier
    detection. Defaults to 10% but will eject at least one host regardless of the value.
    """

    enforcing_consecutive_5xx: "int | None" = betterproto2.field(
        5,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status
    is detected through consecutive 5xx. This setting can be used to disable
    ejection or to ramp it up slowly. Defaults to 100.
    """

    enforcing_success_rate: "int | None" = betterproto2.field(
        6,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status
    is detected through success rate statistics. This setting can be used to
    disable ejection or to ramp it up slowly. Defaults to 100.
    """

    success_rate_minimum_hosts: "int | None" = betterproto2.field(
        7,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The number of hosts in a cluster that must have enough request volume to
    detect success rate outliers. If the number of hosts is less than this
    setting, outlier detection via success rate statistics is not performed
    for any host in the cluster. Defaults to 5.
    """

    success_rate_request_volume: "int | None" = betterproto2.field(
        8,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The minimum number of total requests that must be collected in one
    interval (as defined by the interval duration above) to include this host
    in success rate based outlier detection. If the volume is lower than this
    setting, outlier detection via success rate statistics is not performed
    for that host. Defaults to 100.
    """

    success_rate_stdev_factor: "int | None" = betterproto2.field(
        9,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    This factor is used to determine the ejection threshold for success rate
    outlier ejection. The ejection threshold is the difference between the
    mean success rate, and the product of this factor and the standard
    deviation of the mean success rate: mean - (stdev *
    success_rate_stdev_factor). This factor is divided by a thousand to get a
    double. That is, if the desired factor is 1.9, the runtime value should
    be 1900. Defaults to 1900.
    """

    consecutive_gateway_failure: "int | None" = betterproto2.field(
        10,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The number of consecutive gateway failures (502, 503, 504 status codes)
    before a consecutive gateway failure ejection occurs. Defaults to 5.
    """

    enforcing_consecutive_gateway_failure: "int | None" = betterproto2.field(
        11,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status
    is detected through consecutive gateway failures. This setting can be
    used to disable ejection or to ramp it up slowly. Defaults to 0.
    """

    split_external_local_origin_errors: "bool" = betterproto2.field(
        12, betterproto2.TYPE_BOOL
    )
    """
    Determines whether to distinguish local origin failures from external errors. If set to true
    the following configuration parameters are taken into account:
    :ref:`consecutive_local_origin_failure<envoy_api_field_cluster.OutlierDetection.consecutive_local_origin_failure>`,
    :ref:`enforcing_consecutive_local_origin_failure<envoy_api_field_cluster.OutlierDetection.enforcing_consecutive_local_origin_failure>`
    and
    :ref:`enforcing_local_origin_success_rate<envoy_api_field_cluster.OutlierDetection.enforcing_local_origin_success_rate>`.
    Defaults to false.
    """

    consecutive_local_origin_failure: "int | None" = betterproto2.field(
        13,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The number of consecutive locally originated failures before ejection
    occurs. Defaults to 5. Parameter takes effect only when
    :ref:`split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
    is set to true.
    """

    enforcing_consecutive_local_origin_failure: "int | None" = betterproto2.field(
        14,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status
    is detected through consecutive locally originated failures. This setting can be
    used to disable ejection or to ramp it up slowly. Defaults to 100.
    Parameter takes effect only when
    :ref:`split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
    is set to true.
    """

    enforcing_local_origin_success_rate: "int | None" = betterproto2.field(
        15,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status
    is detected through success rate statistics for locally originated errors.
    This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
    Parameter takes effect only when
    :ref:`split_external_local_origin_errors<envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors>`
    is set to true.
    """

    failure_percentage_threshold: "int | None" = betterproto2.field(
        16,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The failure percentage to use when determining failure percentage-based outlier detection. If
    the failure percentage of a given host is greater than or equal to this value, it will be
    ejected. Defaults to 85.
    """

    enforcing_failure_percentage: "int | None" = betterproto2.field(
        17,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status is detected through
    failure percentage statistics. This setting can be used to disable ejection or to ramp it up
    slowly. Defaults to 0.

    [#next-major-version: setting this without setting failure_percentage_threshold should be
    invalid in v4.]
    """

    enforcing_failure_percentage_local_origin: "int | None" = betterproto2.field(
        18,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The % chance that a host will be actually ejected when an outlier status is detected through
    local-origin failure percentage statistics. This setting can be used to disable ejection or to
    ramp it up slowly. Defaults to 0.
    """

    failure_percentage_minimum_hosts: "int | None" = betterproto2.field(
        19,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
    If the total number of hosts in the cluster is less than this value, failure percentage-based
    ejection will not be performed. Defaults to 5.
    """

    failure_percentage_request_volume: "int | None" = betterproto2.field(
        20,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The minimum number of total requests that must be collected in one interval (as defined by the
    interval duration above) to perform failure percentage-based ejection for this host. If the
    volume is lower than this setting, failure percentage-based ejection will not be performed for
    this host. Defaults to 50.
    """


default_message_pool.register_message(
    "envoy.api.v2.cluster", "OutlierDetection", OutlierDetection
)


from .....google import protobuf as ____google__protobuf__
from .... import type as ___type__
from .. import core as _core__
