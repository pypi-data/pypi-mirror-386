# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/aws_lambda/v3/aws_lambda.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Config", "ConfigInvocationMode", "Credentials", "PerRouteConfig")

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class ConfigInvocationMode(betterproto2.Enum):
    SYNCHRONOUS = 0
    """
    This is the more common mode of invocation, in which Lambda responds after it has completed the function. In
    this mode the output of the Lambda function becomes the response of the HTTP request.
    """

    ASYNCHRONOUS = 1
    """
    In this mode Lambda responds immediately but continues to process the function asynchronously. This mode can be
    used to signal events for example. In this mode, Lambda responds with an acknowledgment that it received the
    call which is translated to an HTTP 200 OK by the filter.
    """


@dataclass(eq=False, repr=False)
class Config(betterproto2.Message):
    """
    [#protodoc-title: AWS Lambda]
    AWS Lambda :ref:`configuration overview <config_http_filters_aws_lambda>`.
    [#extension: envoy.filters.http.aws_lambda]

    AWS Lambda filter config
    [#next-free-field: 7]
    """

    arn: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The ARN of the AWS Lambda to invoke when the filter is engaged
    Must be in the following format:
    arn:<partition>:lambda:<region>:<account-number>:function:<function-name>
    """

    payload_passthrough: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    Whether to transform the request (headers and body) to a JSON payload or pass it as is.
    """

    invocation_mode: "ConfigInvocationMode" = betterproto2.field(
        3, betterproto2.TYPE_ENUM, default_factory=lambda: ConfigInvocationMode(0)
    )
    """
    Determines the way to invoke the Lambda function.
    """

    host_rewrite: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)
    """
    Indicates that before signing headers, the host header will be swapped with
    this value. If not set or empty, the original host header value
    will be used and no rewrite will happen.

    Note: this rewrite affects both signing and host header forwarding. However, this
    option shouldn't be used with
    :ref:`HCM host rewrite <envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal>` given that the
    value set here would be used for signing whereas the value set in the HCM would be used
    for host header forwarding which is not the desired outcome.
    Changing the value of the host header can result in a different route to be selected
    if an HTTP filter after AWS lambda re-evaluates the route (clears route cache).
    """

    credentials_profile: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)
    """
    Specifies the credentials profile to be used from the AWS credentials file.
    This parameter is optional. If set, it will override the value set in the AWS_PROFILE env variable and
    the provider chain is limited to the AWS credentials file Provider.
    If credentials configuration is provided, this configuration will be ignored.
    If this field is provided, then the default providers chain specified in the documentation will be ignored.
    (See :ref:`default credentials providers <config_http_filters_aws_lambda_credentials>`).
    """

    credentials: "Credentials | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Specifies the credentials to be used. This parameter is optional and if it is set,
    it will override other providers and will take precedence over credentials_profile.
    The provider chain is limited to the configuration credentials provider.
    If this field is provided, then the default providers chain specified in the documentation will be ignored.
    (See :ref:`default credentials providers <config_http_filters_aws_lambda_credentials>`).

    .. warning::
      Distributing the AWS credentials via this configuration should not be done in production.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.aws_lambda.v3", "Config", Config
)


@dataclass(eq=False, repr=False)
class Credentials(betterproto2.Message):
    """
    AWS Lambda Credentials config.
    """

    access_key_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    AWS access key id.
    """

    secret_access_key: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    AWS secret access key.
    """

    session_token: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    AWS session token.
    This parameter is optional. If it is set to empty string it will not be consider in the request.
    It is required if temporary security credentials retrieved directly from AWS STS operations are used.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.aws_lambda.v3", "Credentials", Credentials
)


@dataclass(eq=False, repr=False)
class PerRouteConfig(betterproto2.Message):
    """
    Per-route configuration for AWS Lambda. This can be useful when invoking a different Lambda function or a different
    version of the same Lambda depending on the route.
    """

    invoke_config: "Config | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message(
    "envoy.extensions.filters.http.aws_lambda.v3", "PerRouteConfig", PerRouteConfig
)
