# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/alternate_protocols_cache/v3/alternate_protocols_cache.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("FilterConfig",)

import warnings
from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FilterConfig(betterproto2.Message):
    """
    [#protodoc-title: Alternate Protocols Cache]

    Configuration for the alternate protocols cache HTTP filter.
    [#extension: envoy.filters.http.alternate_protocols_cache]
    """

    alternate_protocols_cache_options: "_____config__core__v3__.AlternateProtocolsCacheOptions | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    This field is ignored: the alternate protocols cache filter will use the
    cache for the cluster the request is routed to.
    """

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("alternate_protocols_cache_options"):
            warnings.warn(
                "FilterConfig.alternate_protocols_cache_options is deprecated",
                DeprecationWarning,
            )


default_message_pool.register_message(
    "envoy.extensions.filters.http.alternate_protocols_cache.v3",
    "FilterConfig",
    FilterConfig,
)


from ......config.core import v3 as _____config__core__v3__
