# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/bandwidth_limit/v3/bandwidth_limit.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("BandwidthLimit", "BandwidthLimitEnableMode")

import datetime
from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class BandwidthLimitEnableMode(betterproto2.Enum):
    """
    Defines the mode for the bandwidth limit filter.
    Values represent bitmask.
    """

    DISABLED = 0
    """
    Filter is disabled.
    """

    REQUEST = 1
    """
    Filter enabled only for incoming traffic.
    """

    RESPONSE = 2
    """
    Filter enabled only for outgoing traffic.
    """

    REQUEST_AND_RESPONSE = 3
    """
    Filter enabled for both incoming and outgoing traffic.
    """


@dataclass(eq=False, repr=False)
class BandwidthLimit(betterproto2.Message):
    """
    [#protodoc-title: Bandwidth limit]
    Bandwidth limit :ref:`configuration overview <config_http_filters_bandwidth_limit>`.
    [#extension: envoy.filters.http.bandwidth_limit]

    [#next-free-field: 8]
    """

    stat_prefix: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The human readable prefix to use when emitting stats.
    """

    enable_mode: "BandwidthLimitEnableMode" = betterproto2.field(
        2, betterproto2.TYPE_ENUM, default_factory=lambda: BandwidthLimitEnableMode(0)
    )
    """
    The enable mode for the bandwidth limit filter.
    Default is Disabled.
    """

    limit_kbps: "int | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt64Value,
        optional=True,
    )
    """
    The limit supplied in KiB/s.

    .. note::
      It's fine for the limit to be unset for the global configuration since the bandwidth limit
      can be applied at a the virtual host or route level. Thus, the limit must be set for the
      per route configuration otherwise the config will be rejected.

    .. note::
      When using per route configuration, the limit becomes unique to that route.
    """

    fill_interval: "datetime.timedelta | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    Optional Fill interval in milliseconds for the token refills. Defaults to 50ms.
    It must be at least 20ms to avoid too aggressive refills.
    """

    runtime_enabled: "_____config__core__v3__.RuntimeFeatureFlag | None" = (
        betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Runtime flag that controls whether the filter is enabled or not. If not specified, defaults
    to enabled.
    """

    enable_response_trailers: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)
    """
    Enable response trailers.

    .. note::

      If set true, the following 4 trailers will be added, prefixed by ``response_trailer_prefix``:
      * bandwidth-request-delay-ms: delay time in milliseconds it took for the request stream transfer including request body transfer time and the time added by the filter.
      * bandwidth-response-delay-ms: delay time in milliseconds it took for the response stream transfer including response body transfer time and the time added by the filter.
      * bandwidth-request-filter-delay-ms: delay time in milliseconds in request stream transfer added by the filter.
      * bandwidth-response-filter-delay-ms: delay time in milliseconds that added by the filter.
      If :ref:`enable_mode <envoy_v3_api_field_extensions.filters.http.bandwidth_limit.v3.BandwidthLimit.enable_mode>` is ``DISABLED`` or ``REQUEST``, the trailers will not be set.
      If both the request and response delay time is 0, the trailers will not be set.
    """

    response_trailer_prefix: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)
    """
    Optional The prefix for the response trailers.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.bandwidth_limit.v3", "BandwidthLimit", BandwidthLimit
)


from .......google import protobuf as ______google__protobuf__
from ......config.core import v3 as _____config__core__v3__
