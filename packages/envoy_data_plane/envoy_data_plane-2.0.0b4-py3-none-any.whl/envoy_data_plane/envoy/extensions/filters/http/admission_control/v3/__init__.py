# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/http/admission_control/v3/admission_control.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AdmissionControl",
    "AdmissionControlSuccessCriteria",
    "AdmissionControlSuccessCriteriaGrpcCriteria",
    "AdmissionControlSuccessCriteriaHttpCriteria",
)

import datetime
from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class AdmissionControl(betterproto2.Message):
    """
    [#protodoc-title: Admission Control]
    [#extension: envoy.filters.http.admission_control]

    [#next-free-field: 8]

    Oneofs:
        - evaluation_criteria: Defines how a request is considered a success/failure.
    """

    enabled: "_____config__core__v3__.RuntimeFeatureFlag | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    If set to false, the admission control filter will operate as a pass-through filter. If the
    message is unspecified, the filter will be enabled.
    """

    success_criteria: "AdmissionControlSuccessCriteria | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True, group="evaluation_criteria"
    )

    sampling_window: "datetime.timedelta | None" = betterproto2.field(
        3,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    The sliding time window over which the success rate is calculated. The window is rounded to the
    nearest second. Defaults to 30s.
    """

    aggression: "_____config__core__v3__.RuntimeDouble | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Rejection probability is defined by the formula::

        max(0, (rq_count -  rq_success_count / sr_threshold) / (rq_count + 1)) ^ (1 / aggression)

    The aggression dictates how heavily the admission controller will throttle requests upon SR
    dropping at or below the threshold. A value of 1 will result in a linear increase in
    rejection probability as SR drops. Any values less than 1.0, will be set to 1.0. If the
    message is unspecified, the aggression is 1.0. See `the admission control documentation
    <https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/admission_control_filter.html>`_
    for a diagram illustrating this.
    """

    sr_threshold: "_____config__core__v3__.RuntimePercent | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Dictates the success rate at which the rejection probability is non-zero. As success rate drops
    below this threshold, rejection probability will increase. Any success rate above the threshold
    results in a rejection probability of 0. Defaults to 95%.
    """

    rps_threshold: "_____config__core__v3__.RuntimeUInt32 | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    If the average RPS of the sampling window is below this threshold, the request
    will not be rejected, even if the success rate is lower than sr_threshold.
    Defaults to 0.
    """

    max_rejection_probability: "_____config__core__v3__.RuntimePercent | None" = (
        betterproto2.field(7, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    The probability of rejection will never exceed this value, even if the failure rate is rising.
    Defaults to 80%.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.admission_control.v3",
    "AdmissionControl",
    AdmissionControl,
)


@dataclass(eq=False, repr=False)
class AdmissionControlSuccessCriteria(betterproto2.Message):
    """
    Default method of specifying what constitutes a successful request. All status codes that
    indicate a successful request must be explicitly specified if not relying on the default
    values.
    """

    http_criteria: "AdmissionControlSuccessCriteriaHttpCriteria | None" = (
        betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    If HTTP criteria are unspecified, all HTTP status codes below 500 are treated as successful
    responses.

    .. note::

       The default HTTP codes considered successful by the admission controller are done so due
       to the unlikelihood that sending fewer requests would change their behavior (for example:
       redirects, unauthorized access, or bad requests won't be alleviated by sending less
       traffic).
    """

    grpc_criteria: "AdmissionControlSuccessCriteriaGrpcCriteria | None" = (
        betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    GRPC status codes to consider as request successes. If unspecified, defaults to: Ok,
    Cancelled, Unknown, InvalidArgument, NotFound, AlreadyExists, Unauthenticated,
    FailedPrecondition, OutOfRange, PermissionDenied, and Unimplemented.

    .. note::

       The default gRPC codes that are considered successful by the admission controller are
       chosen because of the unlikelihood that sending fewer requests will change the behavior.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.admission_control.v3",
    "AdmissionControl.SuccessCriteria",
    AdmissionControlSuccessCriteria,
)


@dataclass(eq=False, repr=False)
class AdmissionControlSuccessCriteriaGrpcCriteria(betterproto2.Message):
    grpc_success_status: "list[int]" = betterproto2.field(
        1, betterproto2.TYPE_UINT32, repeated=True
    )
    """
    Status codes that constitute a successful request.
    Mappings can be found at: https://github.com/grpc/grpc/blob/master/doc/statuscodes.md.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.admission_control.v3",
    "AdmissionControl.SuccessCriteria.GrpcCriteria",
    AdmissionControlSuccessCriteriaGrpcCriteria,
)


@dataclass(eq=False, repr=False)
class AdmissionControlSuccessCriteriaHttpCriteria(betterproto2.Message):
    http_success_status: "list[_____type__v3__.Int32Range]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    Status code ranges that constitute a successful request. Configurable codes are in the
    range [100, 600).
    """


default_message_pool.register_message(
    "envoy.extensions.filters.http.admission_control.v3",
    "AdmissionControl.SuccessCriteria.HttpCriteria",
    AdmissionControlSuccessCriteriaHttpCriteria,
)


from .......google import protobuf as ______google__protobuf__
from ......config.core import v3 as _____config__core__v3__
from ......type import v3 as _____type__v3__
