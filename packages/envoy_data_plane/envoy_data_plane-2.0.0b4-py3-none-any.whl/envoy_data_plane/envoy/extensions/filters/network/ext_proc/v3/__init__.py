# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/ext_proc/v3/ext_proc.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "MetadataOptions",
    "MetadataOptionsMetadataNamespaces",
    "NetworkExternalProcessor",
    "ProcessingMode",
    "ProcessingModeDataSendMode",
)

import datetime
from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class ProcessingModeDataSendMode(betterproto2.Enum):
    """
    Defines how traffic should be handled by the external processor.
    """

    STREAMED = 0
    """
    Send the data to the external processor for processing whenever the data is ready.
    """

    SKIP = 1
    """
    Skip sending the data to the external processor.
    """


@dataclass(eq=False, repr=False)
class MetadataOptions(betterproto2.Message):
    """
    The MetadataOptions structure defines options for sending dynamic metadata. Specifically,
    which namespaces to send to the server.
    """

    forwarding_namespaces: "MetadataOptionsMetadataNamespaces | None" = (
        betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    Describes which typed or untyped dynamic metadata namespaces to forward to
    the external processing server.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.ext_proc.v3", "MetadataOptions", MetadataOptions
)


@dataclass(eq=False, repr=False)
class MetadataOptionsMetadataNamespaces(betterproto2.Message):
    untyped: "list[str]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )
    """
    Specifies a list of metadata namespaces whose values, if present,
    will be passed to the ext_proc service as an opaque *protobuf::Struct*.
    """

    typed: "list[str]" = betterproto2.field(2, betterproto2.TYPE_STRING, repeated=True)
    """
    Specifies a list of metadata namespaces whose values, if present,
    will be passed to the ext_proc service as a *protobuf::Any*. This allows
    envoy and the external processing server to share the protobuf message
    definition for safe parsing.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.ext_proc.v3",
    "MetadataOptions.MetadataNamespaces",
    MetadataOptionsMetadataNamespaces,
)


@dataclass(eq=False, repr=False)
class NetworkExternalProcessor(betterproto2.Message):
    """
    [#protodoc-title: External Processing Filter]
    External Processing Filter: Process network traffic using an external service.
    [#extension: envoy.filters.network.ext_proc]

    The Network External Processing filter allows an external service to process raw TCP/UDP traffic
    in a flexible way using a bidirectional gRPC stream. Unlike the HTTP External Processing filter,
    this filter operates at the L4 (transport) layer, giving access to raw network traffic.

    The filter communicates with an external gRPC service that can:

    1. Inspect traffic in both directions
    2. Modify the network traffic
    3. Control connection lifecycle (continue, close, or reset)

    By using the filter's processing mode, you can selectively choose which data
    directions to process (read, write or both), allowing for efficient processing.
    [#next-free-field: 7]
    """

    grpc_service: "_____config__core__v3__.GrpcService | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The gRPC service that will process network traffic.
    This service must implement the NetworkExternalProcessor service
    defined in the proto file /envoy/service/network_ext_proc/v3/external_processor.proto.
    """

    failure_mode_allow: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)
    """
    By default, if the gRPC stream cannot be established, or if it is closed
    prematurely with an error, the filter will fail, leading to the close of connection.
    With this parameter set to true, however, then if the gRPC stream is prematurely closed
    or could not be opened, processing continues without error.
    """

    processing_mode: "ProcessingMode | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Options for controlling processing behavior.
    """

    message_timeout: "datetime.timedelta | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.Duration,
        optional=True,
    )
    """
    Specifies the timeout for each individual message sent on the stream and
    when the filter is running in synchronous mode. Whenever
    the proxy sends a message on the stream that requires a response, it will
    reset this timer, and will stop processing and return an error (subject
    to the processing mode) if the timer expires. Default is 200 ms.
    """

    stat_prefix: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    metadata_options: "MetadataOptions | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Options related to the sending and receiving of dynamic metadata.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.ext_proc.v3",
    "NetworkExternalProcessor",
    NetworkExternalProcessor,
)


@dataclass(eq=False, repr=False)
class ProcessingMode(betterproto2.Message):
    """
    Options for controlling processing behavior.
    Filter will reject the config if both read and write are SKIP mode.
    """

    process_read: "ProcessingModeDataSendMode" = betterproto2.field(
        1, betterproto2.TYPE_ENUM, default_factory=lambda: ProcessingModeDataSendMode(0)
    )
    """
    Controls whether inbound (read) data from the client is sent to the external processor.
    Default: STREAMED
    """

    process_write: "ProcessingModeDataSendMode" = betterproto2.field(
        2, betterproto2.TYPE_ENUM, default_factory=lambda: ProcessingModeDataSendMode(0)
    )
    """
    Controls whether outbound (write) data to the client is sent to the external processor.
    Default: STREAMED
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.ext_proc.v3", "ProcessingMode", ProcessingMode
)


from .......google import protobuf as ______google__protobuf__
from ......config.core import v3 as _____config__core__v3__
