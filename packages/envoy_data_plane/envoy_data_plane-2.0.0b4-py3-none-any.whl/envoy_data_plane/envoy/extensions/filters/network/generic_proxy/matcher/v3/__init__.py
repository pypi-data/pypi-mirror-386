# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/network/generic_proxy/matcher/v3/matcher.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "HostMatchInput",
    "KeyValueMatchEntry",
    "MethodMatchInput",
    "PathMatchInput",
    "PropertyMatchInput",
    "RequestMatchInput",
    "RequestMatcher",
    "ServiceMatchInput",
)

from dataclasses import dataclass

import betterproto2

from ........message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class HostMatchInput(betterproto2.Message):
    """
    Used to match request host of the generic downstream request. Only applicable if a host provided
    by the application protocol.
    This is same with the ServiceMatchInput and this should be preferred over ServiceMatchInput.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "HostMatchInput",
    HostMatchInput,
)


@dataclass(eq=False, repr=False)
class KeyValueMatchEntry(betterproto2.Message):
    """
    Used to match an arbitrary key-value pair for headers, trailers or properties.
    """

    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The key name to match on.
    """

    string_match: "______type__matcher__v3__.StringMatcher | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The key value pattern.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "KeyValueMatchEntry",
    KeyValueMatchEntry,
)


@dataclass(eq=False, repr=False)
class MethodMatchInput(betterproto2.Message):
    """
    Used to match request method of the generic downstream request. Only applicable if a method provided
    by the application protocol.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "MethodMatchInput",
    MethodMatchInput,
)


@dataclass(eq=False, repr=False)
class PathMatchInput(betterproto2.Message):
    """
    Used to match request path of the generic downstream request. Only applicable if a path provided
    by the application protocol.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "PathMatchInput",
    PathMatchInput,
)


@dataclass(eq=False, repr=False)
class PropertyMatchInput(betterproto2.Message):
    """
    Used to match an arbitrary property of the generic downstream request.
    These properties are populated by the codecs of application protocols.
    """

    property_name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The property name to match on.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "PropertyMatchInput",
    PropertyMatchInput,
)


@dataclass(eq=False, repr=False)
class RequestMatcher(betterproto2.Message):
    """
    Custom matcher to match on the generic downstream request. This is used to match
    multiple fields of the downstream request and avoid complex combinations of
    HostMatchInput, PathMatchInput, MethodMatchInput and PropertyMatchInput.
    """

    host: "______type__matcher__v3__.StringMatcher | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Optional host pattern to match on. If not specified, any host will match.
    """

    path: "______type__matcher__v3__.StringMatcher | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Optional path pattern to match on. If not specified, any path will match.
    """

    method: "______type__matcher__v3__.StringMatcher | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Optional method pattern to match on. If not specified, any method will match.
    """

    properties: "list[KeyValueMatchEntry]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    Optional arbitrary properties to match on. If not specified, any properties
    will match. The key is the property name and the value is the property value
    to match on.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "RequestMatcher",
    RequestMatcher,
)


@dataclass(eq=False, repr=False)
class RequestMatchInput(betterproto2.Message):
    """
    Used to match an whole generic downstream request.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "RequestMatchInput",
    RequestMatchInput,
)


@dataclass(eq=False, repr=False)
class ServiceMatchInput(betterproto2.Message):
    """
    [#protodoc-title: Generic Proxy Route Matcher Configuration]

    Used to match request service of the downstream request. Only applicable if a service provided
    by the application protocol.
    This is deprecated and should be replaced by HostMatchInput. This is kept for backward compatibility.
    """

    pass


default_message_pool.register_message(
    "envoy.extensions.filters.network.generic_proxy.matcher.v3",
    "ServiceMatchInput",
    ServiceMatchInput,
)


from .......type.matcher import v3 as ______type__matcher__v3__
