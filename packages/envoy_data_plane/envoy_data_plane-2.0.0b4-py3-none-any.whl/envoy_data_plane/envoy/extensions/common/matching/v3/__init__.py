# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/common/matching/v3/extension_matcher.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "ExtensionWithMatcher",
    "ExtensionWithMatcherPerRoute",
)

import warnings
from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class ExtensionWithMatcher(betterproto2.Message):
    """
    [#protodoc-title: Extension matcher]

    Wrapper around an existing extension that provides an associated matcher. This allows
    decorating an existing extension with a matcher, which can be used to match against
    relevant protocol data.
    """

    matcher: "____config__common__matcher__v3__.Matcher | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The associated matcher. This is deprecated in favor of xds_matcher.
    """

    xds_matcher: "_____xds__type__matcher__v3__.Matcher | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The associated matcher.
    """

    extension_config: "____config__core__v3__.TypedExtensionConfig | None" = (
        betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)
    )
    """
    The underlying extension config.
    """

    def __post_init__(self) -> None:
        super().__post_init__()
        if self.is_set("matcher"):
            warnings.warn(
                "ExtensionWithMatcher.matcher is deprecated", DeprecationWarning
            )


default_message_pool.register_message(
    "envoy.extensions.common.matching.v3", "ExtensionWithMatcher", ExtensionWithMatcher
)


@dataclass(eq=False, repr=False)
class ExtensionWithMatcherPerRoute(betterproto2.Message):
    """
    Extra settings on a per virtualhost/route/weighted-cluster level.
    """

    xds_matcher: "_____xds__type__matcher__v3__.Matcher | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Matcher override.
    """


default_message_pool.register_message(
    "envoy.extensions.common.matching.v3",
    "ExtensionWithMatcherPerRoute",
    ExtensionWithMatcherPerRoute,
)


from ......xds.type.matcher import v3 as _____xds__type__matcher__v3__
from .....config.common.matcher import v3 as ____config__common__matcher__v3__
from .....config.core import v3 as ____config__core__v3__
