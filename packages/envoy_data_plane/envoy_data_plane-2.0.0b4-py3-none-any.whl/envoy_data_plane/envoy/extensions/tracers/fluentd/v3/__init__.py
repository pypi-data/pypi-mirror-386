# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/tracers/fluentd/v3/fluentd.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("FluentdConfig",)

import datetime
from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class FluentdConfig(betterproto2.Message):
    """
    [#protodoc-title: Fluentd tracer]

    Configuration for the Fluentd tracer.
    This tracer extension will send the emitted traces over a TCP connection to an upstream that is accepting
    the Fluentd Forward Protocol as described in: `Fluentd Forward Protocol Specification
    <https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1>`_.
    [#extension: envoy.tracers.fluentd]
    [#next-free-field: 7]
    """

    cluster: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    The upstream cluster to connect to for streaming the Fluentd messages.
    """

    tag: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    A tag is a string separated with ``.`` (e.g. ``log.type``) to categorize events.
    See: https://github.com/fluent/fluentd/wiki/Forward-Protocol-Specification-v1#message-modes
    """

    stat_prefix: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    The prefix to use when emitting tracer stats.
    """

    buffer_flush_interval: "datetime.timedelta | None" = betterproto2.field(
        4,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.Duration,
        optional=True,
    )
    """
    Interval for flushing traces to the TCP stream. Tracer will flush requests every time
    this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
    1 second.
    """

    buffer_size_bytes: "int | None" = betterproto2.field(
        5,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: _____google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    Soft size limit in bytes for access log entries buffer. The logger will buffer requests until
    this limit it hit, or every time flush interval is elapsed, whichever comes first. When the buffer
    limit is hit, the logger will immediately flush the buffer contents. Setting it to zero effectively
    disables the batching. Defaults to 16384.
    """

    retry_policy: "____config__core__v3__.RetryPolicy | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Optional retry, in case upstream connection has failed. If this field is not set, the default values will be applied.
    """


default_message_pool.register_message(
    "envoy.extensions.tracers.fluentd.v3", "FluentdConfig", FluentdConfig
)


from ......google import protobuf as _____google__protobuf__
from .....config.core import v3 as ____config__core__v3__
