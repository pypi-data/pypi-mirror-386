# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/string_matcher/lua/v3/lua.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Lua",)

from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class Lua(betterproto2.Message):
    """
    [#protodoc-title: Lua StringMatcher]
    A Lua StringMatcher allows executing a Lua script to determine if a string is a match. The configured source
    code must define a function named `envoy_match`. If the function returns true, the string is considered a match.
    Any other result, including an execution error, is considered a non-match.

    Example:

    .. code-block:: yaml

      source_code:
        inline_string: |
          function envoy_match(str)
              -- Do something.
              return true
          end

    [#extension: envoy.string_matcher.lua]
    """

    source_code: "____config__core__v3__.DataSource | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    The Lua code that Envoy will execute
    """


default_message_pool.register_message(
    "envoy.extensions.string_matcher.lua.v3", "Lua", Lua
)


from .....config.core import v3 as ____config__core__v3__
