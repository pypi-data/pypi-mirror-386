# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/access_loggers/filters/cel/v3/cel.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("ExpressionFilter",)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class ExpressionFilter(betterproto2.Message):
    """
    [#protodoc-title: ExpressionFilter]
    [#extension: envoy.access_loggers.extension_filters.cel]

    ExpressionFilter is an access logging filter that evaluates configured
    symbolic Common Expression Language expressions to inform the decision
    to generate an access log.
    """

    expression: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Expression that, when evaluated, will be used to filter access logs.
    Expressions are based on the set of Envoy :ref:`attributes <arch_overview_attributes>`.
    The provided expression must evaluate to true for logging (expression errors are considered false).
    Examples:

    * ``response.code >= 400``
    * ``(connection.mtls && request.headers['x-log-mtls'] == 'true') || request.url_path.contains('v1beta3')``
    """


default_message_pool.register_message(
    "envoy.extensions.access_loggers.filters.cel.v3",
    "ExpressionFilter",
    ExpressionFilter,
)
