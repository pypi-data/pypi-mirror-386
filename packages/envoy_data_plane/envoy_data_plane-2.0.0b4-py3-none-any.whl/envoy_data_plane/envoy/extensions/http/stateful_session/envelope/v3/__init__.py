# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/http/stateful_session/envelope/v3/envelope.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "EnvelopeSessionState",
    "EnvelopeSessionStateHeader",
)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class EnvelopeSessionState(betterproto2.Message):
    """
    [#protodoc-title: Envelope stateful session extension]

    The extension allows the session state is tracked via existing session context that initialized
    by the upstream server. It assumes that the upstream server will generate the session context
    (like session id header or cookie) in the initial response of the session and the client will use
    the same session context in the subsequent requests without any modification.

    When processing the response from the upstream, Envoy will check if the response contains the
    session context. If the response contains the session context, no matter if it's a new session
    context or an existing one, Envoy will join it and the upstream host as new session context.

    When processing the request from the downstream, Envoy will check if the request contains the
    session context. If the request contains the session context, Envoy will strip the
    upstream host from the session context.

    [#extension: envoy.http.stateful_session.envelope]
    """

    header: "EnvelopeSessionStateHeader | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
    Set the header config to track the session state.
    """


default_message_pool.register_message(
    "envoy.extensions.http.stateful_session.envelope.v3",
    "EnvelopeSessionState",
    EnvelopeSessionState,
)


@dataclass(eq=False, repr=False)
class EnvelopeSessionStateHeader(betterproto2.Message):
    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Iff the header specified by the ``name`` field is present in the response (assume the ``name``
    is set to ``session-header`` and original header value is ``xxxxxx``), then the upstream host
    address and value of ``name`` field specified header will be encoded in following format and
    the output will be used to update the ``name`` field specified header in the response:

    .. code-block:: none

      session-header: "MS4yLjMuNDo4MAo=;UV:eHh4eHh4Cg==" # base64(1.2.3.4:80);UV:base64(xxxxxx)

    The ``UV`` (upstream value) part is used to store the original upstream header value of
    ``name`` field specified header.

    If this mode is used then Envoy will assume that the header in the request will also be in the
    same format and will contain the ``UV`` part. This extension will parse the upstream host
    address and update the ``name`` field specified header in the request to the ``UV`` part.
    """


default_message_pool.register_message(
    "envoy.extensions.http.stateful_session.envelope.v3",
    "EnvelopeSessionState.Header",
    EnvelopeSessionStateHeader,
)
