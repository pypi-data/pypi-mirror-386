# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/config/common/tap/v2alpha/common.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "AdminConfig",
    "CommonExtensionConfig",
)

from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


@dataclass(eq=False, repr=False)
class AdminConfig(betterproto2.Message):
    """
    Configuration for the admin handler. See :ref:`here <config_http_filters_tap_admin_handler>` for
    more information.
    """

    config_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Opaque configuration ID. When requests are made to the admin handler, the passed opaque ID is
    matched to the configured filter opaque ID to determine which filter to configure.
    """


default_message_pool.register_message(
    "envoy.config.common.tap.v2alpha", "AdminConfig", AdminConfig
)


@dataclass(eq=False, repr=False)
class CommonExtensionConfig(betterproto2.Message):
    """
    [#protodoc-title: Common tap extension configuration]

    Common configuration for all tap extensions.

    Oneofs:
        - config_type:
    """

    admin_config: "AdminConfig | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True, group="config_type"
    )
    """
    If specified, the tap filter will be configured via an admin handler.
    """

    static_config: "____service__tap__v2alpha__.TapConfig | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True, group="config_type"
    )
    """
    If specified, the tap filter will be configured via a static configuration that cannot be
    changed.
    """


default_message_pool.register_message(
    "envoy.config.common.tap.v2alpha", "CommonExtensionConfig", CommonExtensionConfig
)


from .....service.tap import v2alpha as ____service__tap__v2alpha__
