"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import corvic_generated.feature.v2.space_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class SpaceServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetSpace: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceResponse,
    ]
    PatchSpace: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.PatchSpaceRequest,
        corvic_generated.feature.v2.space_pb2.PatchSpaceResponse,
    ]
    CreateSpace: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.CreateSpaceRequest,
        corvic_generated.feature.v2.space_pb2.CreateSpaceResponse,
    ]
    DeleteSpace: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.DeleteSpaceRequest,
        corvic_generated.feature.v2.space_pb2.DeleteSpaceResponse,
    ]
    ListSpaces: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListSpacesRequest,
        corvic_generated.feature.v2.space_pb2.ListSpacesResponse,
    ]
    GetSpaceResult: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceResultRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceResultResponse,
    ]
    GetSpaceVisualization: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationResponse,
    ]
    GetVisualization: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetVisualizationRequest,
        corvic_generated.feature.v2.space_pb2.GetVisualizationResponse,
    ]
    ListSpaceRuns: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListSpaceRunsRequest,
        corvic_generated.feature.v2.space_pb2.ListSpaceRunsResponse,
    ]
    GetSpaceRun: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceRunRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceRunResponse,
    ]
    ListAvailableSemanticModels: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsRequest,
        corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsResponse,
    ]
    SuggestSpaceName: grpc.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.SuggestSpaceNameRequest,
        corvic_generated.feature.v2.space_pb2.SuggestSpaceNameResponse,
    ]

class SpaceServiceAsyncStub:
    GetSpace: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceResponse,
    ]
    PatchSpace: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.PatchSpaceRequest,
        corvic_generated.feature.v2.space_pb2.PatchSpaceResponse,
    ]
    CreateSpace: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.CreateSpaceRequest,
        corvic_generated.feature.v2.space_pb2.CreateSpaceResponse,
    ]
    DeleteSpace: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.DeleteSpaceRequest,
        corvic_generated.feature.v2.space_pb2.DeleteSpaceResponse,
    ]
    ListSpaces: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListSpacesRequest,
        corvic_generated.feature.v2.space_pb2.ListSpacesResponse,
    ]
    GetSpaceResult: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceResultRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceResultResponse,
    ]
    GetSpaceVisualization: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationResponse,
    ]
    GetVisualization: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetVisualizationRequest,
        corvic_generated.feature.v2.space_pb2.GetVisualizationResponse,
    ]
    ListSpaceRuns: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListSpaceRunsRequest,
        corvic_generated.feature.v2.space_pb2.ListSpaceRunsResponse,
    ]
    GetSpaceRun: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.GetSpaceRunRequest,
        corvic_generated.feature.v2.space_pb2.GetSpaceRunResponse,
    ]
    ListAvailableSemanticModels: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsRequest,
        corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsResponse,
    ]
    SuggestSpaceName: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.feature.v2.space_pb2.SuggestSpaceNameRequest,
        corvic_generated.feature.v2.space_pb2.SuggestSpaceNameResponse,
    ]

class SpaceServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetSpace(
        self,
        request: corvic_generated.feature.v2.space_pb2.GetSpaceRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.GetSpaceResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.GetSpaceResponse]]: ...
    @abc.abstractmethod
    def PatchSpace(
        self,
        request: corvic_generated.feature.v2.space_pb2.PatchSpaceRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.PatchSpaceResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.PatchSpaceResponse]]: ...
    @abc.abstractmethod
    def CreateSpace(
        self,
        request: corvic_generated.feature.v2.space_pb2.CreateSpaceRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.CreateSpaceResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.CreateSpaceResponse]]: ...
    @abc.abstractmethod
    def DeleteSpace(
        self,
        request: corvic_generated.feature.v2.space_pb2.DeleteSpaceRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.DeleteSpaceResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.DeleteSpaceResponse]]: ...
    @abc.abstractmethod
    def ListSpaces(
        self,
        request: corvic_generated.feature.v2.space_pb2.ListSpacesRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.ListSpacesResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.ListSpacesResponse]]: ...
    @abc.abstractmethod
    def GetSpaceResult(
        self,
        request: corvic_generated.feature.v2.space_pb2.GetSpaceResultRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.GetSpaceResultResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.GetSpaceResultResponse]]: ...
    @abc.abstractmethod
    def GetSpaceVisualization(
        self,
        request: corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.GetSpaceVisualizationResponse]]: ...
    @abc.abstractmethod
    def GetVisualization(
        self,
        request: corvic_generated.feature.v2.space_pb2.GetVisualizationRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.GetVisualizationResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.GetVisualizationResponse]]: ...
    @abc.abstractmethod
    def ListSpaceRuns(
        self,
        request: corvic_generated.feature.v2.space_pb2.ListSpaceRunsRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.ListSpaceRunsResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.ListSpaceRunsResponse]]: ...
    @abc.abstractmethod
    def GetSpaceRun(
        self,
        request: corvic_generated.feature.v2.space_pb2.GetSpaceRunRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.GetSpaceRunResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.GetSpaceRunResponse]]: ...
    @abc.abstractmethod
    def ListAvailableSemanticModels(
        self,
        request: corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.ListAvailableSemanticModelsResponse]]: ...
    @abc.abstractmethod
    def SuggestSpaceName(
        self,
        request: corvic_generated.feature.v2.space_pb2.SuggestSpaceNameRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.feature.v2.space_pb2.SuggestSpaceNameResponse, collections.abc.Awaitable[corvic_generated.feature.v2.space_pb2.SuggestSpaceNameResponse]]: ...

def add_SpaceServiceServicer_to_server(servicer: SpaceServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
