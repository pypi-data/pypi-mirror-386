# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from corvic_generated.orm.v1 import table_pb2 as corvic_dot_orm_dot_v1_dot_table__pb2


class TableComputeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Execute = channel.unary_unary(
                '/corvic.orm.v1.TableComputeService/Execute',
                request_serializer=corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteRequest.SerializeToString,
                response_deserializer=corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteResponse.FromString,
                )
        self.StreamExecute = channel.stream_unary(
                '/corvic.orm.v1.TableComputeService/StreamExecute',
                request_serializer=corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteRequest.SerializeToString,
                response_deserializer=corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteResponse.FromString,
                )


class TableComputeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Execute(self, request, context):
        """Execute a table op and write resulting table to the provided location
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamExecute(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TableComputeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteRequest.FromString,
                    response_serializer=corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteResponse.SerializeToString,
            ),
            'StreamExecute': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamExecute,
                    request_deserializer=corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteRequest.FromString,
                    response_serializer=corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'corvic.orm.v1.TableComputeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TableComputeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.orm.v1.TableComputeService/Execute',
            corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteRequest.SerializeToString,
            corvic_dot_orm_dot_v1_dot_table__pb2.ExecuteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamExecute(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/corvic.orm.v1.TableComputeService/StreamExecute',
            corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteRequest.SerializeToString,
            corvic_dot_orm_dot_v1_dot_table__pb2.StreamExecuteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
