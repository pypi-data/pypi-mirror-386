# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from corvic_generated.ingest.v2 import table_pb2 as corvic_dot_ingest_dot_v2_dot_table__pb2


class TableServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteTable = channel.unary_unary(
                '/corvic.ingest.v2.TableService/DeleteTable',
                request_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableResponse.FromString,
                )
        self.GetTable = channel.unary_unary(
                '/corvic.ingest.v2.TableService/GetTable',
                request_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableResponse.FromString,
                )
        self.ListTables = channel.unary_stream(
                '/corvic.ingest.v2.TableService/ListTables',
                request_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesResponse.FromString,
                )
        self.GetTableHead = channel.unary_unary(
                '/corvic.ingest.v2.TableService/GetTableHead',
                request_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadResponse.FromString,
                )


class TableServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTable(self, request, context):
        """Get metadata about a particular table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTableHead(self, request, context):
        """Get the table metadata plus the first few rows of the table.

        The head isn't included in the "GetTable" response because a table's
        data is not necessarily available as quickly as its metadata is.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TableServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteTable': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTable,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableResponse.SerializeToString,
            ),
            'GetTable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTable,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableResponse.SerializeToString,
            ),
            'ListTables': grpc.unary_stream_rpc_method_handler(
                    servicer.ListTables,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesResponse.SerializeToString,
            ),
            'GetTableHead': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTableHead,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'corvic.ingest.v2.TableService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TableService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.TableService/DeleteTable',
            corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_table__pb2.DeleteTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.TableService/GetTable',
            corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/corvic.ingest.v2.TableService/ListTables',
            corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_table__pb2.ListTablesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTableHead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.TableService/GetTableHead',
            corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_table__pb2.GetTableHeadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
