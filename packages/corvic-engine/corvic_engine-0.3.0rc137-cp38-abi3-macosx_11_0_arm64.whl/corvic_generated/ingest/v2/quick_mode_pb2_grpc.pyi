"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import corvic_generated.ingest.v2.quick_mode_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class QuickModeServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    RunQuickMode: grpc.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeRequest,
        corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeResponse,
    ]
    GetRunStatus: grpc.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusRequest,
        corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusResponse,
    ]

class QuickModeServiceAsyncStub:
    RunQuickMode: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeRequest,
        corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeResponse,
    ]
    GetRunStatus: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusRequest,
        corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusResponse,
    ]

class QuickModeServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def RunQuickMode(
        self,
        request: corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeResponse, collections.abc.Awaitable[corvic_generated.ingest.v2.quick_mode_pb2.RunQuickModeResponse]]: ...
    @abc.abstractmethod
    def GetRunStatus(
        self,
        request: corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusResponse, collections.abc.Awaitable[corvic_generated.ingest.v2.quick_mode_pb2.GetRunStatusResponse]]: ...

def add_QuickModeServiceServicer_to_server(servicer: QuickModeServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
