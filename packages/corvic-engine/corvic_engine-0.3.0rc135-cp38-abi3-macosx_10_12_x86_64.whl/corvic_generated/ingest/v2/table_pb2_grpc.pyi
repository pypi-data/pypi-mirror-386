"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import corvic_generated.ingest.v2.table_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class TableServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    DeleteTable: grpc.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.DeleteTableRequest,
        corvic_generated.ingest.v2.table_pb2.DeleteTableResponse,
    ]
    GetTable: grpc.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.GetTableRequest,
        corvic_generated.ingest.v2.table_pb2.GetTableResponse,
    ]
    """Get metadata about a particular table."""
    ListTables: grpc.UnaryStreamMultiCallable[
        corvic_generated.ingest.v2.table_pb2.ListTablesRequest,
        corvic_generated.ingest.v2.table_pb2.ListTablesResponse,
    ]
    GetTableHead: grpc.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.GetTableHeadRequest,
        corvic_generated.ingest.v2.table_pb2.GetTableHeadResponse,
    ]
    """Get the table metadata plus the first few rows of the table.

    The head isn't included in the "GetTable" response because a table's
    data is not necessarily available as quickly as its metadata is.
    """

class TableServiceAsyncStub:
    DeleteTable: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.DeleteTableRequest,
        corvic_generated.ingest.v2.table_pb2.DeleteTableResponse,
    ]
    GetTable: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.GetTableRequest,
        corvic_generated.ingest.v2.table_pb2.GetTableResponse,
    ]
    """Get metadata about a particular table."""
    ListTables: grpc.aio.UnaryStreamMultiCallable[
        corvic_generated.ingest.v2.table_pb2.ListTablesRequest,
        corvic_generated.ingest.v2.table_pb2.ListTablesResponse,
    ]
    GetTableHead: grpc.aio.UnaryUnaryMultiCallable[
        corvic_generated.ingest.v2.table_pb2.GetTableHeadRequest,
        corvic_generated.ingest.v2.table_pb2.GetTableHeadResponse,
    ]
    """Get the table metadata plus the first few rows of the table.

    The head isn't included in the "GetTable" response because a table's
    data is not necessarily available as quickly as its metadata is.
    """

class TableServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def DeleteTable(
        self,
        request: corvic_generated.ingest.v2.table_pb2.DeleteTableRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.ingest.v2.table_pb2.DeleteTableResponse, collections.abc.Awaitable[corvic_generated.ingest.v2.table_pb2.DeleteTableResponse]]: ...
    @abc.abstractmethod
    def GetTable(
        self,
        request: corvic_generated.ingest.v2.table_pb2.GetTableRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.ingest.v2.table_pb2.GetTableResponse, collections.abc.Awaitable[corvic_generated.ingest.v2.table_pb2.GetTableResponse]]:
        """Get metadata about a particular table."""
    @abc.abstractmethod
    def ListTables(
        self,
        request: corvic_generated.ingest.v2.table_pb2.ListTablesRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[corvic_generated.ingest.v2.table_pb2.ListTablesResponse], collections.abc.AsyncIterator[corvic_generated.ingest.v2.table_pb2.ListTablesResponse]]: ...
    @abc.abstractmethod
    def GetTableHead(
        self,
        request: corvic_generated.ingest.v2.table_pb2.GetTableHeadRequest,
        context: _ServicerContext,
    ) -> typing.Union[corvic_generated.ingest.v2.table_pb2.GetTableHeadResponse, collections.abc.Awaitable[corvic_generated.ingest.v2.table_pb2.GetTableHeadResponse]]:
        """Get the table metadata plus the first few rows of the table.

        The head isn't included in the "GetTable" response because a table's
        data is not necessarily available as quickly as its metadata is.
        """

def add_TableServiceServicer_to_server(servicer: TableServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
