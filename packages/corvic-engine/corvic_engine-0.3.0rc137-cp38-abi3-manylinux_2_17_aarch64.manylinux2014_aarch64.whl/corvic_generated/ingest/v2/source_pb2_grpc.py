# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from corvic_generated.ingest.v2 import source_pb2 as corvic_dot_ingest_dot_v2_dot_source__pb2


class SourceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteSource = channel.unary_unary(
                '/corvic.ingest.v2.SourceService/DeleteSource',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceResponse.FromString,
                )
        self.GetSource = channel.unary_unary(
                '/corvic.ingest.v2.SourceService/GetSource',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceResponse.FromString,
                )
        self.ListSources = channel.unary_stream(
                '/corvic.ingest.v2.SourceService/ListSources',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesResponse.FromString,
                )
        self.ListSourcesPaginated = channel.unary_unary(
                '/corvic.ingest.v2.SourceService/ListSourcesPaginated',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedResponse.FromString,
                )
        self.GetSourceHead = channel.unary_unary(
                '/corvic.ingest.v2.SourceService/GetSourceHead',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadResponse.FromString,
                )
        self.PatchSource = channel.unary_unary(
                '/corvic.ingest.v2.SourceService/PatchSource',
                request_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceResponse.FromString,
                )


class SourceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSource(self, request, context):
        """Get metadata about a particular source.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSourcesPaginated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSourceHead(self, request, context):
        """Get the source metadata plus the first few rows of the source.

        The head isn't included in the "GetSource" response because a source's
        data is not necessarily available as quickly as its metadata is.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SourceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteSource': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSource,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceResponse.SerializeToString,
            ),
            'GetSource': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSource,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceResponse.SerializeToString,
            ),
            'ListSources': grpc.unary_stream_rpc_method_handler(
                    servicer.ListSources,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesResponse.SerializeToString,
            ),
            'ListSourcesPaginated': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSourcesPaginated,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedResponse.SerializeToString,
            ),
            'GetSourceHead': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSourceHead,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadResponse.SerializeToString,
            ),
            'PatchSource': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchSource,
                    request_deserializer=corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'corvic.ingest.v2.SourceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SourceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.SourceService/DeleteSource',
            corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.DeleteSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.SourceService/GetSource',
            corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/corvic.ingest.v2.SourceService/ListSources',
            corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSourcesPaginated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.SourceService/ListSourcesPaginated',
            corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.ListSourcesPaginatedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSourceHead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.SourceService/GetSourceHead',
            corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.GetSourceHeadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PatchSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v2.SourceService/PatchSource',
            corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceRequest.SerializeToString,
            corvic_dot_ingest_dot_v2_dot_source__pb2.PatchSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
