# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from corvic_generated.ingest.v1 import service_pb2 as corvic_dot_ingest_dot_v1_dot_service__pb2


class IngestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStore = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/CreateStore',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreResponse.FromString,
                )
        self.DeleteStore = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/DeleteStore',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreResponse.FromString,
                )
        self.GetStore = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/GetStore',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreResponse.FromString,
                )
        self.ListStores = channel.unary_stream(
                '/corvic.ingest.v1.IngestService/ListStores',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresResponse.FromString,
                )
        self.UploadDocument = channel.stream_unary(
                '/corvic.ingest.v1.IngestService/UploadDocument',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentResponse.FromString,
                )
        self.CreateUploadURL = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/CreateUploadURL',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLResponse.FromString,
                )
        self.FinalizeUploadURL = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/FinalizeUploadURL',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLResponse.FromString,
                )
        self.DeleteDocument = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/DeleteDocument',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentResponse.FromString,
                )
        self.GetDocument = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/GetDocument',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentResponse.FromString,
                )
        self.ListDocumentsOfStore = channel.unary_stream(
                '/corvic.ingest.v1.IngestService/ListDocumentsOfStore',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreResponse.FromString,
                )
        self.CreateStructuredUploadURL = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/CreateStructuredUploadURL',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLResponse.FromString,
                )
        self.FinalizeStructuredUploadURL = channel.unary_unary(
                '/corvic.ingest.v1.IngestService/FinalizeStructuredUploadURL',
                request_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLRequest.SerializeToString,
                response_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLResponse.FromString,
                )


class IngestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadDocument(self, request_iterator, context):
        """UploadDocument directly uploads a document to a store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUploadURL(self, request, context):
        """CreateUploadURL returns a limited-time duration URL that can be used to upload
        a document to a store.

        Callers should perform a PUT request on the returned URL to upload data and then
        call FinalizeUploadURL.

        This is an alternative to UploadDocument when uploads are large as clients
        directly write to the bucket store location.

        For more details on how to use the returned URL:
        https://cloud.google.com/storage/docs/performing-resumable-uploads
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeUploadURL(self, request, context):
        """FinalizeUploadURL completes an upload created with CreateUploadURL.

        Callers should perform a PUT request on the returned URL to complete the
        upload.

        This is an alternative to UploadDocument when uploads are large as clients
        directly write to the bucket store location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocumentsOfStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStructuredUploadURL(self, request, context):
        """CreateStructuredUploadURL is analogous to CreateUploadURL but for structured data.

        StructuredUploads result in the creation of a table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeStructuredUploadURL(self, request, context):
        """FinalizeStructuredUploadURL is analogous to CreateUploadURL but for structured data.

        StructuredUploads result in the creation of a table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IngestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStore': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStore,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreResponse.SerializeToString,
            ),
            'DeleteStore': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStore,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreResponse.SerializeToString,
            ),
            'GetStore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStore,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreResponse.SerializeToString,
            ),
            'ListStores': grpc.unary_stream_rpc_method_handler(
                    servicer.ListStores,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresResponse.SerializeToString,
            ),
            'UploadDocument': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadDocument,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentResponse.SerializeToString,
            ),
            'CreateUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUploadURL,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLResponse.SerializeToString,
            ),
            'FinalizeUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeUploadURL,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLResponse.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentResponse.SerializeToString,
            ),
            'GetDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocument,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentResponse.SerializeToString,
            ),
            'ListDocumentsOfStore': grpc.unary_stream_rpc_method_handler(
                    servicer.ListDocumentsOfStore,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreResponse.SerializeToString,
            ),
            'CreateStructuredUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStructuredUploadURL,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLResponse.SerializeToString,
            ),
            'FinalizeStructuredUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeStructuredUploadURL,
                    request_deserializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLRequest.FromString,
                    response_serializer=corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'corvic.ingest.v1.IngestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IngestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/CreateStore',
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/DeleteStore',
            corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/GetStore',
            corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.GetStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListStores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/corvic.ingest.v1.IngestService/ListStores',
            corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.ListStoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadDocument(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/corvic.ingest.v1.IngestService/UploadDocument',
            corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.UploadDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/CreateUploadURL',
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinalizeUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/FinalizeUploadURL',
            corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/DeleteDocument',
            corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.DeleteDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/GetDocument',
            corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.GetDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDocumentsOfStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/corvic.ingest.v1.IngestService/ListDocumentsOfStore',
            corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.ListDocumentsOfStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateStructuredUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/CreateStructuredUploadURL',
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.CreateStructuredUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinalizeStructuredUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/corvic.ingest.v1.IngestService/FinalizeStructuredUploadURL',
            corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLRequest.SerializeToString,
            corvic_dot_ingest_dot_v1_dot_service__pb2.FinalizeStructuredUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
