"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import corvic_generated.status.v1.event_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class EventServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ListEvents: grpc.UnaryStreamMultiCallable[
        corvic_generated.status.v1.event_pb2.ListEventsRequest,
        corvic_generated.status.v1.event_pb2.ListEventsResponse,
    ]
    ListenForEvents: grpc.UnaryStreamMultiCallable[
        corvic_generated.status.v1.event_pb2.ListenForEventsRequest,
        corvic_generated.status.v1.event_pb2.ListenForEventsResponse,
    ]

class EventServiceAsyncStub:
    ListEvents: grpc.aio.UnaryStreamMultiCallable[
        corvic_generated.status.v1.event_pb2.ListEventsRequest,
        corvic_generated.status.v1.event_pb2.ListEventsResponse,
    ]
    ListenForEvents: grpc.aio.UnaryStreamMultiCallable[
        corvic_generated.status.v1.event_pb2.ListenForEventsRequest,
        corvic_generated.status.v1.event_pb2.ListenForEventsResponse,
    ]

class EventServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ListEvents(
        self,
        request: corvic_generated.status.v1.event_pb2.ListEventsRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[corvic_generated.status.v1.event_pb2.ListEventsResponse], collections.abc.AsyncIterator[corvic_generated.status.v1.event_pb2.ListEventsResponse]]: ...
    @abc.abstractmethod
    def ListenForEvents(
        self,
        request: corvic_generated.status.v1.event_pb2.ListenForEventsRequest,
        context: _ServicerContext,
    ) -> typing.Union[collections.abc.Iterator[corvic_generated.status.v1.event_pb2.ListenForEventsResponse], collections.abc.AsyncIterator[corvic_generated.status.v1.event_pb2.ListenForEventsResponse]]: ...

def add_EventServiceServicer_to_server(servicer: EventServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
