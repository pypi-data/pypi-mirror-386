Metadata-Version: 2.4
Name: resfo-utilities
Version: 0.0.2
Summary: A utility library for working with the output of reservoir simulators.
Author-email: Equinor <fg_sib-scout@equinor.com>
Maintainer-email: Eivind Jahren <ejah@equinor.com>, Håkon Steinkopf Søhoel <hsoho@equinor.com>
License: LGPL-3.0
Project-URL: Homepage, https://github.com/equinor/resfo-utilities
Project-URL: Repository, https://github.com/equinor/resfo-utilities
Project-URL: Bug Tracker, https://github.com/equinor/resfo-utilities/issues
Classifier: Development Status :: 1 - Planning
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: <3.14,>=3.11
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: resfo
Requires-Dist: shapely
Requires-Dist: trimesh[easy]
Requires-Dist: matplotlib
Provides-Extra: doc
Requires-Dist: sphinx; extra == "doc"
Requires-Dist: sphinx-rtd-theme; extra == "doc"
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: hypothesis; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Requires-Dist: types-shapely; extra == "dev"
Requires-Dist: pytest-benchmark; extra == "dev"

resfo
===========


resfo-utilities is a library for working with output from
 several reservoir simulators such as [opm
flow](https://github.com/OPM/opm-simulators).

Installation
============

`pip install resfo-utilities`


How to contribute
=================

We use uv to have one synchronized development environment for all packages.
See [installing uv](https://docs.astral.sh/uv/getting-started/installation/). We
recommend either installing uv using your systems package manager, or creating
a small virtual environment you intall base packages into (such as `uv` and `pre-commit`).

Once uv is installed, you can get a development environment by running:

```sh
git clone https://github.com/equinor/resfo-utilities
cd resfo-utilities
uv sync --all-extras
```


You should set up `pre-commit` to ensure style checks are done as you commit:

```bash
uv run pre-commit install --hook-type pre-push
```
