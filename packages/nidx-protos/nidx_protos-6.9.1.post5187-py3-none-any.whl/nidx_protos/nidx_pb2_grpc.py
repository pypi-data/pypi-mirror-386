# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from nidx_protos import nodereader_pb2 as nidx__protos_dot_nodereader__pb2
from nidx_protos import noderesources_pb2 as nidx__protos_dot_noderesources__pb2
from nidx_protos import nodewriter_pb2 as nidx__protos_dot_nodewriter__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in nidx_protos/nidx_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NidxApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetShard = channel.unary_unary(
                '/nidx.NidxApi/GetShard',
                request_serializer=nidx__protos_dot_nodereader__pb2.GetShardRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_noderesources__pb2.Shard.FromString,
                _registered_method=True)
        self.NewShard = channel.unary_unary(
                '/nidx.NidxApi/NewShard',
                request_serializer=nidx__protos_dot_nodewriter__pb2.NewShardRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_noderesources__pb2.ShardCreated.FromString,
                _registered_method=True)
        self.DeleteShard = channel.unary_unary(
                '/nidx.NidxApi/DeleteShard',
                request_serializer=nidx__protos_dot_noderesources__pb2.ShardId.SerializeToString,
                response_deserializer=nidx__protos_dot_noderesources__pb2.ShardId.FromString,
                _registered_method=True)
        self.ListShards = channel.unary_unary(
                '/nidx.NidxApi/ListShards',
                request_serializer=nidx__protos_dot_noderesources__pb2.EmptyQuery.SerializeToString,
                response_deserializer=nidx__protos_dot_noderesources__pb2.ShardIds.FromString,
                _registered_method=True)
        self.AddVectorSet = channel.unary_unary(
                '/nidx.NidxApi/AddVectorSet',
                request_serializer=nidx__protos_dot_nodewriter__pb2.NewVectorSetRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
                _registered_method=True)
        self.RemoveVectorSet = channel.unary_unary(
                '/nidx.NidxApi/RemoveVectorSet',
                request_serializer=nidx__protos_dot_noderesources__pb2.VectorSetID.SerializeToString,
                response_deserializer=nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
                _registered_method=True)
        self.ListVectorSets = channel.unary_unary(
                '/nidx.NidxApi/ListVectorSets',
                request_serializer=nidx__protos_dot_noderesources__pb2.ShardId.SerializeToString,
                response_deserializer=nidx__protos_dot_noderesources__pb2.VectorSetList.FromString,
                _registered_method=True)


class NidxApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetShard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewShard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteShard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVectorSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveVectorSet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVectorSets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NidxApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetShard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShard,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.GetShardRequest.FromString,
                    response_serializer=nidx__protos_dot_noderesources__pb2.Shard.SerializeToString,
            ),
            'NewShard': grpc.unary_unary_rpc_method_handler(
                    servicer.NewShard,
                    request_deserializer=nidx__protos_dot_nodewriter__pb2.NewShardRequest.FromString,
                    response_serializer=nidx__protos_dot_noderesources__pb2.ShardCreated.SerializeToString,
            ),
            'DeleteShard': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteShard,
                    request_deserializer=nidx__protos_dot_noderesources__pb2.ShardId.FromString,
                    response_serializer=nidx__protos_dot_noderesources__pb2.ShardId.SerializeToString,
            ),
            'ListShards': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShards,
                    request_deserializer=nidx__protos_dot_noderesources__pb2.EmptyQuery.FromString,
                    response_serializer=nidx__protos_dot_noderesources__pb2.ShardIds.SerializeToString,
            ),
            'AddVectorSet': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVectorSet,
                    request_deserializer=nidx__protos_dot_nodewriter__pb2.NewVectorSetRequest.FromString,
                    response_serializer=nidx__protos_dot_nodewriter__pb2.OpStatus.SerializeToString,
            ),
            'RemoveVectorSet': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveVectorSet,
                    request_deserializer=nidx__protos_dot_noderesources__pb2.VectorSetID.FromString,
                    response_serializer=nidx__protos_dot_nodewriter__pb2.OpStatus.SerializeToString,
            ),
            'ListVectorSets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVectorSets,
                    request_deserializer=nidx__protos_dot_noderesources__pb2.ShardId.FromString,
                    response_serializer=nidx__protos_dot_noderesources__pb2.VectorSetList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nidx.NidxApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nidx.NidxApi', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NidxApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetShard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/GetShard',
            nidx__protos_dot_nodereader__pb2.GetShardRequest.SerializeToString,
            nidx__protos_dot_noderesources__pb2.Shard.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NewShard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/NewShard',
            nidx__protos_dot_nodewriter__pb2.NewShardRequest.SerializeToString,
            nidx__protos_dot_noderesources__pb2.ShardCreated.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteShard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/DeleteShard',
            nidx__protos_dot_noderesources__pb2.ShardId.SerializeToString,
            nidx__protos_dot_noderesources__pb2.ShardId.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListShards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/ListShards',
            nidx__protos_dot_noderesources__pb2.EmptyQuery.SerializeToString,
            nidx__protos_dot_noderesources__pb2.ShardIds.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddVectorSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/AddVectorSet',
            nidx__protos_dot_nodewriter__pb2.NewVectorSetRequest.SerializeToString,
            nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveVectorSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/RemoveVectorSet',
            nidx__protos_dot_noderesources__pb2.VectorSetID.SerializeToString,
            nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListVectorSets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxApi/ListVectorSets',
            nidx__protos_dot_noderesources__pb2.ShardId.SerializeToString,
            nidx__protos_dot_noderesources__pb2.VectorSetList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NidxSearcherStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Search = channel.unary_unary(
                '/nidx.NidxSearcher/Search',
                request_serializer=nidx__protos_dot_nodereader__pb2.SearchRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodereader__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.GraphSearch = channel.unary_unary(
                '/nidx.NidxSearcher/GraphSearch',
                request_serializer=nidx__protos_dot_nodereader__pb2.GraphSearchRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodereader__pb2.GraphSearchResponse.FromString,
                _registered_method=True)
        self.Suggest = channel.unary_unary(
                '/nidx.NidxSearcher/Suggest',
                request_serializer=nidx__protos_dot_nodereader__pb2.SuggestRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodereader__pb2.SuggestResponse.FromString,
                _registered_method=True)
        self.Paragraphs = channel.unary_stream(
                '/nidx.NidxSearcher/Paragraphs',
                request_serializer=nidx__protos_dot_nodereader__pb2.StreamRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodereader__pb2.ParagraphItem.FromString,
                _registered_method=True)
        self.Documents = channel.unary_stream(
                '/nidx.NidxSearcher/Documents',
                request_serializer=nidx__protos_dot_nodereader__pb2.StreamRequest.SerializeToString,
                response_deserializer=nidx__protos_dot_nodereader__pb2.DocumentItem.FromString,
                _registered_method=True)


class NidxSearcherServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GraphSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Suggest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Paragraphs(self, request, context):
        """Streams
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Documents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NidxSearcherServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.SearchRequest.FromString,
                    response_serializer=nidx__protos_dot_nodereader__pb2.SearchResponse.SerializeToString,
            ),
            'GraphSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.GraphSearch,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.GraphSearchRequest.FromString,
                    response_serializer=nidx__protos_dot_nodereader__pb2.GraphSearchResponse.SerializeToString,
            ),
            'Suggest': grpc.unary_unary_rpc_method_handler(
                    servicer.Suggest,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.SuggestRequest.FromString,
                    response_serializer=nidx__protos_dot_nodereader__pb2.SuggestResponse.SerializeToString,
            ),
            'Paragraphs': grpc.unary_stream_rpc_method_handler(
                    servicer.Paragraphs,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.StreamRequest.FromString,
                    response_serializer=nidx__protos_dot_nodereader__pb2.ParagraphItem.SerializeToString,
            ),
            'Documents': grpc.unary_stream_rpc_method_handler(
                    servicer.Documents,
                    request_deserializer=nidx__protos_dot_nodereader__pb2.StreamRequest.FromString,
                    response_serializer=nidx__protos_dot_nodereader__pb2.DocumentItem.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nidx.NidxSearcher', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nidx.NidxSearcher', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NidxSearcher(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxSearcher/Search',
            nidx__protos_dot_nodereader__pb2.SearchRequest.SerializeToString,
            nidx__protos_dot_nodereader__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GraphSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxSearcher/GraphSearch',
            nidx__protos_dot_nodereader__pb2.GraphSearchRequest.SerializeToString,
            nidx__protos_dot_nodereader__pb2.GraphSearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Suggest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxSearcher/Suggest',
            nidx__protos_dot_nodereader__pb2.SuggestRequest.SerializeToString,
            nidx__protos_dot_nodereader__pb2.SuggestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Paragraphs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/nidx.NidxSearcher/Paragraphs',
            nidx__protos_dot_nodereader__pb2.StreamRequest.SerializeToString,
            nidx__protos_dot_nodereader__pb2.ParagraphItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Documents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/nidx.NidxSearcher/Documents',
            nidx__protos_dot_nodereader__pb2.StreamRequest.SerializeToString,
            nidx__protos_dot_nodereader__pb2.DocumentItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NidxIndexerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Index = channel.unary_unary(
                '/nidx.NidxIndexer/Index',
                request_serializer=nidx__protos_dot_nodewriter__pb2.IndexMessage.SerializeToString,
                response_deserializer=nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
                _registered_method=True)


class NidxIndexerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Index(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NidxIndexerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Index': grpc.unary_unary_rpc_method_handler(
                    servicer.Index,
                    request_deserializer=nidx__protos_dot_nodewriter__pb2.IndexMessage.FromString,
                    response_serializer=nidx__protos_dot_nodewriter__pb2.OpStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nidx.NidxIndexer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('nidx.NidxIndexer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NidxIndexer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Index(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/nidx.NidxIndexer/Index',
            nidx__protos_dot_nodewriter__pb2.IndexMessage.SerializeToString,
            nidx__protos_dot_nodewriter__pb2.OpStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
