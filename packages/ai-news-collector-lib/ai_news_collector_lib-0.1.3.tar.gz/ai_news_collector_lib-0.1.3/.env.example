NEWS_API_KEY=
TAVILY_API_KEY=tvly-xxx
GOOGLE_SEARCH_API_KEY=
GOOGLE_SEARCH_ENGINE_ID=
BING_SEARCH_API_KEY=
SERPER_API_KEY=
BRAVE_SEARCH_API_KEY=


#目前支持openai和gemini
LLM_PROVIDER=openai  
# Used in llm_integration.py
HTTPS_PROXY=

# OpenAI Configuration
#OPENAI_API_KEY=sk-WO6DtsQqCPPd7YF3A94cC7E9E76a4dE0AbCf3f980c59CfB3
#OPENAI_BASE_URL="https://api.openaixxx.com/v1/"
#OPENAI_MODEL=gpt-4o-mini

# Qwen OpoenAI compatible model
OPENAI_API_KEY=ms-264ab674-2aaa-482d-a586-1d1d3e1d2597
OPENAI_BASE_URL=https://api-inference.modelscope.cn/v1
OPENAI_MODEL=Qwen/Qwen3-235B-A22B-Instruct-2507


# Gemini Configuration  
GEMINI_API_KEY=
GEMINI_MODEL=gemini-2.5-flash

## https://metaso.cn/search-api/api-keys , API信息：https://metaso.cn/search-api/playground 速度限额：200/QPM

YOUTUBE_API_KEY=  # Generative Language API Key
FIRECRAWL_API_KEY=
METASOSEARCH_API_KEY=mk-xxx


# Application Settings
DEFAULT_LLM_PROVIDER=openai

# Content Settings
TARGET_ARTICLE_LENGTH=1500
CONTENT_TONE=professional
MAX_ARTICLES_PER_DAY=50


TWINE_USERNAME=__token__
TWINE_PASSWORD=pypi-xxx-xxx

# 开启网络相关测试；未设置或设为 0 时自动跳过。
ALLOW_NETWORK=1
# 控制每源文章上限（默认 3 ）
MAX_ARTICLES_PER_SOURCE=3
# 控制回溯天数（默认 7 ）
DAYS_BACK=1

# AI News Collector Library - 环境变量配置示例
# 复制此文件为 .env 并填入你的API密钥

# ===========================================
# 免费源（无需API密钥）
# ===========================================
# 以下源无需配置，直接可用：
# - HackerNews (hackernews)
# - ArXiv (arxiv) 
# - DuckDuckGo (duckduckgo)

# ===========================================
# 付费API源（需要API密钥）
# ===========================================

# NewsAPI (https://newsapi.org/)
# 免费额度：1000次/天
NEWS_API_KEY=your_newsapi_key_here

# Tavily Search (https://tavily.com/)
# 免费额度：1000次/月
TAVILY_API_KEY=your_tavily_api_key_here

# Google Custom Search (https://developers.google.com/custom-search/)
# 免费额度：100次/天
GOOGLE_SEARCH_API_KEY=your_google_search_api_key_here
GOOGLE_SEARCH_ENGINE_ID=your_google_search_engine_id_here

# Bing Search API (https://www.microsoft.com/en-us/bing/apis/bing-web-search-api)
# 免费额度：1000次/月
BING_SEARCH_API_KEY=your_bing_search_api_key_here

# Serper API (https://serper.dev/)
# 免费额度：2500次/月
SERPER_API_KEY=your_serper_api_key_here

# Brave Search API (https://brave.com/search/api/)
# 免费额度：2000次/月
BRAVE_SEARCH_API_KEY=your_brave_search_api_key_here

# MetaSota Search (https://metaso.cn/) - MCP协议搜索服务
# 基于Model Context Protocol的智能搜索服务
# 支持网页、文档、论文、图片、视频、播客等多种内容类型
METASOSEARCH_API_KEY=your_metasota_search_api_key_here

# ===========================================
# 测试配置
# ===========================================

# 允许网络测试（用于集成测试）
# ALLOW_NETWORK=1

# 启用付费API测试（首次运行会录制HTTP请求，后续可离线回放）
# TEST_PAID_APIS=1

# 强制更新测试cassettes（重新录制所有HTTP请求）
# UPDATE_CASSETTES=1

# 测试配置
# MAX_ARTICLES_PER_SOURCE=3
# DAYS_BACK=7

# ===========================================
# 使用说明
# ===========================================
# 1. 复制此文件为 .env
# 2. 填入你的API密钥（可选，免费源无需配置）
# 3. 运行基础测试：
#    python -m pytest tests/ -v
# 4. 首次运行付费API测试（会录制HTTP请求）：
#    设置 ALLOW_NETWORK=1 和 TEST_PAID_APIS=1
#    python -m pytest tests/test_paid_apis.py -v
# 5. 后续运行（使用录制的cassette，零成本）：
#    python -m pytest tests/test_paid_apis.py -v
