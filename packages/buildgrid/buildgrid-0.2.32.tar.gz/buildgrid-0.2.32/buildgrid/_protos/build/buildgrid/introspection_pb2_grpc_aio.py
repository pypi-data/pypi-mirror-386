# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from buildgrid._protos.build.buildgrid import introspection_pb2 as build_dot_buildgrid_dot_introspection__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in build/buildgrid/introspection_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class IntrospectionStub(object):
    """BuildGrid's Introspection service is used to query the state of
    BuildGrid's internals, and obtain details on available functionality.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListWorkers = channel.unary_unary(
                '/build.buildgrid.Introspection/ListWorkers',
                request_serializer=build_dot_buildgrid_dot_introspection__pb2.ListWorkersRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_introspection__pb2.ListWorkersResponse.FromString,
                _registered_method=True)
        self.GetOperationFilters = channel.unary_unary(
                '/build.buildgrid.Introspection/GetOperationFilters',
                request_serializer=build_dot_buildgrid_dot_introspection__pb2.GetOperationFiltersRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_introspection__pb2.OperationFilters.FromString,
                _registered_method=True)
        self.GetOperationStats = channel.unary_unary(
                '/build.buildgrid.Introspection/GetOperationStats',
                request_serializer=build_dot_buildgrid_dot_introspection__pb2.OperationStatsRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_introspection__pb2.OperationStats.FromString,
                _registered_method=True)
        self.GetJobHistory = channel.unary_unary(
                '/build.buildgrid.Introspection/GetJobHistory',
                request_serializer=build_dot_buildgrid_dot_introspection__pb2.GetJobHistoryRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_introspection__pb2.JobHistory.FromString,
                _registered_method=True)


class IntrospectionServicer(object):
    """BuildGrid's Introspection service is used to query the state of
    BuildGrid's internals, and obtain details on available functionality.
    """

    def ListWorkers(self, request, context):
        """Query the list of workers known to a specific BuildGrid instance

        Errors:

        * `INVALID_ARGUMENT`: When the provided instance name doesn't exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperationFilters(self, request, context):
        """Get the list of valid filters for use in ListOperations requests
        for a specific BuildGrid instance

        Errors:

        * `INVALID_ARGUMENT`: When the provided instance name doesn't exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperationStats(self, request, context):
        """Get additional information about an operation

        Errors:
        * `NOT_FOUND`: When the provided operation name doesn't exist

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobHistory(self, request, context):
        """Get the lifecycle history for a job

        Errors:
        * `INVALID_ARGUMENT`: When the provided instance name doesn't exist
        * `NOT_FOUND`: When the provided operation name doesn't exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IntrospectionServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListWorkers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWorkers,
                    request_deserializer=build_dot_buildgrid_dot_introspection__pb2.ListWorkersRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_introspection__pb2.ListWorkersResponse.SerializeToString,
            ),
            'GetOperationFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperationFilters,
                    request_deserializer=build_dot_buildgrid_dot_introspection__pb2.GetOperationFiltersRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_introspection__pb2.OperationFilters.SerializeToString,
            ),
            'GetOperationStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperationStats,
                    request_deserializer=build_dot_buildgrid_dot_introspection__pb2.OperationStatsRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_introspection__pb2.OperationStats.SerializeToString,
            ),
            'GetJobHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobHistory,
                    request_deserializer=build_dot_buildgrid_dot_introspection__pb2.GetJobHistoryRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_introspection__pb2.JobHistory.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'build.buildgrid.Introspection', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('build.buildgrid.Introspection', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Introspection(object):
    """BuildGrid's Introspection service is used to query the state of
    BuildGrid's internals, and obtain details on available functionality.
    """

    @staticmethod
    def ListWorkers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Introspection/ListWorkers',
            build_dot_buildgrid_dot_introspection__pb2.ListWorkersRequest.SerializeToString,
            build_dot_buildgrid_dot_introspection__pb2.ListWorkersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOperationFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Introspection/GetOperationFilters',
            build_dot_buildgrid_dot_introspection__pb2.GetOperationFiltersRequest.SerializeToString,
            build_dot_buildgrid_dot_introspection__pb2.OperationFilters.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOperationStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Introspection/GetOperationStats',
            build_dot_buildgrid_dot_introspection__pb2.OperationStatsRequest.SerializeToString,
            build_dot_buildgrid_dot_introspection__pb2.OperationStats.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJobHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Introspection/GetJobHistory',
            build_dot_buildgrid_dot_introspection__pb2.GetJobHistoryRequest.SerializeToString,
            build_dot_buildgrid_dot_introspection__pb2.JobHistory.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
