# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from buildgrid._protos.build.buildgrid import quota_pb2 as build_dot_buildgrid_dot_quota__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in build/buildgrid/quota_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class QuotaStub(object):
    """BuildGrid's Quota service is used to manage quota limits for
    different REAPI instances and bot cohorts.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInstanceQuota = channel.unary_unary(
                '/build.buildgrid.Quota/GetInstanceQuota',
                request_serializer=build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaResponse.FromString,
                _registered_method=True)
        self.PutInstanceQuota = channel.unary_unary(
                '/build.buildgrid.Quota/PutInstanceQuota',
                request_serializer=build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaResponse.FromString,
                _registered_method=True)
        self.DeleteInstanceQuota = channel.unary_unary(
                '/build.buildgrid.Quota/DeleteInstanceQuota',
                request_serializer=build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaRequest.SerializeToString,
                response_deserializer=build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaResponse.FromString,
                _registered_method=True)


class QuotaServicer(object):
    """BuildGrid's Quota service is used to manage quota limits for
    different REAPI instances and bot cohorts.
    """

    def GetInstanceQuota(self, request, context):
        """Get the quota configuration for a specific instance and bot cohort

        Errors:
        * `NOT_FOUND`: When the quota index by (instance_name, bot_cohort) doesn't exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutInstanceQuota(self, request, context):
        """Set or update the quota configuration for a specific instance and bot cohort
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstanceQuota(self, request, context):
        """Delete the quota configuration for a specific instance and bot cohort
        Errors:
        * `NOT_FOUND`: When the quota index by (instance_name, bot_cohort) doesn't exist
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuotaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInstanceQuota': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstanceQuota,
                    request_deserializer=build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaResponse.SerializeToString,
            ),
            'PutInstanceQuota': grpc.unary_unary_rpc_method_handler(
                    servicer.PutInstanceQuota,
                    request_deserializer=build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaResponse.SerializeToString,
            ),
            'DeleteInstanceQuota': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstanceQuota,
                    request_deserializer=build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaRequest.FromString,
                    response_serializer=build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'build.buildgrid.Quota', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('build.buildgrid.Quota', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Quota(object):
    """BuildGrid's Quota service is used to manage quota limits for
    different REAPI instances and bot cohorts.
    """

    @staticmethod
    def GetInstanceQuota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Quota/GetInstanceQuota',
            build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaRequest.SerializeToString,
            build_dot_buildgrid_dot_quota__pb2.GetInstanceQuotaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PutInstanceQuota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Quota/PutInstanceQuota',
            build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaRequest.SerializeToString,
            build_dot_buildgrid_dot_quota__pb2.PutInstanceQuotaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteInstanceQuota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/build.buildgrid.Quota/DeleteInstanceQuota',
            build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaRequest.SerializeToString,
            build_dot_buildgrid_dot_quota__pb2.DeleteInstanceQuotaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
