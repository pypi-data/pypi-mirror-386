[build-system]
requires = ["setuptools>=64.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dist-s1-enumerator"
authors = [
  { name = "Richard West, Charlie Marshak, Talib Oliver-Cabrera, and Jungkyo Jung", email = "charlie.z.marshak@jpl.nasa.gov"},
]
description = "Enumeration and ops library for the OPERA DIST-S1 project"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.12"

classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering",
]
license = { text = "Apache-2.0" }
dynamic = ["version"]

dependencies = ["numpy"]

[project.urls]
Homepage = "https://github.com/opera-adt/dist-s1-enumerator"
"Bug Tracker" = "https://github.com/opera-adt/dist-s1-enumerator/issues"
"Discussions" = "https://github.com/opera-adt/dist-s1-enumerator/discussions"
"Changelog" = "https://github.com/opera-adt/dist-s1-enumerator/releases"

[project.scripts]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["notebooks*", "tests*"]

[tool.setuptools.dynamic]
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.pytest.ini_options]
markers = [
    "integration: tests that require internect access for end-to-end testing",
    "notebooks: tests that require notebooks to be run; often slow",
]


[tool.setuptools_scm]

[tool.ruff]
line-length = 120
src = ["src", "tests"]
exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "notebooks/*",
    "tests/data/*",
]
indent-width = 4

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint]
select = [
    "F",   # flake8: https://docs.astral.sh/ruff/rules/#flake8-f
    "E",   # flake8: https://docs.astral.sh/ruff/rules/#flake8-e
    "I",   # isort: https://docs.astral.sh/ruff/rules/#isort-i
    "UP",  # pyupgrade: https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "D",   # pydocstyle: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "ANN", # annotations: https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "PTH", # use-pathlib-pth: https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "TRY", # tryceratops
]

ignore = [
  "D100",   # Missing docstring in public module
  "D103",   # Missing docstring in public function
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D203",   # 1 blank line required before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "TRY003", # Avoid specifying long messages outside the exception
  "D101",  
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 2
