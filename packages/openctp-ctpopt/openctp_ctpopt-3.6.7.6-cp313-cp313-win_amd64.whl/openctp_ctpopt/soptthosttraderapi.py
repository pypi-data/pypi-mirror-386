# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


# openctp-ctpopt is supported by openctp(https://github.com/openctp).
# Author: Jedore(https://github.com/Jedore)
#
# BSD 3-Clause License
#
# Copyright (c) 2024, openctp
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _soptthosttraderapi
else:
    import _soptthosttraderapi

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _soptthosttraderapi.SWIG_PyInstanceMethod_New
_swig_new_static_method = _soptthosttraderapi.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

THOST_TERT_RESTART = _soptthosttraderapi.THOST_TERT_RESTART
THOST_TERT_RESUME = _soptthosttraderapi.THOST_TERT_RESUME
THOST_TERT_QUICK = _soptthosttraderapi.THOST_TERT_QUICK
THOST_FTDC_EXP_Normal = _soptthosttraderapi.THOST_FTDC_EXP_Normal
r"""
    TFtdcExchangePropertyType是一个交易所属性类型
    正常
    """
THOST_FTDC_EXP_GenOrderByTrade = _soptthosttraderapi.THOST_FTDC_EXP_GenOrderByTrade
r"""根据成交生成报单"""
THOST_FTDC_ICT_EID = _soptthosttraderapi.THOST_FTDC_ICT_EID
r"""
    TFtdcIdCardTypeType是一个证件类型类型
    组织机构代码
    """
THOST_FTDC_ICT_IDCard = _soptthosttraderapi.THOST_FTDC_ICT_IDCard
r"""中国公民身份证"""
THOST_FTDC_ICT_OfficerIDCard = _soptthosttraderapi.THOST_FTDC_ICT_OfficerIDCard
r"""军官证"""
THOST_FTDC_ICT_PoliceIDCard = _soptthosttraderapi.THOST_FTDC_ICT_PoliceIDCard
r"""警官证"""
THOST_FTDC_ICT_SoldierIDCard = _soptthosttraderapi.THOST_FTDC_ICT_SoldierIDCard
r"""士兵证"""
THOST_FTDC_ICT_HouseholdRegister = _soptthosttraderapi.THOST_FTDC_ICT_HouseholdRegister
r"""户口簿"""
THOST_FTDC_ICT_Passport = _soptthosttraderapi.THOST_FTDC_ICT_Passport
r"""护照"""
THOST_FTDC_ICT_TaiwanCompatriotIDCard = _soptthosttraderapi.THOST_FTDC_ICT_TaiwanCompatriotIDCard
r"""台胞证"""
THOST_FTDC_ICT_HomeComingCard = _soptthosttraderapi.THOST_FTDC_ICT_HomeComingCard
r"""回乡证"""
THOST_FTDC_ICT_LicenseNo = _soptthosttraderapi.THOST_FTDC_ICT_LicenseNo
r"""营业执照号"""
THOST_FTDC_ICT_TaxNo = _soptthosttraderapi.THOST_FTDC_ICT_TaxNo
r"""税务登记号/当地纳税ID"""
THOST_FTDC_ICT_HMMainlandTravelPermit = _soptthosttraderapi.THOST_FTDC_ICT_HMMainlandTravelPermit
r"""港澳居民来往内地通行证"""
THOST_FTDC_ICT_TwMainlandTravelPermit = _soptthosttraderapi.THOST_FTDC_ICT_TwMainlandTravelPermit
r"""台湾居民来往大陆通行证"""
THOST_FTDC_ICT_DrivingLicense = _soptthosttraderapi.THOST_FTDC_ICT_DrivingLicense
r"""驾照"""
THOST_FTDC_ICT_SocialID = _soptthosttraderapi.THOST_FTDC_ICT_SocialID
r"""当地社保ID"""
THOST_FTDC_ICT_LocalID = _soptthosttraderapi.THOST_FTDC_ICT_LocalID
r"""当地身份证"""
THOST_FTDC_ICT_BusinessRegistration = _soptthosttraderapi.THOST_FTDC_ICT_BusinessRegistration
r"""商业登记证"""
THOST_FTDC_ICT_HKMCIDCard = _soptthosttraderapi.THOST_FTDC_ICT_HKMCIDCard
r"""港澳永久性居民身份证"""
THOST_FTDC_ICT_AccountsPermits = _soptthosttraderapi.THOST_FTDC_ICT_AccountsPermits
r"""人行开户许可证"""
THOST_FTDC_ICT_FrgPrmtRdCard = _soptthosttraderapi.THOST_FTDC_ICT_FrgPrmtRdCard
r"""外国人永久居留证"""
THOST_FTDC_ICT_OtherCard = _soptthosttraderapi.THOST_FTDC_ICT_OtherCard
r"""其他证件"""
THOST_FTDC_IR_All = _soptthosttraderapi.THOST_FTDC_IR_All
r"""
    TFtdcInvestorRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_IR_Group = _soptthosttraderapi.THOST_FTDC_IR_Group
r"""投资者组"""
THOST_FTDC_IR_Single = _soptthosttraderapi.THOST_FTDC_IR_Single
r"""单一投资者"""
THOST_FTDC_DR_All = _soptthosttraderapi.THOST_FTDC_DR_All
r"""
    TFtdcDepartmentRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_DR_Group = _soptthosttraderapi.THOST_FTDC_DR_Group
r"""组织架构"""
THOST_FTDC_DR_Single = _soptthosttraderapi.THOST_FTDC_DR_Single
r"""单一投资者"""
THOST_FTDC_DS_Asynchronous = _soptthosttraderapi.THOST_FTDC_DS_Asynchronous
r"""
    TFtdcDataSyncStatusType是一个数据同步状态类型
    未同步
    """
THOST_FTDC_DS_Synchronizing = _soptthosttraderapi.THOST_FTDC_DS_Synchronizing
r"""同步中"""
THOST_FTDC_DS_Synchronized = _soptthosttraderapi.THOST_FTDC_DS_Synchronized
r"""已同步"""
THOST_FTDC_BDS_Synchronized = _soptthosttraderapi.THOST_FTDC_BDS_Synchronized
r"""
    TFtdcBrokerDataSyncStatusType是一个经纪公司数据同步状态类型
    已同步
    """
THOST_FTDC_BDS_Synchronizing = _soptthosttraderapi.THOST_FTDC_BDS_Synchronizing
r"""同步中"""
THOST_FTDC_ECS_NoConnection = _soptthosttraderapi.THOST_FTDC_ECS_NoConnection
r"""
    TFtdcExchangeConnectStatusType是一个交易所连接状态类型
    没有任何连接
    """
THOST_FTDC_ECS_QryInstrumentSent = _soptthosttraderapi.THOST_FTDC_ECS_QryInstrumentSent
r"""已经发出合约查询请求"""
THOST_FTDC_ECS_GotInformation = _soptthosttraderapi.THOST_FTDC_ECS_GotInformation
r"""已经获取信息"""
THOST_FTDC_TCS_NotConnected = _soptthosttraderapi.THOST_FTDC_TCS_NotConnected
r"""
    TFtdcTraderConnectStatusType是一个交易所交易员连接状态类型
    没有任何连接
    """
THOST_FTDC_TCS_Connected = _soptthosttraderapi.THOST_FTDC_TCS_Connected
r"""已经连接"""
THOST_FTDC_TCS_QryInstrumentSent = _soptthosttraderapi.THOST_FTDC_TCS_QryInstrumentSent
r"""已经发出合约查询请求"""
THOST_FTDC_TCS_SubPrivateFlow = _soptthosttraderapi.THOST_FTDC_TCS_SubPrivateFlow
r"""订阅私有流"""
THOST_FTDC_FC_DataAsync = _soptthosttraderapi.THOST_FTDC_FC_DataAsync
r"""
    TFtdcFunctionCodeType是一个功能代码类型
    数据异步化
    """
THOST_FTDC_FC_ForceUserLogout = _soptthosttraderapi.THOST_FTDC_FC_ForceUserLogout
r"""强制用户登出"""
THOST_FTDC_FC_UserPasswordUpdate = _soptthosttraderapi.THOST_FTDC_FC_UserPasswordUpdate
r"""变更管理用户口令"""
THOST_FTDC_FC_BrokerPasswordUpdate = _soptthosttraderapi.THOST_FTDC_FC_BrokerPasswordUpdate
r"""变更经纪公司口令"""
THOST_FTDC_FC_InvestorPasswordUpdate = _soptthosttraderapi.THOST_FTDC_FC_InvestorPasswordUpdate
r"""变更投资者口令"""
THOST_FTDC_FC_OrderInsert = _soptthosttraderapi.THOST_FTDC_FC_OrderInsert
r"""报单插入"""
THOST_FTDC_FC_OrderAction = _soptthosttraderapi.THOST_FTDC_FC_OrderAction
r"""报单操作"""
THOST_FTDC_FC_SyncSystemData = _soptthosttraderapi.THOST_FTDC_FC_SyncSystemData
r"""同步系统数据"""
THOST_FTDC_FC_SyncBrokerData = _soptthosttraderapi.THOST_FTDC_FC_SyncBrokerData
r"""同步经纪公司数据"""
THOST_FTDC_FC_BachSyncBrokerData = _soptthosttraderapi.THOST_FTDC_FC_BachSyncBrokerData
r"""批量同步经纪公司数据"""
THOST_FTDC_FC_SuperQuery = _soptthosttraderapi.THOST_FTDC_FC_SuperQuery
r"""超级查询"""
THOST_FTDC_FC_ParkedOrderInsert = _soptthosttraderapi.THOST_FTDC_FC_ParkedOrderInsert
r"""预埋报单插入"""
THOST_FTDC_FC_ParkedOrderAction = _soptthosttraderapi.THOST_FTDC_FC_ParkedOrderAction
r"""预埋报单操作"""
THOST_FTDC_FC_SyncOTP = _soptthosttraderapi.THOST_FTDC_FC_SyncOTP
r"""同步动态令牌"""
THOST_FTDC_FC_DeleteOrder = _soptthosttraderapi.THOST_FTDC_FC_DeleteOrder
r"""删除未知单"""
THOST_FTDC_BFC_ForceUserLogout = _soptthosttraderapi.THOST_FTDC_BFC_ForceUserLogout
r"""
    TFtdcBrokerFunctionCodeType是一个经纪公司功能代码类型
    强制用户登出
    """
THOST_FTDC_BFC_UserPasswordUpdate = _soptthosttraderapi.THOST_FTDC_BFC_UserPasswordUpdate
r"""变更用户口令"""
THOST_FTDC_BFC_SyncBrokerData = _soptthosttraderapi.THOST_FTDC_BFC_SyncBrokerData
r"""同步经纪公司数据"""
THOST_FTDC_BFC_BachSyncBrokerData = _soptthosttraderapi.THOST_FTDC_BFC_BachSyncBrokerData
r"""批量同步经纪公司数据"""
THOST_FTDC_BFC_OrderInsert = _soptthosttraderapi.THOST_FTDC_BFC_OrderInsert
r"""报单插入"""
THOST_FTDC_BFC_OrderAction = _soptthosttraderapi.THOST_FTDC_BFC_OrderAction
r"""报单操作"""
THOST_FTDC_BFC_AllQuery = _soptthosttraderapi.THOST_FTDC_BFC_AllQuery
r"""全部查询"""
THOST_FTDC_BFC_log = _soptthosttraderapi.THOST_FTDC_BFC_log
r"""系统功能：登入/登出/修改密码等"""
THOST_FTDC_BFC_BaseQry = _soptthosttraderapi.THOST_FTDC_BFC_BaseQry
r"""基本查询：查询基础数据，如合约，交易所等常量"""
THOST_FTDC_BFC_TradeQry = _soptthosttraderapi.THOST_FTDC_BFC_TradeQry
r"""交易查询：如查成交，委托"""
THOST_FTDC_BFC_Trade = _soptthosttraderapi.THOST_FTDC_BFC_Trade
r"""交易功能：报单，撤单"""
THOST_FTDC_BFC_Virement = _soptthosttraderapi.THOST_FTDC_BFC_Virement
r"""银期转账"""
THOST_FTDC_BFC_Risk = _soptthosttraderapi.THOST_FTDC_BFC_Risk
r"""风险监控"""
THOST_FTDC_BFC_Session = _soptthosttraderapi.THOST_FTDC_BFC_Session
r"""查询/管理：查询会话，踢人等"""
THOST_FTDC_BFC_RiskNoticeCtl = _soptthosttraderapi.THOST_FTDC_BFC_RiskNoticeCtl
r"""风控通知控制"""
THOST_FTDC_BFC_RiskNotice = _soptthosttraderapi.THOST_FTDC_BFC_RiskNotice
r"""风控通知发送"""
THOST_FTDC_BFC_BrokerDeposit = _soptthosttraderapi.THOST_FTDC_BFC_BrokerDeposit
r"""察看经纪公司资金权限"""
THOST_FTDC_BFC_QueryFund = _soptthosttraderapi.THOST_FTDC_BFC_QueryFund
r"""资金查询"""
THOST_FTDC_BFC_QueryOrder = _soptthosttraderapi.THOST_FTDC_BFC_QueryOrder
r"""报单查询"""
THOST_FTDC_BFC_QueryTrade = _soptthosttraderapi.THOST_FTDC_BFC_QueryTrade
r"""成交查询"""
THOST_FTDC_BFC_QueryPosition = _soptthosttraderapi.THOST_FTDC_BFC_QueryPosition
r"""持仓查询"""
THOST_FTDC_BFC_QueryMarketData = _soptthosttraderapi.THOST_FTDC_BFC_QueryMarketData
r"""行情查询"""
THOST_FTDC_BFC_QueryUserEvent = _soptthosttraderapi.THOST_FTDC_BFC_QueryUserEvent
r"""用户事件查询"""
THOST_FTDC_BFC_QueryRiskNotify = _soptthosttraderapi.THOST_FTDC_BFC_QueryRiskNotify
r"""风险通知查询"""
THOST_FTDC_BFC_QueryFundChange = _soptthosttraderapi.THOST_FTDC_BFC_QueryFundChange
r"""出入金查询"""
THOST_FTDC_BFC_QueryInvestor = _soptthosttraderapi.THOST_FTDC_BFC_QueryInvestor
r"""投资者信息查询"""
THOST_FTDC_BFC_QueryTradingCode = _soptthosttraderapi.THOST_FTDC_BFC_QueryTradingCode
r"""交易编码查询"""
THOST_FTDC_BFC_ForceClose = _soptthosttraderapi.THOST_FTDC_BFC_ForceClose
r"""强平"""
THOST_FTDC_BFC_PressTest = _soptthosttraderapi.THOST_FTDC_BFC_PressTest
r"""压力测试"""
THOST_FTDC_BFC_RemainCalc = _soptthosttraderapi.THOST_FTDC_BFC_RemainCalc
r"""权益反算"""
THOST_FTDC_BFC_NetPositionInd = _soptthosttraderapi.THOST_FTDC_BFC_NetPositionInd
r"""净持仓保证金指标"""
THOST_FTDC_BFC_RiskPredict = _soptthosttraderapi.THOST_FTDC_BFC_RiskPredict
r"""风险预算"""
THOST_FTDC_BFC_DataExport = _soptthosttraderapi.THOST_FTDC_BFC_DataExport
r"""数据导出"""
THOST_FTDC_BFC_RiskTargetSetup = _soptthosttraderapi.THOST_FTDC_BFC_RiskTargetSetup
r"""风控指标设置"""
THOST_FTDC_BFC_MarketDataWarn = _soptthosttraderapi.THOST_FTDC_BFC_MarketDataWarn
r"""行情预警"""
THOST_FTDC_BFC_QryBizNotice = _soptthosttraderapi.THOST_FTDC_BFC_QryBizNotice
r"""业务通知查询"""
THOST_FTDC_BFC_CfgBizNotice = _soptthosttraderapi.THOST_FTDC_BFC_CfgBizNotice
r"""业务通知模板设置"""
THOST_FTDC_BFC_SyncOTP = _soptthosttraderapi.THOST_FTDC_BFC_SyncOTP
r"""同步动态令牌"""
THOST_FTDC_BFC_SendBizNotice = _soptthosttraderapi.THOST_FTDC_BFC_SendBizNotice
r"""发送业务通知"""
THOST_FTDC_BFC_CfgRiskLevelStd = _soptthosttraderapi.THOST_FTDC_BFC_CfgRiskLevelStd
r"""风险级别标准设置"""
THOST_FTDC_BFC_TbCommand = _soptthosttraderapi.THOST_FTDC_BFC_TbCommand
r"""交易终端应急功能"""
THOST_FTDC_BFC_DeleteOrder = _soptthosttraderapi.THOST_FTDC_BFC_DeleteOrder
r"""删除未知单"""
THOST_FTDC_BFC_ParkedOrderInsert = _soptthosttraderapi.THOST_FTDC_BFC_ParkedOrderInsert
r"""预埋报单插入"""
THOST_FTDC_BFC_ParkedOrderAction = _soptthosttraderapi.THOST_FTDC_BFC_ParkedOrderAction
r"""预埋报单操作"""
THOST_FTDC_BFC_ExecOrderNoCheck = _soptthosttraderapi.THOST_FTDC_BFC_ExecOrderNoCheck
r"""资金不够仍允许行权"""
THOST_FTDC_BFC_Designate = _soptthosttraderapi.THOST_FTDC_BFC_Designate
r"""指定"""
THOST_FTDC_BFC_StockDisposal = _soptthosttraderapi.THOST_FTDC_BFC_StockDisposal
r"""证券处置"""
THOST_FTDC_BFC_BrokerDepositWarn = _soptthosttraderapi.THOST_FTDC_BFC_BrokerDepositWarn
r"""席位资金预警"""
THOST_FTDC_BFC_CoverWarn = _soptthosttraderapi.THOST_FTDC_BFC_CoverWarn
r"""备兑不足预警"""
THOST_FTDC_BFC_PreExecOrder = _soptthosttraderapi.THOST_FTDC_BFC_PreExecOrder
r"""行权试算"""
THOST_FTDC_BFC_ExecOrderRisk = _soptthosttraderapi.THOST_FTDC_BFC_ExecOrderRisk
r"""行权交收风险"""
THOST_FTDC_BFC_PosiLimitWarn = _soptthosttraderapi.THOST_FTDC_BFC_PosiLimitWarn
r"""持仓限额预警"""
THOST_FTDC_BFC_QryPosiLimit = _soptthosttraderapi.THOST_FTDC_BFC_QryPosiLimit
r"""持仓限额查询"""
THOST_FTDC_BFC_FBSign = _soptthosttraderapi.THOST_FTDC_BFC_FBSign
r"""银期签到签退"""
THOST_FTDC_BFC_FBAccount = _soptthosttraderapi.THOST_FTDC_BFC_FBAccount
r"""银期签约解约"""
THOST_FTDC_BFC_QryCoverLack = _soptthosttraderapi.THOST_FTDC_BFC_QryCoverLack
r"""备兑不足强平查询"""
THOST_FTDC_BFC_UnCombTest = _soptthosttraderapi.THOST_FTDC_BFC_UnCombTest
r"""拆分试算"""
THOST_FTDC_BFC_InternalTransfer = _soptthosttraderapi.THOST_FTDC_BFC_InternalTransfer
r"""资金内转"""
THOST_FTDC_OAS_Submitted = _soptthosttraderapi.THOST_FTDC_OAS_Submitted
r"""
    TFtdcOrderActionStatusType是一个报单操作状态类型
    已经提交
    """
THOST_FTDC_OAS_Accepted = _soptthosttraderapi.THOST_FTDC_OAS_Accepted
r"""已经接受"""
THOST_FTDC_OAS_Rejected = _soptthosttraderapi.THOST_FTDC_OAS_Rejected
r"""已经被拒绝"""
THOST_FTDC_OST_AllTraded = _soptthosttraderapi.THOST_FTDC_OST_AllTraded
r"""
    TFtdcOrderStatusType是一个报单状态类型
    全部成交
    """
THOST_FTDC_OST_PartTradedQueueing = _soptthosttraderapi.THOST_FTDC_OST_PartTradedQueueing
r"""部分成交还在队列中"""
THOST_FTDC_OST_PartTradedNotQueueing = _soptthosttraderapi.THOST_FTDC_OST_PartTradedNotQueueing
r"""部分成交不在队列中"""
THOST_FTDC_OST_NoTradeQueueing = _soptthosttraderapi.THOST_FTDC_OST_NoTradeQueueing
r"""未成交还在队列中"""
THOST_FTDC_OST_NoTradeNotQueueing = _soptthosttraderapi.THOST_FTDC_OST_NoTradeNotQueueing
r"""未成交不在队列中"""
THOST_FTDC_OST_Canceled = _soptthosttraderapi.THOST_FTDC_OST_Canceled
r"""撤单"""
THOST_FTDC_OST_Unknown = _soptthosttraderapi.THOST_FTDC_OST_Unknown
r"""未知"""
THOST_FTDC_OST_NotTouched = _soptthosttraderapi.THOST_FTDC_OST_NotTouched
r"""尚未触发"""
THOST_FTDC_OST_Touched = _soptthosttraderapi.THOST_FTDC_OST_Touched
r"""已触发"""
THOST_FTDC_OSS_InsertSubmitted = _soptthosttraderapi.THOST_FTDC_OSS_InsertSubmitted
r"""
    TFtdcOrderSubmitStatusType是一个报单提交状态类型
    已经提交
    """
THOST_FTDC_OSS_CancelSubmitted = _soptthosttraderapi.THOST_FTDC_OSS_CancelSubmitted
r"""撤单已经提交"""
THOST_FTDC_OSS_ModifySubmitted = _soptthosttraderapi.THOST_FTDC_OSS_ModifySubmitted
r"""修改已经提交"""
THOST_FTDC_OSS_Accepted = _soptthosttraderapi.THOST_FTDC_OSS_Accepted
r"""已经接受"""
THOST_FTDC_OSS_InsertRejected = _soptthosttraderapi.THOST_FTDC_OSS_InsertRejected
r"""报单已经被拒绝"""
THOST_FTDC_OSS_CancelRejected = _soptthosttraderapi.THOST_FTDC_OSS_CancelRejected
r"""撤单已经被拒绝"""
THOST_FTDC_OSS_ModifyRejected = _soptthosttraderapi.THOST_FTDC_OSS_ModifyRejected
r"""改单已经被拒绝"""
THOST_FTDC_PSD_Today = _soptthosttraderapi.THOST_FTDC_PSD_Today
r"""
    TFtdcPositionDateType是一个持仓日期类型
    今日持仓
    """
THOST_FTDC_PSD_History = _soptthosttraderapi.THOST_FTDC_PSD_History
r"""历史持仓"""
THOST_FTDC_PDT_UseHistory = _soptthosttraderapi.THOST_FTDC_PDT_UseHistory
r"""
    TFtdcPositionDateTypeType是一个持仓日期类型类型
    使用历史持仓
    """
THOST_FTDC_PDT_NoUseHistory = _soptthosttraderapi.THOST_FTDC_PDT_NoUseHistory
r"""不使用历史持仓"""
THOST_FTDC_ER_Broker = _soptthosttraderapi.THOST_FTDC_ER_Broker
r"""
    TFtdcTradingRoleType是一个交易角色类型
    代理
    """
THOST_FTDC_ER_Host = _soptthosttraderapi.THOST_FTDC_ER_Host
r"""自营"""
THOST_FTDC_ER_Maker = _soptthosttraderapi.THOST_FTDC_ER_Maker
r"""做市商"""
THOST_FTDC_PC_Futures = _soptthosttraderapi.THOST_FTDC_PC_Futures
r"""
    TFtdcProductClassType是一个产品类型类型
    期货
    """
THOST_FTDC_PC_Options = _soptthosttraderapi.THOST_FTDC_PC_Options
r"""期货期权"""
THOST_FTDC_PC_Combination = _soptthosttraderapi.THOST_FTDC_PC_Combination
r"""组合"""
THOST_FTDC_PC_Spot = _soptthosttraderapi.THOST_FTDC_PC_Spot
r"""即期"""
THOST_FTDC_PC_EFP = _soptthosttraderapi.THOST_FTDC_PC_EFP
r"""期转现"""
THOST_FTDC_PC_SpotOption = _soptthosttraderapi.THOST_FTDC_PC_SpotOption
r"""现货期权"""
THOST_FTDC_PC_ETFOption = _soptthosttraderapi.THOST_FTDC_PC_ETFOption
r"""个股期权"""
THOST_FTDC_PC_Stock = _soptthosttraderapi.THOST_FTDC_PC_Stock
r"""证券"""
THOST_FTDC_IP_NotStart = _soptthosttraderapi.THOST_FTDC_IP_NotStart
r"""
    TFtdcInstLifePhaseType是一个合约生命周期状态类型
    未上市
    """
THOST_FTDC_IP_Started = _soptthosttraderapi.THOST_FTDC_IP_Started
r"""上市"""
THOST_FTDC_IP_Pause = _soptthosttraderapi.THOST_FTDC_IP_Pause
r"""停牌"""
THOST_FTDC_IP_Expired = _soptthosttraderapi.THOST_FTDC_IP_Expired
r"""到期"""
THOST_FTDC_D_Buy = _soptthosttraderapi.THOST_FTDC_D_Buy
r"""
    TFtdcDirectionType是一个买卖方向类型
    买
    """
THOST_FTDC_D_Sell = _soptthosttraderapi.THOST_FTDC_D_Sell
r"""卖"""
THOST_FTDC_PT_Net = _soptthosttraderapi.THOST_FTDC_PT_Net
r"""
    TFtdcPositionTypeType是一个持仓类型类型
    净持仓
    """
THOST_FTDC_PT_Gross = _soptthosttraderapi.THOST_FTDC_PT_Gross
r"""综合持仓"""
THOST_FTDC_PD_Net = _soptthosttraderapi.THOST_FTDC_PD_Net
r"""
    TFtdcPosiDirectionType是一个持仓多空方向类型
    净
    """
THOST_FTDC_PD_Long = _soptthosttraderapi.THOST_FTDC_PD_Long
r"""多头"""
THOST_FTDC_PD_Short = _soptthosttraderapi.THOST_FTDC_PD_Short
r"""空头"""
THOST_FTDC_SS_NonActive = _soptthosttraderapi.THOST_FTDC_SS_NonActive
r"""
    TFtdcSysSettlementStatusType是一个系统结算状态类型
    不活跃
    """
THOST_FTDC_SS_Startup = _soptthosttraderapi.THOST_FTDC_SS_Startup
r"""启动"""
THOST_FTDC_SS_Operating = _soptthosttraderapi.THOST_FTDC_SS_Operating
r"""操作"""
THOST_FTDC_SS_Settlement = _soptthosttraderapi.THOST_FTDC_SS_Settlement
r"""结算"""
THOST_FTDC_SS_SettlementFinished = _soptthosttraderapi.THOST_FTDC_SS_SettlementFinished
r"""结算完成"""
THOST_FTDC_RA_Trade = _soptthosttraderapi.THOST_FTDC_RA_Trade
r"""
    TFtdcRatioAttrType是一个费率属性类型
    交易费率
    """
THOST_FTDC_RA_Settlement = _soptthosttraderapi.THOST_FTDC_RA_Settlement
r"""结算费率"""
THOST_FTDC_HF_Speculation = _soptthosttraderapi.THOST_FTDC_HF_Speculation
r"""
    TFtdcHedgeFlagType是一个投机套保标志类型
    投机
    """
THOST_FTDC_HF_Arbitrage = _soptthosttraderapi.THOST_FTDC_HF_Arbitrage
r"""套利"""
THOST_FTDC_HF_Hedge = _soptthosttraderapi.THOST_FTDC_HF_Hedge
r"""套保"""
THOST_FTDC_HF_Covered = _soptthosttraderapi.THOST_FTDC_HF_Covered
r"""备兑"""
THOST_FTDC_HF_MarketMaker = _soptthosttraderapi.THOST_FTDC_HF_MarketMaker
r"""做市商"""
THOST_FTDC_BHF_Speculation = _soptthosttraderapi.THOST_FTDC_BHF_Speculation
r"""
    TFtdcBillHedgeFlagType是一个投机套保标志类型
    投机
    """
THOST_FTDC_BHF_Arbitrage = _soptthosttraderapi.THOST_FTDC_BHF_Arbitrage
r"""套利"""
THOST_FTDC_BHF_Hedge = _soptthosttraderapi.THOST_FTDC_BHF_Hedge
r"""套保"""
THOST_FTDC_CIDT_Speculation = _soptthosttraderapi.THOST_FTDC_CIDT_Speculation
r"""
    TFtdcClientIDTypeType是一个交易编码类型类型
    投机
    """
THOST_FTDC_CIDT_Arbitrage = _soptthosttraderapi.THOST_FTDC_CIDT_Arbitrage
r"""套利"""
THOST_FTDC_CIDT_Hedge = _soptthosttraderapi.THOST_FTDC_CIDT_Hedge
r"""套保"""
THOST_FTDC_CIDT_MarketMaker = _soptthosttraderapi.THOST_FTDC_CIDT_MarketMaker
r"""做市商"""
THOST_FTDC_OPT_AnyPrice = _soptthosttraderapi.THOST_FTDC_OPT_AnyPrice
r"""
    TFtdcOrderPriceTypeType是一个报单价格条件类型
    任意价
    """
THOST_FTDC_OPT_LimitPrice = _soptthosttraderapi.THOST_FTDC_OPT_LimitPrice
r"""限价"""
THOST_FTDC_OPT_BestPrice = _soptthosttraderapi.THOST_FTDC_OPT_BestPrice
r"""最优价"""
THOST_FTDC_OPT_LastPrice = _soptthosttraderapi.THOST_FTDC_OPT_LastPrice
r"""最新价"""
THOST_FTDC_OPT_LastPricePlusOneTicks = _soptthosttraderapi.THOST_FTDC_OPT_LastPricePlusOneTicks
r"""最新价浮动上浮1个ticks"""
THOST_FTDC_OPT_LastPricePlusTwoTicks = _soptthosttraderapi.THOST_FTDC_OPT_LastPricePlusTwoTicks
r"""最新价浮动上浮2个ticks"""
THOST_FTDC_OPT_LastPricePlusThreeTicks = _soptthosttraderapi.THOST_FTDC_OPT_LastPricePlusThreeTicks
r"""最新价浮动上浮3个ticks"""
THOST_FTDC_OPT_AskPrice1 = _soptthosttraderapi.THOST_FTDC_OPT_AskPrice1
r"""卖一价"""
THOST_FTDC_OPT_AskPrice1PlusOneTicks = _soptthosttraderapi.THOST_FTDC_OPT_AskPrice1PlusOneTicks
r"""卖一价浮动上浮1个ticks"""
THOST_FTDC_OPT_AskPrice1PlusTwoTicks = _soptthosttraderapi.THOST_FTDC_OPT_AskPrice1PlusTwoTicks
r"""卖一价浮动上浮2个ticks"""
THOST_FTDC_OPT_AskPrice1PlusThreeTicks = _soptthosttraderapi.THOST_FTDC_OPT_AskPrice1PlusThreeTicks
r"""卖一价浮动上浮3个ticks"""
THOST_FTDC_OPT_BidPrice1 = _soptthosttraderapi.THOST_FTDC_OPT_BidPrice1
r"""买一价"""
THOST_FTDC_OPT_BidPrice1PlusOneTicks = _soptthosttraderapi.THOST_FTDC_OPT_BidPrice1PlusOneTicks
r"""买一价浮动上浮1个ticks"""
THOST_FTDC_OPT_BidPrice1PlusTwoTicks = _soptthosttraderapi.THOST_FTDC_OPT_BidPrice1PlusTwoTicks
r"""买一价浮动上浮2个ticks"""
THOST_FTDC_OPT_BidPrice1PlusThreeTicks = _soptthosttraderapi.THOST_FTDC_OPT_BidPrice1PlusThreeTicks
r"""买一价浮动上浮3个ticks"""
THOST_FTDC_OPT_FiveLevelPrice = _soptthosttraderapi.THOST_FTDC_OPT_FiveLevelPrice
r"""五档价"""
THOST_FTDC_OPT_BestPriceThisSide = _soptthosttraderapi.THOST_FTDC_OPT_BestPriceThisSide
r"""本方最优价"""
THOST_FTDC_OF_Open = _soptthosttraderapi.THOST_FTDC_OF_Open
r"""
    TFtdcOffsetFlagType是一个开平标志类型
    开仓
    """
THOST_FTDC_OF_Close = _soptthosttraderapi.THOST_FTDC_OF_Close
r"""平仓"""
THOST_FTDC_OF_ForceClose = _soptthosttraderapi.THOST_FTDC_OF_ForceClose
r"""强平"""
THOST_FTDC_OF_CloseToday = _soptthosttraderapi.THOST_FTDC_OF_CloseToday
r"""平今"""
THOST_FTDC_OF_CloseYesterday = _soptthosttraderapi.THOST_FTDC_OF_CloseYesterday
r"""平昨"""
THOST_FTDC_OF_ForceOff = _soptthosttraderapi.THOST_FTDC_OF_ForceOff
r"""强减"""
THOST_FTDC_OF_LocalForceClose = _soptthosttraderapi.THOST_FTDC_OF_LocalForceClose
r"""本地强平"""
THOST_FTDC_FCC_NotForceClose = _soptthosttraderapi.THOST_FTDC_FCC_NotForceClose
r"""
    TFtdcForceCloseReasonType是一个强平原因类型
    非强平
    """
THOST_FTDC_FCC_LackDeposit = _soptthosttraderapi.THOST_FTDC_FCC_LackDeposit
r"""资金不足"""
THOST_FTDC_FCC_ClientOverPositionLimit = _soptthosttraderapi.THOST_FTDC_FCC_ClientOverPositionLimit
r"""客户超仓"""
THOST_FTDC_FCC_MemberOverPositionLimit = _soptthosttraderapi.THOST_FTDC_FCC_MemberOverPositionLimit
r"""会员超仓"""
THOST_FTDC_FCC_NotMultiple = _soptthosttraderapi.THOST_FTDC_FCC_NotMultiple
r"""持仓非整数倍"""
THOST_FTDC_FCC_Violation = _soptthosttraderapi.THOST_FTDC_FCC_Violation
r"""违规"""
THOST_FTDC_FCC_Other = _soptthosttraderapi.THOST_FTDC_FCC_Other
r"""其它"""
THOST_FTDC_FCC_PersonDeliv = _soptthosttraderapi.THOST_FTDC_FCC_PersonDeliv
r"""自然人临近交割"""
THOST_FTDC_ORDT_Normal = _soptthosttraderapi.THOST_FTDC_ORDT_Normal
r"""
    TFtdcOrderTypeType是一个报单类型类型
    正常
    """
THOST_FTDC_ORDT_DeriveFromQuote = _soptthosttraderapi.THOST_FTDC_ORDT_DeriveFromQuote
r"""报价衍生"""
THOST_FTDC_ORDT_DeriveFromCombination = _soptthosttraderapi.THOST_FTDC_ORDT_DeriveFromCombination
r"""组合衍生"""
THOST_FTDC_ORDT_Combination = _soptthosttraderapi.THOST_FTDC_ORDT_Combination
r"""组合报单"""
THOST_FTDC_ORDT_ConditionalOrder = _soptthosttraderapi.THOST_FTDC_ORDT_ConditionalOrder
r"""条件单"""
THOST_FTDC_ORDT_Swap = _soptthosttraderapi.THOST_FTDC_ORDT_Swap
r"""互换单"""
THOST_FTDC_IPT_Unknown = _soptthosttraderapi.THOST_FTDC_IPT_Unknown
r"""
    TFtdcInvestorProgrammingTypeType是一个投资者程序化标识类型
    未知
    """
THOST_FTDC_IPT_NotProgramming = _soptthosttraderapi.THOST_FTDC_IPT_NotProgramming
r"""非程序化"""
THOST_FTDC_IPT_Programming = _soptthosttraderapi.THOST_FTDC_IPT_Programming
r"""程序化"""
THOST_FTDC_TC_IOC = _soptthosttraderapi.THOST_FTDC_TC_IOC
r"""
    TFtdcTimeConditionType是一个有效期类型类型
    立即完成，否则撤销
    """
THOST_FTDC_TC_GFS = _soptthosttraderapi.THOST_FTDC_TC_GFS
r"""本节有效"""
THOST_FTDC_TC_GFD = _soptthosttraderapi.THOST_FTDC_TC_GFD
r"""当日有效"""
THOST_FTDC_TC_GTD = _soptthosttraderapi.THOST_FTDC_TC_GTD
r"""指定日期前有效"""
THOST_FTDC_TC_GTC = _soptthosttraderapi.THOST_FTDC_TC_GTC
r"""撤销前有效"""
THOST_FTDC_TC_GFA = _soptthosttraderapi.THOST_FTDC_TC_GFA
r"""集合竞价有效"""
THOST_FTDC_VC_AV = _soptthosttraderapi.THOST_FTDC_VC_AV
r"""
    TFtdcVolumeConditionType是一个成交量类型类型
    任何数量
    """
THOST_FTDC_VC_MV = _soptthosttraderapi.THOST_FTDC_VC_MV
r"""最小数量"""
THOST_FTDC_VC_CV = _soptthosttraderapi.THOST_FTDC_VC_CV
r"""全部数量"""
THOST_FTDC_CC_Immediately = _soptthosttraderapi.THOST_FTDC_CC_Immediately
r"""
    TFtdcContingentConditionType是一个触发条件类型
    立即
    """
THOST_FTDC_CC_Touch = _soptthosttraderapi.THOST_FTDC_CC_Touch
r"""止损"""
THOST_FTDC_CC_TouchProfit = _soptthosttraderapi.THOST_FTDC_CC_TouchProfit
r"""止赢"""
THOST_FTDC_CC_ParkedOrder = _soptthosttraderapi.THOST_FTDC_CC_ParkedOrder
r"""预埋单"""
THOST_FTDC_CC_LastPriceGreaterThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_LastPriceGreaterThanStopPrice
r"""最新价大于条件价"""
THOST_FTDC_CC_LastPriceGreaterEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_LastPriceGreaterEqualStopPrice
r"""最新价大于等于条件价"""
THOST_FTDC_CC_LastPriceLesserThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_LastPriceLesserThanStopPrice
r"""最新价小于条件价"""
THOST_FTDC_CC_LastPriceLesserEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_LastPriceLesserEqualStopPrice
r"""最新价小于等于条件价"""
THOST_FTDC_CC_AskPriceGreaterThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_AskPriceGreaterThanStopPrice
r"""卖一价大于条件价"""
THOST_FTDC_CC_AskPriceGreaterEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_AskPriceGreaterEqualStopPrice
r"""卖一价大于等于条件价"""
THOST_FTDC_CC_AskPriceLesserThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_AskPriceLesserThanStopPrice
r"""卖一价小于条件价"""
THOST_FTDC_CC_AskPriceLesserEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_AskPriceLesserEqualStopPrice
r"""卖一价小于等于条件价"""
THOST_FTDC_CC_BidPriceGreaterThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_BidPriceGreaterThanStopPrice
r"""买一价大于条件价"""
THOST_FTDC_CC_BidPriceGreaterEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_BidPriceGreaterEqualStopPrice
r"""买一价大于等于条件价"""
THOST_FTDC_CC_BidPriceLesserThanStopPrice = _soptthosttraderapi.THOST_FTDC_CC_BidPriceLesserThanStopPrice
r"""买一价小于条件价"""
THOST_FTDC_CC_BidPriceLesserEqualStopPrice = _soptthosttraderapi.THOST_FTDC_CC_BidPriceLesserEqualStopPrice
r"""买一价小于等于条件价"""
THOST_FTDC_AF_Delete = _soptthosttraderapi.THOST_FTDC_AF_Delete
r"""
    TFtdcActionFlagType是一个操作标志类型
    删除
    """
THOST_FTDC_AF_Modify = _soptthosttraderapi.THOST_FTDC_AF_Modify
r"""修改"""
THOST_FTDC_TR_Allow = _soptthosttraderapi.THOST_FTDC_TR_Allow
r"""
    TFtdcTradingRightType是一个交易权限类型
    可以交易
    """
THOST_FTDC_TR_CloseOnly = _soptthosttraderapi.THOST_FTDC_TR_CloseOnly
r"""只能平仓"""
THOST_FTDC_TR_Forbidden = _soptthosttraderapi.THOST_FTDC_TR_Forbidden
r"""不能交易"""
THOST_FTDC_OSRC_Participant = _soptthosttraderapi.THOST_FTDC_OSRC_Participant
r"""
    TFtdcOrderSourceType是一个报单来源类型
    来自参与者
    """
THOST_FTDC_OSRC_Administrator = _soptthosttraderapi.THOST_FTDC_OSRC_Administrator
r"""来自管理员"""
THOST_FTDC_TRDT_SplitCombination = _soptthosttraderapi.THOST_FTDC_TRDT_SplitCombination
r"""
    TFtdcTradeTypeType是一个成交类型类型
    组合持仓拆分为单一持仓,初始化不应包含该类型的持仓
    """
THOST_FTDC_TRDT_Common = _soptthosttraderapi.THOST_FTDC_TRDT_Common
r"""普通成交"""
THOST_FTDC_TRDT_OptionsExecution = _soptthosttraderapi.THOST_FTDC_TRDT_OptionsExecution
r"""期权执行"""
THOST_FTDC_TRDT_OTC = _soptthosttraderapi.THOST_FTDC_TRDT_OTC
r"""OTC成交"""
THOST_FTDC_TRDT_EFPDerived = _soptthosttraderapi.THOST_FTDC_TRDT_EFPDerived
r"""期转现衍生成交"""
THOST_FTDC_TRDT_CombinationDerived = _soptthosttraderapi.THOST_FTDC_TRDT_CombinationDerived
r"""组合衍生成交"""
THOST_FTDC_PSRC_LastPrice = _soptthosttraderapi.THOST_FTDC_PSRC_LastPrice
r"""
    TFtdcPriceSourceType是一个成交价来源类型
    前成交价
    """
THOST_FTDC_PSRC_Buy = _soptthosttraderapi.THOST_FTDC_PSRC_Buy
r"""买委托价"""
THOST_FTDC_PSRC_Sell = _soptthosttraderapi.THOST_FTDC_PSRC_Sell
r"""卖委托价"""
THOST_FTDC_IS_BeforeTrading = _soptthosttraderapi.THOST_FTDC_IS_BeforeTrading
r"""
    TFtdcInstrumentStatusType是一个合约交易状态类型
    开盘前
    """
THOST_FTDC_IS_NoTrading = _soptthosttraderapi.THOST_FTDC_IS_NoTrading
r"""非交易"""
THOST_FTDC_IS_Continous = _soptthosttraderapi.THOST_FTDC_IS_Continous
r"""连续交易"""
THOST_FTDC_IS_AuctionOrdering = _soptthosttraderapi.THOST_FTDC_IS_AuctionOrdering
r"""集合竞价报单"""
THOST_FTDC_IS_AuctionBalance = _soptthosttraderapi.THOST_FTDC_IS_AuctionBalance
r"""集合竞价价格平衡"""
THOST_FTDC_IS_AuctionMatch = _soptthosttraderapi.THOST_FTDC_IS_AuctionMatch
r"""集合竞价撮合"""
THOST_FTDC_IS_Closed = _soptthosttraderapi.THOST_FTDC_IS_Closed
r"""收盘"""
THOST_FTDC_IS_Auction = _soptthosttraderapi.THOST_FTDC_IS_Auction
r"""集合竞价"""
THOST_FTDC_IS_BusinessSuspension = _soptthosttraderapi.THOST_FTDC_IS_BusinessSuspension
r"""休市"""
THOST_FTDC_IS_VolatilityInterrupt = _soptthosttraderapi.THOST_FTDC_IS_VolatilityInterrupt
r"""波动性中断"""
THOST_FTDC_IS_TemporarySuspension = _soptthosttraderapi.THOST_FTDC_IS_TemporarySuspension
r"""临时停牌"""
THOST_FTDC_IS_AuctionAfterClosed = _soptthosttraderapi.THOST_FTDC_IS_AuctionAfterClosed
r"""收盘集合竞价"""
THOST_FTDC_IS_ResumableFusing = _soptthosttraderapi.THOST_FTDC_IS_ResumableFusing
r"""可恢复交易的熔断"""
THOST_FTDC_IS_UnResumableFusing = _soptthosttraderapi.THOST_FTDC_IS_UnResumableFusing
r"""不可恢复交易的熔断"""
THOST_FTDC_IS_TradingAfterClosed = _soptthosttraderapi.THOST_FTDC_IS_TradingAfterClosed
r"""盘后交易"""
THOST_FTDC_IER_Automatic = _soptthosttraderapi.THOST_FTDC_IER_Automatic
r"""
    TFtdcInstStatusEnterReasonType是一个品种进入交易状态原因类型
    自动切换
    """
THOST_FTDC_IER_Manual = _soptthosttraderapi.THOST_FTDC_IER_Manual
r"""手动切换"""
THOST_FTDC_IER_Fuse = _soptthosttraderapi.THOST_FTDC_IER_Fuse
r"""熔断"""
THOST_FTDC_BS_NoUpload = _soptthosttraderapi.THOST_FTDC_BS_NoUpload
r"""
    TFtdcBatchStatusType是一个处理状态类型
    未上传
    """
THOST_FTDC_BS_Uploaded = _soptthosttraderapi.THOST_FTDC_BS_Uploaded
r"""已上传"""
THOST_FTDC_BS_Failed = _soptthosttraderapi.THOST_FTDC_BS_Failed
r"""审核失败"""
THOST_FTDC_RS_All = _soptthosttraderapi.THOST_FTDC_RS_All
r"""
    TFtdcReturnStyleType是一个按品种返还方式类型
    按所有品种
    """
THOST_FTDC_RS_ByProduct = _soptthosttraderapi.THOST_FTDC_RS_ByProduct
r"""按品种"""
THOST_FTDC_RP_ByVolume = _soptthosttraderapi.THOST_FTDC_RP_ByVolume
r"""
    TFtdcReturnPatternType是一个返还模式类型
    按成交手数
    """
THOST_FTDC_RP_ByFeeOnHand = _soptthosttraderapi.THOST_FTDC_RP_ByFeeOnHand
r"""按留存手续费"""
THOST_FTDC_RL_Level1 = _soptthosttraderapi.THOST_FTDC_RL_Level1
r"""
    TFtdcReturnLevelType是一个返还级别类型
    级别1
    """
THOST_FTDC_RL_Level2 = _soptthosttraderapi.THOST_FTDC_RL_Level2
r"""级别2"""
THOST_FTDC_RL_Level3 = _soptthosttraderapi.THOST_FTDC_RL_Level3
r"""级别3"""
THOST_FTDC_RL_Level4 = _soptthosttraderapi.THOST_FTDC_RL_Level4
r"""级别4"""
THOST_FTDC_RL_Level5 = _soptthosttraderapi.THOST_FTDC_RL_Level5
r"""级别5"""
THOST_FTDC_RL_Level6 = _soptthosttraderapi.THOST_FTDC_RL_Level6
r"""级别6"""
THOST_FTDC_RL_Level7 = _soptthosttraderapi.THOST_FTDC_RL_Level7
r"""级别7"""
THOST_FTDC_RL_Level8 = _soptthosttraderapi.THOST_FTDC_RL_Level8
r"""级别8"""
THOST_FTDC_RL_Level9 = _soptthosttraderapi.THOST_FTDC_RL_Level9
r"""级别9"""
THOST_FTDC_RSD_ByPeriod = _soptthosttraderapi.THOST_FTDC_RSD_ByPeriod
r"""
    TFtdcReturnStandardType是一个返还标准类型
    分阶段返还
    """
THOST_FTDC_RSD_ByStandard = _soptthosttraderapi.THOST_FTDC_RSD_ByStandard
r"""按某一标准"""
THOST_FTDC_MT_Out = _soptthosttraderapi.THOST_FTDC_MT_Out
r"""
    TFtdcMortgageTypeType是一个质押类型类型
    质出
    """
THOST_FTDC_MT_In = _soptthosttraderapi.THOST_FTDC_MT_In
r"""质入"""
THOST_FTDC_ISPI_MortgageRatio = _soptthosttraderapi.THOST_FTDC_ISPI_MortgageRatio
r"""
    TFtdcInvestorSettlementParamIDType是一个投资者结算参数代码类型
    质押比例
    """
THOST_FTDC_ISPI_MarginWay = _soptthosttraderapi.THOST_FTDC_ISPI_MarginWay
r"""保证金算法"""
THOST_FTDC_ISPI_BillDeposit = _soptthosttraderapi.THOST_FTDC_ISPI_BillDeposit
r"""结算单结存是否包含质押"""
THOST_FTDC_ESPI_MortgageRatio = _soptthosttraderapi.THOST_FTDC_ESPI_MortgageRatio
r"""
    TFtdcExchangeSettlementParamIDType是一个交易所结算参数代码类型
    质押比例
    """
THOST_FTDC_ESPI_OtherFundItem = _soptthosttraderapi.THOST_FTDC_ESPI_OtherFundItem
r"""分项资金导入项"""
THOST_FTDC_ESPI_OtherFundImport = _soptthosttraderapi.THOST_FTDC_ESPI_OtherFundImport
r"""分项资金入交易所出入金"""
THOST_FTDC_ESPI_CFFEXMinPrepa = _soptthosttraderapi.THOST_FTDC_ESPI_CFFEXMinPrepa
r"""中金所开户最低可用金额"""
THOST_FTDC_ESPI_CZCESettlementType = _soptthosttraderapi.THOST_FTDC_ESPI_CZCESettlementType
r"""郑商所结算方式"""
THOST_FTDC_ESPI_ExchDelivFeeMode = _soptthosttraderapi.THOST_FTDC_ESPI_ExchDelivFeeMode
r"""交易所交割手续费收取方式"""
THOST_FTDC_ESPI_DelivFeeMode = _soptthosttraderapi.THOST_FTDC_ESPI_DelivFeeMode
r"""投资者交割手续费收取方式"""
THOST_FTDC_ESPI_CZCEComMarginType = _soptthosttraderapi.THOST_FTDC_ESPI_CZCEComMarginType
r"""郑商所组合持仓保证金收取方式"""
THOST_FTDC_ESPI_DceComMarginType = _soptthosttraderapi.THOST_FTDC_ESPI_DceComMarginType
r"""大商所套利保证金是否优惠"""
THOST_FTDC_ESPI_OptOutDisCountRate = _soptthosttraderapi.THOST_FTDC_ESPI_OptOutDisCountRate
r"""虚值期权保证金优惠比率"""
THOST_FTDC_ESPI_OptMiniGuarantee = _soptthosttraderapi.THOST_FTDC_ESPI_OptMiniGuarantee
r"""最低保障系数"""
THOST_FTDC_SPI_InvestorIDMinLength = _soptthosttraderapi.THOST_FTDC_SPI_InvestorIDMinLength
r"""
    TFtdcSystemParamIDType是一个系统参数代码类型
    投资者代码最小长度
    """
THOST_FTDC_SPI_AccountIDMinLength = _soptthosttraderapi.THOST_FTDC_SPI_AccountIDMinLength
r"""投资者帐号代码最小长度"""
THOST_FTDC_SPI_UserRightLogon = _soptthosttraderapi.THOST_FTDC_SPI_UserRightLogon
r"""投资者开户默认登录权限"""
THOST_FTDC_SPI_SettlementBillTrade = _soptthosttraderapi.THOST_FTDC_SPI_SettlementBillTrade
r"""投资者交易结算单成交汇总方式"""
THOST_FTDC_SPI_TradingCode = _soptthosttraderapi.THOST_FTDC_SPI_TradingCode
r"""统一开户更新交易编码方式"""
THOST_FTDC_SPI_CheckFund = _soptthosttraderapi.THOST_FTDC_SPI_CheckFund
r"""结算是否判断存在未复核的出入金和分项资金"""
THOST_FTDC_SPI_CommModelRight = _soptthosttraderapi.THOST_FTDC_SPI_CommModelRight
r"""是否启用手续费模板数据权限"""
THOST_FTDC_SPI_MarginModelRight = _soptthosttraderapi.THOST_FTDC_SPI_MarginModelRight
r"""是否启用保证金率模板数据权限"""
THOST_FTDC_SPI_IsStandardActive = _soptthosttraderapi.THOST_FTDC_SPI_IsStandardActive
r"""是否规范用户才能激活"""
THOST_FTDC_SPI_UploadSettlementFile = _soptthosttraderapi.THOST_FTDC_SPI_UploadSettlementFile
r"""上传的交易所结算文件路径"""
THOST_FTDC_SPI_DownloadCSRCFile = _soptthosttraderapi.THOST_FTDC_SPI_DownloadCSRCFile
r"""上报保证金监控中心文件路径"""
THOST_FTDC_SPI_SettlementBillFile = _soptthosttraderapi.THOST_FTDC_SPI_SettlementBillFile
r"""生成的结算单文件路径"""
THOST_FTDC_SPI_CSRCOthersFile = _soptthosttraderapi.THOST_FTDC_SPI_CSRCOthersFile
r"""证监会文件标识"""
THOST_FTDC_SPI_InvestorPhoto = _soptthosttraderapi.THOST_FTDC_SPI_InvestorPhoto
r"""投资者照片路径"""
THOST_FTDC_SPI_CSRCData = _soptthosttraderapi.THOST_FTDC_SPI_CSRCData
r"""全结经纪公司上传文件路径"""
THOST_FTDC_SPI_InvestorPwdModel = _soptthosttraderapi.THOST_FTDC_SPI_InvestorPwdModel
r"""开户密码录入方式"""
THOST_FTDC_SPI_CFFEXInvestorSettleFile = _soptthosttraderapi.THOST_FTDC_SPI_CFFEXInvestorSettleFile
r"""投资者中金所结算文件下载路径"""
THOST_FTDC_SPI_InvestorIDType = _soptthosttraderapi.THOST_FTDC_SPI_InvestorIDType
r"""投资者代码编码方式"""
THOST_FTDC_SPI_FreezeMaxReMain = _soptthosttraderapi.THOST_FTDC_SPI_FreezeMaxReMain
r"""休眠户最高权益"""
THOST_FTDC_SPI_IsSync = _soptthosttraderapi.THOST_FTDC_SPI_IsSync
r"""手续费相关操作实时上场开关"""
THOST_FTDC_SPI_RelieveOpenLimit = _soptthosttraderapi.THOST_FTDC_SPI_RelieveOpenLimit
r"""解除开仓权限限制"""
THOST_FTDC_SPI_IsStandardFreeze = _soptthosttraderapi.THOST_FTDC_SPI_IsStandardFreeze
r"""是否规范用户才能休眠"""
THOST_FTDC_SPI_CZCENormalProductHedge = _soptthosttraderapi.THOST_FTDC_SPI_CZCENormalProductHedge
r"""郑商所是否开放所有品种套保交易"""
THOST_FTDC_TPID_EncryptionStandard = _soptthosttraderapi.THOST_FTDC_TPID_EncryptionStandard
r"""
    TFtdcTradeParamIDType是一个交易系统参数代码类型
    系统加密算法
    """
THOST_FTDC_TPID_RiskMode = _soptthosttraderapi.THOST_FTDC_TPID_RiskMode
r"""系统风险算法"""
THOST_FTDC_TPID_RiskModeGlobal = _soptthosttraderapi.THOST_FTDC_TPID_RiskModeGlobal
r"""系统风险算法是否全局 0-否 1-是"""
THOST_FTDC_TPID_modeEncode = _soptthosttraderapi.THOST_FTDC_TPID_modeEncode
r"""密码加密算法"""
THOST_FTDC_TPID_tickMode = _soptthosttraderapi.THOST_FTDC_TPID_tickMode
r"""价格小数位数参数"""
THOST_FTDC_TPID_SingleUserSessionMaxNum = _soptthosttraderapi.THOST_FTDC_TPID_SingleUserSessionMaxNum
r"""用户最大会话数"""
THOST_FTDC_TPID_LoginFailMaxNum = _soptthosttraderapi.THOST_FTDC_TPID_LoginFailMaxNum
r"""最大连续登录失败数"""
THOST_FTDC_TPID_IsAuthForce = _soptthosttraderapi.THOST_FTDC_TPID_IsAuthForce
r"""是否强制认证"""
THOST_FTDC_TPID_IsPosiFreeze = _soptthosttraderapi.THOST_FTDC_TPID_IsPosiFreeze
r"""是否冻结证券持仓"""
THOST_FTDC_TPID_IsPosiLimit = _soptthosttraderapi.THOST_FTDC_TPID_IsPosiLimit
r"""是否限仓"""
THOST_FTDC_TPID_ForQuoteTimeInterval = _soptthosttraderapi.THOST_FTDC_TPID_ForQuoteTimeInterval
r"""郑商所询价时间间隔"""
THOST_FTDC_TPID_IsFuturePosiLimit = _soptthosttraderapi.THOST_FTDC_TPID_IsFuturePosiLimit
r"""是否期货限仓"""
THOST_FTDC_TPID_IsFutureOrderFreq = _soptthosttraderapi.THOST_FTDC_TPID_IsFutureOrderFreq
r"""是否期货下单频率限制"""
THOST_FTDC_TPID_IsOrderTypeLimit = _soptthosttraderapi.THOST_FTDC_TPID_IsOrderTypeLimit
r"""是否报单类型限制"""
THOST_FTDC_TPID_IsCheckBankAcc = _soptthosttraderapi.THOST_FTDC_TPID_IsCheckBankAcc
r"""银期开户是否验证开户银行卡号是否是预留银行账户"""
THOST_FTDC_TPID_IsExecOrderProfit = _soptthosttraderapi.THOST_FTDC_TPID_IsExecOrderProfit
r"""行权冻结是否计算盈利"""
THOST_FTDC_TPID_PasswordDeadLine = _soptthosttraderapi.THOST_FTDC_TPID_PasswordDeadLine
r"""弱密码最后修改日期"""
THOST_FTDC_TPID_IsStrongPassword = _soptthosttraderapi.THOST_FTDC_TPID_IsStrongPassword
r"""强密码校验"""
THOST_FTDC_TPID_IsSmsCode = _soptthosttraderapi.THOST_FTDC_TPID_IsSmsCode
r"""是否启用短信验证"""
THOST_FTDC_TPID_BalanceMorgage = _soptthosttraderapi.THOST_FTDC_TPID_BalanceMorgage
r"""自有资金质押比"""
THOST_FTDC_TPID_MinPwdLen = _soptthosttraderapi.THOST_FTDC_TPID_MinPwdLen
r"""最小密码长度"""
THOST_FTDC_TPID_LoginFailMaxNumForIP = _soptthosttraderapi.THOST_FTDC_TPID_LoginFailMaxNumForIP
r"""IP当日最大登陆失败次数"""
THOST_FTDC_TPID_PasswordPeriod = _soptthosttraderapi.THOST_FTDC_TPID_PasswordPeriod
r"""密码有效期"""
THOST_FTDC_TPID_IsLinearMargin = _soptthosttraderapi.THOST_FTDC_TPID_IsLinearMargin
r"""是否线性计算保证金"""
THOST_FTDC_FI_SettlementFund = _soptthosttraderapi.THOST_FTDC_FI_SettlementFund
r"""
    TFtdcFileIDType是一个文件标识类型
    资金数据
    """
THOST_FTDC_FI_Trade = _soptthosttraderapi.THOST_FTDC_FI_Trade
r"""成交数据"""
THOST_FTDC_FI_InvestorPosition = _soptthosttraderapi.THOST_FTDC_FI_InvestorPosition
r"""投资者持仓数据"""
THOST_FTDC_FI_SubEntryFund = _soptthosttraderapi.THOST_FTDC_FI_SubEntryFund
r"""投资者分项资金数据"""
THOST_FTDC_FI_CZCECombinationPos = _soptthosttraderapi.THOST_FTDC_FI_CZCECombinationPos
r"""组合持仓数据"""
THOST_FTDC_FI_CSRCData = _soptthosttraderapi.THOST_FTDC_FI_CSRCData
r"""上报保证金监控中心数据"""
THOST_FTDC_FI_CZCEClose = _soptthosttraderapi.THOST_FTDC_FI_CZCEClose
r"""郑商所平仓了结数据"""
THOST_FTDC_FI_CZCENoClose = _soptthosttraderapi.THOST_FTDC_FI_CZCENoClose
r"""郑商所非平仓了结数据"""
THOST_FTDC_FI_PositionDtl = _soptthosttraderapi.THOST_FTDC_FI_PositionDtl
r"""持仓明细数据"""
THOST_FTDC_FI_OptionStrike = _soptthosttraderapi.THOST_FTDC_FI_OptionStrike
r"""期权执行文件"""
THOST_FTDC_FI_SettlementPriceComparison = _soptthosttraderapi.THOST_FTDC_FI_SettlementPriceComparison
r"""结算价比对文件"""
THOST_FTDC_FI_NonTradePosChange = _soptthosttraderapi.THOST_FTDC_FI_NonTradePosChange
r"""上期所非持仓变动明细"""
THOST_FTDC_FUT_Settlement = _soptthosttraderapi.THOST_FTDC_FUT_Settlement
r"""
    TFtdcFileTypeType是一个文件上传类型类型
    结算
    """
THOST_FTDC_FUT_Check = _soptthosttraderapi.THOST_FTDC_FUT_Check
r"""核对"""
THOST_FTDC_FFT_Txt = _soptthosttraderapi.THOST_FTDC_FFT_Txt
r"""
    TFtdcFileFormatType是一个文件格式类型
    文本文件(.txt)
    """
THOST_FTDC_FFT_Zip = _soptthosttraderapi.THOST_FTDC_FFT_Zip
r"""压缩文件(.zip)"""
THOST_FTDC_FFT_DBF = _soptthosttraderapi.THOST_FTDC_FFT_DBF
r"""DBF文件(.dbf)"""
THOST_FTDC_FUS_SucceedUpload = _soptthosttraderapi.THOST_FTDC_FUS_SucceedUpload
r"""
    TFtdcFileUploadStatusType是一个文件状态类型
    上传成功
    """
THOST_FTDC_FUS_FailedUpload = _soptthosttraderapi.THOST_FTDC_FUS_FailedUpload
r"""上传失败"""
THOST_FTDC_FUS_SucceedLoad = _soptthosttraderapi.THOST_FTDC_FUS_SucceedLoad
r"""导入成功"""
THOST_FTDC_FUS_PartSucceedLoad = _soptthosttraderapi.THOST_FTDC_FUS_PartSucceedLoad
r"""导入部分成功"""
THOST_FTDC_FUS_FailedLoad = _soptthosttraderapi.THOST_FTDC_FUS_FailedLoad
r"""导入失败"""
THOST_FTDC_TD_Out = _soptthosttraderapi.THOST_FTDC_TD_Out
r"""
    TFtdcTransferDirectionType是一个移仓方向类型
    移出
    """
THOST_FTDC_TD_In = _soptthosttraderapi.THOST_FTDC_TD_In
r"""移入"""
THOST_FTDC_SC_NoSpecialRule = _soptthosttraderapi.THOST_FTDC_SC_NoSpecialRule
r"""
    TFtdcSpecialCreateRuleType是一个特殊的创建规则类型
    没有特殊创建规则
    """
THOST_FTDC_SC_NoSpringFestival = _soptthosttraderapi.THOST_FTDC_SC_NoSpringFestival
r"""不包含春节"""
THOST_FTDC_IPT_LastSettlement = _soptthosttraderapi.THOST_FTDC_IPT_LastSettlement
r"""
    TFtdcBasisPriceTypeType是一个挂牌基准价类型类型
    上一合约结算价
    """
THOST_FTDC_IPT_LaseClose = _soptthosttraderapi.THOST_FTDC_IPT_LaseClose
r"""上一合约收盘价"""
THOST_FTDC_PLP_Active = _soptthosttraderapi.THOST_FTDC_PLP_Active
r"""
    TFtdcProductLifePhaseType是一个产品生命周期状态类型
    活跃
    """
THOST_FTDC_PLP_NonActive = _soptthosttraderapi.THOST_FTDC_PLP_NonActive
r"""不活跃"""
THOST_FTDC_PLP_Canceled = _soptthosttraderapi.THOST_FTDC_PLP_Canceled
r"""注销"""
THOST_FTDC_DM_CashDeliv = _soptthosttraderapi.THOST_FTDC_DM_CashDeliv
r"""
    TFtdcDeliveryModeType是一个交割方式类型
    现金交割
    """
THOST_FTDC_DM_CommodityDeliv = _soptthosttraderapi.THOST_FTDC_DM_CommodityDeliv
r"""实物交割"""
THOST_FTDC_FIOT_FundIO = _soptthosttraderapi.THOST_FTDC_FIOT_FundIO
r"""
    TFtdcFundIOTypeType是一个出入金类型类型
    出入金
    """
THOST_FTDC_FIOT_Transfer = _soptthosttraderapi.THOST_FTDC_FIOT_Transfer
r"""银期转帐"""
THOST_FTDC_FIOT_SwapCurrency = _soptthosttraderapi.THOST_FTDC_FIOT_SwapCurrency
r"""银期换汇"""
THOST_FTDC_FT_Deposite = _soptthosttraderapi.THOST_FTDC_FT_Deposite
r"""
    TFtdcFundTypeType是一个资金类型类型
    银行存款
    """
THOST_FTDC_FT_ItemFund = _soptthosttraderapi.THOST_FTDC_FT_ItemFund
r"""分项资金"""
THOST_FTDC_FT_Company = _soptthosttraderapi.THOST_FTDC_FT_Company
r"""公司调整"""
THOST_FTDC_FT_InnerTransfer = _soptthosttraderapi.THOST_FTDC_FT_InnerTransfer
r"""资金内转"""
THOST_FTDC_FD_In = _soptthosttraderapi.THOST_FTDC_FD_In
r"""
    TFtdcFundDirectionType是一个出入金方向类型
    入金
    """
THOST_FTDC_FD_Out = _soptthosttraderapi.THOST_FTDC_FD_Out
r"""出金"""
THOST_FTDC_FS_Record = _soptthosttraderapi.THOST_FTDC_FS_Record
r"""
    TFtdcFundStatusType是一个资金状态类型
    已录入
    """
THOST_FTDC_FS_Check = _soptthosttraderapi.THOST_FTDC_FS_Check
r"""已复核"""
THOST_FTDC_FS_Charge = _soptthosttraderapi.THOST_FTDC_FS_Charge
r"""已冲销"""
THOST_FTDC_PS_None = _soptthosttraderapi.THOST_FTDC_PS_None
r"""
    TFtdcPublishStatusType是一个发布状态类型
    未发布
    """
THOST_FTDC_PS_Publishing = _soptthosttraderapi.THOST_FTDC_PS_Publishing
r"""正在发布"""
THOST_FTDC_PS_Published = _soptthosttraderapi.THOST_FTDC_PS_Published
r"""已发布"""
THOST_FTDC_ES_NonActive = _soptthosttraderapi.THOST_FTDC_ES_NonActive
r"""
    TFtdcSystemStatusType是一个系统状态类型
    不活跃
    """
THOST_FTDC_ES_Startup = _soptthosttraderapi.THOST_FTDC_ES_Startup
r"""启动"""
THOST_FTDC_ES_Initialize = _soptthosttraderapi.THOST_FTDC_ES_Initialize
r"""交易开始初始化"""
THOST_FTDC_ES_Initialized = _soptthosttraderapi.THOST_FTDC_ES_Initialized
r"""交易完成初始化"""
THOST_FTDC_ES_Close = _soptthosttraderapi.THOST_FTDC_ES_Close
r"""收市开始"""
THOST_FTDC_ES_Closed = _soptthosttraderapi.THOST_FTDC_ES_Closed
r"""收市完成"""
THOST_FTDC_ES_Settlement = _soptthosttraderapi.THOST_FTDC_ES_Settlement
r"""结算"""
THOST_FTDC_STS_Initialize = _soptthosttraderapi.THOST_FTDC_STS_Initialize
r"""
    TFtdcSettlementStatusType是一个结算状态类型
    初始
    """
THOST_FTDC_STS_Settlementing = _soptthosttraderapi.THOST_FTDC_STS_Settlementing
r"""结算中"""
THOST_FTDC_STS_Settlemented = _soptthosttraderapi.THOST_FTDC_STS_Settlemented
r"""已结算"""
THOST_FTDC_STS_Finished = _soptthosttraderapi.THOST_FTDC_STS_Finished
r"""结算完成"""
THOST_FTDC_CT_Person = _soptthosttraderapi.THOST_FTDC_CT_Person
r"""
    TFtdcInvestorTypeType是一个投资者类型类型
    自然人
    """
THOST_FTDC_CT_Company = _soptthosttraderapi.THOST_FTDC_CT_Company
r"""法人"""
THOST_FTDC_CT_Fund = _soptthosttraderapi.THOST_FTDC_CT_Fund
r"""投资基金"""
THOST_FTDC_CT_SpecialOrgan = _soptthosttraderapi.THOST_FTDC_CT_SpecialOrgan
r"""特殊法人"""
THOST_FTDC_CT_Asset = _soptthosttraderapi.THOST_FTDC_CT_Asset
r"""资管户"""
THOST_FTDC_BT_Trade = _soptthosttraderapi.THOST_FTDC_BT_Trade
r"""
    TFtdcBrokerTypeType是一个经纪公司类型类型
    交易会员
    """
THOST_FTDC_BT_TradeSettle = _soptthosttraderapi.THOST_FTDC_BT_TradeSettle
r"""交易结算会员"""
THOST_FTDC_FAS_Low = _soptthosttraderapi.THOST_FTDC_FAS_Low
r"""
    TFtdcRiskLevelType是一个风险等级类型
    低风险客户
    """
THOST_FTDC_FAS_Normal = _soptthosttraderapi.THOST_FTDC_FAS_Normal
r"""普通客户"""
THOST_FTDC_FAS_Focus = _soptthosttraderapi.THOST_FTDC_FAS_Focus
r"""关注客户"""
THOST_FTDC_FAS_Risk = _soptthosttraderapi.THOST_FTDC_FAS_Risk
r"""风险客户"""
THOST_FTDC_FAS_ByTrade = _soptthosttraderapi.THOST_FTDC_FAS_ByTrade
r"""
    TFtdcFeeAcceptStyleType是一个手续费收取方式类型
    按交易收取
    """
THOST_FTDC_FAS_ByDeliv = _soptthosttraderapi.THOST_FTDC_FAS_ByDeliv
r"""按交割收取"""
THOST_FTDC_FAS_None = _soptthosttraderapi.THOST_FTDC_FAS_None
r"""不收"""
THOST_FTDC_FAS_FixFee = _soptthosttraderapi.THOST_FTDC_FAS_FixFee
r"""按指定手续费收取"""
THOST_FTDC_PWDT_Trade = _soptthosttraderapi.THOST_FTDC_PWDT_Trade
r"""
    TFtdcPasswordTypeType是一个密码类型类型
    交易密码
    """
THOST_FTDC_PWDT_Account = _soptthosttraderapi.THOST_FTDC_PWDT_Account
r"""资金密码"""
THOST_FTDC_AG_All = _soptthosttraderapi.THOST_FTDC_AG_All
r"""
    TFtdcAlgorithmType是一个盈亏算法类型
    浮盈浮亏都计算
    """
THOST_FTDC_AG_OnlyLost = _soptthosttraderapi.THOST_FTDC_AG_OnlyLost
r"""浮盈不计，浮亏计"""
THOST_FTDC_AG_OnlyGain = _soptthosttraderapi.THOST_FTDC_AG_OnlyGain
r"""浮盈计，浮亏不计"""
THOST_FTDC_AG_None = _soptthosttraderapi.THOST_FTDC_AG_None
r"""浮盈浮亏都不计算"""
THOST_FTDC_ICP_Include = _soptthosttraderapi.THOST_FTDC_ICP_Include
r"""
    TFtdcIncludeCloseProfitType是一个是否包含平仓盈利类型
    包含平仓盈利
    """
THOST_FTDC_ICP_NotInclude = _soptthosttraderapi.THOST_FTDC_ICP_NotInclude
r"""不包含平仓盈利"""
THOST_FTDC_AWT_Enable = _soptthosttraderapi.THOST_FTDC_AWT_Enable
r"""
    TFtdcAllWithoutTradeType是一个是否受可提比例限制类型
    无仓无成交不受可提比例限制
    """
THOST_FTDC_AWT_Disable = _soptthosttraderapi.THOST_FTDC_AWT_Disable
r"""受可提比例限制"""
THOST_FTDC_AWT_NoHoldEnable = _soptthosttraderapi.THOST_FTDC_AWT_NoHoldEnable
r"""无仓不受可提比例限制"""
THOST_FTDC_FPWD_UnCheck = _soptthosttraderapi.THOST_FTDC_FPWD_UnCheck
r"""
    TFtdcFuturePwdFlagType是一个资金密码核对标志类型
    不核对
    """
THOST_FTDC_FPWD_Check = _soptthosttraderapi.THOST_FTDC_FPWD_Check
r"""核对"""
THOST_FTDC_TT_BankToFuture = _soptthosttraderapi.THOST_FTDC_TT_BankToFuture
r"""
    TFtdcTransferTypeType是一个银期转账类型类型
    银行转期货
    """
THOST_FTDC_TT_FutureToBank = _soptthosttraderapi.THOST_FTDC_TT_FutureToBank
r"""期货转银行"""
THOST_FTDC_TVF_Invalid = _soptthosttraderapi.THOST_FTDC_TVF_Invalid
r"""
    TFtdcTransferValidFlagType是一个转账有效标志类型
    无效或失败
    """
THOST_FTDC_TVF_Valid = _soptthosttraderapi.THOST_FTDC_TVF_Valid
r"""有效"""
THOST_FTDC_TVF_Reverse = _soptthosttraderapi.THOST_FTDC_TVF_Reverse
r"""冲正"""
THOST_FTDC_BC_BankFu = _soptthosttraderapi.THOST_FTDC_BC_BankFu
r"""
    TFtdcBankChannelType是一个银行转账通道类型
    银期
    """
THOST_FTDC_BC_BankSe = _soptthosttraderapi.THOST_FTDC_BC_BankSe
r"""银证"""
THOST_FTDC_RN_CD = _soptthosttraderapi.THOST_FTDC_RN_CD
r"""
    TFtdcReasonType是一个事由类型
    错单
    """
THOST_FTDC_RN_ZT = _soptthosttraderapi.THOST_FTDC_RN_ZT
r"""资金在途"""
THOST_FTDC_RN_QT = _soptthosttraderapi.THOST_FTDC_RN_QT
r"""其它"""
THOST_FTDC_SEX_None = _soptthosttraderapi.THOST_FTDC_SEX_None
r"""
    TFtdcSexType是一个性别类型
    未知
    """
THOST_FTDC_SEX_Man = _soptthosttraderapi.THOST_FTDC_SEX_Man
r"""男"""
THOST_FTDC_SEX_Woman = _soptthosttraderapi.THOST_FTDC_SEX_Woman
r"""女"""
THOST_FTDC_UT_Investor = _soptthosttraderapi.THOST_FTDC_UT_Investor
r"""
    TFtdcUserTypeType是一个用户类型类型
    投资者
    """
THOST_FTDC_UT_Operator = _soptthosttraderapi.THOST_FTDC_UT_Operator
r"""操作员"""
THOST_FTDC_UT_SuperUser = _soptthosttraderapi.THOST_FTDC_UT_SuperUser
r"""管理员"""
THOST_FTDC_RATETYPE_MarginRate = _soptthosttraderapi.THOST_FTDC_RATETYPE_MarginRate
r"""
    TFtdcRateTypeType是一个费率类型类型
    保证金率
    """
THOST_FTDC_NOTETYPE_TradeSettleBill = _soptthosttraderapi.THOST_FTDC_NOTETYPE_TradeSettleBill
r"""
    TFtdcNoteTypeType是一个通知类型类型
    交易结算单
    """
THOST_FTDC_NOTETYPE_TradeSettleMonth = _soptthosttraderapi.THOST_FTDC_NOTETYPE_TradeSettleMonth
r"""交易结算月报"""
THOST_FTDC_NOTETYPE_CallMarginNotes = _soptthosttraderapi.THOST_FTDC_NOTETYPE_CallMarginNotes
r"""追加保证金通知书"""
THOST_FTDC_NOTETYPE_ForceCloseNotes = _soptthosttraderapi.THOST_FTDC_NOTETYPE_ForceCloseNotes
r"""强行平仓通知书"""
THOST_FTDC_NOTETYPE_TradeNotes = _soptthosttraderapi.THOST_FTDC_NOTETYPE_TradeNotes
r"""成交通知书"""
THOST_FTDC_NOTETYPE_DelivNotes = _soptthosttraderapi.THOST_FTDC_NOTETYPE_DelivNotes
r"""交割通知书"""
THOST_FTDC_SBS_Day = _soptthosttraderapi.THOST_FTDC_SBS_Day
r"""
    TFtdcSettlementStyleType是一个结算单方式类型
    逐日盯市
    """
THOST_FTDC_SBS_Volume = _soptthosttraderapi.THOST_FTDC_SBS_Volume
r"""逐笔对冲"""
THOST_FTDC_ST_Day = _soptthosttraderapi.THOST_FTDC_ST_Day
r"""
    TFtdcSettlementBillTypeType是一个结算单类型类型
    日报
    """
THOST_FTDC_ST_Month = _soptthosttraderapi.THOST_FTDC_ST_Month
r"""月报"""
THOST_FTDC_URT_Logon = _soptthosttraderapi.THOST_FTDC_URT_Logon
r"""
    TFtdcUserRightTypeType是一个客户权限类型类型
    登录
    """
THOST_FTDC_URT_Transfer = _soptthosttraderapi.THOST_FTDC_URT_Transfer
r"""银期转帐"""
THOST_FTDC_URT_EMail = _soptthosttraderapi.THOST_FTDC_URT_EMail
r"""邮寄结算单"""
THOST_FTDC_URT_Fax = _soptthosttraderapi.THOST_FTDC_URT_Fax
r"""传真结算单"""
THOST_FTDC_URT_ConditionOrder = _soptthosttraderapi.THOST_FTDC_URT_ConditionOrder
r"""条件单"""
THOST_FTDC_MPT_PreSettlementPrice = _soptthosttraderapi.THOST_FTDC_MPT_PreSettlementPrice
r"""
    TFtdcMarginPriceTypeType是一个保证金价格类型类型
    昨结算价
    """
THOST_FTDC_MPT_SettlementPrice = _soptthosttraderapi.THOST_FTDC_MPT_SettlementPrice
r"""最新价"""
THOST_FTDC_MPT_AveragePrice = _soptthosttraderapi.THOST_FTDC_MPT_AveragePrice
r"""成交均价"""
THOST_FTDC_MPT_OpenPrice = _soptthosttraderapi.THOST_FTDC_MPT_OpenPrice
r"""开仓价"""
THOST_FTDC_BGS_None = _soptthosttraderapi.THOST_FTDC_BGS_None
r"""
    TFtdcBillGenStatusType是一个结算单生成状态类型
    未生成
    """
THOST_FTDC_BGS_NoGenerated = _soptthosttraderapi.THOST_FTDC_BGS_NoGenerated
r"""生成中"""
THOST_FTDC_BGS_Generated = _soptthosttraderapi.THOST_FTDC_BGS_Generated
r"""已生成"""
THOST_FTDC_AT_HandlePositionAlgo = _soptthosttraderapi.THOST_FTDC_AT_HandlePositionAlgo
r"""
    TFtdcAlgoTypeType是一个算法类型类型
    持仓处理算法
    """
THOST_FTDC_AT_FindMarginRateAlgo = _soptthosttraderapi.THOST_FTDC_AT_FindMarginRateAlgo
r"""寻找保证金率算法"""
THOST_FTDC_HPA_Base = _soptthosttraderapi.THOST_FTDC_HPA_Base
r"""
    TFtdcHandlePositionAlgoIDType是一个持仓处理算法编号类型
    基本
    """
THOST_FTDC_HPA_DCE = _soptthosttraderapi.THOST_FTDC_HPA_DCE
r"""大连商品交易所"""
THOST_FTDC_HPA_CZCE = _soptthosttraderapi.THOST_FTDC_HPA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_FMRA_Base = _soptthosttraderapi.THOST_FTDC_FMRA_Base
r"""
    TFtdcFindMarginRateAlgoIDType是一个寻找保证金率算法编号类型
    基本
    """
THOST_FTDC_FMRA_DCE = _soptthosttraderapi.THOST_FTDC_FMRA_DCE
r"""大连商品交易所"""
THOST_FTDC_FMRA_CZCE = _soptthosttraderapi.THOST_FTDC_FMRA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_HTAA_Base = _soptthosttraderapi.THOST_FTDC_HTAA_Base
r"""
    TFtdcHandleTradingAccountAlgoIDType是一个资金处理算法编号类型
    基本
    """
THOST_FTDC_HTAA_DCE = _soptthosttraderapi.THOST_FTDC_HTAA_DCE
r"""大连商品交易所"""
THOST_FTDC_HTAA_CZCE = _soptthosttraderapi.THOST_FTDC_HTAA_CZCE
r"""郑州商品交易所"""
THOST_FTDC_PST_Order = _soptthosttraderapi.THOST_FTDC_PST_Order
r"""
    TFtdcPersonTypeType是一个联系人类型类型
    指定下单人
    """
THOST_FTDC_PST_Open = _soptthosttraderapi.THOST_FTDC_PST_Open
r"""开户授权人"""
THOST_FTDC_PST_Fund = _soptthosttraderapi.THOST_FTDC_PST_Fund
r"""资金调拨人"""
THOST_FTDC_PST_Settlement = _soptthosttraderapi.THOST_FTDC_PST_Settlement
r"""结算单确认人"""
THOST_FTDC_PST_Company = _soptthosttraderapi.THOST_FTDC_PST_Company
r"""法人"""
THOST_FTDC_PST_Corporation = _soptthosttraderapi.THOST_FTDC_PST_Corporation
r"""法人代表"""
THOST_FTDC_PST_LinkMan = _soptthosttraderapi.THOST_FTDC_PST_LinkMan
r"""投资者联系人"""
THOST_FTDC_PST_Ledger = _soptthosttraderapi.THOST_FTDC_PST_Ledger
r"""分户管理资产负责人"""
THOST_FTDC_PST_Trustee = _soptthosttraderapi.THOST_FTDC_PST_Trustee
r"""托（保）管人"""
THOST_FTDC_PST_TrusteeCorporation = _soptthosttraderapi.THOST_FTDC_PST_TrusteeCorporation
r"""托（保）管机构法人代表"""
THOST_FTDC_PST_TrusteeOpen = _soptthosttraderapi.THOST_FTDC_PST_TrusteeOpen
r"""托（保）管机构开户授权人"""
THOST_FTDC_PST_TrusteeContact = _soptthosttraderapi.THOST_FTDC_PST_TrusteeContact
r"""托（保）管机构联系人"""
THOST_FTDC_PST_ForeignerRefer = _soptthosttraderapi.THOST_FTDC_PST_ForeignerRefer
r"""境外自然人参考证件"""
THOST_FTDC_PST_CorporationRefer = _soptthosttraderapi.THOST_FTDC_PST_CorporationRefer
r"""法人代表参考证件"""
THOST_FTDC_QIR_All = _soptthosttraderapi.THOST_FTDC_QIR_All
r"""
    TFtdcQueryInvestorRangeType是一个查询范围类型
    所有
    """
THOST_FTDC_QIR_Group = _soptthosttraderapi.THOST_FTDC_QIR_Group
r"""查询分类"""
THOST_FTDC_QIR_Single = _soptthosttraderapi.THOST_FTDC_QIR_Single
r"""单一投资者"""
THOST_FTDC_IRS_Normal = _soptthosttraderapi.THOST_FTDC_IRS_Normal
r"""
    TFtdcInvestorRiskStatusType是一个投资者风险状态类型
    正常
    """
THOST_FTDC_IRS_Warn = _soptthosttraderapi.THOST_FTDC_IRS_Warn
r"""警告"""
THOST_FTDC_IRS_Call = _soptthosttraderapi.THOST_FTDC_IRS_Call
r"""追保"""
THOST_FTDC_IRS_Force = _soptthosttraderapi.THOST_FTDC_IRS_Force
r"""强平"""
THOST_FTDC_IRS_Exception = _soptthosttraderapi.THOST_FTDC_IRS_Exception
r"""异常"""
THOST_FTDC_UET_Login = _soptthosttraderapi.THOST_FTDC_UET_Login
r"""
    TFtdcUserEventTypeType是一个用户事件类型类型
    登录
    """
THOST_FTDC_UET_Logout = _soptthosttraderapi.THOST_FTDC_UET_Logout
r"""登出"""
THOST_FTDC_UET_Trading = _soptthosttraderapi.THOST_FTDC_UET_Trading
r"""交易成功"""
THOST_FTDC_UET_TradingError = _soptthosttraderapi.THOST_FTDC_UET_TradingError
r"""交易失败"""
THOST_FTDC_UET_UpdatePassword = _soptthosttraderapi.THOST_FTDC_UET_UpdatePassword
r"""修改密码"""
THOST_FTDC_UET_Authenticate = _soptthosttraderapi.THOST_FTDC_UET_Authenticate
r"""客户端认证"""
THOST_FTDC_UET_SmsCode = _soptthosttraderapi.THOST_FTDC_UET_SmsCode
r"""短信验证码"""
THOST_FTDC_UET_Other = _soptthosttraderapi.THOST_FTDC_UET_Other
r"""其他"""
THOST_FTDC_ICS_Close = _soptthosttraderapi.THOST_FTDC_ICS_Close
r"""
    TFtdcCloseStyleType是一个平仓方式类型
    先开先平
    """
THOST_FTDC_ICS_CloseToday = _soptthosttraderapi.THOST_FTDC_ICS_CloseToday
r"""先平今再平昨"""
THOST_FTDC_SM_Non = _soptthosttraderapi.THOST_FTDC_SM_Non
r"""
    TFtdcStatModeType是一个统计方式类型
    ----
    """
THOST_FTDC_SM_Instrument = _soptthosttraderapi.THOST_FTDC_SM_Instrument
r"""按合约统计"""
THOST_FTDC_SM_Product = _soptthosttraderapi.THOST_FTDC_SM_Product
r"""按产品统计"""
THOST_FTDC_SM_Investor = _soptthosttraderapi.THOST_FTDC_SM_Investor
r"""按投资者统计"""
THOST_FTDC_PAOS_NotSend = _soptthosttraderapi.THOST_FTDC_PAOS_NotSend
r"""
    TFtdcParkedOrderStatusType是一个预埋单状态类型
    未发送
    """
THOST_FTDC_PAOS_Send = _soptthosttraderapi.THOST_FTDC_PAOS_Send
r"""已发送"""
THOST_FTDC_PAOS_Deleted = _soptthosttraderapi.THOST_FTDC_PAOS_Deleted
r"""已删除"""
THOST_FTDC_VDS_Dealing = _soptthosttraderapi.THOST_FTDC_VDS_Dealing
r"""
    TFtdcVirDealStatusType是一个处理状态类型
    正在处理
    """
THOST_FTDC_VDS_DeaclSucceed = _soptthosttraderapi.THOST_FTDC_VDS_DeaclSucceed
r"""处理成功"""
THOST_FTDC_ORGS_Standard = _soptthosttraderapi.THOST_FTDC_ORGS_Standard
r"""
    TFtdcOrgSystemIDType是一个原有系统代码类型
    综合交易平台
    """
THOST_FTDC_ORGS_ESunny = _soptthosttraderapi.THOST_FTDC_ORGS_ESunny
r"""易盛系统"""
THOST_FTDC_ORGS_KingStarV6 = _soptthosttraderapi.THOST_FTDC_ORGS_KingStarV6
r"""金仕达V6系统"""
THOST_FTDC_VTS_NaturalDeal = _soptthosttraderapi.THOST_FTDC_VTS_NaturalDeal
r"""
    TFtdcVirTradeStatusType是一个交易状态类型
    正常处理中
    """
THOST_FTDC_VTS_SucceedEnd = _soptthosttraderapi.THOST_FTDC_VTS_SucceedEnd
r"""成功结束"""
THOST_FTDC_VTS_FailedEND = _soptthosttraderapi.THOST_FTDC_VTS_FailedEND
r"""失败结束"""
THOST_FTDC_VTS_Exception = _soptthosttraderapi.THOST_FTDC_VTS_Exception
r"""异常中"""
THOST_FTDC_VTS_ManualDeal = _soptthosttraderapi.THOST_FTDC_VTS_ManualDeal
r"""已人工异常处理"""
THOST_FTDC_VTS_MesException = _soptthosttraderapi.THOST_FTDC_VTS_MesException
r"""通讯异常 ，请人工处理"""
THOST_FTDC_VTS_SysException = _soptthosttraderapi.THOST_FTDC_VTS_SysException
r"""系统出错，请人工处理"""
THOST_FTDC_VBAT_BankBook = _soptthosttraderapi.THOST_FTDC_VBAT_BankBook
r"""
    TFtdcVirBankAccTypeType是一个银行帐户类型类型
    存折
    """
THOST_FTDC_VBAT_BankCard = _soptthosttraderapi.THOST_FTDC_VBAT_BankCard
r"""储蓄卡"""
THOST_FTDC_VBAT_CreditCard = _soptthosttraderapi.THOST_FTDC_VBAT_CreditCard
r"""信用卡"""
THOST_FTDC_VMS_Natural = _soptthosttraderapi.THOST_FTDC_VMS_Natural
r"""
    TFtdcVirementStatusType是一个银行帐户类型类型
    正常
    """
THOST_FTDC_VMS_Canceled = _soptthosttraderapi.THOST_FTDC_VMS_Canceled
r"""销户"""
THOST_FTDC_VAA_NoAvailAbility = _soptthosttraderapi.THOST_FTDC_VAA_NoAvailAbility
r"""
    TFtdcVirementAvailAbilityType是一个有效标志类型
    未确认
    """
THOST_FTDC_VAA_AvailAbility = _soptthosttraderapi.THOST_FTDC_VAA_AvailAbility
r"""有效"""
THOST_FTDC_VAA_Repeal = _soptthosttraderapi.THOST_FTDC_VAA_Repeal
r"""冲正"""
THOST_FTDC_GEN_Program = _soptthosttraderapi.THOST_FTDC_GEN_Program
r"""
    TFtdcAMLGenStatusType是一个Aml生成方式类型
    程序生成
    """
THOST_FTDC_GEN_HandWork = _soptthosttraderapi.THOST_FTDC_GEN_HandWork
r"""人工生成"""
THOST_FTDC_CFMMCKK_REQUEST = _soptthosttraderapi.THOST_FTDC_CFMMCKK_REQUEST
r"""
    TFtdcCFMMCKeyKindType是一个动态密钥类别(保证金监管)类型
    主动请求更新
    """
THOST_FTDC_CFMMCKK_AUTO = _soptthosttraderapi.THOST_FTDC_CFMMCKK_AUTO
r"""CFMMC自动更新"""
THOST_FTDC_CFMMCKK_MANUAL = _soptthosttraderapi.THOST_FTDC_CFMMCKK_MANUAL
r"""CFMMC手动更新"""
THOST_FTDC_CFT_IDCard = _soptthosttraderapi.THOST_FTDC_CFT_IDCard
r"""
    TFtdcCertificationTypeType是一个证件类型类型
    身份证
    """
THOST_FTDC_CFT_Passport = _soptthosttraderapi.THOST_FTDC_CFT_Passport
r"""护照"""
THOST_FTDC_CFT_OfficerIDCard = _soptthosttraderapi.THOST_FTDC_CFT_OfficerIDCard
r"""军官证"""
THOST_FTDC_CFT_SoldierIDCard = _soptthosttraderapi.THOST_FTDC_CFT_SoldierIDCard
r"""士兵证"""
THOST_FTDC_CFT_HomeComingCard = _soptthosttraderapi.THOST_FTDC_CFT_HomeComingCard
r"""回乡证"""
THOST_FTDC_CFT_HouseholdRegister = _soptthosttraderapi.THOST_FTDC_CFT_HouseholdRegister
r"""户口簿"""
THOST_FTDC_CFT_LicenseNo = _soptthosttraderapi.THOST_FTDC_CFT_LicenseNo
r"""营业执照号"""
THOST_FTDC_CFT_InstitutionCodeCard = _soptthosttraderapi.THOST_FTDC_CFT_InstitutionCodeCard
r"""组织机构代码证"""
THOST_FTDC_CFT_TempLicenseNo = _soptthosttraderapi.THOST_FTDC_CFT_TempLicenseNo
r"""临时营业执照号"""
THOST_FTDC_CFT_NoEnterpriseLicenseNo = _soptthosttraderapi.THOST_FTDC_CFT_NoEnterpriseLicenseNo
r"""民办非企业登记证书"""
THOST_FTDC_CFT_OtherCard = _soptthosttraderapi.THOST_FTDC_CFT_OtherCard
r"""其他证件"""
THOST_FTDC_CFT_SuperDepAgree = _soptthosttraderapi.THOST_FTDC_CFT_SuperDepAgree
r"""主管部门批文"""
THOST_FTDC_FBC_Others = _soptthosttraderapi.THOST_FTDC_FBC_Others
r"""
    TFtdcFileBusinessCodeType是一个文件业务功能类型
    其他
    """
THOST_FTDC_FBC_TransferDetails = _soptthosttraderapi.THOST_FTDC_FBC_TransferDetails
r"""转账交易明细对账"""
THOST_FTDC_FBC_CustAccStatus = _soptthosttraderapi.THOST_FTDC_FBC_CustAccStatus
r"""客户账户状态对账"""
THOST_FTDC_FBC_AccountTradeDetails = _soptthosttraderapi.THOST_FTDC_FBC_AccountTradeDetails
r"""账户类交易明细对账"""
THOST_FTDC_FBC_FutureAccountChangeInfoDetails = _soptthosttraderapi.THOST_FTDC_FBC_FutureAccountChangeInfoDetails
r"""期货账户信息变更明细对账"""
THOST_FTDC_FBC_CustMoneyDetail = _soptthosttraderapi.THOST_FTDC_FBC_CustMoneyDetail
r"""客户资金台账余额明细对账"""
THOST_FTDC_FBC_CustCancelAccountInfo = _soptthosttraderapi.THOST_FTDC_FBC_CustCancelAccountInfo
r"""客户销户结息明细对账"""
THOST_FTDC_FBC_CustMoneyResult = _soptthosttraderapi.THOST_FTDC_FBC_CustMoneyResult
r"""客户资金余额对账结果"""
THOST_FTDC_FBC_OthersExceptionResult = _soptthosttraderapi.THOST_FTDC_FBC_OthersExceptionResult
r"""其它对账异常结果文件"""
THOST_FTDC_FBC_CustInterestNetMoneyDetails = _soptthosttraderapi.THOST_FTDC_FBC_CustInterestNetMoneyDetails
r"""客户结息净额明细"""
THOST_FTDC_FBC_CustMoneySendAndReceiveDetails = _soptthosttraderapi.THOST_FTDC_FBC_CustMoneySendAndReceiveDetails
r"""客户资金交收明细"""
THOST_FTDC_FBC_CorporationMoneyTotal = _soptthosttraderapi.THOST_FTDC_FBC_CorporationMoneyTotal
r"""法人存管银行资金交收汇总"""
THOST_FTDC_FBC_MainbodyMoneyTotal = _soptthosttraderapi.THOST_FTDC_FBC_MainbodyMoneyTotal
r"""主体间资金交收汇总"""
THOST_FTDC_FBC_MainPartMonitorData = _soptthosttraderapi.THOST_FTDC_FBC_MainPartMonitorData
r"""总分平衡监管数据"""
THOST_FTDC_FBC_PreparationMoney = _soptthosttraderapi.THOST_FTDC_FBC_PreparationMoney
r"""存管银行备付金余额"""
THOST_FTDC_FBC_BankMoneyMonitorData = _soptthosttraderapi.THOST_FTDC_FBC_BankMoneyMonitorData
r"""协办存管银行资金监管数据"""
THOST_FTDC_CEC_Exchange = _soptthosttraderapi.THOST_FTDC_CEC_Exchange
r"""
    TFtdcCashExchangeCodeType是一个汇钞标志类型
    汇
    """
THOST_FTDC_CEC_Cash = _soptthosttraderapi.THOST_FTDC_CEC_Cash
r"""钞"""
THOST_FTDC_YNI_Yes = _soptthosttraderapi.THOST_FTDC_YNI_Yes
r"""
    TFtdcYesNoIndicatorType是一个是或否标识类型
    是
    """
THOST_FTDC_YNI_No = _soptthosttraderapi.THOST_FTDC_YNI_No
r"""否"""
THOST_FTDC_BLT_CurrentMoney = _soptthosttraderapi.THOST_FTDC_BLT_CurrentMoney
r"""
    TFtdcBanlanceTypeType是一个余额类型类型
    当前余额
    """
THOST_FTDC_BLT_UsableMoney = _soptthosttraderapi.THOST_FTDC_BLT_UsableMoney
r"""可用余额"""
THOST_FTDC_BLT_FetchableMoney = _soptthosttraderapi.THOST_FTDC_BLT_FetchableMoney
r"""可取余额"""
THOST_FTDC_BLT_FreezeMoney = _soptthosttraderapi.THOST_FTDC_BLT_FreezeMoney
r"""冻结余额"""
THOST_FTDC_GD_Unknown = _soptthosttraderapi.THOST_FTDC_GD_Unknown
r"""
    TFtdcGenderType是一个性别类型
    未知状态
    """
THOST_FTDC_GD_Male = _soptthosttraderapi.THOST_FTDC_GD_Male
r"""男"""
THOST_FTDC_GD_Female = _soptthosttraderapi.THOST_FTDC_GD_Female
r"""女"""
THOST_FTDC_FPF_BEN = _soptthosttraderapi.THOST_FTDC_FPF_BEN
r"""
    TFtdcFeePayFlagType是一个费用支付标志类型
    由受益方支付费用
    """
THOST_FTDC_FPF_OUR = _soptthosttraderapi.THOST_FTDC_FPF_OUR
r"""由发送方支付费用"""
THOST_FTDC_FPF_SHA = _soptthosttraderapi.THOST_FTDC_FPF_SHA
r"""由发送方支付发起的费用，受益方支付接受的费用"""
THOST_FTDC_PWKT_ExchangeKey = _soptthosttraderapi.THOST_FTDC_PWKT_ExchangeKey
r"""
    TFtdcPassWordKeyTypeType是一个密钥类型类型
    交换密钥
    """
THOST_FTDC_PWKT_PassWordKey = _soptthosttraderapi.THOST_FTDC_PWKT_PassWordKey
r"""密码密钥"""
THOST_FTDC_PWKT_MACKey = _soptthosttraderapi.THOST_FTDC_PWKT_MACKey
r"""MAC密钥"""
THOST_FTDC_PWKT_MessageKey = _soptthosttraderapi.THOST_FTDC_PWKT_MessageKey
r"""报文密钥"""
THOST_FTDC_PWT_Query = _soptthosttraderapi.THOST_FTDC_PWT_Query
r"""
    TFtdcFBTPassWordTypeType是一个密码类型类型
    查询
    """
THOST_FTDC_PWT_Fetch = _soptthosttraderapi.THOST_FTDC_PWT_Fetch
r"""取款"""
THOST_FTDC_PWT_Transfer = _soptthosttraderapi.THOST_FTDC_PWT_Transfer
r"""转帐"""
THOST_FTDC_PWT_Trade = _soptthosttraderapi.THOST_FTDC_PWT_Trade
r"""交易"""
THOST_FTDC_EM_NoEncry = _soptthosttraderapi.THOST_FTDC_EM_NoEncry
r"""
    TFtdcFBTEncryModeType是一个加密方式类型
    不加密
    """
THOST_FTDC_EM_DES = _soptthosttraderapi.THOST_FTDC_EM_DES
r"""DES"""
THOST_FTDC_EM_3DES = _soptthosttraderapi.THOST_FTDC_EM_3DES
r"""3DES"""
THOST_FTDC_BRF_BankNotNeedRepeal = _soptthosttraderapi.THOST_FTDC_BRF_BankNotNeedRepeal
r"""
    TFtdcBankRepealFlagType是一个银行冲正标志类型
    银行无需自动冲正
    """
THOST_FTDC_BRF_BankWaitingRepeal = _soptthosttraderapi.THOST_FTDC_BRF_BankWaitingRepeal
r"""银行待自动冲正"""
THOST_FTDC_BRF_BankBeenRepealed = _soptthosttraderapi.THOST_FTDC_BRF_BankBeenRepealed
r"""银行已自动冲正"""
THOST_FTDC_BRORF_BrokerNotNeedRepeal = _soptthosttraderapi.THOST_FTDC_BRORF_BrokerNotNeedRepeal
r"""
    TFtdcBrokerRepealFlagType是一个期商冲正标志类型
    期商无需自动冲正
    """
THOST_FTDC_BRORF_BrokerWaitingRepeal = _soptthosttraderapi.THOST_FTDC_BRORF_BrokerWaitingRepeal
r"""期商待自动冲正"""
THOST_FTDC_BRORF_BrokerBeenRepealed = _soptthosttraderapi.THOST_FTDC_BRORF_BrokerBeenRepealed
r"""期商已自动冲正"""
THOST_FTDC_TS_Bank = _soptthosttraderapi.THOST_FTDC_TS_Bank
r"""
    TFtdcInstitutionTypeType是一个机构类别类型
    银行
    """
THOST_FTDC_TS_Future = _soptthosttraderapi.THOST_FTDC_TS_Future
r"""期商"""
THOST_FTDC_TS_Store = _soptthosttraderapi.THOST_FTDC_TS_Store
r"""券商"""
THOST_FTDC_LF_Yes = _soptthosttraderapi.THOST_FTDC_LF_Yes
r"""
    TFtdcLastFragmentType是一个最后分片标志类型
    是最后分片
    """
THOST_FTDC_LF_No = _soptthosttraderapi.THOST_FTDC_LF_No
r"""不是最后分片"""
THOST_FTDC_BAS_Normal = _soptthosttraderapi.THOST_FTDC_BAS_Normal
r"""
    TFtdcBankAccStatusType是一个银行账户状态类型
    正常
    """
THOST_FTDC_BAS_Freeze = _soptthosttraderapi.THOST_FTDC_BAS_Freeze
r"""冻结"""
THOST_FTDC_BAS_ReportLoss = _soptthosttraderapi.THOST_FTDC_BAS_ReportLoss
r"""挂失"""
THOST_FTDC_MAS_Normal = _soptthosttraderapi.THOST_FTDC_MAS_Normal
r"""
    TFtdcMoneyAccountStatusType是一个资金账户状态类型
    正常
    """
THOST_FTDC_MAS_Cancel = _soptthosttraderapi.THOST_FTDC_MAS_Cancel
r"""销户"""
THOST_FTDC_MSS_Point = _soptthosttraderapi.THOST_FTDC_MSS_Point
r"""
    TFtdcManageStatusType是一个存管状态类型
    指定存管
    """
THOST_FTDC_MSS_PrePoint = _soptthosttraderapi.THOST_FTDC_MSS_PrePoint
r"""预指定"""
THOST_FTDC_MSS_CancelPoint = _soptthosttraderapi.THOST_FTDC_MSS_CancelPoint
r"""撤销指定"""
THOST_FTDC_SYT_FutureBankTransfer = _soptthosttraderapi.THOST_FTDC_SYT_FutureBankTransfer
r"""
    TFtdcSystemTypeType是一个应用系统类型类型
    银期转帐
    """
THOST_FTDC_SYT_StockBankTransfer = _soptthosttraderapi.THOST_FTDC_SYT_StockBankTransfer
r"""银证转帐"""
THOST_FTDC_SYT_TheThirdPartStore = _soptthosttraderapi.THOST_FTDC_SYT_TheThirdPartStore
r"""第三方存管"""
THOST_FTDC_TEF_NormalProcessing = _soptthosttraderapi.THOST_FTDC_TEF_NormalProcessing
r"""
    TFtdcTxnEndFlagType是一个银期转帐划转结果标志类型
    正常处理中
    """
THOST_FTDC_TEF_Success = _soptthosttraderapi.THOST_FTDC_TEF_Success
r"""成功结束"""
THOST_FTDC_TEF_Failed = _soptthosttraderapi.THOST_FTDC_TEF_Failed
r"""失败结束"""
THOST_FTDC_TEF_Abnormal = _soptthosttraderapi.THOST_FTDC_TEF_Abnormal
r"""异常中"""
THOST_FTDC_TEF_ManualProcessedForException = _soptthosttraderapi.THOST_FTDC_TEF_ManualProcessedForException
r"""已人工异常处理"""
THOST_FTDC_TEF_CommuFailedNeedManualProcess = _soptthosttraderapi.THOST_FTDC_TEF_CommuFailedNeedManualProcess
r"""通讯异常 ，请人工处理"""
THOST_FTDC_TEF_SysErrorNeedManualProcess = _soptthosttraderapi.THOST_FTDC_TEF_SysErrorNeedManualProcess
r"""系统出错，请人工处理"""
THOST_FTDC_PSS_NotProcess = _soptthosttraderapi.THOST_FTDC_PSS_NotProcess
r"""
    TFtdcProcessStatusType是一个银期转帐服务处理状态类型
    未处理
    """
THOST_FTDC_PSS_StartProcess = _soptthosttraderapi.THOST_FTDC_PSS_StartProcess
r"""开始处理"""
THOST_FTDC_PSS_Finished = _soptthosttraderapi.THOST_FTDC_PSS_Finished
r"""处理完成"""
THOST_FTDC_CUSTT_Person = _soptthosttraderapi.THOST_FTDC_CUSTT_Person
r"""
    TFtdcCustTypeType是一个客户类型类型
    自然人
    """
THOST_FTDC_CUSTT_Institution = _soptthosttraderapi.THOST_FTDC_CUSTT_Institution
r"""机构户"""
THOST_FTDC_FBTTD_FromBankToFuture = _soptthosttraderapi.THOST_FTDC_FBTTD_FromBankToFuture
r"""
    TFtdcFBTTransferDirectionType是一个银期转帐方向类型
    入金，银行转期货
    """
THOST_FTDC_FBTTD_FromFutureToBank = _soptthosttraderapi.THOST_FTDC_FBTTD_FromFutureToBank
r"""出金，期货转银行"""
THOST_FTDC_OOD_Open = _soptthosttraderapi.THOST_FTDC_OOD_Open
r"""
    TFtdcOpenOrDestroyType是一个开销户类别类型
    开户
    """
THOST_FTDC_OOD_Destroy = _soptthosttraderapi.THOST_FTDC_OOD_Destroy
r"""销户"""
THOST_FTDC_OOD_ReserveOpen = _soptthosttraderapi.THOST_FTDC_OOD_ReserveOpen
r"""预约开户"""
THOST_FTDC_OOD_ForceClose = _soptthosttraderapi.THOST_FTDC_OOD_ForceClose
r"""强制销户"""
THOST_FTDC_AVAF_Invalid = _soptthosttraderapi.THOST_FTDC_AVAF_Invalid
r"""
    TFtdcAvailabilityFlagType是一个有效标志类型
    未确认
    """
THOST_FTDC_AVAF_Valid = _soptthosttraderapi.THOST_FTDC_AVAF_Valid
r"""有效"""
THOST_FTDC_AVAF_Repeal = _soptthosttraderapi.THOST_FTDC_AVAF_Repeal
r"""冲正"""
THOST_FTDC_OT_Bank = _soptthosttraderapi.THOST_FTDC_OT_Bank
r"""
    TFtdcOrganTypeType是一个机构类型类型
    银行代理
    """
THOST_FTDC_OT_Future = _soptthosttraderapi.THOST_FTDC_OT_Future
r"""交易前置"""
THOST_FTDC_OT_PlateForm = _soptthosttraderapi.THOST_FTDC_OT_PlateForm
r"""银期转帐平台管理"""
THOST_FTDC_OL_HeadQuarters = _soptthosttraderapi.THOST_FTDC_OL_HeadQuarters
r"""
    TFtdcOrganLevelType是一个机构级别类型
    银行总行或期商总部
    """
THOST_FTDC_OL_Branch = _soptthosttraderapi.THOST_FTDC_OL_Branch
r"""银行分中心或期货公司营业部"""
THOST_FTDC_PID_FutureProtocal = _soptthosttraderapi.THOST_FTDC_PID_FutureProtocal
r"""
    TFtdcProtocalIDType是一个协议类型类型
    期商协议
    """
THOST_FTDC_PID_ICBCProtocal = _soptthosttraderapi.THOST_FTDC_PID_ICBCProtocal
r"""工行协议"""
THOST_FTDC_PID_ABCProtocal = _soptthosttraderapi.THOST_FTDC_PID_ABCProtocal
r"""农行协议"""
THOST_FTDC_PID_CBCProtocal = _soptthosttraderapi.THOST_FTDC_PID_CBCProtocal
r"""中国银行协议"""
THOST_FTDC_PID_CCBProtocal = _soptthosttraderapi.THOST_FTDC_PID_CCBProtocal
r"""建行协议"""
THOST_FTDC_PID_BOCOMProtocal = _soptthosttraderapi.THOST_FTDC_PID_BOCOMProtocal
r"""交行协议"""
THOST_FTDC_PID_FBTPlateFormProtocal = _soptthosttraderapi.THOST_FTDC_PID_FBTPlateFormProtocal
r"""银期转帐平台协议"""
THOST_FTDC_CM_ShortConnect = _soptthosttraderapi.THOST_FTDC_CM_ShortConnect
r"""
    TFtdcConnectModeType是一个套接字连接方式类型
    短连接
    """
THOST_FTDC_CM_LongConnect = _soptthosttraderapi.THOST_FTDC_CM_LongConnect
r"""长连接"""
THOST_FTDC_SRM_ASync = _soptthosttraderapi.THOST_FTDC_SRM_ASync
r"""
    TFtdcSyncModeType是一个套接字通信方式类型
    异步
    """
THOST_FTDC_SRM_Sync = _soptthosttraderapi.THOST_FTDC_SRM_Sync
r"""同步"""
THOST_FTDC_BAT_BankBook = _soptthosttraderapi.THOST_FTDC_BAT_BankBook
r"""
    TFtdcBankAccTypeType是一个银行帐号类型类型
    银行存折
    """
THOST_FTDC_BAT_SavingCard = _soptthosttraderapi.THOST_FTDC_BAT_SavingCard
r"""储蓄卡"""
THOST_FTDC_BAT_CreditCard = _soptthosttraderapi.THOST_FTDC_BAT_CreditCard
r"""信用卡"""
THOST_FTDC_FAT_BankBook = _soptthosttraderapi.THOST_FTDC_FAT_BankBook
r"""
    TFtdcFutureAccTypeType是一个期货公司帐号类型类型
    银行存折
    """
THOST_FTDC_FAT_SavingCard = _soptthosttraderapi.THOST_FTDC_FAT_SavingCard
r"""储蓄卡"""
THOST_FTDC_FAT_CreditCard = _soptthosttraderapi.THOST_FTDC_FAT_CreditCard
r"""信用卡"""
THOST_FTDC_OS_Ready = _soptthosttraderapi.THOST_FTDC_OS_Ready
r"""
    TFtdcOrganStatusType是一个接入机构状态类型
    启用
    """
THOST_FTDC_OS_CheckIn = _soptthosttraderapi.THOST_FTDC_OS_CheckIn
r"""签到"""
THOST_FTDC_OS_CheckOut = _soptthosttraderapi.THOST_FTDC_OS_CheckOut
r"""签退"""
THOST_FTDC_OS_CheckFileArrived = _soptthosttraderapi.THOST_FTDC_OS_CheckFileArrived
r"""对帐文件到达"""
THOST_FTDC_OS_CheckDetail = _soptthosttraderapi.THOST_FTDC_OS_CheckDetail
r"""对帐"""
THOST_FTDC_OS_DayEndClean = _soptthosttraderapi.THOST_FTDC_OS_DayEndClean
r"""日终清理"""
THOST_FTDC_OS_CheckFileReady = _soptthosttraderapi.THOST_FTDC_OS_CheckFileReady
r"""证券对账文件准备好"""
THOST_FTDC_OS_TotalFileArrived = _soptthosttraderapi.THOST_FTDC_OS_TotalFileArrived
r"""总分文件到达"""
THOST_FTDC_OS_SecurityFileSent = _soptthosttraderapi.THOST_FTDC_OS_SecurityFileSent
r"""证券对账文件已发送"""
THOST_FTDC_OS_Invalid = _soptthosttraderapi.THOST_FTDC_OS_Invalid
r"""注销"""
THOST_FTDC_CCBFM_ByAmount = _soptthosttraderapi.THOST_FTDC_CCBFM_ByAmount
r"""
    TFtdcCCBFeeModeType是一个建行收费模式类型
    按金额扣收
    """
THOST_FTDC_CCBFM_ByMonth = _soptthosttraderapi.THOST_FTDC_CCBFM_ByMonth
r"""按月扣收"""
THOST_FTDC_CAPIT_Client = _soptthosttraderapi.THOST_FTDC_CAPIT_Client
r"""
    TFtdcCommApiTypeType是一个通讯API类型类型
    客户端
    """
THOST_FTDC_CAPIT_Server = _soptthosttraderapi.THOST_FTDC_CAPIT_Server
r"""服务端"""
THOST_FTDC_CAPIT_UserApi = _soptthosttraderapi.THOST_FTDC_CAPIT_UserApi
r"""交易系统的UserApi"""
THOST_FTDC_LS_Connected = _soptthosttraderapi.THOST_FTDC_LS_Connected
r"""
    TFtdcLinkStatusType是一个连接状态类型
    已经连接
    """
THOST_FTDC_LS_Disconnected = _soptthosttraderapi.THOST_FTDC_LS_Disconnected
r"""没有连接"""
THOST_FTDC_BPWDF_NoCheck = _soptthosttraderapi.THOST_FTDC_BPWDF_NoCheck
r"""
    TFtdcPwdFlagType是一个密码核对标志类型
    不核对
    """
THOST_FTDC_BPWDF_BlankCheck = _soptthosttraderapi.THOST_FTDC_BPWDF_BlankCheck
r"""明文核对"""
THOST_FTDC_BPWDF_EncryptCheck = _soptthosttraderapi.THOST_FTDC_BPWDF_EncryptCheck
r"""密文核对"""
THOST_FTDC_SAT_AccountID = _soptthosttraderapi.THOST_FTDC_SAT_AccountID
r"""
    TFtdcSecuAccTypeType是一个期货帐号类型类型
    资金帐号
    """
THOST_FTDC_SAT_CardID = _soptthosttraderapi.THOST_FTDC_SAT_CardID
r"""资金卡号"""
THOST_FTDC_SAT_SHStockholderID = _soptthosttraderapi.THOST_FTDC_SAT_SHStockholderID
r"""上海股东帐号"""
THOST_FTDC_SAT_SZStockholderID = _soptthosttraderapi.THOST_FTDC_SAT_SZStockholderID
r"""深圳股东帐号"""
THOST_FTDC_TRFS_Normal = _soptthosttraderapi.THOST_FTDC_TRFS_Normal
r"""
    TFtdcTransferStatusType是一个转账交易状态类型
    正常
    """
THOST_FTDC_TRFS_Repealed = _soptthosttraderapi.THOST_FTDC_TRFS_Repealed
r"""被冲正"""
THOST_FTDC_SPTYPE_Broker = _soptthosttraderapi.THOST_FTDC_SPTYPE_Broker
r"""
    TFtdcSponsorTypeType是一个发起方类型
    期商
    """
THOST_FTDC_SPTYPE_Bank = _soptthosttraderapi.THOST_FTDC_SPTYPE_Bank
r"""银行"""
THOST_FTDC_REQRSP_Request = _soptthosttraderapi.THOST_FTDC_REQRSP_Request
r"""
    TFtdcReqRspTypeType是一个请求响应类别类型
    请求
    """
THOST_FTDC_REQRSP_Response = _soptthosttraderapi.THOST_FTDC_REQRSP_Response
r"""响应"""
THOST_FTDC_FBTUET_SignIn = _soptthosttraderapi.THOST_FTDC_FBTUET_SignIn
r"""
    TFtdcFBTUserEventTypeType是一个银期转帐用户事件类型类型
    签到
    """
THOST_FTDC_FBTUET_FromBankToFuture = _soptthosttraderapi.THOST_FTDC_FBTUET_FromBankToFuture
r"""银行转期货"""
THOST_FTDC_FBTUET_FromFutureToBank = _soptthosttraderapi.THOST_FTDC_FBTUET_FromFutureToBank
r"""期货转银行"""
THOST_FTDC_FBTUET_OpenAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_OpenAccount
r"""开户"""
THOST_FTDC_FBTUET_CancelAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_CancelAccount
r"""销户"""
THOST_FTDC_FBTUET_ChangeAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_ChangeAccount
r"""变更银行账户"""
THOST_FTDC_FBTUET_RepealFromBankToFuture = _soptthosttraderapi.THOST_FTDC_FBTUET_RepealFromBankToFuture
r"""冲正银行转期货"""
THOST_FTDC_FBTUET_RepealFromFutureToBank = _soptthosttraderapi.THOST_FTDC_FBTUET_RepealFromFutureToBank
r"""冲正期货转银行"""
THOST_FTDC_FBTUET_QueryBankAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_QueryBankAccount
r"""查询银行账户"""
THOST_FTDC_FBTUET_QueryFutureAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_QueryFutureAccount
r"""查询期货账户"""
THOST_FTDC_FBTUET_SignOut = _soptthosttraderapi.THOST_FTDC_FBTUET_SignOut
r"""签退"""
THOST_FTDC_FBTUET_SyncKey = _soptthosttraderapi.THOST_FTDC_FBTUET_SyncKey
r"""密钥同步"""
THOST_FTDC_FBTUET_ReserveOpenAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_ReserveOpenAccount
r"""预指定开户"""
THOST_FTDC_FBTUET_ReserveOpenAccountConfirm = _soptthosttraderapi.THOST_FTDC_FBTUET_ReserveOpenAccountConfirm
r"""预指定开户确认"""
THOST_FTDC_FBTUET_SecuritiesDepositInterest = _soptthosttraderapi.THOST_FTDC_FBTUET_SecuritiesDepositInterest
r"""销户结息"""
THOST_FTDC_FBTUET_DayEndFileReady = _soptthosttraderapi.THOST_FTDC_FBTUET_DayEndFileReady
r"""日终文件就绪"""
THOST_FTDC_FBTUET_CancelReserveOpenAccount = _soptthosttraderapi.THOST_FTDC_FBTUET_CancelReserveOpenAccount
r"""撤销预约开户"""
THOST_FTDC_FBTUET_Other = _soptthosttraderapi.THOST_FTDC_FBTUET_Other
r"""其他"""
THOST_FTDC_DBOP_Insert = _soptthosttraderapi.THOST_FTDC_DBOP_Insert
r"""
    TFtdcDBOperationType是一个记录操作类型类型
    插入
    """
THOST_FTDC_DBOP_Update = _soptthosttraderapi.THOST_FTDC_DBOP_Update
r"""更新"""
THOST_FTDC_DBOP_Delete = _soptthosttraderapi.THOST_FTDC_DBOP_Delete
r"""删除"""
THOST_FTDC_SYNF_Yes = _soptthosttraderapi.THOST_FTDC_SYNF_Yes
r"""
    TFtdcSyncFlagType是一个同步标记类型
    已同步
    """
THOST_FTDC_SYNF_No = _soptthosttraderapi.THOST_FTDC_SYNF_No
r"""未同步"""
THOST_FTDC_SYNT_OneOffSync = _soptthosttraderapi.THOST_FTDC_SYNT_OneOffSync
r"""
    TFtdcSyncTypeType是一个同步类型类型
    一次同步
    """
THOST_FTDC_SYNT_TimerSync = _soptthosttraderapi.THOST_FTDC_SYNT_TimerSync
r"""定时同步"""
THOST_FTDC_SYNT_TimerFullSync = _soptthosttraderapi.THOST_FTDC_SYNT_TimerFullSync
r"""定时完全同步"""
THOST_FTDC_FBEDIR_Settlement = _soptthosttraderapi.THOST_FTDC_FBEDIR_Settlement
r"""
    TFtdcExDirectionType是一个换汇方向类型
    结汇
    """
THOST_FTDC_FBEDIR_Sale = _soptthosttraderapi.THOST_FTDC_FBEDIR_Sale
r"""售汇"""
THOST_FTDC_FBERES_Success = _soptthosttraderapi.THOST_FTDC_FBERES_Success
r"""
    TFtdcFBEResultFlagType是一个换汇成功标志类型
    成功
    """
THOST_FTDC_FBERES_InsufficientBalance = _soptthosttraderapi.THOST_FTDC_FBERES_InsufficientBalance
r"""账户余额不足"""
THOST_FTDC_FBERES_UnknownTrading = _soptthosttraderapi.THOST_FTDC_FBERES_UnknownTrading
r"""交易结果未知"""
THOST_FTDC_FBERES_Fail = _soptthosttraderapi.THOST_FTDC_FBERES_Fail
r"""失败"""
THOST_FTDC_FBEES_Normal = _soptthosttraderapi.THOST_FTDC_FBEES_Normal
r"""
    TFtdcFBEExchStatusType是一个换汇交易状态类型
    正常
    """
THOST_FTDC_FBEES_ReExchange = _soptthosttraderapi.THOST_FTDC_FBEES_ReExchange
r"""交易重发"""
THOST_FTDC_FBEFG_DataPackage = _soptthosttraderapi.THOST_FTDC_FBEFG_DataPackage
r"""
    TFtdcFBEFileFlagType是一个换汇文件标志类型
    数据包
    """
THOST_FTDC_FBEFG_File = _soptthosttraderapi.THOST_FTDC_FBEFG_File
r"""文件"""
THOST_FTDC_FBEAT_NotTrade = _soptthosttraderapi.THOST_FTDC_FBEAT_NotTrade
r"""
    TFtdcFBEAlreadyTradeType是一个换汇已交易标志类型
    未交易
    """
THOST_FTDC_FBEAT_Trade = _soptthosttraderapi.THOST_FTDC_FBEAT_Trade
r"""已交易"""
THOST_FTDC_FBEUET_SignIn = _soptthosttraderapi.THOST_FTDC_FBEUET_SignIn
r"""
    TFtdcFBEUserEventTypeType是一个银期换汇用户事件类型类型
    签到
    """
THOST_FTDC_FBEUET_Exchange = _soptthosttraderapi.THOST_FTDC_FBEUET_Exchange
r"""换汇"""
THOST_FTDC_FBEUET_ReExchange = _soptthosttraderapi.THOST_FTDC_FBEUET_ReExchange
r"""换汇重发"""
THOST_FTDC_FBEUET_QueryBankAccount = _soptthosttraderapi.THOST_FTDC_FBEUET_QueryBankAccount
r"""银行账户查询"""
THOST_FTDC_FBEUET_QueryExchDetial = _soptthosttraderapi.THOST_FTDC_FBEUET_QueryExchDetial
r"""换汇明细查询"""
THOST_FTDC_FBEUET_QueryExchSummary = _soptthosttraderapi.THOST_FTDC_FBEUET_QueryExchSummary
r"""换汇汇总查询"""
THOST_FTDC_FBEUET_QueryExchRate = _soptthosttraderapi.THOST_FTDC_FBEUET_QueryExchRate
r"""换汇汇率查询"""
THOST_FTDC_FBEUET_CheckBankAccount = _soptthosttraderapi.THOST_FTDC_FBEUET_CheckBankAccount
r"""对账文件通知"""
THOST_FTDC_FBEUET_SignOut = _soptthosttraderapi.THOST_FTDC_FBEUET_SignOut
r"""签退"""
THOST_FTDC_FBEUET_Other = _soptthosttraderapi.THOST_FTDC_FBEUET_Other
r"""其他"""
THOST_FTDC_FBERF_UnProcessed = _soptthosttraderapi.THOST_FTDC_FBERF_UnProcessed
r"""
    TFtdcFBEReqFlagType是一个换汇发送标志类型
    未处理
    """
THOST_FTDC_FBERF_WaitSend = _soptthosttraderapi.THOST_FTDC_FBERF_WaitSend
r"""等待发送"""
THOST_FTDC_FBERF_SendSuccess = _soptthosttraderapi.THOST_FTDC_FBERF_SendSuccess
r"""发送成功"""
THOST_FTDC_FBERF_SendFailed = _soptthosttraderapi.THOST_FTDC_FBERF_SendFailed
r"""发送失败"""
THOST_FTDC_FBERF_WaitReSend = _soptthosttraderapi.THOST_FTDC_FBERF_WaitReSend
r"""等待重发"""
THOST_FTDC_NC_NOERROR = _soptthosttraderapi.THOST_FTDC_NC_NOERROR
r"""
    TFtdcNotifyClassType是一个风险通知类型类型
    正常
    """
THOST_FTDC_NC_Warn = _soptthosttraderapi.THOST_FTDC_NC_Warn
r"""警示"""
THOST_FTDC_NC_Call = _soptthosttraderapi.THOST_FTDC_NC_Call
r"""追保"""
THOST_FTDC_NC_Force = _soptthosttraderapi.THOST_FTDC_NC_Force
r"""强平"""
THOST_FTDC_NC_CHUANCANG = _soptthosttraderapi.THOST_FTDC_NC_CHUANCANG
r"""穿仓"""
THOST_FTDC_NC_Exception = _soptthosttraderapi.THOST_FTDC_NC_Exception
r"""异常"""
THOST_FTDC_FCT_Manual = _soptthosttraderapi.THOST_FTDC_FCT_Manual
r"""
    TFtdcForceCloseTypeType是一个强平单类型类型
    手工强平
    """
THOST_FTDC_FCT_Single = _soptthosttraderapi.THOST_FTDC_FCT_Single
r"""单一投资者辅助强平"""
THOST_FTDC_FCT_Group = _soptthosttraderapi.THOST_FTDC_FCT_Group
r"""批量投资者辅助强平"""
THOST_FTDC_RNM_System = _soptthosttraderapi.THOST_FTDC_RNM_System
r"""
    TFtdcRiskNotifyMethodType是一个风险通知途径类型
    系统通知
    """
THOST_FTDC_RNM_SMS = _soptthosttraderapi.THOST_FTDC_RNM_SMS
r"""短信通知"""
THOST_FTDC_RNM_EMail = _soptthosttraderapi.THOST_FTDC_RNM_EMail
r"""邮件通知"""
THOST_FTDC_RNM_Manual = _soptthosttraderapi.THOST_FTDC_RNM_Manual
r"""人工通知"""
THOST_FTDC_RNS_NotGen = _soptthosttraderapi.THOST_FTDC_RNS_NotGen
r"""
    TFtdcRiskNotifyStatusType是一个风险通知状态类型
    未生成
    """
THOST_FTDC_RNS_Generated = _soptthosttraderapi.THOST_FTDC_RNS_Generated
r"""已生成未发送"""
THOST_FTDC_RNS_SendError = _soptthosttraderapi.THOST_FTDC_RNS_SendError
r"""发送失败"""
THOST_FTDC_RNS_SendOk = _soptthosttraderapi.THOST_FTDC_RNS_SendOk
r"""已发送未接收"""
THOST_FTDC_RNS_Received = _soptthosttraderapi.THOST_FTDC_RNS_Received
r"""已接收未确认"""
THOST_FTDC_RNS_Confirmed = _soptthosttraderapi.THOST_FTDC_RNS_Confirmed
r"""已确认"""
THOST_FTDC_RUE_ExportData = _soptthosttraderapi.THOST_FTDC_RUE_ExportData
r"""
    TFtdcRiskUserEventType是一个风控用户操作事件类型
    导出数据
    """
THOST_FTDC_COST_LastPriceAsc = _soptthosttraderapi.THOST_FTDC_COST_LastPriceAsc
r"""
    TFtdcConditionalOrderSortTypeType是一个条件单索引条件类型
    使用最新价升序
    """
THOST_FTDC_COST_LastPriceDesc = _soptthosttraderapi.THOST_FTDC_COST_LastPriceDesc
r"""使用最新价降序"""
THOST_FTDC_COST_AskPriceAsc = _soptthosttraderapi.THOST_FTDC_COST_AskPriceAsc
r"""使用卖价升序"""
THOST_FTDC_COST_AskPriceDesc = _soptthosttraderapi.THOST_FTDC_COST_AskPriceDesc
r"""使用卖价降序"""
THOST_FTDC_COST_BidPriceAsc = _soptthosttraderapi.THOST_FTDC_COST_BidPriceAsc
r"""使用买价升序"""
THOST_FTDC_COST_BidPriceDesc = _soptthosttraderapi.THOST_FTDC_COST_BidPriceDesc
r"""使用买价降序"""
THOST_FTDC_UOAST_NoSend = _soptthosttraderapi.THOST_FTDC_UOAST_NoSend
r"""
    TFtdcSendTypeType是一个报送状态类型
    未发送
    """
THOST_FTDC_UOAST_Sended = _soptthosttraderapi.THOST_FTDC_UOAST_Sended
r"""已发送"""
THOST_FTDC_UOAST_Generated = _soptthosttraderapi.THOST_FTDC_UOAST_Generated
r"""已生成"""
THOST_FTDC_UOAST_SendFail = _soptthosttraderapi.THOST_FTDC_UOAST_SendFail
r"""报送失败"""
THOST_FTDC_UOAST_Success = _soptthosttraderapi.THOST_FTDC_UOAST_Success
r"""接收成功"""
THOST_FTDC_UOAST_Fail = _soptthosttraderapi.THOST_FTDC_UOAST_Fail
r"""接收失败"""
THOST_FTDC_UOAST_Cancel = _soptthosttraderapi.THOST_FTDC_UOAST_Cancel
r"""取消报送"""
THOST_FTDC_UOACS_NoApply = _soptthosttraderapi.THOST_FTDC_UOACS_NoApply
r"""
    TFtdcClientIDStatusType是一个交易编码状态类型
    未申请
    """
THOST_FTDC_UOACS_Submited = _soptthosttraderapi.THOST_FTDC_UOACS_Submited
r"""已提交申请"""
THOST_FTDC_UOACS_Sended = _soptthosttraderapi.THOST_FTDC_UOACS_Sended
r"""已发送申请"""
THOST_FTDC_UOACS_Success = _soptthosttraderapi.THOST_FTDC_UOACS_Success
r"""完成"""
THOST_FTDC_UOACS_Refuse = _soptthosttraderapi.THOST_FTDC_UOACS_Refuse
r"""拒绝"""
THOST_FTDC_UOACS_Cancel = _soptthosttraderapi.THOST_FTDC_UOACS_Cancel
r"""已撤销编码"""
THOST_FTDC_QT_Radio = _soptthosttraderapi.THOST_FTDC_QT_Radio
r"""
    TFtdcQuestionTypeType是一个特有信息类型类型
    单选
    """
THOST_FTDC_QT_Option = _soptthosttraderapi.THOST_FTDC_QT_Option
r"""多选"""
THOST_FTDC_QT_Blank = _soptthosttraderapi.THOST_FTDC_QT_Blank
r"""填空"""
THOST_FTDC_BT_Request = _soptthosttraderapi.THOST_FTDC_BT_Request
r"""
    TFtdcBusinessTypeType是一个业务类型类型
    请求
    """
THOST_FTDC_BT_Response = _soptthosttraderapi.THOST_FTDC_BT_Response
r"""应答"""
THOST_FTDC_BT_Notice = _soptthosttraderapi.THOST_FTDC_BT_Notice
r"""通知"""
THOST_FTDC_CRC_Success = _soptthosttraderapi.THOST_FTDC_CRC_Success
r"""
    TFtdcCfmmcReturnCodeType是一个监控中心返回码类型
    成功
    """
THOST_FTDC_CRC_Working = _soptthosttraderapi.THOST_FTDC_CRC_Working
r"""该客户已经有流程在处理中"""
THOST_FTDC_CRC_InfoFail = _soptthosttraderapi.THOST_FTDC_CRC_InfoFail
r"""监控中客户资料检查失败"""
THOST_FTDC_CRC_IDCardFail = _soptthosttraderapi.THOST_FTDC_CRC_IDCardFail
r"""监控中实名制检查失败"""
THOST_FTDC_CRC_OtherFail = _soptthosttraderapi.THOST_FTDC_CRC_OtherFail
r"""其他错误"""
THOST_FTDC_CfMMCCT_All = _soptthosttraderapi.THOST_FTDC_CfMMCCT_All
r"""
    TFtdcClientTypeType是一个客户类型类型
    所有
    """
THOST_FTDC_CfMMCCT_Person = _soptthosttraderapi.THOST_FTDC_CfMMCCT_Person
r"""个人"""
THOST_FTDC_CfMMCCT_Company = _soptthosttraderapi.THOST_FTDC_CfMMCCT_Company
r"""单位"""
THOST_FTDC_CfMMCCT_Other = _soptthosttraderapi.THOST_FTDC_CfMMCCT_Other
r"""其他"""
THOST_FTDC_CfMMCCT_SpecialOrgan = _soptthosttraderapi.THOST_FTDC_CfMMCCT_SpecialOrgan
r"""特殊法人"""
THOST_FTDC_CfMMCCT_Asset = _soptthosttraderapi.THOST_FTDC_CfMMCCT_Asset
r"""资管户"""
THOST_FTDC_EIDT_SHFE = _soptthosttraderapi.THOST_FTDC_EIDT_SHFE
r"""
    TFtdcExchangeIDTypeType是一个交易所编号类型
    上海期货交易所
    """
THOST_FTDC_EIDT_CZCE = _soptthosttraderapi.THOST_FTDC_EIDT_CZCE
r"""郑州商品交易所"""
THOST_FTDC_EIDT_DCE = _soptthosttraderapi.THOST_FTDC_EIDT_DCE
r"""大连商品交易所"""
THOST_FTDC_EIDT_CFFEX = _soptthosttraderapi.THOST_FTDC_EIDT_CFFEX
r"""中国金融期货交易所"""
THOST_FTDC_EIDT_INE = _soptthosttraderapi.THOST_FTDC_EIDT_INE
r"""上海国际能源交易中心股份有限公司"""
THOST_FTDC_EIDT_SSE = _soptthosttraderapi.THOST_FTDC_EIDT_SSE
r"""上海证券交易所"""
THOST_FTDC_EIDT_SZSE = _soptthosttraderapi.THOST_FTDC_EIDT_SZSE
r"""深圳证券交易所"""
THOST_FTDC_ECIDT_Hedge = _soptthosttraderapi.THOST_FTDC_ECIDT_Hedge
r"""
    TFtdcExClientIDTypeType是一个交易编码类型类型
    套保
    """
THOST_FTDC_ECIDT_Arbitrage = _soptthosttraderapi.THOST_FTDC_ECIDT_Arbitrage
r"""套利"""
THOST_FTDC_ECIDT_Speculation = _soptthosttraderapi.THOST_FTDC_ECIDT_Speculation
r"""投机"""
THOST_FTDC_UF_NoUpdate = _soptthosttraderapi.THOST_FTDC_UF_NoUpdate
r"""
    TFtdcUpdateFlagType是一个更新状态类型
    未更新
    """
THOST_FTDC_UF_Success = _soptthosttraderapi.THOST_FTDC_UF_Success
r"""更新全部信息成功"""
THOST_FTDC_UF_Fail = _soptthosttraderapi.THOST_FTDC_UF_Fail
r"""更新全部信息失败"""
THOST_FTDC_UF_TCSuccess = _soptthosttraderapi.THOST_FTDC_UF_TCSuccess
r"""更新交易编码成功"""
THOST_FTDC_UF_TCFail = _soptthosttraderapi.THOST_FTDC_UF_TCFail
r"""更新交易编码失败"""
THOST_FTDC_UF_Cancel = _soptthosttraderapi.THOST_FTDC_UF_Cancel
r"""已丢弃"""
THOST_FTDC_AOID_OpenInvestor = _soptthosttraderapi.THOST_FTDC_AOID_OpenInvestor
r"""
    TFtdcApplyOperateIDType是一个申请动作类型
    开户
    """
THOST_FTDC_AOID_ModifyIDCard = _soptthosttraderapi.THOST_FTDC_AOID_ModifyIDCard
r"""修改身份信息"""
THOST_FTDC_AOID_ModifyNoIDCard = _soptthosttraderapi.THOST_FTDC_AOID_ModifyNoIDCard
r"""修改一般信息"""
THOST_FTDC_AOID_ApplyTradingCode = _soptthosttraderapi.THOST_FTDC_AOID_ApplyTradingCode
r"""申请交易编码"""
THOST_FTDC_AOID_CancelTradingCode = _soptthosttraderapi.THOST_FTDC_AOID_CancelTradingCode
r"""撤销交易编码"""
THOST_FTDC_AOID_CancelInvestor = _soptthosttraderapi.THOST_FTDC_AOID_CancelInvestor
r"""销户"""
THOST_FTDC_AOID_FreezeAccount = _soptthosttraderapi.THOST_FTDC_AOID_FreezeAccount
r"""账户休眠"""
THOST_FTDC_AOID_ActiveFreezeAccount = _soptthosttraderapi.THOST_FTDC_AOID_ActiveFreezeAccount
r"""激活休眠账户"""
THOST_FTDC_ASID_NoComplete = _soptthosttraderapi.THOST_FTDC_ASID_NoComplete
r"""
    TFtdcApplyStatusIDType是一个申请状态类型
    未补全
    """
THOST_FTDC_ASID_Submited = _soptthosttraderapi.THOST_FTDC_ASID_Submited
r"""已提交"""
THOST_FTDC_ASID_Checked = _soptthosttraderapi.THOST_FTDC_ASID_Checked
r"""已审核"""
THOST_FTDC_ASID_Refused = _soptthosttraderapi.THOST_FTDC_ASID_Refused
r"""已拒绝"""
THOST_FTDC_ASID_Deleted = _soptthosttraderapi.THOST_FTDC_ASID_Deleted
r"""已删除"""
THOST_FTDC_UOASM_ByAPI = _soptthosttraderapi.THOST_FTDC_UOASM_ByAPI
r"""
    TFtdcSendMethodType是一个发送方式类型
    文件发送
    """
THOST_FTDC_UOASM_ByFile = _soptthosttraderapi.THOST_FTDC_UOASM_ByFile
r"""电子发送"""
THOST_FTDC_EvM_ADD = _soptthosttraderapi.THOST_FTDC_EvM_ADD
r"""
    TFtdcEventModeType是一个操作方法类型
    增加
    """
THOST_FTDC_EvM_UPDATE = _soptthosttraderapi.THOST_FTDC_EvM_UPDATE
r"""修改"""
THOST_FTDC_EvM_DELETE = _soptthosttraderapi.THOST_FTDC_EvM_DELETE
r"""删除"""
THOST_FTDC_EvM_CHECK = _soptthosttraderapi.THOST_FTDC_EvM_CHECK
r"""复核"""
THOST_FTDC_EvM_COPY = _soptthosttraderapi.THOST_FTDC_EvM_COPY
r"""复制"""
THOST_FTDC_EvM_CANCEL = _soptthosttraderapi.THOST_FTDC_EvM_CANCEL
r"""注销"""
THOST_FTDC_EvM_Reverse = _soptthosttraderapi.THOST_FTDC_EvM_Reverse
r"""冲销"""
THOST_FTDC_UOAA_ASR = _soptthosttraderapi.THOST_FTDC_UOAA_ASR
r"""
    TFtdcUOAAutoSendType是一个统一开户申请自动发送类型
    自动发送并接收
    """
THOST_FTDC_UOAA_ASNR = _soptthosttraderapi.THOST_FTDC_UOAA_ASNR
r"""自动发送，不自动接收"""
THOST_FTDC_UOAA_NSAR = _soptthosttraderapi.THOST_FTDC_UOAA_NSAR
r"""不自动发送，自动接收"""
THOST_FTDC_UOAA_NSR = _soptthosttraderapi.THOST_FTDC_UOAA_NSR
r"""不自动发送，也不自动接收"""
THOST_FTDC_EvM_InvestorGroupFlow = _soptthosttraderapi.THOST_FTDC_EvM_InvestorGroupFlow
r"""
    TFtdcFlowIDType是一个流程ID类型
    投资者对应投资者组设置
    """
THOST_FTDC_EvM_InvestorRate = _soptthosttraderapi.THOST_FTDC_EvM_InvestorRate
r"""投资者手续费率设置"""
THOST_FTDC_EvM_InvestorCommRateModel = _soptthosttraderapi.THOST_FTDC_EvM_InvestorCommRateModel
r"""投资者手续费率模板关系设置"""
THOST_FTDC_CL_Zero = _soptthosttraderapi.THOST_FTDC_CL_Zero
r"""
    TFtdcCheckLevelType是一个复核级别类型
    零级复核
    """
THOST_FTDC_CL_One = _soptthosttraderapi.THOST_FTDC_CL_One
r"""一级复核"""
THOST_FTDC_CL_Two = _soptthosttraderapi.THOST_FTDC_CL_Two
r"""二级复核"""
THOST_FTDC_CHS_Init = _soptthosttraderapi.THOST_FTDC_CHS_Init
r"""
    TFtdcCheckStatusType是一个复核级别类型
    未复核
    """
THOST_FTDC_CHS_Checking = _soptthosttraderapi.THOST_FTDC_CHS_Checking
r"""复核中"""
THOST_FTDC_CHS_Checked = _soptthosttraderapi.THOST_FTDC_CHS_Checked
r"""已复核"""
THOST_FTDC_CHS_Refuse = _soptthosttraderapi.THOST_FTDC_CHS_Refuse
r"""拒绝"""
THOST_FTDC_CHS_Cancel = _soptthosttraderapi.THOST_FTDC_CHS_Cancel
r"""作废"""
THOST_FTDC_CHU_Unused = _soptthosttraderapi.THOST_FTDC_CHU_Unused
r"""
    TFtdcUsedStatusType是一个生效状态类型
    未生效
    """
THOST_FTDC_CHU_Used = _soptthosttraderapi.THOST_FTDC_CHU_Used
r"""已生效"""
THOST_FTDC_CHU_Fail = _soptthosttraderapi.THOST_FTDC_CHU_Fail
r"""生效失败"""
THOST_FTDC_BAO_ByAccProperty = _soptthosttraderapi.THOST_FTDC_BAO_ByAccProperty
r"""
    TFtdcBankAcountOriginType是一个账户来源类型
    手工录入
    """
THOST_FTDC_BAO_ByFBTransfer = _soptthosttraderapi.THOST_FTDC_BAO_ByFBTransfer
r"""银期转账"""
THOST_FTDC_MBTS_ByInstrument = _soptthosttraderapi.THOST_FTDC_MBTS_ByInstrument
r"""
    TFtdcMonthBillTradeSumType是一个结算单月报成交汇总方式类型
    同日同合约
    """
THOST_FTDC_MBTS_ByDayInsPrc = _soptthosttraderapi.THOST_FTDC_MBTS_ByDayInsPrc
r"""同日同合约同价格"""
THOST_FTDC_MBTS_ByDayIns = _soptthosttraderapi.THOST_FTDC_MBTS_ByDayIns
r"""同合约"""
THOST_FTDC_OTP_NONE = _soptthosttraderapi.THOST_FTDC_OTP_NONE
r"""
    TFtdcOTPTypeType是一个动态令牌类型类型
    无动态令牌
    """
THOST_FTDC_OTP_TOTP = _soptthosttraderapi.THOST_FTDC_OTP_TOTP
r"""时间令牌"""
THOST_FTDC_OTPS_Unused = _soptthosttraderapi.THOST_FTDC_OTPS_Unused
r"""
    TFtdcOTPStatusType是一个动态令牌状态类型
    未使用
    """
THOST_FTDC_OTPS_Used = _soptthosttraderapi.THOST_FTDC_OTPS_Used
r"""已使用"""
THOST_FTDC_OTPS_Disuse = _soptthosttraderapi.THOST_FTDC_OTPS_Disuse
r"""注销"""
THOST_FTDC_BUT_Investor = _soptthosttraderapi.THOST_FTDC_BUT_Investor
r"""
    TFtdcBrokerUserTypeType是一个经济公司用户类型类型
    投资者
    """
THOST_FTDC_BUT_BrokerUser = _soptthosttraderapi.THOST_FTDC_BUT_BrokerUser
r"""操作员"""
THOST_FTDC_FUTT_Commodity = _soptthosttraderapi.THOST_FTDC_FUTT_Commodity
r"""
    TFtdcFutureTypeType是一个期货类型类型
    商品期货
    """
THOST_FTDC_FUTT_Financial = _soptthosttraderapi.THOST_FTDC_FUTT_Financial
r"""金融期货"""
THOST_FTDC_FET_Restriction = _soptthosttraderapi.THOST_FTDC_FET_Restriction
r"""
    TFtdcFundEventTypeType是一个资金管理操作类型类型
    转账限额
    """
THOST_FTDC_FET_TodayRestriction = _soptthosttraderapi.THOST_FTDC_FET_TodayRestriction
r"""当日转账限额"""
THOST_FTDC_FET_Transfer = _soptthosttraderapi.THOST_FTDC_FET_Transfer
r"""期商流水"""
THOST_FTDC_FET_Credit = _soptthosttraderapi.THOST_FTDC_FET_Credit
r"""资金冻结"""
THOST_FTDC_FET_InvestorWithdrawAlm = _soptthosttraderapi.THOST_FTDC_FET_InvestorWithdrawAlm
r"""投资者可提资金比例"""
THOST_FTDC_FET_BankRestriction = _soptthosttraderapi.THOST_FTDC_FET_BankRestriction
r"""单个银行帐户转账限额"""
THOST_FTDC_FET_Accountregister = _soptthosttraderapi.THOST_FTDC_FET_Accountregister
r"""银期签约账户"""
THOST_FTDC_FET_ExchangeFundIO = _soptthosttraderapi.THOST_FTDC_FET_ExchangeFundIO
r"""交易所出入金"""
THOST_FTDC_FET_InvestorFundIO = _soptthosttraderapi.THOST_FTDC_FET_InvestorFundIO
r"""投资者出入金"""
THOST_FTDC_AST_FBTransfer = _soptthosttraderapi.THOST_FTDC_AST_FBTransfer
r"""
    TFtdcAccountSourceTypeType是一个资金账户来源类型
    银期同步
    """
THOST_FTDC_AST_ManualEntry = _soptthosttraderapi.THOST_FTDC_AST_ManualEntry
r"""手工录入"""
THOST_FTDC_CST_UnifyAccount = _soptthosttraderapi.THOST_FTDC_CST_UnifyAccount
r"""
    TFtdcCodeSourceTypeType是一个交易编码来源类型
    统一开户(已规范)
    """
THOST_FTDC_CST_ManualEntry = _soptthosttraderapi.THOST_FTDC_CST_ManualEntry
r"""手工录入(未规范)"""
THOST_FTDC_UR_All = _soptthosttraderapi.THOST_FTDC_UR_All
r"""
    TFtdcUserRangeType是一个操作员范围类型
    所有
    """
THOST_FTDC_UR_Single = _soptthosttraderapi.THOST_FTDC_UR_Single
r"""单一操作员"""
THOST_FTDC_BG_Investor = _soptthosttraderapi.THOST_FTDC_BG_Investor
r"""
    TFtdcByGroupType是一个交易统计表按客户统计方式类型
    按投资者统计
    """
THOST_FTDC_BG_Group = _soptthosttraderapi.THOST_FTDC_BG_Group
r"""按类统计"""
THOST_FTDC_TSSM_Instrument = _soptthosttraderapi.THOST_FTDC_TSSM_Instrument
r"""
    TFtdcTradeSumStatModeType是一个交易统计表按范围统计方式类型
    按合约统计
    """
THOST_FTDC_TSSM_Product = _soptthosttraderapi.THOST_FTDC_TSSM_Product
r"""按产品统计"""
THOST_FTDC_TSSM_Exchange = _soptthosttraderapi.THOST_FTDC_TSSM_Exchange
r"""按交易所统计"""
THOST_FTDC_ESM_Relative = _soptthosttraderapi.THOST_FTDC_ESM_Relative
r"""
    TFtdcExprSetModeType是一个日期表达式设置类型类型
    相对已有规则设置
    """
THOST_FTDC_ESM_Typical = _soptthosttraderapi.THOST_FTDC_ESM_Typical
r"""典型设置"""
THOST_FTDC_RIR_All = _soptthosttraderapi.THOST_FTDC_RIR_All
r"""
    TFtdcRateInvestorRangeType是一个投资者范围类型
    公司标准
    """
THOST_FTDC_RIR_Model = _soptthosttraderapi.THOST_FTDC_RIR_Model
r"""模板"""
THOST_FTDC_RIR_Single = _soptthosttraderapi.THOST_FTDC_RIR_Single
r"""单一投资者"""
THOST_FTDC_SDS_Initialize = _soptthosttraderapi.THOST_FTDC_SDS_Initialize
r"""
    TFtdcSyncDataStatusType是一个主次用系统数据同步状态类型
    未同步
    """
THOST_FTDC_SDS_Settlementing = _soptthosttraderapi.THOST_FTDC_SDS_Settlementing
r"""同步中"""
THOST_FTDC_SDS_Settlemented = _soptthosttraderapi.THOST_FTDC_SDS_Settlemented
r"""已同步"""
THOST_FTDC_TSRC_NORMAL = _soptthosttraderapi.THOST_FTDC_TSRC_NORMAL
r"""
    TFtdcTradeSourceType是一个成交来源类型
    来自交易所普通回报
    """
THOST_FTDC_TSRC_QUERY = _soptthosttraderapi.THOST_FTDC_TSRC_QUERY
r"""来自查询"""
THOST_FTDC_FSM_Product = _soptthosttraderapi.THOST_FTDC_FSM_Product
r"""
    TFtdcFlexStatModeType是一个产品合约统计方式类型
    产品统计
    """
THOST_FTDC_FSM_Exchange = _soptthosttraderapi.THOST_FTDC_FSM_Exchange
r"""交易所统计"""
THOST_FTDC_FSM_All = _soptthosttraderapi.THOST_FTDC_FSM_All
r"""统计所有"""
THOST_FTDC_BIR_Property = _soptthosttraderapi.THOST_FTDC_BIR_Property
r"""
    TFtdcByInvestorRangeType是一个投资者范围统计方式类型
    属性统计
    """
THOST_FTDC_BIR_All = _soptthosttraderapi.THOST_FTDC_BIR_All
r"""统计所有"""
THOST_FTDC_PIR_All = _soptthosttraderapi.THOST_FTDC_PIR_All
r"""
    TFtdcPropertyInvestorRangeType是一个投资者范围类型
    所有
    """
THOST_FTDC_PIR_Property = _soptthosttraderapi.THOST_FTDC_PIR_Property
r"""投资者属性"""
THOST_FTDC_PIR_Single = _soptthosttraderapi.THOST_FTDC_PIR_Single
r"""单一投资者"""
THOST_FTDC_FIS_NoCreate = _soptthosttraderapi.THOST_FTDC_FIS_NoCreate
r"""
    TFtdcFileStatusType是一个文件状态类型
    未生成
    """
THOST_FTDC_FIS_Created = _soptthosttraderapi.THOST_FTDC_FIS_Created
r"""已生成"""
THOST_FTDC_FIS_Failed = _soptthosttraderapi.THOST_FTDC_FIS_Failed
r"""生成失败"""
THOST_FTDC_FGS_FileTransmit = _soptthosttraderapi.THOST_FTDC_FGS_FileTransmit
r"""
    TFtdcFileGenStyleType是一个文件生成方式类型
    下发
    """
THOST_FTDC_FGS_FileGen = _soptthosttraderapi.THOST_FTDC_FGS_FileGen
r"""生成"""
THOST_FTDC_SoM_Add = _soptthosttraderapi.THOST_FTDC_SoM_Add
r"""
    TFtdcSysOperModeType是一个系统日志操作方法类型
    增加
    """
THOST_FTDC_SoM_Update = _soptthosttraderapi.THOST_FTDC_SoM_Update
r"""修改"""
THOST_FTDC_SoM_Delete = _soptthosttraderapi.THOST_FTDC_SoM_Delete
r"""删除"""
THOST_FTDC_SoM_Copy = _soptthosttraderapi.THOST_FTDC_SoM_Copy
r"""复制"""
THOST_FTDC_SoM_AcTive = _soptthosttraderapi.THOST_FTDC_SoM_AcTive
r"""激活"""
THOST_FTDC_SoM_CanCel = _soptthosttraderapi.THOST_FTDC_SoM_CanCel
r"""注销"""
THOST_FTDC_SoM_ReSet = _soptthosttraderapi.THOST_FTDC_SoM_ReSet
r"""重置"""
THOST_FTDC_SoT_UpdatePassword = _soptthosttraderapi.THOST_FTDC_SoT_UpdatePassword
r"""
    TFtdcSysOperTypeType是一个系统日志操作类型类型
    修改操作员密码
    """
THOST_FTDC_SoT_UserDepartment = _soptthosttraderapi.THOST_FTDC_SoT_UserDepartment
r"""操作员组织架构关系"""
THOST_FTDC_SoT_RoleManager = _soptthosttraderapi.THOST_FTDC_SoT_RoleManager
r"""角色管理"""
THOST_FTDC_SoT_RoleFunction = _soptthosttraderapi.THOST_FTDC_SoT_RoleFunction
r"""角色功能设置"""
THOST_FTDC_SoT_BaseParam = _soptthosttraderapi.THOST_FTDC_SoT_BaseParam
r"""基础参数设置"""
THOST_FTDC_SoT_SetUserID = _soptthosttraderapi.THOST_FTDC_SoT_SetUserID
r"""设置操作员"""
THOST_FTDC_SoT_SetUserRole = _soptthosttraderapi.THOST_FTDC_SoT_SetUserRole
r"""用户角色设置"""
THOST_FTDC_SoT_UserIpRestriction = _soptthosttraderapi.THOST_FTDC_SoT_UserIpRestriction
r"""用户IP限制"""
THOST_FTDC_SoT_DepartmentManager = _soptthosttraderapi.THOST_FTDC_SoT_DepartmentManager
r"""组织架构管理"""
THOST_FTDC_SoT_DepartmentCopy = _soptthosttraderapi.THOST_FTDC_SoT_DepartmentCopy
r"""组织架构向查询分类复制"""
THOST_FTDC_SoT_Tradingcode = _soptthosttraderapi.THOST_FTDC_SoT_Tradingcode
r"""交易编码管理"""
THOST_FTDC_SoT_InvestorStatus = _soptthosttraderapi.THOST_FTDC_SoT_InvestorStatus
r"""投资者状态维护"""
THOST_FTDC_SoT_InvestorAuthority = _soptthosttraderapi.THOST_FTDC_SoT_InvestorAuthority
r"""投资者权限管理"""
THOST_FTDC_SoT_PropertySet = _soptthosttraderapi.THOST_FTDC_SoT_PropertySet
r"""属性设置"""
THOST_FTDC_SoT_ReSetInvestorPasswd = _soptthosttraderapi.THOST_FTDC_SoT_ReSetInvestorPasswd
r"""重置投资者密码"""
THOST_FTDC_SoT_InvestorPersonalityInfo = _soptthosttraderapi.THOST_FTDC_SoT_InvestorPersonalityInfo
r"""投资者个性信息维护"""
THOST_FTDC_CSRCQ_Current = _soptthosttraderapi.THOST_FTDC_CSRCQ_Current
r"""
    TFtdcCSRCDataQueyTypeType是一个上报数据查询类型类型
    查询当前交易日报送的数据
    """
THOST_FTDC_CSRCQ_History = _soptthosttraderapi.THOST_FTDC_CSRCQ_History
r"""查询历史报送的代理经纪公司的数据"""
THOST_FTDC_FRS_Normal = _soptthosttraderapi.THOST_FTDC_FRS_Normal
r"""
    TFtdcFreezeStatusType是一个休眠状态类型
    活跃
    """
THOST_FTDC_FRS_Freeze = _soptthosttraderapi.THOST_FTDC_FRS_Freeze
r"""休眠"""
THOST_FTDC_STST_Standard = _soptthosttraderapi.THOST_FTDC_STST_Standard
r"""
    TFtdcStandardStatusType是一个规范状态类型
    已规范
    """
THOST_FTDC_STST_NonStandard = _soptthosttraderapi.THOST_FTDC_STST_NonStandard
r"""未规范"""
THOST_FTDC_RPT_Freeze = _soptthosttraderapi.THOST_FTDC_RPT_Freeze
r"""
    TFtdcRightParamTypeType是一个配置类型类型
    休眠户
    """
THOST_FTDC_RPT_FreezeActive = _soptthosttraderapi.THOST_FTDC_RPT_FreezeActive
r"""激活休眠户"""
THOST_FTDC_RPT_OpenLimit = _soptthosttraderapi.THOST_FTDC_RPT_OpenLimit
r"""开仓权限限制"""
THOST_FTDC_RPT_RelieveOpenLimit = _soptthosttraderapi.THOST_FTDC_RPT_RelieveOpenLimit
r"""解除开仓权限限制"""
THOST_FTDC_AMLDS_Normal = _soptthosttraderapi.THOST_FTDC_AMLDS_Normal
r"""
    TFtdcDataStatusType是一个反洗钱审核表数据状态类型
    正常
    """
THOST_FTDC_AMLDS_Deleted = _soptthosttraderapi.THOST_FTDC_AMLDS_Deleted
r"""已删除"""
THOST_FTDC_AMLCHS_Init = _soptthosttraderapi.THOST_FTDC_AMLCHS_Init
r"""
    TFtdcAMLCheckStatusType是一个审核状态类型
    未复核
    """
THOST_FTDC_AMLCHS_Checking = _soptthosttraderapi.THOST_FTDC_AMLCHS_Checking
r"""复核中"""
THOST_FTDC_AMLCHS_Checked = _soptthosttraderapi.THOST_FTDC_AMLCHS_Checked
r"""已复核"""
THOST_FTDC_AMLCHS_RefuseReport = _soptthosttraderapi.THOST_FTDC_AMLCHS_RefuseReport
r"""拒绝上报"""
THOST_FTDC_AMLDT_DrawDay = _soptthosttraderapi.THOST_FTDC_AMLDT_DrawDay
r"""
    TFtdcAmlDateTypeType是一个日期类型类型
    检查日期
    """
THOST_FTDC_AMLDT_TouchDay = _soptthosttraderapi.THOST_FTDC_AMLDT_TouchDay
r"""发生日期"""
THOST_FTDC_AMLCL_CheckLevel0 = _soptthosttraderapi.THOST_FTDC_AMLCL_CheckLevel0
r"""
    TFtdcAmlCheckLevelType是一个审核级别类型
    零级审核
    """
THOST_FTDC_AMLCL_CheckLevel1 = _soptthosttraderapi.THOST_FTDC_AMLCL_CheckLevel1
r"""一级审核"""
THOST_FTDC_AMLCL_CheckLevel2 = _soptthosttraderapi.THOST_FTDC_AMLCL_CheckLevel2
r"""二级审核"""
THOST_FTDC_AMLCL_CheckLevel3 = _soptthosttraderapi.THOST_FTDC_AMLCL_CheckLevel3
r"""三级审核"""
THOST_FTDC_EFT_CSV = _soptthosttraderapi.THOST_FTDC_EFT_CSV
r"""
    TFtdcExportFileTypeType是一个导出文件类型类型
    CSV
    """
THOST_FTDC_EFT_EXCEL = _soptthosttraderapi.THOST_FTDC_EFT_EXCEL
r"""Excel"""
THOST_FTDC_EFT_DBF = _soptthosttraderapi.THOST_FTDC_EFT_DBF
r"""DBF"""
THOST_FTDC_SMT_Before = _soptthosttraderapi.THOST_FTDC_SMT_Before
r"""
    TFtdcSettleManagerTypeType是一个结算配置类型类型
    结算前准备
    """
THOST_FTDC_SMT_Settlement = _soptthosttraderapi.THOST_FTDC_SMT_Settlement
r"""结算"""
THOST_FTDC_SMT_After = _soptthosttraderapi.THOST_FTDC_SMT_After
r"""结算后核对"""
THOST_FTDC_SMT_Settlemented = _soptthosttraderapi.THOST_FTDC_SMT_Settlemented
r"""结算后处理"""
THOST_FTDC_SML_Must = _soptthosttraderapi.THOST_FTDC_SML_Must
r"""
    TFtdcSettleManagerLevelType是一个结算配置等级类型
    必要
    """
THOST_FTDC_SML_Alarm = _soptthosttraderapi.THOST_FTDC_SML_Alarm
r"""警告"""
THOST_FTDC_SML_Prompt = _soptthosttraderapi.THOST_FTDC_SML_Prompt
r"""提示"""
THOST_FTDC_SML_Ignore = _soptthosttraderapi.THOST_FTDC_SML_Ignore
r"""不检查"""
THOST_FTDC_SMG_Exhcange = _soptthosttraderapi.THOST_FTDC_SMG_Exhcange
r"""
    TFtdcSettleManagerGroupType是一个模块分组类型
    交易所核对
    """
THOST_FTDC_SMG_ASP = _soptthosttraderapi.THOST_FTDC_SMG_ASP
r"""内部核对"""
THOST_FTDC_SMG_CSRC = _soptthosttraderapi.THOST_FTDC_SMG_CSRC
r"""上报数据核对"""
THOST_FTDC_LUT_Repeatable = _soptthosttraderapi.THOST_FTDC_LUT_Repeatable
r"""
    TFtdcLimitUseTypeType是一个保值额度使用类型类型
    可重复使用
    """
THOST_FTDC_LUT_Unrepeatable = _soptthosttraderapi.THOST_FTDC_LUT_Unrepeatable
r"""不可重复使用"""
THOST_FTDC_DAR_Settle = _soptthosttraderapi.THOST_FTDC_DAR_Settle
r"""
    TFtdcDataResourceType是一个数据来源类型
    本系统
    """
THOST_FTDC_DAR_Exchange = _soptthosttraderapi.THOST_FTDC_DAR_Exchange
r"""交易所"""
THOST_FTDC_DAR_CSRC = _soptthosttraderapi.THOST_FTDC_DAR_CSRC
r"""报送数据"""
THOST_FTDC_MGT_ExchMarginRate = _soptthosttraderapi.THOST_FTDC_MGT_ExchMarginRate
r"""
    TFtdcMarginTypeType是一个保证金类型类型
    交易所保证金率
    """
THOST_FTDC_MGT_InstrMarginRate = _soptthosttraderapi.THOST_FTDC_MGT_InstrMarginRate
r"""投资者保证金率"""
THOST_FTDC_MGT_InstrMarginRateTrade = _soptthosttraderapi.THOST_FTDC_MGT_InstrMarginRateTrade
r"""投资者交易保证金率"""
THOST_FTDC_ACT_Intraday = _soptthosttraderapi.THOST_FTDC_ACT_Intraday
r"""
    TFtdcActiveTypeType是一个生效类型类型
    仅当日生效
    """
THOST_FTDC_ACT_Long = _soptthosttraderapi.THOST_FTDC_ACT_Long
r"""长期生效"""
THOST_FTDC_MRT_Exchange = _soptthosttraderapi.THOST_FTDC_MRT_Exchange
r"""
    TFtdcMarginRateTypeType是一个冲突保证金率类型类型
    交易所保证金率
    """
THOST_FTDC_MRT_Investor = _soptthosttraderapi.THOST_FTDC_MRT_Investor
r"""投资者保证金率"""
THOST_FTDC_MRT_InvestorTrade = _soptthosttraderapi.THOST_FTDC_MRT_InvestorTrade
r"""投资者交易保证金率"""
THOST_FTDC_BUS_UnBak = _soptthosttraderapi.THOST_FTDC_BUS_UnBak
r"""
    TFtdcBackUpStatusType是一个备份数据状态类型
    未生成备份数据
    """
THOST_FTDC_BUS_BakUp = _soptthosttraderapi.THOST_FTDC_BUS_BakUp
r"""备份数据生成中"""
THOST_FTDC_BUS_BakUped = _soptthosttraderapi.THOST_FTDC_BUS_BakUped
r"""已生成备份数据"""
THOST_FTDC_BUS_BakFail = _soptthosttraderapi.THOST_FTDC_BUS_BakFail
r"""备份数据失败"""
THOST_FTDC_SIS_UnInitialize = _soptthosttraderapi.THOST_FTDC_SIS_UnInitialize
r"""
    TFtdcInitSettlementType是一个结算初始化状态类型
    结算初始化未开始
    """
THOST_FTDC_SIS_Initialize = _soptthosttraderapi.THOST_FTDC_SIS_Initialize
r"""结算初始化中"""
THOST_FTDC_SIS_Initialized = _soptthosttraderapi.THOST_FTDC_SIS_Initialized
r"""结算初始化完成"""
THOST_FTDC_SRS_NoCreate = _soptthosttraderapi.THOST_FTDC_SRS_NoCreate
r"""
    TFtdcReportStatusType是一个报表数据生成状态类型
    未生成报表数据
    """
THOST_FTDC_SRS_Create = _soptthosttraderapi.THOST_FTDC_SRS_Create
r"""报表数据生成中"""
THOST_FTDC_SRS_Created = _soptthosttraderapi.THOST_FTDC_SRS_Created
r"""已生成报表数据"""
THOST_FTDC_SRS_CreateFail = _soptthosttraderapi.THOST_FTDC_SRS_CreateFail
r"""生成报表数据失败"""
THOST_FTDC_SSS_UnSaveData = _soptthosttraderapi.THOST_FTDC_SSS_UnSaveData
r"""
    TFtdcSaveStatusType是一个数据归档状态类型
    归档未完成
    """
THOST_FTDC_SSS_SaveDatad = _soptthosttraderapi.THOST_FTDC_SSS_SaveDatad
r"""归档完成"""
THOST_FTDC_SAS_UnArchived = _soptthosttraderapi.THOST_FTDC_SAS_UnArchived
r"""
    TFtdcSettArchiveStatusType是一个结算确认数据归档状态类型
    未归档数据
    """
THOST_FTDC_SAS_Archiving = _soptthosttraderapi.THOST_FTDC_SAS_Archiving
r"""数据归档中"""
THOST_FTDC_SAS_Archived = _soptthosttraderapi.THOST_FTDC_SAS_Archived
r"""已归档数据"""
THOST_FTDC_SAS_ArchiveFail = _soptthosttraderapi.THOST_FTDC_SAS_ArchiveFail
r"""归档数据失败"""
THOST_FTDC_CTPT_Unkown = _soptthosttraderapi.THOST_FTDC_CTPT_Unkown
r"""
    TFtdcCTPTypeType是一个CTP交易系统类型类型
    未知类型
    """
THOST_FTDC_CTPT_MainCenter = _soptthosttraderapi.THOST_FTDC_CTPT_MainCenter
r"""主中心"""
THOST_FTDC_CTPT_BackUp = _soptthosttraderapi.THOST_FTDC_CTPT_BackUp
r"""备中心"""
THOST_FTDC_CDT_Normal = _soptthosttraderapi.THOST_FTDC_CDT_Normal
r"""
    TFtdcCloseDealTypeType是一个平仓处理类型类型
    正常
    """
THOST_FTDC_CDT_SpecFirst = _soptthosttraderapi.THOST_FTDC_CDT_SpecFirst
r"""投机平仓优先"""
THOST_FTDC_MFUR_None = _soptthosttraderapi.THOST_FTDC_MFUR_None
r"""
    TFtdcMortgageFundUseRangeType是一个货币质押资金可用范围类型
    不能使用
    """
THOST_FTDC_MFUR_Margin = _soptthosttraderapi.THOST_FTDC_MFUR_Margin
r"""用于保证金"""
THOST_FTDC_MFUR_All = _soptthosttraderapi.THOST_FTDC_MFUR_All
r"""用于手续费、盈亏、保证金"""
THOST_FTDC_SPT_CzceHedge = _soptthosttraderapi.THOST_FTDC_SPT_CzceHedge
r"""
    TFtdcSpecProductTypeType是一个特殊产品类型类型
    郑商所套保产品
    """
THOST_FTDC_SPT_IneForeignCurrency = _soptthosttraderapi.THOST_FTDC_SPT_IneForeignCurrency
r"""货币质押产品"""
THOST_FTDC_SPT_DceOpenClose = _soptthosttraderapi.THOST_FTDC_SPT_DceOpenClose
r"""大连短线开平仓产品"""
THOST_FTDC_FMT_Mortgage = _soptthosttraderapi.THOST_FTDC_FMT_Mortgage
r"""
    TFtdcFundMortgageTypeType是一个货币质押类型类型
    质押
    """
THOST_FTDC_FMT_Redemption = _soptthosttraderapi.THOST_FTDC_FMT_Redemption
r"""解质"""
THOST_FTDC_ASPI_BaseMargin = _soptthosttraderapi.THOST_FTDC_ASPI_BaseMargin
r"""
    TFtdcAccountSettlementParamIDType是一个投资者账户结算参数代码类型
    基础保证金
    """
THOST_FTDC_ASPI_LowestInterest = _soptthosttraderapi.THOST_FTDC_ASPI_LowestInterest
r"""最低权益标准"""
THOST_FTDC_FMD_In = _soptthosttraderapi.THOST_FTDC_FMD_In
r"""
    TFtdcFundMortDirectionType是一个货币质押方向类型
    货币质入
    """
THOST_FTDC_FMD_Out = _soptthosttraderapi.THOST_FTDC_FMD_Out
r"""货币质出"""
THOST_FTDC_BT_Profit = _soptthosttraderapi.THOST_FTDC_BT_Profit
r"""
    TFtdcBusinessClassType是一个换汇类别类型
    盈利
    """
THOST_FTDC_BT_Loss = _soptthosttraderapi.THOST_FTDC_BT_Loss
r"""亏损"""
THOST_FTDC_BT_Other = _soptthosttraderapi.THOST_FTDC_BT_Other
r"""其他"""
THOST_FTDC_SST_Manual = _soptthosttraderapi.THOST_FTDC_SST_Manual
r"""
    TFtdcSwapSourceTypeType是一个换汇数据来源类型
    手工
    """
THOST_FTDC_SST_Automatic = _soptthosttraderapi.THOST_FTDC_SST_Automatic
r"""自动生成"""
THOST_FTDC_CED_Settlement = _soptthosttraderapi.THOST_FTDC_CED_Settlement
r"""
    TFtdcCurrExDirectionType是一个换汇类型类型
    结汇
    """
THOST_FTDC_CED_Sale = _soptthosttraderapi.THOST_FTDC_CED_Sale
r"""售汇"""
THOST_FTDC_CSS_Entry = _soptthosttraderapi.THOST_FTDC_CSS_Entry
r"""
    TFtdcCurrencySwapStatusType是一个申请状态类型
    已录入
    """
THOST_FTDC_CSS_Approve = _soptthosttraderapi.THOST_FTDC_CSS_Approve
r"""已审核"""
THOST_FTDC_CSS_Refuse = _soptthosttraderapi.THOST_FTDC_CSS_Refuse
r"""已拒绝"""
THOST_FTDC_CSS_Revoke = _soptthosttraderapi.THOST_FTDC_CSS_Revoke
r"""已撤销"""
THOST_FTDC_CSS_Send = _soptthosttraderapi.THOST_FTDC_CSS_Send
r"""已发送"""
THOST_FTDC_CSS_Success = _soptthosttraderapi.THOST_FTDC_CSS_Success
r"""换汇成功"""
THOST_FTDC_CSS_Failure = _soptthosttraderapi.THOST_FTDC_CSS_Failure
r"""换汇失败"""
THOST_FTDC_REQF_NoSend = _soptthosttraderapi.THOST_FTDC_REQF_NoSend
r"""
    TFtdcReqFlagType是一个换汇发送标志类型
    未发送
    """
THOST_FTDC_REQF_SendSuccess = _soptthosttraderapi.THOST_FTDC_REQF_SendSuccess
r"""发送成功"""
THOST_FTDC_REQF_SendFailed = _soptthosttraderapi.THOST_FTDC_REQF_SendFailed
r"""发送失败"""
THOST_FTDC_REQF_WaitReSend = _soptthosttraderapi.THOST_FTDC_REQF_WaitReSend
r"""等待重发"""
THOST_FTDC_RESF_Success = _soptthosttraderapi.THOST_FTDC_RESF_Success
r"""
    TFtdcResFlagType是一个换汇返回成功标志类型
    成功
    """
THOST_FTDC_RESF_InsuffiCient = _soptthosttraderapi.THOST_FTDC_RESF_InsuffiCient
r"""账户余额不足"""
THOST_FTDC_RESF_UnKnown = _soptthosttraderapi.THOST_FTDC_RESF_UnKnown
r"""交易结果未知"""
THOST_FTDC_EXS_Before = _soptthosttraderapi.THOST_FTDC_EXS_Before
r"""
    TFtdcExStatusType是一个修改状态类型
    修改前
    """
THOST_FTDC_EXS_After = _soptthosttraderapi.THOST_FTDC_EXS_After
r"""修改后"""
THOST_FTDC_CR_Domestic = _soptthosttraderapi.THOST_FTDC_CR_Domestic
r"""
    TFtdcClientRegionType是一个开户客户地域类型
    国内客户
    """
THOST_FTDC_CR_GMT = _soptthosttraderapi.THOST_FTDC_CR_GMT
r"""港澳台客户"""
THOST_FTDC_CR_Foreign = _soptthosttraderapi.THOST_FTDC_CR_Foreign
r"""国外客户"""
THOST_FTDC_HB_No = _soptthosttraderapi.THOST_FTDC_HB_No
r"""
    TFtdcHasBoardType是一个是否有董事会类型
    没有
    """
THOST_FTDC_HB_Yes = _soptthosttraderapi.THOST_FTDC_HB_Yes
r"""有"""
THOST_FTDC_SM_Normal = _soptthosttraderapi.THOST_FTDC_SM_Normal
r"""
    TFtdcStartModeType是一个启动模式类型
    正常
    """
THOST_FTDC_SM_Emerge = _soptthosttraderapi.THOST_FTDC_SM_Emerge
r"""应急"""
THOST_FTDC_SM_Restore = _soptthosttraderapi.THOST_FTDC_SM_Restore
r"""恢复"""
THOST_FTDC_TPT_Full = _soptthosttraderapi.THOST_FTDC_TPT_Full
r"""
    TFtdcTemplateTypeType是一个模型类型类型
    全量
    """
THOST_FTDC_TPT_Increment = _soptthosttraderapi.THOST_FTDC_TPT_Increment
r"""增量"""
THOST_FTDC_TPT_BackUp = _soptthosttraderapi.THOST_FTDC_TPT_BackUp
r"""备份"""
THOST_FTDC_LM_Trade = _soptthosttraderapi.THOST_FTDC_LM_Trade
r"""
    TFtdcLoginModeType是一个登录模式类型
    交易
    """
THOST_FTDC_LM_Transfer = _soptthosttraderapi.THOST_FTDC_LM_Transfer
r"""转账"""
THOST_FTDC_CPT_Instrument = _soptthosttraderapi.THOST_FTDC_CPT_Instrument
r"""
    TFtdcPromptTypeType是一个日历提示类型类型
    合约上下市
    """
THOST_FTDC_CPT_Margin = _soptthosttraderapi.THOST_FTDC_CPT_Margin
r"""保证金分段生效"""
THOST_FTDC_HT_Yes = _soptthosttraderapi.THOST_FTDC_HT_Yes
r"""
    TFtdcHasTrusteeType是一个是否有托管人类型
    有
    """
THOST_FTDC_HT_No = _soptthosttraderapi.THOST_FTDC_HT_No
r"""没有"""
THOST_FTDC_AMT_Bank = _soptthosttraderapi.THOST_FTDC_AMT_Bank
r"""
    TFtdcAmTypeType是一个机构类型类型
    银行
    """
THOST_FTDC_AMT_Securities = _soptthosttraderapi.THOST_FTDC_AMT_Securities
r"""证券公司"""
THOST_FTDC_AMT_Fund = _soptthosttraderapi.THOST_FTDC_AMT_Fund
r"""基金公司"""
THOST_FTDC_AMT_Insurance = _soptthosttraderapi.THOST_FTDC_AMT_Insurance
r"""保险公司"""
THOST_FTDC_AMT_Trust = _soptthosttraderapi.THOST_FTDC_AMT_Trust
r"""信托公司"""
THOST_FTDC_AMT_Other = _soptthosttraderapi.THOST_FTDC_AMT_Other
r"""其他"""
THOST_FTDC_CFIOT_FundIO = _soptthosttraderapi.THOST_FTDC_CFIOT_FundIO
r"""
    TFtdcCSRCFundIOTypeType是一个出入金类型类型
    出入金
    """
THOST_FTDC_CFIOT_SwapCurrency = _soptthosttraderapi.THOST_FTDC_CFIOT_SwapCurrency
r"""银期换汇"""
THOST_FTDC_CAT_Futures = _soptthosttraderapi.THOST_FTDC_CAT_Futures
r"""
    TFtdcCusAccountTypeType是一个结算账户类型类型
    期货结算账户
    """
THOST_FTDC_CAT_AssetmgrFuture = _soptthosttraderapi.THOST_FTDC_CAT_AssetmgrFuture
r"""纯期货资管业务下的资管结算账户"""
THOST_FTDC_CAT_AssetmgrTrustee = _soptthosttraderapi.THOST_FTDC_CAT_AssetmgrTrustee
r"""综合类资管业务下的期货资管托管账户"""
THOST_FTDC_CAT_AssetmgrTransfer = _soptthosttraderapi.THOST_FTDC_CAT_AssetmgrTransfer
r"""综合类资管业务下的资金中转账户"""
THOST_FTDC_LT_Chinese = _soptthosttraderapi.THOST_FTDC_LT_Chinese
r"""
    TFtdcLanguageTypeType是一个通知语言类型类型
    中文
    """
THOST_FTDC_LT_English = _soptthosttraderapi.THOST_FTDC_LT_English
r"""英文"""
THOST_FTDC_AMCT_Person = _soptthosttraderapi.THOST_FTDC_AMCT_Person
r"""
    TFtdcAssetmgrClientTypeType是一个资产管理客户类型类型
    个人资管客户
    """
THOST_FTDC_AMCT_Organ = _soptthosttraderapi.THOST_FTDC_AMCT_Organ
r"""单位资管客户"""
THOST_FTDC_AMCT_SpecialOrgan = _soptthosttraderapi.THOST_FTDC_AMCT_SpecialOrgan
r"""特殊单位资管客户"""
THOST_FTDC_ASST_Futures = _soptthosttraderapi.THOST_FTDC_ASST_Futures
r"""
    TFtdcAssetmgrTypeType是一个投资类型类型
    期货类
    """
THOST_FTDC_ASST_SpecialOrgan = _soptthosttraderapi.THOST_FTDC_ASST_SpecialOrgan
r"""综合类"""
THOST_FTDC_CIT_HasExch = _soptthosttraderapi.THOST_FTDC_CIT_HasExch
r"""
    TFtdcCheckInstrTypeType是一个合约比较类型类型
    合约交易所不存在
    """
THOST_FTDC_CIT_HasATP = _soptthosttraderapi.THOST_FTDC_CIT_HasATP
r"""合约本系统不存在"""
THOST_FTDC_CIT_HasDiff = _soptthosttraderapi.THOST_FTDC_CIT_HasDiff
r"""合约比较不一致"""
THOST_FTDC_DT_HandDeliv = _soptthosttraderapi.THOST_FTDC_DT_HandDeliv
r"""
    TFtdcDeliveryTypeType是一个交割类型类型
    手工交割
    """
THOST_FTDC_DT_PersonDeliv = _soptthosttraderapi.THOST_FTDC_DT_PersonDeliv
r"""到期交割"""
THOST_FTDC_MMSA_NO = _soptthosttraderapi.THOST_FTDC_MMSA_NO
r"""
    TFtdcMaxMarginSideAlgorithmType是一个大额单边保证金算法类型
    不使用大额单边保证金算法
    """
THOST_FTDC_MMSA_YES = _soptthosttraderapi.THOST_FTDC_MMSA_YES
r"""使用大额单边保证金算法"""
THOST_FTDC_CACT_Person = _soptthosttraderapi.THOST_FTDC_CACT_Person
r"""
    TFtdcDAClientTypeType是一个资产管理客户类型类型
    自然人
    """
THOST_FTDC_CACT_Company = _soptthosttraderapi.THOST_FTDC_CACT_Company
r"""法人"""
THOST_FTDC_CACT_Other = _soptthosttraderapi.THOST_FTDC_CACT_Other
r"""其他"""
THOST_FTDC_UOAAT_Futures = _soptthosttraderapi.THOST_FTDC_UOAAT_Futures
r"""
    TFtdcUOAAssetmgrTypeType是一个投资类型类型
    期货类
    """
THOST_FTDC_UOAAT_SpecialOrgan = _soptthosttraderapi.THOST_FTDC_UOAAT_SpecialOrgan
r"""综合类"""
THOST_FTDC_DEN_Buy = _soptthosttraderapi.THOST_FTDC_DEN_Buy
r"""
    TFtdcDirectionEnType是一个买卖方向类型
    Buy
    """
THOST_FTDC_DEN_Sell = _soptthosttraderapi.THOST_FTDC_DEN_Sell
r"""Sell"""
THOST_FTDC_OFEN_Open = _soptthosttraderapi.THOST_FTDC_OFEN_Open
r"""
    TFtdcOffsetFlagEnType是一个开平标志类型
    Position Opening
    """
THOST_FTDC_OFEN_Close = _soptthosttraderapi.THOST_FTDC_OFEN_Close
r"""Position Close"""
THOST_FTDC_OFEN_ForceClose = _soptthosttraderapi.THOST_FTDC_OFEN_ForceClose
r"""Forced Liquidation"""
THOST_FTDC_OFEN_CloseToday = _soptthosttraderapi.THOST_FTDC_OFEN_CloseToday
r"""Close Today"""
THOST_FTDC_OFEN_CloseYesterday = _soptthosttraderapi.THOST_FTDC_OFEN_CloseYesterday
r"""Close Prev."""
THOST_FTDC_OFEN_ForceOff = _soptthosttraderapi.THOST_FTDC_OFEN_ForceOff
r"""Forced Reduction"""
THOST_FTDC_OFEN_LocalForceClose = _soptthosttraderapi.THOST_FTDC_OFEN_LocalForceClose
r"""Local Forced Liquidation"""
THOST_FTDC_HFEN_Speculation = _soptthosttraderapi.THOST_FTDC_HFEN_Speculation
r"""
    TFtdcHedgeFlagEnType是一个投机套保标志类型
    Speculation
    """
THOST_FTDC_HFEN_Arbitrage = _soptthosttraderapi.THOST_FTDC_HFEN_Arbitrage
r"""Arbitrage"""
THOST_FTDC_HFEN_Hedge = _soptthosttraderapi.THOST_FTDC_HFEN_Hedge
r"""Hedge"""
THOST_FTDC_FIOTEN_FundIO = _soptthosttraderapi.THOST_FTDC_FIOTEN_FundIO
r"""
    TFtdcFundIOTypeEnType是一个出入金类型类型
    Deposit/Withdrawal
    """
THOST_FTDC_FIOTEN_Transfer = _soptthosttraderapi.THOST_FTDC_FIOTEN_Transfer
r"""Bank-Futures Transfer"""
THOST_FTDC_FIOTEN_SwapCurrency = _soptthosttraderapi.THOST_FTDC_FIOTEN_SwapCurrency
r"""Bank-Futures FX Exchange"""
THOST_FTDC_FTEN_Deposite = _soptthosttraderapi.THOST_FTDC_FTEN_Deposite
r"""
    TFtdcFundTypeEnType是一个资金类型类型
    Bank Deposit
    """
THOST_FTDC_FTEN_ItemFund = _soptthosttraderapi.THOST_FTDC_FTEN_ItemFund
r"""Payment/Fee"""
THOST_FTDC_FTEN_Company = _soptthosttraderapi.THOST_FTDC_FTEN_Company
r"""Brokerage Adj"""
THOST_FTDC_FTEN_InnerTransfer = _soptthosttraderapi.THOST_FTDC_FTEN_InnerTransfer
r"""Internal Transfer"""
THOST_FTDC_FDEN_In = _soptthosttraderapi.THOST_FTDC_FDEN_In
r"""
    TFtdcFundDirectionEnType是一个出入金方向类型
    Deposit
    """
THOST_FTDC_FDEN_Out = _soptthosttraderapi.THOST_FTDC_FDEN_Out
r"""Withdrawal"""
THOST_FTDC_FMDEN_In = _soptthosttraderapi.THOST_FTDC_FMDEN_In
r"""
    TFtdcFundMortDirectionEnType是一个货币质押方向类型
    Pledge
    """
THOST_FTDC_FMDEN_Out = _soptthosttraderapi.THOST_FTDC_FMDEN_Out
r"""Redemption"""
THOST_FTDC_CP_CallOptions = _soptthosttraderapi.THOST_FTDC_CP_CallOptions
r"""
    TFtdcOptionsTypeType是一个期权类型类型
    看涨
    """
THOST_FTDC_CP_PutOptions = _soptthosttraderapi.THOST_FTDC_CP_PutOptions
r"""看跌"""
THOST_FTDC_STM_Continental = _soptthosttraderapi.THOST_FTDC_STM_Continental
r"""
    TFtdcStrikeModeType是一个执行方式类型
    欧式
    """
THOST_FTDC_STM_American = _soptthosttraderapi.THOST_FTDC_STM_American
r"""美式"""
THOST_FTDC_STM_Bermuda = _soptthosttraderapi.THOST_FTDC_STM_Bermuda
r"""百慕大"""
THOST_FTDC_STT_Hedge = _soptthosttraderapi.THOST_FTDC_STT_Hedge
r"""
    TFtdcStrikeTypeType是一个执行类型类型
    自身对冲
    """
THOST_FTDC_STT_Match = _soptthosttraderapi.THOST_FTDC_STT_Match
r"""匹配执行"""
THOST_FTDC_APPT_NotStrikeNum = _soptthosttraderapi.THOST_FTDC_APPT_NotStrikeNum
r"""
    TFtdcApplyTypeType是一个中金所期权放弃执行申请类型类型
    不执行数量
    """
THOST_FTDC_GUDS_Gen = _soptthosttraderapi.THOST_FTDC_GUDS_Gen
r"""
    TFtdcGiveUpDataSourceType是一个放弃执行申请数据来源类型
    系统生成
    """
THOST_FTDC_GUDS_Hand = _soptthosttraderapi.THOST_FTDC_GUDS_Hand
r"""手工添加"""
THOST_FTDC_OER_NoExec = _soptthosttraderapi.THOST_FTDC_OER_NoExec
r"""
    TFtdcExecResultType是一个执行结果类型
    没有执行
    """
THOST_FTDC_OER_Canceled = _soptthosttraderapi.THOST_FTDC_OER_Canceled
r"""已经取消"""
THOST_FTDC_OER_OK = _soptthosttraderapi.THOST_FTDC_OER_OK
r"""执行成功"""
THOST_FTDC_OER_NoPosition = _soptthosttraderapi.THOST_FTDC_OER_NoPosition
r"""期权持仓不够"""
THOST_FTDC_OER_NoDeposit = _soptthosttraderapi.THOST_FTDC_OER_NoDeposit
r"""资金不够"""
THOST_FTDC_OER_NoParticipant = _soptthosttraderapi.THOST_FTDC_OER_NoParticipant
r"""会员不存在"""
THOST_FTDC_OER_NoClient = _soptthosttraderapi.THOST_FTDC_OER_NoClient
r"""客户不存在"""
THOST_FTDC_OER_NoInstrument = _soptthosttraderapi.THOST_FTDC_OER_NoInstrument
r"""合约不存在"""
THOST_FTDC_OER_NoRight = _soptthosttraderapi.THOST_FTDC_OER_NoRight
r"""没有执行权限"""
THOST_FTDC_OER_InvalidVolume = _soptthosttraderapi.THOST_FTDC_OER_InvalidVolume
r"""不合理的数量"""
THOST_FTDC_OER_NoEnoughHistoryTrade = _soptthosttraderapi.THOST_FTDC_OER_NoEnoughHistoryTrade
r"""没有足够的历史成交"""
THOST_FTDC_OER_Unknown = _soptthosttraderapi.THOST_FTDC_OER_Unknown
r"""未知"""
THOST_FTDC_COMBT_Future = _soptthosttraderapi.THOST_FTDC_COMBT_Future
r"""
    TFtdcCombinationTypeType是一个组合类型类型
    期货组合
    """
THOST_FTDC_COMBT_BUL = _soptthosttraderapi.THOST_FTDC_COMBT_BUL
r"""垂直价差BUL"""
THOST_FTDC_COMBT_BER = _soptthosttraderapi.THOST_FTDC_COMBT_BER
r"""垂直价差BER"""
THOST_FTDC_COMBT_STD = _soptthosttraderapi.THOST_FTDC_COMBT_STD
r"""跨式组合"""
THOST_FTDC_COMBT_STG = _soptthosttraderapi.THOST_FTDC_COMBT_STG
r"""宽跨式组合"""
THOST_FTDC_COMBT_PRT = _soptthosttraderapi.THOST_FTDC_COMBT_PRT
r"""备兑组合"""
THOST_FTDC_COMBT_CLD = _soptthosttraderapi.THOST_FTDC_COMBT_CLD
r"""时间价差组合"""
THOST_FTDC_ORPT_PreSettlementPrice = _soptthosttraderapi.THOST_FTDC_ORPT_PreSettlementPrice
r"""
    TFtdcOptionRoyaltyPriceTypeType是一个期权权利金价格类型类型
    昨结算价
    """
THOST_FTDC_ORPT_OpenPrice = _soptthosttraderapi.THOST_FTDC_ORPT_OpenPrice
r"""开仓价"""
THOST_FTDC_ORPT_MaxPreSettlementPrice = _soptthosttraderapi.THOST_FTDC_ORPT_MaxPreSettlementPrice
r"""最新价与昨结算价较大值"""
THOST_FTDC_ORPT_OptLastPriceWithSecLastPrice = _soptthosttraderapi.THOST_FTDC_ORPT_OptLastPriceWithSecLastPrice
r"""期权最新价，标的最新价"""
THOST_FTDC_ORPT_MaxPreSettlementWithLastPrice = _soptthosttraderapi.THOST_FTDC_ORPT_MaxPreSettlementWithLastPrice
r"""最新价与昨结算价较大值,标的最新价"""
THOST_FTDC_ORPT_MaxPreSettlementWithMaxLastPrice = _soptthosttraderapi.THOST_FTDC_ORPT_MaxPreSettlementWithMaxLastPrice
r"""最新价与昨结算价较大值,标的最新价与昨收盘价较大值"""
THOST_FTDC_BLAG_Default = _soptthosttraderapi.THOST_FTDC_BLAG_Default
r"""
    TFtdcBalanceAlgorithmType是一个权益算法类型
    不计算期权市值盈亏
    """
THOST_FTDC_BLAG_IncludeOptValLost = _soptthosttraderapi.THOST_FTDC_BLAG_IncludeOptValLost
r"""计算期权市值亏损"""
THOST_FTDC_ACTP_Exec = _soptthosttraderapi.THOST_FTDC_ACTP_Exec
r"""
    TFtdcActionTypeType是一个执行类型类型
    执行
    """
THOST_FTDC_ACTP_Abandon = _soptthosttraderapi.THOST_FTDC_ACTP_Abandon
r"""放弃"""
THOST_FTDC_FQST_Submitted = _soptthosttraderapi.THOST_FTDC_FQST_Submitted
r"""
    TFtdcForQuoteStatusType是一个询价状态类型
    已经提交
    """
THOST_FTDC_FQST_Accepted = _soptthosttraderapi.THOST_FTDC_FQST_Accepted
r"""已经接受"""
THOST_FTDC_FQST_Rejected = _soptthosttraderapi.THOST_FTDC_FQST_Rejected
r"""已经被拒绝"""
THOST_FTDC_VM_Absolute = _soptthosttraderapi.THOST_FTDC_VM_Absolute
r"""
    TFtdcValueMethodType是一个取值方式类型
    按绝对值
    """
THOST_FTDC_VM_Ratio = _soptthosttraderapi.THOST_FTDC_VM_Ratio
r"""按比率"""
THOST_FTDC_EOPF_Reserve = _soptthosttraderapi.THOST_FTDC_EOPF_Reserve
r"""
    TFtdcExecOrderPositionFlagType是一个期权行权后是否保留期货头寸的标记类型
    保留
    """
THOST_FTDC_EOPF_UnReserve = _soptthosttraderapi.THOST_FTDC_EOPF_UnReserve
r"""不保留"""
THOST_FTDC_EOCF_AutoClose = _soptthosttraderapi.THOST_FTDC_EOCF_AutoClose
r"""
    TFtdcExecOrderCloseFlagType是一个期权行权后生成的头寸是否自动平仓类型
    自动平仓
    """
THOST_FTDC_EOCF_NotToClose = _soptthosttraderapi.THOST_FTDC_EOCF_NotToClose
r"""免于自动平仓"""
THOST_FTDC_PTE_Futures = _soptthosttraderapi.THOST_FTDC_PTE_Futures
r"""
    TFtdcProductTypeType是一个产品类型类型
    期货
    """
THOST_FTDC_PTE_Options = _soptthosttraderapi.THOST_FTDC_PTE_Options
r"""期权"""
THOST_FTDC_CUFN_CUFN_O = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_O
r"""
    TFtdcCZCEUploadFileNameType是一个郑商所结算文件名类型
    ^\d{8}_zz_\d{4}
    """
THOST_FTDC_CUFN_CUFN_T = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_T
r"""^\d{8}成交表"""
THOST_FTDC_CUFN_CUFN_P = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_P
r"""^\d{8}单腿持仓表new"""
THOST_FTDC_CUFN_CUFN_N = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_N
r"""^\d{8}非平仓了结表"""
THOST_FTDC_CUFN_CUFN_L = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_L
r"""^\d{8}平仓表"""
THOST_FTDC_CUFN_CUFN_F = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_F
r"""^\d{8}资金表"""
THOST_FTDC_CUFN_CUFN_C = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_C
r"""^\d{8}组合持仓表"""
THOST_FTDC_CUFN_CUFN_M = _soptthosttraderapi.THOST_FTDC_CUFN_CUFN_M
r"""^\d{8}保证金参数表"""
THOST_FTDC_DUFN_DUFN_O = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_O
r"""
    TFtdcDCEUploadFileNameType是一个大商所结算文件名类型
    ^\d{8}_dl_\d{3}
    """
THOST_FTDC_DUFN_DUFN_T = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_T
r"""^\d{8}_成交表"""
THOST_FTDC_DUFN_DUFN_P = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_P
r"""^\d{8}_持仓表"""
THOST_FTDC_DUFN_DUFN_F = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_F
r"""^\d{8}_资金结算表"""
THOST_FTDC_DUFN_DUFN_C = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_C
r"""^\d{8}_优惠组合持仓明细表"""
THOST_FTDC_DUFN_DUFN_D = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_D
r"""^\d{8}_持仓明细表"""
THOST_FTDC_DUFN_DUFN_M = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_M
r"""^\d{8}_保证金参数表"""
THOST_FTDC_DUFN_DUFN_S = _soptthosttraderapi.THOST_FTDC_DUFN_DUFN_S
r"""^\d{8}_期权执行表"""
THOST_FTDC_SUFN_SUFN_O = _soptthosttraderapi.THOST_FTDC_SUFN_SUFN_O
r"""
    TFtdcSHFEUploadFileNameType是一个上期所结算文件名类型
    ^\d{4}_\d{8}_\d{8}_DailyFundChg
    """
THOST_FTDC_SUFN_SUFN_T = _soptthosttraderapi.THOST_FTDC_SUFN_SUFN_T
r"""^\d{4}_\d{8}_\d{8}_Trade"""
THOST_FTDC_SUFN_SUFN_P = _soptthosttraderapi.THOST_FTDC_SUFN_SUFN_P
r"""^\d{4}_\d{8}_\d{8}_SettlementDetail"""
THOST_FTDC_SUFN_SUFN_F = _soptthosttraderapi.THOST_FTDC_SUFN_SUFN_F
r"""^\d{4}_\d{8}_\d{8}_Capital"""
THOST_FTDC_CFUFN_SUFN_T = _soptthosttraderapi.THOST_FTDC_CFUFN_SUFN_T
r"""
    TFtdcCFFEXUploadFileNameType是一个中金所结算文件名类型
    ^\d{4}_SG\d{1}_\d{8}_\d{1}_Trade
    """
THOST_FTDC_CFUFN_SUFN_P = _soptthosttraderapi.THOST_FTDC_CFUFN_SUFN_P
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_SettlementDetail"""
THOST_FTDC_CFUFN_SUFN_F = _soptthosttraderapi.THOST_FTDC_CFUFN_SUFN_F
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_Capital"""
THOST_FTDC_CFUFN_SUFN_S = _soptthosttraderapi.THOST_FTDC_CFUFN_SUFN_S
r"""^\d{4}_SG\d{1}_\d{8}_\d{1}_OptionExec"""
THOST_FTDC_CMDR_Comb = _soptthosttraderapi.THOST_FTDC_CMDR_Comb
r"""
    TFtdcCombDirectionType是一个组合指令方向类型
    申请组合
    """
THOST_FTDC_CMDR_UnComb = _soptthosttraderapi.THOST_FTDC_CMDR_UnComb
r"""申请拆分"""
THOST_FTDC_LCKT_Lock = _soptthosttraderapi.THOST_FTDC_LCKT_Lock
r"""
    TFtdcLockTypeType是一个锁定方向类型
    锁定
    """
THOST_FTDC_LCKT_Unlock = _soptthosttraderapi.THOST_FTDC_LCKT_Unlock
r"""解锁"""
THOST_FTDC_BZTP_Future = _soptthosttraderapi.THOST_FTDC_BZTP_Future
r"""
    TFtdcBizTypeType是一个业务类型类型
    期货
    """
THOST_FTDC_BZTP_Stock = _soptthosttraderapi.THOST_FTDC_BZTP_Stock
r"""证券"""
THOST_FTDC_DSTP_Register = _soptthosttraderapi.THOST_FTDC_DSTP_Register
r"""
    TFtdcDesignateTypeType是一个指定类型类型
    指定登记
    """
THOST_FTDC_DSTP_Cancel = _soptthosttraderapi.THOST_FTDC_DSTP_Cancel
r"""指定撤销"""
THOST_FTDC_FRTP_Init = _soptthosttraderapi.THOST_FTDC_FRTP_Init
r"""
    TFtdcFreezeReasonTypeType是一个冻结原因类型
    初始化
    """
THOST_FTDC_FRTP_Lock = _soptthosttraderapi.THOST_FTDC_FRTP_Lock
r"""锁定"""
THOST_FTDC_FRTP_Exec = _soptthosttraderapi.THOST_FTDC_FRTP_Exec
r"""执行"""
THOST_FTDC_FRTP_Check = _soptthosttraderapi.THOST_FTDC_FRTP_Check
r"""仓位校验"""
THOST_FTDC_FRTP_ExecFreeze = _soptthosttraderapi.THOST_FTDC_FRTP_ExecFreeze
r"""E+1日执行冻结"""
THOST_FTDC_FZTP_Freeze = _soptthosttraderapi.THOST_FTDC_FZTP_Freeze
r"""
    TFtdcFreezeTypeType是一个冻结类型类型
    冻结
    """
THOST_FTDC_FZTP_Unfreeze = _soptthosttraderapi.THOST_FTDC_FZTP_Unfreeze
r"""解冻"""
THOST_FTDC_FZTP_Force = _soptthosttraderapi.THOST_FTDC_FZTP_Force
r"""强制执行"""
THOST_FTDC_TSTP_Unknow = _soptthosttraderapi.THOST_FTDC_TSTP_Unknow
r"""
    TFtdcTradeSystemTypeType是一个交易系统类型类型
    未知系统
    """
THOST_FTDC_TSTP_Future = _soptthosttraderapi.THOST_FTDC_TSTP_Future
r"""期货系统"""
THOST_FTDC_TSTP_IShare = _soptthosttraderapi.THOST_FTDC_TSTP_IShare
r"""个股系统"""
THOST_FTDC_STPT_ToBroker = _soptthosttraderapi.THOST_FTDC_STPT_ToBroker
r"""
    TFtdcStockDisposalTypeType是一个证券处置方向类型
    划入经纪公司账户
    """
THOST_FTDC_STPT_ToInvestor = _soptthosttraderapi.THOST_FTDC_STPT_ToInvestor
r"""划入投资者账户"""
THOST_FTDC_SDPS_Submitted = _soptthosttraderapi.THOST_FTDC_SDPS_Submitted
r"""
    TFtdcStockDisposalStatusType是一个证券处置状态类型
    已经提交
    """
THOST_FTDC_SDPS_Accepted = _soptthosttraderapi.THOST_FTDC_SDPS_Accepted
r"""已经接受"""
THOST_FTDC_SDPS_Rejected = _soptthosttraderapi.THOST_FTDC_SDPS_Rejected
r"""已经被拒绝"""
THOST_FTDC_SDPS_Cancelled = _soptthosttraderapi.THOST_FTDC_SDPS_Cancelled
r"""已经被撤销"""
THOST_FTDC_ISTR_Limit = _soptthosttraderapi.THOST_FTDC_ISTR_Limit
r"""
    TFtdcInstructionRightTypeType是一个指令权限类型类型
    限价单
    """
THOST_FTDC_ISTR_Limit_FOK = _soptthosttraderapi.THOST_FTDC_ISTR_Limit_FOK
r"""限价全额成交否则取消"""
THOST_FTDC_ISTR_Market_RemainLimit = _soptthosttraderapi.THOST_FTDC_ISTR_Market_RemainLimit
r"""市价订单剩余转限价"""
THOST_FTDC_ISTR_Market_FAK = _soptthosttraderapi.THOST_FTDC_ISTR_Market_FAK
r"""市价订单剩余撤销"""
THOST_FTDC_ISTR_Market_FOK = _soptthosttraderapi.THOST_FTDC_ISTR_Market_FOK
r"""市价全额成交否则取消"""
THOST_FTDC_ISTR_Lock = _soptthosttraderapi.THOST_FTDC_ISTR_Lock
r"""证券锁定"""
THOST_FTDC_ISTR_Unlock = _soptthosttraderapi.THOST_FTDC_ISTR_Unlock
r"""证券解锁"""
THOST_FTDC_IVLV_FirstLevel = _soptthosttraderapi.THOST_FTDC_IVLV_FirstLevel
r"""
    TFtdcLevelTypeType是一个投资者分级类型类型
    一级投资者
    """
THOST_FTDC_IVLV_SecondLevel = _soptthosttraderapi.THOST_FTDC_IVLV_SecondLevel
r"""二级投资者"""
THOST_FTDC_IVLV_ThirdLevel = _soptthosttraderapi.THOST_FTDC_IVLV_ThirdLevel
r"""三级投资者"""
THOST_FTDC_STOV_RealValue = _soptthosttraderapi.THOST_FTDC_STOV_RealValue
r"""
    TFtdcStrikeOffsetTypeType是一个行权偏移类型类型
    实值额
    """
THOST_FTDC_STOV_ProfitValue = _soptthosttraderapi.THOST_FTDC_STOV_ProfitValue
r"""盈利额"""
THOST_FTDC_STOV_RealRatio = _soptthosttraderapi.THOST_FTDC_STOV_RealRatio
r"""实值比例"""
THOST_FTDC_STOV_ProfitRatio = _soptthosttraderapi.THOST_FTDC_STOV_ProfitRatio
r"""盈利比例"""
THOST_FTDC_SSCS_NotSend = _soptthosttraderapi.THOST_FTDC_SSCS_NotSend
r"""
    TFtdcSmsCodeStatusType是一个行权偏移类型类型
    未发送
    """
THOST_FTDC_SSCS_SendSuccess = _soptthosttraderapi.THOST_FTDC_SSCS_SendSuccess
r"""发送成功"""
THOST_FTDC_SSCS_SendFail = _soptthosttraderapi.THOST_FTDC_SSCS_SendFail
r"""发送失败"""
THOST_FTDC_WPSR_Lib = _soptthosttraderapi.THOST_FTDC_WPSR_Lib
r"""
    TFtdcWeakPasswordSourceType是一个弱密码来源类型
    弱密码库
    """
THOST_FTDC_WPSR_Manual = _soptthosttraderapi.THOST_FTDC_WPSR_Manual
r"""手工录入"""
THOST_FTDC_OSCF_CloseSelfOptionPosition = _soptthosttraderapi.THOST_FTDC_OSCF_CloseSelfOptionPosition
r"""
    TFtdcOptSelfCloseFlagType是一个期权行权的头寸是否自对冲类型
    自对冲期权仓位
    """
THOST_FTDC_OSCF_ReserveOptionPosition = _soptthosttraderapi.THOST_FTDC_OSCF_ReserveOptionPosition
r"""保留期权仓位"""
THOST_FTDC_OSCF_SellCloseSelfFuturePosition = _soptthosttraderapi.THOST_FTDC_OSCF_SellCloseSelfFuturePosition
r"""自对冲卖方履约后的期货仓位"""
THOST_FTDC_APP_TYPE_Investor = _soptthosttraderapi.THOST_FTDC_APP_TYPE_Investor
r"""
    TFtdcAppTypeType是一个用户App类型类型
    直连的投资者
    """
THOST_FTDC_APP_TYPE_InvestorRelay = _soptthosttraderapi.THOST_FTDC_APP_TYPE_InvestorRelay
r"""为每个投资者都创建连接的中继"""
THOST_FTDC_APP_TYPE_OperatorRelay = _soptthosttraderapi.THOST_FTDC_APP_TYPE_OperatorRelay
r"""所有投资者共享一个操作员连接的中继"""
THOST_FTDC_APP_TYPE_UnKnown = _soptthosttraderapi.THOST_FTDC_APP_TYPE_UnKnown
r"""未知"""
THOST_FTDC_ROAST_Processing = _soptthosttraderapi.THOST_FTDC_ROAST_Processing
r"""
    TFtdcReserveOpenAccStasType是一个预指定开户状态类型
    等待处理中
    """
THOST_FTDC_ROAST_Cancelled = _soptthosttraderapi.THOST_FTDC_ROAST_Cancelled
r"""已撤销"""
THOST_FTDC_ROAST_Opened = _soptthosttraderapi.THOST_FTDC_ROAST_Opened
r"""已开户"""
THOST_FTDC_ROAST_Invalid = _soptthosttraderapi.THOST_FTDC_ROAST_Invalid
r"""无效请求"""
THOST_FTDC_SITP_Unsettled = _soptthosttraderapi.THOST_FTDC_SITP_Unsettled
r"""
    TFtdcSFInterestTypeType是一个结息类型类型
    未结息
    """
THOST_FTDC_SITP_Batch = _soptthosttraderapi.THOST_FTDC_SITP_Batch
r"""批量结息"""
THOST_FTDC_SITP_CancelAccount = _soptthosttraderapi.THOST_FTDC_SITP_CancelAccount
r"""销户结息"""
THOST_FTDC_SITP_Other = _soptthosttraderapi.THOST_FTDC_SITP_Other
r"""其它"""
THOST_FTDC_ISU_UnSuccess = _soptthosttraderapi.THOST_FTDC_ISU_UnSuccess
r"""
    TFtdcInterestSuccessType是一个结息状态类型
    未处理
    """
THOST_FTDC_ISU_Success = _soptthosttraderapi.THOST_FTDC_ISU_Success
r"""结息完成"""
THOST_FTDC_SFSPTYPE_Broker = _soptthosttraderapi.THOST_FTDC_SFSPTYPE_Broker
r"""
    TFtdcSFSponsorTypeType是一个发起方类型
    券商
    """
THOST_FTDC_SFSPTYPE_Bank = _soptthosttraderapi.THOST_FTDC_SFSPTYPE_Bank
r"""银行"""
THOST_FTDC_SFFBTTD_FromBankToFuture = _soptthosttraderapi.THOST_FTDC_SFFBTTD_FromBankToFuture
r"""
    TFtdcSFFBTransferDirectionType是一个银证转帐方向类型
    入金，银行转期货
    """
THOST_FTDC_SFFBTTD_FromFutureToBank = _soptthosttraderapi.THOST_FTDC_SFFBTTD_FromFutureToBank
r"""出金，期货转银行"""
THOST_FTDC_SFCRF_Cash = _soptthosttraderapi.THOST_FTDC_SFCRF_Cash
r"""
    TFtdcSFCashRemitFlagType是一个钞汇标示类型
    钞
    """
THOST_FTDC_SFCRF_Remit = _soptthosttraderapi.THOST_FTDC_SFCRF_Remit
r"""汇"""
THOST_FTDC_SFSTS_Normal = _soptthosttraderapi.THOST_FTDC_SFSTS_Normal
r"""
    TFtdcSFStatusType是一个存管状态类型
    正常
    """
THOST_FTDC_SFSTS_Cancel = _soptthosttraderapi.THOST_FTDC_SFSTS_Cancel
r"""销户"""
THOST_FTDC_SFBSF_Sell = _soptthosttraderapi.THOST_FTDC_SFBSF_Sell
r"""
    TFtdcSFBuySellFlagType是一个买卖差标志类型
    卖差
    """
THOST_FTDC_SFBSF_Buy = _soptthosttraderapi.THOST_FTDC_SFBSF_Buy
r"""买差"""
THOST_FTDC_SFICT_IDCard = _soptthosttraderapi.THOST_FTDC_SFICT_IDCard
r"""
    TFtdcSFIdCardTypeType是一个证件类型类型
    身份证
    """
THOST_FTDC_SFICT_Passport = _soptthosttraderapi.THOST_FTDC_SFICT_Passport
r"""护照"""
THOST_FTDC_SFICT_LicenseNo = _soptthosttraderapi.THOST_FTDC_SFICT_LicenseNo
r"""营业执照"""
THOST_FTDC_SFICT_OfficerIDCard = _soptthosttraderapi.THOST_FTDC_SFICT_OfficerIDCard
r"""军官证"""
THOST_FTDC_SFICT_SoldierIDCard = _soptthosttraderapi.THOST_FTDC_SFICT_SoldierIDCard
r"""士兵证"""
THOST_FTDC_SFICT_HMTMainlandTravelPermit = _soptthosttraderapi.THOST_FTDC_SFICT_HMTMainlandTravelPermit
r"""港澳台居民来往内地通行证"""
THOST_FTDC_SFICT_TmpIDCard = _soptthosttraderapi.THOST_FTDC_SFICT_TmpIDCard
r"""临时身份证"""
THOST_FTDC_SFICT_HouseholdRegister = _soptthosttraderapi.THOST_FTDC_SFICT_HouseholdRegister
r"""户口本"""
THOST_FTDC_SFICT_PoliceIDCard = _soptthosttraderapi.THOST_FTDC_SFICT_PoliceIDCard
r"""警官证"""
THOST_FTDC_SFICT_EID = _soptthosttraderapi.THOST_FTDC_SFICT_EID
r"""企业法人代码证书"""
THOST_FTDC_SFICT_Government = _soptthosttraderapi.THOST_FTDC_SFICT_Government
r"""行政机关"""
THOST_FTDC_SFICT_SocialOrg = _soptthosttraderapi.THOST_FTDC_SFICT_SocialOrg
r"""社会团体"""
THOST_FTDC_SFICT_Army = _soptthosttraderapi.THOST_FTDC_SFICT_Army
r"""军队"""
THOST_FTDC_SFICT_ArmedPolice = _soptthosttraderapi.THOST_FTDC_SFICT_ArmedPolice
r"""军队"""
THOST_FTDC_SFICT_SubOrganization = _soptthosttraderapi.THOST_FTDC_SFICT_SubOrganization
r"""下属机构"""
THOST_FTDC_SFICT_PermanantResidence = _soptthosttraderapi.THOST_FTDC_SFICT_PermanantResidence
r"""外国人永久居留证"""
THOST_FTDC_SFICT_BorderEntryPermit = _soptthosttraderapi.THOST_FTDC_SFICT_BorderEntryPermit
r"""边民出入境通行证"""
THOST_FTDC_SFMKID_SH = _soptthosttraderapi.THOST_FTDC_SFMKID_SH
r"""
    TFtdcSFMarketIDType是一个市场代码类型
    沪A
    """
THOST_FTDC_SFMKID_SZ = _soptthosttraderapi.THOST_FTDC_SFMKID_SZ
r"""深A"""
THOST_FTDC_INTERFDDIREC_FundIn = _soptthosttraderapi.THOST_FTDC_INTERFDDIREC_FundIn
r"""
    TFtdcInternalFundDirectionType是一个资金内转方向类型
    期权入金，期货出金
    """
THOST_FTDC_INTERFDDIREC_FundOut = _soptthosttraderapi.THOST_FTDC_INTERFDDIREC_FundOut
r"""期权出金，期货入金"""
THOST_FTDC_INTERFDSTATUS_UnSend = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_UnSend
r"""
    TFtdcSyncDepositStatusType是一个源系统或目标系统类型
    未发起
    """
THOST_FTDC_INTERFDSTATUS_Sent = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_Sent
r"""已发起"""
THOST_FTDC_INTERFDSTATUS_Reject = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_Reject
r"""拒绝"""
THOST_FTDC_INTERFDSTATUS_OverTime = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_OverTime
r"""超时"""
THOST_FTDC_INTERFDSTATUS_Success = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_Success
r"""成功"""
THOST_FTDC_INTERFDSTATUS_IsCharged = _soptthosttraderapi.THOST_FTDC_INTERFDSTATUS_IsCharged
r"""已冲正"""
THOST_FTDC_FUNDSERVERSTATUS_NotConnected = _soptthosttraderapi.THOST_FTDC_FUNDSERVERSTATUS_NotConnected
r"""
    TFtdcFundServerStatusType是一个fundserver连接状态类型
    没有任何连接
    """
THOST_FTDC_FUNDSERVERSTATUS_Connected = _soptthosttraderapi.THOST_FTDC_FUNDSERVERSTATUS_Connected
r"""已经连接"""
THOST_FTDC_FUNDSERVERSTATUS_Login = _soptthosttraderapi.THOST_FTDC_FUNDSERVERSTATUS_Login
r"""已经登录"""
THOST_FTDC_FUNDSERVERSTATUS_OverTime = _soptthosttraderapi.THOST_FTDC_FUNDSERVERSTATUS_OverTime
r"""已经超时"""
THOST_FTDC_FUNDREDOFLAG_NotRedo = _soptthosttraderapi.THOST_FTDC_FUNDREDOFLAG_NotRedo
r"""
    TFtdcFundServerRedoFlagType是一个是否重演再次生成的流水,kernel会忽略相同的depoSeq类型
    非重演报文
    """
THOST_FTDC_FUNDREDOFLAG_Redo = _soptthosttraderapi.THOST_FTDC_FUNDREDOFLAG_Redo
r"""重演生成的(可能)无用tseries"""
THOST_FTDC_FUNDSTATUS_OutSuccess = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_OutSuccess
r"""
    TFtdcInternalTransferStatusType是一个资金内转系统响应状态类型
    出金成功
    """
THOST_FTDC_FUNDSTATUS_OutFail = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_OutFail
r"""出金失败"""
THOST_FTDC_FUNDSTATUS_OutOverTime = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_OutOverTime
r"""出金超时"""
THOST_FTDC_FUNDSTATUS_OutCharged = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_OutCharged
r"""出金已冲正"""
THOST_FTDC_FUNDSTATUS_InSuccess = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_InSuccess
r"""入金成功"""
THOST_FTDC_FUNDSTATUS_InFail = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_InFail
r"""入金失败"""
THOST_FTDC_FUNDSTATUS_InOverTime = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_InOverTime
r"""入金超时"""
THOST_FTDC_FUNDSTATUS_InCharged = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_InCharged
r"""入金已冲正"""
THOST_FTDC_FUNDSTATUS_ChargedFail = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_ChargedFail
r"""冲正失败"""
THOST_FTDC_FUNDSTATUS_Submitted = _soptthosttraderapi.THOST_FTDC_FUNDSTATUS_Submitted
r"""已提交未发起"""
THOST_FTDC_LMT_Base = _soptthosttraderapi.THOST_FTDC_LMT_Base
r"""
    TFtdcLinearMarginTypeType是一个线性保证金类型类型
    基础保证金
    """
THOST_FTDC_LMT_Normal = _soptthosttraderapi.THOST_FTDC_LMT_Normal
r"""普通仓保证金"""
THOST_FTDC_LMT_Comb = _soptthosttraderapi.THOST_FTDC_LMT_Comb
r"""组合仓保证金"""
class CThostFtdcDisseminationField(object):
    r"""信息分发"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SequenceSeries: "ctp_sopt::TThostFtdcSequenceSeriesType" = property(_soptthosttraderapi.CThostFtdcDisseminationField_SequenceSeries_get, _soptthosttraderapi.CThostFtdcDisseminationField_SequenceSeries_set, doc=r"""序列系列号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcDisseminationField_SequenceNo_get, _soptthosttraderapi.CThostFtdcDisseminationField_SequenceNo_set, doc=r"""序列号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDisseminationField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDisseminationField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDisseminationField

# Register CThostFtdcDisseminationField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDisseminationField_swigregister(CThostFtdcDisseminationField)
class CThostFtdcReqUserLoginField(object):
    r"""用户登录请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_UserID_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_UserID_set, doc=r"""用户代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_Password_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_Password_set, doc=r"""密码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_InterfaceProductInfo_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "ctp_sopt::TThostFtdcProtocolInfoType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_ProtocolInfo_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_MacAddress_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_MacAddress_set, doc=r"""Mac地址""")
    OneTimePassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_OneTimePassword_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_OneTimePassword_set, doc=r"""动态密码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_reserve1_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_reserve1_set, doc=r"""保留的无效字段""")
    LoginRemark: "ctp_sopt::TThostFtdcLoginRemarkType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_LoginRemark_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_LoginRemark_set, doc=r"""登录备注""")
    ClientIPPort: "ctp_sopt::TThostFtdcIPPortType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_ClientIPPort_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientIPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcReqUserLoginField_ClientIPAddress_get, _soptthosttraderapi.CThostFtdcReqUserLoginField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqUserLoginField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqUserLoginField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqUserLoginField

# Register CThostFtdcReqUserLoginField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqUserLoginField_swigregister(CThostFtdcReqUserLoginField)
class CThostFtdcRspUserLoginField(object):
    r"""用户登录应答"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_TradingDay_set, doc=r"""交易日""")
    LoginTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_LoginTime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_LoginTime_set, doc=r"""登录成功时间""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_UserID_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_UserID_set, doc=r"""用户代码""")
    SystemName: "ctp_sopt::TThostFtdcSystemNameType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_SystemName_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_SystemName_set, doc=r"""交易系统名称""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_FrontID_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_SessionID_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_SessionID_set, doc=r"""会话编号""")
    MaxOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_MaxOrderRef_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_SHFETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_DCETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_CZCETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_FFEXTime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_FFEXTime_set, doc=r"""中金所时间""")
    INETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginField_INETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginField_INETime_set, doc=r"""能源中心时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspUserLoginField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspUserLoginField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspUserLoginField

# Register CThostFtdcRspUserLoginField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspUserLoginField_swigregister(CThostFtdcRspUserLoginField)
class CThostFtdcUserLogoutField(object):
    r"""用户登出请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserLogoutField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserLogoutField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserLogoutField_UserID_get, _soptthosttraderapi.CThostFtdcUserLogoutField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserLogoutField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserLogoutField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserLogoutField

# Register CThostFtdcUserLogoutField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserLogoutField_swigregister(CThostFtdcUserLogoutField)
class CThostFtdcForceUserLogoutField(object):
    r"""强制交易员退出"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcForceUserLogoutField_BrokerID_get, _soptthosttraderapi.CThostFtdcForceUserLogoutField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcForceUserLogoutField_UserID_get, _soptthosttraderapi.CThostFtdcForceUserLogoutField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcForceUserLogoutField_swiginit(self, _soptthosttraderapi.new_CThostFtdcForceUserLogoutField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcForceUserLogoutField

# Register CThostFtdcForceUserLogoutField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcForceUserLogoutField_swigregister(CThostFtdcForceUserLogoutField)
class CThostFtdcReqAuthenticateField(object):
    r"""客户端认证请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqAuthenticateField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqAuthenticateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqAuthenticateField_UserID_get, _soptthosttraderapi.CThostFtdcReqAuthenticateField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcReqAuthenticateField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcReqAuthenticateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AuthCode: "ctp_sopt::TThostFtdcAuthCodeType" = property(_soptthosttraderapi.CThostFtdcReqAuthenticateField_AuthCode_get, _soptthosttraderapi.CThostFtdcReqAuthenticateField_AuthCode_set, doc=r"""认证码""")
    AppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcReqAuthenticateField_AppID_get, _soptthosttraderapi.CThostFtdcReqAuthenticateField_AppID_set, doc=r"""App代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqAuthenticateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqAuthenticateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqAuthenticateField

# Register CThostFtdcReqAuthenticateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqAuthenticateField_swigregister(CThostFtdcReqAuthenticateField)
class CThostFtdcRspAuthenticateField(object):
    r"""客户端认证响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspAuthenticateField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspAuthenticateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspAuthenticateField_UserID_get, _soptthosttraderapi.CThostFtdcRspAuthenticateField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcRspAuthenticateField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcRspAuthenticateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcRspAuthenticateField_AppID_get, _soptthosttraderapi.CThostFtdcRspAuthenticateField_AppID_set, doc=r"""App代码""")
    AppType: "ctp_sopt::TThostFtdcAppTypeType" = property(_soptthosttraderapi.CThostFtdcRspAuthenticateField_AppType_get, _soptthosttraderapi.CThostFtdcRspAuthenticateField_AppType_set, doc=r"""App类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspAuthenticateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspAuthenticateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspAuthenticateField

# Register CThostFtdcRspAuthenticateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspAuthenticateField_swigregister(CThostFtdcRspAuthenticateField)
class CThostFtdcAuthenticationInfoField(object):
    r"""客户端认证信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_UserID_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_UserID_set, doc=r"""用户代码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AuthInfo: "ctp_sopt::TThostFtdcAuthInfoType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_AuthInfo_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_AuthInfo_set, doc=r"""认证信息""")
    IsResult: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_IsResult_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_IsResult_set, doc=r"""是否为认证结果""")
    AppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_AppID_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_AppID_set, doc=r"""App代码""")
    AppType: "ctp_sopt::TThostFtdcAppTypeType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_AppType_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_AppType_set, doc=r"""App类型""")
    ClientIPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcAuthenticationInfoField_ClientIPAddress_get, _soptthosttraderapi.CThostFtdcAuthenticationInfoField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAuthenticationInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAuthenticationInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAuthenticationInfoField

# Register CThostFtdcAuthenticationInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAuthenticationInfoField_swigregister(CThostFtdcAuthenticationInfoField)
class CThostFtdcRspUserLoginSafelyField(object):
    r"""安全用户登录应答"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_TradingDay_set, doc=r"""交易日""")
    LoginTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_LoginTime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_LoginTime_set, doc=r"""登录成功时间""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_UserID_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_UserID_set, doc=r"""用户代码""")
    SystemName: "ctp_sopt::TThostFtdcSystemNameType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SystemName_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SystemName_set, doc=r"""交易系统名称""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_FrontID_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SessionID_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SessionID_set, doc=r"""会话编号""")
    MaxOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_MaxOrderRef_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SHFETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_DCETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_CZCETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_FFEXTime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_FFEXTime_set, doc=r"""中金所时间""")
    INETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_INETime_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_INETime_set, doc=r"""能源中心时间""")
    RandomString: "ctp_sopt::TThostFtdcRandomStringType" = property(_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_RandomString_get, _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_RandomString_set, doc=r"""随机串""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspUserLoginSafelyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspUserLoginSafelyField

# Register CThostFtdcRspUserLoginSafelyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspUserLoginSafelyField_swigregister(CThostFtdcRspUserLoginSafelyField)
class CThostFtdcTransferHeaderField(object):
    r"""银期转帐报文头"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Version: "ctp_sopt::TThostFtdcVersionType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_Version_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_Version_set, doc=r"""版本号，常量，1.0""")
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_TradeCode_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_TradeCode_set, doc=r"""交易代码，必填""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_TradeDate_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_TradeDate_set, doc=r"""交易日期，必填，格式：yyyymmdd""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_TradeTime_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_TradeTime_set, doc=r"""交易时间，必填，格式：hhmmss""")
    TradeSerial: "ctp_sopt::TThostFtdcTradeSerialType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_TradeSerial_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_TradeSerial_set, doc=r"""发起方流水号，N/A""")
    FutureID: "ctp_sopt::TThostFtdcFutureIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_FutureID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_FutureID_set, doc=r"""期货公司代码，必填""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_BankID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_BankID_set, doc=r"""银行代码，根据查询银行得到，必填""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_BankBrchID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_BankBrchID_set, doc=r"""银行分中心代码，根据查询银行得到，必填""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_OperNo_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_OperNo_set, doc=r"""操作员，N/A""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_DeviceID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_DeviceID_set, doc=r"""交易设备类型，N/A""")
    RecordNum: "ctp_sopt::TThostFtdcRecordNumType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_RecordNum_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_RecordNum_set, doc=r"""记录数，N/A""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_SessionID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_SessionID_set, doc=r"""会话编号，N/A""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcTransferHeaderField_RequestID_get, _soptthosttraderapi.CThostFtdcTransferHeaderField_RequestID_set, doc=r"""请求编号，N/A""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferHeaderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferHeaderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferHeaderField

# Register CThostFtdcTransferHeaderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferHeaderField_swigregister(CThostFtdcTransferHeaderField)
class CThostFtdcTransferBankToFutureReqField(object):
    r"""银行资金转期货请求，TradeCode=202001"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "ctp_sopt::TThostFtdcFuturePwdFlagType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "ctp_sopt::TThostFtdcFutureAccPwdType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set, doc=r"""密码""")
    TradeAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_TradeAmt_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_TradeAmt_set, doc=r"""转账金额""")
    CustFee: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_CustFee_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_CustFee_set, doc=r"""客户手续费""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferBankToFutureReqField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferBankToFutureReqField

# Register CThostFtdcTransferBankToFutureReqField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferBankToFutureReqField_swigregister(CThostFtdcTransferBankToFutureReqField)
class CThostFtdcTransferBankToFutureRspField(object):
    r"""银行资金转期货请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "ctp_sopt::TThostFtdcRetCodeType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_RetCode_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "ctp_sopt::TThostFtdcRetInfoType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_RetInfo_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_TradeAmt_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_TradeAmt_set, doc=r"""转帐金额""")
    CustFee: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_CustFee_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_CustFee_set, doc=r"""应收客户手续费""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferBankToFutureRspField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferBankToFutureRspField

# Register CThostFtdcTransferBankToFutureRspField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferBankToFutureRspField_swigregister(CThostFtdcTransferBankToFutureRspField)
class CThostFtdcTransferFutureToBankReqField(object):
    r"""期货资金转银行请求，TradeCode=202002"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "ctp_sopt::TThostFtdcFuturePwdFlagType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "ctp_sopt::TThostFtdcFutureAccPwdType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set, doc=r"""密码""")
    TradeAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_TradeAmt_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_TradeAmt_set, doc=r"""转账金额""")
    CustFee: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_CustFee_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_CustFee_set, doc=r"""客户手续费""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferFutureToBankReqField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferFutureToBankReqField

# Register CThostFtdcTransferFutureToBankReqField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferFutureToBankReqField_swigregister(CThostFtdcTransferFutureToBankReqField)
class CThostFtdcTransferFutureToBankRspField(object):
    r"""期货资金转银行请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "ctp_sopt::TThostFtdcRetCodeType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_RetCode_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "ctp_sopt::TThostFtdcRetInfoType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_RetInfo_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_TradeAmt_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_TradeAmt_set, doc=r"""转帐金额""")
    CustFee: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_CustFee_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_CustFee_set, doc=r"""应收客户手续费""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferFutureToBankRspField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferFutureToBankRspField

# Register CThostFtdcTransferFutureToBankRspField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferFutureToBankRspField_swigregister(CThostFtdcTransferFutureToBankRspField)
class CThostFtdcTransferQryBankReqField(object):
    r"""查询银行资金请求，TradeCode=204002"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankReqField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferQryBankReqField_FutureAccount_set, doc=r"""期货资金账户""")
    FuturePwdFlag: "ctp_sopt::TThostFtdcFuturePwdFlagType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankReqField_FuturePwdFlag_get, _soptthosttraderapi.CThostFtdcTransferQryBankReqField_FuturePwdFlag_set, doc=r"""密码标志""")
    FutureAccPwd: "ctp_sopt::TThostFtdcFutureAccPwdType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankReqField_FutureAccPwd_get, _soptthosttraderapi.CThostFtdcTransferQryBankReqField_FutureAccPwd_set, doc=r"""密码""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankReqField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferQryBankReqField_CurrencyCode_set, doc=r"""币种：RMB-人民币 USD-美圆 HKD-港元""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferQryBankReqField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferQryBankReqField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferQryBankReqField

# Register CThostFtdcTransferQryBankReqField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferQryBankReqField_swigregister(CThostFtdcTransferQryBankReqField)
class CThostFtdcTransferQryBankRspField(object):
    r"""查询银行资金请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RetCode: "ctp_sopt::TThostFtdcRetCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_RetCode_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_RetCode_set, doc=r"""响应代码""")
    RetInfo: "ctp_sopt::TThostFtdcRetInfoType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_RetInfo_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_RetInfo_set, doc=r"""响应信息""")
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_FutureAccount_set, doc=r"""资金账户""")
    TradeAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_TradeAmt_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_TradeAmt_set, doc=r"""银行余额""")
    UseAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_UseAmt_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_UseAmt_set, doc=r"""银行可用余额""")
    FetchAmt: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_FetchAmt_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_FetchAmt_set, doc=r"""银行可取余额""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryBankRspField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferQryBankRspField_CurrencyCode_set, doc=r"""币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferQryBankRspField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferQryBankRspField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferQryBankRspField

# Register CThostFtdcTransferQryBankRspField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferQryBankRspField_swigregister(CThostFtdcTransferQryBankRspField)
class CThostFtdcTransferQryDetailReqField(object):
    r"""查询银行交易明细请求，TradeCode=204999"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FutureAccount: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailReqField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferQryDetailReqField_FutureAccount_set, doc=r"""期货资金账户""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferQryDetailReqField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferQryDetailReqField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferQryDetailReqField

# Register CThostFtdcTransferQryDetailReqField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferQryDetailReqField_swigregister(CThostFtdcTransferQryDetailReqField)
class CThostFtdcTransferQryDetailRspField(object):
    r"""查询银行交易明细请求响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeDate_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeTime_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeTime_set, doc=r"""交易时间""")
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeCode_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TradeCode_set, doc=r"""交易代码""")
    FutureSerial: "ctp_sopt::TThostFtdcTradeSerialNoType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureSerial_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureSerial_set, doc=r"""期货流水号""")
    FutureID: "ctp_sopt::TThostFtdcFutureIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureID_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureID_set, doc=r"""期货公司代码""")
    FutureAccount: "ctp_sopt::TThostFtdcFutureAccountType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureAccount_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_FutureAccount_set, doc=r"""资金帐号""")
    BankSerial: "ctp_sopt::TThostFtdcTradeSerialNoType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankSerial_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankSerial_set, doc=r"""银行流水号""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankID_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankBrchID_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankAccount_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_BankAccount_set, doc=r"""银行账号""")
    CertCode: "ctp_sopt::TThostFtdcCertCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_CertCode_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_CertCode_set, doc=r"""证件号码""")
    CurrencyCode: "ctp_sopt::TThostFtdcCurrencyCodeType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_CurrencyCode_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_CurrencyCode_set, doc=r"""货币代码""")
    TxAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TxAmount_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_TxAmount_set, doc=r"""发生金额""")
    Flag: "ctp_sopt::TThostFtdcTransferValidFlagType" = property(_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_Flag_get, _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_Flag_set, doc=r"""有效标志""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferQryDetailRspField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferQryDetailRspField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferQryDetailRspField

# Register CThostFtdcTransferQryDetailRspField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferQryDetailRspField_swigregister(CThostFtdcTransferQryDetailRspField)
class CThostFtdcRspInfoField(object):
    r"""响应信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspInfoField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspInfoField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspInfoField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspInfoField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspInfoField

# Register CThostFtdcRspInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspInfoField_swigregister(CThostFtdcRspInfoField)
class CThostFtdcExchangeField(object):
    r"""交易所"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeName: "ctp_sopt::TThostFtdcExchangeNameType" = property(_soptthosttraderapi.CThostFtdcExchangeField_ExchangeName_get, _soptthosttraderapi.CThostFtdcExchangeField_ExchangeName_set, doc=r"""交易所名称""")
    ExchangeProperty: "ctp_sopt::TThostFtdcExchangePropertyType" = property(_soptthosttraderapi.CThostFtdcExchangeField_ExchangeProperty_get, _soptthosttraderapi.CThostFtdcExchangeField_ExchangeProperty_set, doc=r"""交易所属性""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeField

# Register CThostFtdcExchangeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeField_swigregister(CThostFtdcExchangeField)
class CThostFtdcProductField(object):
    r"""产品"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcProductField_ProductID_get, _soptthosttraderapi.CThostFtdcProductField_ProductID_set, doc=r"""产品代码""")
    ProductName: "ctp_sopt::TThostFtdcProductNameType" = property(_soptthosttraderapi.CThostFtdcProductField_ProductName_get, _soptthosttraderapi.CThostFtdcProductField_ProductName_set, doc=r"""产品名称""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcProductField_ExchangeID_get, _soptthosttraderapi.CThostFtdcProductField_ExchangeID_set, doc=r"""交易所代码""")
    ProductClass: "ctp_sopt::TThostFtdcProductClassType" = property(_soptthosttraderapi.CThostFtdcProductField_ProductClass_get, _soptthosttraderapi.CThostFtdcProductField_ProductClass_set, doc=r"""产品类型""")
    VolumeMultiple: "ctp_sopt::TThostFtdcVolumeMultipleType" = property(_soptthosttraderapi.CThostFtdcProductField_VolumeMultiple_get, _soptthosttraderapi.CThostFtdcProductField_VolumeMultiple_set, doc=r"""合约数量乘数""")
    PriceTick: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcProductField_PriceTick_get, _soptthosttraderapi.CThostFtdcProductField_PriceTick_set, doc=r"""最小变动价位""")
    MaxMarketOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcProductField_MaxMarketOrderVolume_get, _soptthosttraderapi.CThostFtdcProductField_MaxMarketOrderVolume_set, doc=r"""市价单最大下单量""")
    MinMarketOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcProductField_MinMarketOrderVolume_get, _soptthosttraderapi.CThostFtdcProductField_MinMarketOrderVolume_set, doc=r"""市价单最小下单量""")
    MaxLimitOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcProductField_MaxLimitOrderVolume_get, _soptthosttraderapi.CThostFtdcProductField_MaxLimitOrderVolume_set, doc=r"""限价单最大下单量""")
    MinLimitOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcProductField_MinLimitOrderVolume_get, _soptthosttraderapi.CThostFtdcProductField_MinLimitOrderVolume_set, doc=r"""限价单最小下单量""")
    PositionType: "ctp_sopt::TThostFtdcPositionTypeType" = property(_soptthosttraderapi.CThostFtdcProductField_PositionType_get, _soptthosttraderapi.CThostFtdcProductField_PositionType_set, doc=r"""持仓类型""")
    PositionDateType: "ctp_sopt::TThostFtdcPositionDateTypeType" = property(_soptthosttraderapi.CThostFtdcProductField_PositionDateType_get, _soptthosttraderapi.CThostFtdcProductField_PositionDateType_set, doc=r"""持仓日期类型""")
    CloseDealType: "ctp_sopt::TThostFtdcCloseDealTypeType" = property(_soptthosttraderapi.CThostFtdcProductField_CloseDealType_get, _soptthosttraderapi.CThostFtdcProductField_CloseDealType_set, doc=r"""平仓处理类型""")
    TradeCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcProductField_TradeCurrencyID_get, _soptthosttraderapi.CThostFtdcProductField_TradeCurrencyID_set, doc=r"""交易币种类型""")
    MortgageFundUseRange: "ctp_sopt::TThostFtdcMortgageFundUseRangeType" = property(_soptthosttraderapi.CThostFtdcProductField_MortgageFundUseRange_get, _soptthosttraderapi.CThostFtdcProductField_MortgageFundUseRange_set, doc=r"""质押资金可用范围""")
    ExchangeProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcProductField_ExchangeProductID_get, _soptthosttraderapi.CThostFtdcProductField_ExchangeProductID_set, doc=r"""交易所产品代码""")
    UnderlyingMultiple: "ctp_sopt::TThostFtdcUnderlyingMultipleType" = property(_soptthosttraderapi.CThostFtdcProductField_UnderlyingMultiple_get, _soptthosttraderapi.CThostFtdcProductField_UnderlyingMultiple_set, doc=r"""合约基础商品乘数""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcProductField_swiginit(self, _soptthosttraderapi.new_CThostFtdcProductField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcProductField

# Register CThostFtdcProductField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcProductField_swigregister(CThostFtdcProductField)
class CThostFtdcInstrumentField(object):
    r"""合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    OldInstrumentName: "ctp_sopt::TThostFtdcOldInstrumentNameType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_OldInstrumentName_get, _soptthosttraderapi.CThostFtdcInstrumentField_OldInstrumentName_set, doc=r"""合约名称""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ProductID_get, _soptthosttraderapi.CThostFtdcInstrumentField_ProductID_set, doc=r"""产品代码""")
    ProductClass: "ctp_sopt::TThostFtdcProductClassType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ProductClass_get, _soptthosttraderapi.CThostFtdcInstrumentField_ProductClass_set, doc=r"""产品类型""")
    DeliveryYear: "ctp_sopt::TThostFtdcYearType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_DeliveryYear_get, _soptthosttraderapi.CThostFtdcInstrumentField_DeliveryYear_set, doc=r"""交割年份""")
    DeliveryMonth: "ctp_sopt::TThostFtdcMonthType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_DeliveryMonth_get, _soptthosttraderapi.CThostFtdcInstrumentField_DeliveryMonth_set, doc=r"""交割月""")
    MaxMarketOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MaxMarketOrderVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MaxMarketOrderVolume_set, doc=r"""市价单最大下单量""")
    MinMarketOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MinMarketOrderVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MinMarketOrderVolume_set, doc=r"""市价单最小下单量""")
    MaxLimitOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MaxLimitOrderVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MaxLimitOrderVolume_set, doc=r"""限价单最大下单量""")
    MinLimitOrderVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MinLimitOrderVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MinLimitOrderVolume_set, doc=r"""限价单最小下单量""")
    VolumeMultiple: "ctp_sopt::TThostFtdcVolumeMultipleType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_VolumeMultiple_get, _soptthosttraderapi.CThostFtdcInstrumentField_VolumeMultiple_set, doc=r"""合约数量乘数""")
    PriceTick: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_PriceTick_get, _soptthosttraderapi.CThostFtdcInstrumentField_PriceTick_set, doc=r"""最小变动价位""")
    CreateDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_CreateDate_get, _soptthosttraderapi.CThostFtdcInstrumentField_CreateDate_set, doc=r"""创建日""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_OpenDate_get, _soptthosttraderapi.CThostFtdcInstrumentField_OpenDate_set, doc=r"""上市日""")
    ExpireDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ExpireDate_get, _soptthosttraderapi.CThostFtdcInstrumentField_ExpireDate_set, doc=r"""到期日""")
    StartDelivDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_StartDelivDate_get, _soptthosttraderapi.CThostFtdcInstrumentField_StartDelivDate_set, doc=r"""开始交割日""")
    EndDelivDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_EndDelivDate_get, _soptthosttraderapi.CThostFtdcInstrumentField_EndDelivDate_set, doc=r"""结束交割日""")
    InstLifePhase: "ctp_sopt::TThostFtdcInstLifePhaseType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_InstLifePhase_get, _soptthosttraderapi.CThostFtdcInstrumentField_InstLifePhase_set, doc=r"""合约生命周期状态""")
    IsTrading: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_IsTrading_get, _soptthosttraderapi.CThostFtdcInstrumentField_IsTrading_set, doc=r"""当前是否交易""")
    PositionType: "ctp_sopt::TThostFtdcPositionTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_PositionType_get, _soptthosttraderapi.CThostFtdcInstrumentField_PositionType_set, doc=r"""持仓类型""")
    PositionDateType: "ctp_sopt::TThostFtdcPositionDateTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_PositionDateType_get, _soptthosttraderapi.CThostFtdcInstrumentField_PositionDateType_set, doc=r"""持仓日期类型""")
    LongMarginRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_LongMarginRatio_get, _soptthosttraderapi.CThostFtdcInstrumentField_LongMarginRatio_set, doc=r"""多头保证金率""")
    ShortMarginRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_ShortMarginRatio_get, _soptthosttraderapi.CThostFtdcInstrumentField_ShortMarginRatio_set, doc=r"""空头保证金率""")
    MaxMarginSideAlgorithm: "ctp_sopt::TThostFtdcMaxMarginSideAlgorithmType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get, _soptthosttraderapi.CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set, doc=r"""是否使用大额单边保证金算法""")
    UnderlyingInstrID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_UnderlyingInstrID_get, _soptthosttraderapi.CThostFtdcInstrumentField_UnderlyingInstrID_set, doc=r"""基础商品代码""")
    StrikePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_StrikePrice_get, _soptthosttraderapi.CThostFtdcInstrumentField_StrikePrice_set, doc=r"""执行价""")
    OptionsType: "ctp_sopt::TThostFtdcOptionsTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_OptionsType_get, _soptthosttraderapi.CThostFtdcInstrumentField_OptionsType_set, doc=r"""期权类型""")
    UnderlyingMultiple: "ctp_sopt::TThostFtdcUnderlyingMultipleType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_UnderlyingMultiple_get, _soptthosttraderapi.CThostFtdcInstrumentField_UnderlyingMultiple_set, doc=r"""合约基础商品乘数""")
    CombinationType: "ctp_sopt::TThostFtdcCombinationTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_CombinationType_get, _soptthosttraderapi.CThostFtdcInstrumentField_CombinationType_set, doc=r"""组合类型""")
    MinBuyVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MinBuyVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MinBuyVolume_set, doc=r"""最小买下单单位""")
    MinSellVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_MinSellVolume_get, _soptthosttraderapi.CThostFtdcInstrumentField_MinSellVolume_set, doc=r"""最小卖下单单位""")
    InstrumentCode: "ctp_sopt::TThostFtdcInstrumentCodeType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_InstrumentCode_get, _soptthosttraderapi.CThostFtdcInstrumentField_InstrumentCode_set, doc=r"""合约标识码""")
    InstrumentName: "ctp_sopt::TThostFtdcInstrumentNameType" = property(_soptthosttraderapi.CThostFtdcInstrumentField_InstrumentName_get, _soptthosttraderapi.CThostFtdcInstrumentField_InstrumentName_set, doc=r"""合约名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentField

# Register CThostFtdcInstrumentField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentField_swigregister(CThostFtdcInstrumentField)
class CThostFtdcBrokerField(object):
    r"""经纪公司"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    BrokerAbbr: "ctp_sopt::TThostFtdcBrokerAbbrType" = property(_soptthosttraderapi.CThostFtdcBrokerField_BrokerAbbr_get, _soptthosttraderapi.CThostFtdcBrokerField_BrokerAbbr_set, doc=r"""经纪公司简称""")
    BrokerName: "ctp_sopt::TThostFtdcBrokerNameType" = property(_soptthosttraderapi.CThostFtdcBrokerField_BrokerName_get, _soptthosttraderapi.CThostFtdcBrokerField_BrokerName_set, doc=r"""经纪公司名称""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerField_IsActive_get, _soptthosttraderapi.CThostFtdcBrokerField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerField

# Register CThostFtdcBrokerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerField_swigregister(CThostFtdcBrokerField)
class CThostFtdcTraderField(object):
    r"""交易所交易员"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcTraderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcTraderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcTraderField_TraderID_get, _soptthosttraderapi.CThostFtdcTraderField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcTraderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcTraderField_ParticipantID_set, doc=r"""会员代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTraderField_Password_get, _soptthosttraderapi.CThostFtdcTraderField_Password_set, doc=r"""密码""")
    InstallCount: "ctp_sopt::TThostFtdcInstallCountType" = property(_soptthosttraderapi.CThostFtdcTraderField_InstallCount_get, _soptthosttraderapi.CThostFtdcTraderField_InstallCount_set, doc=r"""安装数量""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTraderField_BrokerID_get, _soptthosttraderapi.CThostFtdcTraderField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTraderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTraderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTraderField

# Register CThostFtdcTraderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTraderField_swigregister(CThostFtdcTraderField)
class CThostFtdcInvestorField(object):
    r"""投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorField_InvestorGroupID_get, _soptthosttraderapi.CThostFtdcInvestorField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorName: "ctp_sopt::TThostFtdcPartyNameType" = property(_soptthosttraderapi.CThostFtdcInvestorField_InvestorName_get, _soptthosttraderapi.CThostFtdcInvestorField_InvestorName_set, doc=r"""投资者名称""")
    IdentifiedCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcInvestorField_IdentifiedCardType_get, _soptthosttraderapi.CThostFtdcInvestorField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcInvestorField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcInvestorField_IdentifiedCardNo_set, doc=r"""证件号码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInvestorField_IsActive_get, _soptthosttraderapi.CThostFtdcInvestorField_IsActive_set, doc=r"""是否活跃""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcInvestorField_Telephone_get, _soptthosttraderapi.CThostFtdcInvestorField_Telephone_set, doc=r"""联系电话""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcInvestorField_Address_get, _soptthosttraderapi.CThostFtdcInvestorField_Address_set, doc=r"""通讯地址""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorField_OpenDate_get, _soptthosttraderapi.CThostFtdcInvestorField_OpenDate_set, doc=r"""开户日期""")
    Mobile: "ctp_sopt::TThostFtdcMobileType" = property(_soptthosttraderapi.CThostFtdcInvestorField_Mobile_get, _soptthosttraderapi.CThostFtdcInvestorField_Mobile_set, doc=r"""手机""")
    CommModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorField_CommModelID_get, _soptthosttraderapi.CThostFtdcInvestorField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorField_MarginModelID_get, _soptthosttraderapi.CThostFtdcInvestorField_MarginModelID_set, doc=r"""保证金率模板代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorField

# Register CThostFtdcInvestorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorField_swigregister(CThostFtdcInvestorField)
class CThostFtdcTradingCodeField(object):
    r"""交易编码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_InvestorID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_ClientID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_ClientID_set, doc=r"""客户代码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_IsActive_get, _soptthosttraderapi.CThostFtdcTradingCodeField_IsActive_set, doc=r"""是否活跃""")
    ClientIDType: "ctp_sopt::TThostFtdcClientIDTypeType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_ClientIDType_get, _soptthosttraderapi.CThostFtdcTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_BranchID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_BranchID_set, doc=r"""营业部编号""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_BizType_get, _soptthosttraderapi.CThostFtdcTradingCodeField_BizType_set, doc=r"""业务类型""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcTradingCodeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcTradingCodeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingCodeField

# Register CThostFtdcTradingCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingCodeField_swigregister(CThostFtdcTradingCodeField)
class CThostFtdcPartBrokerField(object):
    r"""会员编码和经纪公司编码对照表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcPartBrokerField_BrokerID_get, _soptthosttraderapi.CThostFtdcPartBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcPartBrokerField_ExchangeID_get, _soptthosttraderapi.CThostFtdcPartBrokerField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcPartBrokerField_ParticipantID_get, _soptthosttraderapi.CThostFtdcPartBrokerField_ParticipantID_set, doc=r"""会员代码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcPartBrokerField_IsActive_get, _soptthosttraderapi.CThostFtdcPartBrokerField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcPartBrokerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcPartBrokerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcPartBrokerField

# Register CThostFtdcPartBrokerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcPartBrokerField_swigregister(CThostFtdcPartBrokerField)
class CThostFtdcSuperUserField(object):
    r"""管理用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcSuperUserField_UserID_get, _soptthosttraderapi.CThostFtdcSuperUserField_UserID_set, doc=r"""用户代码""")
    UserName: "ctp_sopt::TThostFtdcUserNameType" = property(_soptthosttraderapi.CThostFtdcSuperUserField_UserName_get, _soptthosttraderapi.CThostFtdcSuperUserField_UserName_set, doc=r"""用户名称""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcSuperUserField_Password_get, _soptthosttraderapi.CThostFtdcSuperUserField_Password_set, doc=r"""密码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSuperUserField_IsActive_get, _soptthosttraderapi.CThostFtdcSuperUserField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSuperUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSuperUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSuperUserField

# Register CThostFtdcSuperUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSuperUserField_swigregister(CThostFtdcSuperUserField)
class CThostFtdcSuperUserFunctionField(object):
    r"""管理用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcSuperUserFunctionField_UserID_get, _soptthosttraderapi.CThostFtdcSuperUserFunctionField_UserID_set, doc=r"""用户代码""")
    FunctionCode: "ctp_sopt::TThostFtdcFunctionCodeType" = property(_soptthosttraderapi.CThostFtdcSuperUserFunctionField_FunctionCode_get, _soptthosttraderapi.CThostFtdcSuperUserFunctionField_FunctionCode_set, doc=r"""功能代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSuperUserFunctionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSuperUserFunctionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSuperUserFunctionField

# Register CThostFtdcSuperUserFunctionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSuperUserFunctionField_swigregister(CThostFtdcSuperUserFunctionField)
class CThostFtdcInvestorGroupField(object):
    r"""投资者组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorGroupField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorGroupField_InvestorGroupID_get, _soptthosttraderapi.CThostFtdcInvestorGroupField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorGroupName: "ctp_sopt::TThostFtdcInvestorGroupNameType" = property(_soptthosttraderapi.CThostFtdcInvestorGroupField_InvestorGroupName_get, _soptthosttraderapi.CThostFtdcInvestorGroupField_InvestorGroupName_set, doc=r"""投资者分组名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorGroupField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorGroupField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorGroupField

# Register CThostFtdcInvestorGroupField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorGroupField_swigregister(CThostFtdcInvestorGroupField)
class CThostFtdcTradingAccountField(object):
    r"""资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcTradingAccountField_AccountID_set, doc=r"""投资者帐号""")
    PreMortgage: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreMortgage_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreMortgage_set, doc=r"""上次质押金额""")
    PreCredit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreCredit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreCredit_set, doc=r"""上次信用额度""")
    PreDeposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreDeposit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreDeposit_set, doc=r"""上次存款额""")
    PreBalance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreBalance_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreBalance_set, doc=r"""上次结算准备金""")
    PreMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreMargin_set, doc=r"""上次占用的保证金""")
    InterestBase: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_InterestBase_get, _soptthosttraderapi.CThostFtdcTradingAccountField_InterestBase_set, doc=r"""利息基数""")
    Interest: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Interest_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Interest_set, doc=r"""利息收入""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Deposit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Withdraw_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FrozenCash_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FrozenCommission_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CurrMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_CurrMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_CurrMargin_set, doc=r"""当前保证金总额""")
    CashIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_CashIn_get, _soptthosttraderapi.CThostFtdcTradingAccountField_CashIn_set, doc=r"""资金差额""")
    Commission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Commission_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Commission_set, doc=r"""手续费""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_CloseProfit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PositionProfit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PositionProfit_set, doc=r"""持仓盈亏""")
    Balance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Balance_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Balance_set, doc=r"""期货结算准备金""")
    Available: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Available_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_WithdrawQuota_get, _soptthosttraderapi.CThostFtdcTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Reserve_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SettlementID_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    Credit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Credit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Credit_set, doc=r"""信用额度""")
    Mortgage: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_Mortgage_get, _soptthosttraderapi.CThostFtdcTradingAccountField_Mortgage_set, doc=r"""质押金额""")
    ExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_ExchangeMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_ExchangeMargin_set, doc=r"""交易所保证金""")
    DeliveryMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_DeliveryMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_DeliveryMargin_set, doc=r"""投资者交割保证金""")
    ExchangeDeliveryMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set, doc=r"""交易所交割保证金""")
    ReserveBalance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_ReserveBalance_get, _soptthosttraderapi.CThostFtdcTradingAccountField_ReserveBalance_set, doc=r"""保底期货结算准备金""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    PreFundMortgageIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreFundMortgageIn_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreFundMortgageIn_set, doc=r"""上次货币质入金额""")
    PreFundMortgageOut: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_PreFundMortgageOut_get, _soptthosttraderapi.CThostFtdcTradingAccountField_PreFundMortgageOut_set, doc=r"""上次货币质出金额""")
    FundMortgageIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageIn_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageIn_set, doc=r"""货币质入金额""")
    FundMortgageOut: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageOut_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageOut_set, doc=r"""货币质出金额""")
    FundMortgageAvailable: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageAvailable_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FundMortgageAvailable_set, doc=r"""货币质押余额""")
    MortgageableFund: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_MortgageableFund_get, _soptthosttraderapi.CThostFtdcTradingAccountField_MortgageableFund_set, doc=r"""可质押货币金额""")
    SpecProductMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductMargin_set, doc=r"""特殊产品占用保证金""")
    SpecProductFrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductFrozenMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductFrozenMargin_set, doc=r"""特殊产品冻结保证金""")
    SpecProductCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductCommission_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductCommission_set, doc=r"""特殊产品手续费""")
    SpecProductFrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductFrozenCommission_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductFrozenCommission_set, doc=r"""特殊产品冻结手续费""")
    SpecProductPositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductPositionProfit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductPositionProfit_set, doc=r"""特殊产品持仓盈亏""")
    SpecProductCloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductCloseProfit_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductCloseProfit_set, doc=r"""特殊产品平仓盈亏""")
    SpecProductPositionProfitByAlg: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set, doc=r"""根据持仓盈亏算法计算的特殊产品持仓盈亏""")
    SpecProductExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductExchangeMargin_get, _soptthosttraderapi.CThostFtdcTradingAccountField_SpecProductExchangeMargin_set, doc=r"""特殊产品交易所保证金""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_BizType_get, _soptthosttraderapi.CThostFtdcTradingAccountField_BizType_set, doc=r"""业务类型""")
    FrozenSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_FrozenSwap_get, _soptthosttraderapi.CThostFtdcTradingAccountField_FrozenSwap_set, doc=r"""延时换汇冻结金额""")
    RemainSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_RemainSwap_get, _soptthosttraderapi.CThostFtdcTradingAccountField_RemainSwap_set, doc=r"""剩余换汇额度""")
    OptionValue: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountField_OptionValue_get, _soptthosttraderapi.CThostFtdcTradingAccountField_OptionValue_set, doc=r"""市值""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingAccountField

# Register CThostFtdcTradingAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingAccountField_swigregister(CThostFtdcTradingAccountField)
class CThostFtdcInvestorPositionField(object):
    r"""投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PosiDirection_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_HedgeFlag_set, doc=r"""投机套保标志""")
    PositionDate: "ctp_sopt::TThostFtdcPositionDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PositionDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PositionDate_set, doc=r"""持仓日期""")
    YdPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_YdPosition_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_YdPosition_set, doc=r"""上日持仓""")
    Position: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_Position_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_Position_set, doc=r"""今日持仓""")
    LongFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_LongFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_LongFrozen_set, doc=r"""多头冻结""")
    ShortFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_ShortFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_ShortFrozen_set, doc=r"""空头冻结""")
    LongFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_LongFrozenAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_LongFrozenAmount_set, doc=r"""开仓冻结金额""")
    ShortFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_ShortFrozenAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_ShortFrozenAmount_set, doc=r"""开仓冻结金额""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_OpenVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_OpenVolume_set, doc=r"""开仓量""")
    CloseVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CloseVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CloseVolume_set, doc=r"""平仓量""")
    OpenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_OpenAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_OpenAmount_set, doc=r"""开仓金额""")
    CloseAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CloseAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CloseAmount_set, doc=r"""平仓金额""")
    PositionCost: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PositionCost_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PositionCost_set, doc=r"""持仓成本""")
    PreMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PreMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PreMargin_set, doc=r"""上次占用的保证金""")
    UseMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_UseMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_UseMargin_set, doc=r"""占用的保证金""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenCash_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenCommission_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CashIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CashIn_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CashIn_set, doc=r"""资金差额""")
    Commission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_Commission_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_Commission_set, doc=r"""手续费""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfit_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PositionProfit_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PositionProfit_set, doc=r"""持仓盈亏""")
    PreSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_PreSettlementPrice_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_PreSettlementPrice_set, doc=r"""上次结算价""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_SettlementPrice_set, doc=r"""本次结算价""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_TradingDay_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_SettlementID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_SettlementID_set, doc=r"""结算编号""")
    OpenCost: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_OpenCost_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_OpenCost_set, doc=r"""开仓成本""")
    ExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_ExchangeMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_ExchangeMargin_set, doc=r"""交易所保证金""")
    CombPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CombPosition_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CombPosition_set, doc=r"""组合成交形成的持仓""")
    CombLongFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CombLongFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CombLongFrozen_set, doc=r"""组合多头冻结""")
    CombShortFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CombShortFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CombShortFrozen_set, doc=r"""组合空头冻结""")
    CloseProfitByDate: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfitByDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfitByTrade_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    TodayPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_TodayPosition_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_TodayPosition_set, doc=r"""今日持仓""")
    MarginRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_MarginRateByMoney_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_MarginRateByVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    StrikeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_StrikeFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_StrikeFrozen_set, doc=r"""执行冻结""")
    StrikeFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_StrikeFrozenAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_StrikeFrozenAmount_set, doc=r"""执行冻结金额""")
    AbandonFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_AbandonFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_AbandonFrozen_set, doc=r"""放弃执行冻结""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    YdStrikeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_YdStrikeFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_YdStrikeFrozen_set, doc=r"""执行冻结的昨仓""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    OptionValue: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionField_OptionValue_get, _soptthosttraderapi.CThostFtdcInvestorPositionField_OptionValue_set, doc=r"""市值""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorPositionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorPositionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorPositionField

# Register CThostFtdcInvestorPositionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorPositionField_swigregister(CThostFtdcInvestorPositionField)
class CThostFtdcInstrumentMarginRateField(object):
    r"""合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_IsRelative_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_IsRelative_set, doc=r"""是否相对交易所收取""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentMarginRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentMarginRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentMarginRateField

# Register CThostFtdcInstrumentMarginRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentMarginRateField_swigregister(CThostFtdcInstrumentMarginRateField)
class CThostFtdcInstrumentCommissionRateField(object):
    r"""合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_BizType_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_BizType_set, doc=r"""业务类型""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentCommissionRateField

# Register CThostFtdcInstrumentCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentCommissionRateField_swigregister(CThostFtdcInstrumentCommissionRateField)
class CThostFtdcDepthMarketDataField(object):
    r"""深度行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_TradingDay_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_TradingDay_set, doc=r"""交易日""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_InstrumentID_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_ExchangeID_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    LastPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_LastPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_LastPrice_set, doc=r"""最新价""")
    PreSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_PreSettlementPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_PreClosePrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_PreOpenInterest_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_PreOpenInterest_set, doc=r"""昨持仓量""")
    OpenPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_OpenPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_HighestPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_LowestPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_LowestPrice_set, doc=r"""最低价""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_Volume_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_Volume_set, doc=r"""数量""")
    Turnover: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_Turnover_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_OpenInterest_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_OpenInterest_set, doc=r"""持仓量""")
    ClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_ClosePrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_ClosePrice_set, doc=r"""今收盘""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_SettlementPrice_set, doc=r"""本次结算价""")
    UpperLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_UpperLimitPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_LowerLimitPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_LowerLimitPrice_set, doc=r"""跌停板价""")
    PreDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_PreDelta_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_PreDelta_set, doc=r"""昨虚实度""")
    CurrDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_CurrDelta_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_CurrDelta_set, doc=r"""今虚实度""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_UpdateTime_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "ctp_sopt::TThostFtdcMillisecType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_UpdateMillisec_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    BidPrice1: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice1_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice1_set, doc=r"""申买价一""")
    BidVolume1: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume1_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume1_set, doc=r"""申买量一""")
    AskPrice1: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice1_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice1_set, doc=r"""申卖价一""")
    AskVolume1: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume1_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume1_set, doc=r"""申卖量一""")
    BidPrice2: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice2_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice2_set, doc=r"""申买价二""")
    BidVolume2: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume2_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume2_set, doc=r"""申买量二""")
    AskPrice2: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice2_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice2_set, doc=r"""申卖价二""")
    AskVolume2: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume2_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume2_set, doc=r"""申卖量二""")
    BidPrice3: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice3_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice3_set, doc=r"""申买价三""")
    BidVolume3: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume3_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume3_set, doc=r"""申买量三""")
    AskPrice3: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice3_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice3_set, doc=r"""申卖价三""")
    AskVolume3: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume3_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume3_set, doc=r"""申卖量三""")
    BidPrice4: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice4_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice4_set, doc=r"""申买价四""")
    BidVolume4: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume4_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume4_set, doc=r"""申买量四""")
    AskPrice4: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice4_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice4_set, doc=r"""申卖价四""")
    AskVolume4: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume4_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume4_set, doc=r"""申卖量四""")
    BidPrice5: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice5_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidPrice5_set, doc=r"""申买价五""")
    BidVolume5: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume5_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_BidVolume5_set, doc=r"""申买量五""")
    AskPrice5: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice5_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskPrice5_set, doc=r"""申卖价五""")
    AskVolume5: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume5_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AskVolume5_set, doc=r"""申卖量五""")
    AveragePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_AveragePrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_AveragePrice_set, doc=r"""当日均价""")
    ActionDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_ActionDay_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_ActionDay_set, doc=r"""业务日期""")
    CircuitRefPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_CircuitRefPrice_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_CircuitRefPrice_set, doc=r"""熔断参考价""")
    SendingTime: "ctp_sopt::TThostFtdcSendingTimeType" = property(_soptthosttraderapi.CThostFtdcDepthMarketDataField_SendingTime_get, _soptthosttraderapi.CThostFtdcDepthMarketDataField_SendingTime_set, doc=r"""行情发送时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDepthMarketDataField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDepthMarketDataField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDepthMarketDataField

# Register CThostFtdcDepthMarketDataField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDepthMarketDataField_swigregister(CThostFtdcDepthMarketDataField)
class CThostFtdcInstrumentTradingRightField(object):
    r"""投资者合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    TradingRight: "ctp_sopt::TThostFtdcTradingRightType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_TradingRight_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_TradingRight_set, doc=r"""交易权限""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_ExchangeID_set, doc=r"""交易所代码""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_BizType_get, _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_BizType_set, doc=r"""业务类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentTradingRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentTradingRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentTradingRightField

# Register CThostFtdcInstrumentTradingRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentTradingRightField_swigregister(CThostFtdcInstrumentTradingRightField)
class CThostFtdcBrokerUserField(object):
    r"""经纪公司用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserField_UserID_set, doc=r"""用户代码""")
    UserName: "ctp_sopt::TThostFtdcUserNameType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_UserName_get, _soptthosttraderapi.CThostFtdcBrokerUserField_UserName_set, doc=r"""用户名称""")
    UserType: "ctp_sopt::TThostFtdcUserTypeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_UserType_get, _soptthosttraderapi.CThostFtdcBrokerUserField_UserType_set, doc=r"""用户类型""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_IsActive_get, _soptthosttraderapi.CThostFtdcBrokerUserField_IsActive_set, doc=r"""是否活跃""")
    IsUsingOTP: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_IsUsingOTP_get, _soptthosttraderapi.CThostFtdcBrokerUserField_IsUsingOTP_set, doc=r"""是否使用令牌""")
    IsAuthForce: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerUserField_IsAuthForce_get, _soptthosttraderapi.CThostFtdcBrokerUserField_IsAuthForce_set, doc=r"""是否强制终端认证""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserField

# Register CThostFtdcBrokerUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserField_swigregister(CThostFtdcBrokerUserField)
class CThostFtdcBrokerUserPasswordField(object):
    r"""经纪公司用户口令"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_UserID_set, doc=r"""用户代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_Password_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_Password_set, doc=r"""密码""")
    LastUpdateTime: "ctp_sopt::TThostFtdcDateTimeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_LastUpdateTime_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_LastUpdateTime_set, doc=r"""上次修改时间""")
    LastLoginTime: "ctp_sopt::TThostFtdcDateTimeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_LastLoginTime_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_LastLoginTime_set, doc=r"""上次登陆时间""")
    ExpireDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_ExpireDate_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_ExpireDate_set, doc=r"""密码过期时间""")
    WeakExpireDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_WeakExpireDate_get, _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_WeakExpireDate_set, doc=r"""弱密码过期时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserPasswordField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserPasswordField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserPasswordField

# Register CThostFtdcBrokerUserPasswordField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserPasswordField_swigregister(CThostFtdcBrokerUserPasswordField)
class CThostFtdcBrokerUserFunctionField(object):
    r"""经纪公司用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserFunctionField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserFunctionField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserFunctionField_UserID_set, doc=r"""用户代码""")
    BrokerFunctionCode: "ctp_sopt::TThostFtdcBrokerFunctionCodeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get, _soptthosttraderapi.CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set, doc=r"""经纪公司功能代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserFunctionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserFunctionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserFunctionField

# Register CThostFtdcBrokerUserFunctionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserFunctionField_swigregister(CThostFtdcBrokerUserFunctionField)
class CThostFtdcTraderOfferField(object):
    r"""交易所交易员报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ExchangeID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_TraderID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ParticipantID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_Password_get, _soptthosttraderapi.CThostFtdcTraderOfferField_Password_set, doc=r"""密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_InstallID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_OrderLocalID_set, doc=r"""本地报单编号""")
    TraderConnectStatus: "ctp_sopt::TThostFtdcTraderConnectStatusType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_TraderConnectStatus_get, _soptthosttraderapi.CThostFtdcTraderOfferField_TraderConnectStatus_set, doc=r"""交易所交易员连接状态""")
    ConnectRequestDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ConnectRequestDate_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ConnectRequestDate_set, doc=r"""发出连接请求的日期""")
    ConnectRequestTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ConnectRequestTime_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ConnectRequestTime_set, doc=r"""发出连接请求的时间""")
    LastReportDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_LastReportDate_get, _soptthosttraderapi.CThostFtdcTraderOfferField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_LastReportTime_get, _soptthosttraderapi.CThostFtdcTraderOfferField_LastReportTime_set, doc=r"""上次报告时间""")
    ConnectDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ConnectDate_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ConnectDate_set, doc=r"""完成连接日期""")
    ConnectTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_ConnectTime_get, _soptthosttraderapi.CThostFtdcTraderOfferField_ConnectTime_set, doc=r"""完成连接时间""")
    StartDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_StartDate_get, _soptthosttraderapi.CThostFtdcTraderOfferField_StartDate_set, doc=r"""启动日期""")
    StartTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_StartTime_get, _soptthosttraderapi.CThostFtdcTraderOfferField_StartTime_set, doc=r"""启动时间""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_TradingDay_get, _soptthosttraderapi.CThostFtdcTraderOfferField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_BrokerID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_BrokerID_set, doc=r"""经纪公司代码""")
    MaxTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_MaxTradeID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_MaxTradeID_set, doc=r"""本席位最大成交编号""")
    MaxOrderMessageReference: "ctp_sopt::TThostFtdcReturnCodeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_MaxOrderMessageReference_get, _soptthosttraderapi.CThostFtdcTraderOfferField_MaxOrderMessageReference_set, doc=r"""本席位最大报单备拷""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_BizType_get, _soptthosttraderapi.CThostFtdcTraderOfferField_BizType_set, doc=r"""业务类型""")
    PbuSequenceID: "ctp_sopt::TThostFtdcPbuSequenceIDType" = property(_soptthosttraderapi.CThostFtdcTraderOfferField_PbuSequenceID_get, _soptthosttraderapi.CThostFtdcTraderOfferField_PbuSequenceID_set, doc=r"""PBU序号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTraderOfferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTraderOfferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTraderOfferField

# Register CThostFtdcTraderOfferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTraderOfferField_swigregister(CThostFtdcTraderOfferField)
class CThostFtdcSettlementInfoField(object):
    r"""投资者结算结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_TradingDay_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_SettlementID_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_SettlementID_set, doc=r"""结算编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_InvestorID_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_InvestorID_set, doc=r"""投资者代码""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_SequenceNo_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_SequenceNo_set, doc=r"""序号""")
    Content: "ctp_sopt::TThostFtdcContentType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_Content_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_Content_set, doc=r"""消息正文""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_AccountID_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSettlementInfoField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSettlementInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSettlementInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSettlementInfoField

# Register CThostFtdcSettlementInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSettlementInfoField_swigregister(CThostFtdcSettlementInfoField)
class CThostFtdcInstrumentMarginRateAdjustField(object):
    r"""合约保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set, doc=r"""是否相对交易所收取""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentMarginRateAdjustField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentMarginRateAdjustField

# Register CThostFtdcInstrumentMarginRateAdjustField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentMarginRateAdjustField_swigregister(CThostFtdcInstrumentMarginRateAdjustField)
class CThostFtdcExchangeMarginRateField(object):
    r"""交易所保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeMarginRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeMarginRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeMarginRateField

# Register CThostFtdcExchangeMarginRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeMarginRateField_swigregister(CThostFtdcExchangeMarginRateField)
class CThostFtdcExchangeMarginRateAdjustField(object):
    r"""交易所保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set, doc=r"""跟随交易所投资者多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set, doc=r"""跟随交易所投资者多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set, doc=r"""跟随交易所投资者空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set, doc=r"""跟随交易所投资者空头保证金费""")
    ExchLongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set, doc=r"""交易所多头保证金率""")
    ExchLongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set, doc=r"""交易所多头保证金费""")
    ExchShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set, doc=r"""交易所空头保证金率""")
    ExchShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set, doc=r"""交易所空头保证金费""")
    NoLongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set, doc=r"""不跟随交易所投资者多头保证金率""")
    NoLongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set, doc=r"""不跟随交易所投资者多头保证金费""")
    NoShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set, doc=r"""不跟随交易所投资者空头保证金率""")
    NoShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set, doc=r"""不跟随交易所投资者空头保证金费""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeMarginRateAdjustField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeMarginRateAdjustField

# Register CThostFtdcExchangeMarginRateAdjustField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeMarginRateAdjustField_swigregister(CThostFtdcExchangeMarginRateAdjustField)
class CThostFtdcExchangeRateField(object):
    r"""汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeRateField_BrokerID_set, doc=r"""经纪公司代码""")
    FromCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcExchangeRateField_FromCurrencyID_get, _soptthosttraderapi.CThostFtdcExchangeRateField_FromCurrencyID_set, doc=r"""源币种""")
    FromCurrencyUnit: "ctp_sopt::TThostFtdcCurrencyUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeRateField_FromCurrencyUnit_get, _soptthosttraderapi.CThostFtdcExchangeRateField_FromCurrencyUnit_set, doc=r"""源币种单位数量""")
    ToCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcExchangeRateField_ToCurrencyID_get, _soptthosttraderapi.CThostFtdcExchangeRateField_ToCurrencyID_set, doc=r"""目标币种""")
    ExchangeRate: "ctp_sopt::TThostFtdcExchangeRateType" = property(_soptthosttraderapi.CThostFtdcExchangeRateField_ExchangeRate_get, _soptthosttraderapi.CThostFtdcExchangeRateField_ExchangeRate_set, doc=r"""汇率""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeRateField

# Register CThostFtdcExchangeRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeRateField_swigregister(CThostFtdcExchangeRateField)
class CThostFtdcSettlementRefField(object):
    r"""结算引用"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSettlementRefField_TradingDay_get, _soptthosttraderapi.CThostFtdcSettlementRefField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcSettlementRefField_SettlementID_get, _soptthosttraderapi.CThostFtdcSettlementRefField_SettlementID_set, doc=r"""结算编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSettlementRefField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSettlementRefField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSettlementRefField

# Register CThostFtdcSettlementRefField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSettlementRefField_swigregister(CThostFtdcSettlementRefField)
class CThostFtdcCurrentTimeField(object):
    r"""当前时间"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CurrDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcCurrentTimeField_CurrDate_get, _soptthosttraderapi.CThostFtdcCurrentTimeField_CurrDate_set, doc=r"""当前日期""")
    CurrTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcCurrentTimeField_CurrTime_get, _soptthosttraderapi.CThostFtdcCurrentTimeField_CurrTime_set, doc=r"""当前时间""")
    CurrMillisec: "ctp_sopt::TThostFtdcMillisecType" = property(_soptthosttraderapi.CThostFtdcCurrentTimeField_CurrMillisec_get, _soptthosttraderapi.CThostFtdcCurrentTimeField_CurrMillisec_set, doc=r"""当前时间（毫秒）""")
    ActionDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcCurrentTimeField_ActionDay_get, _soptthosttraderapi.CThostFtdcCurrentTimeField_ActionDay_set, doc=r"""业务日期""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCurrentTimeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCurrentTimeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCurrentTimeField

# Register CThostFtdcCurrentTimeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCurrentTimeField_swigregister(CThostFtdcCurrentTimeField)
class CThostFtdcCommPhaseField(object):
    r"""通讯阶段"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcCommPhaseField_TradingDay_get, _soptthosttraderapi.CThostFtdcCommPhaseField_TradingDay_set, doc=r"""交易日""")
    CommPhaseNo: "ctp_sopt::TThostFtdcCommPhaseNoType" = property(_soptthosttraderapi.CThostFtdcCommPhaseField_CommPhaseNo_get, _soptthosttraderapi.CThostFtdcCommPhaseField_CommPhaseNo_set, doc=r"""通讯时段编号""")
    SystemID: "ctp_sopt::TThostFtdcSystemIDType" = property(_soptthosttraderapi.CThostFtdcCommPhaseField_SystemID_get, _soptthosttraderapi.CThostFtdcCommPhaseField_SystemID_set, doc=r"""系统编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCommPhaseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCommPhaseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCommPhaseField

# Register CThostFtdcCommPhaseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCommPhaseField_swigregister(CThostFtdcCommPhaseField)
class CThostFtdcLoginInfoField(object):
    r"""登录信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_FrontID_get, _soptthosttraderapi.CThostFtdcLoginInfoField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_SessionID_get, _soptthosttraderapi.CThostFtdcLoginInfoField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcLoginInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_UserID_get, _soptthosttraderapi.CThostFtdcLoginInfoField_UserID_set, doc=r"""用户代码""")
    LoginDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_LoginDate_get, _soptthosttraderapi.CThostFtdcLoginInfoField_LoginDate_set, doc=r"""登录日期""")
    LoginTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_LoginTime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_LoginTime_set, doc=r"""登录时间""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_reserve1_get, _soptthosttraderapi.CThostFtdcLoginInfoField_reserve1_set, doc=r"""保留的无效字段""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcLoginInfoField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_InterfaceProductInfo_get, _soptthosttraderapi.CThostFtdcLoginInfoField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "ctp_sopt::TThostFtdcProtocolInfoType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_ProtocolInfo_get, _soptthosttraderapi.CThostFtdcLoginInfoField_ProtocolInfo_set, doc=r"""协议信息""")
    SystemName: "ctp_sopt::TThostFtdcSystemNameType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_SystemName_get, _soptthosttraderapi.CThostFtdcLoginInfoField_SystemName_set, doc=r"""系统名称""")
    PasswordDeprecated: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_PasswordDeprecated_get, _soptthosttraderapi.CThostFtdcLoginInfoField_PasswordDeprecated_set, doc=r"""密码,已弃用""")
    MaxOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_MaxOrderRef_get, _soptthosttraderapi.CThostFtdcLoginInfoField_MaxOrderRef_set, doc=r"""最大报单引用""")
    SHFETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_SHFETime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_SHFETime_set, doc=r"""上期所时间""")
    DCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_DCETime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_DCETime_set, doc=r"""大商所时间""")
    CZCETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_CZCETime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_CZCETime_set, doc=r"""郑商所时间""")
    FFEXTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_FFEXTime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_FFEXTime_set, doc=r"""中金所时间""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_MacAddress_get, _soptthosttraderapi.CThostFtdcLoginInfoField_MacAddress_set, doc=r"""Mac地址""")
    OneTimePassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_OneTimePassword_get, _soptthosttraderapi.CThostFtdcLoginInfoField_OneTimePassword_set, doc=r"""动态密码""")
    INETime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_INETime_get, _soptthosttraderapi.CThostFtdcLoginInfoField_INETime_set, doc=r"""能源中心时间""")
    IsQryControl: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_IsQryControl_get, _soptthosttraderapi.CThostFtdcLoginInfoField_IsQryControl_set, doc=r"""查询时是否需要流控""")
    LoginRemark: "ctp_sopt::TThostFtdcLoginRemarkType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_LoginRemark_get, _soptthosttraderapi.CThostFtdcLoginInfoField_LoginRemark_set, doc=r"""登录备注""")
    SmsCode: "ctp_sopt::TThostFtdcSmsCodeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_SmsCode_get, _soptthosttraderapi.CThostFtdcLoginInfoField_SmsCode_set, doc=r"""短信验证码""")
    EncryptType: "ctp_sopt::TThostFtdcPasswordEncryptTypeType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_EncryptType_get, _soptthosttraderapi.CThostFtdcLoginInfoField_EncryptType_set, doc=r"""密码加密类型,0不加密，1随机加密，2简单加密""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginInfoField_IPAddress_get, _soptthosttraderapi.CThostFtdcLoginInfoField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLoginInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLoginInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLoginInfoField

# Register CThostFtdcLoginInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLoginInfoField_swigregister(CThostFtdcLoginInfoField)
class CThostFtdcLogoutAllField(object):
    r"""登录信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcLogoutAllField_FrontID_get, _soptthosttraderapi.CThostFtdcLogoutAllField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcLogoutAllField_SessionID_get, _soptthosttraderapi.CThostFtdcLogoutAllField_SessionID_set, doc=r"""会话编号""")
    SystemName: "ctp_sopt::TThostFtdcSystemNameType" = property(_soptthosttraderapi.CThostFtdcLogoutAllField_SystemName_get, _soptthosttraderapi.CThostFtdcLogoutAllField_SystemName_set, doc=r"""系统名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLogoutAllField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLogoutAllField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLogoutAllField

# Register CThostFtdcLogoutAllField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLogoutAllField_swigregister(CThostFtdcLogoutAllField)
class CThostFtdcFrontStatusField(object):
    r"""前置状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcFrontStatusField_FrontID_get, _soptthosttraderapi.CThostFtdcFrontStatusField_FrontID_set, doc=r"""前置编号""")
    LastReportDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcFrontStatusField_LastReportDate_get, _soptthosttraderapi.CThostFtdcFrontStatusField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcFrontStatusField_LastReportTime_get, _soptthosttraderapi.CThostFtdcFrontStatusField_LastReportTime_set, doc=r"""上次报告时间""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcFrontStatusField_IsActive_get, _soptthosttraderapi.CThostFtdcFrontStatusField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcFrontStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcFrontStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcFrontStatusField

# Register CThostFtdcFrontStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcFrontStatusField_swigregister(CThostFtdcFrontStatusField)
class CThostFtdcUserPasswordUpdateField(object):
    r"""用户口令变更"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_UserID_get, _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_UserID_set, doc=r"""用户代码""")
    OldPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_OldPassword_get, _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_NewPassword_get, _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_NewPassword_set, doc=r"""新的口令""")
    EncryptType: "ctp_sopt::TThostFtdcPasswordEncryptTypeType" = property(_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_EncryptType_get, _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_EncryptType_set, doc=r"""加密类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserPasswordUpdateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserPasswordUpdateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserPasswordUpdateField

# Register CThostFtdcUserPasswordUpdateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserPasswordUpdateField_swigregister(CThostFtdcUserPasswordUpdateField)
class CThostFtdcInputOrderField(object):
    r"""输入报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputOrderField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_OrderRef_get, _soptthosttraderapi.CThostFtdcInputOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_UserID_get, _soptthosttraderapi.CThostFtdcInputOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcInputOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_Direction_get, _soptthosttraderapi.CThostFtdcInputOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcInputOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcInputOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcInputOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcInputOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcInputOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcInputOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcInputOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcInputOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcInputOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcInputOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcInputOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcInputOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcInputOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_UserForceClose_get, _soptthosttraderapi.CThostFtdcInputOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    IsSwapOrder: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_IsSwapOrder_get, _soptthosttraderapi.CThostFtdcInputOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcInputOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInputOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcInputOrderField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcInputOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputOrderField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcInputOrderField_ComTradeID_set, doc=r"""组合编号""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputOrderField

# Register CThostFtdcInputOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputOrderField_swigregister(CThostFtdcInputOrderField)
class CThostFtdcOrderField(object):
    r"""报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOrderField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderRef_get, _soptthosttraderapi.CThostFtdcOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_UserID_get, _soptthosttraderapi.CThostFtdcOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcOrderField_Direction_get, _soptthosttraderapi.CThostFtdcOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderSysID_get, _soptthosttraderapi.CThostFtdcOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "ctp_sopt::TThostFtdcOrderSourceType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderSource_get, _soptthosttraderapi.CThostFtdcOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "ctp_sopt::TThostFtdcOrderStatusType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderStatus_get, _soptthosttraderapi.CThostFtdcOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "ctp_sopt::TThostFtdcOrderTypeType" = property(_soptthosttraderapi.CThostFtdcOrderField_OrderType_get, _soptthosttraderapi.CThostFtdcOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderField_VolumeTraded_get, _soptthosttraderapi.CThostFtdcOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderField_VolumeTotal_get, _soptthosttraderapi.CThostFtdcOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderField_ActiveTime_get, _soptthosttraderapi.CThostFtdcOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderField_SuspendTime_get, _soptthosttraderapi.CThostFtdcOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderField_UpdateTime_get, _soptthosttraderapi.CThostFtdcOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ActiveTraderID_get, _soptthosttraderapi.CThostFtdcOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_FrontID_get, _soptthosttraderapi.CThostFtdcOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_SessionID_get, _soptthosttraderapi.CThostFtdcOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcOrderField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcOrderField_StatusMsg_get, _soptthosttraderapi.CThostFtdcOrderField_StatusMsg_set, doc=r"""状态信息""")
    UserForceClose: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOrderField_UserForceClose_get, _soptthosttraderapi.CThostFtdcOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOrderSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOrderField_BrokerOrderSeq_get, _soptthosttraderapi.CThostFtdcOrderField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    RelativeOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_RelativeOrderSysID_get, _soptthosttraderapi.CThostFtdcOrderField_RelativeOrderSysID_set, doc=r"""相关报单""")
    ZCETotalTradedVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderField_ZCETotalTradedVolume_get, _soptthosttraderapi.CThostFtdcOrderField_ZCETotalTradedVolume_set, doc=r"""郑商所成交数量""")
    IsSwapOrder: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOrderField_IsSwapOrder_get, _soptthosttraderapi.CThostFtdcOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcOrderField_OwnerType_set, doc=r"""所有者类型""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcOrderField_ComTradeID_set, doc=r"""组合编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOrderField

# Register CThostFtdcOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOrderField_swigregister(CThostFtdcOrderField)
class CThostFtdcExchangeOrderField(object):
    r"""交易所报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_Direction_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "ctp_sopt::TThostFtdcOrderSourceType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSource_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "ctp_sopt::TThostFtdcOrderStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderStatus_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "ctp_sopt::TThostFtdcOrderTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OrderType_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTraded_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTotal_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ActiveTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_SuspendTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_UpdateTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ActiveTraderID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_SequenceNo_set, doc=r"""序号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_OwnerType_set, doc=r"""所有者类型""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_ComTradeID_set, doc=r"""组合编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOrderField

# Register CThostFtdcExchangeOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOrderField_swigregister(CThostFtdcExchangeOrderField)
class CThostFtdcExchangeOrderInsertErrorField(object):
    r"""交易所报单插入失败"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set, doc=r"""本地报单编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOrderInsertErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOrderInsertErrorField

# Register CThostFtdcExchangeOrderInsertErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOrderInsertErrorField_swigregister(CThostFtdcExchangeOrderInsertErrorField)
class CThostFtdcInputOrderActionField(object):
    r"""输入报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_OrderRef_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_OrderSysID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_LimitPrice_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_VolumeChange_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputOrderActionField

# Register CThostFtdcInputOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputOrderActionField_swigregister(CThostFtdcInputOrderActionField)
class CThostFtdcOrderActionField(object):
    r"""报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OrderRef_get, _soptthosttraderapi.CThostFtdcOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OrderSysID_get, _soptthosttraderapi.CThostFtdcOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_LimitPrice_get, _soptthosttraderapi.CThostFtdcOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_VolumeChange_get, _soptthosttraderapi.CThostFtdcOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOrderActionField

# Register CThostFtdcOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOrderActionField_swigregister(CThostFtdcOrderActionField)
class CThostFtdcExchangeOrderActionField(object):
    r"""交易所报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_LimitPrice_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_VolumeChange_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_UserID_set, doc=r"""用户代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOrderActionField

# Register CThostFtdcExchangeOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOrderActionField_swigregister(CThostFtdcExchangeOrderActionField)
class CThostFtdcExchangeOrderActionErrorField(object):
    r"""交易所报单操作失败"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_OrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_OrderSysID_set, doc=r"""报单编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set, doc=r"""错误信息""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_BrokerID_set, doc=r"""经纪公司代码""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_CancelTime_set, doc=r"""撤销时间""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_ClientID_set, doc=r"""客户代码""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOrderActionErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOrderActionErrorField

# Register CThostFtdcExchangeOrderActionErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOrderActionErrorField_swigregister(CThostFtdcExchangeOrderActionErrorField)
class CThostFtdcExchangeTradeField(object):
    r"""交易所成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradeID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradeID_set, doc=r"""成交编号""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_Direction_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_Direction_set, doc=r"""买卖方向""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_OrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_OrderSysID_set, doc=r"""报单编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ClientID_set, doc=r"""客户代码""")
    TradingRole: "ctp_sopt::TThostFtdcTradingRoleType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradingRole_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradingRole_set, doc=r"""交易角色""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_HedgeFlag_set, doc=r"""投机套保标志""")
    Price: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_Price_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_Price_set, doc=r"""价格""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_Volume_set, doc=r"""数量""")
    TradeDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradeDate_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradeDate_set, doc=r"""成交时期""")
    TradeTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradeTime_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradeTime_set, doc=r"""成交时间""")
    TradeType: "ctp_sopt::TThostFtdcTradeTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradeType_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradeType_set, doc=r"""成交类型""")
    PriceSource: "ctp_sopt::TThostFtdcPriceSourceType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_PriceSource_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_PriceSource_set, doc=r"""成交价来源""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TraderID_set, doc=r"""交易所交易员代码""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_OrderLocalID_set, doc=r"""本地报单编号""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ClearingPartID_set, doc=r"""结算会员编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_BusinessUnit_set, doc=r"""业务单元""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_SequenceNo_set, doc=r"""序号""")
    TradeSource: "ctp_sopt::TThostFtdcTradeSourceType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_TradeSource_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_TradeSource_set, doc=r"""成交来源""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_OwnerType_set, doc=r"""所有者类型""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_ComTradeID_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_ComTradeID_set, doc=r"""组合编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeTradeField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeTradeField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeTradeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeTradeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeTradeField

# Register CThostFtdcExchangeTradeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeTradeField_swigregister(CThostFtdcExchangeTradeField)
class CThostFtdcTradeField(object):
    r"""成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_InvestorID_get, _soptthosttraderapi.CThostFtdcTradeField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcTradeField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcTradeField_OrderRef_get, _soptthosttraderapi.CThostFtdcTradeField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_UserID_get, _soptthosttraderapi.CThostFtdcTradeField_UserID_set, doc=r"""用户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradeID_get, _soptthosttraderapi.CThostFtdcTradeField_TradeID_set, doc=r"""成交编号""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcTradeField_Direction_get, _soptthosttraderapi.CThostFtdcTradeField_Direction_set, doc=r"""买卖方向""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_OrderSysID_get, _soptthosttraderapi.CThostFtdcTradeField_OrderSysID_set, doc=r"""报单编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ParticipantID_get, _soptthosttraderapi.CThostFtdcTradeField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ClientID_get, _soptthosttraderapi.CThostFtdcTradeField_ClientID_set, doc=r"""客户代码""")
    TradingRole: "ctp_sopt::TThostFtdcTradingRoleType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradingRole_get, _soptthosttraderapi.CThostFtdcTradeField_TradingRole_set, doc=r"""交易角色""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcTradeField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcTradeField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcTradeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcTradeField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcTradeField_HedgeFlag_set, doc=r"""投机套保标志""")
    Price: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcTradeField_Price_get, _soptthosttraderapi.CThostFtdcTradeField_Price_set, doc=r"""价格""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcTradeField_Volume_get, _soptthosttraderapi.CThostFtdcTradeField_Volume_set, doc=r"""数量""")
    TradeDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradeDate_get, _soptthosttraderapi.CThostFtdcTradeField_TradeDate_set, doc=r"""成交时期""")
    TradeTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradeTime_get, _soptthosttraderapi.CThostFtdcTradeField_TradeTime_set, doc=r"""成交时间""")
    TradeType: "ctp_sopt::TThostFtdcTradeTypeType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradeType_get, _soptthosttraderapi.CThostFtdcTradeField_TradeType_set, doc=r"""成交类型""")
    PriceSource: "ctp_sopt::TThostFtdcPriceSourceType" = property(_soptthosttraderapi.CThostFtdcTradeField_PriceSource_get, _soptthosttraderapi.CThostFtdcTradeField_PriceSource_set, doc=r"""成交价来源""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_TraderID_get, _soptthosttraderapi.CThostFtdcTradeField_TraderID_set, doc=r"""交易所交易员代码""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcTradeField_OrderLocalID_set, doc=r"""本地报单编号""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcTradeField_ClearingPartID_set, doc=r"""结算会员编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcTradeField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcTradeField_BusinessUnit_set, doc=r"""业务单元""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcTradeField_SequenceNo_get, _soptthosttraderapi.CThostFtdcTradeField_SequenceNo_set, doc=r"""序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradingDay_get, _soptthosttraderapi.CThostFtdcTradeField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_SettlementID_get, _soptthosttraderapi.CThostFtdcTradeField_SettlementID_set, doc=r"""结算编号""")
    BrokerOrderSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcTradeField_BrokerOrderSeq_get, _soptthosttraderapi.CThostFtdcTradeField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    TradeSource: "ctp_sopt::TThostFtdcTradeSourceType" = property(_soptthosttraderapi.CThostFtdcTradeField_TradeSource_get, _soptthosttraderapi.CThostFtdcTradeField_TradeSource_set, doc=r"""成交来源""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcTradeField_InvestUnitID_set, doc=r"""投资单元代码""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcTradeField_OwnerType_get, _soptthosttraderapi.CThostFtdcTradeField_OwnerType_set, doc=r"""所有者类型""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_ComTradeID_get, _soptthosttraderapi.CThostFtdcTradeField_ComTradeID_set, doc=r"""组合编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcTradeField_LoginPBU_get, _soptthosttraderapi.CThostFtdcTradeField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradeField

# Register CThostFtdcTradeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradeField_swigregister(CThostFtdcTradeField)
class CThostFtdcUserSessionField(object):
    r"""用户会话"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_FrontID_get, _soptthosttraderapi.CThostFtdcUserSessionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_SessionID_get, _soptthosttraderapi.CThostFtdcUserSessionField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserSessionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_UserID_get, _soptthosttraderapi.CThostFtdcUserSessionField_UserID_set, doc=r"""用户代码""")
    LoginDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_LoginDate_get, _soptthosttraderapi.CThostFtdcUserSessionField_LoginDate_set, doc=r"""登录日期""")
    LoginTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_LoginTime_get, _soptthosttraderapi.CThostFtdcUserSessionField_LoginTime_set, doc=r"""登录时间""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_reserve1_get, _soptthosttraderapi.CThostFtdcUserSessionField_reserve1_set, doc=r"""保留的无效字段""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcUserSessionField_UserProductInfo_set, doc=r"""用户端产品信息""")
    InterfaceProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_InterfaceProductInfo_get, _soptthosttraderapi.CThostFtdcUserSessionField_InterfaceProductInfo_set, doc=r"""接口端产品信息""")
    ProtocolInfo: "ctp_sopt::TThostFtdcProtocolInfoType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_ProtocolInfo_get, _soptthosttraderapi.CThostFtdcUserSessionField_ProtocolInfo_set, doc=r"""协议信息""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_MacAddress_get, _soptthosttraderapi.CThostFtdcUserSessionField_MacAddress_set, doc=r"""Mac地址""")
    LoginRemark: "ctp_sopt::TThostFtdcLoginRemarkType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_LoginRemark_get, _soptthosttraderapi.CThostFtdcUserSessionField_LoginRemark_set, doc=r"""登录备注""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserSessionField_IPAddress_get, _soptthosttraderapi.CThostFtdcUserSessionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserSessionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserSessionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserSessionField

# Register CThostFtdcUserSessionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserSessionField_swigregister(CThostFtdcUserSessionField)
class CThostFtdcQueryMaxOrderVolumeField(object):
    r"""查询最大报单数量"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InstrumentID_set, doc=r"""合约代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_Direction_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_Direction_set, doc=r"""买卖方向""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_set, doc=r"""投机套保标志""")
    MaxVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_MaxVolume_set, doc=r"""最大允许报单数量""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQueryMaxOrderVolumeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQueryMaxOrderVolumeField

# Register CThostFtdcQueryMaxOrderVolumeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeField_swigregister(CThostFtdcQueryMaxOrderVolumeField)
class CThostFtdcSettlementInfoConfirmField(object):
    r"""投资者结算结果确认信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_BrokerID_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_InvestorID_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_InvestorID_set, doc=r"""投资者代码""")
    ConfirmDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_ConfirmDate_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_ConfirmDate_set, doc=r"""确认日期""")
    ConfirmTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_ConfirmTime_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_ConfirmTime_set, doc=r"""确认时间""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_SettlementID_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_SettlementID_set, doc=r"""结算编号""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_AccountID_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSettlementInfoConfirmField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSettlementInfoConfirmField

# Register CThostFtdcSettlementInfoConfirmField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSettlementInfoConfirmField_swigregister(CThostFtdcSettlementInfoConfirmField)
class CThostFtdcSyncDepositField(object):
    r"""出入金同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_DepositSeqNo_get, _soptthosttraderapi.CThostFtdcSyncDepositField_DepositSeqNo_set, doc=r"""出入金流水号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncDepositField_InvestorID_set, doc=r"""投资者代码""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_Deposit_get, _soptthosttraderapi.CThostFtdcSyncDepositField_Deposit_set, doc=r"""入金金额""")
    IsForce: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_IsForce_get, _soptthosttraderapi.CThostFtdcSyncDepositField_IsForce_set, doc=r"""是否强制进行""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSyncDepositField_CurrencyID_set, doc=r"""币种代码""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcSyncDepositField_BizType_get, _soptthosttraderapi.CThostFtdcSyncDepositField_BizType_set, doc=r"""业务类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncDepositField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncDepositField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncDepositField

# Register CThostFtdcSyncDepositField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncDepositField_swigregister(CThostFtdcSyncDepositField)
class CThostFtdcSyncFundMortgageField(object):
    r"""货币质押同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    MortgageSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_MortgageSeqNo_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_MortgageSeqNo_set, doc=r"""货币质押流水号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_InvestorID_set, doc=r"""投资者代码""")
    FromCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_FromCurrencyID_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_FromCurrencyID_set, doc=r"""源币种""")
    MortgageAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_MortgageAmount_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_MortgageAmount_set, doc=r"""质押金额""")
    ToCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncFundMortgageField_ToCurrencyID_get, _soptthosttraderapi.CThostFtdcSyncFundMortgageField_ToCurrencyID_set, doc=r"""目标币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncFundMortgageField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncFundMortgageField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncFundMortgageField

# Register CThostFtdcSyncFundMortgageField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncFundMortgageField_swigregister(CThostFtdcSyncFundMortgageField)
class CThostFtdcBrokerSyncField(object):
    r"""经纪公司同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerSyncField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerSyncField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerSyncField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerSyncField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerSyncField

# Register CThostFtdcBrokerSyncField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerSyncField_swigregister(CThostFtdcBrokerSyncField)
class CThostFtdcSyncingInvestorField(object):
    r"""正在同步中的投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorGroupID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorName: "ctp_sopt::TThostFtdcPartyNameType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorName_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_InvestorName_set, doc=r"""投资者名称""")
    IdentifiedCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_IdentifiedCardType_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_IdentifiedCardNo_set, doc=r"""证件号码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_IsActive_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_IsActive_set, doc=r"""是否活跃""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_Telephone_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_Telephone_set, doc=r"""联系电话""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_Address_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_Address_set, doc=r"""通讯地址""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_OpenDate_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_OpenDate_set, doc=r"""开户日期""")
    Mobile: "ctp_sopt::TThostFtdcMobileType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_Mobile_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_Mobile_set, doc=r"""手机""")
    CommModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_CommModelID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorField_MarginModelID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorField_MarginModelID_set, doc=r"""保证金率模板代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInvestorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInvestorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInvestorField

# Register CThostFtdcSyncingInvestorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInvestorField_swigregister(CThostFtdcSyncingInvestorField)
class CThostFtdcSyncingTradingCodeField(object):
    r"""正在同步中的交易代码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ClientID_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ClientID_set, doc=r"""客户代码""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_IsActive_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_IsActive_set, doc=r"""是否活跃""")
    ClientIDType: "ctp_sopt::TThostFtdcClientIDTypeType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ClientIDType_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_BranchID_get, _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_BranchID_set, doc=r"""营业部编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingTradingCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingTradingCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingTradingCodeField

# Register CThostFtdcSyncingTradingCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingTradingCodeField_swigregister(CThostFtdcSyncingTradingCodeField)
class CThostFtdcSyncingInvestorGroupField(object):
    r"""正在同步中的投资者分组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorGroupID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    InvestorGroupName: "ctp_sopt::TThostFtdcInvestorGroupNameType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get, _soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set, doc=r"""投资者分组名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInvestorGroupField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInvestorGroupField

# Register CThostFtdcSyncingInvestorGroupField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInvestorGroupField_swigregister(CThostFtdcSyncingInvestorGroupField)
class CThostFtdcSyncingTradingAccountField(object):
    r"""正在同步中的交易账号"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_AccountID_set, doc=r"""投资者帐号""")
    PreMortgage: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreMortgage_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreMortgage_set, doc=r"""上次质押金额""")
    PreCredit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreCredit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreCredit_set, doc=r"""上次信用额度""")
    PreDeposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreDeposit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreDeposit_set, doc=r"""上次存款额""")
    PreBalance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreBalance_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreBalance_set, doc=r"""上次结算准备金""")
    PreMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreMargin_set, doc=r"""上次占用的保证金""")
    InterestBase: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_InterestBase_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_InterestBase_set, doc=r"""利息基数""")
    Interest: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Interest_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Interest_set, doc=r"""利息收入""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Deposit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Withdraw_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenCash_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenCommission_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CurrMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CurrMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CurrMargin_set, doc=r"""当前保证金总额""")
    CashIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CashIn_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CashIn_set, doc=r"""资金差额""")
    Commission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Commission_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Commission_set, doc=r"""手续费""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CloseProfit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PositionProfit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PositionProfit_set, doc=r"""持仓盈亏""")
    Balance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Balance_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Balance_set, doc=r"""期货结算准备金""")
    Available: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Available_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_WithdrawQuota_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Reserve_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SettlementID_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    Credit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Credit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Credit_set, doc=r"""信用额度""")
    Mortgage: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Mortgage_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_Mortgage_set, doc=r"""质押金额""")
    ExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ExchangeMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ExchangeMargin_set, doc=r"""交易所保证金""")
    DeliveryMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_DeliveryMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_DeliveryMargin_set, doc=r"""投资者交割保证金""")
    ExchangeDeliveryMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set, doc=r"""交易所交割保证金""")
    ReserveBalance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ReserveBalance_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_ReserveBalance_set, doc=r"""保底期货结算准备金""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    PreFundMortgageIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set, doc=r"""上次货币质入金额""")
    PreFundMortgageOut: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set, doc=r"""上次货币质出金额""")
    FundMortgageIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageIn_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageIn_set, doc=r"""货币质入金额""")
    FundMortgageOut: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageOut_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageOut_set, doc=r"""货币质出金额""")
    FundMortgageAvailable: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set, doc=r"""货币质押余额""")
    MortgageableFund: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_MortgageableFund_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_MortgageableFund_set, doc=r"""可质押货币金额""")
    SpecProductMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductMargin_set, doc=r"""特殊产品占用保证金""")
    SpecProductFrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set, doc=r"""特殊产品冻结保证金""")
    SpecProductCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductCommission_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductCommission_set, doc=r"""特殊产品手续费""")
    SpecProductFrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set, doc=r"""特殊产品冻结手续费""")
    SpecProductPositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set, doc=r"""特殊产品持仓盈亏""")
    SpecProductCloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set, doc=r"""特殊产品平仓盈亏""")
    SpecProductPositionProfitByAlg: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set, doc=r"""根据持仓盈亏算法计算的特殊产品持仓盈亏""")
    SpecProductExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set, doc=r"""特殊产品交易所保证金""")
    FrozenSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenSwap_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_FrozenSwap_set, doc=r"""延时换汇冻结金额""")
    RemainSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_RemainSwap_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_RemainSwap_set, doc=r"""剩余换汇额度""")
    OptionValue: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_OptionValue_get, _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_OptionValue_set, doc=r"""市值""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingTradingAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingTradingAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingTradingAccountField

# Register CThostFtdcSyncingTradingAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingTradingAccountField_swigregister(CThostFtdcSyncingTradingAccountField)
class CThostFtdcSyncingInvestorPositionField(object):
    r"""正在同步中的投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PosiDirection_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PosiDirection_set, doc=r"""持仓多空方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_HedgeFlag_set, doc=r"""投机套保标志""")
    PositionDate: "ctp_sopt::TThostFtdcPositionDateType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionDate_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionDate_set, doc=r"""持仓日期""")
    YdPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_YdPosition_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_YdPosition_set, doc=r"""上日持仓""")
    Position: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_Position_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_Position_set, doc=r"""今日持仓""")
    LongFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_LongFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_LongFrozen_set, doc=r"""多头冻结""")
    ShortFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ShortFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ShortFrozen_set, doc=r"""空头冻结""")
    LongFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set, doc=r"""开仓冻结金额""")
    ShortFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set, doc=r"""开仓冻结金额""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenVolume_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenVolume_set, doc=r"""开仓量""")
    CloseVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseVolume_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseVolume_set, doc=r"""平仓量""")
    OpenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenAmount_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenAmount_set, doc=r"""开仓金额""")
    CloseAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseAmount_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseAmount_set, doc=r"""平仓金额""")
    PositionCost: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionCost_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionCost_set, doc=r"""持仓成本""")
    PreMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PreMargin_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PreMargin_set, doc=r"""上次占用的保证金""")
    UseMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_UseMargin_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_UseMargin_set, doc=r"""占用的保证金""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenMargin_set, doc=r"""冻结的保证金""")
    FrozenCash: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenCash_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenCash_set, doc=r"""冻结的资金""")
    FrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenCommission_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_FrozenCommission_set, doc=r"""冻结的手续费""")
    CashIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CashIn_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CashIn_set, doc=r"""资金差额""")
    Commission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_Commission_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_Commission_set, doc=r"""手续费""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfit_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfit_set, doc=r"""平仓盈亏""")
    PositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionProfit_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PositionProfit_set, doc=r"""持仓盈亏""")
    PreSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set, doc=r"""上次结算价""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_SettlementPrice_set, doc=r"""本次结算价""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_TradingDay_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_SettlementID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_SettlementID_set, doc=r"""结算编号""")
    OpenCost: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenCost_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OpenCost_set, doc=r"""开仓成本""")
    ExchangeMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set, doc=r"""交易所保证金""")
    CombPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombPosition_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombPosition_set, doc=r"""组合成交形成的持仓""")
    CombLongFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set, doc=r"""组合多头冻结""")
    CombShortFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set, doc=r"""组合空头冻结""")
    CloseProfitByDate: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    TodayPosition: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_TodayPosition_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_TodayPosition_set, doc=r"""今日持仓""")
    MarginRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    StrikeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set, doc=r"""执行冻结""")
    StrikeFrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set, doc=r"""执行冻结金额""")
    AbandonFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set, doc=r"""放弃执行冻结""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    YdStrikeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_YdStrikeFrozen_set, doc=r"""执行冻结的昨仓""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")
    OptionValue: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OptionValue_get, _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_OptionValue_set, doc=r"""市值""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInvestorPositionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInvestorPositionField

# Register CThostFtdcSyncingInvestorPositionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInvestorPositionField_swigregister(CThostFtdcSyncingInvestorPositionField)
class CThostFtdcSyncingInstrumentMarginRateField(object):
    r"""正在同步中的合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set, doc=r"""是否相对交易所收取""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInstrumentMarginRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInstrumentMarginRateField

# Register CThostFtdcSyncingInstrumentMarginRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInstrumentMarginRateField_swigregister(CThostFtdcSyncingInstrumentMarginRateField)
class CThostFtdcSyncingInstrumentCommissionRateField(object):
    r"""正在同步中的合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInstrumentCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInstrumentCommissionRateField

# Register CThostFtdcSyncingInstrumentCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInstrumentCommissionRateField_swigregister(CThostFtdcSyncingInstrumentCommissionRateField)
class CThostFtdcSyncingInstrumentTradingRightField(object):
    r"""正在同步中的合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    TradingRight: "ctp_sopt::TThostFtdcTradingRightType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set, doc=r"""交易权限""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncingInstrumentTradingRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncingInstrumentTradingRightField

# Register CThostFtdcSyncingInstrumentTradingRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncingInstrumentTradingRightField_swigregister(CThostFtdcSyncingInstrumentTradingRightField)
class CThostFtdcQryOrderField(object):
    r"""查询报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOrderField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_OrderSysID_get, _soptthosttraderapi.CThostFtdcQryOrderField_OrderSysID_set, doc=r"""报单编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryOrderField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryOrderField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOrderField

# Register CThostFtdcQryOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOrderField_swigregister(CThostFtdcQryOrderField)
class CThostFtdcQryTradeField(object):
    r"""查询成交"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryTradeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryTradeField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryTradeField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryTradeField_ExchangeID_set, doc=r"""交易所代码""")
    TradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_TradeID_get, _soptthosttraderapi.CThostFtdcQryTradeField_TradeID_set, doc=r"""成交编号""")
    TradeTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_TradeTimeStart_get, _soptthosttraderapi.CThostFtdcQryTradeField_TradeTimeStart_set, doc=r"""开始时间""")
    TradeTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_TradeTimeEnd_get, _soptthosttraderapi.CThostFtdcQryTradeField_TradeTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryTradeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryTradeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTradeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTradeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTradeField

# Register CThostFtdcQryTradeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTradeField_swigregister(CThostFtdcQryTradeField)
class CThostFtdcQryInvestorPositionField(object):
    r"""查询投资者持仓"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorPositionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorPositionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorPositionField

# Register CThostFtdcQryInvestorPositionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorPositionField_swigregister(CThostFtdcQryInvestorPositionField)
class CThostFtdcQryTradingAccountField(object):
    r"""查询资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryTradingAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingAccountField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryTradingAccountField_InvestorID_set, doc=r"""投资者代码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQryTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcQryTradingAccountField_BizType_get, _soptthosttraderapi.CThostFtdcQryTradingAccountField_BizType_set, doc=r"""业务类型""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcQryTradingAccountField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTradingAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTradingAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTradingAccountField

# Register CThostFtdcQryTradingAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTradingAccountField_swigregister(CThostFtdcQryTradingAccountField)
class CThostFtdcQryInvestorField(object):
    r"""查询投资者"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorField

# Register CThostFtdcQryInvestorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorField_swigregister(CThostFtdcQryInvestorField)
class CThostFtdcQryTradingCodeField(object):
    r"""查询交易编码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_ExchangeID_set, doc=r"""交易所代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_ClientID_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_ClientID_set, doc=r"""客户代码""")
    ClientIDType: "ctp_sopt::TThostFtdcClientIDTypeType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_ClientIDType_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_ClientIDType_set, doc=r"""交易编码类型""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingCodeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryTradingCodeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTradingCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTradingCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTradingCodeField

# Register CThostFtdcQryTradingCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTradingCodeField_swigregister(CThostFtdcQryTradingCodeField)
class CThostFtdcQryInvestorGroupField(object):
    r"""查询投资者组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorGroupField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorGroupField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorGroupField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorGroupField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorGroupField

# Register CThostFtdcQryInvestorGroupField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorGroupField_swigregister(CThostFtdcQryInvestorGroupField)
class CThostFtdcQryInstrumentMarginRateField(object):
    r"""查询合约保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentMarginRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentMarginRateField

# Register CThostFtdcQryInstrumentMarginRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentMarginRateField_swigregister(CThostFtdcQryInstrumentMarginRateField)
class CThostFtdcQryInstrumentCommissionRateField(object):
    r"""查询手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentCommissionRateField

# Register CThostFtdcQryInstrumentCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentCommissionRateField_swigregister(CThostFtdcQryInstrumentCommissionRateField)
class CThostFtdcQryInstrumentTradingRightField(object):
    r"""查询合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentTradingRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentTradingRightField

# Register CThostFtdcQryInstrumentTradingRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentTradingRightField_swigregister(CThostFtdcQryInstrumentTradingRightField)
class CThostFtdcQryBrokerField(object):
    r"""查询经纪公司"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerField

# Register CThostFtdcQryBrokerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerField_swigregister(CThostFtdcQryBrokerField)
class CThostFtdcQryTraderField(object):
    r"""查询交易员"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryTraderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryTraderField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderField_TraderID_get, _soptthosttraderapi.CThostFtdcQryTraderField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTraderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTraderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTraderField

# Register CThostFtdcQryTraderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTraderField_swigregister(CThostFtdcQryTraderField)
class CThostFtdcQrySuperUserFunctionField(object):
    r"""查询管理用户功能权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQrySuperUserFunctionField_UserID_get, _soptthosttraderapi.CThostFtdcQrySuperUserFunctionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySuperUserFunctionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySuperUserFunctionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySuperUserFunctionField

# Register CThostFtdcQrySuperUserFunctionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySuperUserFunctionField_swigregister(CThostFtdcQrySuperUserFunctionField)
class CThostFtdcQryUserSessionField(object):
    r"""查询用户会话"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcQryUserSessionField_FrontID_get, _soptthosttraderapi.CThostFtdcQryUserSessionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcQryUserSessionField_SessionID_get, _soptthosttraderapi.CThostFtdcQryUserSessionField_SessionID_set, doc=r"""会话编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryUserSessionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryUserSessionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryUserSessionField_UserID_get, _soptthosttraderapi.CThostFtdcQryUserSessionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryUserSessionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryUserSessionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryUserSessionField

# Register CThostFtdcQryUserSessionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryUserSessionField_swigregister(CThostFtdcQryUserSessionField)
class CThostFtdcQryPartBrokerField(object):
    r"""查询经纪公司会员代码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryPartBrokerField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryPartBrokerField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryPartBrokerField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryPartBrokerField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryPartBrokerField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryPartBrokerField_ParticipantID_set, doc=r"""会员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryPartBrokerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryPartBrokerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryPartBrokerField

# Register CThostFtdcQryPartBrokerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryPartBrokerField_swigregister(CThostFtdcQryPartBrokerField)
class CThostFtdcQryFrontStatusField(object):
    r"""查询前置状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcQryFrontStatusField_FrontID_get, _soptthosttraderapi.CThostFtdcQryFrontStatusField_FrontID_set, doc=r"""前置编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryFrontStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryFrontStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryFrontStatusField

# Register CThostFtdcQryFrontStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryFrontStatusField_swigregister(CThostFtdcQryFrontStatusField)
class CThostFtdcQryExchangeOrderField(object):
    r"""查询交易所报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeOrderField

# Register CThostFtdcQryExchangeOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeOrderField_swigregister(CThostFtdcQryExchangeOrderField)
class CThostFtdcQryOrderActionField(object):
    r"""查询报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOrderActionField

# Register CThostFtdcQryOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOrderActionField_swigregister(CThostFtdcQryOrderActionField)
class CThostFtdcQryExchangeOrderActionField(object):
    r"""查询交易所报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeOrderActionField

# Register CThostFtdcQryExchangeOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeOrderActionField_swigregister(CThostFtdcQryExchangeOrderActionField)
class CThostFtdcQrySuperUserField(object):
    r"""查询管理用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQrySuperUserField_UserID_get, _soptthosttraderapi.CThostFtdcQrySuperUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySuperUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySuperUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySuperUserField

# Register CThostFtdcQrySuperUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySuperUserField_swigregister(CThostFtdcQrySuperUserField)
class CThostFtdcQryExchangeField(object):
    r"""查询交易所"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeField

# Register CThostFtdcQryExchangeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeField_swigregister(CThostFtdcQryExchangeField)
class CThostFtdcQryProductField(object):
    r"""查询产品"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryProductField_ProductID_get, _soptthosttraderapi.CThostFtdcQryProductField_ProductID_set, doc=r"""产品代码""")
    ProductClass: "ctp_sopt::TThostFtdcProductClassType" = property(_soptthosttraderapi.CThostFtdcQryProductField_ProductClass_get, _soptthosttraderapi.CThostFtdcQryProductField_ProductClass_set, doc=r"""产品类型""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryProductField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryProductField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryProductField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryProductField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryProductField

# Register CThostFtdcQryProductField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryProductField_swigregister(CThostFtdcQryProductField)
class CThostFtdcQryInstrumentField(object):
    r"""查询合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInstrumentField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryInstrumentField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentField_ProductID_get, _soptthosttraderapi.CThostFtdcQryInstrumentField_ProductID_set, doc=r"""产品代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentField

# Register CThostFtdcQryInstrumentField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentField_swigregister(CThostFtdcQryInstrumentField)
class CThostFtdcQryDepthMarketDataField(object):
    r"""查询行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryDepthMarketDataField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryDepthMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryDepthMarketDataField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryDepthMarketDataField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryDepthMarketDataField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryDepthMarketDataField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryDepthMarketDataField

# Register CThostFtdcQryDepthMarketDataField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryDepthMarketDataField_swigregister(CThostFtdcQryDepthMarketDataField)
class CThostFtdcQryBrokerUserField(object):
    r"""查询经纪公司用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserField_UserID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerUserField

# Register CThostFtdcQryBrokerUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerUserField_swigregister(CThostFtdcQryBrokerUserField)
class CThostFtdcQryBrokerUserFunctionField(object):
    r"""查询经纪公司用户权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_UserID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerUserFunctionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerUserFunctionField

# Register CThostFtdcQryBrokerUserFunctionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerUserFunctionField_swigregister(CThostFtdcQryBrokerUserFunctionField)
class CThostFtdcExchangeQuoteActionErrorField(object):
    r"""交易所报价撤销回报"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_QuoteSysID_set, doc=r"""报价编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_InstallID_set, doc=r"""安装编号""")
    QuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_QuoteLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_QuoteLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ErrorMsg_set, doc=r"""错误信息""")
    BidOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_BidOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_BidOrderLocalID_set, doc=r"""买报单本地报单号""")
    AskOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_AskOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_AskOrderLocalID_set, doc=r"""卖报单本地报单号""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_ClientID_set, doc=r"""客户代码""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeQuoteActionErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeQuoteActionErrorField

# Register CThostFtdcExchangeQuoteActionErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeQuoteActionErrorField_swigregister(CThostFtdcExchangeQuoteActionErrorField)
class CThostFtdcQryTraderOfferField(object):
    r"""查询交易员报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderOfferField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderOfferField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryTraderOfferField_TraderID_get, _soptthosttraderapi.CThostFtdcQryTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTraderOfferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTraderOfferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTraderOfferField

# Register CThostFtdcQryTraderOfferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTraderOfferField_swigregister(CThostFtdcQryTraderOfferField)
class CThostFtdcQrySyncDepositField(object):
    r"""查询出入金流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySyncDepositField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySyncDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    DepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcQrySyncDepositField_DepositSeqNo_get, _soptthosttraderapi.CThostFtdcQrySyncDepositField_DepositSeqNo_set, doc=r"""出入金流水号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySyncDepositField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySyncDepositField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySyncDepositField

# Register CThostFtdcQrySyncDepositField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySyncDepositField_swigregister(CThostFtdcQrySyncDepositField)
class CThostFtdcQrySettlementInfoField(object):
    r"""查询投资者结算结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoField_InvestorID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoField_InvestorID_set, doc=r"""投资者代码""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoField_TradingDay_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoField_TradingDay_set, doc=r"""交易日""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoField_AccountID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySettlementInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySettlementInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySettlementInfoField

# Register CThostFtdcQrySettlementInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySettlementInfoField_swigregister(CThostFtdcQrySettlementInfoField)
class CThostFtdcQryExchangeMarginRateField(object):
    r"""查询交易所保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeMarginRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeMarginRateField

# Register CThostFtdcQryExchangeMarginRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeMarginRateField_swigregister(CThostFtdcQryExchangeMarginRateField)
class CThostFtdcQryExchangeMarginRateAdjustField(object):
    r"""查询交易所调整保证金率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set, doc=r"""投机套保标志""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeMarginRateAdjustField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeMarginRateAdjustField

# Register CThostFtdcQryExchangeMarginRateAdjustField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeMarginRateAdjustField_swigregister(CThostFtdcQryExchangeMarginRateAdjustField)
class CThostFtdcQryExchangeRateField(object):
    r"""查询汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExchangeRateField_BrokerID_set, doc=r"""经纪公司代码""")
    FromCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeRateField_FromCurrencyID_get, _soptthosttraderapi.CThostFtdcQryExchangeRateField_FromCurrencyID_set, doc=r"""源币种""")
    ToCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeRateField_ToCurrencyID_get, _soptthosttraderapi.CThostFtdcQryExchangeRateField_ToCurrencyID_set, doc=r"""目标币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeRateField

# Register CThostFtdcQryExchangeRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeRateField_swigregister(CThostFtdcQryExchangeRateField)
class CThostFtdcQrySyncFundMortgageField(object):
    r"""查询货币质押流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_BrokerID_set, doc=r"""经纪公司代码""")
    MortgageSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get, _soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set, doc=r"""货币质押流水号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySyncFundMortgageField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySyncFundMortgageField

# Register CThostFtdcQrySyncFundMortgageField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySyncFundMortgageField_swigregister(CThostFtdcQrySyncFundMortgageField)
class CThostFtdcQryHisOrderField(object):
    r"""查询报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_OrderSysID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_OrderSysID_set, doc=r"""报单编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_InsertTimeEnd_set, doc=r"""结束时间""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcQryHisOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcQryHisOrderField_SettlementID_set, doc=r"""结算编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryHisOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryHisOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryHisOrderField

# Register CThostFtdcQryHisOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryHisOrderField_swigregister(CThostFtdcQryHisOrderField)
class CThostFtdcOptionInstrMiniMarginField(object):
    r"""当前期权合约最小保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_InvestorID_set, doc=r"""投资者代码""")
    MinMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_MinMargin_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_MinMargin_set, doc=r"""单位（手）期权合约最小保证金""")
    ValueMethod: "ctp_sopt::TThostFtdcValueMethodType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_ValueMethod_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_ValueMethod_set, doc=r"""取值方式""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_IsRelative_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrMiniMarginField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrMiniMarginField

# Register CThostFtdcOptionInstrMiniMarginField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrMiniMarginField_swigregister(CThostFtdcOptionInstrMiniMarginField)
class CThostFtdcOptionInstrMarginAdjustField(object):
    r"""当前期权合约保证金调整系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_InvestorID_set, doc=r"""投资者代码""")
    SShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set, doc=r"""投机空头保证金调整系数""")
    SShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set, doc=r"""投机空头保证金调整系数""")
    HShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set, doc=r"""保值空头保证金调整系数""")
    HShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set, doc=r"""保值空头保证金调整系数""")
    AShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set, doc=r"""套利空头保证金调整系数""")
    AShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set, doc=r"""套利空头保证金调整系数""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_IsRelative_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_ExchangeID_set, doc=r"""交易所代码""")
    MShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByMoney_set, doc=r"""做市商空头保证金调整系数""")
    MShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_MShortMarginRatioByVolume_set, doc=r"""做市商空头保证金调整系数""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrMarginAdjustField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrMarginAdjustField

# Register CThostFtdcOptionInstrMarginAdjustField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrMarginAdjustField_swigregister(CThostFtdcOptionInstrMarginAdjustField)
class CThostFtdcOptionInstrCommRateField(object):
    r"""当前期权合约手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrCommRateField

# Register CThostFtdcOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrCommRateField_swigregister(CThostFtdcOptionInstrCommRateField)
class CThostFtdcOptionInstrTradeCostField(object):
    r"""期权交易成本"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_HedgeFlag_set, doc=r"""投机套保标志""")
    FixedMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_FixedMargin_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_FixedMargin_set, doc=r"""期权合约保证金不变部分""")
    MiniMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_MiniMargin_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_MiniMargin_set, doc=r"""期权合约最小保证金""")
    Royalty: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_Royalty_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_Royalty_set, doc=r"""期权合约权利金""")
    ExchFixedMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set, doc=r"""交易所期权合约保证金不变部分""")
    ExchMiniMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set, doc=r"""交易所期权合约最小保证金""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrTradeCostField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrTradeCostField

# Register CThostFtdcOptionInstrTradeCostField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrTradeCostField_swigregister(CThostFtdcOptionInstrTradeCostField)
class CThostFtdcQryOptionInstrTradeCostField(object):
    r"""期权交易成本查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set, doc=r"""投机套保标志""")
    InputPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InputPrice_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InputPrice_set, doc=r"""期权合约报价""")
    UnderlyingPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set, doc=r"""标的价格,填0则用昨结算价""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptionInstrTradeCostField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptionInstrTradeCostField

# Register CThostFtdcQryOptionInstrTradeCostField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptionInstrTradeCostField_swigregister(CThostFtdcQryOptionInstrTradeCostField)
class CThostFtdcQryOptionInstrCommRateField(object):
    r"""期权手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptionInstrCommRateField

# Register CThostFtdcQryOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptionInstrCommRateField_swigregister(CThostFtdcQryOptionInstrCommRateField)
class CThostFtdcIndexPriceField(object):
    r"""股指现货指数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcIndexPriceField_BrokerID_get, _soptthosttraderapi.CThostFtdcIndexPriceField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcIndexPriceField_InstrumentID_get, _soptthosttraderapi.CThostFtdcIndexPriceField_InstrumentID_set, doc=r"""合约代码""")
    ClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcIndexPriceField_ClosePrice_get, _soptthosttraderapi.CThostFtdcIndexPriceField_ClosePrice_set, doc=r"""指数现货收盘价""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcIndexPriceField_ExchangeID_get, _soptthosttraderapi.CThostFtdcIndexPriceField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcIndexPriceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcIndexPriceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcIndexPriceField

# Register CThostFtdcIndexPriceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcIndexPriceField_swigregister(CThostFtdcIndexPriceField)
class CThostFtdcInputExecOrderField(object):
    r"""输入的执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_UserID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_Volume_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_PosiDirection_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "ctp_sopt::TThostFtdcExecOrderPositionFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_ReservePositionFlag_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "ctp_sopt::TThostFtdcExecOrderCloseFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_CloseFlag_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputExecOrderField

# Register CThostFtdcInputExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputExecOrderField_swigregister(CThostFtdcInputExecOrderField)
class CThostFtdcInputExecOrderActionField(object):
    r"""输入执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputExecOrderActionField

# Register CThostFtdcInputExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputExecOrderActionField_swigregister(CThostFtdcInputExecOrderActionField)
class CThostFtdcExecOrderField(object):
    r"""执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_UserID_get, _soptthosttraderapi.CThostFtdcExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_Volume_get, _soptthosttraderapi.CThostFtdcExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_PosiDirection_get, _soptthosttraderapi.CThostFtdcExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "ctp_sopt::TThostFtdcExecOrderPositionFlagType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ReservePositionFlag_get, _soptthosttraderapi.CThostFtdcExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "ctp_sopt::TThostFtdcExecOrderCloseFlagType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_CloseFlag_get, _soptthosttraderapi.CThostFtdcExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExecOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderLocalID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcExecOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExecOrderField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExecOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcExecOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcExecOrderField_SettlementID_set, doc=r"""结算编号""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcExecOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcExecOrderField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcExecOrderField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "ctp_sopt::TThostFtdcExecResultType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ExecResult_get, _soptthosttraderapi.CThostFtdcExecOrderField_ExecResult_set, doc=r"""执行结果""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExecOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_FrontID_get, _soptthosttraderapi.CThostFtdcExecOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_SessionID_get, _soptthosttraderapi.CThostFtdcExecOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcExecOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_StatusMsg_get, _soptthosttraderapi.CThostFtdcExecOrderField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcExecOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerExecOrderSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_BrokerExecOrderSeq_get, _soptthosttraderapi.CThostFtdcExecOrderField_BrokerExecOrderSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcExecOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcExecOrderField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExecOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecOrderField

# Register CThostFtdcExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecOrderField_swigregister(CThostFtdcExecOrderField)
class CThostFtdcExecOrderActionField(object):
    r"""执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderActionRef_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_InstallID_set, doc=r"""安装编号""")
    ExecOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderLocalID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_ActionType_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_ActionType_set, doc=r"""执行类型""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecOrderActionField

# Register CThostFtdcExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecOrderActionField_swigregister(CThostFtdcExecOrderActionField)
class CThostFtdcQryExecOrderField(object):
    r"""执行宣告查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryExecOrderField_InsertTimeEnd_set, doc=r"""结束时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExecOrderField

# Register CThostFtdcQryExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExecOrderField_swigregister(CThostFtdcQryExecOrderField)
class CThostFtdcExchangeExecOrderField(object):
    r"""交易所执行宣告信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_PosiDirection_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "ctp_sopt::TThostFtdcExecOrderPositionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ReservePositionFlag_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "ctp_sopt::TThostFtdcExecOrderCloseFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_CloseFlag_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExecOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_SettlementID_set, doc=r"""结算编号""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "ctp_sopt::TThostFtdcExecResultType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecResult_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ExecResult_set, doc=r"""执行结果""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_SequenceNo_set, doc=r"""序号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeExecOrderField

# Register CThostFtdcExchangeExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeExecOrderField_swigregister(CThostFtdcExchangeExecOrderField)
class CThostFtdcQryExchangeExecOrderField(object):
    r"""交易所执行宣告查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeExecOrderField

# Register CThostFtdcQryExchangeExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeExecOrderField_swigregister(CThostFtdcQryExchangeExecOrderField)
class CThostFtdcQryExecOrderActionField(object):
    r"""执行宣告操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExecOrderActionField

# Register CThostFtdcQryExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExecOrderActionField_swigregister(CThostFtdcQryExecOrderActionField)
class CThostFtdcExchangeExecOrderActionField(object):
    r"""交易所执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_InstallID_set, doc=r"""安装编号""")
    ExecOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionType_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_ActionType_set, doc=r"""执行类型""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeExecOrderActionField

# Register CThostFtdcExchangeExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeExecOrderActionField_swigregister(CThostFtdcExchangeExecOrderActionField)
class CThostFtdcQryExchangeExecOrderActionField(object):
    r"""交易所执行宣告操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeExecOrderActionField

# Register CThostFtdcQryExchangeExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeExecOrderActionField_swigregister(CThostFtdcQryExchangeExecOrderActionField)
class CThostFtdcErrExecOrderField(object):
    r"""错误执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_UserID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_Volume_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_BusinessUnit_set, doc=r"""业务单元""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ActionType_set, doc=r"""执行类型""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_PosiDirection_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_PosiDirection_set, doc=r"""保留头寸申请的持仓方向""")
    ReservePositionFlag: "ctp_sopt::TThostFtdcExecOrderPositionFlagType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ReservePositionFlag_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ReservePositionFlag_set, doc=r"""期权行权后是否保留期货头寸的标记,该字段已废弃""")
    CloseFlag: "ctp_sopt::TThostFtdcExecOrderCloseFlagType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_CloseFlag_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_CloseFlag_set, doc=r"""期权行权后生成的头寸是否自动平仓""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcErrExecOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrExecOrderField

# Register CThostFtdcErrExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrExecOrderField_swigregister(CThostFtdcErrExecOrderField)
class CThostFtdcQryErrExecOrderField(object):
    r"""查询错误执行宣告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryErrExecOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryErrExecOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryErrExecOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryErrExecOrderField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryErrExecOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryErrExecOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryErrExecOrderField

# Register CThostFtdcQryErrExecOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryErrExecOrderField_swigregister(CThostFtdcQryErrExecOrderField)
class CThostFtdcErrExecOrderActionField(object):
    r"""错误执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecOrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set, doc=r"""执行宣告操作引用""")
    ExecOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderRef_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderRef_set, doc=r"""执行宣告引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ExecOrderSysID_set, doc=r"""执行宣告操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrExecOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcErrExecOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrExecOrderActionField

# Register CThostFtdcErrExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrExecOrderActionField_swigregister(CThostFtdcErrExecOrderActionField)
class CThostFtdcQryErrExecOrderActionField(object):
    r"""查询错误执行宣告操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryErrExecOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryErrExecOrderActionField

# Register CThostFtdcQryErrExecOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryErrExecOrderActionField_swigregister(CThostFtdcQryErrExecOrderActionField)
class CThostFtdcOptionInstrTradingRightField(object):
    r"""投资者期权合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_Direction_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_Direction_set, doc=r"""买卖方向""")
    TradingRight: "ctp_sopt::TThostFtdcTradingRightType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_TradingRight_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_TradingRight_set, doc=r"""交易权限""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_ExchangeID_set, doc=r"""交易所代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_HedgeFlag_set, doc=r"""投机套保标志""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrTradingRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrTradingRightField

# Register CThostFtdcOptionInstrTradingRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrTradingRightField_swigregister(CThostFtdcOptionInstrTradingRightField)
class CThostFtdcQryOptionInstrTradingRightField(object):
    r"""查询期权合约交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set, doc=r"""合约代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_Direction_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_Direction_set, doc=r"""买卖方向""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptionInstrTradingRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptionInstrTradingRightField

# Register CThostFtdcQryOptionInstrTradingRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptionInstrTradingRightField_swigregister(CThostFtdcQryOptionInstrTradingRightField)
class CThostFtdcInputForQuoteField(object):
    r"""输入的询价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ForQuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_ForQuoteRef_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_ForQuoteRef_set, doc=r"""询价引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_UserID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_UserID_set, doc=r"""用户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_BranchID_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_LoginPBU_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputForQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputForQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputForQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputForQuoteField

# Register CThostFtdcInputForQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputForQuoteField_swigregister(CThostFtdcInputForQuoteField)
class CThostFtdcForQuoteField(object):
    r"""询价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcForQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ForQuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteRef_get, _soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteRef_set, doc=r"""询价引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_UserID_get, _soptthosttraderapi.CThostFtdcForQuoteField_UserID_set, doc=r"""用户代码""")
    ForQuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteLocalID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteLocalID_set, doc=r"""本地询价编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InstallID_get, _soptthosttraderapi.CThostFtdcForQuoteField_InstallID_set, doc=r"""安装编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InsertDate_get, _soptthosttraderapi.CThostFtdcForQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InsertTime_get, _soptthosttraderapi.CThostFtdcForQuoteField_InsertTime_set, doc=r"""插入时间""")
    ForQuoteStatus: "ctp_sopt::TThostFtdcForQuoteStatusType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteStatus_get, _soptthosttraderapi.CThostFtdcForQuoteField_ForQuoteStatus_set, doc=r"""询价状态""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_FrontID_get, _soptthosttraderapi.CThostFtdcForQuoteField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_SessionID_get, _soptthosttraderapi.CThostFtdcForQuoteField_SessionID_set, doc=r"""会话编号""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_StatusMsg_get, _soptthosttraderapi.CThostFtdcForQuoteField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcForQuoteField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerForQutoSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_BrokerForQutoSeq_get, _soptthosttraderapi.CThostFtdcForQuoteField_BrokerForQutoSeq_set, doc=r"""经纪公司询价编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_BranchID_get, _soptthosttraderapi.CThostFtdcForQuoteField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_LoginPBU_get, _soptthosttraderapi.CThostFtdcForQuoteField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcForQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcForQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcForQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcForQuoteField

# Register CThostFtdcForQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcForQuoteField_swigregister(CThostFtdcForQuoteField)
class CThostFtdcQryForQuoteField(object):
    r"""询价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryForQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryForQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryForQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryForQuoteField

# Register CThostFtdcQryForQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryForQuoteField_swigregister(CThostFtdcQryForQuoteField)
class CThostFtdcExchangeForQuoteField(object):
    r"""交易所询价信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ForQuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set, doc=r"""本地询价编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_InstallID_set, doc=r"""安装编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_InsertTime_set, doc=r"""插入时间""")
    ForQuoteStatus: "ctp_sopt::TThostFtdcForQuoteStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_ForQuoteStatus_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_ForQuoteStatus_set, doc=r"""询价状态""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_MacAddress_set, doc=r"""Mac地址""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeForQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeForQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeForQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeForQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeForQuoteField

# Register CThostFtdcExchangeForQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeForQuoteField_swigregister(CThostFtdcExchangeForQuoteField)
class CThostFtdcQryExchangeForQuoteField(object):
    r"""交易所询价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeForQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeForQuoteField

# Register CThostFtdcQryExchangeForQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeForQuoteField_swigregister(CThostFtdcQryExchangeForQuoteField)
class CThostFtdcInputQuoteField(object):
    r"""输入的报价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_InstrumentID_set, doc=r"""合约代码""")
    QuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_QuoteRef_get, _soptthosttraderapi.CThostFtdcInputQuoteField_QuoteRef_set, doc=r"""报价引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_UserID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_UserID_set, doc=r"""用户代码""")
    AskPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_AskPrice_get, _soptthosttraderapi.CThostFtdcInputQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BidPrice_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_AskVolume_get, _soptthosttraderapi.CThostFtdcInputQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BidVolume_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_RequestID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_AskOffsetFlag_get, _soptthosttraderapi.CThostFtdcInputQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BidOffsetFlag_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_AskHedgeFlag_get, _soptthosttraderapi.CThostFtdcInputQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BidHedgeFlag_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    AskOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_AskOrderRef_get, _soptthosttraderapi.CThostFtdcInputQuoteField_AskOrderRef_set, doc=r"""衍生卖报单引用""")
    BidOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_BidOrderRef_get, _soptthosttraderapi.CThostFtdcInputQuoteField_BidOrderRef_set, doc=r"""衍生买报单引用""")
    ForQuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_ForQuoteSysID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcInputQuoteField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcInputQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputQuoteField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputQuoteField

# Register CThostFtdcInputQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputQuoteField_swigregister(CThostFtdcInputQuoteField)
class CThostFtdcInputQuoteActionField(object):
    r"""输入报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    QuoteActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteActionRef_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteActionRef_set, doc=r"""报价操作引用""")
    QuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteRef_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteRef_set, doc=r"""报价引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_ClientID_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_AskVolume_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_BidVolume_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_BidVolume_set, doc=r"""买数量""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputQuoteActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputQuoteActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputQuoteActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputQuoteActionField

# Register CThostFtdcInputQuoteActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputQuoteActionField_swigregister(CThostFtdcInputQuoteActionField)
class CThostFtdcQuoteField(object):
    r"""报价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQuoteField_InstrumentID_set, doc=r"""合约代码""")
    QuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcQuoteField_QuoteRef_get, _soptthosttraderapi.CThostFtdcQuoteField_QuoteRef_set, doc=r"""报价引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_UserID_get, _soptthosttraderapi.CThostFtdcQuoteField_UserID_set, doc=r"""用户代码""")
    AskPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskPrice_get, _soptthosttraderapi.CThostFtdcQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidPrice_get, _soptthosttraderapi.CThostFtdcQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskVolume_get, _soptthosttraderapi.CThostFtdcQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidVolume_get, _soptthosttraderapi.CThostFtdcQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_RequestID_get, _soptthosttraderapi.CThostFtdcQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskOffsetFlag_get, _soptthosttraderapi.CThostFtdcQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidOffsetFlag_get, _soptthosttraderapi.CThostFtdcQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskHedgeFlag_get, _soptthosttraderapi.CThostFtdcQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidHedgeFlag_get, _soptthosttraderapi.CThostFtdcQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    QuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_QuoteLocalID_get, _soptthosttraderapi.CThostFtdcQuoteField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InstallID_get, _soptthosttraderapi.CThostFtdcQuoteField_InstallID_set, doc=r"""安装编号""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcQuoteField_NotifySequence_get, _soptthosttraderapi.CThostFtdcQuoteField_NotifySequence_set, doc=r"""报价提示序号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcQuoteField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcQuoteField_OrderSubmitStatus_set, doc=r"""报价提交状态""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQuoteField_TradingDay_get, _soptthosttraderapi.CThostFtdcQuoteField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_SettlementID_get, _soptthosttraderapi.CThostFtdcQuoteField_SettlementID_set, doc=r"""结算编号""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InsertDate_get, _soptthosttraderapi.CThostFtdcQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InsertTime_get, _soptthosttraderapi.CThostFtdcQuoteField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQuoteField_CancelTime_get, _soptthosttraderapi.CThostFtdcQuoteField_CancelTime_set, doc=r"""撤销时间""")
    QuoteStatus: "ctp_sopt::TThostFtdcOrderStatusType" = property(_soptthosttraderapi.CThostFtdcQuoteField_QuoteStatus_get, _soptthosttraderapi.CThostFtdcQuoteField_QuoteStatus_set, doc=r"""报价状态""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcQuoteField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcQuoteField_SequenceNo_get, _soptthosttraderapi.CThostFtdcQuoteField_SequenceNo_set, doc=r"""序号""")
    AskOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskOrderSysID_get, _soptthosttraderapi.CThostFtdcQuoteField_AskOrderSysID_set, doc=r"""卖方报单编号""")
    BidOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidOrderSysID_get, _soptthosttraderapi.CThostFtdcQuoteField_BidOrderSysID_set, doc=r"""买方报单编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_FrontID_get, _soptthosttraderapi.CThostFtdcQuoteField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_SessionID_get, _soptthosttraderapi.CThostFtdcQuoteField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcQuoteField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcQuoteField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcQuoteField_StatusMsg_get, _soptthosttraderapi.CThostFtdcQuoteField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcQuoteField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerQuoteSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BrokerQuoteSeq_get, _soptthosttraderapi.CThostFtdcQuoteField_BrokerQuoteSeq_set, doc=r"""经纪公司报价编号""")
    AskOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AskOrderRef_get, _soptthosttraderapi.CThostFtdcQuoteField_AskOrderRef_set, doc=r"""衍生卖报单引用""")
    BidOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BidOrderRef_get, _soptthosttraderapi.CThostFtdcQuoteField_BidOrderRef_set, doc=r"""衍生买报单引用""")
    ForQuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_ForQuoteSysID_get, _soptthosttraderapi.CThostFtdcQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_BranchID_get, _soptthosttraderapi.CThostFtdcQuoteField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_AccountID_get, _soptthosttraderapi.CThostFtdcQuoteField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQuoteField_CurrencyID_set, doc=r"""币种代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcQuoteField_MacAddress_set, doc=r"""Mac地址""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQuoteField_LoginPBU_get, _soptthosttraderapi.CThostFtdcQuoteField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQuoteField

# Register CThostFtdcQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQuoteField_swigregister(CThostFtdcQuoteField)
class CThostFtdcQuoteActionField(object):
    r"""报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    QuoteActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_QuoteActionRef_get, _soptthosttraderapi.CThostFtdcQuoteActionField_QuoteActionRef_set, doc=r"""报价操作引用""")
    QuoteRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_QuoteRef_get, _soptthosttraderapi.CThostFtdcQuoteActionField_QuoteRef_set, doc=r"""报价引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_RequestID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_FrontID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_SessionID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_InstallID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_InstallID_set, doc=r"""安装编号""")
    QuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_QuoteLocalID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcQuoteActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcQuoteActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_UserID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcQuoteActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_BranchID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQuoteActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_reserve1_get, _soptthosttraderapi.CThostFtdcQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_AskVolume_get, _soptthosttraderapi.CThostFtdcQuoteActionField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_BidVolume_get, _soptthosttraderapi.CThostFtdcQuoteActionField_BidVolume_set, doc=r"""买数量""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcQuoteActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcQuoteActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQuoteActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQuoteActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQuoteActionField

# Register CThostFtdcQuoteActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQuoteActionField_swigregister(CThostFtdcQuoteActionField)
class CThostFtdcQryQuoteField(object):
    r"""报价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryQuoteField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryQuoteField_InsertTimeEnd_set, doc=r"""结束时间""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryQuoteField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryQuoteField

# Register CThostFtdcQryQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryQuoteField_swigregister(CThostFtdcQryQuoteField)
class CThostFtdcExchangeQuoteField(object):
    r"""交易所报价信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_AskPrice_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_AskPrice_set, doc=r"""卖价格""")
    BidPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BidPrice_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BidPrice_set, doc=r"""买价格""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_AskVolume_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BidVolume_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BidVolume_set, doc=r"""买数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_RequestID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BusinessUnit_set, doc=r"""业务单元""")
    AskOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_AskOffsetFlag_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_AskOffsetFlag_set, doc=r"""卖开平标志""")
    BidOffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BidOffsetFlag_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BidOffsetFlag_set, doc=r"""买开平标志""")
    AskHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_AskHedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_AskHedgeFlag_set, doc=r"""卖投机套保标志""")
    BidHedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BidHedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BidHedgeFlag_set, doc=r"""买投机套保标志""")
    QuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_InstallID_set, doc=r"""安装编号""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_NotifySequence_set, doc=r"""报价提示序号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_OrderSubmitStatus_set, doc=r"""报价提交状态""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_SettlementID_set, doc=r"""结算编号""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteSysID_set, doc=r"""报价编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_CancelTime_set, doc=r"""撤销时间""")
    QuoteStatus: "ctp_sopt::TThostFtdcOrderStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteStatus_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_QuoteStatus_set, doc=r"""报价状态""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_SequenceNo_set, doc=r"""序号""")
    AskOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_AskOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_AskOrderSysID_set, doc=r"""卖方报单编号""")
    BidOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BidOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BidOrderSysID_set, doc=r"""买方报单编号""")
    ForQuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_ForQuoteSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_ForQuoteSysID_set, doc=r"""应价编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_MacAddress_set, doc=r"""Mac地址""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeQuoteField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeQuoteField

# Register CThostFtdcExchangeQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeQuoteField_swigregister(CThostFtdcExchangeQuoteField)
class CThostFtdcQryExchangeQuoteField(object):
    r"""交易所报价查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeQuoteField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeQuoteField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeQuoteField

# Register CThostFtdcQryExchangeQuoteField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeQuoteField_swigregister(CThostFtdcQryExchangeQuoteField)
class CThostFtdcQryQuoteActionField(object):
    r"""报价操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryQuoteActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryQuoteActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryQuoteActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryQuoteActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryQuoteActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryQuoteActionField

# Register CThostFtdcQryQuoteActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryQuoteActionField_swigregister(CThostFtdcQryQuoteActionField)
class CThostFtdcExchangeQuoteActionField(object):
    r"""交易所报价操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    QuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_QuoteSysID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_QuoteSysID_set, doc=r"""报价操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_InstallID_set, doc=r"""安装编号""")
    QuoteLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_QuoteLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_QuoteLocalID_set, doc=r"""本地报价编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_MacAddress_set, doc=r"""Mac地址""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BranchID_set, doc=r"""营业部编号""")
    AskVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_AskVolume_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_AskVolume_set, doc=r"""卖数量""")
    BidVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BidVolume_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_BidVolume_set, doc=r"""买数量""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeQuoteActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeQuoteActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeQuoteActionField

# Register CThostFtdcExchangeQuoteActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeQuoteActionField_swigregister(CThostFtdcExchangeQuoteActionField)
class CThostFtdcQryExchangeQuoteActionField(object):
    r"""交易所报价操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeQuoteActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeQuoteActionField

# Register CThostFtdcQryExchangeQuoteActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeQuoteActionField_swigregister(CThostFtdcQryExchangeQuoteActionField)
class CThostFtdcOptionInstrDeltaField(object):
    r"""期权合约delta值"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_InvestorID_set, doc=r"""投资者代码""")
    Delta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_Delta_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_Delta_set, doc=r"""Delta值""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrDeltaField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrDeltaField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrDeltaField

# Register CThostFtdcOptionInstrDeltaField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrDeltaField_swigregister(CThostFtdcOptionInstrDeltaField)
class CThostFtdcForQuoteRspField(object):
    r"""发给做市商的询价请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_TradingDay_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_TradingDay_set, doc=r"""交易日""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_InstrumentID_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_InstrumentID_set, doc=r"""合约代码""")
    ForQuoteSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_ForQuoteSysID_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_ForQuoteSysID_set, doc=r"""询价编号""")
    ForQuoteTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_ForQuoteTime_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_ForQuoteTime_set, doc=r"""询价时间""")
    ActionDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_ActionDay_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_ActionDay_set, doc=r"""业务日期""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteRspField_ExchangeID_get, _soptthosttraderapi.CThostFtdcForQuoteRspField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcForQuoteRspField_swiginit(self, _soptthosttraderapi.new_CThostFtdcForQuoteRspField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcForQuoteRspField

# Register CThostFtdcForQuoteRspField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcForQuoteRspField_swigregister(CThostFtdcForQuoteRspField)
class CThostFtdcStrikeOffsetField(object):
    r"""当前期权合约执行偏移值的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_InstrumentID_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_InvestorRange_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_BrokerID_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_InvestorID_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_InvestorID_set, doc=r"""投资者代码""")
    Offset: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_Offset_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_Offset_set, doc=r"""执行偏移值""")
    OffsetType: "ctp_sopt::TThostFtdcStrikeOffsetTypeType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_OffsetType_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_OffsetType_set, doc=r"""行权偏移类型""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcStrikeOffsetField_ExchangeID_get, _soptthosttraderapi.CThostFtdcStrikeOffsetField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcStrikeOffsetField_swiginit(self, _soptthosttraderapi.new_CThostFtdcStrikeOffsetField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcStrikeOffsetField

# Register CThostFtdcStrikeOffsetField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcStrikeOffsetField_swigregister(CThostFtdcStrikeOffsetField)
class CThostFtdcQryStrikeOffsetField(object):
    r"""期权执行偏移值查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryStrikeOffsetField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryStrikeOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryStrikeOffsetField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryStrikeOffsetField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryStrikeOffsetField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryStrikeOffsetField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryStrikeOffsetField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryStrikeOffsetField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryStrikeOffsetField

# Register CThostFtdcQryStrikeOffsetField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryStrikeOffsetField_swigregister(CThostFtdcQryStrikeOffsetField)
class CThostFtdcInputLockField(object):
    r"""录入锁定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputLockField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputLockField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputLockField_InstrumentID_set, doc=r"""合约代码""")
    LockRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputLockField_LockRef_get, _soptthosttraderapi.CThostFtdcInputLockField_LockRef_set, doc=r"""锁定引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_UserID_get, _soptthosttraderapi.CThostFtdcInputLockField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputLockField_Volume_get, _soptthosttraderapi.CThostFtdcInputLockField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_RequestID_get, _soptthosttraderapi.CThostFtdcInputLockField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputLockField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputLockField_BusinessUnit_set, doc=r"""业务单元""")
    LockType: "ctp_sopt::TThostFtdcLockTypeType" = property(_soptthosttraderapi.CThostFtdcInputLockField_LockType_get, _soptthosttraderapi.CThostFtdcInputLockField_LockType_set, doc=r"""锁定类型""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputLockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputLockField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputLockField_reserve1_get, _soptthosttraderapi.CThostFtdcInputLockField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputLockField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputLockField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputLockField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputLockField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputLockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputLockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputLockField

# Register CThostFtdcInputLockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputLockField_swigregister(CThostFtdcInputLockField)
class CThostFtdcLockField(object):
    r"""锁定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLockField_BrokerID_get, _soptthosttraderapi.CThostFtdcLockField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLockField_InvestorID_get, _soptthosttraderapi.CThostFtdcLockField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLockField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLockField_InstrumentID_set, doc=r"""合约代码""")
    LockRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcLockField_LockRef_get, _soptthosttraderapi.CThostFtdcLockField_LockRef_set, doc=r"""锁定引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcLockField_UserID_get, _soptthosttraderapi.CThostFtdcLockField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLockField_Volume_get, _soptthosttraderapi.CThostFtdcLockField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcLockField_RequestID_get, _soptthosttraderapi.CThostFtdcLockField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcLockField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcLockField_BusinessUnit_set, doc=r"""业务单元""")
    LockType: "ctp_sopt::TThostFtdcLockTypeType" = property(_soptthosttraderapi.CThostFtdcLockField_LockType_get, _soptthosttraderapi.CThostFtdcLockField_LockType_set, doc=r"""锁定类型""")
    LockLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcLockField_LockLocalID_get, _soptthosttraderapi.CThostFtdcLockField_LockLocalID_set, doc=r"""本地锁定编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLockField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ParticipantID_get, _soptthosttraderapi.CThostFtdcLockField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ClientID_get, _soptthosttraderapi.CThostFtdcLockField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcLockField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcLockField_TraderID_get, _soptthosttraderapi.CThostFtdcLockField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcLockField_InstallID_get, _soptthosttraderapi.CThostFtdcLockField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcLockField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcLockField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcLockField_NotifySequence_get, _soptthosttraderapi.CThostFtdcLockField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcLockField_TradingDay_get, _soptthosttraderapi.CThostFtdcLockField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcLockField_SettlementID_get, _soptthosttraderapi.CThostFtdcLockField_SettlementID_set, doc=r"""结算编号""")
    LockSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcLockField_LockSysID_get, _soptthosttraderapi.CThostFtdcLockField_LockSysID_set, doc=r"""锁定编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcLockField_InsertDate_get, _soptthosttraderapi.CThostFtdcLockField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLockField_InsertTime_get, _soptthosttraderapi.CThostFtdcLockField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcLockField_CancelTime_get, _soptthosttraderapi.CThostFtdcLockField_CancelTime_set, doc=r"""撤销时间""")
    LockStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcLockField_LockStatus_get, _soptthosttraderapi.CThostFtdcLockField_LockStatus_set, doc=r"""锁定状态""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcLockField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcLockField_SequenceNo_get, _soptthosttraderapi.CThostFtdcLockField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcLockField_FrontID_get, _soptthosttraderapi.CThostFtdcLockField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcLockField_SessionID_get, _soptthosttraderapi.CThostFtdcLockField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcLockField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcLockField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcLockField_StatusMsg_get, _soptthosttraderapi.CThostFtdcLockField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcLockField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcLockField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerLockSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcLockField_BrokerLockSeq_get, _soptthosttraderapi.CThostFtdcLockField_BrokerLockSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcLockField_BranchID_get, _soptthosttraderapi.CThostFtdcLockField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcLockField_reserve1_get, _soptthosttraderapi.CThostFtdcLockField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcLockField_MacAddress_get, _soptthosttraderapi.CThostFtdcLockField_MacAddress_set, doc=r"""Mac地址""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcLockField_LoginPBU_get, _soptthosttraderapi.CThostFtdcLockField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcLockField_IPAddress_get, _soptthosttraderapi.CThostFtdcLockField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLockField

# Register CThostFtdcLockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLockField_swigregister(CThostFtdcLockField)
class CThostFtdcQryLockField(object):
    r"""查询锁定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLockField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLockField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLockField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLockField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryLockField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryLockField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryLockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryLockField_ExchangeID_set, doc=r"""交易所代码""")
    LockSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryLockField_LockSysID_get, _soptthosttraderapi.CThostFtdcQryLockField_LockSysID_set, doc=r"""锁定编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryLockField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryLockField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryLockField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryLockField_InsertTimeEnd_set, doc=r"""结束时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLockField

# Register CThostFtdcQryLockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLockField_swigregister(CThostFtdcQryLockField)
class CThostFtdcLockPositionField(object):
    r"""锁定证券仓位"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_BrokerID_get, _soptthosttraderapi.CThostFtdcLockPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_InvestorID_get, _soptthosttraderapi.CThostFtdcLockPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLockPositionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLockPositionField_ExchangeID_set, doc=r"""交易所代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_Volume_get, _soptthosttraderapi.CThostFtdcLockPositionField_Volume_set, doc=r"""数量""")
    FrozenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_FrozenVolume_get, _soptthosttraderapi.CThostFtdcLockPositionField_FrozenVolume_set, doc=r"""冻结数量""")
    TodayVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLockPositionField_TodayVolume_get, _soptthosttraderapi.CThostFtdcLockPositionField_TodayVolume_set, doc=r"""今日锁定数量""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLockPositionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLockPositionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLockPositionField

# Register CThostFtdcLockPositionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLockPositionField_swigregister(CThostFtdcLockPositionField)
class CThostFtdcQryLockPositionField(object):
    r"""查询锁定证券仓位"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLockPositionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLockPositionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLockPositionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLockPositionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryLockPositionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryLockPositionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryLockPositionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryLockPositionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLockPositionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLockPositionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLockPositionField

# Register CThostFtdcQryLockPositionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLockPositionField_swigregister(CThostFtdcQryLockPositionField)
class CThostFtdcETFOptionInstrCommRateField(object):
    r"""当前ETF期权合约手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_StrikeRatioByMoney_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_StrikeRatioByVolume_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_PosiDirection_get, _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_PosiDirection_set, doc=r"""持仓方向""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcETFOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcETFOptionInstrCommRateField

# Register CThostFtdcETFOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcETFOptionInstrCommRateField_swigregister(CThostFtdcETFOptionInstrCommRateField)
class CThostFtdcQryETFOptionInstrCommRateField(object):
    r"""ETF期权手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryETFOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryETFOptionInstrCommRateField

# Register CThostFtdcQryETFOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryETFOptionInstrCommRateField_swigregister(CThostFtdcQryETFOptionInstrCommRateField)
class CThostFtdcPosiFreezeField(object):
    r"""输入的持仓冻结"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_BrokerID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_InvestorID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_ExchangeID_set, doc=r"""交易所代码""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_OrderLocalID_set, doc=r"""本地报单编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_TraderID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_ParticipantID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_ParticipantID_set, doc=r"""会员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_InstallID_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_InstallID_set, doc=r"""安装编号""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_Volume_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_Volume_set, doc=r"""数量""")
    FreezeReasonType: "ctp_sopt::TThostFtdcFreezeReasonTypeType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_FreezeReasonType_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_FreezeReasonType_set, doc=r"""冻结原因""")
    FreezeType: "ctp_sopt::TThostFtdcFreezeTypeType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_FreezeType_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_FreezeType_set, doc=r"""冻结类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcPosiFreezeField_LoginPBU_get, _soptthosttraderapi.CThostFtdcPosiFreezeField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcPosiFreezeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcPosiFreezeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcPosiFreezeField

# Register CThostFtdcPosiFreezeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcPosiFreezeField_swigregister(CThostFtdcPosiFreezeField)
class CThostFtdcQryExchangeLockField(object):
    r"""查询锁定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeLockField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeLockField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeLockField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeLockField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeLockField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeLockField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeLockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeLockField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeLockField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeLockField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeLockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeLockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeLockField

# Register CThostFtdcQryExchangeLockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeLockField_swigregister(CThostFtdcQryExchangeLockField)
class CThostFtdcExchangeLockField(object):
    r"""交易所锁定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeLockField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_RequestID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeLockField_BusinessUnit_set, doc=r"""业务单元""")
    LockType: "ctp_sopt::TThostFtdcLockTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_LockType_get, _soptthosttraderapi.CThostFtdcExchangeLockField_LockType_set, doc=r"""锁定类型""")
    LockLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_LockLocalID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_LockLocalID_set, doc=r"""本地锁定编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExchangeLockField_OrderSubmitStatus_set, doc=r"""执行宣告提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeLockField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeLockField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_SettlementID_set, doc=r"""结算编号""")
    LockSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_LockSysID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_LockSysID_set, doc=r"""锁定编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeLockField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeLockField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeLockField_CancelTime_set, doc=r"""撤销时间""")
    LockStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_LockStatus_get, _soptthosttraderapi.CThostFtdcExchangeLockField_LockStatus_set, doc=r"""锁定状态""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeLockField_SequenceNo_set, doc=r"""序号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeLockField_BranchID_set, doc=r"""营业部编号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeLockField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeLockField_MacAddress_set, doc=r"""Mac地址""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeLockField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeLockField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeLockField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeLockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeLockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeLockField

# Register CThostFtdcExchangeLockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeLockField_swigregister(CThostFtdcExchangeLockField)
class CThostFtdcExchangeExecOrderActionErrorField(object):
    r"""交易所操作错误"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ExecOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExecOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExecOrderSysID_set, doc=r"""执行宣告编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_InstallID_set, doc=r"""安装编号""")
    ExecOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExecOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ExecOrderLocalID_set, doc=r"""本地执行宣告编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ErrorMsg_set, doc=r"""错误信息""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_BrokerID_set, doc=r"""经纪公司代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_ClientID_set, doc=r"""客户代码""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeExecOrderActionErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeExecOrderActionErrorField

# Register CThostFtdcExchangeExecOrderActionErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeExecOrderActionErrorField_swigregister(CThostFtdcExchangeExecOrderActionErrorField)
class CThostFtdcInputBatchOrderActionField(object):
    r"""输入批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputBatchOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputBatchOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputBatchOrderActionField

# Register CThostFtdcInputBatchOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputBatchOrderActionField_swigregister(CThostFtdcInputBatchOrderActionField)
class CThostFtdcBatchOrderActionField(object):
    r"""批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_InstallID_set, doc=r"""安装编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcBatchOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBatchOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBatchOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBatchOrderActionField

# Register CThostFtdcBatchOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBatchOrderActionField_swigregister(CThostFtdcBatchOrderActionField)
class CThostFtdcExchangeBatchOrderActionField(object):
    r"""交易所批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_InstallID_set, doc=r"""安装编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_UserID_set, doc=r"""用户代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeBatchOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeBatchOrderActionField

# Register CThostFtdcExchangeBatchOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeBatchOrderActionField_swigregister(CThostFtdcExchangeBatchOrderActionField)
class CThostFtdcQryBatchOrderActionField(object):
    r"""查询批量报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBatchOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBatchOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryBatchOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryBatchOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryBatchOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryBatchOrderActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBatchOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBatchOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBatchOrderActionField

# Register CThostFtdcQryBatchOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBatchOrderActionField_swigregister(CThostFtdcQryBatchOrderActionField)
class CThostFtdcLimitPosiField(object):
    r"""投资者持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitPosiField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitPosiField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLimitPosiField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitPosiField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_TotalVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiField_TotalVolume_set, doc=r"""总数量限制""")
    LongVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_LongVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiField_LongVolume_set, doc=r"""多头数量限制""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_OpenVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiField_OpenVolume_set, doc=r"""当日多头开仓数量限制""")
    LongAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_LongAmount_get, _soptthosttraderapi.CThostFtdcLimitPosiField_LongAmount_set, doc=r"""多头持仓金额限制,不再使用""")
    TotalVolumeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_TotalVolumeFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiField_TotalVolumeFrozen_set, doc=r"""总数量冻结""")
    LongVolumeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_LongVolumeFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiField_LongVolumeFrozen_set, doc=r"""多头数量冻结""")
    OpenVolumeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_OpenVolumeFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiField_OpenVolumeFrozen_set, doc=r"""当日开仓数量冻结""")
    LongAmountFrozen: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitPosiField_LongAmountFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiField_LongAmountFrozen_set, doc=r"""多头持仓金额冻结,不再使用""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitPosiField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitPosiField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitPosiField

# Register CThostFtdcLimitPosiField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitPosiField_swigregister(CThostFtdcLimitPosiField)
class CThostFtdcQryLimitPosiField(object):
    r"""查询投资者持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLimitPosiField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLimitPosiField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLimitPosiField

# Register CThostFtdcQryLimitPosiField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLimitPosiField_swigregister(CThostFtdcQryLimitPosiField)
class CThostFtdcBrokerLimitPosiField(object):
    r"""经纪公司持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_InstrumentID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_TotalVolume_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_TotalVolume_set, doc=r"""总数量限制""")
    LongVolume: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_LongVolume_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_LongVolume_set, doc=r"""多头数量限制""")
    TotalVolumeFrozen: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_TotalVolumeFrozen_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_TotalVolumeFrozen_set, doc=r"""总数量冻结""")
    LongVolumeFrozen: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_LongVolumeFrozen_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_LongVolumeFrozen_set, doc=r"""多头数量冻结""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerLimitPosiField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerLimitPosiField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerLimitPosiField

# Register CThostFtdcBrokerLimitPosiField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerLimitPosiField_swigregister(CThostFtdcBrokerLimitPosiField)
class CThostFtdcQryBrokerLimitPosiField(object):
    r"""查询经纪公司持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerLimitPosiField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerLimitPosiField

# Register CThostFtdcQryBrokerLimitPosiField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerLimitPosiField_swigregister(CThostFtdcQryBrokerLimitPosiField)
class CThostFtdcLimitPosiSField(object):
    r"""投资者证券持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_TotalVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_TotalVolume_set, doc=r"""总数量限制""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_OpenVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_OpenVolume_set, doc=r"""当日开仓数量限制""")
    TotalVolumeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_TotalVolumeFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_TotalVolumeFrozen_set, doc=r"""总数量冻结""")
    OpenVolumeFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiSField_OpenVolumeFrozen_get, _soptthosttraderapi.CThostFtdcLimitPosiSField_OpenVolumeFrozen_set, doc=r"""当日开仓数量冻结""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitPosiSField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitPosiSField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitPosiSField

# Register CThostFtdcLimitPosiSField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitPosiSField_swigregister(CThostFtdcLimitPosiSField)
class CThostFtdcQryLimitPosiSField(object):
    r"""查询投资者证券持仓限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiSField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiSField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiSField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiSField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiSField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiSField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitPosiSField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryLimitPosiSField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLimitPosiSField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLimitPosiSField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLimitPosiSField

# Register CThostFtdcQryLimitPosiSField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLimitPosiSField_swigregister(CThostFtdcQryLimitPosiSField)
class CThostFtdcLimitPosiParamField(object):
    r"""投资者持仓限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_InvestorRange_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_TotalVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_TotalVolume_set, doc=r"""总数量限制""")
    LongVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_LongVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_LongVolume_set, doc=r"""多头数量限制""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_OpenVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_OpenVolume_set, doc=r"""当日开仓数量限制""")
    LongAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamField_LongAmount_get, _soptthosttraderapi.CThostFtdcLimitPosiParamField_LongAmount_set, doc=r"""多头持仓金额限制,不再使用""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitPosiParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitPosiParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitPosiParamField

# Register CThostFtdcLimitPosiParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitPosiParamField_swigregister(CThostFtdcLimitPosiParamField)
class CThostFtdcBrokerLimitPosiParamField(object):
    r"""经纪公司持仓限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_InstrumentID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_TotalVolume_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_TotalVolume_set, doc=r"""总数量限制""")
    LongVolume: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_LongVolume_get, _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_LongVolume_set, doc=r"""多头数量限制""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerLimitPosiParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerLimitPosiParamField

# Register CThostFtdcBrokerLimitPosiParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerLimitPosiParamField_swigregister(CThostFtdcBrokerLimitPosiParamField)
class CThostFtdcLimitPosiParamSField(object):
    r"""投资者证券持仓限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_InstrumentID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_InvestorRange_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_ExchangeID_set, doc=r"""交易所代码""")
    TotalVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_TotalVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_TotalVolume_set, doc=r"""总数量限制""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcLimitPosiParamSField_OpenVolume_get, _soptthosttraderapi.CThostFtdcLimitPosiParamSField_OpenVolume_set, doc=r"""当日开仓数量限制""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitPosiParamSField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitPosiParamSField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitPosiParamSField

# Register CThostFtdcLimitPosiParamSField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitPosiParamSField_swigregister(CThostFtdcLimitPosiParamSField)
class CThostFtdcInputStockDisposalActionField(object):
    r"""输入证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_InvestorID_set, doc=r"""投资者代码""")
    StockDisposalActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalActionRef_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalActionRef_set, doc=r"""证券处置操作引用""")
    StockDisposalRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalRef_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalRef_set, doc=r"""证券处置引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputStockDisposalActionField

# Register CThostFtdcInputStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputStockDisposalActionField_swigregister(CThostFtdcInputStockDisposalActionField)
class CThostFtdcStockDisposalActionField(object):
    r"""证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_InvestorID_set, doc=r"""投资者代码""")
    StockDisposalActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalActionRef_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalActionRef_set, doc=r"""证券处置操作引用""")
    StockDisposalRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalRef_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalRef_set, doc=r"""证券处置引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_RequestID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_FrontID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_SessionID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_TraderID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_InstallID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_InstallID_set, doc=r"""安装编号""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ClientID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_UserID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionType_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_ActionType_set, doc=r"""执行类型""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_BranchID_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcStockDisposalActionField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcStockDisposalActionField

# Register CThostFtdcStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcStockDisposalActionField_swigregister(CThostFtdcStockDisposalActionField)
class CThostFtdcQryStockDisposalActionField(object):
    r"""证券处置操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryStockDisposalActionField

# Register CThostFtdcQryStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryStockDisposalActionField_swigregister(CThostFtdcQryStockDisposalActionField)
class CThostFtdcExchangeStockDisposalActionField(object):
    r"""交易所证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_InstallID_set, doc=r"""安装编号""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionType_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_ActionType_set, doc=r"""执行类型""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeStockDisposalActionField

# Register CThostFtdcExchangeStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionField_swigregister(CThostFtdcExchangeStockDisposalActionField)
class CThostFtdcQryExchangeStockDisposalActionField(object):
    r"""错误证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeStockDisposalActionField

# Register CThostFtdcQryExchangeStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeStockDisposalActionField_swigregister(CThostFtdcQryExchangeStockDisposalActionField)
class CThostFtdcQryErrStockDisposalActionField(object):
    r"""查询错误证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryErrStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryErrStockDisposalActionField

# Register CThostFtdcQryErrStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryErrStockDisposalActionField_swigregister(CThostFtdcQryErrStockDisposalActionField)
class CThostFtdcExchangeStockDisposalActionErrorField(object):
    r"""交易所证券处置操作错误"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_StockDisposalSysID_set, doc=r"""证券处置编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_InstallID_set, doc=r"""安装编号""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ErrorMsg_set, doc=r"""错误信息""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_BrokerID_set, doc=r"""经纪公司代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_ClientID_set, doc=r"""客户代码""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeStockDisposalActionErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeStockDisposalActionErrorField

# Register CThostFtdcExchangeStockDisposalActionErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeStockDisposalActionErrorField_swigregister(CThostFtdcExchangeStockDisposalActionErrorField)
class CThostFtdcErrStockDisposalActionField(object):
    r"""错误证券处置操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_InvestorID_set, doc=r"""投资者代码""")
    StockDisposalActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalActionRef_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalActionRef_set, doc=r"""证券处置操作引用""")
    StockDisposalRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalRef_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalRef_set, doc=r"""证券处置引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_RequestID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_FrontID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_SessionID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ExchangeID_set, doc=r"""交易所代码""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_UserID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_InstrumentID_set, doc=r"""合约代码""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrStockDisposalActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrStockDisposalActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrStockDisposalActionField

# Register CThostFtdcErrStockDisposalActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrStockDisposalActionField_swigregister(CThostFtdcErrStockDisposalActionField)
class CThostFtdcInvestorLevelField(object):
    r"""投资者分级"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorLevelField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorLevelField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorLevelField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorLevelField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorLevelField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorLevelField_ExchangeID_set, doc=r"""交易所代码""")
    LevelType: "ctp_sopt::TThostFtdcLevelTypeType" = property(_soptthosttraderapi.CThostFtdcInvestorLevelField_LevelType_get, _soptthosttraderapi.CThostFtdcInvestorLevelField_LevelType_set, doc=r"""投资者分级类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorLevelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorLevelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorLevelField

# Register CThostFtdcInvestorLevelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorLevelField_swigregister(CThostFtdcInvestorLevelField)
class CThostFtdcCombInstrumentGuardField(object):
    r"""组合合约安全系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCombInstrumentGuardField_BrokerID_get, _soptthosttraderapi.CThostFtdcCombInstrumentGuardField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcCombInstrumentGuardField_InstrumentID_get, _soptthosttraderapi.CThostFtdcCombInstrumentGuardField_InstrumentID_set, doc=r"""合约代码""")
    GuarantRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcCombInstrumentGuardField_GuarantRatio_get, _soptthosttraderapi.CThostFtdcCombInstrumentGuardField_GuarantRatio_set)
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcCombInstrumentGuardField_ExchangeID_get, _soptthosttraderapi.CThostFtdcCombInstrumentGuardField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCombInstrumentGuardField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCombInstrumentGuardField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCombInstrumentGuardField

# Register CThostFtdcCombInstrumentGuardField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCombInstrumentGuardField_swigregister(CThostFtdcCombInstrumentGuardField)
class CThostFtdcQryCombInstrumentGuardField(object):
    r"""组合合约安全系数查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCombInstrumentGuardField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCombInstrumentGuardField

# Register CThostFtdcQryCombInstrumentGuardField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCombInstrumentGuardField_swigregister(CThostFtdcQryCombInstrumentGuardField)
class CThostFtdcInputCombActionField(object):
    r"""输入的申请组合"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_InstrumentID_set, doc=r"""合约代码""")
    CombActionRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_CombActionRef_get, _soptthosttraderapi.CThostFtdcInputCombActionField_CombActionRef_set, doc=r"""组合引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_UserID_set, doc=r"""用户代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_Direction_get, _soptthosttraderapi.CThostFtdcInputCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_Volume_get, _soptthosttraderapi.CThostFtdcInputCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "ctp_sopt::TThostFtdcCombDirectionType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_CombDirection_get, _soptthosttraderapi.CThostFtdcInputCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInputCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputCombActionField_MacAddress_set, doc=r"""Mac地址""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_ComTradeID_get, _soptthosttraderapi.CThostFtdcInputCombActionField_ComTradeID_set, doc=r"""拆分组合编号""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputCombActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputCombActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputCombActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputCombActionField

# Register CThostFtdcInputCombActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputCombActionField_swigregister(CThostFtdcInputCombActionField)
class CThostFtdcCombActionField(object):
    r"""申请组合"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcCombActionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcCombActionField_InstrumentID_set, doc=r"""合约代码""")
    CombActionRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcCombActionField_CombActionRef_get, _soptthosttraderapi.CThostFtdcCombActionField_CombActionRef_set, doc=r"""组合引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_UserID_get, _soptthosttraderapi.CThostFtdcCombActionField_UserID_set, doc=r"""用户代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcCombActionField_Direction_get, _soptthosttraderapi.CThostFtdcCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcCombActionField_Volume_get, _soptthosttraderapi.CThostFtdcCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "ctp_sopt::TThostFtdcCombDirectionType" = property(_soptthosttraderapi.CThostFtdcCombActionField_CombDirection_get, _soptthosttraderapi.CThostFtdcCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcCombActionField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcCombActionField_ActionLocalID_set, doc=r"""本地申请组合编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ClientID_get, _soptthosttraderapi.CThostFtdcCombActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_TraderID_get, _soptthosttraderapi.CThostFtdcCombActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_InstallID_get, _soptthosttraderapi.CThostFtdcCombActionField_InstallID_set, doc=r"""安装编号""")
    ActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ActionStatus_get, _soptthosttraderapi.CThostFtdcCombActionField_ActionStatus_set, doc=r"""组合状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcCombActionField_NotifySequence_get, _soptthosttraderapi.CThostFtdcCombActionField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcCombActionField_TradingDay_get, _soptthosttraderapi.CThostFtdcCombActionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_SettlementID_get, _soptthosttraderapi.CThostFtdcCombActionField_SettlementID_set, doc=r"""结算编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcCombActionField_SequenceNo_get, _soptthosttraderapi.CThostFtdcCombActionField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_FrontID_get, _soptthosttraderapi.CThostFtdcCombActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_SessionID_get, _soptthosttraderapi.CThostFtdcCombActionField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcCombActionField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcCombActionField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcCombActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcCombActionField_StatusMsg_set, doc=r"""状态信息""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcCombActionField_reserve1_get, _soptthosttraderapi.CThostFtdcCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcCombActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcCombActionField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ComTradeID_get, _soptthosttraderapi.CThostFtdcCombActionField_ComTradeID_set, doc=r"""组合编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_BranchID_get, _soptthosttraderapi.CThostFtdcCombActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcCombActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcCombActionField_OwnerType_set, doc=r"""所有者类型""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcCombActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcCombActionField_ActionTime_set, doc=r"""操作时间""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcCombActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcCombActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcCombActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCombActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCombActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCombActionField

# Register CThostFtdcCombActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCombActionField_swigregister(CThostFtdcCombActionField)
class CThostFtdcQryCombActionField(object):
    r"""申请组合查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryCombActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryCombActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryCombActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryCombActionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryCombActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryCombActionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryCombActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryCombActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryCombActionField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCombActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCombActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCombActionField

# Register CThostFtdcQryCombActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCombActionField_swigregister(CThostFtdcQryCombActionField)
class CThostFtdcExchangeCombActionField(object):
    r"""交易所申请组合信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_Direction_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_Direction_set, doc=r"""买卖方向""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_Volume_set, doc=r"""数量""")
    CombDirection: "ctp_sopt::TThostFtdcCombDirectionType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_CombDirection_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_CombDirection_set, doc=r"""组合指令方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_HedgeFlag_set, doc=r"""投机套保标志""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionLocalID_set, doc=r"""本地申请组合编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_InstallID_set, doc=r"""安装编号""")
    ActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionStatus_set, doc=r"""组合状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_SettlementID_set, doc=r"""结算编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_SequenceNo_set, doc=r"""序号""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ComTradeID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ComTradeID_set, doc=r"""组合编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_BranchID_set, doc=r"""营业部编号""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_OwnerType_set, doc=r"""所有者类型""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_ActionTime_set, doc=r"""操作时间""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeCombActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeCombActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeCombActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeCombActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeCombActionField

# Register CThostFtdcExchangeCombActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeCombActionField_swigregister(CThostFtdcExchangeCombActionField)
class CThostFtdcQryExchangeCombActionField(object):
    r"""交易所申请组合查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ClientID_get, _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_TraderID_get, _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeCombActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeCombActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeCombActionField

# Register CThostFtdcQryExchangeCombActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeCombActionField_swigregister(CThostFtdcQryExchangeCombActionField)
class CThostFtdcProductExchRateField(object):
    r"""产品报价汇率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcProductExchRateField_ProductID_get, _soptthosttraderapi.CThostFtdcProductExchRateField_ProductID_set, doc=r"""产品代码""")
    QuoteCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcProductExchRateField_QuoteCurrencyID_get, _soptthosttraderapi.CThostFtdcProductExchRateField_QuoteCurrencyID_set, doc=r"""报价币种类型""")
    ExchangeRate: "ctp_sopt::TThostFtdcExchangeRateType" = property(_soptthosttraderapi.CThostFtdcProductExchRateField_ExchangeRate_get, _soptthosttraderapi.CThostFtdcProductExchRateField_ExchangeRate_set, doc=r"""汇率""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcProductExchRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcProductExchRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcProductExchRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcProductExchRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcProductExchRateField

# Register CThostFtdcProductExchRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcProductExchRateField_swigregister(CThostFtdcProductExchRateField)
class CThostFtdcQryProductExchRateField(object):
    r"""产品报价汇率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryProductExchRateField_ProductID_get, _soptthosttraderapi.CThostFtdcQryProductExchRateField_ProductID_set, doc=r"""产品代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryProductExchRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryProductExchRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryProductExchRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryProductExchRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryProductExchRateField

# Register CThostFtdcQryProductExchRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryProductExchRateField_swigregister(CThostFtdcQryProductExchRateField)
class CThostFtdcInputDesignateField(object):
    r"""输入的指定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputDesignateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputDesignateField_InvestorID_set, doc=r"""投资者代码""")
    DesignateRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_DesignateRef_get, _soptthosttraderapi.CThostFtdcInputDesignateField_DesignateRef_set, doc=r"""指定登记引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_UserID_get, _soptthosttraderapi.CThostFtdcInputDesignateField_UserID_set, doc=r"""用户代码""")
    DesignateType: "ctp_sopt::TThostFtdcDesignateTypeType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_DesignateType_get, _soptthosttraderapi.CThostFtdcInputDesignateField_DesignateType_set, doc=r"""指定方向""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputDesignateField_ExchangeID_set, doc=r"""交易所代码""")
    PBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcInputDesignateField_PBU_get, _soptthosttraderapi.CThostFtdcInputDesignateField_PBU_set, doc=r"""交易所交易单元""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputDesignateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputDesignateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputDesignateField

# Register CThostFtdcInputDesignateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputDesignateField_swigregister(CThostFtdcInputDesignateField)
class CThostFtdcDesignateField(object):
    r"""指定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_BrokerID_get, _soptthosttraderapi.CThostFtdcDesignateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_InvestorID_get, _soptthosttraderapi.CThostFtdcDesignateField_InvestorID_set, doc=r"""投资者代码""")
    DesignateRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcDesignateField_DesignateRef_get, _soptthosttraderapi.CThostFtdcDesignateField_DesignateRef_set, doc=r"""指定登记引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_UserID_get, _soptthosttraderapi.CThostFtdcDesignateField_UserID_set, doc=r"""用户代码""")
    DesignateType: "ctp_sopt::TThostFtdcDesignateTypeType" = property(_soptthosttraderapi.CThostFtdcDesignateField_DesignateType_get, _soptthosttraderapi.CThostFtdcDesignateField_DesignateType_set, doc=r"""指定方向""")
    DesignateLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_DesignateLocalID_get, _soptthosttraderapi.CThostFtdcDesignateField_DesignateLocalID_set, doc=r"""本地指定编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcDesignateField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_ParticipantID_get, _soptthosttraderapi.CThostFtdcDesignateField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_ClientID_get, _soptthosttraderapi.CThostFtdcDesignateField_ClientID_set, doc=r"""客户代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_TraderID_get, _soptthosttraderapi.CThostFtdcDesignateField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_InstallID_get, _soptthosttraderapi.CThostFtdcDesignateField_InstallID_set, doc=r"""安装编号""")
    DesignateStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcDesignateField_DesignateStatus_get, _soptthosttraderapi.CThostFtdcDesignateField_DesignateStatus_set, doc=r"""指定状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcDesignateField_NotifySequence_get, _soptthosttraderapi.CThostFtdcDesignateField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcDesignateField_TradingDay_get, _soptthosttraderapi.CThostFtdcDesignateField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_SettlementID_get, _soptthosttraderapi.CThostFtdcDesignateField_SettlementID_set, doc=r"""结算编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcDesignateField_InsertDate_get, _soptthosttraderapi.CThostFtdcDesignateField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcDesignateField_InsertTime_get, _soptthosttraderapi.CThostFtdcDesignateField_InsertTime_set, doc=r"""插入时间""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_FrontID_get, _soptthosttraderapi.CThostFtdcDesignateField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_SessionID_get, _soptthosttraderapi.CThostFtdcDesignateField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcDesignateField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcDesignateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcDesignateField_StatusMsg_get, _soptthosttraderapi.CThostFtdcDesignateField_StatusMsg_set, doc=r"""状态信息""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_BranchID_get, _soptthosttraderapi.CThostFtdcDesignateField_BranchID_set, doc=r"""营业部编号""")
    PBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_PBU_get, _soptthosttraderapi.CThostFtdcDesignateField_PBU_set, doc=r"""交易所交易单元""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcDesignateField_LoginPBU_get, _soptthosttraderapi.CThostFtdcDesignateField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDesignateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDesignateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDesignateField

# Register CThostFtdcDesignateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDesignateField_swigregister(CThostFtdcDesignateField)
class CThostFtdcQryDesignateField(object):
    r"""申请指定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryDesignateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryDesignateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryDesignateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryDesignateField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryDesignateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryDesignateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryDesignateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryDesignateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryDesignateField

# Register CThostFtdcQryDesignateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryDesignateField_swigregister(CThostFtdcQryDesignateField)
class CThostFtdcExchangeDesignateField(object):
    r"""交易所指定信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DesignateType: "ctp_sopt::TThostFtdcDesignateTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateType_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateType_set, doc=r"""指定方向""")
    DesignateLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateLocalID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateLocalID_set, doc=r"""本地指定编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_ClientID_set, doc=r"""客户代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_InstallID_set, doc=r"""安装编号""")
    DesignateStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateStatus_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_DesignateStatus_set, doc=r"""指定状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_SettlementID_set, doc=r"""结算编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_InsertTime_set, doc=r"""插入时间""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_BranchID_set, doc=r"""营业部编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeDesignateField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeDesignateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeDesignateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeDesignateField

# Register CThostFtdcExchangeDesignateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeDesignateField_swigregister(CThostFtdcExchangeDesignateField)
class CThostFtdcInputStockDisposalField(object):
    r"""输入的证券处置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_InvestorID_set, doc=r"""投资者代码""")
    StockDisposalRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_StockDisposalRef_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_StockDisposalRef_set, doc=r"""证券处置登记引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_UserID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_InstrumentID_set, doc=r"""合约代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_Volume_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_Volume_set, doc=r"""数量""")
    StockDisposalType: "ctp_sopt::TThostFtdcStockDisposalTypeType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_StockDisposalType_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_StockDisposalType_set, doc=r"""证券处置方向""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputStockDisposalField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputStockDisposalField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputStockDisposalField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputStockDisposalField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputStockDisposalField

# Register CThostFtdcInputStockDisposalField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputStockDisposalField_swigregister(CThostFtdcInputStockDisposalField)
class CThostFtdcStockDisposalField(object):
    r"""证券处置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_BrokerID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_InvestorID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_InvestorID_set, doc=r"""投资者代码""")
    StockDisposalRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalRef_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalRef_set, doc=r"""证券处置登记引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_UserID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_InstrumentID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_InstrumentID_set, doc=r"""合约代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_Volume_get, _soptthosttraderapi.CThostFtdcStockDisposalField_Volume_set, doc=r"""数量""")
    StockDisposalType: "ctp_sopt::TThostFtdcStockDisposalTypeType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalType_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalType_set, doc=r"""证券处置方向""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_ExchangeID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_ParticipantID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_ClientID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_ClientID_set, doc=r"""客户代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_TraderID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_InstallID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_InstallID_set, doc=r"""安装编号""")
    StockDisposalStatus: "ctp_sopt::TThostFtdcStockDisposalStatusType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalStatus_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalStatus_set, doc=r"""证券处置状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_NotifySequence_get, _soptthosttraderapi.CThostFtdcStockDisposalField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_TradingDay_get, _soptthosttraderapi.CThostFtdcStockDisposalField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_SettlementID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_SettlementID_set, doc=r"""结算编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_InsertDate_get, _soptthosttraderapi.CThostFtdcStockDisposalField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_InsertTime_get, _soptthosttraderapi.CThostFtdcStockDisposalField_InsertTime_set, doc=r"""插入时间""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_FrontID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_SessionID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcStockDisposalField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StatusMsg_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StatusMsg_set, doc=r"""状态信息""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_BranchID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_BranchID_set, doc=r"""营业部编号""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcStockDisposalField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcStockDisposalField_BusinessUnit_set, doc=r"""业务单元""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcStockDisposalField_LoginPBU_get, _soptthosttraderapi.CThostFtdcStockDisposalField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcStockDisposalField_swiginit(self, _soptthosttraderapi.new_CThostFtdcStockDisposalField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcStockDisposalField

# Register CThostFtdcStockDisposalField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcStockDisposalField_swigregister(CThostFtdcStockDisposalField)
class CThostFtdcQryStockDisposalField(object):
    r"""申请证券处置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryStockDisposalField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryStockDisposalField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryStockDisposalField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryStockDisposalField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryStockDisposalField

# Register CThostFtdcQryStockDisposalField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryStockDisposalField_swigregister(CThostFtdcQryStockDisposalField)
class CThostFtdcExchangeStockDisposalField(object):
    r"""交易所证券处置信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_Volume_set, doc=r"""数量""")
    StockDisposalType: "ctp_sopt::TThostFtdcStockDisposalTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalType_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalType_set, doc=r"""证券处置方向""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_ClientID_set, doc=r"""客户代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InstallID_set, doc=r"""安装编号""")
    StockDisposalStatus: "ctp_sopt::TThostFtdcStockDisposalStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalStatus_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalStatus_set, doc=r"""证券处置状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_SettlementID_set, doc=r"""结算编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_InsertTime_set, doc=r"""插入时间""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_BranchID_set, doc=r"""营业部编号""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_BusinessUnit_set, doc=r"""业务单元""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeStockDisposalField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeStockDisposalField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeStockDisposalField

# Register CThostFtdcExchangeStockDisposalField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeStockDisposalField_swigregister(CThostFtdcExchangeStockDisposalField)
class CThostFtdcQryInvestorLevelField(object):
    r"""查询投资者分级"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorLevelField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorLevelField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorLevelField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorLevelField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorLevelField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorLevelField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorLevelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorLevelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorLevelField

# Register CThostFtdcQryInvestorLevelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorLevelField_swigregister(CThostFtdcQryInvestorLevelField)
class CThostFtdcQryForQuoteParamField(object):
    r"""查询询价价差参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryForQuoteParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteParamField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryForQuoteParamField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryForQuoteParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryForQuoteParamField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryForQuoteParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryForQuoteParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryForQuoteParamField

# Register CThostFtdcQryForQuoteParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryForQuoteParamField_swigregister(CThostFtdcQryForQuoteParamField)
class CThostFtdcForQuoteParamField(object):
    r"""询价价差参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcForQuoteParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteParamField_InstrumentID_get, _soptthosttraderapi.CThostFtdcForQuoteParamField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcForQuoteParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcForQuoteParamField_ExchangeID_set, doc=r"""交易所代码""")
    LastPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcForQuoteParamField_LastPrice_get, _soptthosttraderapi.CThostFtdcForQuoteParamField_LastPrice_set, doc=r"""最新价""")
    PriceInterval: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcForQuoteParamField_PriceInterval_get, _soptthosttraderapi.CThostFtdcForQuoteParamField_PriceInterval_set, doc=r"""价差""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcForQuoteParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcForQuoteParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcForQuoteParamField

# Register CThostFtdcForQuoteParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcForQuoteParamField_swigregister(CThostFtdcForQuoteParamField)
class CThostFtdcQryExecFreezeField(object):
    r"""查询行权冻结"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExecFreezeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExecFreezeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryExecFreezeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryExecFreezeField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExecFreezeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryExecFreezeField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExecFreezeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExecFreezeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExecFreezeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExecFreezeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExecFreezeField

# Register CThostFtdcQryExecFreezeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExecFreezeField_swigregister(CThostFtdcQryExecFreezeField)
class CThostFtdcExecFreezeField(object):
    r"""行权冻结"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExecFreezeField_InstrumentID_set, doc=r"""标的合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecFreezeField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecFreezeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_InvestorID_get, _soptthosttraderapi.CThostFtdcExecFreezeField_InvestorID_set, doc=r"""投资者代码""")
    PosiDirection: "ctp_sopt::TThostFtdcPosiDirectionType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_PosiDirection_get, _soptthosttraderapi.CThostFtdcExecFreezeField_PosiDirection_set, doc=r"""持仓多空方向""")
    OptionsType: "ctp_sopt::TThostFtdcOptionsTypeType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_OptionsType_get, _soptthosttraderapi.CThostFtdcExecFreezeField_OptionsType_set, doc=r"""期权类型""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_Volume_get, _soptthosttraderapi.CThostFtdcExecFreezeField_Volume_set, doc=r"""冻结的数量_单位股""")
    FrozenAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcExecFreezeField_FrozenAmount_get, _soptthosttraderapi.CThostFtdcExecFreezeField_FrozenAmount_set, doc=r"""冻结金额""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecFreezeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecFreezeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecFreezeField

# Register CThostFtdcExecFreezeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecFreezeField_swigregister(CThostFtdcExecFreezeField)
class CThostFtdcMMOptionInstrCommRateField(object):
    r"""当前做市商期权合约手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    StrikeRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByMoney_set, doc=r"""执行手续费率""")
    StrikeRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_StrikeRatioByVolume_set, doc=r"""执行手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMMOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMMOptionInstrCommRateField

# Register CThostFtdcMMOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMMOptionInstrCommRateField_swigregister(CThostFtdcMMOptionInstrCommRateField)
class CThostFtdcQryMMOptionInstrCommRateField(object):
    r"""做市商期权手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryMMOptionInstrCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryMMOptionInstrCommRateField

# Register CThostFtdcQryMMOptionInstrCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryMMOptionInstrCommRateField_swigregister(CThostFtdcQryMMOptionInstrCommRateField)
class CThostFtdcMMInstrumentCommissionRateField(object):
    r"""做市商合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    OpenRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByMoney_set, doc=r"""开仓手续费率""")
    OpenRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_OpenRatioByVolume_set, doc=r"""开仓手续费""")
    CloseRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByMoney_set, doc=r"""平仓手续费率""")
    CloseRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseRatioByVolume_set, doc=r"""平仓手续费""")
    CloseTodayRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByMoney_set, doc=r"""平今手续费率""")
    CloseTodayRatioByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_CloseTodayRatioByVolume_set, doc=r"""平今手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMMInstrumentCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMMInstrumentCommissionRateField

# Register CThostFtdcMMInstrumentCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMMInstrumentCommissionRateField_swigregister(CThostFtdcMMInstrumentCommissionRateField)
class CThostFtdcQryMMInstrumentCommissionRateField(object):
    r"""查询做市商合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryMMInstrumentCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryMMInstrumentCommissionRateField

# Register CThostFtdcQryMMInstrumentCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryMMInstrumentCommissionRateField_swigregister(CThostFtdcQryMMInstrumentCommissionRateField)
class CThostFtdcInstrumentOrderCommRateField(object):
    r"""当前报单手续费的详细内容"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_HedgeFlag_set, doc=r"""投机套保标志""")
    OrderCommByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_OrderCommByVolume_set, doc=r"""报单手续费""")
    OrderActionCommByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_OrderActionCommByVolume_set, doc=r"""撤单手续费""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentOrderCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentOrderCommRateField

# Register CThostFtdcInstrumentOrderCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentOrderCommRateField_swigregister(CThostFtdcInstrumentOrderCommRateField)
class CThostFtdcQryInstrumentOrderCommRateField(object):
    r"""报单手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentOrderCommRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentOrderCommRateField

# Register CThostFtdcQryInstrumentOrderCommRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentOrderCommRateField_swigregister(CThostFtdcQryInstrumentOrderCommRateField)
class CThostFtdcLimitAmountField(object):
    r"""投资者金额限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitAmountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitAmountField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitAmountField_ExchangeID_set, doc=r"""交易所代码""")
    LongAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitAmountField_LongAmount_get, _soptthosttraderapi.CThostFtdcLimitAmountField_LongAmount_set, doc=r"""多头持仓金额限制""")
    LongAmountFrozen: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitAmountField_LongAmountFrozen_get, _soptthosttraderapi.CThostFtdcLimitAmountField_LongAmountFrozen_set, doc=r"""多头持仓金额冻结""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitAmountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitAmountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitAmountField

# Register CThostFtdcLimitAmountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitAmountField_swigregister(CThostFtdcLimitAmountField)
class CThostFtdcQryLimitAmountField(object):
    r"""查询投资者金额限制"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitAmountField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLimitAmountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitAmountField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLimitAmountField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryLimitAmountField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryLimitAmountField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLimitAmountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLimitAmountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLimitAmountField

# Register CThostFtdcQryLimitAmountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLimitAmountField_swigregister(CThostFtdcQryLimitAmountField)
class CThostFtdcLimitAmountParamField(object):
    r"""投资者金额限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcLimitAmountParamField_InvestorRange_get, _soptthosttraderapi.CThostFtdcLimitAmountParamField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcLimitAmountParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountParamField_InvestorID_get, _soptthosttraderapi.CThostFtdcLimitAmountParamField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcLimitAmountParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcLimitAmountParamField_ExchangeID_set, doc=r"""交易所代码""")
    LongAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcLimitAmountParamField_LongAmount_get, _soptthosttraderapi.CThostFtdcLimitAmountParamField_LongAmount_set, doc=r"""多头持仓金额限制""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLimitAmountParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLimitAmountParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLimitAmountParamField

# Register CThostFtdcLimitAmountParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLimitAmountParamField_swigregister(CThostFtdcLimitAmountParamField)
class CThostFtdcOptionInstrMarginGuardField(object):
    r"""当前期权合约保证金保障系数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InvestorRange_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_InvestorID_set, doc=r"""投资者代码""")
    SShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_SShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_SShortMarginRatioByMoney_set, doc=r"""投机空头保证金调整系数""")
    SShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_SShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_SShortMarginRatioByVolume_set, doc=r"""投机空头保证金调整系数""")
    HShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_HShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_HShortMarginRatioByMoney_set, doc=r"""保值空头保证金调整系数""")
    HShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_HShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_HShortMarginRatioByVolume_set, doc=r"""保值空头保证金调整系数""")
    AShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_AShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_AShortMarginRatioByMoney_set, doc=r"""套利空头保证金调整系数""")
    AShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_AShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_AShortMarginRatioByVolume_set, doc=r"""套利空头保证金调整系数""")
    IsRelative: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_IsRelative_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_IsRelative_set, doc=r"""是否跟随交易所收取""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionInstrMarginGuardField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionInstrMarginGuardField

# Register CThostFtdcOptionInstrMarginGuardField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionInstrMarginGuardField_swigregister(CThostFtdcOptionInstrMarginGuardField)
class CThostFtdcTradeParamField(object):
    r"""交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradeParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradeParamField_BrokerID_set, doc=r"""经纪公司代码""")
    TradeParamID: "ctp_sopt::TThostFtdcTradeParamIDType" = property(_soptthosttraderapi.CThostFtdcTradeParamField_TradeParamID_get, _soptthosttraderapi.CThostFtdcTradeParamField_TradeParamID_set, doc=r"""参数代码""")
    TradeParamValue: "ctp_sopt::TThostFtdcSettlementParamValueType" = property(_soptthosttraderapi.CThostFtdcTradeParamField_TradeParamValue_get, _soptthosttraderapi.CThostFtdcTradeParamField_TradeParamValue_set, doc=r"""参数代码值""")
    Memo: "ctp_sopt::TThostFtdcMemoType" = property(_soptthosttraderapi.CThostFtdcTradeParamField_Memo_get, _soptthosttraderapi.CThostFtdcTradeParamField_Memo_set, doc=r"""备注""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradeParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradeParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradeParamField

# Register CThostFtdcTradeParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradeParamField_swigregister(CThostFtdcTradeParamField)
class CThostFtdcAuthenticationCodeField(object):
    r"""认证码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAuthenticationCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcAuthenticationCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcAuthenticationCodeField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcAuthenticationCodeField_UserProductInfo_set, doc=r"""用户端产品信息""")
    AuthCode: "ctp_sopt::TThostFtdcAuthCodeType" = property(_soptthosttraderapi.CThostFtdcAuthenticationCodeField_AuthCode_get, _soptthosttraderapi.CThostFtdcAuthenticationCodeField_AuthCode_set, doc=r"""认证码""")
    PreAuthCode: "ctp_sopt::TThostFtdcAuthCodeType" = property(_soptthosttraderapi.CThostFtdcAuthenticationCodeField_PreAuthCode_get, _soptthosttraderapi.CThostFtdcAuthenticationCodeField_PreAuthCode_set, doc=r"""旧认证码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAuthenticationCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAuthenticationCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAuthenticationCodeField

# Register CThostFtdcAuthenticationCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAuthenticationCodeField_swigregister(CThostFtdcAuthenticationCodeField)
class CThostFtdcReqSmsCodeGenerateField(object):
    r"""生成短信验证码请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_UserID_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_UserID_set, doc=r"""用户代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_Password_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_Password_set, doc=r"""密码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_UserProductInfo_set, doc=r"""用户端产品信息""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_MacAddress_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_MacAddress_set, doc=r"""Mac地址""")
    ClientIPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_ClientIPAddress_get, _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_ClientIPAddress_set, doc=r"""终端IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqSmsCodeGenerateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqSmsCodeGenerateField

# Register CThostFtdcReqSmsCodeGenerateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqSmsCodeGenerateField_swigregister(CThostFtdcReqSmsCodeGenerateField)
class CThostFtdcRspSmsCodeGenerateField(object):
    r"""生成短信验证码应答"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_UserID_get, _soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspSmsCodeGenerateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspSmsCodeGenerateField

# Register CThostFtdcRspSmsCodeGenerateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspSmsCodeGenerateField_swigregister(CThostFtdcRspSmsCodeGenerateField)
class CThostFtdcBrokerUserAuthMethodField(object):
    r"""用户验证方式"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_UserID_set, doc=r"""用户代码""")
    IsSms: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_IsSms_get, _soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_IsSms_set, doc=r"""是否启用短信验证码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserAuthMethodField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserAuthMethodField

# Register CThostFtdcBrokerUserAuthMethodField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserAuthMethodField_swigregister(CThostFtdcBrokerUserAuthMethodField)
class CThostFtdcBrokerUserSmsCodeField(object):
    r"""经纪公司用户短信验证码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_UserID_set, doc=r"""用户代码""")
    Mobile: "ctp_sopt::TThostFtdcMobileType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_Mobile_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_Mobile_set, doc=r"""手机""")
    SmsCode: "ctp_sopt::TThostFtdcSmsCodeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_SmsCode_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_SmsCode_set, doc=r"""短信验证码""")
    SeqNo: "ctp_sopt::TThostFtdcSeqNoType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_SeqNo_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_SeqNo_set, doc=r"""序列号""")
    Status: "ctp_sopt::TThostFtdcSmsCodeStatusType" = property(_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_Status_get, _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_Status_set, doc=r"""发送状态""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserSmsCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserSmsCodeField

# Register CThostFtdcBrokerUserSmsCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserSmsCodeField_swigregister(CThostFtdcBrokerUserSmsCodeField)
class CThostFtdcInstrumentMarginRateULField(object):
    r"""合约保证金率调整"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_HedgeFlag_set, doc=r"""投机套保标志""")
    LongMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByMoney_set, doc=r"""多头保证金率""")
    LongMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_LongMarginRatioByVolume_set, doc=r"""多头保证金费""")
    ShortMarginRatioByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByMoney_set, doc=r"""空头保证金率""")
    ShortMarginRatioByVolume: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_get, _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_ShortMarginRatioByVolume_set, doc=r"""空头保证金费""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentMarginRateULField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentMarginRateULField

# Register CThostFtdcInstrumentMarginRateULField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentMarginRateULField_swigregister(CThostFtdcInstrumentMarginRateULField)
class CThostFtdcFutureLimitPosiParamField(object):
    r"""期货持仓限制参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_InvestorRange_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_InvestorID_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_InvestorID_set, doc=r"""投资者代码""")
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ProductID_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ProductID_set, doc=r"""产品代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ExchangeID_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ExchangeID_set, doc=r"""交易所代码""")
    SpecOpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_SpecOpenVolume_set, doc=r"""当日投机开仓数量限制""")
    ArbiOpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_ArbiOpenVolume_set, doc=r"""当日套利开仓数量限制""")
    OpenVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_OpenVolume_get, _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_OpenVolume_set, doc=r"""当日投机+套利开仓数量限制""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcFutureLimitPosiParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcFutureLimitPosiParamField

# Register CThostFtdcFutureLimitPosiParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcFutureLimitPosiParamField_swigregister(CThostFtdcFutureLimitPosiParamField)
class CThostFtdcLoginForbiddenIPField(object):
    r"""禁止登录IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenIPField_reserve1_get, _soptthosttraderapi.CThostFtdcLoginForbiddenIPField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenIPField_IPAddress_get, _soptthosttraderapi.CThostFtdcLoginForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLoginForbiddenIPField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLoginForbiddenIPField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLoginForbiddenIPField

# Register CThostFtdcLoginForbiddenIPField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLoginForbiddenIPField_swigregister(CThostFtdcLoginForbiddenIPField)
class CThostFtdcIPListField(object):
    r"""IP列表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcIPListField_reserve1_get, _soptthosttraderapi.CThostFtdcIPListField_reserve1_set, doc=r"""保留的无效字段""")
    IsWhite: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcIPListField_IsWhite_get, _soptthosttraderapi.CThostFtdcIPListField_IsWhite_set, doc=r"""是否白名单""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcIPListField_IPAddress_get, _soptthosttraderapi.CThostFtdcIPListField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcIPListField_swiginit(self, _soptthosttraderapi.new_CThostFtdcIPListField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcIPListField

# Register CThostFtdcIPListField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcIPListField_swigregister(CThostFtdcIPListField)
class CThostFtdcInputOptionSelfCloseField(object):
    r"""输入的期权自对冲"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")
    OptionSelfCloseRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_UserID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_Volume_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_RequestID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "ctp_sopt::TThostFtdcOptSelfCloseFlagType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_AccountID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_ClientID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_ClientID_set, doc=r"""交易编码""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputOptionSelfCloseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputOptionSelfCloseField

# Register CThostFtdcInputOptionSelfCloseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputOptionSelfCloseField_swigregister(CThostFtdcInputOptionSelfCloseField)
class CThostFtdcInputOptionSelfCloseActionField(object):
    r"""输入期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    OptionSelfCloseActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseActionRef_set, doc=r"""期权自对冲操作引用""")
    OptionSelfCloseRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputOptionSelfCloseActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputOptionSelfCloseActionField

# Register CThostFtdcInputOptionSelfCloseActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputOptionSelfCloseActionField_swigregister(CThostFtdcInputOptionSelfCloseActionField)
class CThostFtdcOptionSelfCloseField(object):
    r"""期权自对冲"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")
    OptionSelfCloseRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_UserID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_Volume_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_RequestID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "ctp_sopt::TThostFtdcOptSelfCloseFlagType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    OptionSelfCloseLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ParticipantID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ClientID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_TraderID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InstallID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OrderSubmitStatus_set, doc=r"""期权自对冲提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_NotifySequence_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_TradingDay_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_SettlementID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_SettlementID_set, doc=r"""结算编号""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InsertDate_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InsertTime_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_CancelTime_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_CancelTime_set, doc=r"""撤销时间""")
    OptionSelfCloseStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseStatus_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_OptionSelfCloseStatus_set, doc=r"""自对冲结果""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_SequenceNo_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_FrontID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_SessionID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_StatusMsg_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOptionSelfCloseSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_BrokerOptionSelfCloseSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_BranchID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_AccountID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_CurrencyID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_CurrencyID_set, doc=r"""币种代码""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_IPAddress_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseField_MacAddress_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionSelfCloseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionSelfCloseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionSelfCloseField

# Register CThostFtdcOptionSelfCloseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionSelfCloseField_swigregister(CThostFtdcOptionSelfCloseField)
class CThostFtdcOptionSelfCloseActionField(object):
    r"""期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    OptionSelfCloseActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseActionRef_set, doc=r"""期权自对冲操作引用""")
    OptionSelfCloseRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseRef_set, doc=r"""期权自对冲引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_RequestID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_FrontID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_SessionID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_TraderID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InstallID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InstallID_set, doc=r"""安装编号""")
    OptionSelfCloseLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ClientID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_UserID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BranchID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptionSelfCloseActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptionSelfCloseActionField

# Register CThostFtdcOptionSelfCloseActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptionSelfCloseActionField_swigregister(CThostFtdcOptionSelfCloseActionField)
class CThostFtdcQryOptionSelfCloseField(object):
    r"""期权自对冲查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_InsertTimeEnd_set, doc=r"""结束时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptionSelfCloseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptionSelfCloseField

# Register CThostFtdcQryOptionSelfCloseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptionSelfCloseField_swigregister(CThostFtdcQryOptionSelfCloseField)
class CThostFtdcExchangeOptionSelfCloseField(object):
    r"""交易所期权自对冲信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_RequestID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_BusinessUnit_set, doc=r"""业务单元""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_HedgeFlag_set, doc=r"""投机套保标志""")
    OptSelfCloseFlag: "ctp_sopt::TThostFtdcOptSelfCloseFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptSelfCloseFlag_set, doc=r"""期权行权的头寸是否自对冲""")
    OptionSelfCloseLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OrderSubmitStatus_set, doc=r"""期权自对冲提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_TradingDay_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_SettlementID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_SettlementID_set, doc=r"""结算编号""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseSysID_set, doc=r"""期权自对冲编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_CancelTime_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_CancelTime_set, doc=r"""撤销时间""")
    OptionSelfCloseStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseStatus_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_OptionSelfCloseStatus_set, doc=r"""自对冲结果""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_SequenceNo_set, doc=r"""序号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_BranchID_set, doc=r"""营业部编号""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOptionSelfCloseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOptionSelfCloseField

# Register CThostFtdcExchangeOptionSelfCloseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseField_swigregister(CThostFtdcExchangeOptionSelfCloseField)
class CThostFtdcQryOptionSelfCloseActionField(object):
    r"""期权自对冲操作查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptionSelfCloseActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptionSelfCloseActionField

# Register CThostFtdcQryOptionSelfCloseActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptionSelfCloseActionField_swigregister(CThostFtdcQryOptionSelfCloseActionField)
class CThostFtdcExchangeOptionSelfCloseActionField(object):
    r"""交易所期权自对冲操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ExchangeID_set, doc=r"""交易所代码""")
    OptionSelfCloseSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseSysID_set, doc=r"""期权自对冲操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_InstallID_set, doc=r"""安装编号""")
    OptionSelfCloseLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OptionSelfCloseLocalID_set, doc=r"""本地期权自对冲编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_UserID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_UserID_set, doc=r"""用户代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_BranchID_set, doc=r"""营业部编号""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_IPAddress_set, doc=r"""IP地址""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_MacAddress_set, doc=r"""Mac地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeOptionSelfCloseActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeOptionSelfCloseActionField

# Register CThostFtdcExchangeOptionSelfCloseActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeOptionSelfCloseActionField_swigregister(CThostFtdcExchangeOptionSelfCloseActionField)
class CThostFtdcSyncDelaySwapField(object):
    r"""延时换汇同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DelaySwapSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_DelaySwapSeqNo_set, doc=r"""换汇流水号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_BrokerID_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_InvestorID_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_InvestorID_set, doc=r"""投资者代码""")
    FromCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromCurrencyID_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromCurrencyID_set, doc=r"""源币种""")
    FromAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromAmount_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromAmount_set, doc=r"""源金额""")
    FromFrozenSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromFrozenSwap_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_FromFrozenSwap_set, doc=r"""源换汇冻结金额""")
    ToCurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToCurrencyID_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToCurrencyID_set, doc=r"""目标币种""")
    ToAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToAmount_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToAmount_set, doc=r"""目标金额""")
    ToFrozenSwap: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToFrozenSwap_get, _soptthosttraderapi.CThostFtdcSyncDelaySwapField_ToFrozenSwap_set, doc=r"""目标换汇冻结金额""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncDelaySwapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncDelaySwapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncDelaySwapField

# Register CThostFtdcSyncDelaySwapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncDelaySwapField_swigregister(CThostFtdcSyncDelaySwapField)
class CThostFtdcQrySyncDelaySwapField(object):
    r"""查询延时换汇同步"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_BrokerID_set, doc=r"""经纪公司代码""")
    DelaySwapSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_get, _soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_DelaySwapSeqNo_set, doc=r"""延时换汇流水号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySyncDelaySwapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySyncDelaySwapField

# Register CThostFtdcQrySyncDelaySwapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySyncDelaySwapField_swigregister(CThostFtdcQrySyncDelaySwapField)
class CThostFtdcInvestUnitField(object):
    r"""投资单元"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_InvestUnitID_set, doc=r"""投资单元代码""")
    InvestorUnitName: "ctp_sopt::TThostFtdcPartyNameType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_InvestorUnitName_get, _soptthosttraderapi.CThostFtdcInvestUnitField_InvestorUnitName_set, doc=r"""投资者单元名称""")
    InvestorGroupID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_InvestorGroupID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_InvestorGroupID_set, doc=r"""投资者分组代码""")
    CommModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_CommModelID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_CommModelID_set, doc=r"""手续费率模板代码""")
    MarginModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_MarginModelID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_MarginModelID_set, doc=r"""保证金率模板代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_AccountID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInvestUnitField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInvestUnitField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestUnitField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestUnitField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestUnitField

# Register CThostFtdcInvestUnitField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestUnitField_swigregister(CThostFtdcInvestUnitField)
class CThostFtdcQryInvestUnitField(object):
    r"""查询投资单元"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestUnitField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestUnitField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestUnitField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestUnitField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestUnitField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInvestUnitField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestUnitField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestUnitField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestUnitField

# Register CThostFtdcQryInvestUnitField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestUnitField_swigregister(CThostFtdcQryInvestUnitField)
class CThostFtdcMarketDataField(object):
    r"""市场行情"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_TradingDay_get, _soptthosttraderapi.CThostFtdcMarketDataField_TradingDay_set, doc=r"""交易日""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_InstrumentID_get, _soptthosttraderapi.CThostFtdcMarketDataField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMarketDataField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcMarketDataField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    LastPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_LastPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_LastPrice_set, doc=r"""最新价""")
    PreSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_PreSettlementPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_PreClosePrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_PreOpenInterest_get, _soptthosttraderapi.CThostFtdcMarketDataField_PreOpenInterest_set, doc=r"""昨持仓量""")
    OpenPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_OpenPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_HighestPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_LowestPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_LowestPrice_set, doc=r"""最低价""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_Volume_get, _soptthosttraderapi.CThostFtdcMarketDataField_Volume_set, doc=r"""数量""")
    Turnover: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_Turnover_get, _soptthosttraderapi.CThostFtdcMarketDataField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_OpenInterest_get, _soptthosttraderapi.CThostFtdcMarketDataField_OpenInterest_set, doc=r"""持仓量""")
    ClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_ClosePrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_ClosePrice_set, doc=r"""今收盘""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_SettlementPrice_set, doc=r"""本次结算价""")
    UpperLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_UpperLimitPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_LowerLimitPrice_get, _soptthosttraderapi.CThostFtdcMarketDataField_LowerLimitPrice_set, doc=r"""跌停板价""")
    PreDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_PreDelta_get, _soptthosttraderapi.CThostFtdcMarketDataField_PreDelta_set, doc=r"""昨虚实度""")
    CurrDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_CurrDelta_get, _soptthosttraderapi.CThostFtdcMarketDataField_CurrDelta_set, doc=r"""今虚实度""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_UpdateTime_get, _soptthosttraderapi.CThostFtdcMarketDataField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "ctp_sopt::TThostFtdcMillisecType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_UpdateMillisec_get, _soptthosttraderapi.CThostFtdcMarketDataField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    ActionDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_ActionDay_get, _soptthosttraderapi.CThostFtdcMarketDataField_ActionDay_set, doc=r"""业务日期""")
    SendingTime: "ctp_sopt::TThostFtdcSendingTimeType" = property(_soptthosttraderapi.CThostFtdcMarketDataField_SendingTime_get, _soptthosttraderapi.CThostFtdcMarketDataField_SendingTime_set, doc=r"""行情发送时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataField

# Register CThostFtdcMarketDataField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataField_swigregister(CThostFtdcMarketDataField)
class CThostFtdcMarketDataBaseField(object):
    r"""行情基础属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMarketDataBaseField_TradingDay_get, _soptthosttraderapi.CThostFtdcMarketDataBaseField_TradingDay_set, doc=r"""交易日""")
    PreSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBaseField_PreSettlementPrice_get, _soptthosttraderapi.CThostFtdcMarketDataBaseField_PreSettlementPrice_set, doc=r"""上次结算价""")
    PreClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBaseField_PreClosePrice_get, _soptthosttraderapi.CThostFtdcMarketDataBaseField_PreClosePrice_set, doc=r"""昨收盘""")
    PreOpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBaseField_PreOpenInterest_get, _soptthosttraderapi.CThostFtdcMarketDataBaseField_PreOpenInterest_set, doc=r"""昨持仓量""")
    PreDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMarketDataBaseField_PreDelta_get, _soptthosttraderapi.CThostFtdcMarketDataBaseField_PreDelta_set, doc=r"""昨虚实度""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataBaseField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataBaseField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataBaseField

# Register CThostFtdcMarketDataBaseField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataBaseField_swigregister(CThostFtdcMarketDataBaseField)
class CThostFtdcMarketDataStaticField(object):
    r"""行情静态属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OpenPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_OpenPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_OpenPrice_set, doc=r"""今开盘""")
    HighestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_HighestPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_HighestPrice_set, doc=r"""最高价""")
    LowestPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_LowestPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_LowestPrice_set, doc=r"""最低价""")
    ClosePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_ClosePrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_ClosePrice_set, doc=r"""今收盘""")
    UpperLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_UpperLimitPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_UpperLimitPrice_set, doc=r"""涨停板价""")
    LowerLimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_LowerLimitPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_LowerLimitPrice_set, doc=r"""跌停板价""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_SettlementPrice_set, doc=r"""本次结算价""")
    CurrDelta: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcMarketDataStaticField_CurrDelta_get, _soptthosttraderapi.CThostFtdcMarketDataStaticField_CurrDelta_set, doc=r"""今虚实度""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataStaticField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataStaticField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataStaticField

# Register CThostFtdcMarketDataStaticField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataStaticField_swigregister(CThostFtdcMarketDataStaticField)
class CThostFtdcMarketDataLastMatchField(object):
    r"""行情最新成交属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    LastPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataLastMatchField_LastPrice_get, _soptthosttraderapi.CThostFtdcMarketDataLastMatchField_LastPrice_set, doc=r"""最新价""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataLastMatchField_Volume_get, _soptthosttraderapi.CThostFtdcMarketDataLastMatchField_Volume_set, doc=r"""数量""")
    Turnover: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcMarketDataLastMatchField_Turnover_get, _soptthosttraderapi.CThostFtdcMarketDataLastMatchField_Turnover_set, doc=r"""成交金额""")
    OpenInterest: "ctp_sopt::TThostFtdcLargeVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataLastMatchField_OpenInterest_get, _soptthosttraderapi.CThostFtdcMarketDataLastMatchField_OpenInterest_set, doc=r"""持仓量""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataLastMatchField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataLastMatchField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataLastMatchField

# Register CThostFtdcMarketDataLastMatchField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataLastMatchField_swigregister(CThostFtdcMarketDataLastMatchField)
class CThostFtdcMarketDataBestPriceField(object):
    r"""行情最优价属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice1: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_BidPrice1_get, _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_BidPrice1_set, doc=r"""申买价一""")
    BidVolume1: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_BidVolume1_get, _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_BidVolume1_set, doc=r"""申买量一""")
    AskPrice1: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_AskPrice1_get, _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_AskPrice1_set, doc=r"""申卖价一""")
    AskVolume1: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_AskVolume1_get, _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_AskVolume1_set, doc=r"""申卖量一""")
    CircuitRefPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_CircuitRefPrice_get, _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_CircuitRefPrice_set, doc=r"""熔断参考价""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataBestPriceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataBestPriceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataBestPriceField

# Register CThostFtdcMarketDataBestPriceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataBestPriceField_swigregister(CThostFtdcMarketDataBestPriceField)
class CThostFtdcMarketDataBid23Field(object):
    r"""行情申买二、三属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice2: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidPrice2_get, _soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidPrice2_set, doc=r"""申买价二""")
    BidVolume2: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidVolume2_get, _soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidVolume2_set, doc=r"""申买量二""")
    BidPrice3: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidPrice3_get, _soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidPrice3_set, doc=r"""申买价三""")
    BidVolume3: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidVolume3_get, _soptthosttraderapi.CThostFtdcMarketDataBid23Field_BidVolume3_set, doc=r"""申买量三""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataBid23Field_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataBid23Field())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataBid23Field

# Register CThostFtdcMarketDataBid23Field in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataBid23Field_swigregister(CThostFtdcMarketDataBid23Field)
class CThostFtdcMarketDataAsk23Field(object):
    r"""行情申卖二、三属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice2: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskPrice2_get, _soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskPrice2_set, doc=r"""申卖价二""")
    AskVolume2: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskVolume2_get, _soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskVolume2_set, doc=r"""申卖量二""")
    AskPrice3: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskPrice3_get, _soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskPrice3_set, doc=r"""申卖价三""")
    AskVolume3: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskVolume3_get, _soptthosttraderapi.CThostFtdcMarketDataAsk23Field_AskVolume3_set, doc=r"""申卖量三""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataAsk23Field_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataAsk23Field())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataAsk23Field

# Register CThostFtdcMarketDataAsk23Field in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataAsk23Field_swigregister(CThostFtdcMarketDataAsk23Field)
class CThostFtdcMarketDataBid45Field(object):
    r"""行情申买四、五属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BidPrice4: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidPrice4_get, _soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidPrice4_set, doc=r"""申买价四""")
    BidVolume4: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidVolume4_get, _soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidVolume4_set, doc=r"""申买量四""")
    BidPrice5: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidPrice5_get, _soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidPrice5_set, doc=r"""申买价五""")
    BidVolume5: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidVolume5_get, _soptthosttraderapi.CThostFtdcMarketDataBid45Field_BidVolume5_set, doc=r"""申买量五""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataBid45Field_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataBid45Field())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataBid45Field

# Register CThostFtdcMarketDataBid45Field in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataBid45Field_swigregister(CThostFtdcMarketDataBid45Field)
class CThostFtdcMarketDataAsk45Field(object):
    r"""行情申卖四、五属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AskPrice4: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskPrice4_get, _soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskPrice4_set, doc=r"""申卖价四""")
    AskVolume4: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskVolume4_get, _soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskVolume4_set, doc=r"""申卖量四""")
    AskPrice5: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskPrice5_get, _soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskPrice5_set, doc=r"""申卖价五""")
    AskVolume5: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskVolume5_get, _soptthosttraderapi.CThostFtdcMarketDataAsk45Field_AskVolume5_set, doc=r"""申卖量五""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataAsk45Field_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataAsk45Field())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataAsk45Field

# Register CThostFtdcMarketDataAsk45Field in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataAsk45Field_swigregister(CThostFtdcMarketDataAsk45Field)
class CThostFtdcMarketDataUpdateTimeField(object):
    r"""行情更新时间属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_InstrumentID_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_InstrumentID_set, doc=r"""合约代码""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_UpdateTime_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_UpdateTime_set, doc=r"""最后修改时间""")
    UpdateMillisec: "ctp_sopt::TThostFtdcMillisecType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set, doc=r"""最后修改毫秒""")
    ActionDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_ActionDay_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_ActionDay_set, doc=r"""业务日期""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_ExchangeID_set, doc=r"""交易所代码""")
    SendingTime: "ctp_sopt::TThostFtdcSendingTimeType" = property(_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_SendingTime_get, _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_SendingTime_set, doc=r"""行情发送时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataUpdateTimeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataUpdateTimeField

# Register CThostFtdcMarketDataUpdateTimeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataUpdateTimeField_swigregister(CThostFtdcMarketDataUpdateTimeField)
class CThostFtdcMarketDataExchangeField(object):
    r"""行情交易所代码属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMarketDataExchangeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMarketDataExchangeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataExchangeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataExchangeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataExchangeField

# Register CThostFtdcMarketDataExchangeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataExchangeField_swigregister(CThostFtdcMarketDataExchangeField)
class CThostFtdcSpecificInstrumentField(object):
    r"""指定的合约"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcSpecificInstrumentField_InstrumentID_get, _soptthosttraderapi.CThostFtdcSpecificInstrumentField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSpecificInstrumentField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSpecificInstrumentField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSpecificInstrumentField

# Register CThostFtdcSpecificInstrumentField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSpecificInstrumentField_swigregister(CThostFtdcSpecificInstrumentField)
class CThostFtdcInstrumentStatusField(object):
    r"""合约状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    SettlementGroupID: "ctp_sopt::TThostFtdcSettlementGroupIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_SettlementGroupID_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_SettlementGroupID_set, doc=r"""结算组代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_InstrumentID_set, doc=r"""合约代码""")
    InstrumentStatus: "ctp_sopt::TThostFtdcInstrumentStatusType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_InstrumentStatus_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_InstrumentStatus_set, doc=r"""合约交易状态""")
    TradingSegmentSN: "ctp_sopt::TThostFtdcTradingSegmentSNType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_TradingSegmentSN_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_TradingSegmentSN_set, doc=r"""交易阶段编号""")
    EnterTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_EnterTime_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_EnterTime_set, doc=r"""进入本状态时间""")
    EnterReason: "ctp_sopt::TThostFtdcInstStatusEnterReasonType" = property(_soptthosttraderapi.CThostFtdcInstrumentStatusField_EnterReason_get, _soptthosttraderapi.CThostFtdcInstrumentStatusField_EnterReason_set, doc=r"""进入本状态原因""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstrumentStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstrumentStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstrumentStatusField

# Register CThostFtdcInstrumentStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstrumentStatusField_swigregister(CThostFtdcInstrumentStatusField)
class CThostFtdcQryInstrumentStatusField(object):
    r"""查询合约状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentStatusField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInstrumentStatusField_ExchangeID_set, doc=r"""交易所代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcQryInstrumentStatusField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcQryInstrumentStatusField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInstrumentStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInstrumentStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInstrumentStatusField

# Register CThostFtdcQryInstrumentStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInstrumentStatusField_swigregister(CThostFtdcQryInstrumentStatusField)
class CThostFtdcInvestorAccountField(object):
    r"""投资者账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorAccountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorAccountField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorAccountField_InvestorID_set, doc=r"""投资者代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcInvestorAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcInvestorAccountField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInvestorAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInvestorAccountField_CurrencyID_set, doc=r"""币种代码""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcInvestorAccountField_BizType_get, _soptthosttraderapi.CThostFtdcInvestorAccountField_BizType_set, doc=r"""业务类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorAccountField

# Register CThostFtdcInvestorAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorAccountField_swigregister(CThostFtdcInvestorAccountField)
class CThostFtdcPositionProfitAlgorithmField(object):
    r"""浮动盈亏算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_BrokerID_get, _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_AccountID_get, _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_AccountID_set, doc=r"""投资者帐号""")
    Algorithm: "ctp_sopt::TThostFtdcAlgorithmType" = property(_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_Algorithm_get, _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_Algorithm_set, doc=r"""盈亏算法""")
    Memo: "ctp_sopt::TThostFtdcMemoType" = property(_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_Memo_get, _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_Memo_set, doc=r"""备注""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_CurrencyID_get, _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_swiginit(self, _soptthosttraderapi.new_CThostFtdcPositionProfitAlgorithmField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcPositionProfitAlgorithmField

# Register CThostFtdcPositionProfitAlgorithmField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcPositionProfitAlgorithmField_swigregister(CThostFtdcPositionProfitAlgorithmField)
class CThostFtdcDiscountField(object):
    r"""会员资金折扣"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDiscountField_BrokerID_get, _soptthosttraderapi.CThostFtdcDiscountField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcDiscountField_InvestorRange_get, _soptthosttraderapi.CThostFtdcDiscountField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcDiscountField_InvestorID_get, _soptthosttraderapi.CThostFtdcDiscountField_InvestorID_set, doc=r"""投资者代码""")
    Discount: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcDiscountField_Discount_get, _soptthosttraderapi.CThostFtdcDiscountField_Discount_set, doc=r"""资金折扣比例""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDiscountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDiscountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDiscountField

# Register CThostFtdcDiscountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDiscountField_swigregister(CThostFtdcDiscountField)
class CThostFtdcQryTransferBankField(object):
    r"""查询转帐银行"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferBankField_BankID_get, _soptthosttraderapi.CThostFtdcQryTransferBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferBankField_BankBrchID_get, _soptthosttraderapi.CThostFtdcQryTransferBankField_BankBrchID_set, doc=r"""银行分中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTransferBankField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTransferBankField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTransferBankField

# Register CThostFtdcQryTransferBankField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTransferBankField_swigregister(CThostFtdcQryTransferBankField)
class CThostFtdcTransferBankField(object):
    r"""转帐银行"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcTransferBankField_BankID_get, _soptthosttraderapi.CThostFtdcTransferBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcTransferBankField_BankBrchID_get, _soptthosttraderapi.CThostFtdcTransferBankField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankName: "ctp_sopt::TThostFtdcBankNameType" = property(_soptthosttraderapi.CThostFtdcTransferBankField_BankName_get, _soptthosttraderapi.CThostFtdcTransferBankField_BankName_set, doc=r"""银行名称""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcTransferBankField_IsActive_get, _soptthosttraderapi.CThostFtdcTransferBankField_IsActive_set, doc=r"""是否活跃""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferBankField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferBankField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferBankField

# Register CThostFtdcTransferBankField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferBankField_swigregister(CThostFtdcTransferBankField)
class CThostFtdcQryInvestorPositionDetailField(object):
    r"""查询投资者持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorPositionDetailField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorPositionDetailField

# Register CThostFtdcQryInvestorPositionDetailField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorPositionDetailField_swigregister(CThostFtdcQryInvestorPositionDetailField)
class CThostFtdcInvestorPositionDetailField(object):
    r"""投资者持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InstrumentID_set, doc=r"""合约代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InvestorID_set, doc=r"""投资者代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Direction_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Direction_set, doc=r"""买卖""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_OpenDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_OpenDate_set, doc=r"""开仓日期""")
    TradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradeID_set, doc=r"""成交编号""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Volume_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Volume_set, doc=r"""数量""")
    OpenPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_OpenPrice_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_OpenPrice_set, doc=r"""开仓价""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradingDay_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_SettlementID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_SettlementID_set, doc=r"""结算编号""")
    TradeType: "ctp_sopt::TThostFtdcTradeTypeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradeType_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_TradeType_set, doc=r"""成交类型""")
    CombInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CombInstrumentID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CombInstrumentID_set, doc=r"""组合合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_ExchangeID_set, doc=r"""交易所代码""")
    CloseProfitByDate: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set, doc=r"""逐日盯市平仓盈亏""")
    CloseProfitByTrade: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set, doc=r"""逐笔对冲平仓盈亏""")
    PositionProfitByDate: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set, doc=r"""逐日盯市持仓盈亏""")
    PositionProfitByTrade: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set, doc=r"""逐笔对冲持仓盈亏""")
    Margin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Margin_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_ExchMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LastSettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set, doc=r"""昨结算价""")
    SettlementPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_SettlementPrice_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_SettlementPrice_set, doc=r"""结算价""")
    CloseVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseVolume_set, doc=r"""平仓量""")
    CloseAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseAmount_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_CloseAmount_set, doc=r"""平仓金额""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorPositionDetailField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorPositionDetailField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorPositionDetailField

# Register CThostFtdcInvestorPositionDetailField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorPositionDetailField_swigregister(CThostFtdcInvestorPositionDetailField)
class CThostFtdcTradingAccountPasswordField(object):
    r"""资金账户口令域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordField_AccountID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordField_Password_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordField_Password_set, doc=r"""密码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordField_CurrencyID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingAccountPasswordField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingAccountPasswordField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingAccountPasswordField

# Register CThostFtdcTradingAccountPasswordField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingAccountPasswordField_swigregister(CThostFtdcTradingAccountPasswordField)
class CThostFtdcMDTraderOfferField(object):
    r"""交易所行情报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ExchangeID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_TraderID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ParticipantID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_Password_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_Password_set, doc=r"""密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_InstallID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_OrderLocalID_set, doc=r"""本地报单编号""")
    TraderConnectStatus: "ctp_sopt::TThostFtdcTraderConnectStatusType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_TraderConnectStatus_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_TraderConnectStatus_set, doc=r"""交易所交易员连接状态""")
    ConnectRequestDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectRequestDate_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectRequestDate_set, doc=r"""发出连接请求的日期""")
    ConnectRequestTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectRequestTime_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectRequestTime_set, doc=r"""发出连接请求的时间""")
    LastReportDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_LastReportDate_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_LastReportTime_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_LastReportTime_set, doc=r"""上次报告时间""")
    ConnectDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectDate_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectDate_set, doc=r"""完成连接日期""")
    ConnectTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectTime_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_ConnectTime_set, doc=r"""完成连接时间""")
    StartDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_StartDate_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_StartDate_set, doc=r"""启动日期""")
    StartTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_StartTime_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_StartTime_set, doc=r"""启动时间""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_TradingDay_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_TradingDay_set, doc=r"""交易日""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_BrokerID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_BrokerID_set, doc=r"""经纪公司代码""")
    MaxTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_MaxTradeID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_MaxTradeID_set, doc=r"""本席位最大成交编号""")
    MaxOrderMessageReference: "ctp_sopt::TThostFtdcReturnCodeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set, doc=r"""本席位最大报单备拷""")
    BizType: "ctp_sopt::TThostFtdcBizTypeType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_BizType_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_BizType_set, doc=r"""业务类型""")
    PbuSequenceID: "ctp_sopt::TThostFtdcPbuSequenceIDType" = property(_soptthosttraderapi.CThostFtdcMDTraderOfferField_PbuSequenceID_get, _soptthosttraderapi.CThostFtdcMDTraderOfferField_PbuSequenceID_set, doc=r"""PBU序号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMDTraderOfferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMDTraderOfferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMDTraderOfferField

# Register CThostFtdcMDTraderOfferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMDTraderOfferField_swigregister(CThostFtdcMDTraderOfferField)
class CThostFtdcQryMDTraderOfferField(object):
    r"""查询行情报盘机"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryMDTraderOfferField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryMDTraderOfferField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcQryMDTraderOfferField_ParticipantID_get, _soptthosttraderapi.CThostFtdcQryMDTraderOfferField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcQryMDTraderOfferField_TraderID_get, _soptthosttraderapi.CThostFtdcQryMDTraderOfferField_TraderID_set, doc=r"""交易所交易员代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryMDTraderOfferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryMDTraderOfferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryMDTraderOfferField

# Register CThostFtdcQryMDTraderOfferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryMDTraderOfferField_swigregister(CThostFtdcQryMDTraderOfferField)
class CThostFtdcQryNoticeField(object):
    r"""查询客户通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryNoticeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryNoticeField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryNoticeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryNoticeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryNoticeField

# Register CThostFtdcQryNoticeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryNoticeField_swigregister(CThostFtdcQryNoticeField)
class CThostFtdcNoticeField(object):
    r"""客户通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNoticeField_BrokerID_get, _soptthosttraderapi.CThostFtdcNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    Content: "ctp_sopt::TThostFtdcContentType" = property(_soptthosttraderapi.CThostFtdcNoticeField_Content_get, _soptthosttraderapi.CThostFtdcNoticeField_Content_set, doc=r"""消息正文""")
    SequenceLabel: "ctp_sopt::TThostFtdcSequenceLabelType" = property(_soptthosttraderapi.CThostFtdcNoticeField_SequenceLabel_get, _soptthosttraderapi.CThostFtdcNoticeField_SequenceLabel_set, doc=r"""经纪公司通知内容序列号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNoticeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNoticeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNoticeField

# Register CThostFtdcNoticeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNoticeField_swigregister(CThostFtdcNoticeField)
class CThostFtdcUserRightField(object):
    r"""用户权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserRightField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserRightField_UserID_get, _soptthosttraderapi.CThostFtdcUserRightField_UserID_set, doc=r"""用户代码""")
    UserRightType: "ctp_sopt::TThostFtdcUserRightTypeType" = property(_soptthosttraderapi.CThostFtdcUserRightField_UserRightType_get, _soptthosttraderapi.CThostFtdcUserRightField_UserRightType_set, doc=r"""客户权限类型""")
    IsForbidden: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcUserRightField_IsForbidden_get, _soptthosttraderapi.CThostFtdcUserRightField_IsForbidden_set, doc=r"""是否禁止""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserRightField

# Register CThostFtdcUserRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserRightField_swigregister(CThostFtdcUserRightField)
class CThostFtdcQrySettlementInfoConfirmField(object):
    r"""查询结算信息确认域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_InvestorID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_InvestorID_set, doc=r"""投资者代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_AccountID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_AccountID_set, doc=r"""投资者帐号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySettlementInfoConfirmField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySettlementInfoConfirmField

# Register CThostFtdcQrySettlementInfoConfirmField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySettlementInfoConfirmField_swigregister(CThostFtdcQrySettlementInfoConfirmField)
class CThostFtdcLoadSettlementInfoField(object):
    r"""装载结算信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLoadSettlementInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcLoadSettlementInfoField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLoadSettlementInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLoadSettlementInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLoadSettlementInfoField

# Register CThostFtdcLoadSettlementInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLoadSettlementInfoField_swigregister(CThostFtdcLoadSettlementInfoField)
class CThostFtdcBrokerWithdrawAlgorithmField(object):
    r"""经纪公司可提资金算法表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    WithdrawAlgorithm: "ctp_sopt::TThostFtdcAlgorithmType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set, doc=r"""可提资金算法""")
    UsingRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set, doc=r"""资金使用率""")
    IncludeCloseProfit: "ctp_sopt::TThostFtdcIncludeCloseProfitType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set, doc=r"""可提是否包含平仓盈利""")
    AllWithoutTrade: "ctp_sopt::TThostFtdcAllWithoutTradeType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set, doc=r"""本日无仓且无成交客户是否受可提比例限制""")
    AvailIncludeCloseProfit: "ctp_sopt::TThostFtdcIncludeCloseProfitType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set, doc=r"""可用是否包含平仓盈利""")
    IsBrokerUserEvent: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set, doc=r"""是否启用用户事件""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set, doc=r"""币种代码""")
    FundMortgageRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set, doc=r"""货币质押比率""")
    BalanceAlgorithm: "ctp_sopt::TThostFtdcBalanceAlgorithmType" = property(_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get, _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set, doc=r"""权益算法""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerWithdrawAlgorithmField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerWithdrawAlgorithmField

# Register CThostFtdcBrokerWithdrawAlgorithmField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerWithdrawAlgorithmField_swigregister(CThostFtdcBrokerWithdrawAlgorithmField)
class CThostFtdcTradingAccountPasswordUpdateV1Field(object):
    r"""资金账户口令变更域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set, doc=r"""投资者代码""")
    OldPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set, doc=r"""新的口令""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingAccountPasswordUpdateV1Field())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingAccountPasswordUpdateV1Field

# Register CThostFtdcTradingAccountPasswordUpdateV1Field in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateV1Field_swigregister(CThostFtdcTradingAccountPasswordUpdateV1Field)
class CThostFtdcTradingAccountPasswordUpdateField(object):
    r"""资金账户口令变更域"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_AccountID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_AccountID_set, doc=r"""投资者帐号""")
    OldPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set, doc=r"""原来的口令""")
    NewPassword: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set, doc=r"""新的口令""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get, _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingAccountPasswordUpdateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingAccountPasswordUpdateField

# Register CThostFtdcTradingAccountPasswordUpdateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingAccountPasswordUpdateField_swigregister(CThostFtdcTradingAccountPasswordUpdateField)
class CThostFtdcQryCombinationLegField(object):
    r"""查询组合合约分腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryCombinationLegField_CombInstrumentID_get, _soptthosttraderapi.CThostFtdcQryCombinationLegField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegID: "ctp_sopt::TThostFtdcLegIDType" = property(_soptthosttraderapi.CThostFtdcQryCombinationLegField_LegID_get, _soptthosttraderapi.CThostFtdcQryCombinationLegField_LegID_set, doc=r"""单腿编号""")
    LegInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryCombinationLegField_LegInstrumentID_get, _soptthosttraderapi.CThostFtdcQryCombinationLegField_LegInstrumentID_set, doc=r"""单腿合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCombinationLegField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCombinationLegField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCombinationLegField

# Register CThostFtdcQryCombinationLegField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCombinationLegField_swigregister(CThostFtdcQryCombinationLegField)
class CThostFtdcQrySyncStatusField(object):
    r"""查询组合合约分腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcQrySyncStatusField_TradingDay_get, _soptthosttraderapi.CThostFtdcQrySyncStatusField_TradingDay_set, doc=r"""交易日""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySyncStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySyncStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySyncStatusField

# Register CThostFtdcQrySyncStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySyncStatusField_swigregister(CThostFtdcQrySyncStatusField)
class CThostFtdcCombinationLegField(object):
    r"""组合交易合约的单腿"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CombInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_CombInstrumentID_get, _soptthosttraderapi.CThostFtdcCombinationLegField_CombInstrumentID_set, doc=r"""组合合约代码""")
    LegID: "ctp_sopt::TThostFtdcLegIDType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_LegID_get, _soptthosttraderapi.CThostFtdcCombinationLegField_LegID_set, doc=r"""单腿编号""")
    LegInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_LegInstrumentID_get, _soptthosttraderapi.CThostFtdcCombinationLegField_LegInstrumentID_set, doc=r"""单腿合约代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_Direction_get, _soptthosttraderapi.CThostFtdcCombinationLegField_Direction_set, doc=r"""买卖方向""")
    LegMultiple: "ctp_sopt::TThostFtdcLegMultipleType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_LegMultiple_get, _soptthosttraderapi.CThostFtdcCombinationLegField_LegMultiple_set, doc=r"""单腿乘数""")
    ImplyLevel: "ctp_sopt::TThostFtdcImplyLevelType" = property(_soptthosttraderapi.CThostFtdcCombinationLegField_ImplyLevel_get, _soptthosttraderapi.CThostFtdcCombinationLegField_ImplyLevel_set, doc=r"""派生层数""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCombinationLegField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCombinationLegField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCombinationLegField

# Register CThostFtdcCombinationLegField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCombinationLegField_swigregister(CThostFtdcCombinationLegField)
class CThostFtdcSyncStatusField(object):
    r"""数据同步状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcSyncStatusField_TradingDay_get, _soptthosttraderapi.CThostFtdcSyncStatusField_TradingDay_set, doc=r"""交易日""")
    DataSyncStatus: "ctp_sopt::TThostFtdcDataSyncStatusType" = property(_soptthosttraderapi.CThostFtdcSyncStatusField_DataSyncStatus_get, _soptthosttraderapi.CThostFtdcSyncStatusField_DataSyncStatus_set, doc=r"""数据同步状态""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSyncStatusField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSyncStatusField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSyncStatusField

# Register CThostFtdcSyncStatusField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSyncStatusField_swigregister(CThostFtdcSyncStatusField)
class CThostFtdcQryLinkManField(object):
    r"""查询联系人"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLinkManField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLinkManField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryLinkManField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryLinkManField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLinkManField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLinkManField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLinkManField

# Register CThostFtdcQryLinkManField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLinkManField_swigregister(CThostFtdcQryLinkManField)
class CThostFtdcLinkManField(object):
    r"""联系人"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLinkManField_BrokerID_get, _soptthosttraderapi.CThostFtdcLinkManField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcLinkManField_InvestorID_get, _soptthosttraderapi.CThostFtdcLinkManField_InvestorID_set, doc=r"""投资者代码""")
    PersonType: "ctp_sopt::TThostFtdcPersonTypeType" = property(_soptthosttraderapi.CThostFtdcLinkManField_PersonType_get, _soptthosttraderapi.CThostFtdcLinkManField_PersonType_set, doc=r"""联系人类型""")
    IdentifiedCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcLinkManField_IdentifiedCardType_get, _soptthosttraderapi.CThostFtdcLinkManField_IdentifiedCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcLinkManField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcLinkManField_IdentifiedCardNo_set, doc=r"""证件号码""")
    PersonName: "ctp_sopt::TThostFtdcPartyNameType" = property(_soptthosttraderapi.CThostFtdcLinkManField_PersonName_get, _soptthosttraderapi.CThostFtdcLinkManField_PersonName_set, doc=r"""名称""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcLinkManField_Telephone_get, _soptthosttraderapi.CThostFtdcLinkManField_Telephone_set, doc=r"""联系电话""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcLinkManField_Address_get, _soptthosttraderapi.CThostFtdcLinkManField_Address_set, doc=r"""通讯地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcLinkManField_ZipCode_get, _soptthosttraderapi.CThostFtdcLinkManField_ZipCode_set, doc=r"""邮政编码""")
    Priority: "ctp_sopt::TThostFtdcPriorityType" = property(_soptthosttraderapi.CThostFtdcLinkManField_Priority_get, _soptthosttraderapi.CThostFtdcLinkManField_Priority_set, doc=r"""优先级""")
    UOAZipCode: "ctp_sopt::TThostFtdcUOAZipCodeType" = property(_soptthosttraderapi.CThostFtdcLinkManField_UOAZipCode_get, _soptthosttraderapi.CThostFtdcLinkManField_UOAZipCode_set, doc=r"""开户邮政编码""")
    PersonFullName: "ctp_sopt::TThostFtdcInvestorFullNameType" = property(_soptthosttraderapi.CThostFtdcLinkManField_PersonFullName_get, _soptthosttraderapi.CThostFtdcLinkManField_PersonFullName_set, doc=r"""全称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLinkManField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLinkManField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLinkManField

# Register CThostFtdcLinkManField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLinkManField_swigregister(CThostFtdcLinkManField)
class CThostFtdcQryBrokerUserEventField(object):
    r"""查询经纪公司用户事件"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserEventField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserEventField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserEventField_UserID_get, _soptthosttraderapi.CThostFtdcQryBrokerUserEventField_UserID_set, doc=r"""用户代码""")
    UserEventType: "ctp_sopt::TThostFtdcUserEventTypeType" = property(_soptthosttraderapi.CThostFtdcQryBrokerUserEventField_UserEventType_get, _soptthosttraderapi.CThostFtdcQryBrokerUserEventField_UserEventType_set, doc=r"""用户事件类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerUserEventField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerUserEventField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerUserEventField

# Register CThostFtdcQryBrokerUserEventField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerUserEventField_swigregister(CThostFtdcQryBrokerUserEventField)
class CThostFtdcBrokerUserEventField(object):
    r"""查询经纪公司用户事件"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_UserID_set, doc=r"""用户代码""")
    UserEventType: "ctp_sopt::TThostFtdcUserEventTypeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_UserEventType_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_UserEventType_set, doc=r"""用户事件类型""")
    EventSequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_EventSequenceNo_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_EventSequenceNo_set, doc=r"""用户事件序号""")
    EventDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_EventDate_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_EventDate_set, doc=r"""事件发生日期""")
    EventTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_EventTime_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_EventTime_set, doc=r"""事件发生时间""")
    UserEventInfo: "ctp_sopt::TThostFtdcUserEventInfoType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_UserEventInfo_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_UserEventInfo_set, doc=r"""用户事件信息""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_InvestorID_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_InstrumentID_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserEventField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerUserEventField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserEventField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserEventField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserEventField

# Register CThostFtdcBrokerUserEventField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserEventField_swigregister(CThostFtdcBrokerUserEventField)
class CThostFtdcQryContractBankField(object):
    r"""查询签约银行请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryContractBankField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryContractBankField_BrokerID_set, doc=r"""经纪公司代码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcQryContractBankField_BankID_get, _soptthosttraderapi.CThostFtdcQryContractBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcQryContractBankField_BankBrchID_get, _soptthosttraderapi.CThostFtdcQryContractBankField_BankBrchID_set, doc=r"""银行分中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryContractBankField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryContractBankField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryContractBankField

# Register CThostFtdcQryContractBankField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryContractBankField_swigregister(CThostFtdcQryContractBankField)
class CThostFtdcContractBankField(object):
    r"""查询签约银行响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcContractBankField_BrokerID_get, _soptthosttraderapi.CThostFtdcContractBankField_BrokerID_set, doc=r"""经纪公司代码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcContractBankField_BankID_get, _soptthosttraderapi.CThostFtdcContractBankField_BankID_set, doc=r"""银行代码""")
    BankBrchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcContractBankField_BankBrchID_get, _soptthosttraderapi.CThostFtdcContractBankField_BankBrchID_set, doc=r"""银行分中心代码""")
    BankName: "ctp_sopt::TThostFtdcBankNameType" = property(_soptthosttraderapi.CThostFtdcContractBankField_BankName_get, _soptthosttraderapi.CThostFtdcContractBankField_BankName_set, doc=r"""银行名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcContractBankField_swiginit(self, _soptthosttraderapi.new_CThostFtdcContractBankField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcContractBankField

# Register CThostFtdcContractBankField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcContractBankField_swigregister(CThostFtdcContractBankField)
class CThostFtdcInvestorPositionCombineDetailField(object):
    r"""投资者组合持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradingDay_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradingDay_set, doc=r"""交易日""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_OpenDate_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_OpenDate_set, doc=r"""开仓日期""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set, doc=r"""交易所代码""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_SettlementID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_SettlementID_set, doc=r"""结算编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InvestorID_set, doc=r"""投资者代码""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set, doc=r"""组合编号""")
    TradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradeID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradeID_set, doc=r"""撮合编号""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set, doc=r"""合约代码""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set, doc=r"""投机套保标志""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_Direction_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_Direction_set, doc=r"""买卖""")
    TotalAmt: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set, doc=r"""持仓量""")
    Margin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_Margin_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_Margin_set, doc=r"""投资者保证金""")
    ExchMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set, doc=r"""交易所保证金""")
    MarginRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set, doc=r"""保证金率""")
    MarginRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set, doc=r"""保证金率(按手数)""")
    LegID: "ctp_sopt::TThostFtdcLegIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_LegID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_LegID_set, doc=r"""单腿编号""")
    LegMultiple: "ctp_sopt::TThostFtdcLegMultipleType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set, doc=r"""单腿乘数""")
    CombInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set, doc=r"""组合持仓合约编码""")
    TradeGroupID: "ctp_sopt::TThostFtdcTradeGroupIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set, doc=r"""成交组号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_InvestUnitID_set, doc=r"""投资单元代码""")
    CombCloseFrozen: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_CombCloseFrozen_get, _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_CombCloseFrozen_set, doc=r"""组合平仓冻结""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorPositionCombineDetailField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorPositionCombineDetailField

# Register CThostFtdcInvestorPositionCombineDetailField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorPositionCombineDetailField_swigregister(CThostFtdcInvestorPositionCombineDetailField)
class CThostFtdcParkedOrderField(object):
    r"""预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_OrderRef_get, _soptthosttraderapi.CThostFtdcParkedOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_UserID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcParkedOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_Direction_get, _soptthosttraderapi.CThostFtdcParkedOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcParkedOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcParkedOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcParkedOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcParkedOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcParkedOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcParkedOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcParkedOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcParkedOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcParkedOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcParkedOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcParkedOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_UserForceClose_get, _soptthosttraderapi.CThostFtdcParkedOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParkedOrderID: "ctp_sopt::TThostFtdcParkedOrderIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ParkedOrderID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ParkedOrderID_set, doc=r"""预埋报单编号""")
    UserType: "ctp_sopt::TThostFtdcUserTypeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_UserType_get, _soptthosttraderapi.CThostFtdcParkedOrderField_UserType_set, doc=r"""用户类型""")
    Status: "ctp_sopt::TThostFtdcParkedOrderStatusType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_Status_get, _soptthosttraderapi.CThostFtdcParkedOrderField_Status_set, doc=r"""预埋单状态""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ErrorID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_IsSwapOrder_get, _soptthosttraderapi.CThostFtdcParkedOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ClientID_set, doc=r"""交易编码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcParkedOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcParkedOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcParkedOrderField_OwnerType_set, doc=r"""所有者类型""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcParkedOrderField_ComTradeID_set, doc=r"""组合编号""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcParkedOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcParkedOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcParkedOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcParkedOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcParkedOrderField

# Register CThostFtdcParkedOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcParkedOrderField_swigregister(CThostFtdcParkedOrderField)
class CThostFtdcParkedOrderActionField(object):
    r"""输入预埋单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderRef_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderSysID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_LimitPrice_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_VolumeChange_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_UserID_set, doc=r"""用户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    ParkedOrderActionID: "ctp_sopt::TThostFtdcParkedOrderActionIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_ParkedOrderActionID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_ParkedOrderActionID_set, doc=r"""预埋撤单单编号""")
    UserType: "ctp_sopt::TThostFtdcUserTypeType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_UserType_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_UserType_set, doc=r"""用户类型""")
    Status: "ctp_sopt::TThostFtdcParkedOrderStatusType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_Status_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_Status_set, doc=r"""预埋撤单状态""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_ErrorID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcParkedOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcParkedOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcParkedOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcParkedOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcParkedOrderActionField

# Register CThostFtdcParkedOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcParkedOrderActionField_swigregister(CThostFtdcParkedOrderActionField)
class CThostFtdcQryParkedOrderField(object):
    r"""查询预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryParkedOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryParkedOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryParkedOrderField

# Register CThostFtdcQryParkedOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryParkedOrderField_swigregister(CThostFtdcQryParkedOrderField)
class CThostFtdcQryParkedOrderActionField(object):
    r"""查询预埋撤单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryParkedOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryParkedOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryParkedOrderActionField

# Register CThostFtdcQryParkedOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryParkedOrderActionField_swigregister(CThostFtdcQryParkedOrderActionField)
class CThostFtdcRemoveParkedOrderField(object):
    r"""删除预埋单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderField_InvestorID_set, doc=r"""投资者代码""")
    ParkedOrderID: "ctp_sopt::TThostFtdcParkedOrderIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderField_ParkedOrderID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderField_ParkedOrderID_set, doc=r"""预埋报单编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRemoveParkedOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRemoveParkedOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRemoveParkedOrderField

# Register CThostFtdcRemoveParkedOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRemoveParkedOrderField_swigregister(CThostFtdcRemoveParkedOrderField)
class CThostFtdcRemoveParkedOrderActionField(object):
    r"""删除预埋撤单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ParkedOrderActionID: "ctp_sopt::TThostFtdcParkedOrderActionIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set, doc=r"""预埋撤单编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRemoveParkedOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRemoveParkedOrderActionField

# Register CThostFtdcRemoveParkedOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRemoveParkedOrderActionField_swigregister(CThostFtdcRemoveParkedOrderActionField)
class CThostFtdcInvestorWithdrawAlgorithmField(object):
    r"""经纪公司可提资金算法表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set, doc=r"""投资者代码""")
    UsingRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set, doc=r"""可提资金比例""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set, doc=r"""币种代码""")
    FundMortgageRatio: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get, _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set, doc=r"""货币质押比率""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorWithdrawAlgorithmField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorWithdrawAlgorithmField

# Register CThostFtdcInvestorWithdrawAlgorithmField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorWithdrawAlgorithmField_swigregister(CThostFtdcInvestorWithdrawAlgorithmField)
class CThostFtdcQryInvestorPositionCombineDetailField(object):
    r"""查询组合持仓明细"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set, doc=r"""投资者代码""")
    CombInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set, doc=r"""组合持仓合约编码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorPositionCombineDetailField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorPositionCombineDetailField

# Register CThostFtdcQryInvestorPositionCombineDetailField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorPositionCombineDetailField_swigregister(CThostFtdcQryInvestorPositionCombineDetailField)
class CThostFtdcMarketDataAveragePriceField(object):
    r"""成交均价"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    AveragePrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcMarketDataAveragePriceField_AveragePrice_get, _soptthosttraderapi.CThostFtdcMarketDataAveragePriceField_AveragePrice_set, doc=r"""当日均价""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarketDataAveragePriceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarketDataAveragePriceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarketDataAveragePriceField

# Register CThostFtdcMarketDataAveragePriceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarketDataAveragePriceField_swigregister(CThostFtdcMarketDataAveragePriceField)
class CThostFtdcVerifyInvestorPasswordField(object):
    r"""校验投资者密码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_BrokerID_get, _soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_InvestorID_get, _soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_InvestorID_set, doc=r"""投资者代码""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_Password_get, _soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_Password_set, doc=r"""密码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_swiginit(self, _soptthosttraderapi.new_CThostFtdcVerifyInvestorPasswordField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcVerifyInvestorPasswordField

# Register CThostFtdcVerifyInvestorPasswordField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcVerifyInvestorPasswordField_swigregister(CThostFtdcVerifyInvestorPasswordField)
class CThostFtdcUserIPField(object):
    r"""用户IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserIPField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserIPField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserIPField_UserID_get, _soptthosttraderapi.CThostFtdcUserIPField_UserID_set, doc=r"""用户代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserIPField_reserve1_get, _soptthosttraderapi.CThostFtdcUserIPField_reserve1_set, doc=r"""保留的无效字段""")
    reserve2: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserIPField_reserve2_get, _soptthosttraderapi.CThostFtdcUserIPField_reserve2_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcUserIPField_MacAddress_get, _soptthosttraderapi.CThostFtdcUserIPField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserIPField_IPAddress_get, _soptthosttraderapi.CThostFtdcUserIPField_IPAddress_set, doc=r"""IP地址""")
    IPMask: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserIPField_IPMask_get, _soptthosttraderapi.CThostFtdcUserIPField_IPMask_set, doc=r"""IP地址掩码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserIPField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserIPField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserIPField

# Register CThostFtdcUserIPField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserIPField_swigregister(CThostFtdcUserIPField)
class CThostFtdcTradingNoticeInfoField(object):
    r"""用户事件通知信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_InvestorID_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_InvestorID_set, doc=r"""投资者代码""")
    SendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SendTime_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SendTime_set, doc=r"""发送时间""")
    FieldContent: "ctp_sopt::TThostFtdcContentType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_FieldContent_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_FieldContent_set, doc=r"""消息正文""")
    SequenceSeries: "ctp_sopt::TThostFtdcSequenceSeriesType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SequenceSeries_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SequenceSeries_set, doc=r"""序列系列号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SequenceNo_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_SequenceNo_set, doc=r"""序列号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingNoticeInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingNoticeInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingNoticeInfoField

# Register CThostFtdcTradingNoticeInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingNoticeInfoField_swigregister(CThostFtdcTradingNoticeInfoField)
class CThostFtdcTradingNoticeField(object):
    r"""用户事件通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_InvestorRange_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_InvestorRange_set, doc=r"""投资者范围""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_InvestorID_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_InvestorID_set, doc=r"""投资者代码""")
    SequenceSeries: "ctp_sopt::TThostFtdcSequenceSeriesType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_SequenceSeries_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_SequenceSeries_set, doc=r"""序列系列号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_UserID_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_UserID_set, doc=r"""用户代码""")
    SendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_SendTime_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_SendTime_set, doc=r"""发送时间""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_SequenceNo_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_SequenceNo_set, doc=r"""序列号""")
    FieldContent: "ctp_sopt::TThostFtdcContentType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_FieldContent_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_FieldContent_set, doc=r"""消息正文""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcTradingNoticeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcTradingNoticeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingNoticeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingNoticeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingNoticeField

# Register CThostFtdcTradingNoticeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingNoticeField_swigregister(CThostFtdcTradingNoticeField)
class CThostFtdcQryTradingNoticeField(object):
    r"""查询交易事件通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingNoticeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryTradingNoticeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingNoticeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryTradingNoticeField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryTradingNoticeField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryTradingNoticeField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTradingNoticeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTradingNoticeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTradingNoticeField

# Register CThostFtdcQryTradingNoticeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTradingNoticeField_swigregister(CThostFtdcQryTradingNoticeField)
class CThostFtdcQryErrOrderField(object):
    r"""查询错误报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryErrOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryErrOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryErrOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryErrOrderField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryErrOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryErrOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryErrOrderField

# Register CThostFtdcQryErrOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryErrOrderField_swigregister(CThostFtdcQryErrOrderField)
class CThostFtdcErrOrderField(object):
    r"""错误报单"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrOrderField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_OrderRef_get, _soptthosttraderapi.CThostFtdcErrOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_UserID_get, _soptthosttraderapi.CThostFtdcErrOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcErrOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_Direction_get, _soptthosttraderapi.CThostFtdcErrOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcErrOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcErrOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcErrOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcErrOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcErrOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcErrOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcErrOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcErrOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcErrOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcErrOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcErrOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcErrOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcErrOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcErrOrderField_RequestID_set, doc=r"""请求编号""")
    UserForceClose: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_UserForceClose_get, _soptthosttraderapi.CThostFtdcErrOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_IsSwapOrder_get, _soptthosttraderapi.CThostFtdcErrOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcErrOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcErrOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcErrOrderField_CurrencyID_set, doc=r"""币种代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcErrOrderField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcErrOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcErrOrderField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcErrOrderField_ComTradeID_set, doc=r"""组合编号""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcErrOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrOrderField

# Register CThostFtdcErrOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrOrderField_swigregister(CThostFtdcErrOrderField)
class CThostFtdcErrorConditionalOrderField(object):
    r"""查询错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InstrumentID_set, doc=r"""合约代码""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderRef_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderRef_set, doc=r"""报单引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserID_set, doc=r"""用户代码""")
    OrderPriceType: "ctp_sopt::TThostFtdcOrderPriceTypeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderPriceType_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderPriceType_set, doc=r"""报单价格条件""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_Direction_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_Direction_set, doc=r"""买卖方向""")
    CombOffsetFlag: "ctp_sopt::TThostFtdcCombOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set, doc=r"""组合开平标志""")
    CombHedgeFlag: "ctp_sopt::TThostFtdcCombHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set, doc=r"""组合投机套保标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_LimitPrice_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_LimitPrice_set, doc=r"""价格""")
    VolumeTotalOriginal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set, doc=r"""数量""")
    TimeCondition: "ctp_sopt::TThostFtdcTimeConditionType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TimeCondition_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TimeCondition_set, doc=r"""有效期类型""")
    GTDDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_GTDDate_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_GTDDate_set, doc=r"""GTD日期""")
    VolumeCondition: "ctp_sopt::TThostFtdcVolumeConditionType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeCondition_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeCondition_set, doc=r"""成交量类型""")
    MinVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_MinVolume_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_MinVolume_set, doc=r"""最小成交量""")
    ContingentCondition: "ctp_sopt::TThostFtdcContingentConditionType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ContingentCondition_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ContingentCondition_set, doc=r"""触发条件""")
    StopPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_StopPrice_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_StopPrice_set, doc=r"""止损价""")
    ForceCloseReason: "ctp_sopt::TThostFtdcForceCloseReasonType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ForceCloseReason_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ForceCloseReason_set, doc=r"""强平原因""")
    IsAutoSuspend: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set, doc=r"""自动挂起标志""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BusinessUnit_set, doc=r"""业务单元""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_RequestID_set, doc=r"""请求编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderLocalID_set, doc=r"""本地报单编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ClientID_set, doc=r"""客户代码""")
    ExchangeInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ExchangeInstID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ExchangeInstID_set, doc=r"""合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set, doc=r"""报单提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SettlementID_set, doc=r"""结算编号""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSysID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSysID_set, doc=r"""报单编号""")
    OrderSource: "ctp_sopt::TThostFtdcOrderSourceType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSource_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderSource_set, doc=r"""报单来源""")
    OrderStatus: "ctp_sopt::TThostFtdcOrderStatusType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderStatus_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderStatus_set, doc=r"""报单状态""")
    OrderType: "ctp_sopt::TThostFtdcOrderTypeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderType_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OrderType_set, doc=r"""报单类型""")
    VolumeTraded: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTraded_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTraded_set, doc=r"""今成交数量""")
    VolumeTotal: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTotal_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_VolumeTotal_set, doc=r"""剩余数量""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InsertTime_set, doc=r"""委托时间""")
    ActiveTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveTime_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveTime_set, doc=r"""激活时间""")
    SuspendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SuspendTime_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SuspendTime_set, doc=r"""挂起时间""")
    UpdateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UpdateTime_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UpdateTime_set, doc=r"""最后修改时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CancelTime_set, doc=r"""撤销时间""")
    ActiveTraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveTraderID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveTraderID_set, doc=r"""最后修改交易所交易员代码""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_FrontID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SessionID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_StatusMsg_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_StatusMsg_set, doc=r"""状态信息""")
    UserForceClose: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserForceClose_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_UserForceClose_set, doc=r"""用户强评标志""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerOrderSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set, doc=r"""经纪公司报单编号""")
    RelativeOrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set, doc=r"""相关报单""")
    ZCETotalTradedVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set, doc=r"""郑商所成交数量""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ErrorMsg_set, doc=r"""错误信息""")
    IsSwapOrder: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IsSwapOrder_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IsSwapOrder_set, doc=r"""互换单标志""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_MacAddress_set, doc=r"""Mac地址""")
    ComTradeID: "ctp_sopt::TThostFtdcTradeIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ComTradeID_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_ComTradeID_set, doc=r"""组合编号""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrorConditionalOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrorConditionalOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrorConditionalOrderField

# Register CThostFtdcErrorConditionalOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrorConditionalOrderField_swigregister(CThostFtdcErrorConditionalOrderField)
class CThostFtdcQryErrOrderActionField(object):
    r"""查询错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryErrOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryErrOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryErrOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryErrOrderActionField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryErrOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryErrOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryErrOrderActionField

# Register CThostFtdcQryErrOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryErrOrderActionField_swigregister(CThostFtdcQryErrOrderActionField)
class CThostFtdcErrOrderActionField(object):
    r"""错误报单操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    OrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OrderActionRef_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OrderActionRef_set, doc=r"""报单操作引用""")
    OrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OrderRef_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OrderRef_set, doc=r"""报单引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    OrderSysID: "ctp_sopt::TThostFtdcOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OrderSysID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OrderSysID_set, doc=r"""报单编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    LimitPrice: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_LimitPrice_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_LimitPrice_set, doc=r"""价格""")
    VolumeChange: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_VolumeChange_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_VolumeChange_set, doc=r"""数量变化""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_InstallID_set, doc=r"""安装编号""")
    OrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OrderLocalID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OrderLocalID_set, doc=r"""本地报单编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_UserID_set, doc=r"""用户代码""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_InstrumentID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_InstrumentID_set, doc=r"""合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ErrorID_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_ErrorMsg_set, doc=r"""错误信息""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcErrOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcErrOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcErrOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcErrOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcErrOrderActionField

# Register CThostFtdcErrOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcErrOrderActionField_swigregister(CThostFtdcErrOrderActionField)
class CThostFtdcQryExchangeSequenceField(object):
    r"""查询交易所状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExchangeSequenceField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExchangeSequenceField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExchangeSequenceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExchangeSequenceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExchangeSequenceField

# Register CThostFtdcQryExchangeSequenceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExchangeSequenceField_swigregister(CThostFtdcQryExchangeSequenceField)
class CThostFtdcExchangeSequenceField(object):
    r"""交易所状态"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeSequenceField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeSequenceField_ExchangeID_set, doc=r"""交易所代码""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExchangeSequenceField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExchangeSequenceField_SequenceNo_set, doc=r"""序号""")
    MarketStatus: "ctp_sopt::TThostFtdcInstrumentStatusType" = property(_soptthosttraderapi.CThostFtdcExchangeSequenceField_MarketStatus_get, _soptthosttraderapi.CThostFtdcExchangeSequenceField_MarketStatus_set, doc=r"""合约交易状态""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeSequenceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeSequenceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeSequenceField

# Register CThostFtdcExchangeSequenceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeSequenceField_swigregister(CThostFtdcExchangeSequenceField)
class CThostFtdcQueryMaxOrderVolumeWithPriceField(object):
    r"""根据价格查询最大报单数量"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set, doc=r"""合约代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_set, doc=r"""买卖方向""")
    OffsetFlag: "ctp_sopt::TThostFtdcOffsetFlagType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set, doc=r"""开平标志""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set, doc=r"""投机套保标志""")
    MaxVolume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set, doc=r"""最大允许报单数量""")
    Price: "ctp_sopt::TThostFtdcPriceType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_set, doc=r"""报单价格""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQueryMaxOrderVolumeWithPriceField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQueryMaxOrderVolumeWithPriceField

# Register CThostFtdcQueryMaxOrderVolumeWithPriceField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQueryMaxOrderVolumeWithPriceField_swigregister(CThostFtdcQueryMaxOrderVolumeWithPriceField)
class CThostFtdcQryBrokerTradingParamsField(object):
    r"""查询经纪公司交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_InvestorID_set, doc=r"""投资者代码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_CurrencyID_set, doc=r"""币种代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_AccountID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerTradingParamsField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerTradingParamsField

# Register CThostFtdcQryBrokerTradingParamsField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerTradingParamsField_swigregister(CThostFtdcQryBrokerTradingParamsField)
class CThostFtdcBrokerTradingParamsField(object):
    r"""经纪公司交易参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_InvestorID_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_InvestorID_set, doc=r"""投资者代码""")
    MarginPriceType: "ctp_sopt::TThostFtdcMarginPriceTypeType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_MarginPriceType_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_MarginPriceType_set, doc=r"""保证金价格类型""")
    Algorithm: "ctp_sopt::TThostFtdcAlgorithmType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_Algorithm_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_Algorithm_set, doc=r"""盈亏算法""")
    AvailIncludeCloseProfit: "ctp_sopt::TThostFtdcIncludeCloseProfitType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set, doc=r"""可用是否包含平仓盈利""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_CurrencyID_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_CurrencyID_set, doc=r"""币种代码""")
    OptionRoyaltyPriceType: "ctp_sopt::TThostFtdcOptionRoyaltyPriceTypeType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set, doc=r"""期权权利金价格类型""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_AccountID_get, _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_AccountID_set, doc=r"""投资者帐号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerTradingParamsField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerTradingParamsField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerTradingParamsField

# Register CThostFtdcBrokerTradingParamsField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerTradingParamsField_swigregister(CThostFtdcBrokerTradingParamsField)
class CThostFtdcQryBrokerTradingAlgosField(object):
    r"""查询经纪公司交易算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerTradingAlgosField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerTradingAlgosField

# Register CThostFtdcQryBrokerTradingAlgosField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerTradingAlgosField_swigregister(CThostFtdcQryBrokerTradingAlgosField)
class CThostFtdcBrokerTradingAlgosField(object):
    r"""经纪公司交易算法"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_InstrumentID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_InstrumentID_set, doc=r"""合约代码""")
    HandlePositionAlgoID: "ctp_sopt::TThostFtdcHandlePositionAlgoIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set, doc=r"""持仓处理算法编号""")
    FindMarginRateAlgoID: "ctp_sopt::TThostFtdcFindMarginRateAlgoIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set, doc=r"""寻找保证金率算法编号""")
    HandleTradingAccountAlgoID: "ctp_sopt::TThostFtdcHandleTradingAccountAlgoIDType" = property(_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get, _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set, doc=r"""资金处理算法编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerTradingAlgosField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerTradingAlgosField

# Register CThostFtdcBrokerTradingAlgosField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerTradingAlgosField_swigregister(CThostFtdcBrokerTradingAlgosField)
class CThostFtdcQueryBrokerDepositField(object):
    r"""查询经纪公司资金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQueryBrokerDepositField_BrokerID_get, _soptthosttraderapi.CThostFtdcQueryBrokerDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQueryBrokerDepositField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQueryBrokerDepositField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQueryBrokerDepositField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQueryBrokerDepositField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQueryBrokerDepositField

# Register CThostFtdcQueryBrokerDepositField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQueryBrokerDepositField_swigregister(CThostFtdcQueryBrokerDepositField)
class CThostFtdcBrokerDepositField(object):
    r"""经纪公司资金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_TradingDay_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_TradingDay_set, doc=r"""交易日期""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_ParticipantID_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_ParticipantID_set, doc=r"""会员代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_ExchangeID_set, doc=r"""交易所代码""")
    PreBalance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_PreBalance_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_PreBalance_set, doc=r"""上次结算准备金""")
    CurrMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_CurrMargin_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_CurrMargin_set, doc=r"""当前保证金总额""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_CloseProfit_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_CloseProfit_set, doc=r"""平仓盈亏""")
    Balance: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_Balance_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_Balance_set, doc=r"""期货结算准备金""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_Deposit_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_Withdraw_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_Withdraw_set, doc=r"""出金金额""")
    Available: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_Available_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_Available_set, doc=r"""可提资金""")
    Reserve: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_Reserve_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_Reserve_set, doc=r"""基本准备金""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcBrokerDepositField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcBrokerDepositField_FrozenMargin_set, doc=r"""冻结的保证金""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerDepositField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerDepositField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerDepositField

# Register CThostFtdcBrokerDepositField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerDepositField_swigregister(CThostFtdcBrokerDepositField)
class CThostFtdcQryCFMMCBrokerKeyField(object):
    r"""查询保证金监管系统经纪公司密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCFMMCBrokerKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCFMMCBrokerKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCFMMCBrokerKeyField

# Register CThostFtdcQryCFMMCBrokerKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCFMMCBrokerKeyField_swigregister(CThostFtdcQryCFMMCBrokerKeyField)
class CThostFtdcCFMMCBrokerKeyField(object):
    r"""保证金监管系统经纪公司密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_ParticipantID_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    CreateDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CreateDate_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CreateDate_set, doc=r"""密钥生成日期""")
    CreateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CreateTime_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CreateTime_set, doc=r"""密钥生成时间""")
    KeyID: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_KeyID_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_KeyID_set, doc=r"""密钥编号""")
    CurrentKey: "ctp_sopt::TThostFtdcCFMMCKeyType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CurrentKey_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_CurrentKey_set, doc=r"""动态密钥""")
    KeyKind: "ctp_sopt::TThostFtdcCFMMCKeyKindType" = property(_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_KeyKind_get, _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_KeyKind_set, doc=r"""动态密钥类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCFMMCBrokerKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCFMMCBrokerKeyField

# Register CThostFtdcCFMMCBrokerKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCFMMCBrokerKeyField_swigregister(CThostFtdcCFMMCBrokerKeyField)
class CThostFtdcCFMMCTradingAccountKeyField(object):
    r"""保证金监管系统经纪公司资金账户密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_AccountID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_AccountID_set, doc=r"""投资者帐号""")
    KeyID: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_KeyID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_KeyID_set, doc=r"""密钥编号""")
    CurrentKey: "ctp_sopt::TThostFtdcCFMMCKeyType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set, doc=r"""动态密钥""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCFMMCTradingAccountKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCFMMCTradingAccountKeyField

# Register CThostFtdcCFMMCTradingAccountKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCFMMCTradingAccountKeyField_swigregister(CThostFtdcCFMMCTradingAccountKeyField)
class CThostFtdcQryCFMMCTradingAccountKeyField(object):
    r"""请求查询保证金监管系统经纪公司资金账户密钥"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set, doc=r"""投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCFMMCTradingAccountKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCFMMCTradingAccountKeyField

# Register CThostFtdcQryCFMMCTradingAccountKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCFMMCTradingAccountKeyField_swigregister(CThostFtdcQryCFMMCTradingAccountKeyField)
class CThostFtdcBrokerUserOTPParamField(object):
    r"""用户动态令牌参数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_UserID_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_UserID_set, doc=r"""用户代码""")
    OTPVendorsID: "ctp_sopt::TThostFtdcOTPVendorsIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set, doc=r"""动态令牌提供商""")
    SerialNumber: "ctp_sopt::TThostFtdcSerialNumberType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_SerialNumber_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_SerialNumber_set, doc=r"""动态令牌序列号""")
    AuthKey: "ctp_sopt::TThostFtdcAuthKeyType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_AuthKey_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_AuthKey_set, doc=r"""令牌密钥""")
    LastDrift: "ctp_sopt::TThostFtdcLastDriftType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_LastDrift_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_LastDrift_set, doc=r"""漂移值""")
    LastSuccess: "ctp_sopt::TThostFtdcLastSuccessType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_LastSuccess_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_LastSuccess_set, doc=r"""成功值""")
    OTPType: "ctp_sopt::TThostFtdcOTPTypeType" = property(_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_OTPType_get, _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_OTPType_set, doc=r"""动态令牌类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserOTPParamField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserOTPParamField

# Register CThostFtdcBrokerUserOTPParamField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserOTPParamField_swigregister(CThostFtdcBrokerUserOTPParamField)
class CThostFtdcManualSyncBrokerUserOTPField(object):
    r"""手工同步用户动态令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get, _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_UserID_get, _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_UserID_set, doc=r"""用户代码""")
    OTPType: "ctp_sopt::TThostFtdcOTPTypeType" = property(_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_OTPType_get, _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_OTPType_set, doc=r"""动态令牌类型""")
    FirstOTP: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get, _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set, doc=r"""第一个动态密码""")
    SecondOTP: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get, _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set, doc=r"""第二个动态密码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_swiginit(self, _soptthosttraderapi.new_CThostFtdcManualSyncBrokerUserOTPField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcManualSyncBrokerUserOTPField

# Register CThostFtdcManualSyncBrokerUserOTPField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcManualSyncBrokerUserOTPField_swigregister(CThostFtdcManualSyncBrokerUserOTPField)
class CThostFtdcCommRateModelField(object):
    r"""投资者手续费率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCommRateModelField_BrokerID_get, _soptthosttraderapi.CThostFtdcCommRateModelField_BrokerID_set, doc=r"""经纪公司代码""")
    CommModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcCommRateModelField_CommModelID_get, _soptthosttraderapi.CThostFtdcCommRateModelField_CommModelID_set, doc=r"""手续费率模板代码""")
    CommModelName: "ctp_sopt::TThostFtdcCommModelNameType" = property(_soptthosttraderapi.CThostFtdcCommRateModelField_CommModelName_get, _soptthosttraderapi.CThostFtdcCommRateModelField_CommModelName_set, doc=r"""模板名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCommRateModelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCommRateModelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCommRateModelField

# Register CThostFtdcCommRateModelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCommRateModelField_swigregister(CThostFtdcCommRateModelField)
class CThostFtdcQryCommRateModelField(object):
    r"""请求查询投资者手续费率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryCommRateModelField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryCommRateModelField_BrokerID_set, doc=r"""经纪公司代码""")
    CommModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryCommRateModelField_CommModelID_get, _soptthosttraderapi.CThostFtdcQryCommRateModelField_CommModelID_set, doc=r"""手续费率模板代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCommRateModelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCommRateModelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCommRateModelField

# Register CThostFtdcQryCommRateModelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCommRateModelField_swigregister(CThostFtdcQryCommRateModelField)
class CThostFtdcMarginModelField(object):
    r"""投资者保证金率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcMarginModelField_BrokerID_get, _soptthosttraderapi.CThostFtdcMarginModelField_BrokerID_set, doc=r"""经纪公司代码""")
    MarginModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcMarginModelField_MarginModelID_get, _soptthosttraderapi.CThostFtdcMarginModelField_MarginModelID_set, doc=r"""保证金率模板代码""")
    MarginModelName: "ctp_sopt::TThostFtdcCommModelNameType" = property(_soptthosttraderapi.CThostFtdcMarginModelField_MarginModelName_get, _soptthosttraderapi.CThostFtdcMarginModelField_MarginModelName_set, doc=r"""模板名称""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMarginModelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMarginModelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMarginModelField

# Register CThostFtdcMarginModelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMarginModelField_swigregister(CThostFtdcMarginModelField)
class CThostFtdcQryMarginModelField(object):
    r"""请求查询投资者保证金率模板"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryMarginModelField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryMarginModelField_BrokerID_set, doc=r"""经纪公司代码""")
    MarginModelID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryMarginModelField_MarginModelID_get, _soptthosttraderapi.CThostFtdcQryMarginModelField_MarginModelID_set, doc=r"""保证金率模板代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryMarginModelField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryMarginModelField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryMarginModelField

# Register CThostFtdcQryMarginModelField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryMarginModelField_swigregister(CThostFtdcQryMarginModelField)
class CThostFtdcEWarrantOffsetField(object):
    r"""仓单折抵信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_TradingDay_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_TradingDay_set, doc=r"""交易日期""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_BrokerID_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_InvestorID_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_ExchangeID_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_InstrumentID_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_InstrumentID_set, doc=r"""合约代码""")
    Direction: "ctp_sopt::TThostFtdcDirectionType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_Direction_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_Direction_set, doc=r"""买卖方向""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_HedgeFlag_set, doc=r"""投机套保标志""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_Volume_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_Volume_set, doc=r"""数量""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcEWarrantOffsetField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcEWarrantOffsetField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcEWarrantOffsetField_swiginit(self, _soptthosttraderapi.new_CThostFtdcEWarrantOffsetField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcEWarrantOffsetField

# Register CThostFtdcEWarrantOffsetField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcEWarrantOffsetField_swigregister(CThostFtdcEWarrantOffsetField)
class CThostFtdcQryEWarrantOffsetField(object):
    r"""查询仓单折抵信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InstrumentID_set, doc=r"""合约代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryEWarrantOffsetField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryEWarrantOffsetField

# Register CThostFtdcQryEWarrantOffsetField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryEWarrantOffsetField_swigregister(CThostFtdcQryEWarrantOffsetField)
class CThostFtdcQryInvestorProductGroupMarginField(object):
    r"""查询投资者品种/跨品种保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set, doc=r"""投资者代码""")
    ProductGroupID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set, doc=r"""品种/跨品种标示""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorProductGroupMarginField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorProductGroupMarginField

# Register CThostFtdcQryInvestorProductGroupMarginField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorProductGroupMarginField_swigregister(CThostFtdcQryInvestorProductGroupMarginField)
class CThostFtdcInvestorProductGroupMarginField(object):
    r"""投资者品种/跨品种保证金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductGroupID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set, doc=r"""品种/跨品种标示""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_InvestorID_set, doc=r"""投资者代码""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_TradingDay_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_SettlementID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_SettlementID_set, doc=r"""结算编号""")
    FrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set, doc=r"""冻结的保证金""")
    LongFrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set, doc=r"""多头冻结的保证金""")
    ShortFrozenMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set, doc=r"""空头冻结的保证金""")
    UseMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_UseMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_UseMargin_set, doc=r"""占用的保证金""")
    LongUseMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set, doc=r"""多头保证金""")
    ShortUseMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set, doc=r"""空头保证金""")
    ExchMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchMargin_set, doc=r"""交易所保证金""")
    LongExchMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set, doc=r"""交易所多头保证金""")
    ShortExchMargin: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set, doc=r"""交易所空头保证金""")
    CloseProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_CloseProfit_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_CloseProfit_set, doc=r"""平仓盈亏""")
    FrozenCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set, doc=r"""冻结的手续费""")
    Commission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_Commission_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_Commission_set, doc=r"""手续费""")
    FrozenCash: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenCash_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_FrozenCash_set, doc=r"""冻结的资金""")
    CashIn: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_CashIn_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_CashIn_set, doc=r"""资金差额""")
    PositionProfit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_PositionProfit_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_PositionProfit_set, doc=r"""持仓盈亏""")
    OffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set, doc=r"""折抵总金额""")
    LongOffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set, doc=r"""多头折抵总金额""")
    ShortOffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set, doc=r"""空头折抵总金额""")
    ExchOffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set, doc=r"""交易所折抵总金额""")
    LongExchOffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set, doc=r"""交易所多头折抵总金额""")
    ShortExchOffsetAmount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set, doc=r"""交易所空头折抵总金额""")
    HedgeFlag: "ctp_sopt::TThostFtdcHedgeFlagType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set, doc=r"""投机套保标志""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorProductGroupMarginField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorProductGroupMarginField

# Register CThostFtdcInvestorProductGroupMarginField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorProductGroupMarginField_swigregister(CThostFtdcInvestorProductGroupMarginField)
class CThostFtdcQueryCFMMCTradingAccountTokenField(object):
    r"""查询监控中心用户令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get, _soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get, _soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set, doc=r"""投资者代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_InvestUnitID_set, doc=r"""投资单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQueryCFMMCTradingAccountTokenField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQueryCFMMCTradingAccountTokenField

# Register CThostFtdcQueryCFMMCTradingAccountTokenField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQueryCFMMCTradingAccountTokenField_swigregister(CThostFtdcQueryCFMMCTradingAccountTokenField)
class CThostFtdcCFMMCTradingAccountTokenField(object):
    r"""监控中心用户令牌"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set, doc=r"""经纪公司代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set, doc=r"""经纪公司统一编码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_AccountID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_AccountID_set, doc=r"""投资者帐号""")
    KeyID: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_KeyID_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_KeyID_set, doc=r"""密钥编号""")
    Token: "ctp_sopt::TThostFtdcCFMMCTokenType" = property(_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_Token_get, _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_Token_set, doc=r"""动态令牌""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCFMMCTradingAccountTokenField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCFMMCTradingAccountTokenField

# Register CThostFtdcCFMMCTradingAccountTokenField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCFMMCTradingAccountTokenField_swigregister(CThostFtdcCFMMCTradingAccountTokenField)
class CThostFtdcInstructionRightField(object):
    r"""投资者指令权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInstructionRightField_BrokerID_get, _soptthosttraderapi.CThostFtdcInstructionRightField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInstructionRightField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInstructionRightField_ExchangeID_set, doc=r"""交易所代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInstructionRightField_InvestorID_get, _soptthosttraderapi.CThostFtdcInstructionRightField_InvestorID_set, doc=r"""投资者代码""")
    InstructionRight: "ctp_sopt::TThostFtdcInstructionRightTypeType" = property(_soptthosttraderapi.CThostFtdcInstructionRightField_InstructionRight_get, _soptthosttraderapi.CThostFtdcInstructionRightField_InstructionRight_set, doc=r"""指令权限类型""")
    IsForbidden: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcInstructionRightField_IsForbidden_get, _soptthosttraderapi.CThostFtdcInstructionRightField_IsForbidden_set, doc=r"""是否禁止""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInstructionRightField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInstructionRightField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInstructionRightField

# Register CThostFtdcInstructionRightField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInstructionRightField_swigregister(CThostFtdcInstructionRightField)
class CThostFtdcQryProductGroupField(object):
    r"""查询产品组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryProductGroupField_ProductID_get, _soptthosttraderapi.CThostFtdcQryProductGroupField_ProductID_set, doc=r"""产品代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryProductGroupField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryProductGroupField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryProductGroupField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryProductGroupField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryProductGroupField

# Register CThostFtdcQryProductGroupField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryProductGroupField_swigregister(CThostFtdcQryProductGroupField)
class CThostFtdcProductGroupField(object):
    r"""投资者品种/跨品种保证金产品组"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ProductID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcProductGroupField_ProductID_get, _soptthosttraderapi.CThostFtdcProductGroupField_ProductID_set, doc=r"""产品代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcProductGroupField_ExchangeID_get, _soptthosttraderapi.CThostFtdcProductGroupField_ExchangeID_set, doc=r"""交易所代码""")
    ProductGroupID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcProductGroupField_ProductGroupID_get, _soptthosttraderapi.CThostFtdcProductGroupField_ProductGroupID_set, doc=r"""产品组代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcProductGroupField_swiginit(self, _soptthosttraderapi.new_CThostFtdcProductGroupField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcProductGroupField

# Register CThostFtdcProductGroupField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcProductGroupField_swigregister(CThostFtdcProductGroupField)
class CThostFtdcBulletinField(object):
    r"""交易所公告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBulletinField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBulletinField_ExchangeID_set, doc=r"""交易所代码""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcBulletinField_TradingDay_get, _soptthosttraderapi.CThostFtdcBulletinField_TradingDay_set, doc=r"""交易日""")
    BulletinID: "ctp_sopt::TThostFtdcBulletinIDType" = property(_soptthosttraderapi.CThostFtdcBulletinField_BulletinID_get, _soptthosttraderapi.CThostFtdcBulletinField_BulletinID_set, doc=r"""公告编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcBulletinField_SequenceNo_get, _soptthosttraderapi.CThostFtdcBulletinField_SequenceNo_set, doc=r"""序列号""")
    NewsType: "ctp_sopt::TThostFtdcNewsTypeType" = property(_soptthosttraderapi.CThostFtdcBulletinField_NewsType_get, _soptthosttraderapi.CThostFtdcBulletinField_NewsType_set, doc=r"""公告类型""")
    NewsUrgency: "ctp_sopt::TThostFtdcNewsUrgencyType" = property(_soptthosttraderapi.CThostFtdcBulletinField_NewsUrgency_get, _soptthosttraderapi.CThostFtdcBulletinField_NewsUrgency_set, doc=r"""紧急程度""")
    SendTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcBulletinField_SendTime_get, _soptthosttraderapi.CThostFtdcBulletinField_SendTime_set, doc=r"""发送时间""")
    Abstract: "ctp_sopt::TThostFtdcAbstractType" = property(_soptthosttraderapi.CThostFtdcBulletinField_Abstract_get, _soptthosttraderapi.CThostFtdcBulletinField_Abstract_set, doc=r"""消息摘要""")
    ComeFrom: "ctp_sopt::TThostFtdcComeFromType" = property(_soptthosttraderapi.CThostFtdcBulletinField_ComeFrom_get, _soptthosttraderapi.CThostFtdcBulletinField_ComeFrom_set, doc=r"""消息来源""")
    Content: "ctp_sopt::TThostFtdcContentType" = property(_soptthosttraderapi.CThostFtdcBulletinField_Content_get, _soptthosttraderapi.CThostFtdcBulletinField_Content_set, doc=r"""消息正文""")
    URLLink: "ctp_sopt::TThostFtdcURLLinkType" = property(_soptthosttraderapi.CThostFtdcBulletinField_URLLink_get, _soptthosttraderapi.CThostFtdcBulletinField_URLLink_set, doc=r"""WEB地址""")
    MarketID: "ctp_sopt::TThostFtdcMarketIDType" = property(_soptthosttraderapi.CThostFtdcBulletinField_MarketID_get, _soptthosttraderapi.CThostFtdcBulletinField_MarketID_set, doc=r"""市场代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBulletinField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBulletinField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBulletinField

# Register CThostFtdcBulletinField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBulletinField_swigregister(CThostFtdcBulletinField)
class CThostFtdcQryBulletinField(object):
    r"""查询交易所公告"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryBulletinField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryBulletinField_ExchangeID_set, doc=r"""交易所代码""")
    BulletinID: "ctp_sopt::TThostFtdcBulletinIDType" = property(_soptthosttraderapi.CThostFtdcQryBulletinField_BulletinID_get, _soptthosttraderapi.CThostFtdcQryBulletinField_BulletinID_set, doc=r"""公告编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcQryBulletinField_SequenceNo_get, _soptthosttraderapi.CThostFtdcQryBulletinField_SequenceNo_set, doc=r"""序列号""")
    NewsType: "ctp_sopt::TThostFtdcNewsTypeType" = property(_soptthosttraderapi.CThostFtdcQryBulletinField_NewsType_get, _soptthosttraderapi.CThostFtdcQryBulletinField_NewsType_set, doc=r"""公告类型""")
    NewsUrgency: "ctp_sopt::TThostFtdcNewsUrgencyType" = property(_soptthosttraderapi.CThostFtdcQryBulletinField_NewsUrgency_get, _soptthosttraderapi.CThostFtdcQryBulletinField_NewsUrgency_set, doc=r"""紧急程度""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBulletinField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBulletinField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBulletinField

# Register CThostFtdcQryBulletinField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBulletinField_swigregister(CThostFtdcQryBulletinField)
class CThostFtdcReqOpenAccountField(object):
    r"""转帐开户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Gender_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_CustType_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Address_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Fax_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_EMail_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Password_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_Digest_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_TID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_UserID_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_UserID_set, doc=r"""用户标识""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcReqOpenAccountField_BankChal_get, _soptthosttraderapi.CThostFtdcReqOpenAccountField_BankChal_set, doc=r"""银行转账通道""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqOpenAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqOpenAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqOpenAccountField

# Register CThostFtdcReqOpenAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqOpenAccountField_swigregister(CThostFtdcReqOpenAccountField)
class CThostFtdcReqCancelAccountField(object):
    r"""转帐销户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Gender_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_CustType_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Address_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Fax_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_EMail_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Password_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_Digest_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_TID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_UserID_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_UserID_set, doc=r"""用户标识""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcReqCancelAccountField_BankChal_get, _soptthosttraderapi.CThostFtdcReqCancelAccountField_BankChal_set, doc=r"""银行转账通道""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqCancelAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqCancelAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqCancelAccountField

# Register CThostFtdcReqCancelAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqCancelAccountField_swigregister(CThostFtdcReqCancelAccountField)
class CThostFtdcReqChangeAccountField(object):
    r"""变更银行账户请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Gender_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_CustType_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Address_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Fax_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_EMail_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankPassWord_set, doc=r"""银行密码""")
    NewBankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_NewBankAccount_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_NewBankAccount_set, doc=r"""新银行帐号""")
    NewBankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_NewBankPassWord_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_NewBankPassWord_set, doc=r"""新银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Password_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Password_set, doc=r"""期货密码""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_CurrencyID_set, doc=r"""币种代码""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_TID_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_TID_set, doc=r"""交易ID""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqChangeAccountField_Digest_get, _soptthosttraderapi.CThostFtdcReqChangeAccountField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqChangeAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqChangeAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqChangeAccountField

# Register CThostFtdcReqChangeAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqChangeAccountField_swigregister(CThostFtdcReqChangeAccountField)
class CThostFtdcReqTransferField(object):
    r"""转账请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqTransferField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankID_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqTransferField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqTransferField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqTransferField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqTransferField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqTransferField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqTransferField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqTransferField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_SessionID_get, _soptthosttraderapi.CThostFtdcReqTransferField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqTransferField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqTransferField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqTransferField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_CustType_get, _soptthosttraderapi.CThostFtdcReqTransferField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_AccountID_get, _soptthosttraderapi.CThostFtdcReqTransferField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_Password_get, _soptthosttraderapi.CThostFtdcReqTransferField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_InstallID_get, _soptthosttraderapi.CThostFtdcReqTransferField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_FutureSerial_get, _soptthosttraderapi.CThostFtdcReqTransferField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_UserID_get, _soptthosttraderapi.CThostFtdcReqTransferField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqTransferField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqTransferField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TradeAmount_get, _soptthosttraderapi.CThostFtdcReqTransferField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_FutureFetchAmount_get, _soptthosttraderapi.CThostFtdcReqTransferField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "ctp_sopt::TThostFtdcFeePayFlagType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_FeePayFlag_get, _soptthosttraderapi.CThostFtdcReqTransferField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "ctp_sopt::TThostFtdcCustFeeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_CustFee_get, _soptthosttraderapi.CThostFtdcReqTransferField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "ctp_sopt::TThostFtdcFutureFeeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BrokerFee_get, _soptthosttraderapi.CThostFtdcReqTransferField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_Message_get, _soptthosttraderapi.CThostFtdcReqTransferField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_Digest_get, _soptthosttraderapi.CThostFtdcReqTransferField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqTransferField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqTransferField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqTransferField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqTransferField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_OperNo_get, _soptthosttraderapi.CThostFtdcReqTransferField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_RequestID_get, _soptthosttraderapi.CThostFtdcReqTransferField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TID_get, _soptthosttraderapi.CThostFtdcReqTransferField_TID_set, doc=r"""交易ID""")
    TransferStatus: "ctp_sopt::TThostFtdcTransferStatusType" = property(_soptthosttraderapi.CThostFtdcReqTransferField_TransferStatus_get, _soptthosttraderapi.CThostFtdcReqTransferField_TransferStatus_set, doc=r"""转账交易状态""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqTransferField

# Register CThostFtdcReqTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqTransferField_swigregister(CThostFtdcReqTransferField)
class CThostFtdcRspTransferField(object):
    r"""银行发起银行资金转期货响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspTransferField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankID_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspTransferField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspTransferField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspTransferField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspTransferField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspTransferField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspTransferField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspTransferField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_SessionID_get, _soptthosttraderapi.CThostFtdcRspTransferField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_CustomerName_get, _soptthosttraderapi.CThostFtdcRspTransferField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_IdCardType_get, _soptthosttraderapi.CThostFtdcRspTransferField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcRspTransferField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_CustType_get, _soptthosttraderapi.CThostFtdcRspTransferField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankAccount_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankPassWord_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_AccountID_get, _soptthosttraderapi.CThostFtdcRspTransferField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_Password_get, _soptthosttraderapi.CThostFtdcRspTransferField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_InstallID_get, _soptthosttraderapi.CThostFtdcRspTransferField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_FutureSerial_get, _soptthosttraderapi.CThostFtdcRspTransferField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_UserID_get, _soptthosttraderapi.CThostFtdcRspTransferField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcRspTransferField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspTransferField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TradeAmount_get, _soptthosttraderapi.CThostFtdcRspTransferField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_FutureFetchAmount_get, _soptthosttraderapi.CThostFtdcRspTransferField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "ctp_sopt::TThostFtdcFeePayFlagType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_FeePayFlag_get, _soptthosttraderapi.CThostFtdcRspTransferField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "ctp_sopt::TThostFtdcCustFeeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_CustFee_get, _soptthosttraderapi.CThostFtdcRspTransferField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "ctp_sopt::TThostFtdcFutureFeeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BrokerFee_get, _soptthosttraderapi.CThostFtdcRspTransferField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_Message_get, _soptthosttraderapi.CThostFtdcRspTransferField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_Digest_get, _soptthosttraderapi.CThostFtdcRspTransferField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankAccType_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspTransferField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspTransferField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcRspTransferField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcRspTransferField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_OperNo_get, _soptthosttraderapi.CThostFtdcRspTransferField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_RequestID_get, _soptthosttraderapi.CThostFtdcRspTransferField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TID_get, _soptthosttraderapi.CThostFtdcRspTransferField_TID_set, doc=r"""交易ID""")
    TransferStatus: "ctp_sopt::TThostFtdcTransferStatusType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_TransferStatus_get, _soptthosttraderapi.CThostFtdcRspTransferField_TransferStatus_set, doc=r"""转账交易状态""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspTransferField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspTransferField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspTransferField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspTransferField

# Register CThostFtdcRspTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspTransferField_swigregister(CThostFtdcRspTransferField)
class CThostFtdcReqRepealField(object):
    r"""冲正请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RepealTimeInterval: "ctp_sopt::TThostFtdcRepealTimeIntervalType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_RepealTimeInterval_get, _soptthosttraderapi.CThostFtdcReqRepealField_RepealTimeInterval_set, doc=r"""冲正时间间隔""")
    RepealedTimes: "ctp_sopt::TThostFtdcRepealedTimesType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_RepealedTimes_get, _soptthosttraderapi.CThostFtdcReqRepealField_RepealedTimes_set, doc=r"""已经冲正次数""")
    BankRepealFlag: "ctp_sopt::TThostFtdcBankRepealFlagType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankRepealFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankRepealFlag_set, doc=r"""银行冲正标志""")
    BrokerRepealFlag: "ctp_sopt::TThostFtdcBrokerRepealFlagType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BrokerRepealFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_BrokerRepealFlag_set, doc=r"""期商冲正标志""")
    PlateRepealSerial: "ctp_sopt::TThostFtdcPlateSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_PlateRepealSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_PlateRepealSerial_set, doc=r"""被冲正平台流水号""")
    BankRepealSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankRepealSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankRepealSerial_set, doc=r"""被冲正银行流水号""")
    FutureRepealSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_FutureRepealSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_FutureRepealSerial_set, doc=r"""被冲正期货流水号""")
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqRepealField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankID_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqRepealField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqRepealField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqRepealField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqRepealField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqRepealField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqRepealField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_SessionID_get, _soptthosttraderapi.CThostFtdcReqRepealField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqRepealField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqRepealField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqRepealField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_CustType_get, _soptthosttraderapi.CThostFtdcReqRepealField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_AccountID_get, _soptthosttraderapi.CThostFtdcReqRepealField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_Password_get, _soptthosttraderapi.CThostFtdcReqRepealField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_InstallID_get, _soptthosttraderapi.CThostFtdcReqRepealField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_FutureSerial_get, _soptthosttraderapi.CThostFtdcReqRepealField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_UserID_get, _soptthosttraderapi.CThostFtdcReqRepealField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqRepealField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TradeAmount_get, _soptthosttraderapi.CThostFtdcReqRepealField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_FutureFetchAmount_get, _soptthosttraderapi.CThostFtdcReqRepealField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "ctp_sopt::TThostFtdcFeePayFlagType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_FeePayFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "ctp_sopt::TThostFtdcCustFeeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_CustFee_get, _soptthosttraderapi.CThostFtdcReqRepealField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "ctp_sopt::TThostFtdcFutureFeeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BrokerFee_get, _soptthosttraderapi.CThostFtdcReqRepealField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_Message_get, _soptthosttraderapi.CThostFtdcReqRepealField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_Digest_get, _soptthosttraderapi.CThostFtdcReqRepealField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqRepealField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqRepealField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqRepealField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_OperNo_get, _soptthosttraderapi.CThostFtdcReqRepealField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_RequestID_get, _soptthosttraderapi.CThostFtdcReqRepealField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TID_get, _soptthosttraderapi.CThostFtdcReqRepealField_TID_set, doc=r"""交易ID""")
    TransferStatus: "ctp_sopt::TThostFtdcTransferStatusType" = property(_soptthosttraderapi.CThostFtdcReqRepealField_TransferStatus_get, _soptthosttraderapi.CThostFtdcReqRepealField_TransferStatus_set, doc=r"""转账交易状态""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqRepealField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqRepealField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqRepealField

# Register CThostFtdcReqRepealField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqRepealField_swigregister(CThostFtdcReqRepealField)
class CThostFtdcRspRepealField(object):
    r"""冲正响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RepealTimeInterval: "ctp_sopt::TThostFtdcRepealTimeIntervalType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_RepealTimeInterval_get, _soptthosttraderapi.CThostFtdcRspRepealField_RepealTimeInterval_set, doc=r"""冲正时间间隔""")
    RepealedTimes: "ctp_sopt::TThostFtdcRepealedTimesType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_RepealedTimes_get, _soptthosttraderapi.CThostFtdcRspRepealField_RepealedTimes_set, doc=r"""已经冲正次数""")
    BankRepealFlag: "ctp_sopt::TThostFtdcBankRepealFlagType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankRepealFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankRepealFlag_set, doc=r"""银行冲正标志""")
    BrokerRepealFlag: "ctp_sopt::TThostFtdcBrokerRepealFlagType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BrokerRepealFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_BrokerRepealFlag_set, doc=r"""期商冲正标志""")
    PlateRepealSerial: "ctp_sopt::TThostFtdcPlateSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_PlateRepealSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_PlateRepealSerial_set, doc=r"""被冲正平台流水号""")
    BankRepealSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankRepealSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankRepealSerial_set, doc=r"""被冲正银行流水号""")
    FutureRepealSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_FutureRepealSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_FutureRepealSerial_set, doc=r"""被冲正期货流水号""")
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspRepealField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankID_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspRepealField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspRepealField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspRepealField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspRepealField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspRepealField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspRepealField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_SessionID_get, _soptthosttraderapi.CThostFtdcRspRepealField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_CustomerName_get, _soptthosttraderapi.CThostFtdcRspRepealField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_IdCardType_get, _soptthosttraderapi.CThostFtdcRspRepealField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcRspRepealField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_CustType_get, _soptthosttraderapi.CThostFtdcRspRepealField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankAccount_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankPassWord_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_AccountID_get, _soptthosttraderapi.CThostFtdcRspRepealField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_Password_get, _soptthosttraderapi.CThostFtdcRspRepealField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_InstallID_get, _soptthosttraderapi.CThostFtdcRspRepealField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_FutureSerial_get, _soptthosttraderapi.CThostFtdcRspRepealField_FutureSerial_set, doc=r"""期货公司流水号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_UserID_get, _soptthosttraderapi.CThostFtdcRspRepealField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspRepealField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TradeAmount_get, _soptthosttraderapi.CThostFtdcRspRepealField_TradeAmount_set, doc=r"""转帐金额""")
    FutureFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_FutureFetchAmount_get, _soptthosttraderapi.CThostFtdcRspRepealField_FutureFetchAmount_set, doc=r"""期货可取金额""")
    FeePayFlag: "ctp_sopt::TThostFtdcFeePayFlagType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_FeePayFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_FeePayFlag_set, doc=r"""费用支付标志""")
    CustFee: "ctp_sopt::TThostFtdcCustFeeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_CustFee_get, _soptthosttraderapi.CThostFtdcRspRepealField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "ctp_sopt::TThostFtdcFutureFeeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BrokerFee_get, _soptthosttraderapi.CThostFtdcRspRepealField_BrokerFee_set, doc=r"""应收期货公司费用""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_Message_get, _soptthosttraderapi.CThostFtdcRspRepealField_Message_set, doc=r"""发送方给接收方的消息""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_Digest_get, _soptthosttraderapi.CThostFtdcRspRepealField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankAccType_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspRepealField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspRepealField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcRspRepealField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_OperNo_get, _soptthosttraderapi.CThostFtdcRspRepealField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_RequestID_get, _soptthosttraderapi.CThostFtdcRspRepealField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TID_get, _soptthosttraderapi.CThostFtdcRspRepealField_TID_set, doc=r"""交易ID""")
    TransferStatus: "ctp_sopt::TThostFtdcTransferStatusType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_TransferStatus_get, _soptthosttraderapi.CThostFtdcRspRepealField_TransferStatus_set, doc=r"""转账交易状态""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspRepealField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspRepealField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspRepealField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspRepealField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspRepealField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspRepealField

# Register CThostFtdcRspRepealField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspRepealField_swigregister(CThostFtdcRspRepealField)
class CThostFtdcReqQueryAccountField(object):
    r"""查询账户信息请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_CustType_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_Password_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_FutureSerial_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_UserID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_Digest_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_RequestID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryAccountField_TID_get, _soptthosttraderapi.CThostFtdcReqQueryAccountField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqQueryAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqQueryAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqQueryAccountField

# Register CThostFtdcReqQueryAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqQueryAccountField_swigregister(CThostFtdcReqQueryAccountField)
class CThostFtdcRspQueryAccountField(object):
    r"""查询账户信息响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_CustType_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_Password_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_FutureSerial_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_UserID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_Digest_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_RequestID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_TID_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_TID_set, doc=r"""交易ID""")
    BankUseAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankUseAmount_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankUseAmount_set, doc=r"""银行可用金额""")
    BankFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspQueryAccountField_BankFetchAmount_get, _soptthosttraderapi.CThostFtdcRspQueryAccountField_BankFetchAmount_set, doc=r"""银行可取金额""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspQueryAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspQueryAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspQueryAccountField

# Register CThostFtdcRspQueryAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspQueryAccountField_swigregister(CThostFtdcRspQueryAccountField)
class CThostFtdcFutureSignIOField(object):
    r"""期商签到签退"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_TradeCode_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BankID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BankBranchID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_TradeDate_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_TradeTime_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BankSerial_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_TradingDay_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_PlateSerial_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_LastFragment_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_SessionID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_InstallID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_UserID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_Digest_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_CurrencyID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_DeviceID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_OperNo_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_RequestID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcFutureSignIOField_TID_get, _soptthosttraderapi.CThostFtdcFutureSignIOField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcFutureSignIOField_swiginit(self, _soptthosttraderapi.new_CThostFtdcFutureSignIOField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcFutureSignIOField

# Register CThostFtdcFutureSignIOField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcFutureSignIOField_swigregister(CThostFtdcFutureSignIOField)
class CThostFtdcRspFutureSignInField(object):
    r"""期商签到响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BankID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_SessionID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_InstallID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_UserID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_Digest_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_OperNo_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_RequestID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_TID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_ErrorMsg_set, doc=r"""错误信息""")
    PinKey: "ctp_sopt::TThostFtdcPasswordKeyType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_PinKey_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_PinKey_set, doc=r"""PIN密钥""")
    MacKey: "ctp_sopt::TThostFtdcPasswordKeyType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignInField_MacKey_get, _soptthosttraderapi.CThostFtdcRspFutureSignInField_MacKey_set, doc=r"""MAC密钥""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspFutureSignInField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspFutureSignInField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspFutureSignInField

# Register CThostFtdcRspFutureSignInField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspFutureSignInField_swigregister(CThostFtdcRspFutureSignInField)
class CThostFtdcReqFutureSignOutField(object):
    r"""期商签退请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_SessionID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_InstallID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_UserID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_Digest_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_OperNo_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_RequestID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqFutureSignOutField_TID_get, _soptthosttraderapi.CThostFtdcReqFutureSignOutField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqFutureSignOutField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqFutureSignOutField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqFutureSignOutField

# Register CThostFtdcReqFutureSignOutField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqFutureSignOutField_swigregister(CThostFtdcReqFutureSignOutField)
class CThostFtdcRspFutureSignOutField(object):
    r"""期商签退响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_SessionID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_InstallID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_UserID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_Digest_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_OperNo_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_RequestID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_TID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspFutureSignOutField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspFutureSignOutField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspFutureSignOutField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspFutureSignOutField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspFutureSignOutField

# Register CThostFtdcRspFutureSignOutField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspFutureSignOutField_swigregister(CThostFtdcRspFutureSignOutField)
class CThostFtdcReqQueryTradeResultBySerialField(object):
    r"""查询指定流水号的交易结果请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_SessionID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_SessionID_set, doc=r"""会话号""")
    Reference: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Reference_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Reference_set, doc=r"""流水号""")
    RefrenceIssureType: "ctp_sopt::TThostFtdcInstitutionTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set, doc=r"""本流水号发布者的机构类型""")
    RefrenceIssure: "ctp_sopt::TThostFtdcOrganCodeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set, doc=r"""本流水号发布者机构编码""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CustType_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_AccountID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Password_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Password_set, doc=r"""期货密码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set, doc=r"""转帐金额""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Digest_get, _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqQueryTradeResultBySerialField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqQueryTradeResultBySerialField

# Register CThostFtdcReqQueryTradeResultBySerialField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqQueryTradeResultBySerialField_swigregister(CThostFtdcReqQueryTradeResultBySerialField)
class CThostFtdcRspQueryTradeResultBySerialField(object):
    r"""查询指定流水号的交易结果响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_SessionID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_SessionID_set, doc=r"""会话号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set, doc=r"""错误信息""")
    Reference: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Reference_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Reference_set, doc=r"""流水号""")
    RefrenceIssureType: "ctp_sopt::TThostFtdcInstitutionTypeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set, doc=r"""本流水号发布者的机构类型""")
    RefrenceIssure: "ctp_sopt::TThostFtdcOrganCodeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set, doc=r"""本流水号发布者机构编码""")
    OriginReturnCode: "ctp_sopt::TThostFtdcReturnCodeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set, doc=r"""原始返回代码""")
    OriginDescrInfoForReturnCode: "ctp_sopt::TThostFtdcDescrInfoForReturnCodeType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set, doc=r"""原始返回码描述""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_AccountID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Password_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Password_set, doc=r"""期货密码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set, doc=r"""转帐金额""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Digest_get, _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspQueryTradeResultBySerialField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspQueryTradeResultBySerialField

# Register CThostFtdcRspQueryTradeResultBySerialField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspQueryTradeResultBySerialField_swigregister(CThostFtdcRspQueryTradeResultBySerialField)
class CThostFtdcReqDayEndFileReadyField(object):
    r"""日终文件就绪请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_SessionID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_SessionID_set, doc=r"""会话号""")
    FileBusinessCode: "ctp_sopt::TThostFtdcFileBusinessCodeType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set, doc=r"""文件业务功能""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_InstallID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_UserID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_Digest_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_OperNo_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_RequestID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TID_get, _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqDayEndFileReadyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqDayEndFileReadyField

# Register CThostFtdcReqDayEndFileReadyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqDayEndFileReadyField_swigregister(CThostFtdcReqDayEndFileReadyField)
class CThostFtdcRspDayEndFileReadyField(object):
    r"""日终文件就绪响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_SessionID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_SessionID_set, doc=r"""会话号""")
    FileBusinessCode: "ctp_sopt::TThostFtdcFileBusinessCodeType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_FileBusinessCode_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_FileBusinessCode_set, doc=r"""文件业务功能""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_InstallID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_UserID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_Digest_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_OperNo_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_RequestID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspDayEndFileReadyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspDayEndFileReadyField

# Register CThostFtdcRspDayEndFileReadyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspDayEndFileReadyField_swigregister(CThostFtdcRspDayEndFileReadyField)
class CThostFtdcDayEndFileReadyField(object):
    r"""日终文件就绪响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeCode_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeDate_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeTime_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankSerial_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradingDay_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_LastFragment_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_SessionID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_SessionID_set, doc=r"""会话号""")
    FileBusinessCode: "ctp_sopt::TThostFtdcFileBusinessCodeType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_FileBusinessCode_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_FileBusinessCode_set, doc=r"""文件业务功能""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_InstallID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_UserID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_Digest_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_CurrencyID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_DeviceID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_OperNo_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_RequestID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_TID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_ErrorID_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcDayEndFileReadyField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcDayEndFileReadyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDayEndFileReadyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDayEndFileReadyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDayEndFileReadyField

# Register CThostFtdcDayEndFileReadyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDayEndFileReadyField_swigregister(CThostFtdcDayEndFileReadyField)
class CThostFtdcReturnResultField(object):
    r"""返回结果"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ReturnCode: "ctp_sopt::TThostFtdcReturnCodeType" = property(_soptthosttraderapi.CThostFtdcReturnResultField_ReturnCode_get, _soptthosttraderapi.CThostFtdcReturnResultField_ReturnCode_set, doc=r"""返回代码""")
    DescrInfoForReturnCode: "ctp_sopt::TThostFtdcDescrInfoForReturnCodeType" = property(_soptthosttraderapi.CThostFtdcReturnResultField_DescrInfoForReturnCode_get, _soptthosttraderapi.CThostFtdcReturnResultField_DescrInfoForReturnCode_set, doc=r"""返回码描述""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReturnResultField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReturnResultField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReturnResultField

# Register CThostFtdcReturnResultField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReturnResultField_swigregister(CThostFtdcReturnResultField)
class CThostFtdcVerifyFuturePasswordField(object):
    r"""验证期货资金密码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeCode_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankBranchID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BrokerID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeDate_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeTime_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankSerial_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradingDay_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_PlateSerial_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_LastFragment_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_SessionID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_SessionID_set, doc=r"""会话号""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_AccountID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_Password_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_Password_set, doc=r"""期货密码""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankAccount_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankPassWord_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_BankPassWord_set, doc=r"""银行密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_InstallID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_InstallID_set, doc=r"""安装编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_TID_set, doc=r"""交易ID""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_CurrencyID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_swiginit(self, _soptthosttraderapi.new_CThostFtdcVerifyFuturePasswordField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcVerifyFuturePasswordField

# Register CThostFtdcVerifyFuturePasswordField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcVerifyFuturePasswordField_swigregister(CThostFtdcVerifyFuturePasswordField)
class CThostFtdcVerifyCustInfoField(object):
    r"""验证客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcVerifyCustInfoField_CustomerName_get, _soptthosttraderapi.CThostFtdcVerifyCustInfoField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcVerifyCustInfoField_IdCardType_get, _soptthosttraderapi.CThostFtdcVerifyCustInfoField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcVerifyCustInfoField_CustType_get, _soptthosttraderapi.CThostFtdcVerifyCustInfoField_CustType_set, doc=r"""客户类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcVerifyCustInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcVerifyCustInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcVerifyCustInfoField

# Register CThostFtdcVerifyCustInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcVerifyCustInfoField_swigregister(CThostFtdcVerifyCustInfoField)
class CThostFtdcVerifyFuturePasswordAndCustInfoField(object):
    r"""验证期货资金密码和客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set, doc=r"""客户类型""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set, doc=r"""期货密码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get, _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcVerifyFuturePasswordAndCustInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcVerifyFuturePasswordAndCustInfoField

# Register CThostFtdcVerifyFuturePasswordAndCustInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcVerifyFuturePasswordAndCustInfoField_swigregister(CThostFtdcVerifyFuturePasswordAndCustInfoField)
class CThostFtdcDepositResultInformField(object):
    r"""验证期货资金密码和客户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_DepositSeqNo_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_DepositSeqNo_set, doc=r"""出入金流水号，该流水号为银期报盘返回的流水号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_BrokerID_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_InvestorID_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_InvestorID_set, doc=r"""投资者代码""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_Deposit_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_Deposit_set, doc=r"""入金金额""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_RequestID_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_RequestID_set, doc=r"""请求编号""")
    ReturnCode: "ctp_sopt::TThostFtdcReturnCodeType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_ReturnCode_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_ReturnCode_set, doc=r"""返回代码""")
    DescrInfoForReturnCode: "ctp_sopt::TThostFtdcDescrInfoForReturnCodeType" = property(_soptthosttraderapi.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get, _soptthosttraderapi.CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set, doc=r"""返回码描述""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDepositResultInformField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDepositResultInformField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDepositResultInformField

# Register CThostFtdcDepositResultInformField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDepositResultInformField_swigregister(CThostFtdcDepositResultInformField)
class CThostFtdcReqSyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BankID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_SessionID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_InstallID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_UserID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_Message_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_OperNo_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_RequestID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqSyncKeyField_TID_get, _soptthosttraderapi.CThostFtdcReqSyncKeyField_TID_set, doc=r"""交易ID""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqSyncKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqSyncKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqSyncKeyField

# Register CThostFtdcReqSyncKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqSyncKeyField_swigregister(CThostFtdcReqSyncKeyField)
class CThostFtdcRspSyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeCode_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BankID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeDate_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeTime_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BankSerial_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_TradingDay_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_LastFragment_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_SessionID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_InstallID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_UserID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_Message_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_DeviceID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_OperNo_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_RequestID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_TID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_ErrorID_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRspSyncKeyField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcRspSyncKeyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspSyncKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspSyncKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspSyncKeyField

# Register CThostFtdcRspSyncKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspSyncKeyField_swigregister(CThostFtdcRspSyncKeyField)
class CThostFtdcNotifyQueryAccountField(object):
    r"""查询账户信息通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CustType_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CustType_set, doc=r"""客户类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_Password_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_Password_set, doc=r"""期货密码""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_FutureSerial_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_FutureSerial_set, doc=r"""期货公司流水号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_UserID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_UserID_set, doc=r"""用户标识""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_CurrencyID_set, doc=r"""币种代码""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_Digest_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_RequestID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_TID_set, doc=r"""交易ID""")
    BankUseAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankUseAmount_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankUseAmount_set, doc=r"""银行可用金额""")
    BankFetchAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankFetchAmount_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_BankFetchAmount_set, doc=r"""银行可取金额""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_ErrorID_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNotifyQueryAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNotifyQueryAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNotifyQueryAccountField

# Register CThostFtdcNotifyQueryAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNotifyQueryAccountField_swigregister(CThostFtdcNotifyQueryAccountField)
class CThostFtdcTransferSerialField(object):
    r"""银期转账交易流水表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    PlateSerial: "ctp_sopt::TThostFtdcPlateSerialType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_PlateSerial_get, _soptthosttraderapi.CThostFtdcTransferSerialField_PlateSerial_set, doc=r"""平台流水号""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_TradeDate_get, _soptthosttraderapi.CThostFtdcTransferSerialField_TradeDate_set, doc=r"""交易发起方日期""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_TradingDay_get, _soptthosttraderapi.CThostFtdcTransferSerialField_TradingDay_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_TradeTime_get, _soptthosttraderapi.CThostFtdcTransferSerialField_TradeTime_set, doc=r"""交易时间""")
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_TradeCode_get, _soptthosttraderapi.CThostFtdcTransferSerialField_TradeCode_set, doc=r"""交易代码""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_SessionID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_SessionID_set, doc=r"""会话编号""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankBranchID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankBranchID_set, doc=r"""银行分支机构编码""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankAccType_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankAccType_set, doc=r"""银行帐号类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankAccount_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankAccount_set, doc=r"""银行帐号""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankSerial_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankSerial_set, doc=r"""银行流水号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BrokerID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BrokerID_set, doc=r"""期货公司编码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    FutureAccType: "ctp_sopt::TThostFtdcFutureAccTypeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_FutureAccType_get, _soptthosttraderapi.CThostFtdcTransferSerialField_FutureAccType_set, doc=r"""期货公司帐号类型""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_AccountID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_AccountID_set, doc=r"""投资者帐号""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_InvestorID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_InvestorID_set, doc=r"""投资者代码""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_FutureSerial_get, _soptthosttraderapi.CThostFtdcTransferSerialField_FutureSerial_set, doc=r"""期货公司流水号""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_IdCardType_get, _soptthosttraderapi.CThostFtdcTransferSerialField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcTransferSerialField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_CurrencyID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_CurrencyID_set, doc=r"""币种代码""")
    TradeAmount: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_TradeAmount_get, _soptthosttraderapi.CThostFtdcTransferSerialField_TradeAmount_set, doc=r"""交易金额""")
    CustFee: "ctp_sopt::TThostFtdcCustFeeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_CustFee_get, _soptthosttraderapi.CThostFtdcTransferSerialField_CustFee_set, doc=r"""应收客户费用""")
    BrokerFee: "ctp_sopt::TThostFtdcFutureFeeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BrokerFee_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BrokerFee_set, doc=r"""应收期货公司费用""")
    AvailabilityFlag: "ctp_sopt::TThostFtdcAvailabilityFlagType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_AvailabilityFlag_get, _soptthosttraderapi.CThostFtdcTransferSerialField_AvailabilityFlag_set, doc=r"""有效标志""")
    OperatorCode: "ctp_sopt::TThostFtdcOperatorCodeType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_OperatorCode_get, _soptthosttraderapi.CThostFtdcTransferSerialField_OperatorCode_set, doc=r"""操作员""")
    BankNewAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_BankNewAccount_get, _soptthosttraderapi.CThostFtdcTransferSerialField_BankNewAccount_set, doc=r"""新银行帐号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_ErrorID_get, _soptthosttraderapi.CThostFtdcTransferSerialField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcTransferSerialField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcTransferSerialField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTransferSerialField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTransferSerialField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTransferSerialField

# Register CThostFtdcTransferSerialField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTransferSerialField_swigregister(CThostFtdcTransferSerialField)
class CThostFtdcQryTransferSerialField(object):
    r"""请求查询转帐流水"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferSerialField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryTransferSerialField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferSerialField_AccountID_get, _soptthosttraderapi.CThostFtdcQryTransferSerialField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferSerialField_BankID_get, _soptthosttraderapi.CThostFtdcQryTransferSerialField_BankID_set, doc=r"""银行编码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryTransferSerialField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQryTransferSerialField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryTransferSerialField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryTransferSerialField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryTransferSerialField

# Register CThostFtdcQryTransferSerialField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryTransferSerialField_swigregister(CThostFtdcQryTransferSerialField)
class CThostFtdcNotifyFutureSignInField(object):
    r"""期商签到通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeCode_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankBranchID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeDate_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeTime_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankSerial_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradingDay_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_PlateSerial_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_LastFragment_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_SessionID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_InstallID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_UserID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_Digest_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_CurrencyID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_DeviceID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_OperNo_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_RequestID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_ErrorID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_ErrorMsg_set, doc=r"""错误信息""")
    PinKey: "ctp_sopt::TThostFtdcPasswordKeyType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_PinKey_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_PinKey_set, doc=r"""PIN密钥""")
    MacKey: "ctp_sopt::TThostFtdcPasswordKeyType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_MacKey_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_MacKey_set, doc=r"""MAC密钥""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNotifyFutureSignInField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNotifyFutureSignInField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNotifyFutureSignInField

# Register CThostFtdcNotifyFutureSignInField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNotifyFutureSignInField_swigregister(CThostFtdcNotifyFutureSignInField)
class CThostFtdcNotifyFutureSignOutField(object):
    r"""期商签退通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeCode_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankBranchID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeDate_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeTime_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankSerial_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradingDay_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_PlateSerial_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_LastFragment_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_SessionID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_InstallID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_UserID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_UserID_set, doc=r"""用户标识""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_Digest_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_Digest_set, doc=r"""摘要""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_CurrencyID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_CurrencyID_set, doc=r"""币种代码""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_DeviceID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_OperNo_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_RequestID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_ErrorID_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNotifyFutureSignOutField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNotifyFutureSignOutField

# Register CThostFtdcNotifyFutureSignOutField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNotifyFutureSignOutField_swigregister(CThostFtdcNotifyFutureSignOutField)
class CThostFtdcNotifySyncKeyField(object):
    r"""交易核心向银期报盘发出密钥同步处理结果的通知"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeCode_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankBranchID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeDate_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeTime_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankSerial_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradingDay_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_PlateSerial_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_LastFragment_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_SessionID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_SessionID_set, doc=r"""会话号""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_InstallID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_UserID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_UserID_set, doc=r"""用户标识""")
    Message: "ctp_sopt::TThostFtdcAddInfoType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_Message_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_Message_set, doc=r"""交易核心给银期报盘的消息""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_DeviceID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_DeviceID_set, doc=r"""渠道标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_OperNo_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_OperNo_set, doc=r"""交易柜员""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_RequestID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_RequestID_set, doc=r"""请求编号""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_TID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_TID_set, doc=r"""交易ID""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_ErrorID_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcNotifySyncKeyField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcNotifySyncKeyField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNotifySyncKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNotifySyncKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNotifySyncKeyField

# Register CThostFtdcNotifySyncKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNotifySyncKeyField_swigregister(CThostFtdcNotifySyncKeyField)
class CThostFtdcQryAccountregisterField(object):
    r"""请求查询银期签约关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryAccountregisterField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryAccountregisterField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQryAccountregisterField_AccountID_get, _soptthosttraderapi.CThostFtdcQryAccountregisterField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcQryAccountregisterField_BankID_get, _soptthosttraderapi.CThostFtdcQryAccountregisterField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcQryAccountregisterField_BankBranchID_get, _soptthosttraderapi.CThostFtdcQryAccountregisterField_BankBranchID_set, doc=r"""银行分支机构编码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryAccountregisterField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQryAccountregisterField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryAccountregisterField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryAccountregisterField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryAccountregisterField

# Register CThostFtdcQryAccountregisterField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryAccountregisterField_swigregister(CThostFtdcQryAccountregisterField)
class CThostFtdcAccountregisterField(object):
    r"""客户开销户信息表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_TradeDay_get, _soptthosttraderapi.CThostFtdcAccountregisterField_TradeDay_set, doc=r"""交易日期""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BankID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BankID_set, doc=r"""银行编码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BankBranchID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BankBranchID_set, doc=r"""银行分支机构编码""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BankAccount_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BankAccount_set, doc=r"""银行帐号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BrokerID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BrokerID_set, doc=r"""期货公司编码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BrokerBranchID_set, doc=r"""期货公司分支机构编码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_AccountID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_AccountID_set, doc=r"""投资者帐号""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_IdCardType_get, _soptthosttraderapi.CThostFtdcAccountregisterField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcAccountregisterField_IdentifiedCardNo_set, doc=r"""证件号码""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_CustomerName_get, _soptthosttraderapi.CThostFtdcAccountregisterField_CustomerName_set, doc=r"""客户姓名""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_CurrencyID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_CurrencyID_set, doc=r"""币种代码""")
    OpenOrDestroy: "ctp_sopt::TThostFtdcOpenOrDestroyType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_OpenOrDestroy_get, _soptthosttraderapi.CThostFtdcAccountregisterField_OpenOrDestroy_set, doc=r"""开销户类别""")
    RegDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_RegDate_get, _soptthosttraderapi.CThostFtdcAccountregisterField_RegDate_set, doc=r"""签约日期""")
    OutDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_OutDate_get, _soptthosttraderapi.CThostFtdcAccountregisterField_OutDate_set, doc=r"""解约日期""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_TID_get, _soptthosttraderapi.CThostFtdcAccountregisterField_TID_set, doc=r"""交易ID""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_CustType_get, _soptthosttraderapi.CThostFtdcAccountregisterField_CustType_set, doc=r"""客户类型""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcAccountregisterField_BankAccType_get, _soptthosttraderapi.CThostFtdcAccountregisterField_BankAccType_set, doc=r"""银行帐号类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAccountregisterField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAccountregisterField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAccountregisterField

# Register CThostFtdcAccountregisterField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAccountregisterField_swigregister(CThostFtdcAccountregisterField)
class CThostFtdcOpenAccountField(object):
    r"""银期开户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcOpenAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcOpenAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcOpenAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcOpenAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcOpenAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcOpenAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcOpenAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcOpenAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcOpenAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Gender_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcOpenAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_CustType_get, _soptthosttraderapi.CThostFtdcOpenAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Address_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcOpenAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcOpenAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Fax_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_EMail_get, _soptthosttraderapi.CThostFtdcOpenAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcOpenAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Password_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcOpenAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcOpenAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_Digest_get, _soptthosttraderapi.CThostFtdcOpenAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcOpenAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcOpenAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_TID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_UserID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_UserID_set, doc=r"""用户标识""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_ErrorID_get, _soptthosttraderapi.CThostFtdcOpenAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcOpenAccountField_ErrorMsg_set, doc=r"""错误信息""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcOpenAccountField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcOpenAccountField_BankChal_get, _soptthosttraderapi.CThostFtdcOpenAccountField_BankChal_set, doc=r"""银行转账通道""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOpenAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOpenAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOpenAccountField

# Register CThostFtdcOpenAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOpenAccountField_swigregister(CThostFtdcOpenAccountField)
class CThostFtdcCancelAccountField(object):
    r"""银期销户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcCancelAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcCancelAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcCancelAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcCancelAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcCancelAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcCancelAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcCancelAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcCancelAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcCancelAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Gender_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcCancelAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_CustType_get, _soptthosttraderapi.CThostFtdcCancelAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Address_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcCancelAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcCancelAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Fax_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_EMail_get, _soptthosttraderapi.CThostFtdcCancelAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcCancelAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Password_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcCancelAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcCancelAccountField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_Digest_get, _soptthosttraderapi.CThostFtdcCancelAccountField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_DeviceID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcCancelAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_OperNo_get, _soptthosttraderapi.CThostFtdcCancelAccountField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_TID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_UserID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_UserID_set, doc=r"""用户标识""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcCancelAccountField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_BankChal_get, _soptthosttraderapi.CThostFtdcCancelAccountField_BankChal_set, doc=r"""银行转账通道""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_ErrorID_get, _soptthosttraderapi.CThostFtdcCancelAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcCancelAccountField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcCancelAccountField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCancelAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCancelAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCancelAccountField

# Register CThostFtdcCancelAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCancelAccountField_swigregister(CThostFtdcCancelAccountField)
class CThostFtdcChangeAccountField(object):
    r"""银期变更银行账号信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_TradeCode_get, _soptthosttraderapi.CThostFtdcChangeAccountField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankBranchID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_TradeDate_get, _soptthosttraderapi.CThostFtdcChangeAccountField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_TradeTime_get, _soptthosttraderapi.CThostFtdcChangeAccountField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankSerial_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcChangeAccountField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_PlateSerial_get, _soptthosttraderapi.CThostFtdcChangeAccountField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_LastFragment_get, _soptthosttraderapi.CThostFtdcChangeAccountField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_CustomerName_get, _soptthosttraderapi.CThostFtdcChangeAccountField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_IdCardType_get, _soptthosttraderapi.CThostFtdcChangeAccountField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcChangeAccountField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Gender_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_CountryCode_get, _soptthosttraderapi.CThostFtdcChangeAccountField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_CustType_get, _soptthosttraderapi.CThostFtdcChangeAccountField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Address_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_ZipCode_get, _soptthosttraderapi.CThostFtdcChangeAccountField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Telephone_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_MobilePhone_get, _soptthosttraderapi.CThostFtdcChangeAccountField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Fax_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_EMail_get, _soptthosttraderapi.CThostFtdcChangeAccountField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcChangeAccountField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankAccount_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankPassWord_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankPassWord_set, doc=r"""银行密码""")
    NewBankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_NewBankAccount_get, _soptthosttraderapi.CThostFtdcChangeAccountField_NewBankAccount_set, doc=r"""新银行帐号""")
    NewBankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_NewBankPassWord_get, _soptthosttraderapi.CThostFtdcChangeAccountField_NewBankPassWord_set, doc=r"""新银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_AccountID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Password_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Password_set, doc=r"""期货密码""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankAccType_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcChangeAccountField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_CurrencyID_set, doc=r"""币种代码""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcChangeAccountField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcChangeAccountField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_TID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_TID_set, doc=r"""交易ID""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_Digest_get, _soptthosttraderapi.CThostFtdcChangeAccountField_Digest_set, doc=r"""摘要""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_ErrorID_get, _soptthosttraderapi.CThostFtdcChangeAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcChangeAccountField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcChangeAccountField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcChangeAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcChangeAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcChangeAccountField

# Register CThostFtdcChangeAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcChangeAccountField_swigregister(CThostFtdcChangeAccountField)
class CThostFtdcSecAgentACIDMapField(object):
    r"""二级代理操作员银期权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_BrokerID_get, _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_UserID_get, _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_UserID_set, doc=r"""用户代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_AccountID_get, _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_AccountID_set, doc=r"""资金账户""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_CurrencyID_set, doc=r"""币种""")
    BrokerSecAgentID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get, _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set, doc=r"""境外中介机构资金帐号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSecAgentACIDMapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSecAgentACIDMapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSecAgentACIDMapField

# Register CThostFtdcSecAgentACIDMapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSecAgentACIDMapField_swigregister(CThostFtdcSecAgentACIDMapField)
class CThostFtdcQrySecAgentACIDMapField(object):
    r"""二级代理操作员银期权限查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_BrokerID_get, _soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_UserID_get, _soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_UserID_set, doc=r"""用户代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_AccountID_get, _soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_AccountID_set, doc=r"""资金账户""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_CurrencyID_set, doc=r"""币种""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQrySecAgentACIDMapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQrySecAgentACIDMapField

# Register CThostFtdcQrySecAgentACIDMapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQrySecAgentACIDMapField_swigregister(CThostFtdcQrySecAgentACIDMapField)
class CThostFtdcUserRightsAssignField(object):
    r"""灾备中心交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserRightsAssignField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserRightsAssignField_BrokerID_set, doc=r"""应用单元代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserRightsAssignField_UserID_get, _soptthosttraderapi.CThostFtdcUserRightsAssignField_UserID_set, doc=r"""用户代码""")
    DRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcUserRightsAssignField_DRIdentityID_get, _soptthosttraderapi.CThostFtdcUserRightsAssignField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserRightsAssignField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserRightsAssignField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserRightsAssignField

# Register CThostFtdcUserRightsAssignField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserRightsAssignField_swigregister(CThostFtdcUserRightsAssignField)
class CThostFtdcBrokerUserRightAssignField(object):
    r"""经济公司是否有在本标示的交易权限"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_BrokerID_set, doc=r"""应用单元代码""")
    DRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_DRIdentityID_get, _soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_DRIdentityID_set, doc=r"""交易中心代码""")
    Tradeable: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_Tradeable_get, _soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_Tradeable_set, doc=r"""能否交易""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerUserRightAssignField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerUserRightAssignField

# Register CThostFtdcBrokerUserRightAssignField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerUserRightAssignField_swigregister(CThostFtdcBrokerUserRightAssignField)
class CThostFtdcDRTransferField(object):
    r"""灾备交易转换报文"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OrigDRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcDRTransferField_OrigDRIdentityID_get, _soptthosttraderapi.CThostFtdcDRTransferField_OrigDRIdentityID_set, doc=r"""原交易中心代码""")
    DestDRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcDRTransferField_DestDRIdentityID_get, _soptthosttraderapi.CThostFtdcDRTransferField_DestDRIdentityID_set, doc=r"""目标交易中心代码""")
    OrigBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDRTransferField_OrigBrokerID_get, _soptthosttraderapi.CThostFtdcDRTransferField_OrigBrokerID_set, doc=r"""原应用单元代码""")
    DestBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcDRTransferField_DestBrokerID_get, _soptthosttraderapi.CThostFtdcDRTransferField_DestBrokerID_set, doc=r"""目标易用单元代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDRTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDRTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDRTransferField

# Register CThostFtdcDRTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDRTransferField_swigregister(CThostFtdcDRTransferField)
class CThostFtdcFensUserInfoField(object):
    r"""Fens用户信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcFensUserInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcFensUserInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcFensUserInfoField_UserID_get, _soptthosttraderapi.CThostFtdcFensUserInfoField_UserID_set, doc=r"""用户代码""")
    LoginMode: "ctp_sopt::TThostFtdcLoginModeType" = property(_soptthosttraderapi.CThostFtdcFensUserInfoField_LoginMode_get, _soptthosttraderapi.CThostFtdcFensUserInfoField_LoginMode_set, doc=r"""登录模式""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcFensUserInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcFensUserInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcFensUserInfoField

# Register CThostFtdcFensUserInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcFensUserInfoField_swigregister(CThostFtdcFensUserInfoField)
class CThostFtdcCurrTransferIdentityField(object):
    r"""当前银期所属交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    IdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcCurrTransferIdentityField_IdentityID_get, _soptthosttraderapi.CThostFtdcCurrTransferIdentityField_IdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCurrTransferIdentityField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCurrTransferIdentityField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCurrTransferIdentityField

# Register CThostFtdcCurrTransferIdentityField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCurrTransferIdentityField_swigregister(CThostFtdcCurrTransferIdentityField)
class CThostFtdcLoginForbiddenUserField(object):
    r"""禁止登录用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenUserField_BrokerID_get, _soptthosttraderapi.CThostFtdcLoginForbiddenUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenUserField_UserID_get, _soptthosttraderapi.CThostFtdcLoginForbiddenUserField_UserID_set, doc=r"""用户代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenUserField_reserve1_get, _soptthosttraderapi.CThostFtdcLoginForbiddenUserField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcLoginForbiddenUserField_IPAddress_get, _soptthosttraderapi.CThostFtdcLoginForbiddenUserField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcLoginForbiddenUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcLoginForbiddenUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcLoginForbiddenUserField

# Register CThostFtdcLoginForbiddenUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcLoginForbiddenUserField_swigregister(CThostFtdcLoginForbiddenUserField)
class CThostFtdcQryLoginForbiddenUserField(object):
    r"""查询禁止登录用户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_UserID_get, _soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLoginForbiddenUserField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLoginForbiddenUserField

# Register CThostFtdcQryLoginForbiddenUserField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLoginForbiddenUserField_swigregister(CThostFtdcQryLoginForbiddenUserField)
class CThostFtdcMulticastGroupInfoField(object):
    r"""UDP组播组信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    GroupIP: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcMulticastGroupInfoField_GroupIP_get, _soptthosttraderapi.CThostFtdcMulticastGroupInfoField_GroupIP_set, doc=r"""组播组IP地址""")
    GroupPort: "ctp_sopt::TThostFtdcIPPortType" = property(_soptthosttraderapi.CThostFtdcMulticastGroupInfoField_GroupPort_get, _soptthosttraderapi.CThostFtdcMulticastGroupInfoField_GroupPort_set, doc=r"""组播组IP端口""")
    SourceIP: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcMulticastGroupInfoField_SourceIP_get, _soptthosttraderapi.CThostFtdcMulticastGroupInfoField_SourceIP_set, doc=r"""源地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcMulticastGroupInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcMulticastGroupInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcMulticastGroupInfoField

# Register CThostFtdcMulticastGroupInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcMulticastGroupInfoField_swigregister(CThostFtdcMulticastGroupInfoField)
class CThostFtdcTradingAccountReserveField(object):
    r"""资金账户基本准备金"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountReserveField_BrokerID_get, _soptthosttraderapi.CThostFtdcTradingAccountReserveField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountReserveField_AccountID_get, _soptthosttraderapi.CThostFtdcTradingAccountReserveField_AccountID_set, doc=r"""投资者帐号""")
    Reserve: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcTradingAccountReserveField_Reserve_get, _soptthosttraderapi.CThostFtdcTradingAccountReserveField_Reserve_set, doc=r"""基本准备金""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcTradingAccountReserveField_CurrencyID_get, _soptthosttraderapi.CThostFtdcTradingAccountReserveField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcTradingAccountReserveField_swiginit(self, _soptthosttraderapi.new_CThostFtdcTradingAccountReserveField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTradingAccountReserveField

# Register CThostFtdcTradingAccountReserveField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTradingAccountReserveField_swigregister(CThostFtdcTradingAccountReserveField)
class CThostFtdcQryLoginForbiddenIPField(object):
    r"""查询禁止登录IP"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_reserve1_get, _soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_IPAddress_get, _soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryLoginForbiddenIPField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryLoginForbiddenIPField

# Register CThostFtdcQryLoginForbiddenIPField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryLoginForbiddenIPField_swigregister(CThostFtdcQryLoginForbiddenIPField)
class CThostFtdcQryIPListField(object):
    r"""查询IP列表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcQryIPListField_reserve1_get, _soptthosttraderapi.CThostFtdcQryIPListField_reserve1_set, doc=r"""保留的无效字段""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcQryIPListField_IPAddress_get, _soptthosttraderapi.CThostFtdcQryIPListField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryIPListField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryIPListField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryIPListField

# Register CThostFtdcQryIPListField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryIPListField_swigregister(CThostFtdcQryIPListField)
class CThostFtdcQryUserRightsAssignField(object):
    r"""查询用户下单权限分配表"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryUserRightsAssignField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryUserRightsAssignField_BrokerID_set, doc=r"""应用单元代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryUserRightsAssignField_UserID_get, _soptthosttraderapi.CThostFtdcQryUserRightsAssignField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryUserRightsAssignField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryUserRightsAssignField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryUserRightsAssignField

# Register CThostFtdcQryUserRightsAssignField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryUserRightsAssignField_swigregister(CThostFtdcQryUserRightsAssignField)
class CThostFtdcDBFRecordField(object):
    r"""DBF记录"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DBFComdType: "ctp_sopt::TThostFtdcDBFComdTypeType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFComdType_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFComdType_set, doc=r"""DBF命令类型""")
    DBFComTime: "ctp_sopt::TThostFtdcDBFComTimeType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFComTime_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFComTime_set, doc=r"""DBF时间类型""")
    DBFOComNo: "ctp_sopt::TThostFtdcDBFComNoType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFOComNo_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFOComNo_set, doc=r"""DBF原始流水号类型""")
    DBFComNo: "ctp_sopt::TThostFtdcDBFComNoType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFComNo_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFComNo_set, doc=r"""DBF流水号类型""")
    DBFFdName1: "ctp_sopt::TThostFtdcDBFFdNameType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName1_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName1_set, doc=r"""DBF字段类型""")
    DBFFdContent1: "ctp_sopt::TThostFtdcDBFFdContentType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent1_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent1_set, doc=r"""DBF字段内容类型""")
    DBFFdName2: "ctp_sopt::TThostFtdcDBFFdNameType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName2_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName2_set, doc=r"""DBF字段类型""")
    DBFFdContent2: "ctp_sopt::TThostFtdcDBFFdContentType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent2_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent2_set, doc=r"""DBF字段内容类型""")
    DBFFdName3: "ctp_sopt::TThostFtdcDBFFdNameType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName3_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName3_set, doc=r"""DBF字段类型""")
    DBFFdContent3: "ctp_sopt::TThostFtdcDBFFdContentType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent3_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent3_set, doc=r"""DBF字段内容类型""")
    DBFFdName4: "ctp_sopt::TThostFtdcDBFFdNameType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName4_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdName4_set, doc=r"""DBF字段类型""")
    DBFFdContent4: "ctp_sopt::TThostFtdcDBFFdContentType" = property(_soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent4_get, _soptthosttraderapi.CThostFtdcDBFRecordField_DBFFdContent4_set, doc=r"""DBF字段内容类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcDBFRecordField_swiginit(self, _soptthosttraderapi.new_CThostFtdcDBFRecordField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcDBFRecordField

# Register CThostFtdcDBFRecordField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcDBFRecordField_swigregister(CThostFtdcDBFRecordField)
class CThostFtdcAccountPropertyField(object):
    r"""银行账户属性"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_BrokerID_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_BrokerID_set, doc=r"""经纪公司代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_AccountID_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_AccountID_set, doc=r"""投资者帐号""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_BankID_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_BankID_set, doc=r"""银行统一标识类型""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_BankAccount_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_BankAccount_set, doc=r"""银行账户""")
    OpenName: "ctp_sopt::TThostFtdcInvestorFullNameType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OpenName_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OpenName_set, doc=r"""银行账户的开户人名称""")
    OpenBank: "ctp_sopt::TThostFtdcOpenBankType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OpenBank_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OpenBank_set, doc=r"""银行账户的开户行""")
    IsActive: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_IsActive_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_IsActive_set, doc=r"""是否活跃""")
    AccountSourceType: "ctp_sopt::TThostFtdcAccountSourceTypeType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_AccountSourceType_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_AccountSourceType_set, doc=r"""账户来源""")
    OpenDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OpenDate_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OpenDate_set, doc=r"""开户日期""")
    CancelDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_CancelDate_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_CancelDate_set, doc=r"""注销日期""")
    OperatorID: "ctp_sopt::TThostFtdcOperatorIDType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OperatorID_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OperatorID_set, doc=r"""录入员代码""")
    OperateDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OperateDate_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OperateDate_set, doc=r"""录入日期""")
    OperateTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_OperateTime_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_OperateTime_set, doc=r"""录入时间""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcAccountPropertyField_CurrencyID_get, _soptthosttraderapi.CThostFtdcAccountPropertyField_CurrencyID_set, doc=r"""币种代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAccountPropertyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAccountPropertyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAccountPropertyField

# Register CThostFtdcAccountPropertyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAccountPropertyField_swigregister(CThostFtdcAccountPropertyField)
class CThostFtdcQryCurrDRIdentityField(object):
    r"""查询当前交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcQryCurrDRIdentityField_DRIdentityID_get, _soptthosttraderapi.CThostFtdcQryCurrDRIdentityField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryCurrDRIdentityField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryCurrDRIdentityField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryCurrDRIdentityField

# Register CThostFtdcQryCurrDRIdentityField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryCurrDRIdentityField_swigregister(CThostFtdcQryCurrDRIdentityField)
class CThostFtdcCurrDRIdentityField(object):
    r"""当前交易中心"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcCurrDRIdentityField_DRIdentityID_get, _soptthosttraderapi.CThostFtdcCurrDRIdentityField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcCurrDRIdentityField_swiginit(self, _soptthosttraderapi.new_CThostFtdcCurrDRIdentityField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcCurrDRIdentityField

# Register CThostFtdcCurrDRIdentityField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcCurrDRIdentityField_swigregister(CThostFtdcCurrDRIdentityField)
class CThostFtdcReqReserveOpenAccountTpdField(object):
    r"""第三方存管业务开户预指定请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SessionID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Gender_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CustType_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Address_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Telephone_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Fax_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_EMail_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_AccountID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Password_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_InstallID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Digest_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_OperNo_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_UserID_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_UserID_set, doc=r"""用户标识""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankChal_get, _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_BankChal_set, doc=r"""银行转账通道""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqReserveOpenAccountTpdField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqReserveOpenAccountTpdField

# Register CThostFtdcReqReserveOpenAccountTpdField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqReserveOpenAccountTpdField_swigregister(CThostFtdcReqReserveOpenAccountTpdField)
class CThostFtdcReserveOpenAccountTpdField(object):
    r"""第三方存管业务开户预指定"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeCode_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeDate_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeTime_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSerial_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradingDay_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_LastFragment_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SessionID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CustomerName_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_IdCardType_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Gender_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CountryCode_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CustType_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Address_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ZipCode_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Telephone_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Fax_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_EMail_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankAccount_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_AccountID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Password_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_InstallID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Digest_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankAccType_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_DeviceID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_OperNo_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_UserID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_UserID_set, doc=r"""用户标识""")
    SecDaBeBl: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SecDaBeBl_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_SecDaBeBl_set, doc=r"""证券资金日初余额""")
    BankChal: "ctp_sopt::TThostFtdcBankChannelType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankChal_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_BankChal_set, doc=r"""银行转账通道""")
    ReserveOpenAccStas: "ctp_sopt::TThostFtdcReserveOpenAccStasType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ReserveOpenAccStas_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ReserveOpenAccStas_set, doc=r"""预约开户状态""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ErrorID_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReserveOpenAccountTpdField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReserveOpenAccountTpdField

# Register CThostFtdcReserveOpenAccountTpdField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReserveOpenAccountTpdField_swigregister(CThostFtdcReserveOpenAccountTpdField)
class CThostFtdcReqResOpenAccConfirmTpdField(object):
    r"""第三方存管业务开户确认请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_SessionID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Gender_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CustType_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Address_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Telephone_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Fax_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_EMail_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_AccountID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Password_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Password_set, doc=r"""期货密码""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_InstallID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_CashExchangeCode_set, doc=r"""汇钞标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_DeviceID_set, doc=r"""渠道标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_OperNo_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_OperNo_set, doc=r"""交易柜员""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_UserID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_UserID_set, doc=r"""用户标识""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TID_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_TID_set, doc=r"""交易ID""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Digest_get, _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_Digest_set, doc=r"""摘要""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqResOpenAccConfirmTpdField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqResOpenAccConfirmTpdField

# Register CThostFtdcReqResOpenAccConfirmTpdField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqResOpenAccConfirmTpdField_swigregister(CThostFtdcReqResOpenAccConfirmTpdField)
class CThostFtdcResOpenAccConfirmTpdField(object):
    r"""第三方存管业务开户确认"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeCode_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankBranchID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeDate_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeTime_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSerial_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradingDay_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_PlateSerial_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_LastFragment_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_SessionID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CustomerName_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_IdCardType_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Gender_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CountryCode_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CustType_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Address_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ZipCode_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Telephone_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_MobilePhone_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Fax_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_EMail_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankAccount_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankPassWord_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_AccountID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Password_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Password_set, doc=r"""期货密码""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankAccType_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankAccType_set, doc=r"""银行帐号类型""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_InstallID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_InstallID_set, doc=r"""安装编号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CurrencyID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_CashExchangeCode_set, doc=r"""汇钞标志""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_DeviceID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_DeviceID_set, doc=r"""渠道标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_OperNo_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_OperNo_set, doc=r"""交易柜员""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_UserID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_UserID_set, doc=r"""用户标识""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_TID_set, doc=r"""交易ID""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Digest_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_Digest_set, doc=r"""摘要""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ErrorID_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_swiginit(self, _soptthosttraderapi.new_CThostFtdcResOpenAccConfirmTpdField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcResOpenAccConfirmTpdField

# Register CThostFtdcResOpenAccConfirmTpdField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcResOpenAccConfirmTpdField_swigregister(CThostFtdcResOpenAccConfirmTpdField)
class CThostFtdcReqSecuritiesDepositInterestField(object):
    r"""第三方存管证券资金结息请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeCode_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankBranchID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeDate_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeTime_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSerial_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradingDay_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_PlateSerial_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_LastFragment_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_SessionID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CustomerName_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_IdCardType_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Gender_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CountryCode_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CustType_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Address_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_ZipCode_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Telephone_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_MobilePhone_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Fax_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_EMail_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankAccount_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankPassWord_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_AccountID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Password_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_InstallID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_FutureSerial_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_FutureSerial_set, doc=r"""期货公司流水号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CurrencyID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Digest_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankAccType_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_DeviceID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_OperNo_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_UserID_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_UserID_set, doc=r"""用户标识""")
    DepositInterest: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_DepositInterest_get, _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_DepositInterest_set, doc=r"""结息净额""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqSecuritiesDepositInterestField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqSecuritiesDepositInterestField

# Register CThostFtdcReqSecuritiesDepositInterestField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqSecuritiesDepositInterestField_swigregister(CThostFtdcReqSecuritiesDepositInterestField)
class CThostFtdcSecuritiesDepositInterestField(object):
    r"""第三方存管证券资金结息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TradeCode: "ctp_sopt::TThostFtdcTradeCodeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeCode_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeCode_set, doc=r"""业务功能码""")
    BankID: "ctp_sopt::TThostFtdcBankIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankID_set, doc=r"""银行代码""")
    BankBranchID: "ctp_sopt::TThostFtdcBankBrchIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankBranchID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankBranchID_set, doc=r"""银行分支机构代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerID_set, doc=r"""期商代码""")
    BrokerBranchID: "ctp_sopt::TThostFtdcFutureBranchIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerBranchID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerBranchID_set, doc=r"""期商分支机构代码""")
    TradeDate: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeDate_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeDate_set, doc=r"""交易日期""")
    TradeTime: "ctp_sopt::TThostFtdcTradeTimeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeTime_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradeTime_set, doc=r"""交易时间""")
    BankSerial: "ctp_sopt::TThostFtdcBankSerialType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSerial_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSerial_set, doc=r"""银行流水号""")
    TradingDay: "ctp_sopt::TThostFtdcTradeDateType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradingDay_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TradingDay_set, doc=r"""交易系统日期""")
    PlateSerial: "ctp_sopt::TThostFtdcSerialType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_PlateSerial_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_PlateSerial_set, doc=r"""银期平台消息流水号""")
    LastFragment: "ctp_sopt::TThostFtdcLastFragmentType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_LastFragment_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_LastFragment_set, doc=r"""最后分片标志""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_SessionID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_SessionID_set, doc=r"""会话号""")
    CustomerName: "ctp_sopt::TThostFtdcIndividualNameType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CustomerName_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CustomerName_set, doc=r"""客户姓名""")
    IdCardType: "ctp_sopt::TThostFtdcIdCardTypeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_IdCardType_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_IdCardType_set, doc=r"""证件类型""")
    IdentifiedCardNo: "ctp_sopt::TThostFtdcIdentifiedCardNoType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_IdentifiedCardNo_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_IdentifiedCardNo_set, doc=r"""证件号码""")
    Gender: "ctp_sopt::TThostFtdcGenderType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Gender_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Gender_set, doc=r"""性别""")
    CountryCode: "ctp_sopt::TThostFtdcCountryCodeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CountryCode_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CountryCode_set, doc=r"""国家代码""")
    CustType: "ctp_sopt::TThostFtdcCustTypeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CustType_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CustType_set, doc=r"""客户类型""")
    Address: "ctp_sopt::TThostFtdcAddressType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Address_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Address_set, doc=r"""地址""")
    ZipCode: "ctp_sopt::TThostFtdcZipCodeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ZipCode_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ZipCode_set, doc=r"""邮编""")
    Telephone: "ctp_sopt::TThostFtdcTelephoneType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Telephone_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Telephone_set, doc=r"""电话号码""")
    MobilePhone: "ctp_sopt::TThostFtdcMobilePhoneType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_MobilePhone_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_MobilePhone_set, doc=r"""手机""")
    Fax: "ctp_sopt::TThostFtdcFaxType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Fax_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Fax_set, doc=r"""传真""")
    EMail: "ctp_sopt::TThostFtdcEMailType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_EMail_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_EMail_set, doc=r"""电子邮件""")
    MoneyAccountStatus: "ctp_sopt::TThostFtdcMoneyAccountStatusType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_MoneyAccountStatus_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_MoneyAccountStatus_set, doc=r"""资金账户状态""")
    BankAccount: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankAccount_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankAccount_set, doc=r"""银行帐号""")
    BankPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankPassWord_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankPassWord_set, doc=r"""银行密码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_AccountID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_AccountID_set, doc=r"""投资者帐号""")
    Password: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Password_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Password_set, doc=r"""期货密码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_InstallID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_InstallID_set, doc=r"""安装编号""")
    FutureSerial: "ctp_sopt::TThostFtdcFutureSerialType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_FutureSerial_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_FutureSerial_set, doc=r"""期货公司流水号""")
    VerifyCertNoFlag: "ctp_sopt::TThostFtdcYesNoIndicatorType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_VerifyCertNoFlag_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_VerifyCertNoFlag_set, doc=r"""验证客户证件号码标志""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CurrencyID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CurrencyID_set, doc=r"""币种代码""")
    CashExchangeCode: "ctp_sopt::TThostFtdcCashExchangeCodeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CashExchangeCode_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_CashExchangeCode_set, doc=r"""汇钞标志""")
    Digest: "ctp_sopt::TThostFtdcDigestType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Digest_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_Digest_set, doc=r"""摘要""")
    BankAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankAccType_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankAccType_set, doc=r"""银行帐号类型""")
    DeviceID: "ctp_sopt::TThostFtdcDeviceIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_DeviceID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_DeviceID_set, doc=r"""渠道标志""")
    BankSecuAccType: "ctp_sopt::TThostFtdcBankAccTypeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSecuAccType_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSecuAccType_set, doc=r"""期货单位帐号类型""")
    BrokerIDByBank: "ctp_sopt::TThostFtdcBankCodingForFutureType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerIDByBank_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BrokerIDByBank_set, doc=r"""期货公司银行编码""")
    BankSecuAcc: "ctp_sopt::TThostFtdcBankAccountType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSecuAcc_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankSecuAcc_set, doc=r"""期货单位帐号""")
    BankPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankPwdFlag_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_BankPwdFlag_set, doc=r"""银行密码标志""")
    SecuPwdFlag: "ctp_sopt::TThostFtdcPwdFlagType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_SecuPwdFlag_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_SecuPwdFlag_set, doc=r"""期货资金密码核对标志""")
    OperNo: "ctp_sopt::TThostFtdcOperNoType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_OperNo_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_OperNo_set, doc=r"""交易柜员""")
    TID: "ctp_sopt::TThostFtdcTIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_TID_set, doc=r"""交易ID""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_UserID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_UserID_set, doc=r"""用户标识""")
    DepositInterest: "ctp_sopt::TThostFtdcTradeAmountType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_DepositInterest_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_DepositInterest_set, doc=r"""结息净额""")
    InterestType: "ctp_sopt::TThostFtdcSFInterestTypeType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_InterestType_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_InterestType_set, doc=r"""结息类型""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ErrorID_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_ErrorMsg_set, doc=r"""错误信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSecuritiesDepositInterestField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSecuritiesDepositInterestField

# Register CThostFtdcSecuritiesDepositInterestField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSecuritiesDepositInterestField_swigregister(CThostFtdcSecuritiesDepositInterestField)
class CThostFtdcBrokerBreakSectionField(object):
    r"""经纪公司非交易时间段"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_BrokerID_set, doc=r"""经纪公司代码""")
    TimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_TimeStart_get, _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_TimeStart_set, doc=r"""开始时间""")
    TimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_TimeEnd_get, _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_TimeEnd_set, doc=r"""结束时间""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_SequenceNo_get, _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_SequenceNo_set, doc=r"""序号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerBreakSectionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerBreakSectionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerBreakSectionField

# Register CThostFtdcBrokerBreakSectionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerBreakSectionField_swigregister(CThostFtdcBrokerBreakSectionField)
class CThostFtdcBrokerLockInvestorStockField(object):
    r"""经纪公司锁定客户现券"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_BrokerID_get, _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_InvestorID_get, _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_InstrumentID_get, _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_InstrumentID_set, doc=r"""标的合约代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_Volume_get, _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_Volume_set, doc=r"""数量""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcBrokerLockInvestorStockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcBrokerLockInvestorStockField

# Register CThostFtdcBrokerLockInvestorStockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcBrokerLockInvestorStockField_swigregister(CThostFtdcBrokerLockInvestorStockField)
class CThostFtdcQryBrokerLockInvestorStockField(object):
    r"""查询经纪公司锁定客户现券"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_ExchangeID_set, doc=r"""交易所代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_InstrumentID_set, doc=r"""合约代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryBrokerLockInvestorStockField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryBrokerLockInvestorStockField

# Register CThostFtdcQryBrokerLockInvestorStockField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryBrokerLockInvestorStockField_swigregister(CThostFtdcQryBrokerLockInvestorStockField)
class CThostFtdcExecIsCheckUnderlyingField(object):
    r"""行权时是否检查标的现券"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_ExchangeID_set, doc=r"""交易所代码""")
    UnderlyingInstrID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_UnderlyingInstrID_get, _soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_UnderlyingInstrID_set, doc=r"""基础商品代码""")
    IsCheck: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_IsCheck_get, _soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_IsCheck_set, doc=r"""是否检查""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecIsCheckUnderlyingField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecIsCheckUnderlyingField

# Register CThostFtdcExecIsCheckUnderlyingField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecIsCheckUnderlyingField_swigregister(CThostFtdcExecIsCheckUnderlyingField)
class CThostFtdcQryExecIsCheckUnderlyingField(object):
    r"""查询行权时是否检查标的现券"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_ExchangeID_set, doc=r"""交易所代码""")
    UnderlyingInstrID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_UnderlyingInstrID_get, _soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_UnderlyingInstrID_set, doc=r"""基础商品代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExecIsCheckUnderlyingField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExecIsCheckUnderlyingField

# Register CThostFtdcQryExecIsCheckUnderlyingField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExecIsCheckUnderlyingField_swigregister(CThostFtdcQryExecIsCheckUnderlyingField)
class CThostFtdcPBUInvestorMapField(object):
    r"""投资者与PBU指定关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_BrokerID_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_ExchangeID_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_ExchangeID_set, doc=r"""交易所代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_InvestorID_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_InvestorID_set, doc=r"""投资者代码""")
    PBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_PBU_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_PBU_set, doc=r"""指定交易单元号""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_ClientID_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_ClientID_set, doc=r"""证券账户""")
    OperationDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_OperationDate_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_OperationDate_set, doc=r"""日期""")
    OperationTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcPBUInvestorMapField_OperationTime_get, _soptthosttraderapi.CThostFtdcPBUInvestorMapField_OperationTime_set, doc=r"""时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcPBUInvestorMapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcPBUInvestorMapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcPBUInvestorMapField

# Register CThostFtdcPBUInvestorMapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcPBUInvestorMapField_swigregister(CThostFtdcPBUInvestorMapField)
class CThostFtdcInputExecCombineOrderField(object):
    r"""输入的行权指令合并"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_InvestorID_set, doc=r"""投资者代码""")
    CallInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_CallInstrumentID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_CallInstrumentID_set, doc=r"""看涨合约代码""")
    PutInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_PutInstrumentID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_PutInstrumentID_set, doc=r"""看跌合约代码""")
    ExecCombineOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ExecCombineOrderRef_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ExecCombineOrderRef_set, doc=r"""执行宣告合并引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_UserID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_Volume_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_BusinessUnit_set, doc=r"""业务单元""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ActionType_set, doc=r"""执行类型""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ExchangeID_set, doc=r"""交易所代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_ClientID_set, doc=r"""交易编码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputExecCombineOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputExecCombineOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputExecCombineOrderField

# Register CThostFtdcInputExecCombineOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputExecCombineOrderField_swigregister(CThostFtdcInputExecCombineOrderField)
class CThostFtdcInputExecCombineOrderActionField(object):
    r"""输入行权指令合并操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecCombineOrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderActionRef_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderActionRef_set, doc=r"""执行宣告合并操作引用""")
    ExecCombineOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderRef_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderRef_set, doc=r"""执行宣告合并引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecCombineOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderSysID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ExecCombineOrderSysID_set, doc=r"""执行宣告合并操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_UserID_set, doc=r"""用户代码""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputExecCombineOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputExecCombineOrderActionField

# Register CThostFtdcInputExecCombineOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputExecCombineOrderActionField_swigregister(CThostFtdcInputExecCombineOrderActionField)
class CThostFtdcExecCombineOrderField(object):
    r"""行权指令合并"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_InvestorID_set, doc=r"""投资者代码""")
    CallInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_CallInstrumentID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_CallInstrumentID_set, doc=r"""看涨合约代码""")
    PutInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_PutInstrumentID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_PutInstrumentID_set, doc=r"""看跌合约代码""")
    ExecCombineOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderRef_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderRef_set, doc=r"""执行宣告合并引用""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_UserID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_UserID_set, doc=r"""用户代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_Volume_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_Volume_set, doc=r"""数量""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_RequestID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_RequestID_set, doc=r"""请求编号""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_BusinessUnit_set, doc=r"""业务单元""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ActionType_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ActionType_set, doc=r"""执行类型""")
    ExecCombineOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderLocalID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderLocalID_set, doc=r"""本地执行宣告合并编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ClientID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ClientID_set, doc=r"""客户代码""")
    UnderlyingInstrID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_UnderlyingInstrID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_UnderlyingInstrID_set, doc=r"""标的合约在交易所的代码""")
    ExchangeCallInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangeCallInstID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangeCallInstID_set, doc=r"""看涨合约在交易所的代码""")
    ExchangePutInstID: "ctp_sopt::TThostFtdcExchangeInstIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangePutInstID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExchangePutInstID_set, doc=r"""看跌合约在交易所的代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_TraderID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_InstallID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_InstallID_set, doc=r"""安装编号""")
    OrderSubmitStatus: "ctp_sopt::TThostFtdcOrderSubmitStatusType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_OrderSubmitStatus_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_OrderSubmitStatus_set, doc=r"""执行宣告合并提交状态""")
    NotifySequence: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_NotifySequence_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_NotifySequence_set, doc=r"""报单提示序号""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_TradingDay_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_SettlementID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_SettlementID_set, doc=r"""结算编号""")
    ExecCombineOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderSysID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecCombineOrderSysID_set, doc=r"""执行宣告合并编号""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_InsertDate_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_InsertTime_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_InsertTime_set, doc=r"""插入时间""")
    CancelTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_CancelTime_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_CancelTime_set, doc=r"""撤销时间""")
    ExecResult: "ctp_sopt::TThostFtdcExecResultType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecResult_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ExecResult_set, doc=r"""执行结果""")
    ClearingPartID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ClearingPartID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ClearingPartID_set, doc=r"""结算会员编号""")
    SequenceNo: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_SequenceNo_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_SequenceNo_set, doc=r"""序号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_FrontID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_SessionID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_SessionID_set, doc=r"""会话编号""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_UserProductInfo_set, doc=r"""用户端产品信息""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_StatusMsg_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_StatusMsg_set, doc=r"""状态信息""")
    ActiveUserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_ActiveUserID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_ActiveUserID_set, doc=r"""操作用户代码""")
    BrokerExecCombineOrderSeq: "ctp_sopt::TThostFtdcSequenceNoType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_BrokerExecCombineOrderSeq_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_BrokerExecCombineOrderSeq_set, doc=r"""经纪公司报单编号""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_BranchID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_InvestUnitID_set, doc=r"""投资单元代码""")
    AccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_AccountID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_AccountID_set, doc=r"""资金账号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_CurrencyID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_CurrencyID_set, doc=r"""币种代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_reserve1_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_MacAddress_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_OwnerType_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderField_IPAddress_get, _soptthosttraderapi.CThostFtdcExecCombineOrderField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecCombineOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecCombineOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecCombineOrderField

# Register CThostFtdcExecCombineOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecCombineOrderField_swigregister(CThostFtdcExecCombineOrderField)
class CThostFtdcExecCombineOrderActionField(object):
    r"""行权指令合并操作"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InvestorID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InvestorID_set, doc=r"""投资者代码""")
    ExecCombineOrderActionRef: "ctp_sopt::TThostFtdcOrderActionRefType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderActionRef_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderActionRef_set, doc=r"""执行宣告合并操作引用""")
    ExecCombineOrderRef: "ctp_sopt::TThostFtdcOrderRefType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderRef_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderRef_set, doc=r"""执行宣告合并引用""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_RequestID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_RequestID_set, doc=r"""请求编号""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_FrontID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_SessionID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_SessionID_set, doc=r"""会话编号""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExchangeID_set, doc=r"""交易所代码""")
    ExecCombineOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderSysID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderSysID_set, doc=r"""执行宣告合并操作编号""")
    ActionFlag: "ctp_sopt::TThostFtdcActionFlagType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionFlag_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionFlag_set, doc=r"""操作标志""")
    ActionDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionDate_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionDate_set, doc=r"""操作日期""")
    ActionTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionTime_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionTime_set, doc=r"""操作时间""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_TraderID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InstallID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InstallID_set, doc=r"""安装编号""")
    ExecCombineOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderLocalID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ExecCombineOrderLocalID_set, doc=r"""本地执行宣告合并编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionLocalID_set, doc=r"""操作本地编号""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ParticipantID_set, doc=r"""会员代码""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ClientID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ClientID_set, doc=r"""客户代码""")
    BusinessUnit: "ctp_sopt::TThostFtdcBusinessUnitType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BusinessUnit_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BusinessUnit_set, doc=r"""业务单元""")
    OrderActionStatus: "ctp_sopt::TThostFtdcOrderActionStatusType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_OrderActionStatus_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_OrderActionStatus_set, doc=r"""报单操作状态""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_UserID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_UserID_set, doc=r"""用户代码""")
    ActionType: "ctp_sopt::TThostFtdcActionTypeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionType_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_ActionType_set, doc=r"""执行类型""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_StatusMsg_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_StatusMsg_set, doc=r"""状态信息""")
    CallInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_CallInstrumentID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_CallInstrumentID_set, doc=r"""看涨合约代码""")
    PutInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_PutInstrumentID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_PutInstrumentID_set, doc=r"""看跌合约代码""")
    BranchID: "ctp_sopt::TThostFtdcBranchIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BranchID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_BranchID_set, doc=r"""营业部编号""")
    InvestUnitID: "ctp_sopt::TThostFtdcInvestUnitIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InvestUnitID_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_InvestUnitID_set, doc=r"""投资单元代码""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_reserve1_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_reserve1_set, doc=r"""保留的无效字段""")
    MacAddress: "ctp_sopt::TThostFtdcMacAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_MacAddress_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_MacAddress_set, doc=r"""Mac地址""")
    OwnerType: "ctp_sopt::TThostFtdcOwnerTypeType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_OwnerType_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_OwnerType_set, doc=r"""所有者类型""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_LoginPBU_set, doc=r"""登陆PBU""")
    IPAddress: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_IPAddress_get, _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_IPAddress_set, doc=r"""IP地址""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecCombineOrderActionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecCombineOrderActionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecCombineOrderActionField

# Register CThostFtdcExecCombineOrderActionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecCombineOrderActionField_swigregister(CThostFtdcExecCombineOrderActionField)
class CThostFtdcQryExecCombineOrderField(object):
    r"""行权指令合并查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InvestorID_set, doc=r"""投资者代码""")
    CallInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_CallInstrumentID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_CallInstrumentID_set, doc=r"""看涨合约代码""")
    PutInstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_PutInstrumentID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_PutInstrumentID_set, doc=r"""看跌合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_ExchangeID_set, doc=r"""交易所代码""")
    ExecCombineOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_ExecCombineOrderSysID_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_ExecCombineOrderSysID_set, doc=r"""执行宣告合并编号""")
    InsertTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InsertTimeStart_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InsertTimeStart_set, doc=r"""开始时间""")
    InsertTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InsertTimeEnd_get, _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_InsertTimeEnd_set, doc=r"""结束时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryExecCombineOrderField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryExecCombineOrderField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryExecCombineOrderField

# Register CThostFtdcQryExecCombineOrderField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryExecCombineOrderField_swigregister(CThostFtdcQryExecCombineOrderField)
class CThostFtdcUserSystemInfoField(object):
    r"""用户系统信息"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_BrokerID_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_BrokerID_set, doc=r"""经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_UserID_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_UserID_set, doc=r"""用户代码""")
    ClientSystemInfoLen: "ctp_sopt::TThostFtdcSystemInfoLenType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientSystemInfoLen_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientSystemInfoLen_set, doc=r"""用户端系统内部信息长度""")
    ClientSystemInfo: "ctp_sopt::TThostFtdcClientSystemInfoType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientSystemInfo_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientSystemInfo_set, doc=r"""用户端系统内部信息""")
    reserve1: "ctp_sopt::TThostFtdcOldIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_reserve1_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_reserve1_set, doc=r"""保留的无效字段""")
    ClientIPPort: "ctp_sopt::TThostFtdcIPPortType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientIPPort_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientIPPort_set, doc=r"""终端IP端口""")
    ClientLoginTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientLoginTime_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientLoginTime_set, doc=r"""登录成功时间""")
    ClientAppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientAppID_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientAppID_set, doc=r"""App代码""")
    ClientPublicIP: "ctp_sopt::TThostFtdcIPAddressType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientPublicIP_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientPublicIP_set, doc=r"""用户公网IP""")
    ClientLoginRemark: "ctp_sopt::TThostFtdcClientLoginRemarkType" = property(_soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientLoginRemark_get, _soptthosttraderapi.CThostFtdcUserSystemInfoField_ClientLoginRemark_set, doc=r"""客户登录备注2""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcUserSystemInfoField_swiginit(self, _soptthosttraderapi.new_CThostFtdcUserSystemInfoField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcUserSystemInfoField

# Register CThostFtdcUserSystemInfoField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcUserSystemInfoField_swigregister(CThostFtdcUserSystemInfoField)
class CThostFtdcReqApiHandshakeField(object):
    r"""api握手请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    CryptoKeyVersion: "ctp_sopt::TThostFtdcCryptoKeyVersionType" = property(_soptthosttraderapi.CThostFtdcReqApiHandshakeField_CryptoKeyVersion_get, _soptthosttraderapi.CThostFtdcReqApiHandshakeField_CryptoKeyVersion_set, doc=r"""api与front通信密钥版本号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqApiHandshakeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqApiHandshakeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqApiHandshakeField

# Register CThostFtdcReqApiHandshakeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqApiHandshakeField_swigregister(CThostFtdcReqApiHandshakeField)
class CThostFtdcRspApiHandshakeField(object):
    r"""front发给api的握手回复"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontHandshakeDataLen: "ctp_sopt::TThostFtdcHandshakeDataLenType" = property(_soptthosttraderapi.CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_get, _soptthosttraderapi.CThostFtdcRspApiHandshakeField_FrontHandshakeDataLen_set, doc=r"""握手回复数据长度""")
    FrontHandshakeData: "ctp_sopt::TThostFtdcHandshakeDataType" = property(_soptthosttraderapi.CThostFtdcRspApiHandshakeField_FrontHandshakeData_get, _soptthosttraderapi.CThostFtdcRspApiHandshakeField_FrontHandshakeData_set, doc=r"""握手回复数据""")
    IsApiAuthEnabled: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_get, _soptthosttraderapi.CThostFtdcRspApiHandshakeField_IsApiAuthEnabled_set, doc=r"""API认证是否开启""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRspApiHandshakeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRspApiHandshakeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRspApiHandshakeField

# Register CThostFtdcRspApiHandshakeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRspApiHandshakeField_swigregister(CThostFtdcRspApiHandshakeField)
class CThostFtdcReqVerifyApiKeyField(object):
    r"""api给front的验证key的请求"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ApiHandshakeDataLen: "ctp_sopt::TThostFtdcHandshakeDataLenType" = property(_soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_get, _soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeDataLen_set, doc=r"""握手回复数据长度""")
    ApiHandshakeData: "ctp_sopt::TThostFtdcHandshakeDataType" = property(_soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_get, _soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_ApiHandshakeData_set, doc=r"""握手回复数据""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqVerifyApiKeyField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqVerifyApiKeyField

# Register CThostFtdcReqVerifyApiKeyField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqVerifyApiKeyField_swigregister(CThostFtdcReqVerifyApiKeyField)
class CThostFtdcAppIDAuthAssignField(object):
    r"""App客户端权限分配"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAppIDAuthAssignField_BrokerID_get, _soptthosttraderapi.CThostFtdcAppIDAuthAssignField_BrokerID_set, doc=r"""经纪公司代码""")
    AppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcAppIDAuthAssignField_AppID_get, _soptthosttraderapi.CThostFtdcAppIDAuthAssignField_AppID_set, doc=r"""App代码""")
    DRIdentityID: "ctp_sopt::TThostFtdcDRIdentityIDType" = property(_soptthosttraderapi.CThostFtdcAppIDAuthAssignField_DRIdentityID_get, _soptthosttraderapi.CThostFtdcAppIDAuthAssignField_DRIdentityID_set, doc=r"""交易中心代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAppIDAuthAssignField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAppIDAuthAssignField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAppIDAuthAssignField

# Register CThostFtdcAppIDAuthAssignField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAppIDAuthAssignField_swigregister(CThostFtdcAppIDAuthAssignField)
class CThostFtdcAppAuthenticationCodeField(object):
    r"""App认证码"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_BrokerID_get, _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_BrokerID_set, doc=r"""经纪公司代码""")
    AppID: "ctp_sopt::TThostFtdcAppIDType" = property(_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AppID_get, _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AppID_set, doc=r"""App代码""")
    AuthCode: "ctp_sopt::TThostFtdcAuthCodeType" = property(_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AuthCode_get, _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AuthCode_set, doc=r"""认证码""")
    PreAuthCode: "ctp_sopt::TThostFtdcAuthCodeType" = property(_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_PreAuthCode_get, _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_PreAuthCode_set, doc=r"""旧认证码""")
    AppType: "ctp_sopt::TThostFtdcAppTypeType" = property(_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AppType_get, _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_AppType_set, doc=r"""App类型""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAppAuthenticationCodeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAppAuthenticationCodeField

# Register CThostFtdcAppAuthenticationCodeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAppAuthenticationCodeField_swigregister(CThostFtdcAppAuthenticationCodeField)
class CThostFtdcQueryFreqField(object):
    r"""查询频率，每秒查询比数"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    QueryFreq: "ctp_sopt::TThostFtdcQueryFreqType" = property(_soptthosttraderapi.CThostFtdcQueryFreqField_QueryFreq_get, _soptthosttraderapi.CThostFtdcQueryFreqField_QueryFreq_set, doc=r"""查询频率""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQueryFreqField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQueryFreqField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQueryFreqField

# Register CThostFtdcQueryFreqField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQueryFreqField_swigregister(CThostFtdcQueryFreqField)
class CThostFtdcExecCombineTimeSectionField(object):
    r"""合并行权时间段"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_BrokerID_get, _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_ExchangeID_set, doc=r"""交易所代码""")
    StartTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_StartTime_get, _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_StartTime_set, doc=r"""开始时间""")
    EndTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_EndTime_get, _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_EndTime_set, doc=r"""结束时间""")
    CloseFrozExecTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_CloseFrozExecTime_get, _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_CloseFrozExecTime_set, doc=r"""挂单允许行权起始时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExecCombineTimeSectionField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExecCombineTimeSectionField

# Register CThostFtdcExecCombineTimeSectionField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExecCombineTimeSectionField_swigregister(CThostFtdcExecCombineTimeSectionField)
class CThostFtdcExchangeExecCombineOrderActionErrorField(object):
    r"""交易所操作错误"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_BrokerID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_BrokerID_set, doc=r"""经纪公司代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ExecCombineOrderSysID: "ctp_sopt::TThostFtdcExecOrderSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExecCombineOrderSysID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExecCombineOrderSysID_set, doc=r"""执行宣告合并编号""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_InstallID_set, doc=r"""安装编号""")
    ExecCombineOrderLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExecCombineOrderLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ExecCombineOrderLocalID_set, doc=r"""本地执行宣告合并编号""")
    ActionLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ActionLocalID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ActionLocalID_set, doc=r"""操作本地编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ErrorMsg_set, doc=r"""错误信息""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_ClientID_set, doc=r"""客户代码""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeExecCombineOrderActionErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeExecCombineOrderActionErrorField

# Register CThostFtdcExchangeExecCombineOrderActionErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeExecCombineOrderActionErrorField_swigregister(CThostFtdcExchangeExecCombineOrderActionErrorField)
class CThostFtdcInvestorProgrammingTypeField(object):
    r"""投资者程序化标识"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_BrokerID_get, _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_InvestorID_get, _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_ExchangeID_set, doc=r"""交易所代码""")
    InvestorProgrammingType: "ctp_sopt::TThostFtdcInvestorProgrammingTypeType" = property(_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_InvestorProgrammingType_get, _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_InvestorProgrammingType_set, doc=r"""投资者程序化标志""")
    Client: "ctp_sopt::TThostFtdcClientNameType" = property(_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_Client_get, _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_Client_set, doc=r"""投资者客户端""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInvestorProgrammingTypeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInvestorProgrammingTypeField

# Register CThostFtdcInvestorProgrammingTypeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInvestorProgrammingTypeField_swigregister(CThostFtdcInvestorProgrammingTypeField)
class CThostFtdcQryInvestorProgrammingTypeField(object):
    r"""查询投资者程序化标识"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_InvestorID_set, doc=r"""投资者代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInvestorProgrammingTypeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInvestorProgrammingTypeField

# Register CThostFtdcQryInvestorProgrammingTypeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInvestorProgrammingTypeField_swigregister(CThostFtdcQryInvestorProgrammingTypeField)
class CThostFtdcExchangeDesignateInsertErrorField(object):
    r"""交易所指定插入错误"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InstallID_set, doc=r"""安装编号""")
    DesignateLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_DesignateLocalID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_DesignateLocalID_set, doc=r"""本地指定编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ErrorMsg_set, doc=r"""错误信息""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_ClientID_set, doc=r"""客户代码""")
    DesignateType: "ctp_sopt::TThostFtdcDesignateTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_DesignateType_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_DesignateType_set, doc=r"""指定方向""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_LoginPBU_set, doc=r"""登陆PBU""")
    InsertDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InsertDate_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InsertDate_set, doc=r"""报单日期""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_InsertTime_set, doc=r"""插入时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeDesignateInsertErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeDesignateInsertErrorField

# Register CThostFtdcExchangeDesignateInsertErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeDesignateInsertErrorField_swigregister(CThostFtdcExchangeDesignateInsertErrorField)
class CThostFtdcExchangeStockDisposalInsertErrorField(object):
    r"""交易所证券处置插入错误"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ExchangeID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ExchangeID_set, doc=r"""交易所代码""")
    ParticipantID: "ctp_sopt::TThostFtdcParticipantIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ParticipantID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ParticipantID_set, doc=r"""会员代码""")
    TraderID: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_TraderID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_TraderID_set, doc=r"""交易所交易员代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InstallID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InstallID_set, doc=r"""安装编号""")
    StockDisposalLocalID: "ctp_sopt::TThostFtdcOrderLocalIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalLocalID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalLocalID_set, doc=r"""本地证券处置编号""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ErrorID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ErrorMsg_set, doc=r"""错误信息""")
    StockDisposalSysID: "ctp_sopt::TThostFtdcStockDisposalSysIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalSysID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalSysID_set, doc=r"""证券处置操作编号""")
    ClientID: "ctp_sopt::TThostFtdcClientIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ClientID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_ClientID_set, doc=r"""客户代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InstrumentID_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InstrumentID_set, doc=r"""合约代码""")
    Volume: "ctp_sopt::TThostFtdcVolumeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_Volume_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_Volume_set, doc=r"""数量""")
    StockDisposalType: "ctp_sopt::TThostFtdcStockDisposalTypeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalType_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_StockDisposalType_set, doc=r"""证券处置方向""")
    InsertTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InsertTime_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_InsertTime_set, doc=r"""插入时间""")
    LoginPBU: "ctp_sopt::TThostFtdcTraderIDType" = property(_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_LoginPBU_get, _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_LoginPBU_set, doc=r"""登陆PBU""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcExchangeStockDisposalInsertErrorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcExchangeStockDisposalInsertErrorField

# Register CThostFtdcExchangeStockDisposalInsertErrorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcExchangeStockDisposalInsertErrorField_swigregister(CThostFtdcExchangeStockDisposalInsertErrorField)
class CThostFtdcQryStockInstrCommissionRateField(object):
    r"""现货标的合约手续费率查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryStockInstrCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryStockInstrCommissionRateField

# Register CThostFtdcQryStockInstrCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryStockInstrCommissionRateField_swigregister(CThostFtdcQryStockInstrCommissionRateField)
class CThostFtdcStockInstrCommissionRateField(object):
    r"""现货标的合约手续费率"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    ExchangeID: "ctp_sopt::TThostFtdcExchangeIDType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_ExchangeID_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_ExchangeID_set, doc=r"""交易所代码""")
    InstrumentID: "ctp_sopt::TThostFtdcInstrumentIDType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InstrumentID_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InstrumentID_set, doc=r"""合约代码""")
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InvestorRange_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BrokerID_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InvestorID_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_InvestorID_set, doc=r"""投资者代码""")
    MinBuyCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_MinBuyCommission_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_MinBuyCommission_set, doc=r"""买最低手续费""")
    MinSellCommission: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_MinSellCommission_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_MinSellCommission_set, doc=r"""卖最低手续费""")
    BuyCommissionRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BuyCommissionRateByMoney_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BuyCommissionRateByMoney_set, doc=r"""合约按金额买手续费率""")
    SellCommissionRateByMoney: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_SellCommissionRateByMoney_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_SellCommissionRateByMoney_set, doc=r"""合约按金额卖手续费率""")
    BuyCommissionRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BuyCommissionRateByVolume_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_BuyCommissionRateByVolume_set, doc=r"""合约按手数买手续费率""")
    SellCommissionRateByVolume: "ctp_sopt::TThostFtdcRatioType" = property(_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_SellCommissionRateByVolume_get, _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_SellCommissionRateByVolume_set, doc=r"""合约按手数卖手续费率""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_swiginit(self, _soptthosttraderapi.new_CThostFtdcStockInstrCommissionRateField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcStockInstrCommissionRateField

# Register CThostFtdcStockInstrCommissionRateField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcStockInstrCommissionRateField_swigregister(CThostFtdcStockInstrCommissionRateField)
class CThostFtdcSelfTradeField(object):
    r"""自成交设置"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcSelfTradeField_BrokerID_get, _soptthosttraderapi.CThostFtdcSelfTradeField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcSelfTradeField_InvestorID_get, _soptthosttraderapi.CThostFtdcSelfTradeField_InvestorID_set, doc=r"""投资者代码""")
    SuportSelfTrade: "ctp_sopt::TThostFtdcBoolType" = property(_soptthosttraderapi.CThostFtdcSelfTradeField_SuportSelfTrade_get, _soptthosttraderapi.CThostFtdcSelfTradeField_SuportSelfTrade_set, doc=r"""是否支持自成交""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcSelfTradeField_swiginit(self, _soptthosttraderapi.new_CThostFtdcSelfTradeField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcSelfTradeField

# Register CThostFtdcSelfTradeField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcSelfTradeField_swigregister(CThostFtdcSelfTradeField)
class CThostFtdcAuthInvestorField(object):
    r"""客户端认证授权"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InvestorRange: "ctp_sopt::TThostFtdcInvestorRangeType" = property(_soptthosttraderapi.CThostFtdcAuthInvestorField_InvestorRange_get, _soptthosttraderapi.CThostFtdcAuthInvestorField_InvestorRange_set, doc=r"""投资者范围""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcAuthInvestorField_BrokerID_get, _soptthosttraderapi.CThostFtdcAuthInvestorField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcAuthInvestorField_InvestorID_get, _soptthosttraderapi.CThostFtdcAuthInvestorField_InvestorID_set, doc=r"""投资者代码""")
    UserProductInfo: "ctp_sopt::TThostFtdcProductInfoType" = property(_soptthosttraderapi.CThostFtdcAuthInvestorField_UserProductInfo_get, _soptthosttraderapi.CThostFtdcAuthInvestorField_UserProductInfo_set, doc=r"""用户端产品信息""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcAuthInvestorField_swiginit(self, _soptthosttraderapi.new_CThostFtdcAuthInvestorField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcAuthInvestorField

# Register CThostFtdcAuthInvestorField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcAuthInvestorField_swigregister(CThostFtdcAuthInvestorField)
class CThostFtdcInputInternalTransferField(object):
    r"""资金内转输入"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InternalTransferRef: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_InternalTransferRef_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_InternalTransferRef_set, doc=r"""投资者资金内转引用""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_BrokerID_set, doc=r"""期权经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_UserID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_UserID_set, doc=r"""用户代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_InvestorID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_InvestorID_set, doc=r"""股票期权投资者代码""")
    OpPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_OpPassWord_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_OpPassWord_set, doc=r"""股票期权资金密码""")
    FuBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_FuBrokerID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_FuBrokerID_set, doc=r"""期货经纪公司代码""")
    FuInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_FuInvestorID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_FuInvestorID_set, doc=r"""期货投资者代码""")
    FuPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_FuPassWord_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_FuPassWord_set, doc=r"""期货资金密码""")
    Amount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_Amount_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_Amount_set, doc=r"""内转金额""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_CurrencyID_set, doc=r"""币种代码""")
    Direction: "ctp_sopt::TThostFtdcInternalFundDirectionType" = property(_soptthosttraderapi.CThostFtdcInputInternalTransferField_Direction_get, _soptthosttraderapi.CThostFtdcInputInternalTransferField_Direction_set, doc=r"""资金内转方向""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInputInternalTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInputInternalTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInputInternalTransferField

# Register CThostFtdcInputInternalTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInputInternalTransferField_swigregister(CThostFtdcInputInternalTransferField)
class CThostFtdcInternalTransferField(object):
    r"""资金内转"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FrontID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_SessionID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_SessionID_set, doc=r"""会话编号""")
    InternalTransferRef: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_InternalTransferRef_get, _soptthosttraderapi.CThostFtdcInternalTransferField_InternalTransferRef_set, doc=r"""投资者资金内转引用""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_BrokerID_set, doc=r"""期权经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_UserID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_UserID_set, doc=r"""用户代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_InvestorID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_InvestorID_set, doc=r"""股票期权投资者代码""")
    OpPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_OpPassWord_get, _soptthosttraderapi.CThostFtdcInternalTransferField_OpPassWord_set, doc=r"""股票期权资金密码""")
    FuBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FuBrokerID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FuBrokerID_set, doc=r"""期货经纪公司代码""")
    FuInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FuInvestorID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FuInvestorID_set, doc=r"""期货投资者代码""")
    FuPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FuPassWord_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FuPassWord_set, doc=r"""期货资金密码""")
    Amount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_Amount_get, _soptthosttraderapi.CThostFtdcInternalTransferField_Amount_set, doc=r"""内转金额""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_CurrencyID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_CurrencyID_set, doc=r"""币种代码""")
    Direction: "ctp_sopt::TThostFtdcInternalFundDirectionType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_Direction_get, _soptthosttraderapi.CThostFtdcInternalTransferField_Direction_set, doc=r"""资金内转方向""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_TradingDay_get, _soptthosttraderapi.CThostFtdcInternalTransferField_TradingDay_set, doc=r"""交易日""")
    DepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_DepositSeqNo_get, _soptthosttraderapi.CThostFtdcInternalTransferField_DepositSeqNo_set, doc=r"""资金内转流水号""")
    TransferReqTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_TransferReqTime_get, _soptthosttraderapi.CThostFtdcInternalTransferField_TransferReqTime_set, doc=r"""内转请求时间""")
    TransferRspTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_TransferRspTime_get, _soptthosttraderapi.CThostFtdcInternalTransferField_TransferRspTime_set, doc=r"""内转响应时间""")
    FundServerRedoFlag: "ctp_sopt::TThostFtdcFundServerRedoFlagType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FundServerRedoFlag_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FundServerRedoFlag_set, doc=r"""重复流水标志""")
    Status: "ctp_sopt::TThostFtdcInternalTransferStatusType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_Status_get, _soptthosttraderapi.CThostFtdcInternalTransferField_Status_set, doc=r"""期权端资金状态""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_StatusMsg_get, _soptthosttraderapi.CThostFtdcInternalTransferField_StatusMsg_set, doc=r"""期权端响应信息""")
    FuStatus: "ctp_sopt::TThostFtdcInternalTransferStatusType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FuStatus_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FuStatus_set, doc=r"""期货端资金状态""")
    FuStatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_FuStatusMsg_get, _soptthosttraderapi.CThostFtdcInternalTransferField_FuStatusMsg_set, doc=r"""期货端响应信息""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcInternalTransferField_InstallID_get, _soptthosttraderapi.CThostFtdcInternalTransferField_InstallID_set, doc=r"""资金组件安装编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInternalTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInternalTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInternalTransferField

# Register CThostFtdcInternalTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInternalTransferField_swigregister(CThostFtdcInternalTransferField)
class CThostFtdcRtnInternalTransferField(object):
    r"""资金内转"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FrontID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_SessionID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_SessionID_set, doc=r"""会话编号""")
    InternalTransferRef: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_InternalTransferRef_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_InternalTransferRef_set, doc=r"""投资者资金内转引用""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_BrokerID_set, doc=r"""期权经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_UserID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_UserID_set, doc=r"""用户代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_InvestorID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_InvestorID_set, doc=r"""股票期权投资者代码""")
    OpPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_OpPassWord_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_OpPassWord_set, doc=r"""股票期权资金密码""")
    FuBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuBrokerID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuBrokerID_set, doc=r"""期货经纪公司代码""")
    FuInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuInvestorID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuInvestorID_set, doc=r"""期货投资者代码""")
    FuPassWord: "ctp_sopt::TThostFtdcPasswordType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuPassWord_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuPassWord_set, doc=r"""期货资金密码""")
    Amount: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_Amount_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_Amount_set, doc=r"""内转金额""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_CurrencyID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_CurrencyID_set, doc=r"""币种代码""")
    Direction: "ctp_sopt::TThostFtdcInternalFundDirectionType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_Direction_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_Direction_set, doc=r"""资金内转方向""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_TradingDay_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_TradingDay_set, doc=r"""交易日""")
    DepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_DepositSeqNo_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_DepositSeqNo_set, doc=r"""资金内转流水号""")
    TransferReqTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_TransferReqTime_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_TransferReqTime_set, doc=r"""内转请求时间""")
    TransferRspTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_TransferRspTime_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_TransferRspTime_set, doc=r"""内转响应时间""")
    FundServerRedoFlag: "ctp_sopt::TThostFtdcFundServerRedoFlagType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FundServerRedoFlag_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FundServerRedoFlag_set, doc=r"""重复流水标志""")
    Status: "ctp_sopt::TThostFtdcInternalTransferStatusType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_Status_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_Status_set, doc=r"""期权端资金状态""")
    StatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_StatusMsg_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_StatusMsg_set, doc=r"""期权端响应信息""")
    FuStatus: "ctp_sopt::TThostFtdcInternalTransferStatusType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuStatus_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuStatus_set, doc=r"""期货端资金状态""")
    FuStatusMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuStatusMsg_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_FuStatusMsg_set, doc=r"""期货端响应信息""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcRtnInternalTransferField_InstallID_get, _soptthosttraderapi.CThostFtdcRtnInternalTransferField_InstallID_set, doc=r"""资金组件安装编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcRtnInternalTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcRtnInternalTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcRtnInternalTransferField

# Register CThostFtdcRtnInternalTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcRtnInternalTransferField_swigregister(CThostFtdcRtnInternalTransferField)
class CThostFtdcReqQryInternalFundServerField(object):
    r"""资金内转服务查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_InstallID_get, _soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_InstallID_set, doc=r"""安装编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_BrokerID_get, _soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_BrokerID_set, doc=r"""经纪公司代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcReqQryInternalFundServerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcReqQryInternalFundServerField

# Register CThostFtdcReqQryInternalFundServerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcReqQryInternalFundServerField_swigregister(CThostFtdcReqQryInternalFundServerField)
class CThostFtdcInternalFundServerField(object):
    r"""资金内转服务查询响应"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_InstallID_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_InstallID_set, doc=r"""安装编号""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_BrokerID_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_BrokerID_set, doc=r"""brokerid""")
    FundServerStatus: "ctp_sopt::TThostFtdcFundServerStatusType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_FundServerStatus_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_FundServerStatus_set, doc=r"""FundServer连接状态""")
    LastReportDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_LastReportDate_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_LastReportDate_set, doc=r"""上次报告日期""")
    LastReportTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_LastReportTime_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_LastReportTime_set, doc=r"""上次报告时间""")
    ConnectDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_ConnectDate_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_ConnectDate_set, doc=r"""完成连接日期""")
    ConnectTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_ConnectTime_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_ConnectTime_set, doc=r"""完成连接时间""")
    StartDate: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_StartDate_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_StartDate_set, doc=r"""启动日期""")
    StartTime: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_StartTime_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_StartTime_set, doc=r"""启动时间""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_TradingDay_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_TradingDay_set, doc=r"""交易日""")
    MaxDepositSeqNo: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcInternalFundServerField_MaxDepositSeqNo_get, _soptthosttraderapi.CThostFtdcInternalFundServerField_MaxDepositSeqNo_set, doc=r"""当前最大流水号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcInternalFundServerField_swiginit(self, _soptthosttraderapi.new_CThostFtdcInternalFundServerField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcInternalFundServerField

# Register CThostFtdcInternalFundServerField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcInternalFundServerField_swigregister(CThostFtdcInternalFundServerField)
class CThostFtdcQryInternalTransferField(object):
    r"""资金内转记录查询"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryInternalTransferField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryInternalTransferField_BrokerID_set, doc=r"""经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryInternalTransferField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryInternalTransferField_InvestorID_set, doc=r"""投资者代码""")
    InternalTransferRef: "ctp_sopt::TThostFtdcDepositSeqNoType" = property(_soptthosttraderapi.CThostFtdcQryInternalTransferField_InternalTransferRef_get, _soptthosttraderapi.CThostFtdcQryInternalTransferField_InternalTransferRef_set, doc=r"""投资者资金内转引用""")
    TransferReqTimeStart: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryInternalTransferField_TransferReqTimeStart_get, _soptthosttraderapi.CThostFtdcQryInternalTransferField_TransferReqTimeStart_set, doc=r"""开始时间""")
    TransferReqTimeEnd: "ctp_sopt::TThostFtdcTimeType" = property(_soptthosttraderapi.CThostFtdcQryInternalTransferField_TransferReqTimeEnd_get, _soptthosttraderapi.CThostFtdcQryInternalTransferField_TransferReqTimeEnd_set, doc=r"""结束时间""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryInternalTransferField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryInternalTransferField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryInternalTransferField

# Register CThostFtdcQryInternalTransferField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryInternalTransferField_swigregister(CThostFtdcQryInternalTransferField)
class CThostFtdcQryOptFutInvestorMapField(object):
    r"""期货期权投资者账户对应关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OptBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_OptBrokerID_get, _soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_OptBrokerID_set, doc=r"""期权经纪公司代码""")
    OptInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_OptInvestorID_get, _soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_OptInvestorID_set, doc=r"""期权投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryOptFutInvestorMapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryOptFutInvestorMapField

# Register CThostFtdcQryOptFutInvestorMapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryOptFutInvestorMapField_swigregister(CThostFtdcQryOptFutInvestorMapField)
class CThostFtdcOptFutInvestorMapField(object):
    r"""期货期权投资者账户对应关系"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OptBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptFutInvestorMapField_OptBrokerID_get, _soptthosttraderapi.CThostFtdcOptFutInvestorMapField_OptBrokerID_set, doc=r"""期权经纪公司编号""")
    FutBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcOptFutInvestorMapField_FutBrokerID_get, _soptthosttraderapi.CThostFtdcOptFutInvestorMapField_FutBrokerID_set, doc=r"""期货经纪公司编号""")
    OptInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptFutInvestorMapField_OptInvestorID_get, _soptthosttraderapi.CThostFtdcOptFutInvestorMapField_OptInvestorID_set, doc=r"""期权投资者代码""")
    FutInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcOptFutInvestorMapField_FutInvestorID_get, _soptthosttraderapi.CThostFtdcOptFutInvestorMapField_FutInvestorID_set, doc=r"""期货投资者代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcOptFutInvestorMapField_swiginit(self, _soptthosttraderapi.new_CThostFtdcOptFutInvestorMapField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcOptFutInvestorMapField

# Register CThostFtdcOptFutInvestorMapField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcOptFutInvestorMapField_swigregister(CThostFtdcOptFutInvestorMapField)
class CThostFtdcQryFutureTradingAccountField(object):
    r"""查询对应的期货资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_BrokerID_set, doc=r"""股票期权经纪公司代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_InvestorID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_InvestorID_set, doc=r"""股票期权投资者代码""")
    FuBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_FuBrokerID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_FuBrokerID_set, doc=r"""期货端经纪公司代码""")
    FuInvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_FuInvestorID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_FuInvestorID_set, doc=r"""期货端投资者代码""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    InstallID: "ctp_sopt::TThostFtdcInstallIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_InstallID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_InstallID_set, doc=r"""安装编号""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_UserID_get, _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_UserID_set, doc=r"""用户代码""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcQryFutureTradingAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcQryFutureTradingAccountField

# Register CThostFtdcQryFutureTradingAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcQryFutureTradingAccountField_swigregister(CThostFtdcQryFutureTradingAccountField)
class CThostFtdcNtfQryFutureTradingAccountField(object):
    r"""对应的期货资金账户"""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    FuBrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FuBrokerID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FuBrokerID_set, doc=r"""经纪公司代码""")
    FuAccountID: "ctp_sopt::TThostFtdcAccountIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FuAccountID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FuAccountID_set, doc=r"""投资者帐号""")
    Deposit: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Deposit_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Deposit_set, doc=r"""入金金额""")
    Withdraw: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Withdraw_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Withdraw_set, doc=r"""出金金额""")
    Available: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Available_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Available_set, doc=r"""可用资金""")
    WithdrawQuota: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_WithdrawQuota_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_WithdrawQuota_set, doc=r"""可取资金""")
    Reserve: "ctp_sopt::TThostFtdcMoneyType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Reserve_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_Reserve_set, doc=r"""基本准备金""")
    TradingDay: "ctp_sopt::TThostFtdcDateType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_TradingDay_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_TradingDay_set, doc=r"""交易日""")
    SettlementID: "ctp_sopt::TThostFtdcSettlementIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_SettlementID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_SettlementID_set, doc=r"""结算编号""")
    CurrencyID: "ctp_sopt::TThostFtdcCurrencyIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_CurrencyID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_CurrencyID_set, doc=r"""币种代码""")
    BrokerID: "ctp_sopt::TThostFtdcBrokerIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_BrokerID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_BrokerID_set, doc=r"""股票期权经纪公司代码""")
    UserID: "ctp_sopt::TThostFtdcUserIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_UserID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_UserID_set, doc=r"""股票期权用户代码""")
    InvestorID: "ctp_sopt::TThostFtdcInvestorIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_InvestorID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_InvestorID_set, doc=r"""股票期权投资者代码""")
    ErrorID: "ctp_sopt::TThostFtdcErrorIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_ErrorID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_ErrorID_set, doc=r"""错误代码""")
    ErrorMsg: "ctp_sopt::TThostFtdcErrorMsgType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_ErrorMsg_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_ErrorMsg_set, doc=r"""错误信息""")
    FrontID: "ctp_sopt::TThostFtdcFrontIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FrontID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_FrontID_set, doc=r"""前置编号""")
    SessionID: "ctp_sopt::TThostFtdcSessionIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_SessionID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_SessionID_set, doc=r"""会话编号""")
    RequestID: "ctp_sopt::TThostFtdcRequestIDType" = property(_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_RequestID_get, _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_RequestID_set, doc=r"""请求编号""")

    def __init__(self):
        _soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_swiginit(self, _soptthosttraderapi.new_CThostFtdcNtfQryFutureTradingAccountField())
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcNtfQryFutureTradingAccountField

# Register CThostFtdcNtfQryFutureTradingAccountField in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcNtfQryFutureTradingAccountField_swigregister(CThostFtdcNtfQryFutureTradingAccountField)
class CThostFtdcTraderSpi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def OnFrontConnected(self) -> "void":
        r"""当客户端与交易后台建立起通信连接时（还未登录前），该方法被调用。"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnFrontConnected(self)
    OnFrontConnected = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnFrontConnected)

    def OnFrontDisconnected(self, nReason: "int") -> "void":
        r"""
        当客户端与交易后台通信连接断开时，该方法被调用。当发生这个情况后，API会自动重新连接，客户端可不做处理。
        :type nReason: int
        :param nReason: 错误原因
                    0x1001 网络读失败
                    0x1002 网络写失败
                    0x2001 接收心跳超时
                    0x2002 发送心跳失败
                    0x2003 收到错误报文
        """
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnFrontDisconnected(self, nReason)
    OnFrontDisconnected = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnFrontDisconnected)

    def OnHeartBeatWarning(self, nTimeLapse: "int") -> "void":
        r"""
        心跳超时警告。当长时间未收到报文时，该方法被调用。
        :type nTimeLapse: int
        :param nTimeLapse: 距离上次接收报文的时间
        """
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnHeartBeatWarning(self, nTimeLapse)
    OnHeartBeatWarning = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnHeartBeatWarning)

    def OnRspAuthenticate(self, pRspAuthenticateField: "CThostFtdcRspAuthenticateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""客户端认证响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspAuthenticate(self, pRspAuthenticateField, pRspInfo, nRequestID, bIsLast)
    OnRspAuthenticate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspAuthenticate)

    def OnRspUserLogin(self, pRspUserLogin: "CThostFtdcRspUserLoginField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""登录请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)
    OnRspUserLogin = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserLogin)

    def OnRspUserLogout(self, pUserLogout: "CThostFtdcUserLogoutField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""登出请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserLogout(self, pUserLogout, pRspInfo, nRequestID, bIsLast)
    OnRspUserLogout = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserLogout)

    def OnRspUserPasswordUpdate(self, pUserPasswordUpdate: "CThostFtdcUserPasswordUpdateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""用户口令更新请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast)
    OnRspUserPasswordUpdate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspUserPasswordUpdate)

    def OnRspTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate: "CThostFtdcTradingAccountPasswordUpdateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""资金账户口令更新请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, pRspInfo, nRequestID, bIsLast)
    OnRspTradingAccountPasswordUpdate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate)

    def OnRspOrderInsert(self, pInputOrder: "CThostFtdcInputOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""报单录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast)
    OnRspOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspOrderInsert)

    def OnRspParkedOrderInsert(self, pParkedOrder: "CThostFtdcParkedOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""预埋单录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspParkedOrderInsert(self, pParkedOrder, pRspInfo, nRequestID, bIsLast)
    OnRspParkedOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspParkedOrderInsert)

    def OnRspParkedOrderAction(self, pParkedOrderAction: "CThostFtdcParkedOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""预埋撤单录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspParkedOrderAction)

    def OnRspOrderAction(self, pInputOrderAction: "CThostFtdcInputOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""报单操作请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspOrderAction(self, pInputOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspOrderAction)

    def OnRspQueryMaxOrderVolume(self, pQueryMaxOrderVolume: "CThostFtdcQueryMaxOrderVolumeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""查询最大报单数量响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume(self, pQueryMaxOrderVolume, pRspInfo, nRequestID, bIsLast)
    OnRspQueryMaxOrderVolume = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume)

    def OnRspSettlementInfoConfirm(self, pSettlementInfoConfirm: "CThostFtdcSettlementInfoConfirmField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""投资者结算结果确认响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspSettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast)
    OnRspSettlementInfoConfirm = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspSettlementInfoConfirm)

    def OnRspRemoveParkedOrder(self, pRemoveParkedOrder: "CThostFtdcRemoveParkedOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""删除预埋单响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspRemoveParkedOrder(self, pRemoveParkedOrder, pRspInfo, nRequestID, bIsLast)
    OnRspRemoveParkedOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspRemoveParkedOrder)

    def OnRspRemoveParkedOrderAction(self, pRemoveParkedOrderAction: "CThostFtdcRemoveParkedOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""删除预埋撤单响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction(self, pRemoveParkedOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspRemoveParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction)

    def OnRspExecOrderInsert(self, pInputExecOrder: "CThostFtdcInputExecOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""执行宣告录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecOrderInsert(self, pInputExecOrder, pRspInfo, nRequestID, bIsLast)
    OnRspExecOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecOrderInsert)

    def OnRspExecOrderAction(self, pInputExecOrderAction: "CThostFtdcInputExecOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""执行宣告操作请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecOrderAction(self, pInputExecOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspExecOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecOrderAction)

    def OnRspForQuoteInsert(self, pInputForQuote: "CThostFtdcInputForQuoteField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""询价录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspForQuoteInsert(self, pInputForQuote, pRspInfo, nRequestID, bIsLast)
    OnRspForQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspForQuoteInsert)

    def OnRspQuoteInsert(self, pInputQuote: "CThostFtdcInputQuoteField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""报价录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQuoteInsert(self, pInputQuote, pRspInfo, nRequestID, bIsLast)
    OnRspQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQuoteInsert)

    def OnRspQuoteAction(self, pInputQuoteAction: "CThostFtdcInputQuoteActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""报价操作请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQuoteAction(self, pInputQuoteAction, pRspInfo, nRequestID, bIsLast)
    OnRspQuoteAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQuoteAction)

    def OnRspLockInsert(self, pInputLock: "CThostFtdcInputLockField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""锁定应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspLockInsert(self, pInputLock, pRspInfo, nRequestID, bIsLast)
    OnRspLockInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspLockInsert)

    def OnRspBatchOrderAction(self, pInputBatchOrderAction: "CThostFtdcInputBatchOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""批量报单操作请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspBatchOrderAction(self, pInputBatchOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspBatchOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspBatchOrderAction)

    def OnRspCombActionInsert(self, pInputCombAction: "CThostFtdcInputCombActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""申请组合录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspCombActionInsert(self, pInputCombAction, pRspInfo, nRequestID, bIsLast)
    OnRspCombActionInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspCombActionInsert)

    def OnRspQryOrder(self, pOrder: "CThostFtdcOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询报单响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast)
    OnRspQryOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOrder)

    def OnRspQryTrade(self, pTrade: "CThostFtdcTradeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询成交响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast)
    OnRspQryTrade = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTrade)

    def OnRspQryInvestorPosition(self, pInvestorPosition: "CThostFtdcInvestorPositionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者持仓响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPosition(self, pInvestorPosition, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestorPosition = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPosition)

    def OnRspQryTradingAccount(self, pTradingAccount: "CThostFtdcTradingAccountField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询资金账户响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingAccount(self, pTradingAccount, pRspInfo, nRequestID, bIsLast)
    OnRspQryTradingAccount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingAccount)

    def OnRspQryInvestor(self, pInvestor: "CThostFtdcInvestorField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestor(self, pInvestor, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestor = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestor)

    def OnRspQryTradingCode(self, pTradingCode: "CThostFtdcTradingCodeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询交易编码响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingCode(self, pTradingCode, pRspInfo, nRequestID, bIsLast)
    OnRspQryTradingCode = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingCode)

    def OnRspQryInstrumentMarginRate(self, pInstrumentMarginRate: "CThostFtdcInstrumentMarginRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询合约保证金率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate(self, pInstrumentMarginRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryInstrumentMarginRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate)

    def OnRspQryInstrumentCommissionRate(self, pInstrumentCommissionRate: "CThostFtdcInstrumentCommissionRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询合约手续费率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate(self, pInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryInstrumentCommissionRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate)

    def OnRspQryExchange(self, pExchange: "CThostFtdcExchangeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询交易所响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchange(self, pExchange, pRspInfo, nRequestID, bIsLast)
    OnRspQryExchange = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchange)

    def OnRspQryProduct(self, pProduct: "CThostFtdcProductField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询产品响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProduct(self, pProduct, pRspInfo, nRequestID, bIsLast)
    OnRspQryProduct = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProduct)

    def OnRspQryInstrument(self, pInstrument: "CThostFtdcInstrumentField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询合约响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrument(self, pInstrument, pRspInfo, nRequestID, bIsLast)
    OnRspQryInstrument = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrument)

    def OnRspQryDepthMarketData(self, pDepthMarketData: "CThostFtdcDepthMarketDataField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询行情响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryDepthMarketData(self, pDepthMarketData, pRspInfo, nRequestID, bIsLast)
    OnRspQryDepthMarketData = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryDepthMarketData)

    def OnRspQrySettlementInfo(self, pSettlementInfo: "CThostFtdcSettlementInfoField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者结算结果响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySettlementInfo(self, pSettlementInfo, pRspInfo, nRequestID, bIsLast)
    OnRspQrySettlementInfo = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySettlementInfo)

    def OnRspQryTransferBank(self, pTransferBank: "CThostFtdcTransferBankField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询转帐银行响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTransferBank(self, pTransferBank, pRspInfo, nRequestID, bIsLast)
    OnRspQryTransferBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTransferBank)

    def OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail: "CThostFtdcInvestorPositionDetailField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者持仓明细响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail(self, pInvestorPositionDetail, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestorPositionDetail = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail)

    def OnRspQryNotice(self, pNotice: "CThostFtdcNoticeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询客户通知响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryNotice(self, pNotice, pRspInfo, nRequestID, bIsLast)
    OnRspQryNotice = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryNotice)

    def OnRspQrySettlementInfoConfirm(self, pSettlementInfoConfirm: "CThostFtdcSettlementInfoConfirmField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询结算信息确认响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm(self, pSettlementInfoConfirm, pRspInfo, nRequestID, bIsLast)
    OnRspQrySettlementInfoConfirm = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm)

    def OnRspQryInvestorPositionCombineDetail(self, pInvestorPositionCombineDetail: "CThostFtdcInvestorPositionCombineDetailField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者持仓明细响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail(self, pInvestorPositionCombineDetail, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestorPositionCombineDetail = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail)

    def OnRspQryCFMMCTradingAccountKey(self, pCFMMCTradingAccountKey: "CThostFtdcCFMMCTradingAccountKeyField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""查询保证金监管系统经纪公司资金账户密钥响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey(self, pCFMMCTradingAccountKey, pRspInfo, nRequestID, bIsLast)
    OnRspQryCFMMCTradingAccountKey = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey)

    def OnRspQryEWarrantOffset(self, pEWarrantOffset: "CThostFtdcEWarrantOffsetField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询仓单折抵信息响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryEWarrantOffset(self, pEWarrantOffset, pRspInfo, nRequestID, bIsLast)
    OnRspQryEWarrantOffset = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryEWarrantOffset)

    def OnRspQryInvestorProductGroupMargin(self, pInvestorProductGroupMargin: "CThostFtdcInvestorProductGroupMarginField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者品种/跨品种保证金响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin(self, pInvestorProductGroupMargin, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestorProductGroupMargin = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin)

    def OnRspQryExchangeMarginRate(self, pExchangeMarginRate: "CThostFtdcExchangeMarginRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询交易所保证金率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeMarginRate(self, pExchangeMarginRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryExchangeMarginRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeMarginRate)

    def OnRspQryExchangeMarginRateAdjust(self, pExchangeMarginRateAdjust: "CThostFtdcExchangeMarginRateAdjustField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询交易所调整保证金率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust(self, pExchangeMarginRateAdjust, pRspInfo, nRequestID, bIsLast)
    OnRspQryExchangeMarginRateAdjust = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust)

    def OnRspQryExchangeRate(self, pExchangeRate: "CThostFtdcExchangeRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询汇率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeRate(self, pExchangeRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryExchangeRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExchangeRate)

    def OnRspQrySecAgentACIDMap(self, pSecAgentACIDMap: "CThostFtdcSecAgentACIDMapField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询二级代理操作员银期权限响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap(self, pSecAgentACIDMap, pRspInfo, nRequestID, bIsLast)
    OnRspQrySecAgentACIDMap = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap)

    def OnRspQryProductExchRate(self, pProductExchRate: "CThostFtdcProductExchRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询产品报价汇率"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProductExchRate(self, pProductExchRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryProductExchRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProductExchRate)

    def OnRspQryProductGroup(self, pProductGroup: "CThostFtdcProductGroupField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询产品组"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProductGroup(self, pProductGroup, pRspInfo, nRequestID, bIsLast)
    OnRspQryProductGroup = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryProductGroup)

    def OnRspQryMMInstrumentCommissionRate(self, pMMInstrumentCommissionRate: "CThostFtdcMMInstrumentCommissionRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询做市商合约手续费率响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryMMInstrumentCommissionRate(self, pMMInstrumentCommissionRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryMMInstrumentCommissionRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryMMInstrumentCommissionRate)

    def OnRspQryMMOptionInstrCommRate(self, pMMOptionInstrCommRate: "CThostFtdcMMOptionInstrCommRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询做市商期权合约手续费响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryMMOptionInstrCommRate(self, pMMOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryMMOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryMMOptionInstrCommRate)

    def OnRspQryInstrumentOrderCommRate(self, pInstrumentOrderCommRate: "CThostFtdcInstrumentOrderCommRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询报单手续费响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentOrderCommRate(self, pInstrumentOrderCommRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryInstrumentOrderCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInstrumentOrderCommRate)

    def OnRspQryOptionInstrTradeCost(self, pOptionInstrTradeCost: "CThostFtdcOptionInstrTradeCostField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询期权交易成本响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost(self, pOptionInstrTradeCost, pRspInfo, nRequestID, bIsLast)
    OnRspQryOptionInstrTradeCost = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost)

    def OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate: "CThostFtdcOptionInstrCommRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询期权合约手续费响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate(self, pOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate)

    def OnRspQryExecOrder(self, pExecOrder: "CThostFtdcExecOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询执行宣告响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecOrder(self, pExecOrder, pRspInfo, nRequestID, bIsLast)
    OnRspQryExecOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecOrder)

    def OnRspQryForQuote(self, pForQuote: "CThostFtdcForQuoteField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询询价响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryForQuote(self, pForQuote, pRspInfo, nRequestID, bIsLast)
    OnRspQryForQuote = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryForQuote)

    def OnRspQryQuote(self, pQuote: "CThostFtdcQuoteField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询报价响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryQuote(self, pQuote, pRspInfo, nRequestID, bIsLast)
    OnRspQryQuote = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryQuote)

    def OnRspQryLock(self, pLock: "CThostFtdcLockField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询锁定应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLock(self, pLock, pRspInfo, nRequestID, bIsLast)
    OnRspQryLock = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLock)

    def OnRspQryLockPosition(self, pLockPosition: "CThostFtdcLockPositionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询锁定证券仓位应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLockPosition(self, pLockPosition, pRspInfo, nRequestID, bIsLast)
    OnRspQryLockPosition = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLockPosition)

    def OnRspQryETFOptionInstrCommRate(self, pETFOptionInstrCommRate: "CThostFtdcETFOptionInstrCommRateField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询ETF期权合约手续费响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryETFOptionInstrCommRate(self, pETFOptionInstrCommRate, pRspInfo, nRequestID, bIsLast)
    OnRspQryETFOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryETFOptionInstrCommRate)

    def OnRspQryLimitPosi(self, pLimitPosi: "CThostFtdcLimitPosiField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询持仓限制"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLimitPosi(self, pLimitPosi, pRspInfo, nRequestID, bIsLast)
    OnRspQryLimitPosi = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLimitPosi)

    def OnRspQryInvestorLevel(self, pInvestorLevel: "CThostFtdcInvestorLevelField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询投资者分级"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorLevel(self, pInvestorLevel, pRspInfo, nRequestID, bIsLast)
    OnRspQryInvestorLevel = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInvestorLevel)

    def OnRspQryExecFreeze(self, pExecFreeze: "CThostFtdcExecFreezeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询E+1日行权冻结响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecFreeze(self, pExecFreeze, pRspInfo, nRequestID, bIsLast)
    OnRspQryExecFreeze = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecFreeze)

    def OnRspQryLimitAmount(self, pLimitAmount: "CThostFtdcLimitAmountField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询金额限制"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLimitAmount(self, pLimitAmount, pRspInfo, nRequestID, bIsLast)
    OnRspQryLimitAmount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryLimitAmount)

    def OnRspQryCombInstrumentGuard(self, pCombInstrumentGuard: "CThostFtdcCombInstrumentGuardField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询组合合约安全系数响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard(self, pCombInstrumentGuard, pRspInfo, nRequestID, bIsLast)
    OnRspQryCombInstrumentGuard = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard)

    def OnRspQryCombAction(self, pCombAction: "CThostFtdcCombActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询申请组合响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCombAction(self, pCombAction, pRspInfo, nRequestID, bIsLast)
    OnRspQryCombAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryCombAction)

    def OnRspQryTransferSerial(self, pTransferSerial: "CThostFtdcTransferSerialField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询转帐流水响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTransferSerial(self, pTransferSerial, pRspInfo, nRequestID, bIsLast)
    OnRspQryTransferSerial = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTransferSerial)

    def OnRspQryAccountregister(self, pAccountregister: "CThostFtdcAccountregisterField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询银期签约关系响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryAccountregister(self, pAccountregister, pRspInfo, nRequestID, bIsLast)
    OnRspQryAccountregister = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryAccountregister)

    def OnRspError(self, pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""错误应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)
    OnRspError = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspError)

    def OnRtnOrder(self, pOrder: "CThostFtdcOrderField") -> "void":
        r"""报单通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnOrder(self, pOrder)
    OnRtnOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnOrder)

    def OnRtnTrade(self, pTrade: "CThostFtdcTradeField") -> "void":
        r"""成交通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnTrade(self, pTrade)
    OnRtnTrade = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnTrade)

    def OnErrRtnOrderInsert(self, pInputOrder: "CThostFtdcInputOrderField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""报单录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnOrderInsert(self, pInputOrder, pRspInfo)
    OnErrRtnOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnOrderInsert)

    def OnErrRtnOrderAction(self, pOrderAction: "CThostFtdcOrderActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""报单操作错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnOrderAction(self, pOrderAction, pRspInfo)
    OnErrRtnOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnOrderAction)

    def OnRtnInstrumentStatus(self, pInstrumentStatus: "CThostFtdcInstrumentStatusField") -> "void":
        r"""合约交易状态通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnInstrumentStatus(self, pInstrumentStatus)
    OnRtnInstrumentStatus = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnInstrumentStatus)

    def OnRtnBulletin(self, pBulletin: "CThostFtdcBulletinField") -> "void":
        r"""交易所公告通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnBulletin(self, pBulletin)
    OnRtnBulletin = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnBulletin)

    def OnRtnTradingNotice(self, pTradingNoticeInfo: "CThostFtdcTradingNoticeInfoField") -> "void":
        r"""交易通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnTradingNotice(self, pTradingNoticeInfo)
    OnRtnTradingNotice = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnTradingNotice)

    def OnRtnErrorConditionalOrder(self, pErrorConditionalOrder: "CThostFtdcErrorConditionalOrderField") -> "void":
        r"""提示条件单校验错误"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnErrorConditionalOrder(self, pErrorConditionalOrder)
    OnRtnErrorConditionalOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnErrorConditionalOrder)

    def OnRtnExecOrder(self, pExecOrder: "CThostFtdcExecOrderField") -> "void":
        r"""执行宣告通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnExecOrder(self, pExecOrder)
    OnRtnExecOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnExecOrder)

    def OnErrRtnExecOrderInsert(self, pInputExecOrder: "CThostFtdcInputExecOrderField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""执行宣告录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecOrderInsert(self, pInputExecOrder, pRspInfo)
    OnErrRtnExecOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecOrderInsert)

    def OnErrRtnExecOrderAction(self, pExecOrderAction: "CThostFtdcExecOrderActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""执行宣告操作错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecOrderAction(self, pExecOrderAction, pRspInfo)
    OnErrRtnExecOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecOrderAction)

    def OnErrRtnForQuoteInsert(self, pInputForQuote: "CThostFtdcInputForQuoteField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""询价录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnForQuoteInsert(self, pInputForQuote, pRspInfo)
    OnErrRtnForQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnForQuoteInsert)

    def OnRtnQuote(self, pQuote: "CThostFtdcQuoteField") -> "void":
        r"""报价通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnQuote(self, pQuote)
    OnRtnQuote = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnQuote)

    def OnErrRtnQuoteInsert(self, pInputQuote: "CThostFtdcInputQuoteField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""报价录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQuoteInsert(self, pInputQuote, pRspInfo)
    OnErrRtnQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQuoteInsert)

    def OnErrRtnQuoteAction(self, pQuoteAction: "CThostFtdcQuoteActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""报价操作错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQuoteAction(self, pQuoteAction, pRspInfo)
    OnErrRtnQuoteAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQuoteAction)

    def OnRtnForQuoteRsp(self, pForQuoteRsp: "CThostFtdcForQuoteRspField") -> "void":
        r"""询价通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnForQuoteRsp(self, pForQuoteRsp)
    OnRtnForQuoteRsp = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnForQuoteRsp)

    def OnRtnCFMMCTradingAccountToken(self, pCFMMCTradingAccountToken: "CThostFtdcCFMMCTradingAccountTokenField") -> "void":
        r"""保证金监控中心用户令牌"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken(self, pCFMMCTradingAccountToken)
    OnRtnCFMMCTradingAccountToken = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken)

    def OnRtnLock(self, pLock: "CThostFtdcLockField") -> "void":
        r"""锁定通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnLock(self, pLock)
    OnRtnLock = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnLock)

    def OnErrRtnLockInsert(self, pInputLock: "CThostFtdcInputLockField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""锁定错误通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnLockInsert(self, pInputLock, pRspInfo)
    OnErrRtnLockInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnLockInsert)

    def OnErrRtnBatchOrderAction(self, pBatchOrderAction: "CThostFtdcBatchOrderActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""批量报单操作错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnBatchOrderAction(self, pBatchOrderAction, pRspInfo)
    OnErrRtnBatchOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnBatchOrderAction)

    def OnRtnCombAction(self, pCombAction: "CThostFtdcCombActionField") -> "void":
        r"""申请组合通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCombAction(self, pCombAction)
    OnRtnCombAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCombAction)

    def OnErrRtnCombActionInsert(self, pInputCombAction: "CThostFtdcInputCombActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""申请组合录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnCombActionInsert(self, pInputCombAction, pRspInfo)
    OnErrRtnCombActionInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnCombActionInsert)

    def OnRspQryContractBank(self, pContractBank: "CThostFtdcContractBankField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询签约银行响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryContractBank(self, pContractBank, pRspInfo, nRequestID, bIsLast)
    OnRspQryContractBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryContractBank)

    def OnRspQryParkedOrder(self, pParkedOrder: "CThostFtdcParkedOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询预埋单响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryParkedOrder(self, pParkedOrder, pRspInfo, nRequestID, bIsLast)
    OnRspQryParkedOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryParkedOrder)

    def OnRspQryParkedOrderAction(self, pParkedOrderAction: "CThostFtdcParkedOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询预埋撤单响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryParkedOrderAction(self, pParkedOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspQryParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryParkedOrderAction)

    def OnRspQryTradingNotice(self, pTradingNotice: "CThostFtdcTradingNoticeField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询交易通知响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingNotice(self, pTradingNotice, pRspInfo, nRequestID, bIsLast)
    OnRspQryTradingNotice = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryTradingNotice)

    def OnRspQryBrokerTradingParams(self, pBrokerTradingParams: "CThostFtdcBrokerTradingParamsField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询经纪公司交易参数响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryBrokerTradingParams(self, pBrokerTradingParams, pRspInfo, nRequestID, bIsLast)
    OnRspQryBrokerTradingParams = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryBrokerTradingParams)

    def OnRspQryBrokerTradingAlgos(self, pBrokerTradingAlgos: "CThostFtdcBrokerTradingAlgosField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询经纪公司交易算法响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos(self, pBrokerTradingAlgos, pRspInfo, nRequestID, bIsLast)
    OnRspQryBrokerTradingAlgos = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos)

    def OnRspQueryCFMMCTradingAccountToken(self, pQueryCFMMCTradingAccountToken: "CThostFtdcQueryCFMMCTradingAccountTokenField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询监控中心用户令牌"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken(self, pQueryCFMMCTradingAccountToken, pRspInfo, nRequestID, bIsLast)
    OnRspQueryCFMMCTradingAccountToken = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken)

    def OnRtnFromBankToFutureByBank(self, pRspTransfer: "CThostFtdcRspTransferField") -> "void":
        r"""银行发起银行资金转期货通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank(self, pRspTransfer)
    OnRtnFromBankToFutureByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank)

    def OnRtnFromFutureToBankByBank(self, pRspTransfer: "CThostFtdcRspTransferField") -> "void":
        r"""银行发起期货资金转银行通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank(self, pRspTransfer)
    OnRtnFromFutureToBankByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank)

    def OnRtnRepealFromBankToFutureByBank(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""银行发起冲正银行转期货通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank(self, pRspRepeal)
    OnRtnRepealFromBankToFutureByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank)

    def OnRtnRepealFromFutureToBankByBank(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""银行发起冲正期货转银行通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank(self, pRspRepeal)
    OnRtnRepealFromFutureToBankByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank)

    def OnRtnFromBankToFutureByFuture(self, pRspTransfer: "CThostFtdcRspTransferField") -> "void":
        r"""期货发起银行资金转期货通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture(self, pRspTransfer)
    OnRtnFromBankToFutureByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture)

    def OnRtnFromFutureToBankByFuture(self, pRspTransfer: "CThostFtdcRspTransferField") -> "void":
        r"""期货发起期货资金转银行通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture(self, pRspTransfer)
    OnRtnFromFutureToBankByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture)

    def OnRtnRepealFromBankToFutureByFutureManual(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""系统运行时期货端手工发起冲正银行转期货请求，银行处理完毕后报盘发回的通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual(self, pRspRepeal)
    OnRtnRepealFromBankToFutureByFutureManual = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual)

    def OnRtnRepealFromFutureToBankByFutureManual(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""系统运行时期货端手工发起冲正期货转银行请求，银行处理完毕后报盘发回的通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual(self, pRspRepeal)
    OnRtnRepealFromFutureToBankByFutureManual = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual)

    def OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount: "CThostFtdcNotifyQueryAccountField") -> "void":
        r"""期货发起查询银行余额通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount)
    OnRtnQueryBankBalanceByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture)

    def OnErrRtnBankToFutureByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""期货发起银行资金转期货错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture(self, pReqTransfer, pRspInfo)
    OnErrRtnBankToFutureByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture)

    def OnErrRtnFutureToBankByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""期货发起期货资金转银行错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture(self, pReqTransfer, pRspInfo)
    OnErrRtnFutureToBankByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture)

    def OnErrRtnRepealBankToFutureByFutureManual(self, pReqRepeal: "CThostFtdcReqRepealField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""系统运行时期货端手工发起冲正银行转期货错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual(self, pReqRepeal, pRspInfo)
    OnErrRtnRepealBankToFutureByFutureManual = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual)

    def OnErrRtnRepealFutureToBankByFutureManual(self, pReqRepeal: "CThostFtdcReqRepealField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""系统运行时期货端手工发起冲正期货转银行错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual(self, pReqRepeal, pRspInfo)
    OnErrRtnRepealFutureToBankByFutureManual = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual)

    def OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount: "CThostFtdcReqQueryAccountField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""期货发起查询银行余额错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount, pRspInfo)
    OnErrRtnQueryBankBalanceByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture)

    def OnRtnRepealFromBankToFutureByFuture(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""期货发起冲正银行转期货请求，银行处理完毕后报盘发回的通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture(self, pRspRepeal)
    OnRtnRepealFromBankToFutureByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture)

    def OnRtnRepealFromFutureToBankByFuture(self, pRspRepeal: "CThostFtdcRspRepealField") -> "void":
        r"""期货发起冲正期货转银行请求，银行处理完毕后报盘发回的通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture(self, pRspRepeal)
    OnRtnRepealFromFutureToBankByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture)

    def OnRspFromBankToFutureByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起银行资金转期货应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)
    OnRspFromBankToFutureByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture)

    def OnRspFromFutureToBankByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起期货资金转银行应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)
    OnRspFromFutureToBankByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture)

    def OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount: "CThostFtdcReqQueryAccountField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起查询银行余额应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount, pRspInfo, nRequestID, bIsLast)
    OnRspQueryBankAccountMoneyByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture)

    def OnRtnOpenAccountByBank(self, pOpenAccount: "CThostFtdcOpenAccountField") -> "void":
        r"""银行发起银期开户通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnOpenAccountByBank(self, pOpenAccount)
    OnRtnOpenAccountByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnOpenAccountByBank)

    def OnRtnCancelAccountByBank(self, pCancelAccount: "CThostFtdcCancelAccountField") -> "void":
        r"""银行发起银期销户通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCancelAccountByBank(self, pCancelAccount)
    OnRtnCancelAccountByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnCancelAccountByBank)

    def OnRtnChangeAccountByBank(self, pChangeAccount: "CThostFtdcChangeAccountField") -> "void":
        r"""银行发起变更银行账号通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnChangeAccountByBank(self, pChangeAccount)
    OnRtnChangeAccountByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnChangeAccountByBank)

    def OnRtnResOpenAccConfirmTpdByBank(self, pResOpenAccConfirmTpd: "CThostFtdcResOpenAccConfirmTpdField") -> "void":
        r"""银行发起第三方存管业务开户确认通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnResOpenAccConfirmTpdByBank(self, pResOpenAccConfirmTpd)
    OnRtnResOpenAccConfirmTpdByBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnResOpenAccConfirmTpdByBank)

    def OnRspReserveOpenAccountTpdByFuture(self, pReqReserveOpenAccountTpd: "CThostFtdcReqReserveOpenAccountTpdField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起第三方存管业务开户预指定应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspReserveOpenAccountTpdByFuture(self, pReqReserveOpenAccountTpd, pRspInfo, nRequestID, bIsLast)
    OnRspReserveOpenAccountTpdByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspReserveOpenAccountTpdByFuture)

    def OnRspSecuritiesDepositInterestByFuture(self, pReqSecuritiesDepositInterest: "CThostFtdcReqSecuritiesDepositInterestField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起第三方存管证券资金结息应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspSecuritiesDepositInterestByFuture(self, pReqSecuritiesDepositInterest, pRspInfo, nRequestID, bIsLast)
    OnRspSecuritiesDepositInterestByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspSecuritiesDepositInterestByFuture)

    def OnRspDayEndFileReadyByFuture(self, pReqDayEndFileReady: "CThostFtdcReqDayEndFileReadyField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""期货发起日终文件就绪应答"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspDayEndFileReadyByFuture(self, pReqDayEndFileReady, pRspInfo, nRequestID, bIsLast)
    OnRspDayEndFileReadyByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspDayEndFileReadyByFuture)

    def OnRspExecCombineOrderInsert(self, pInputExecCombineOrder: "CThostFtdcInputExecCombineOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""行权指令合并录入请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecCombineOrderInsert(self, pInputExecCombineOrder, pRspInfo, nRequestID, bIsLast)
    OnRspExecCombineOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecCombineOrderInsert)

    def OnRspExecCombineOrderAction(self, pInputExecCombineOrderAction: "CThostFtdcInputExecCombineOrderActionField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""行权指令合并操作请求响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecCombineOrderAction(self, pInputExecCombineOrderAction, pRspInfo, nRequestID, bIsLast)
    OnRspExecCombineOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspExecCombineOrderAction)

    def OnRspQryExecCombineOrder(self, pExecCombineOrder: "CThostFtdcExecCombineOrderField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询行权指令合并响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecCombineOrder(self, pExecCombineOrder, pRspInfo, nRequestID, bIsLast)
    OnRspQryExecCombineOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryExecCombineOrder)

    def OnErrRtnExecCombineOrderAction(self, pExecCombineOrderAction: "CThostFtdcExecCombineOrderActionField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""行权指令合并操作错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecCombineOrderAction(self, pExecCombineOrderAction, pRspInfo)
    OnErrRtnExecCombineOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecCombineOrderAction)

    def OnErrRtnExecCombineOrderInsert(self, pInputExecCombineOrder: "CThostFtdcInputExecCombineOrderField", pRspInfo: "CThostFtdcRspInfoField") -> "void":
        r"""行权指令合并录入错误回报"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecCombineOrderInsert(self, pInputExecCombineOrder, pRspInfo)
    OnErrRtnExecCombineOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnErrRtnExecCombineOrderInsert)

    def OnRtnExecCombineOrder(self, pExecCombineOrder: "CThostFtdcExecCombineOrderField") -> "void":
        r"""行权指令合并通知"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnExecCombineOrder(self, pExecCombineOrder)
    OnRtnExecCombineOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnExecCombineOrder)

    def OnRspInternalTransfer(self, pInputInternalTransfer: "CThostFtdcInputInternalTransferField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""资金内转响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspInternalTransfer(self, pInputInternalTransfer, pRspInfo, nRequestID, bIsLast)
    OnRspInternalTransfer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspInternalTransfer)

    def OnRtnInternalTransfer(self, pRtnInternalTransfer: "CThostFtdcRtnInternalTransferField") -> "void":
        r"""资金内转"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRtnInternalTransfer(self, pRtnInternalTransfer)
    OnRtnInternalTransfer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRtnInternalTransfer)

    def OnRspQryInternalTransfer(self, pInternalTransfer: "CThostFtdcInternalTransferField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询资金记录响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInternalTransfer(self, pInternalTransfer, pRspInfo, nRequestID, bIsLast)
    OnRspQryInternalTransfer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryInternalTransfer)

    def OnRspQryFutureTradingAccount(self, pNtfQryFutureTradingAccount: "CThostFtdcNtfQryFutureTradingAccountField", pRspInfo: "CThostFtdcRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        r"""请求查询对应的期货资金账户响应"""
        return _soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryFutureTradingAccount(self, pNtfQryFutureTradingAccount, pRspInfo, nRequestID, bIsLast)
    OnRspQryFutureTradingAccount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderSpi_OnRspQryFutureTradingAccount)

    def __init__(self):
        if self.__class__ == CThostFtdcTraderSpi:
            _self = None
        else:
            _self = self
        _soptthosttraderapi.CThostFtdcTraderSpi_swiginit(self, _soptthosttraderapi.new_CThostFtdcTraderSpi(_self, ))
    __swig_destroy__ = _soptthosttraderapi.delete_CThostFtdcTraderSpi
    def __disown__(self):
        self.this.disown()
        _soptthosttraderapi.disown_CThostFtdcTraderSpi(self)
        return weakref.proxy(self)

# Register CThostFtdcTraderSpi in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTraderSpi_swigregister(CThostFtdcTraderSpi)
class CThostFtdcTraderApi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def CreateFtdcTraderApi(*args) -> "ctp_sopt::CThostFtdcTraderApi *":
        r"""
        创建TraderApi
        :type pszFlowPath: string, optional
        :param pszFlowPath: 存贮订阅信息文件的目录，默认为当前目录
        :rtype: :py:class:`CThostFtdcTraderApi`
        :return: 创建出的UserApi
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_CreateFtdcTraderApi(*args)
    CreateFtdcTraderApi = _swig_new_static_method(_soptthosttraderapi.CThostFtdcTraderApi_CreateFtdcTraderApi)

    @staticmethod
    def GetApiVersion() -> "char const *":
        r"""
        获取API的版本信息
        :rtype: string
        :return: 获取到的版本号
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_GetApiVersion()
    GetApiVersion = _swig_new_static_method(_soptthosttraderapi.CThostFtdcTraderApi_GetApiVersion)

    def Release(self) -> "void":
        r"""
        删除接口对象本身
        Remarks: 不再使用本接口对象时,调用该函数删除接口对象
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_Release(self)
    Release = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_Release)

    def Init(self) -> "void":
        r"""
        初始化
        Remarks: 初始化运行环境,只有调用后,接口才开始工作
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_Init(self)
    Init = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_Init)

    def Join(self) -> "int":
        r"""
        等待接口线程结束运行
        :rtype: int
        :return: 线程退出代码
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_Join(self)
    Join = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_Join)

    def GetTradingDay(self) -> "char const *":
        r"""
        获取当前交易日
        :rtype: string
        :return: 获取到的交易日
        Remarks: 只有登录成功后,才能得到正确的交易日
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_GetTradingDay(self)
    GetTradingDay = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_GetTradingDay)

    def RegisterFront(self, pszFrontAddress: "char *") -> "void":
        r"""
        注册前置机网络地址
        :param pszFrontAddress：前置机网络地址。:
        Remarks: 网络地址的格式为：“protocol://ipaddress:port”，如：”tcp://127.0.0.1:17001”。
        “tcp”代表传输协议，“127.0.0.1”代表服务器地址。”17001”代表服务器端口号。
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_RegisterFront(self, pszFrontAddress)
    RegisterFront = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_RegisterFront)

    def RegisterNameServer(self, pszNsAddress: "char *") -> "void":
        r"""
        注册名字服务器网络地址
        :param pszNsAddress：名字服务器网络地址。:
        Remarks: 网络地址的格式为：“protocol://ipaddress:port”，如：”tcp://127.0.0.1:12001”。
        “tcp”代表传输协议，“127.0.0.1”代表服务器地址。”12001”代表服务器端口号。
        RegisterNameServer优先于RegisterFront
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_RegisterNameServer(self, pszNsAddress)
    RegisterNameServer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_RegisterNameServer)

    def RegisterFensUserInfo(self, pFensUserInfo: "CThostFtdcFensUserInfoField") -> "void":
        r"""
        注册名字服务器用户信息
        :param pFensUserInfo：用户信息。:
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_RegisterFensUserInfo(self, pFensUserInfo)
    RegisterFensUserInfo = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_RegisterFensUserInfo)

    def RegisterSpi(self, pSpi: "CThostFtdcTraderSpi") -> "void":
        r"""
        注册回调接口
        :type pSpi: :py:class:`CThostFtdcTraderSpi`
        :param pSpi: 派生自回调接口类的实例
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_RegisterSpi(self, pSpi)
    RegisterSpi = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_RegisterSpi)

    def SubscribePrivateTopic(self, nResumeType: "ctp_sopt::THOST_TE_RESUME_TYPE") -> "void":
        r"""
        订阅私有流。
        :type nResumeType: int
        :param nResumeType: 私有流重传方式
                    THOST_TERT_RESTART:从本交易日开始重传
                    THOST_TERT_RESUME:从上次收到的续传
                    THOST_TERT_QUICK:只传送登录后私有流的内容
        Remarks: 该方法要在Init方法前调用。若不调用则不会收到私有流的数据。
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_SubscribePrivateTopic(self, nResumeType)
    SubscribePrivateTopic = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_SubscribePrivateTopic)

    def SubscribePublicTopic(self, nResumeType: "ctp_sopt::THOST_TE_RESUME_TYPE") -> "void":
        r"""
        订阅公共流。
        :type nResumeType: int
        :param nResumeType: 公共流重传方式
                    THOST_TERT_RESTART:从本交易日开始重传
                    THOST_TERT_RESUME:从上次收到的续传
                    THOST_TERT_QUICK:只传送登录后公共流的内容
        Remarks: 该方法要在Init方法前调用。若不调用则不会收到公共流的数据。
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_SubscribePublicTopic(self, nResumeType)
    SubscribePublicTopic = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_SubscribePublicTopic)

    def ReqAuthenticate(self, pReqAuthenticateField: "CThostFtdcReqAuthenticateField", nRequestID: "int") -> "int":
        r"""客户端认证请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqAuthenticate(self, pReqAuthenticateField, nRequestID)
    ReqAuthenticate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqAuthenticate)

    def RegisterUserSystemInfo(self, pUserSystemInfo: "CThostFtdcUserSystemInfoField") -> "int":
        r"""
        注册用户终端信息，用于中继服务器多连接模式
        需要在终端认证成功后，用户登录前调用该接口
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_RegisterUserSystemInfo(self, pUserSystemInfo)
    RegisterUserSystemInfo = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_RegisterUserSystemInfo)

    def SubmitUserSystemInfo(self, pUserSystemInfo: "CThostFtdcUserSystemInfoField") -> "int":
        r"""
        上报用户终端信息，用于中继服务器操作员登录模式
        操作员登录后，可以多次调用该接口上报客户信息
        """
        return _soptthosttraderapi.CThostFtdcTraderApi_SubmitUserSystemInfo(self, pUserSystemInfo)
    SubmitUserSystemInfo = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_SubmitUserSystemInfo)

    def ReqUserLogin(self, pReqUserLoginField: "CThostFtdcReqUserLoginField", nRequestID: "int") -> "int":
        r"""用户登录请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)
    ReqUserLogin = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqUserLogin)

    def ReqUserLogout(self, pUserLogout: "CThostFtdcUserLogoutField", nRequestID: "int") -> "int":
        r"""登出请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqUserLogout(self, pUserLogout, nRequestID)
    ReqUserLogout = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqUserLogout)

    def ReqUserPasswordUpdate(self, pUserPasswordUpdate: "CThostFtdcUserPasswordUpdateField", nRequestID: "int") -> "int":
        r"""用户口令更新请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID)
    ReqUserPasswordUpdate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqUserPasswordUpdate)

    def ReqTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate: "CThostFtdcTradingAccountPasswordUpdateField", nRequestID: "int") -> "int":
        r"""资金账户口令更新请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate(self, pTradingAccountPasswordUpdate, nRequestID)
    ReqTradingAccountPasswordUpdate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate)

    def ReqOrderInsert(self, pInputOrder: "CThostFtdcInputOrderField", nRequestID: "int") -> "int":
        r"""报单录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqOrderInsert(self, pInputOrder, nRequestID)
    ReqOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqOrderInsert)

    def ReqParkedOrderInsert(self, pParkedOrder: "CThostFtdcParkedOrderField", nRequestID: "int") -> "int":
        r"""预埋单录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqParkedOrderInsert(self, pParkedOrder, nRequestID)
    ReqParkedOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqParkedOrderInsert)

    def ReqParkedOrderAction(self, pParkedOrderAction: "CThostFtdcParkedOrderActionField", nRequestID: "int") -> "int":
        r"""预埋撤单录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqParkedOrderAction(self, pParkedOrderAction, nRequestID)
    ReqParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqParkedOrderAction)

    def ReqOrderAction(self, pInputOrderAction: "CThostFtdcInputOrderActionField", nRequestID: "int") -> "int":
        r"""报单操作请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqOrderAction(self, pInputOrderAction, nRequestID)
    ReqOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqOrderAction)

    def ReqQueryMaxOrderVolume(self, pQueryMaxOrderVolume: "CThostFtdcQueryMaxOrderVolumeField", nRequestID: "int") -> "int":
        r"""查询最大报单数量请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQueryMaxOrderVolume(self, pQueryMaxOrderVolume, nRequestID)
    ReqQueryMaxOrderVolume = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQueryMaxOrderVolume)

    def ReqSettlementInfoConfirm(self, pSettlementInfoConfirm: "CThostFtdcSettlementInfoConfirmField", nRequestID: "int") -> "int":
        r"""投资者结算结果确认"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqSettlementInfoConfirm(self, pSettlementInfoConfirm, nRequestID)
    ReqSettlementInfoConfirm = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqSettlementInfoConfirm)

    def ReqRemoveParkedOrder(self, pRemoveParkedOrder: "CThostFtdcRemoveParkedOrderField", nRequestID: "int") -> "int":
        r"""请求删除预埋单"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqRemoveParkedOrder(self, pRemoveParkedOrder, nRequestID)
    ReqRemoveParkedOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqRemoveParkedOrder)

    def ReqRemoveParkedOrderAction(self, pRemoveParkedOrderAction: "CThostFtdcRemoveParkedOrderActionField", nRequestID: "int") -> "int":
        r"""请求删除预埋撤单"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqRemoveParkedOrderAction(self, pRemoveParkedOrderAction, nRequestID)
    ReqRemoveParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqRemoveParkedOrderAction)

    def ReqExecOrderInsert(self, pInputExecOrder: "CThostFtdcInputExecOrderField", nRequestID: "int") -> "int":
        r"""执行宣告录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqExecOrderInsert(self, pInputExecOrder, nRequestID)
    ReqExecOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqExecOrderInsert)

    def ReqExecOrderAction(self, pInputExecOrderAction: "CThostFtdcInputExecOrderActionField", nRequestID: "int") -> "int":
        r"""执行宣告操作请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqExecOrderAction(self, pInputExecOrderAction, nRequestID)
    ReqExecOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqExecOrderAction)

    def ReqForQuoteInsert(self, pInputForQuote: "CThostFtdcInputForQuoteField", nRequestID: "int") -> "int":
        r"""询价录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqForQuoteInsert(self, pInputForQuote, nRequestID)
    ReqForQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqForQuoteInsert)

    def ReqQuoteInsert(self, pInputQuote: "CThostFtdcInputQuoteField", nRequestID: "int") -> "int":
        r"""报价录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQuoteInsert(self, pInputQuote, nRequestID)
    ReqQuoteInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQuoteInsert)

    def ReqQuoteAction(self, pInputQuoteAction: "CThostFtdcInputQuoteActionField", nRequestID: "int") -> "int":
        r"""报价操作请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQuoteAction(self, pInputQuoteAction, nRequestID)
    ReqQuoteAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQuoteAction)

    def ReqLockInsert(self, pInputLock: "CThostFtdcInputLockField", nRequestID: "int") -> "int":
        r"""锁定请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqLockInsert(self, pInputLock, nRequestID)
    ReqLockInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqLockInsert)

    def ReqBatchOrderAction(self, pInputBatchOrderAction: "CThostFtdcInputBatchOrderActionField", nRequestID: "int") -> "int":
        r"""批量报单操作请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqBatchOrderAction(self, pInputBatchOrderAction, nRequestID)
    ReqBatchOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqBatchOrderAction)

    def ReqCombActionInsert(self, pInputCombAction: "CThostFtdcInputCombActionField", nRequestID: "int") -> "int":
        r"""申请组合录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqCombActionInsert(self, pInputCombAction, nRequestID)
    ReqCombActionInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqCombActionInsert)

    def ReqQryOrder(self, pQryOrder: "CThostFtdcQryOrderField", nRequestID: "int") -> "int":
        r"""请求查询报单"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryOrder(self, pQryOrder, nRequestID)
    ReqQryOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryOrder)

    def ReqQryTrade(self, pQryTrade: "CThostFtdcQryTradeField", nRequestID: "int") -> "int":
        r"""请求查询成交"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTrade(self, pQryTrade, nRequestID)
    ReqQryTrade = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTrade)

    def ReqQryInvestorPosition(self, pQryInvestorPosition: "CThostFtdcQryInvestorPositionField", nRequestID: "int") -> "int":
        r"""请求查询投资者持仓"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID)
    ReqQryInvestorPosition = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPosition)

    def ReqQryTradingAccount(self, pQryTradingAccount: "CThostFtdcQryTradingAccountField", nRequestID: "int") -> "int":
        r"""请求查询资金账户"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingAccount(self, pQryTradingAccount, nRequestID)
    ReqQryTradingAccount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingAccount)

    def ReqQryInvestor(self, pQryInvestor: "CThostFtdcQryInvestorField", nRequestID: "int") -> "int":
        r"""请求查询投资者"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestor(self, pQryInvestor, nRequestID)
    ReqQryInvestor = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestor)

    def ReqQryTradingCode(self, pQryTradingCode: "CThostFtdcQryTradingCodeField", nRequestID: "int") -> "int":
        r"""请求查询交易编码"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingCode(self, pQryTradingCode, nRequestID)
    ReqQryTradingCode = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingCode)

    def ReqQryInstrumentMarginRate(self, pQryInstrumentMarginRate: "CThostFtdcQryInstrumentMarginRateField", nRequestID: "int") -> "int":
        r"""请求查询合约保证金率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentMarginRate(self, pQryInstrumentMarginRate, nRequestID)
    ReqQryInstrumentMarginRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentMarginRate)

    def ReqQryInstrumentCommissionRate(self, pQryInstrumentCommissionRate: "CThostFtdcQryInstrumentCommissionRateField", nRequestID: "int") -> "int":
        r"""请求查询合约手续费率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentCommissionRate(self, pQryInstrumentCommissionRate, nRequestID)
    ReqQryInstrumentCommissionRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentCommissionRate)

    def ReqQryExchange(self, pQryExchange: "CThostFtdcQryExchangeField", nRequestID: "int") -> "int":
        r"""请求查询交易所"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchange(self, pQryExchange, nRequestID)
    ReqQryExchange = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchange)

    def ReqQryProduct(self, pQryProduct: "CThostFtdcQryProductField", nRequestID: "int") -> "int":
        r"""请求查询产品"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryProduct(self, pQryProduct, nRequestID)
    ReqQryProduct = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryProduct)

    def ReqQryInstrument(self, pQryInstrument: "CThostFtdcQryInstrumentField", nRequestID: "int") -> "int":
        r"""请求查询合约"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrument(self, pQryInstrument, nRequestID)
    ReqQryInstrument = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrument)

    def ReqQryDepthMarketData(self, pQryDepthMarketData: "CThostFtdcQryDepthMarketDataField", nRequestID: "int") -> "int":
        r"""请求查询行情"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryDepthMarketData(self, pQryDepthMarketData, nRequestID)
    ReqQryDepthMarketData = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryDepthMarketData)

    def ReqQrySettlementInfo(self, pQrySettlementInfo: "CThostFtdcQrySettlementInfoField", nRequestID: "int") -> "int":
        r"""请求查询投资者结算结果"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQrySettlementInfo(self, pQrySettlementInfo, nRequestID)
    ReqQrySettlementInfo = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQrySettlementInfo)

    def ReqQryTransferBank(self, pQryTransferBank: "CThostFtdcQryTransferBankField", nRequestID: "int") -> "int":
        r"""请求查询转帐银行"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTransferBank(self, pQryTransferBank, nRequestID)
    ReqQryTransferBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTransferBank)

    def ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail: "CThostFtdcQryInvestorPositionDetailField", nRequestID: "int") -> "int":
        r"""请求查询投资者持仓明细"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPositionDetail(self, pQryInvestorPositionDetail, nRequestID)
    ReqQryInvestorPositionDetail = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPositionDetail)

    def ReqQryNotice(self, pQryNotice: "CThostFtdcQryNoticeField", nRequestID: "int") -> "int":
        r"""请求查询客户通知"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryNotice(self, pQryNotice, nRequestID)
    ReqQryNotice = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryNotice)

    def ReqQrySettlementInfoConfirm(self, pQrySettlementInfoConfirm: "CThostFtdcQrySettlementInfoConfirmField", nRequestID: "int") -> "int":
        r"""请求查询结算信息确认"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQrySettlementInfoConfirm(self, pQrySettlementInfoConfirm, nRequestID)
    ReqQrySettlementInfoConfirm = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQrySettlementInfoConfirm)

    def ReqQryInvestorPositionCombineDetail(self, pQryInvestorPositionCombineDetail: "CThostFtdcQryInvestorPositionCombineDetailField", nRequestID: "int") -> "int":
        r"""请求查询投资者持仓明细"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail(self, pQryInvestorPositionCombineDetail, nRequestID)
    ReqQryInvestorPositionCombineDetail = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail)

    def ReqQryCFMMCTradingAccountKey(self, pQryCFMMCTradingAccountKey: "CThostFtdcQryCFMMCTradingAccountKeyField", nRequestID: "int") -> "int":
        r"""请求查询保证金监管系统经纪公司资金账户密钥"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey(self, pQryCFMMCTradingAccountKey, nRequestID)
    ReqQryCFMMCTradingAccountKey = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey)

    def ReqQryEWarrantOffset(self, pQryEWarrantOffset: "CThostFtdcQryEWarrantOffsetField", nRequestID: "int") -> "int":
        r"""请求查询仓单折抵信息"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryEWarrantOffset(self, pQryEWarrantOffset, nRequestID)
    ReqQryEWarrantOffset = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryEWarrantOffset)

    def ReqQryInvestorProductGroupMargin(self, pQryInvestorProductGroupMargin: "CThostFtdcQryInvestorProductGroupMarginField", nRequestID: "int") -> "int":
        r"""请求查询投资者品种/跨品种保证金"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin(self, pQryInvestorProductGroupMargin, nRequestID)
    ReqQryInvestorProductGroupMargin = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin)

    def ReqQryExchangeMarginRate(self, pQryExchangeMarginRate: "CThostFtdcQryExchangeMarginRateField", nRequestID: "int") -> "int":
        r"""请求查询交易所保证金率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeMarginRate(self, pQryExchangeMarginRate, nRequestID)
    ReqQryExchangeMarginRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeMarginRate)

    def ReqQryExchangeMarginRateAdjust(self, pQryExchangeMarginRateAdjust: "CThostFtdcQryExchangeMarginRateAdjustField", nRequestID: "int") -> "int":
        r"""请求查询交易所调整保证金率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust(self, pQryExchangeMarginRateAdjust, nRequestID)
    ReqQryExchangeMarginRateAdjust = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust)

    def ReqQryExchangeRate(self, pQryExchangeRate: "CThostFtdcQryExchangeRateField", nRequestID: "int") -> "int":
        r"""请求查询汇率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeRate(self, pQryExchangeRate, nRequestID)
    ReqQryExchangeRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExchangeRate)

    def ReqQrySecAgentACIDMap(self, pQrySecAgentACIDMap: "CThostFtdcQrySecAgentACIDMapField", nRequestID: "int") -> "int":
        r"""请求查询二级代理操作员银期权限"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQrySecAgentACIDMap(self, pQrySecAgentACIDMap, nRequestID)
    ReqQrySecAgentACIDMap = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQrySecAgentACIDMap)

    def ReqQryProductExchRate(self, pQryProductExchRate: "CThostFtdcQryProductExchRateField", nRequestID: "int") -> "int":
        r"""请求查询产品报价汇率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryProductExchRate(self, pQryProductExchRate, nRequestID)
    ReqQryProductExchRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryProductExchRate)

    def ReqQryProductGroup(self, pQryProductGroup: "CThostFtdcQryProductGroupField", nRequestID: "int") -> "int":
        r"""请求查询产品组"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryProductGroup(self, pQryProductGroup, nRequestID)
    ReqQryProductGroup = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryProductGroup)

    def ReqQryMMInstrumentCommissionRate(self, pQryMMInstrumentCommissionRate: "CThostFtdcQryMMInstrumentCommissionRateField", nRequestID: "int") -> "int":
        r"""请求查询做市商合约手续费率"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryMMInstrumentCommissionRate(self, pQryMMInstrumentCommissionRate, nRequestID)
    ReqQryMMInstrumentCommissionRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryMMInstrumentCommissionRate)

    def ReqQryMMOptionInstrCommRate(self, pQryMMOptionInstrCommRate: "CThostFtdcQryMMOptionInstrCommRateField", nRequestID: "int") -> "int":
        r"""请求查询做市商期权合约手续费"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryMMOptionInstrCommRate(self, pQryMMOptionInstrCommRate, nRequestID)
    ReqQryMMOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryMMOptionInstrCommRate)

    def ReqQryInstrumentOrderCommRate(self, pQryInstrumentOrderCommRate: "CThostFtdcQryInstrumentOrderCommRateField", nRequestID: "int") -> "int":
        r"""请求查询报单手续费"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentOrderCommRate(self, pQryInstrumentOrderCommRate, nRequestID)
    ReqQryInstrumentOrderCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInstrumentOrderCommRate)

    def ReqQryOptionInstrTradeCost(self, pQryOptionInstrTradeCost: "CThostFtdcQryOptionInstrTradeCostField", nRequestID: "int") -> "int":
        r"""请求查询期权交易成本"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryOptionInstrTradeCost(self, pQryOptionInstrTradeCost, nRequestID)
    ReqQryOptionInstrTradeCost = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryOptionInstrTradeCost)

    def ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate: "CThostFtdcQryOptionInstrCommRateField", nRequestID: "int") -> "int":
        r"""请求查询期权合约手续费"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryOptionInstrCommRate(self, pQryOptionInstrCommRate, nRequestID)
    ReqQryOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryOptionInstrCommRate)

    def ReqQryExecOrder(self, pQryExecOrder: "CThostFtdcQryExecOrderField", nRequestID: "int") -> "int":
        r"""请求查询执行宣告"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecOrder(self, pQryExecOrder, nRequestID)
    ReqQryExecOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecOrder)

    def ReqQryForQuote(self, pQryForQuote: "CThostFtdcQryForQuoteField", nRequestID: "int") -> "int":
        r"""请求查询询价"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryForQuote(self, pQryForQuote, nRequestID)
    ReqQryForQuote = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryForQuote)

    def ReqQryQuote(self, pQryQuote: "CThostFtdcQryQuoteField", nRequestID: "int") -> "int":
        r"""请求查询报价"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryQuote(self, pQryQuote, nRequestID)
    ReqQryQuote = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryQuote)

    def ReqQryLock(self, pQryLock: "CThostFtdcQryLockField", nRequestID: "int") -> "int":
        r"""请求查询锁定"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryLock(self, pQryLock, nRequestID)
    ReqQryLock = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryLock)

    def ReqQryLockPosition(self, pQryLockPosition: "CThostFtdcQryLockPositionField", nRequestID: "int") -> "int":
        r"""请求查询锁定证券仓位"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryLockPosition(self, pQryLockPosition, nRequestID)
    ReqQryLockPosition = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryLockPosition)

    def ReqQryETFOptionInstrCommRate(self, pQryETFOptionInstrCommRate: "CThostFtdcQryETFOptionInstrCommRateField", nRequestID: "int") -> "int":
        r"""请求查询ETF期权合约手续费"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryETFOptionInstrCommRate(self, pQryETFOptionInstrCommRate, nRequestID)
    ReqQryETFOptionInstrCommRate = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryETFOptionInstrCommRate)

    def ReqQryLimitPosi(self, pQryLimitPosi: "CThostFtdcQryLimitPosiField", nRequestID: "int") -> "int":
        r"""请求查询持仓限制"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryLimitPosi(self, pQryLimitPosi, nRequestID)
    ReqQryLimitPosi = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryLimitPosi)

    def ReqQryInvestorLevel(self, pQryInvestorLevel: "CThostFtdcQryInvestorLevelField", nRequestID: "int") -> "int":
        r"""请求查询投资者分级"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorLevel(self, pQryInvestorLevel, nRequestID)
    ReqQryInvestorLevel = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInvestorLevel)

    def ReqQryExecFreeze(self, pQryExecFreeze: "CThostFtdcQryExecFreezeField", nRequestID: "int") -> "int":
        r"""请求查询E+1日行权冻结"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecFreeze(self, pQryExecFreeze, nRequestID)
    ReqQryExecFreeze = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecFreeze)

    def ReqQryLimitAmount(self, pQryLimitAmount: "CThostFtdcQryLimitAmountField", nRequestID: "int") -> "int":
        r"""请求查询金额限制"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryLimitAmount(self, pQryLimitAmount, nRequestID)
    ReqQryLimitAmount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryLimitAmount)

    def ReqQryCombInstrumentGuard(self, pQryCombInstrumentGuard: "CThostFtdcQryCombInstrumentGuardField", nRequestID: "int") -> "int":
        r"""请求查询组合合约安全系数"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryCombInstrumentGuard(self, pQryCombInstrumentGuard, nRequestID)
    ReqQryCombInstrumentGuard = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryCombInstrumentGuard)

    def ReqQryCombAction(self, pQryCombAction: "CThostFtdcQryCombActionField", nRequestID: "int") -> "int":
        r"""请求查询申请组合"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryCombAction(self, pQryCombAction, nRequestID)
    ReqQryCombAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryCombAction)

    def ReqQryTransferSerial(self, pQryTransferSerial: "CThostFtdcQryTransferSerialField", nRequestID: "int") -> "int":
        r"""请求查询转帐流水"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTransferSerial(self, pQryTransferSerial, nRequestID)
    ReqQryTransferSerial = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTransferSerial)

    def ReqQryAccountregister(self, pQryAccountregister: "CThostFtdcQryAccountregisterField", nRequestID: "int") -> "int":
        r"""请求查询银期签约关系"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryAccountregister(self, pQryAccountregister, nRequestID)
    ReqQryAccountregister = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryAccountregister)

    def ReqQryContractBank(self, pQryContractBank: "CThostFtdcQryContractBankField", nRequestID: "int") -> "int":
        r"""请求查询签约银行"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryContractBank(self, pQryContractBank, nRequestID)
    ReqQryContractBank = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryContractBank)

    def ReqQryParkedOrder(self, pQryParkedOrder: "CThostFtdcQryParkedOrderField", nRequestID: "int") -> "int":
        r"""请求查询预埋单"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryParkedOrder(self, pQryParkedOrder, nRequestID)
    ReqQryParkedOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryParkedOrder)

    def ReqQryParkedOrderAction(self, pQryParkedOrderAction: "CThostFtdcQryParkedOrderActionField", nRequestID: "int") -> "int":
        r"""请求查询预埋撤单"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryParkedOrderAction(self, pQryParkedOrderAction, nRequestID)
    ReqQryParkedOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryParkedOrderAction)

    def ReqQryTradingNotice(self, pQryTradingNotice: "CThostFtdcQryTradingNoticeField", nRequestID: "int") -> "int":
        r"""请求查询交易通知"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingNotice(self, pQryTradingNotice, nRequestID)
    ReqQryTradingNotice = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryTradingNotice)

    def ReqQryBrokerTradingParams(self, pQryBrokerTradingParams: "CThostFtdcQryBrokerTradingParamsField", nRequestID: "int") -> "int":
        r"""请求查询经纪公司交易参数"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryBrokerTradingParams(self, pQryBrokerTradingParams, nRequestID)
    ReqQryBrokerTradingParams = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryBrokerTradingParams)

    def ReqQryBrokerTradingAlgos(self, pQryBrokerTradingAlgos: "CThostFtdcQryBrokerTradingAlgosField", nRequestID: "int") -> "int":
        r"""请求查询经纪公司交易算法"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryBrokerTradingAlgos(self, pQryBrokerTradingAlgos, nRequestID)
    ReqQryBrokerTradingAlgos = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryBrokerTradingAlgos)

    def ReqQueryCFMMCTradingAccountToken(self, pQueryCFMMCTradingAccountToken: "CThostFtdcQueryCFMMCTradingAccountTokenField", nRequestID: "int") -> "int":
        r"""请求查询监控中心用户令牌"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQueryCFMMCTradingAccountToken(self, pQueryCFMMCTradingAccountToken, nRequestID)
    ReqQueryCFMMCTradingAccountToken = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQueryCFMMCTradingAccountToken)

    def ReqFromBankToFutureByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", nRequestID: "int") -> "int":
        r"""期货发起银行资金转期货请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqFromBankToFutureByFuture(self, pReqTransfer, nRequestID)
    ReqFromBankToFutureByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqFromBankToFutureByFuture)

    def ReqFromFutureToBankByFuture(self, pReqTransfer: "CThostFtdcReqTransferField", nRequestID: "int") -> "int":
        r"""期货发起期货资金转银行请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqFromFutureToBankByFuture(self, pReqTransfer, nRequestID)
    ReqFromFutureToBankByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqFromFutureToBankByFuture)

    def ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount: "CThostFtdcReqQueryAccountField", nRequestID: "int") -> "int":
        r"""期货发起查询银行余额请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount, nRequestID)
    ReqQueryBankAccountMoneyByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture)

    def ReqReserveOpenAccountTpdByFuture(self, pReqReserveOpenAccountTpd: "CThostFtdcReqReserveOpenAccountTpdField", nRequestID: "int") -> "int":
        r"""期货发起第三方存管业务开户预指定请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqReserveOpenAccountTpdByFuture(self, pReqReserveOpenAccountTpd, nRequestID)
    ReqReserveOpenAccountTpdByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqReserveOpenAccountTpdByFuture)

    def ReqSecuritiesDepositInterestByFuture(self, pReqSecuritiesDepositInterest: "CThostFtdcReqSecuritiesDepositInterestField", nRequestID: "int") -> "int":
        r"""期货发起第三方存管证券资金结息请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqSecuritiesDepositInterestByFuture(self, pReqSecuritiesDepositInterest, nRequestID)
    ReqSecuritiesDepositInterestByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqSecuritiesDepositInterestByFuture)

    def ReqDayEndFileReadyByFuture(self, pReqDayEndFileReady: "CThostFtdcReqDayEndFileReadyField", nRequestID: "int") -> "int":
        r"""期货发起日终文件就绪请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqDayEndFileReadyByFuture(self, pReqDayEndFileReady, nRequestID)
    ReqDayEndFileReadyByFuture = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqDayEndFileReadyByFuture)

    def ReqExecCombineOrderInsert(self, pInputExecCombineOrder: "CThostFtdcInputExecCombineOrderField", nRequestID: "int") -> "int":
        r"""行权指令合并录入请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqExecCombineOrderInsert(self, pInputExecCombineOrder, nRequestID)
    ReqExecCombineOrderInsert = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqExecCombineOrderInsert)

    def ReqExecCombineOrderAction(self, pInputExecCombineOrderAction: "CThostFtdcInputExecCombineOrderActionField", nRequestID: "int") -> "int":
        r"""行权指令合并操作请求"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqExecCombineOrderAction(self, pInputExecCombineOrderAction, nRequestID)
    ReqExecCombineOrderAction = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqExecCombineOrderAction)

    def ReqQryExecCombineOrder(self, pQryExecCombineOrder: "CThostFtdcQryExecCombineOrderField", nRequestID: "int") -> "int":
        r"""请求查询行权指令合并"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecCombineOrder(self, pQryExecCombineOrder, nRequestID)
    ReqQryExecCombineOrder = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryExecCombineOrder)

    def ReqInternalTransfer(self, pInputInternalTransfer: "CThostFtdcInputInternalTransferField", nRequestID: "int") -> "int":
        r"""请求资金内转"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqInternalTransfer(self, pInputInternalTransfer, nRequestID)
    ReqInternalTransfer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqInternalTransfer)

    def ReqQryInternalTransfer(self, pQryInternalTransfer: "CThostFtdcQryInternalTransferField", nRequestID: "int") -> "int":
        r"""请求查询资金记录"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryInternalTransfer(self, pQryInternalTransfer, nRequestID)
    ReqQryInternalTransfer = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryInternalTransfer)

    def ReqQryFutureTradingAccount(self, pQryFutureTradingAccount: "CThostFtdcQryFutureTradingAccountField", nRequestID: "int") -> "int":
        r"""请求查询对应的期货资金账户"""
        return _soptthosttraderapi.CThostFtdcTraderApi_ReqQryFutureTradingAccount(self, pQryFutureTradingAccount, nRequestID)
    ReqQryFutureTradingAccount = _swig_new_instance_method(_soptthosttraderapi.CThostFtdcTraderApi_ReqQryFutureTradingAccount)

# Register CThostFtdcTraderApi in _soptthosttraderapi:
_soptthosttraderapi.CThostFtdcTraderApi_swigregister(CThostFtdcTraderApi)

