[project]
dynamic = ["version"]
name = "aiobotocore-otel"
description = "OpenTelemetry aiobotocore instrumentation"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Krzysztof Jagiello", email = "hello@kjagiello.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "opentelemetry-api~=1.0",
    "opentelemetry-propagator-aws-xray~=1.0",
    "opentelemetry-instrumentation>=0.40b0",
    "opentelemetry-semantic-conventions>=0.40b0",
    "aiobotocore>=2.24.0,<2.26.0",
]

[project.optional-dependencies]
instruments = ["aiobotocore"]

[dependency-groups]
dev = [
    "aws-xray-sdk>=2.14.0",
    "botocore>=1.37,<1.40.24",
    "docker>=7.1.0",
    "hatch-vcs>=0.4.0",
    "httpx>=0.28.1",
    "moto[server]>=5.0.28",
    "nox>=2025.2.9",
    "opentelemetry-sdk~=1.31",
    "opentelemetry-test-utils==0.52b0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.25.3",
    "pytest-cov>=6.0.0",
    "ruff>=0.11.0",
]

[project.entry-points.opentelemetry_instrumentor]
botocore = "opentelemetry.instrumentation.aiobotocore:AioBotocoreInstrumentor"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/opentelemetry"]

[tool.hatch.build.hooks.vcs]
version-file = "src/opentelemetry/instrumentation/aiobotocore/version.py"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }

