"""Standardized test page creation for Jupyter notebooks with FastHTML"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/core/testing.ipynb.

# %% auto 0
__all__ = ['create_test_app', 'create_test_page', 'start_test_server']

# %% ../../nbs/core/testing.ipynb 3
from fasthtml.common import *
from fasthtml.jupyter import JupyUvi, HTMX
from typing import Optional, Union, List, Callable
from pathlib import Path

# Import our modules
from .resources import get_tailwind_headers

# %% ../../nbs/core/testing.ipynb 6
def create_test_app(
    debug: bool = True  # Enable debug mode
) -> tuple: # Tuple containing (app, rt) - FastHTML app instance and route decorator
    """
    Create a standardized test app for Jupyter notebooks with Tailwind.
    """
    # Build headers
    headers = get_tailwind_headers()
    
    # Create app with daisyUI configuration
    app, rt = fast_app(
        pico=False, # Disable pico since we're using Tailwind
        hdrs=headers,
        debug=debug
    )
    
    return app, rt

# %% ../../nbs/core/testing.ipynb 8
def create_test_page(
    title: str,  # Page title
    *content,  # Page content elements
    container: bool = True,  # Wrap in container
    custom_theme_names: Optional[List[str]] = None  # Custom themes for selector
) -> Div:  # Div containing complete page layout with navbar and content
    """
    Create a standardized test page layout with optional theme selector.
    """
    # Build navbar with proper structure using Tailwind
    navbar = Div(
        # 
        cls=None # 
    )
    
    # Build main content classes with Tailwind
    
    
    return Div(
        navbar,
        Main(
            *content,
            cls=None # 
        )
    )

# %% ../../nbs/core/testing.ipynb 10
def start_test_server(
    app: FastHTML,    # FastHTML app instance created by create_test_app or fast_app
    port: int = 8000,  # Port
) -> JupyUvi:  # JupyUvi server instance for Jupyter notebook testing
    """
    Start a test server and return the JupyUvi instance.
    
    Usage:
        server = start_test_server(app)
        HTMX()  # Display the app
        
        # Later, in another cell:
        server.stop()
    """
    return JupyUvi(app, port=port)
