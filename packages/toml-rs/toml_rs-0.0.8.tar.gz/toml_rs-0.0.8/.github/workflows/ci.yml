name: CI

permissions: { }

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    paths-ignore:
      - "benchmark/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  cargo-fmt:
    name: "cargo fmt"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
        with:
          lookup-only: true
      - run: cargo fmt --all --check

  cargo-clippy:
    name: "cargo clippy"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
        with:
          lookup-only: true
      - run: cargo clippy --all-targets --all-features -- -D warnings -W clippy::style -D clippy::perf

  tests:
    name: "tests (python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6.8.0
        with:
          enable-cache: "auto" # zizmor: ignore[cache-poisoning]
      - name: "Create venv and run tests"
        shell: bash
        run: |
          uv venv .venv --python ${{ matrix.python-version }}
          source .venv/bin/activate
          uv pip install --group dev
          maturin develop --release
          ruff check
          pytest tests/

  zizmor:
    name: "zizmor .github/"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.13
      - name: "Install uv"
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0
        with:
          enable-cache: false
      - name: "Install zizmor"
        run: uv pip install --group dev --system
      - name: Run Zizmor
        run: zizmor .github

  linux:
    name: "linux (${{ matrix.platform.runner }} / ${{ matrix.platform.target }})"
    needs: [ tests, cargo-fmt, cargo-clippy, zizmor ]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - {
            runner: ubuntu-latest,
            target: x86_64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist"
          }
          - {
            runner: ubuntu-latest,
            target: x86,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist"
          }
          - {
            runner: ubuntu-latest,
            target: aarch64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist --zig"
          }
          - {
            runner: ubuntu-latest,
            target: armv7,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist --no-default-features"
          }
          - {
            runner: ubuntu-latest,
            target: s390x,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist --no-default-features"
          }
          - {
            runner: ubuntu-latest,
            target: ppc64le,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11",
            maturin-args: "--release --out dist --no-default-features"
          }
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.x
      - name: "Build wheels"
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.platform.target }}
          args: ${{ matrix.platform.maturin-args }} --interpreter ${{ matrix.platform.interpreter }}
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }} # zizmor: ignore[cache-poisoning]
          manylinux: auto
      - name: "Upload wheels"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    name: "musllinux (${{ matrix.platform.runner }} / ${{ matrix.platform.target }})"
    needs: [ tests, cargo-fmt, cargo-clippy, zizmor ]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - {
            runner: ubuntu-latest,
            target: x86_64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
          - {
            runner: ubuntu-latest,
            target: x86,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
          - {
            runner: ubuntu-latest,
            target: aarch64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
          - {
            runner: ubuntu-latest,
            target: armv7,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.x
      - name: "Build wheels"
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter ${{ matrix.platform.interpreter }}
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }} # zizmor: ignore[cache-poisoning]
          manylinux: musllinux_1_2
      - name: "Upload wheels"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    name: "windows (${{ matrix.platform.runner }} / ${{ matrix.platform.target }})"
    needs: [ tests, cargo-fmt, cargo-clippy, zizmor ]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - {
            runner: windows-latest,
            target: x64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
          - {
            runner: windows-latest,
            target: x86,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t"
          }
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: "Build wheels"
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter ${{ matrix.platform.interpreter }}
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }} # zizmor: ignore[cache-poisoning]
      - name: "Upload wheels"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    name: "macos (${{ matrix.platform.runner }} / ${{ matrix.platform.target }})"
    needs: [ tests, cargo-fmt, cargo-clippy, zizmor ]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - {
            runner: macos-13,
            target: x86_64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
          - {
            runner: macos-14,
            target: aarch64,
            interpreter: "3.10 3.11 3.12 3.13 3.13t 3.14 3.14t pypy3.11"
          }
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.x
      - name: "Build wheels"
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --interpreter ${{ matrix.platform.interpreter }}
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }} # zizmor: ignore[cache-poisoning]
      - name: "Upload wheels"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  build-sdist:
    name: "build sdist"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: "Build sdist"
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable
      - name: "Upload sdist"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wheels-sdist
          path: dist

  release:
    name: "Release"
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [ linux, musllinux, windows, macos, build-sdist, zizmor, tests, cargo-clippy, cargo-fmt ]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      - name: "Generate artifact attestation"
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-path: "wheels-*/*"
      - name: "Publish to PyPI"
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
