[project]
name = "roman_snpit_snappl"
description = "General, database, and photometry utilities for the Roman SNPIT"
requires-python = ">=3.11"
dynamic = ["version"]
authors = [{ name = "Roman Supernova Project Infrastructure Team"}]

maintainers = [
 {name = "Roman SN PIT", email = "raknop@lbl.gov"}
 ]
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python"
]
# Note re: dependencies.
# To run the webserver, you also need flask, flask-session, gevent,
#   gunicorn, and psycopg.
# However, most use of snappl won't be running the webserver, so we
#   don't list those as explicit dependencies.  (No need to bloat the
#   environment.)  The Dockerfile in docker/webserver explicitly installs
#   these packages.
dependencies = [
  "astropy>=7.1.0,<8.0.0",
  "fitsio>=1.2.5,<2.0.0",
  "galsim>=2.7.2,<3.0.0",
  "gwcs>=0.26.0,<0.27.0",
  "h5py>=3.14.0,<4.0.0",
  "numpy>=2.2.6,<3.0.0",
  "pandas>=2.3.3,<3.0.0",
  "photutils>=2.3.0,<3.0.0",
  "pycryptodome>=3.23.0,<4.0.0",
  "python-dateutil>=2.9.0.post0,<3.0.0",
  "pytz>=2025.2",
  "pyyaml>=6.0.3,<7.0.0",
  "rkwebutil>=2.4.0,<3.0.0",
  "roman-datamodels>=0.27.0,<0.28.0",
  "scipy>=1.16.2,<2.0.0",
  "simplejson>=3.20.2,<4.0.0"
]
license-files = ["LICENSE"]


[project.readme]
file = "README.rst"
content-type = "text/x-rst"





[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov",
    "requests",
    "tox",
    "devpi_process",
    "psycopg>=3.2.9,<4.0.0"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
    "matplotlib",
    "sphinx",
    "mock",
    "tomli",
    "graphviz"
]


[project.urls]
repository = "https://github.com/Roman-Supernova-PIT"



[build-system]
requires = [
  "towncrier",
  "cruft",
  "coverage",
  "setuptools>=62.1",
  "setuptools_scm[tomli]>=6.2",
  "wheel",
  "numpy>=1.26",

]
build-backend = "setuptools.build_meta"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
namespaces = false
include = [
"snappl*"
]

[tool.setuptools_scm]
# can be empty if no extra settings are needed, presence enables setuptools-scm
version_file = "snappl/_version.py"

[tool.pytest.ini_options]
testpaths = [
  "snappl",
  "docs",
]
doctest_plus = "enabled"
doctest_rst = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"

[tool.coverage.run]
omit = [
 "snappl/__init*",
 "snappl/conftest.py",
 "snappl/*setup_package*",
 "snappl/tests/*",
 "snappl/*/tests/*",
 "snappl/extern/*",
 "snappl/_version*",
 "*/snappl/__init*",
 "*/snappl/conftest.py",
 "*/snappl/*setup_package*",
 "*/snappl/tests/*",
 "*/snappl/*/tests/*",
 "*/snappl/extern/*",
 "*/snappl/_version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]

[tool.ruff]
line-length = 120
indent-width = 4
exclude = [
    ".git",
    ".github",
    ".ruff_cache",
    ".vscode",
    "__pypackages__",
    "docs",
]


[tool.ruff.lint]
preview = true
select = [ 'F', 'E101', 'E111', 'E112', 'E113', 'E115', 'E117',
           'E204', 'E223', 'E224', 'E242', 'E265', 'E273', 'E274', 'E275',
           'E301', 'E302', 'E305', 'E306', 'E401', 'E501', 'E502', 'E703',
           'E711', 'E713', 'E714', 'E72', 'E74',
           'W19', 'W29', 'W39', 'W605',
           'N804', 'N805', 'N807',
           'D206', 'D300', 'D301',
           'UP010', 'UP011', 'UP012', 'UP013', 'UP014', 'UP017', 'UP018', 'UP019',
           'UP02', 'UP030', 'UP031', 'UP033', 'UP034', 'UP035', 'UP036',
           'UP037', 'UP039', 'UP04',
           'PLE0100', 'PLE0101', 'PLE0116',
           'NPY',
           'RUF018',
           'E301', 'E302', 'E306', 'W505', 'D200', 'D212', 'RUF021' ]


[tool.towncrier]
# Where you want your news files to come out, filename=`NEWS.rst` is the default.
# This can be .rst or .md, towncrier's default template works with both.
filename = "CHANGES.rst"
directory = "changes"
package = "snappl"
package_dir = "snappl"
title_format = "{version} ({project_date})"
ignore = [".gitkeep"]
wrap = true
issue_format = "`#{issue} <https://github.com/Roman-Supernova-PIT/snappl/issues/{issue}>`_"

[[tool.towncrier.type]]
directory = "/"
name = "General"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "New Features"
showcontent = true

[[tool.towncrier.type]]
directory = "snappl"
name = "snappl"
showcontent = true


