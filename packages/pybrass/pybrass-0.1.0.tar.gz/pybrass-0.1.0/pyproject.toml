[build-system]
requires = [
  "scikit-build-core>=0.11",
  "pybind11>=2.11",
  "setuptools>=68",
  "oldest-supported-numpy"   # NumPy headers at build time for wide wheel compatibility
]
build-backend = "scikit_build_core.build"

[project]
name = "pybrass"
dynamic = ["version"]  # version comes from Git tags via setuptools_scm
description = "Binary Reader and Analysis Suite Software"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.8"
authors = [{ name = "Carl B. Rosenkvist", email = "rosenkvist@itp.uni-frankfurt.de" }]
license = { file = "LICENSE" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: C++",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Physics",
]
keywords = ["binary", "reader", "physics", "heavy-ion", "SMASH", "pybind11"]

dependencies = [
  "numpy>=2.1.3",
  "pyyaml>=6.0.2",
]

[project.urls]
Homepage = "https://github.com/Carl-Rosenkvist/brass"
Source = "https://github.com/Carl-Rosenkvist/brass"
Issues = "https://github.com/Carl-Rosenkvist/brass/issues"

[project.scripts]
brass-analyze = "brass.cli.analyze_runs:main"

[project.optional-dependencies]
dev = ["ruff", "mypy", "pytest", "build", "twine"]

# Tell scikit-build-core to use setuptools_scm for version metadata
[tool.scikit-build.metadata]
version.provider = "scikit_build_core.metadata.setuptools_scm"

# setuptools_scm config: version from git tags like v0.0.4 -> 0.0.4
[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "node-and-date"

[tool.scikit-build]
cmake.source-dir = "."
build-dir = "build"
cmake.version = ">=3.18"
cmake.args = ["-DBUILD_PYTHON=ON"]
cmake.build-type = "Release"
cmake.define = { CMAKE_INTERPROCEDURAL_OPTIMIZATION = "ON" }

# Package the python module living at pythonlib/brass/
# This makes `import brass` work from the built wheel.
wheel.packages = ["pythonlib/brass"]

# Include sources/headers & docs in sdist
sdist.include = [
  "CMakeLists.txt",
  "src/**/*",
  "analyses/**/*",
  "include/**/*",
  "external/yaml-cpp/**/*",
  "tests/**/*",
  "README.md",
  "LICENSE",
  ".",  # the python package itself (pythonlib/brass)
]

[tool.cibuildwheel]
build = "cp3?-*"
skip = "pp* *-musllinux_*"
test-requires = ["pytest"]

# Note: fixed a syntax bug here (no stray 'import' token)
test-command = "python -c \"import brass, importlib.metadata as m; print('brass from:', brass.__file__); print('pybrass version:', m.version('pybrass'))\" && pytest -vv -ra --maxfail=1 --disable-warnings tests"

environment = { CMAKE_BUILD_PARALLEL_LEVEL = "1" }
