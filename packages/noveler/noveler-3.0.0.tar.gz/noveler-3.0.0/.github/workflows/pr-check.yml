name: PR Check

on:
  pull_request:
    branches: [main, dev]

concurrency:
  group: pr-check-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.10'
  PIP_CACHE_DIR: ~/.cache/pip

jobs:
  lint:
    name: Lint (ruff + mypy + importlinter)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-
            ${{ runner.os }}-pip-

      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[lint]

      - name: Run ruff
        run: make lint

      - name: Run importlinter (DDD contracts)
        run: make lint-imports

      - name: Validate quality check templates
        run: make validate-templates

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Run test suite
        run: make test
        env:
          LLM_REPORT: 1
          LLM_REPORT_DIR: reports

      - name: Upload test reports as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-${{ github.run_id }}
          path: reports/
          retention-days: 30

  quality-gate:
    name: Quality Gate
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check lint status
        if: needs.lint.result != 'success'
        run: |
          echo "❌ Lint check failed"
          exit 1

      - name: Check test status
        if: needs.test.result != 'success'
        run: |
          echo "❌ Test suite failed"
          exit 1

      - name: ✅ All checks passed
        run: echo "✅ PR Check completed successfully"
