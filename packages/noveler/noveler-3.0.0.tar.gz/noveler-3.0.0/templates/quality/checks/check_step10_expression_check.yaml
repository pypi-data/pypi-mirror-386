# STEP 10: 文章表現・文体チェック Schema v2

metadata:
  step_id: 10
  step_name: 文章表現・文体チェック
  phase: expression_quality
  version: 2.0.0
  last_updated: '2025-09-24'
  author: noveler system
  description: 表現の豊かさ・文体の統一・語彙選択の適切性を確認
  estimated_duration: 15-20分
llm_config:
  role_messages:
    system: |-
      あなたは品質チェックスペシャリストです。constraints.hard_rules を厳守し、
      出力は artifacts の仕様に従った JSON のみを返してください。追加の説明文は不要です。
    user: |-
      文章表現・文体チェック に関する tasks・acceptance_criteria を順守してください。
      問題が見つからない場合でも issues.<category>[] は空配列として出力し、summary.evidence に根拠を示してください。
prompt:
  main_instruction: |-
    目的は「文章表現・文体チェック」です。inputs・constraints・tasks を満たし、
    artifacts の仕様に従った JSON をコードブロックなしで出力してください。
  next_action_instruction: |-
    ステップ {previous_step_id}「{previous_step_name}」が完了しました。

    続いて、ステップ {step_id}「{step_name}」を実行してください。
    リズム・テンポチェックを行います：
    1. 文章のリズムと韻律
    2. 読書テンポの適切性
    3. 緊張感・緩急のメリハリ
    4. 読者の注意力維持

    execute_check_step で step_id={step_id} を実行してください。
inputs:
  files:
    - path: '{project_root}/40_原稿/第{episode_number:03d}話*.md'
      required: true
      description: 対象エピソード原稿（最新稿）
    - path: '{project_root}/config/quality_rules.yaml'
      required: false
      description: 品質関連の設定があれば参照
  variables:
    episode_number:
      type: int
      required: true
    project_root:
      type: path
      required: true
constraints:
  hard_rules:
    - summary.overview と metrics.score を必ず出力する
    - issues は各カテゴリ (issues.*) をキーにもつオブジェクトとして出力する
    - 各 issue には before_text / after_text / severity / priority を添える
  soft_targets:
    - metrics.score は 80 以上を目指す
    - issues 全体の件数を 5 件以内に抑える（理想値）
tasks:
  bullets:
    - 文章表現・文体チェックの観点（表現力、文体統一、語彙コントロール、描写精度）を俯瞰し、重大度と優先度を判定する
    - issues.<category>[] に原稿抜粋・修正案・severity・priority・root_cause を含めて整理する
    - summary.overview に現状と改善方針を200字以内で要約し、summary.evidence に根拠を箇条書きする
    - metrics.score と metrics.issue_count を更新し、recommendations 
      に最優先の改善アクションを3件以内で列挙する
  details:
    - name: 表現力
      items:
        - id: checks.expression
          text: '表現力観点: 表現技法の多様性 / 感情表現の豊かさ / 五感を使った描写 / 独創的な表現の使用'
    - name: 文体統一
      items:
        - id: checks.style
          text: '文体統一観点: 文体の一貫性 / トーンの統一 / 語り手の視点統一 / 作品全体の雰囲気'
    - name: 語彙コントロール
      items:
        - id: checks.vocabulary
          text: '語彙コントロール観点: 語彙選択の適切性 / 同義語の効果的使用 / 専門用語の適度な使用 / 読者層に合った語彙'
    - name: 描写精度
      items:
        - id: checks.description
          text: '描写精度観点: 比喩・暗喩の効果 / 情景描写の鮮明さ / 心理描写の深さ / 行動描写の生動感'
artifacts:
  format: json
  path_template: '{project_root}/.noveler/checks/EP{episode_number:04d}/step{step_id:02d}_quality.json'
  required_fields:
    - summary
    - issues
    - recommendations
    - metrics
  example: |-
    {
      "summary": {
        "overview": "文章表現・文体チェックの主要な所見をここに記述",
        "score": 82,
        "evidence": [
          "表現力: 原稿第3段落で誤用を確認"
        ]
      },
      "issues": {
        "expression": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "表現技法の多様性"
          }
        ],
        "style": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "文体の一貫性"
          }
        ],
        "vocabulary": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "語彙選択の適切性"
          }
        ],
        "description": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "比喩・暗喩の効果"
          }
        ]
      },
      "recommendations": [
        "誤用箇所を修正し、スタイルガイドに合わせる",
        "再発防止のために該当セクションを校正する"
      ],
      "metrics": {
        "issue_count": 4,
        "score": 82,
        "severity_distribution": {
          "low": 1,
          "medium": 3,
          "high": 0
        }
      }
    }
acceptance_criteria:
  checklist:
    - summary.overview と metrics.score を出力している
    - issues.<category>[] の各要素に before_text / after_text / severity / priority /
      rationale が含まれている
  metrics:
    - name: issue_count
      target: '>= 0'
      method: issues.* の総件数
    - name: score_range
      target: 0-100
      method: metrics.score の範囲検証
next:
  next_step_id: 11
  message_template: |-
    次のチェックステップは execute_check_step で step_id={next_step_id} を実行してください。
variables:
  - step_id
  - step_name
  - episode_number
  - completed_steps
  - total_steps
  - phase
control_settings:
  strict_single_step: true
  require_completion_confirm: true
  auto_advance_disabled: true
  batch_execution_blocked: true
  by_task:
    - id: checks.expression
      field: issues.expression
      rule: present
    - id: checks.style
      field: issues.style
      rule: present
    - id: checks.vocabulary
      field: issues.vocabulary
      rule: present
    - id: checks.description
      field: issues.description
      rule: present
check_criteria:
  expression:
    - 表現技法の多様性
    - 感情表現の豊かさ
    - 五感を使った描写
    - 独創的な表現の使用
  style:
    - 文体の一貫性
    - トーンの統一
    - 語り手の視点統一
    - 作品全体の雰囲気
  vocabulary:
    - 語彙選択の適切性
    - 同義語の効果的使用
    - 専門用語の適度な使用
    - 読者層に合った語彙
  description:
    - 比喩・暗喩の効果
    - 情景描写の鮮明さ
    - 心理描写の深さ
    - 行動描写の生動感
