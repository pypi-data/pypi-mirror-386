# STEP 07: 構造・起承転結チェック Schema v2

metadata:
  step_id: 7
  step_name: 構造・起承転結チェック
  phase: structure_quality
  version: 2.0.0
  last_updated: '2025-09-24'
  author: noveler system
  description: 物語構造・起承転結・シーン構成の効果性を確認
  estimated_duration: 15-20分
llm_config:
  role_messages:
    system: |-
      あなたは品質チェックスペシャリストです。constraints.hard_rules を厳守し、
      出力は artifacts の仕様に従った JSON のみを返してください。追加の説明文は不要です。
    user: |-
      構造・起承転結チェック に関する tasks・acceptance_criteria を順守してください。
      問題が見つからない場合でも issues.<category>[] は空配列として出力し、summary.evidence に根拠を示してください。
prompt:
  main_instruction: |-
    目的は「構造・起承転結チェック」です。inputs・constraints・tasks を満たし、
    artifacts の仕様に従った JSON をコードブロックなしで出力してください。
  next_action_instruction: |-
    ステップ {previous_step_id}「{previous_step_name}」が完了しました。

    続いて、ステップ {step_id}「{step_name}」を実行してください。
    伏線・回収チェックを行います：
    1. 伏線の適切な設置
    2. 回収のタイミングと効果
    3. 読者への情報提示のバランス
    4. 謎・疑問の解決度合い

    execute_check_step で step_id={step_id} を実行してください。
inputs:
  files:
    - path: '{project_root}/40_原稿/第{episode_number:03d}話*.md'
      required: true
      description: 対象エピソード原稿（最新稿）
    - path: '{project_root}/config/quality_rules.yaml'
      required: false
      description: 品質関連の設定があれば参照
  variables:
    episode_number:
      type: int
      required: true
    project_root:
      type: path
      required: true
constraints:
  hard_rules:
    - summary.overview と metrics.score を必ず出力する
    - issues は各カテゴリ (issues.*) をキーにもつオブジェクトとして出力する
    - 各 issue には before_text / after_text / severity / priority を添える
  soft_targets:
    - metrics.score は 80 以上を目指す
    - issues 全体の件数を 5 件以内に抑える（理想値）
tasks:
  bullets:
    - 構造・起承転結チェックの観点（起承転結、シーン目的、クライマックス、物語の流れ）を俯瞰し、重大度と優先度を判定する
    - issues.<category>[] に原稿抜粋・修正案・severity・priority・root_cause を含めて整理する
    - summary.overview に現状と改善方針を200字以内で要約し、summary.evidence に根拠を箇条書きする
    - metrics.score と metrics.issue_count を更新し、recommendations 
      に最優先の改善アクションを3件以内で列挙する
  details:
    - name: 起承転結
      items:
        - id: checks.structure
          text: '起承転結観点: 起承転結の明確な区分 / 各部分の分量バランス / 展開の自然な流れ / 構造的な完成度'
    - name: シーン目的
      items:
        - id: checks.scenes
          text: 'シーン目的観点: 各シーンの存在意義 / シーン間のつながり / 情報提示のタイミング / 感情の起伏の作り方'
    - name: クライマックス
      items:
        - id: checks.climax
          text: 'クライマックス観点: クライマックスの位置 / 盛り上がりの効果性 / 解決の満足度 / 読者の期待への応答'
    - name: 物語の流れ
      items:
        - id: checks.flow
          text: '物語の流れ観点: 物語の進行テンポ / 情報開示のペース / 緊張と緩和のバランス / 読者の関心維持'
artifacts:
  format: json
  path_template: '{project_root}/.noveler/checks/EP{episode_number:04d}/step{step_id:02d}_quality.json'
  required_fields:
    - summary
    - issues
    - recommendations
    - metrics
  example: |-
    {
      "summary": {
        "overview": "構造・起承転結チェックの主要な所見をここに記述",
        "score": 82,
        "evidence": [
          "起承転結: 原稿第3段落で誤用を確認"
        ]
      },
      "issues": {
        "structure": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "起承転結の明確な区分"
          }
        ],
        "scenes": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "各シーンの存在意義"
          }
        ],
        "climax": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "クライマックスの位置"
          }
        ],
        "flow": [
          {
            "location": "line 42",
            "before_text": "誤った表現",
            "after_text": "修正案",
            "severity": "medium",
            "priority": "high",
            "rationale": "物語の進行テンポ"
          }
        ]
      },
      "recommendations": [
        "誤用箇所を修正し、スタイルガイドに合わせる",
        "再発防止のために該当セクションを校正する"
      ],
      "metrics": {
        "issue_count": 4,
        "score": 82,
        "severity_distribution": {
          "low": 1,
          "medium": 3,
          "high": 0
        }
      }
    }
acceptance_criteria:
  checklist:
    - summary.overview と metrics.score を出力している
    - issues.<category>[] の各要素に before_text / after_text / severity / priority /
      rationale が含まれている
  metrics:
    - name: issue_count
      target: '>= 0'
      method: issues.* の総件数
    - name: score_range
      target: 0-100
      method: metrics.score の範囲検証
next:
  next_step_id: 8
  message_template: |-
    次のチェックステップは execute_check_step で step_id={next_step_id} を実行してください。
variables:
  - step_id
  - step_name
  - episode_number
  - completed_steps
  - total_steps
  - phase
control_settings:
  strict_single_step: true
  require_completion_confirm: true
  auto_advance_disabled: true
  batch_execution_blocked: true
  by_task:
    - id: checks.structure
      field: issues.structure
      rule: present
    - id: checks.scenes
      field: issues.scenes
      rule: present
    - id: checks.climax
      field: issues.climax
      rule: present
    - id: checks.flow
      field: issues.flow
      rule: present
check_criteria:
  structure:
    - 起承転結の明確な区分
    - 各部分の分量バランス
    - 展開の自然な流れ
    - 構造的な完成度
  scenes:
    - 各シーンの存在意義
    - シーン間のつながり
    - 情報提示のタイミング
    - 感情の起伏の作り方
  climax:
    - クライマックスの位置
    - 盛り上がりの効果性
    - 解決の満足度
    - 読者の期待への応答
  flow:
    - 物語の進行テンポ
    - 情報開示のペース
    - 緊張と緩和のバランス
    - 読者の関心維持
