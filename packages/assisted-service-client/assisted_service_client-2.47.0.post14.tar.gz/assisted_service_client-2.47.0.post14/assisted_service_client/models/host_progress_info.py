# coding: utf-8

"""
    AssistedInstall

    Assisted installation  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class HostProgressInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'installation_percentage': 'int',
        'current_stage': 'HostStage',
        'progress_info': 'str',
        'stage_started_at': 'datetime',
        'stage_updated_at': 'datetime',
        'stage_timed_out': 'bool'
    }

    attribute_map = {
        'installation_percentage': 'installation_percentage',
        'current_stage': 'current_stage',
        'progress_info': 'progress_info',
        'stage_started_at': 'stage_started_at',
        'stage_updated_at': 'stage_updated_at',
        'stage_timed_out': 'stage_timed_out'
    }

    def __init__(self, installation_percentage=None, current_stage=None, progress_info=None, stage_started_at=None, stage_updated_at=None, stage_timed_out=None):  # noqa: E501
        """HostProgressInfo - a model defined in Swagger"""  # noqa: E501

        self._installation_percentage = None
        self._current_stage = None
        self._progress_info = None
        self._stage_started_at = None
        self._stage_updated_at = None
        self._stage_timed_out = None
        self.discriminator = None

        if installation_percentage is not None:
            self.installation_percentage = installation_percentage
        if current_stage is not None:
            self.current_stage = current_stage
        if progress_info is not None:
            self.progress_info = progress_info
        if stage_started_at is not None:
            self.stage_started_at = stage_started_at
        if stage_updated_at is not None:
            self.stage_updated_at = stage_updated_at
        if stage_timed_out is not None:
            self.stage_timed_out = stage_timed_out

    @property
    def installation_percentage(self):
        """Gets the installation_percentage of this HostProgressInfo.  # noqa: E501


        :return: The installation_percentage of this HostProgressInfo.  # noqa: E501
        :rtype: int
        """
        return self._installation_percentage

    @installation_percentage.setter
    def installation_percentage(self, installation_percentage):
        """Sets the installation_percentage of this HostProgressInfo.


        :param installation_percentage: The installation_percentage of this HostProgressInfo.  # noqa: E501
        :type: int
        """

        self._installation_percentage = installation_percentage

    @property
    def current_stage(self):
        """Gets the current_stage of this HostProgressInfo.  # noqa: E501


        :return: The current_stage of this HostProgressInfo.  # noqa: E501
        :rtype: HostStage
        """
        return self._current_stage

    @current_stage.setter
    def current_stage(self, current_stage):
        """Sets the current_stage of this HostProgressInfo.


        :param current_stage: The current_stage of this HostProgressInfo.  # noqa: E501
        :type: HostStage
        """

        self._current_stage = current_stage

    @property
    def progress_info(self):
        """Gets the progress_info of this HostProgressInfo.  # noqa: E501


        :return: The progress_info of this HostProgressInfo.  # noqa: E501
        :rtype: str
        """
        return self._progress_info

    @progress_info.setter
    def progress_info(self, progress_info):
        """Sets the progress_info of this HostProgressInfo.


        :param progress_info: The progress_info of this HostProgressInfo.  # noqa: E501
        :type: str
        """

        self._progress_info = progress_info

    @property
    def stage_started_at(self):
        """Gets the stage_started_at of this HostProgressInfo.  # noqa: E501

        Time at which the current progress stage started.  # noqa: E501

        :return: The stage_started_at of this HostProgressInfo.  # noqa: E501
        :rtype: datetime
        """
        return self._stage_started_at

    @stage_started_at.setter
    def stage_started_at(self, stage_started_at):
        """Sets the stage_started_at of this HostProgressInfo.

        Time at which the current progress stage started.  # noqa: E501

        :param stage_started_at: The stage_started_at of this HostProgressInfo.  # noqa: E501
        :type: datetime
        """

        self._stage_started_at = stage_started_at

    @property
    def stage_updated_at(self):
        """Gets the stage_updated_at of this HostProgressInfo.  # noqa: E501

        Time at which the current progress stage was last updated.  # noqa: E501

        :return: The stage_updated_at of this HostProgressInfo.  # noqa: E501
        :rtype: datetime
        """
        return self._stage_updated_at

    @stage_updated_at.setter
    def stage_updated_at(self, stage_updated_at):
        """Sets the stage_updated_at of this HostProgressInfo.

        Time at which the current progress stage was last updated.  # noqa: E501

        :param stage_updated_at: The stage_updated_at of this HostProgressInfo.  # noqa: E501
        :type: datetime
        """

        self._stage_updated_at = stage_updated_at

    @property
    def stage_timed_out(self):
        """Gets the stage_timed_out of this HostProgressInfo.  # noqa: E501

        Indicate of the current stage has been timed out.  # noqa: E501

        :return: The stage_timed_out of this HostProgressInfo.  # noqa: E501
        :rtype: bool
        """
        return self._stage_timed_out

    @stage_timed_out.setter
    def stage_timed_out(self, stage_timed_out):
        """Sets the stage_timed_out of this HostProgressInfo.

        Indicate of the current stage has been timed out.  # noqa: E501

        :param stage_timed_out: The stage_timed_out of this HostProgressInfo.  # noqa: E501
        :type: bool
        """

        self._stage_timed_out = stage_timed_out

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HostProgressInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HostProgressInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
