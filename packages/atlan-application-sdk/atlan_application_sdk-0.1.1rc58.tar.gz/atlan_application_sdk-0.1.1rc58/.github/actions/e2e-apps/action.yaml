name: End to End Tests for Atlan Apps

description: |
  Runs End-to-End (E2E) tests for Atlan Apps.

  This action executes a comprehensive suite of end-to-end tests for Atlan applications.
  It validates the functionality of apps by:
  - Triggering E2E integration tests in the target app repository
  - Monitoring the test execution status
  - Ensuring tests complete successfully within timeout limits
  - Verifying the app works correctly with the latest SDK changes

  The tests ensure that Atlan apps remain compatible with SDK updates and
  continue to function as expected in a production-like environment.

inputs:
  github-token:
    required: true
    description: The GitHub token to use for the action.
  repo-name:
    required: true
    description: The name of the app repository to test.
  target-branch:
    required: true
    description: The target branch to test.

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}

    - name: Get the application-sdk commit SHA
      shell: bash
      run: |
        if [ "${{ github.event.pull_request.head.sha }}" ]; then
          echo "distinct_id=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
        else
          echo "distinct_id=${{ github.sha }}" >> $GITHUB_ENV
        fi

        if [ "${{ github.base_ref }}" ]; then
          echo "base_branch=refs/heads/${{ github.base_ref }}" >> $GITHUB_ENV
        else
          echo "base_branch=${{ github.ref }}" >> $GITHUB_ENV
        fi

    - name: Trigger E2E Integrations Tests
      uses: codex-/return-dispatch@v2
      id: return_dispatch
      with:
        token: "${{ inputs.github-token }}"
        ref: ${{ inputs.target-branch }}
        repo: ${{ inputs.repo-name }}
        owner: "atlanhq"
        workflow: "e2e-integration-test.yaml"
        workflow_timeout_seconds: 300
        workflow_job_steps_retry_seconds: 20
        distinct_id: "${{ env.distinct_id }}"

    - name: Check the test logs using the below run URL
      shell: bash
      run: |
        echo ${{steps.return_dispatch.outputs.run_id}}
        echo ${{steps.return_dispatch.outputs.run_url}}

    - name: Check Workflow Status
      shell: bash
      run: |
        repo_owner="atlanhq"
        repo_name="${{ matrix.repo_name }}"
        run_id="${{steps.return_dispatch.outputs.run_id}}"

        echo "Checking status of workflow run $run_id in $repo_name"

        status="in_progress"
        start_time=$(date +%s)
        timeout=300
        while [[ "$status" == "in_progress" || "$status" == "queued" ]]; do
          sleep 30
          response=$(curl -s -H "Authorization: Bearer ${{ inputs.github-token }}" \
            https://api.github.com/repos/$repo_owner/$repo_name/actions/runs/$run_id)
          status=$(echo $response | jq -r '.status')
          conclusion=$(echo $response | jq -r '.conclusion')

          current_time=$(date +%s)
          elapsed_time=$((current_time - start_time))

          if [[ $elapsed_time -ge $timeout ]]; then
            echo "Workflow run timeout reached after $timeout seconds"
            exit 1
          fi
        done

        if [[ "$conclusion" != "success" ]]; then
          echo "Workflow run $run_id in $repo_name failed with conclusion $conclusion"
          exit 1
        else
          echo "Workflow run $run_id in $repo_name succeeded"
        fi
