# schema.yaml
table: Schema
columns:
  attributes:
    name:
      source_query: schema_name
    qualifiedName:
      source_query: concat(connection_qualified_name, '/', catalog_name, '/', schema_name)
      source_columns: [connection_qualified_name, catalog_name, schema_name]
    connectionQualifiedName:
      source_query: connection_qualified_name
    connectionName:
      source_query: connection_name
    description:
      source_query: |
        CASE
          WHEN remarks IS NOT NULL THEN
            REGEXP_REPLACE(REGEXP_REPLACE(SUBSTRING(COALESCE(remarks, ''), 1, 100000), '<[^>]+>', ''), '\s+', ' ')
          ELSE
            NULL
        END
      source_columns: [remarks]
    databaseName:
      source_query: catalog_name
    databaseQualifiedName:
      source_query: concat(connection_qualified_name, '/', catalog_name)
      source_columns: [connection_qualified_name, catalog_name]
    tableCount:
      source_query: table_count
    viewsCount:
      source_query: views_count
    catalogId:
      source_query: catalog_id
    isManagedAccess:
      source_query: is_managed_access
    database:
      typeName:
        source_query: "'Database'"
      attributes:
        source_query: NULL
      uniqueAttributes:
        qualifiedName:
          source_query: concat(connection_qualified_name, '/', catalog_name)
          source_columns: [connection_qualified_name, catalog_name]
    tenantId:
      source_query: tenant_id
    lastSyncWorkflowName:
      source_query: last_sync_workflow_name
    lastSyncRun:
      source_query: last_sync_run
    lastSyncRunAt:
      source_query: last_sync_run_at
    connectorName:
      source_query: connector_name
  customAttributes:
    source_query: NULL
  typeName:
    source_query: "'Schema'"
  status:
    source_query: "'ACTIVE'"