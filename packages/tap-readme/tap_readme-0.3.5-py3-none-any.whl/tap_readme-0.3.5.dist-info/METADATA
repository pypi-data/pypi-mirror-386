Metadata-Version: 2.4
Name: tap-readme
Version: 0.3.5
Summary: Singer tap for ReadMe.com, built with the Meltano SDK for Singer Taps.
Project-URL: Documentation, https://github.com/reservoir-data/tap-readme#readme
Project-URL: Homepage, https://github.com/reservoir-data/tap-readme
Project-URL: Repository, https://github.com/reservoir-data/tap-readme
Author-email: Edgar Ramírez-Mondragón <edgarrmondragon@hey.com>
Maintainer-email: Edgar Ramírez-Mondragón <edgarrmondragon@hey.com>
License-Expression: Apache-2.0
License-File: LICENSE
Keywords: ELT,ReadMe.com,singer.io
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Requires-Python: >=3.10
Requires-Dist: requests~=2.32.0
Requires-Dist: singer-sdk~=0.51.0
Requires-Dist: typing-extensions>=4.15; python_full_version < '3.12'
Description-Content-Type: text/markdown

# tap-readme

Singer tap for ReadMe.com.

Built with the [Meltano Singer SDK](https://sdk.meltano.com).

## Capabilities

* `catalog`
* `state`
* `discover`
* `about`
* `stream-maps`
* `schema-flattening`
* `batch`

## Settings

| Setting             | Required | Default | Description |
|:--------------------|:--------:|:-------:|:------------|
| api_key             | True     | None    | API Key for ReadMe.com |
| stream_maps         | False    | None    | Config object for stream maps capability. For more information check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html). |
| stream_map_config   | False    | None    | User-defined config values to be used within map expressions. |
| faker_config        | False    | None    | Config for the [`Faker`](https://faker.readthedocs.io/en/master/) instance variable `fake` used within map expressions. Only applicable if the plugin specifies `faker` as an addtional dependency (through the `singer-sdk` `faker` extra or directly). |
| flattening_enabled  | False    | None    | 'True' to enable schema flattening and automatically expand nested properties. |
| flattening_max_depth| False    | None    | The max depth to flatten schemas. |
| batch_config        | False    | None    |             |

A full list of supported settings and capabilities is available by running: `tap-readme --about`

## Supported Python Versions

* 3.10
* 3.11
* 3.12
* 3.13
* 3.14

### Source Authentication and Authorization

Follow the [official authentication instructions](https://docs.readme.com/main/reference/intro/authentication) to get an API Key.

## Usage

You can easily run `tap-readme` by itself or in a pipeline using [Meltano](https://meltano.com/).

### Executing the Tap Directly

```bash
tap-readme --version
tap-readme --help
tap-readme --config CONFIG --discover > ./catalog.json
```

## Developer Resources

### Initialize your Development Environment

```bash
uv tool install --with tox-uv tox
```

### Create and Run Tests

Run all tests:

```bash
tox run-parallel
```

### Testing with [Meltano](https://www.meltano.com)

_**Note:** This tap will work in any Singer environment and does not require Meltano.
Examples here are for convenience and to streamline end-to-end orchestration scenarios._

Your project comes with a custom `meltano.yml` project file already created. Go ahead and [install Meltano](https://docs.meltano.com/getting-started/installation/) if you haven't already.

1. Install all plugins

   ```bash
   meltano install
   ```

1. Check that the extractor is working properly

   ```bash
   meltano invoke tap-tap-readme --version
   ```

1. Execute an ELT pipeline

   ```bash
   meltano run tap-tap-readme target-jsonl
   ```

### SDK Dev Guide

See the [dev guide](https://sdk.meltano.com/en/latest/dev_guide.html) for more instructions on how to use the SDK to
develop your own taps and targets.
