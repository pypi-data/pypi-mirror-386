import"./disclose-version.Bg9kRutz.js";import{a as b,p as w}from"./runtime.Qq3DoWX7.js";import{f as y,g,d as k}from"./render.DzT6dLEH.js";import{d as p,w as f}from"./index.Br-Jfejo.js";import{c as v}from"./load.BJVQ2rZi.js";var _=k('<div class="text-center text-2xl mt-2"><p class="my-4">No data found.</p> <p>Did you create any runs?</p> <p>Did you set REDLITE_DATA_DIR environment correctly?</p> <p class="my-4">See <a class="text-blue-800" href="https://innodatalabs.github.io/redlite/">https://innodatalabs.github.io/redlite/</a> for the documentation.</p></div>');function S(o,r){b(r,!1);var s=g(o,!0,_);y(o,s),w()}const i=f(!1),D=(()=>{const{subscribe:o,set:r}=f([]);async function s(){try{i.set(!0);const t=await v();t.sort((m,l)=>new Date(l.completed)-new Date(m.completed)),r(t)}finally{i.set(!1)}}return s(),{subscribe:o,refresh:s}})(),n=o=>`${o.dataset} ${o.split} ${o.data_digest} ${o.metric}`,u=1e-4,O=p(D,(o,r)=>{const s={},t={};for(const e of o)s[e.model]===void 0&&(s[e.model]={model:e.model,tasks:{},winRate:0}),s[e.model].tasks[n(e)]===void 0&&(s[e.model].tasks[n(e)]={data_digest:e.data_digest,dataset:e.dataset,split:e.split,metric:e.metric,winner:!1,runs:[]}),s[e.model].tasks[n(e)].runs.push(e),t[n(e)]===void 0&&(t[n(e)]={taskHash:n(e),data_digest:e.data_digest,dataset:e.dataset,split:e.split,metric:e.metric,models:{},highestScore:0}),t[n(e)].models[e.model]===void 0&&(t[n(e)].models[e.model]={model:e.model,runs:[],wins:0}),t[n(e)].models[e.model].runs.push(e);for(const e of Object.values(t)){for(const a of Object.values(e.models))a.runs.sort((c,h)=>new Date(h.completed)-new Date(c.completed)),a.completed=a.runs[0].completed,a.score_summary=a.runs[0].score_summary;const d=Math.max(...Object.values(e.models).map(a=>a.score_summary.mean));e.highestScore=d;for(const a of Object.values(e.models))Math.abs(a.score_summary.mean-d)<u&&d>u&&(a.wins+=1,s[a.model].winRate+=1,s[a.model].tasks[e.taskHash].winner=!0)}for(const e of Object.values(s)){for(const d of Object.values(e.tasks))d.runs.sort((a,c)=>new Date(c.completed)-new Date(a.completed)),d.completed=d.runs[0].completed,d.score_summary=d.runs[0].score_summary;e.winRate/=Object.keys(t).length}const m=[...Object.values(s)];m.sort((e,d)=>d.winRate-e.winRate);const l=[...Object.values(t)];l.sort((e,d)=>new Date(d.completed)-new Date(e.completed)),r({models:m,tasks:l})},{models:[],tasks:[]}),T=p(O,o=>{const r=[];for(const s of o.tasks)for(const t of Object.values(s.models))r.push({x:s.dataset+"@"+s.data_digest.slice(0,6),y:t.model,v:t.score_summary.mean});return r},[]);export{S as N,O as a,T as h,i as l,D as r};
