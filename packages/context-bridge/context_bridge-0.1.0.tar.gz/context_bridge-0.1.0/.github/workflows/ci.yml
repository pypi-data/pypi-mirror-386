name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_context_bridge
          POSTGRES_USER: test_user
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      ollama:
        image: ollama/ollama:latest
        options: >-
          --health-cmd "ollama list"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 11434:11434

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
        echo "PostgreSQL is ready!"

    - name: Wait for Ollama
      run: |
        until curl -f http://localhost:11434/api/tags >/dev/null 2>&1; do
          echo "Waiting for Ollama..."
          sleep 2
        done
        echo "Ollama is ready!"

    - name: Pull Ollama model
      run: |
        docker exec $(docker ps -q --filter ancestor=ollama/ollama) ollama pull nomic-embed-text

    - name: Set up test database
      run: |
        uv run python scripts/setup_test_db.py init
      env:
        TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_context_bridge

    - name: Run unit tests
      run: |
        uv run pytest tests/unit/ -v --tb=short

    - name: Run integration tests
      run: |
        uv run pytest tests/integration/ -v --tb=short --maxfail=5
      env:
        TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_context_bridge
        OLLAMA_BASE_URL: http://localhost:11434

    - name: Generate coverage report
      run: |
        uv run pytest --cov=context_bridge --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Clean up test database
      if: always()
      run: |
        uv run python scripts/setup_test_db.py clean
      env:
        TEST_DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_context_bridge