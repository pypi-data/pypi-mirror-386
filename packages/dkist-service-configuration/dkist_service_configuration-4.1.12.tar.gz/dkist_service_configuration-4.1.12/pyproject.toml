[build-system]

requires = [
    "setuptools>=62.1",
    "setuptools_scm[toml]>=6.2",
]

build-backend = 'setuptools.build_meta'

[project]
name = "dkist-service-configuration"
description = "Library for retrieving configurations for DKIST services"
readme = "README.rst"
requires-python = ">=3.11"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
license = { text = "BSD 3-Clause" }
authors = [
  { name = "NSO / AURA", email = "dkistdc@nso.edu" },
]

dependencies = [
    "loguru~=0.7.0",
    "pydantic-settings~=2.0",
    "pydantic~=2.0",
    "tenacity>=8.2,<10.0",
    "opentelemetry-sdk~=1.31",
    "opentelemetry-exporter-otlp~=1.31",
    # auto instrumentation
    "opentelemetry-instrumentation-pika~=0.52b0",
    "opentelemetry-instrumentation-system-metrics[instruments]~=0.52b0",  # needs psutil
    "opentelemetry-instrumentation-requests~=0.52b0",
    "opentelemetry-instrumentation-aiohttp-client~=0.52b0",
    "opentelemetry-instrumentation-botocore~=0.52b0",
    "opentelemetry-instrumentation-celery~=0.52b0",
    "opentelemetry-instrumentation-fastapi~=0.52b0",
    "opentelemetry-instrumentation-psycopg2~=0.52b0",
    "opentelemetry-instrumentation-pymongo~=0.52b0",
    "opentelemetry-instrumentation-redis~=0.52b0",
    "opentelemetry-instrumentation-sqlalchemy~=0.52b0",
]

dynamic = ["version"]

# tox is not required to run the tests, but simplifies IDE integration
# Pygments is solely to support README.rst rendering
[project.optional-dependencies]
test = [
    "tox>=4",
    "pytest",
    "pytest-cov",
    "talus~=1.3",
    "fastapi[all]~=0.116.1",
    "secure~=1.0.1",
]
isb = [
    "talus~=1.3",
]
fastapi = [
    "fastapi~=0.116.1",
    "secure~=1.0.1",
]

[project.urls]
repository = "https://bitbucket.org/dkistdc/dkist_service_configuration"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]

[tool.setuptools.package-data]
# include .ttf files from any directory
"*" = ["*.ttf"]

[tool.setuptools_scm]
write_to = "dkist_service_configuration/_version.py"

[tool.pytest.ini_options]
testpaths = [
  "dkist_service_configuration",
]
markers = [
  "development: For tests that can only be  run while developing with a sidecar proxy (as opposed to in bitbucket pipelines)"
]

[tool.coverage.run]
omit = [
    "*/dkist_service_configuration/tests/*",
    "*/dkist_service_configuration/_version.py"
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_single_line = true
combine_as_imports = false
line_length = 100
