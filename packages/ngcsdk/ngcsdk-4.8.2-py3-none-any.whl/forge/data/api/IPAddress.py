"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class IPAddress(object):
    """Generic IP address"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.ip = (
            None if not fromDict or propDict.get(
                "ip"
            ) is None
            else propDict["ip"])

    @property
    def ip(self):
        """ """
        return self._ip

    @ip.setter
    def ip(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._ip = value
        else:
            raise TypeError(
                'Property "ip" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._ip is not None:
            result["ip"] = \
                self._ip
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._ip is None:
            raise ValueError(
                "IPAddress.ip doesnt match requirement:" 
                "required: true"
            )
        if (self._ip is not None
            and
            not re.match(
                r"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0"
                "-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5"
                "])$",
                 self._ip)):
            raise ValueError(
                "IPAddress.ip: " + str(self._ip) + 
                " doesnt match requirement: pattern: ^(([0-9]|[1-9][0-9]|1[0-"
                "9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9"
                "][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$")
        return True
    

