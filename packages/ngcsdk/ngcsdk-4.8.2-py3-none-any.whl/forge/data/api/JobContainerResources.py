"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class JobContainerResources(object):
    """Describes the cpu and memory resources for the job containers"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.cpu = (
            None if not fromDict or propDict.get(
                "cpu"
            ) is None
            else propDict["cpu"])
        self.memory = (
            None if not fromDict or propDict.get(
                "memory"
            ) is None
            else propDict["memory"])

    @property
    def cpu(self):
        """str: CPU resource allocated for the container, default is 100m (=0.
        1 cores)"""
        return self._cpu

    @cpu.setter
    def cpu(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._cpu = value
        else:
            raise TypeError(
                'Property "cpu" of type "list<str>" set to wrong type'
            )

    @property
    def memory(self):
        """str: Memory resource allocated for the container, default is 500Mi 
        (=500 * 1024 * 1024 bytes)"""
        return self._memory

    @memory.setter
    def memory(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._memory = value
        else:
            raise TypeError(
                'Property "memory" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._cpu is not None:
            result["cpu"] = \
                self._cpu
        if self._memory is not None:
            result["memory"] = \
                self._memory
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

