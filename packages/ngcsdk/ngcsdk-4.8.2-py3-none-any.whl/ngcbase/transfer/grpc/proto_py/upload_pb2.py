#
# Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: upload.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0cupload.proto\x12"com.nvidia.ngc.storageservice.grpc"\xa8\x02\n\nPutRequest\x12\x41\n\x03key\x18\x01'
    b" \x01(\x0b\x32\x32.com.nvidia.ngc.storageservice.grpc.PutRequest.KeyH\x00\x12\x45\n\x05\x63hunk\x18\x02"
    b" \x01(\x0b\x32\x34.com.nvidia.ngc.storageservice.grpc.PutRequest.ChunkH\x00\x1aP\n\x03Key\x12\x0b\n\x03key\x18\x01"
    b" \x01(\t\x12\x1b\n\x13requestContinuation\x18\x02 \x01(\x08\x12\x0b\n\x03jwt\x18\x03"
    b" \x01(\t\x12\x12\n\npermission\x18\x04 \x01(\x05\x1a\x35\n\x05\x43hunk\x12\x0c\n\x04\x64\x61ta\x18\x01"
    b" \x01(\x0c\x12\x10\n\x08position\x18\x02 \x01(\x03\x12\x0c\n\x04last\x18\x03"
    b' \x01(\x08\x42\x07\n\x05value"Y\n\x0bPutResponse\x12\x17\n\x0ftotalTransfered\x18\x01'
    b" \x01(\x03\x12\x0e\n\x06status\x18\x02 \x01(\x05\x12\x0f\n\x07message\x18\x03"
    b' \x01(\t\x12\x10\n\x08\x66ileName\x18\x04 \x01(\t"8\n\x0f\x44ownloadRequest\x12\x10\n\x08\x66ilePath\x18\x01'
    b' \x01(\t\x12\x13\n\x0binitialSeek\x18\x02 \x01(\x03"\xba\x03\n\x10\x44ownloadResponse\x12G\n\x03key\x18\x01'
    b" \x01(\x0b\x32\x38.com.nvidia.ngc.storageservice.grpc.DownloadResponse.KeyH\x00\x12I\n\x04\x64\x61ta\x18\x02"
    b" \x01(\x0b\x32\x39.com.nvidia.ngc.storageservice.grpc.DownloadResponse.DataH\x00\x12I\n\x04last\x18\x03"
    b" \x01(\x0b\x32\x39.com.nvidia.ngc.storageservice.grpc.DownloadResponse.LastH\x00\x12K\n\x05\x65rror\x18\x04"
    b" \x01(\x0b\x32:.com.nvidia.ngc.storageservice.grpc.DownloadResponse.ErrorH\x00\x1a\x17\n\x03Key\x12\x10\n\x08\x66ilePath\x18\x01"
    b" \x01(\t\x1a&\n\x04\x44\x61ta\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\x10\n\x08position\x18\x02"
    b" \x01(\x03\x1a\x06\n\x04Last\x1a(\n\x05\x45rror\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02"
    b' \x01(\x05\x42\x07\n\x05value"\x14\n\x12HealthCheckRequest"\xa8\x01\n\x13HealthCheckResponse\x12U\n\x06status\x18\x01'
    b' \x01(\x0e\x32\x45.com.nvidia.ngc.storageservice.grpc.HealthCheckResponse.ServingStatus":\n\rServingStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SERVING\x10\x01\x12\x0f\n\x0bNOT_SERVING\x10\x02\x32\xf7\x01\n\x0e\x44\x61taSetService\x12j\n\x03Put\x12..com.nvidia.ngc.storageservice.grpc.PutRequest\x1a/.com.nvidia.ngc.storageservice.grpc.PutResponse(\x01\x30\x01\x12y\n\x08\x44ownload\x12\x33.com.nvidia.ngc.storageservice.grpc.DownloadRequest\x1a\x34.com.nvidia.ngc.storageservice.grpc.DownloadResponse(\x01\x30\x01\x32\x8f\x01\n\rHealthService\x12~\n\x0bHealthCheck\x12\x36.com.nvidia.ngc.storageservice.grpc.HealthCheckRequest\x1a\x37.com.nvidia.ngc.storageservice.grpc.HealthCheckResponseB+\n"com.nvidia.ngc.storageservice.grpcB\x03\x44SSP\x01\x62\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "upload_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b'\n"com.nvidia.ngc.storageservice.grpcB\003DSSP\001'
    _globals["_PUTREQUEST"]._serialized_start = 53
    _globals["_PUTREQUEST"]._serialized_end = 349
    _globals["_PUTREQUEST_KEY"]._serialized_start = 205
    _globals["_PUTREQUEST_KEY"]._serialized_end = 285
    _globals["_PUTREQUEST_CHUNK"]._serialized_start = 287
    _globals["_PUTREQUEST_CHUNK"]._serialized_end = 340
    _globals["_PUTRESPONSE"]._serialized_start = 351
    _globals["_PUTRESPONSE"]._serialized_end = 440
    _globals["_DOWNLOADREQUEST"]._serialized_start = 442
    _globals["_DOWNLOADREQUEST"]._serialized_end = 498
    _globals["_DOWNLOADRESPONSE"]._serialized_start = 501
    _globals["_DOWNLOADRESPONSE"]._serialized_end = 943
    _globals["_DOWNLOADRESPONSE_KEY"]._serialized_start = 821
    _globals["_DOWNLOADRESPONSE_KEY"]._serialized_end = 844
    _globals["_DOWNLOADRESPONSE_DATA"]._serialized_start = 846
    _globals["_DOWNLOADRESPONSE_DATA"]._serialized_end = 884
    _globals["_DOWNLOADRESPONSE_LAST"]._serialized_start = 886
    _globals["_DOWNLOADRESPONSE_LAST"]._serialized_end = 892
    _globals["_DOWNLOADRESPONSE_ERROR"]._serialized_start = 894
    _globals["_DOWNLOADRESPONSE_ERROR"]._serialized_end = 934
    _globals["_HEALTHCHECKREQUEST"]._serialized_start = 945
    _globals["_HEALTHCHECKREQUEST"]._serialized_end = 965
    _globals["_HEALTHCHECKRESPONSE"]._serialized_start = 968
    _globals["_HEALTHCHECKRESPONSE"]._serialized_end = 1136
    _globals["_HEALTHCHECKRESPONSE_SERVINGSTATUS"]._serialized_start = 1078
    _globals["_HEALTHCHECKRESPONSE_SERVINGSTATUS"]._serialized_end = 1136
    _globals["_DATASETSERVICE"]._serialized_start = 1139
    _globals["_DATASETSERVICE"]._serialized_end = 1386
    _globals["_HEALTHSERVICE"]._serialized_start = 1389
    _globals["_HEALTHSERVICE"]._serialized_end = 1532
# @@protoc_insertion_point(module_scope)
