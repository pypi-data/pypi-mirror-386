"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types
from .MalwareScanStatusEnum import MalwareScanStatusEnum

# Unused import over optimization prevention
str(repr(MalwareScanStatusEnum))


if sys.version_info > (3,):
    long = int
    unicode = str

class NotifyMalwareScanResultResponse(object):
    """Notify malware scan result response"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.status = (
            None if not fromDict or propDict.get(
                "status"
            ) is None
            else propDict["status"])

    @property
    def status(self):
        """MalwareScanStatusEnum: Malware scan status"""
        return self._status

    @status.setter
    def status(self, value):
        if (value is None) or isinstance(value, str) or isinstance(value, unicode):
            self._status = value
        else:
            raise TypeError(
                'Property "status" of type "list<MalwareScanStatusEnum>" set '
                'to wrong type'
            )

    def toDict(self):
        result = {}
        if self._status is not None:
            result["status"] = \
                self._status
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

