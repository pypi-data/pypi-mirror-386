"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class StorageNfsv3Info(object):
    """Describes the parameters required for mounting a data volume exported v
    ia NFSv3"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.NFS_PLACEHOLDER = (
            None if not fromDict or propDict.get(
                "NFS_PLACEHOLDER"
            ) is None
            else propDict["NFS_PLACEHOLDER"])

    @property
    def NFS_PLACEHOLDER(self):
        """str: Placeholder for NFS mount arguments. Delete this when you add 
        the actual parameters."""
        return self._NFS_PLACEHOLDER

    @NFS_PLACEHOLDER.setter
    def NFS_PLACEHOLDER(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._NFS_PLACEHOLDER = value
        else:
            raise TypeError(
                'Property "NFS_PLACEHOLDER" of type "list<str>" set to wrong '
                'type'
            )

    def toDict(self):
        result = {}
        if self._NFS_PLACEHOLDER is not None:
            result["NFS_PLACEHOLDER"] = \
                self._NFS_PLACEHOLDER
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

