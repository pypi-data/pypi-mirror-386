"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class UserStorageQuotaUpdateRequest(object):
    """object used to request user storage quota update"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.aceName = (
            None if not fromDict or propDict.get(
                "aceName"
            ) is None
            else propDict["aceName"])
        self.quota = (
            None if not fromDict or propDict.get(
                "quota"
            ) is None
            else propDict["quota"])
        self.storageClusterUuid = (
            None if not fromDict or propDict.get(
                "storageClusterUuid"
            ) is None
            else propDict["storageClusterUuid"])

    @property
    def aceName(self):
        """str: ace name"""
        return self._aceName

    @aceName.setter
    def aceName(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._aceName = value
        else:
            raise TypeError(
                'Property "aceName" of type "list<str>" set to wrong type'
            )

    @property
    def quota(self):
        """int: target total storage quota in GB"""
        return self._quota

    @quota.setter
    def quota(self, value):
        if value is not None and not isinstance(value, int):
            value = int(value)
        if (value is None) or isinstance(value, int):
            self._quota = value
        else:
            raise TypeError(
                'Property "quota" of type "list<int>" set to wrong type'
            )

    @property
    def storageClusterUuid(self):
        """str: Identifier to this storage cluster. If not provided, will defa
        ult to the default storage cluster"""
        return self._storageClusterUuid

    @storageClusterUuid.setter
    def storageClusterUuid(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._storageClusterUuid = value
        else:
            raise TypeError(
                'Property "storageClusterUuid" of type "list<str>" set to wro'
                'ng type'
            )

    def toDict(self):
        result = {}
        if self._aceName is not None:
            result["aceName"] = \
                self._aceName
        if self._quota is not None:
            result["quota"] = \
                self._quota
        if self._storageClusterUuid is not None:
            result["storageClusterUuid"] = \
                self._storageClusterUuid
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._aceName is None:
            raise ValueError(
                "UserStorageQuotaUpdateRequest.aceName doesnt match requirement:" 
                "required: True"
            )
        if self._quota is None:
            raise ValueError(
                "UserStorageQuotaUpdateRequest.quota doesnt match requirement:" 
                "required: True"
            )
        return True
    

