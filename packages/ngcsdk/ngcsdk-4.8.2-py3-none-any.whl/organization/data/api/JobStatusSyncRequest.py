"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class JobStatusSyncRequest(object):
    """object used by the cloud to send a request on /queue/v1/marathon/jobSta
    tus subscription to the node expecting the node to provide current sta
    tus for the list of jobs in the request"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.jobIds = (
            None if not fromDict or propDict.get(
                "jobIds"
            ) is None
            else propDict["jobIds"])

    @property
    def jobIds(self):
        """list: list of job ids that cloud is requesting status update from t
        he node"""
        return self._jobIds

    @jobIds.setter
    def jobIds(self, value):
        if value is not None and not isinstance(value, list):
            value = list(value)
        if (value is None) or isinstance(value, list):
            self._jobIds = value
        else:
            raise TypeError(
                'Property "jobIds" of type "list<long>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._jobIds is not None:
            result["jobIds"] = \
                self._jobIds
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._jobIds is None:
            raise ValueError(
                "JobStatusSyncRequest.jobIds doesnt match requirement:" 
                "required: True"
            )
        if (self._jobIds is not None
            and
            len(self._jobIds) < 1):
            raise ValueError(
                "JobStatusSyncRequest.jobIds: " + str(self._jobIds) + 
                " doesnt match requirement: minItems: 1")
        return True
    

