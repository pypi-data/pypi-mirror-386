"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class RotateApiKeyRequest(object):
    """Rotate api key request"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.expiryDate = (
            None if not fromDict or propDict.get(
                "expiryDate"
            ) is None
            else propDict["expiryDate"])

    @property
    def expiryDate(self):
        """str: Expiration date of the key"""
        return self._expiryDate

    @expiryDate.setter
    def expiryDate(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._expiryDate = value
        else:
            raise TypeError(
                'Property "expiryDate" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._expiryDate is not None:
            result["expiryDate"] = \
                self._expiryDate
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._expiryDate is None:
            raise ValueError(
                "RotateApiKeyRequest.expiryDate doesnt match requirement:" 
                "required: True"
            )
        return True
    

