"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class RedeemPreviewSubscriptionRequest(object):
    """Redeem preview subscription request object"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.codes = (
            None if not fromDict or propDict.get(
                "codes"
            ) is None
            else propDict["codes"])

    @property
    def codes(self):
        """list: codes/serial numbers to redeem offer"""
        return self._codes

    @codes.setter
    def codes(self, value):
        if value is not None and not isinstance(value, list):
            value = list(value)
        if (value is None) or isinstance(value, list):
            self._codes = value
        else:
            raise TypeError(
                'Property "codes" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._codes is not None:
            result["codes"] = \
                self._codes
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._codes is None:
            raise ValueError(
                "RedeemPreviewSubscriptionRequest.codes doesnt match requirement:" 
                "required: True"
            )
        return True
    

