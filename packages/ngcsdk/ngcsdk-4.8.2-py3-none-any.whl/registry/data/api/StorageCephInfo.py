"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class StorageCephInfo(object):
    """Describes the parameters required for mounting a CephFS path"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.shareClientId = (
            None if not fromDict or propDict.get(
                "shareClientId"
            ) is None
            else propDict["shareClientId"])
        self.shareSecret = (
            None if not fromDict or propDict.get(
                "shareSecret"
            ) is None
            else propDict["shareSecret"])

    @property
    def shareClientId(self):
        """str: Client id that should be used when mounting the CephFS path"""
        return self._shareClientId

    @shareClientId.setter
    def shareClientId(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._shareClientId = value
        else:
            raise TypeError(
                'Property "shareClientId" of type "list<str>" set to wrong ty'
                'pe'
            )

    @property
    def shareSecret(self):
        """str: Secret required to mount CephFS path"""
        return self._shareSecret

    @shareSecret.setter
    def shareSecret(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._shareSecret = value
        else:
            raise TypeError(
                'Property "shareSecret" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._shareClientId is not None:
            result["shareClientId"] = \
                self._shareClientId
        if self._shareSecret is not None:
            result["shareSecret"] = \
                self._shareSecret
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

