"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class AlertDeliveryMode(object):
    """Alert delivery mode"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.deliveryMode = (
            None if not fromDict or propDict.get(
                "deliveryMode"
            ) is None
            else propDict["deliveryMode"])
        self.deliveryModePoints = (
            None if not fromDict or propDict.get(
                "deliveryModePoints"
            ) is None
            else propDict["deliveryModePoints"])
        self.secret = (
            None if not fromDict or propDict.get(
                "secret"
            ) is None
            else propDict["secret"])

    @property
    def deliveryMode(self):
        """DeliveryModeEnum: Mode of delivery"""
        return self._deliveryMode

    @deliveryMode.setter
    def deliveryMode(self, value):
        if (value is None) or isinstance(value, str) or isinstance(value, unicode):
            self._deliveryMode = value
        else:
            raise TypeError(
                'Property "deliveryMode" of type "list<DeliveryModeEnum>" set'
                ' to wrong type'
            )

    DeliveryModeEnum=["EMAIL","POST",]
    str(repr(DeliveryModeEnum))  # Prevent optimizer removing enum

    @property
    def deliveryModePoints(self):
        """list: Point of delivery, list of email addresses or URLs to post th
        e alert to"""
        return self._deliveryModePoints

    @deliveryModePoints.setter
    def deliveryModePoints(self, value):
        if value is not None and not isinstance(value, list):
            value = list(value)
        if (value is None) or isinstance(value, list):
            self._deliveryModePoints = value
        else:
            raise TypeError(
                'Property "deliveryModePoints" of type "list<str>" set to wro'
                'ng type'
            )

    @property
    def secret(self):
        """str: User defined secret value, will be present in the post header 
        for key X-Dgx-Secret"""
        return self._secret

    @secret.setter
    def secret(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._secret = value
        else:
            raise TypeError(
                'Property "secret" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._deliveryMode is not None:
            result["deliveryMode"] = \
                self._deliveryMode
        if self._deliveryModePoints is not None:
            result["deliveryModePoints"] = \
                self._deliveryModePoints
        if self._secret is not None:
            result["secret"] = \
                self._secret
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._deliveryMode is None:
            raise ValueError(
                "AlertDeliveryMode.deliveryMode doesnt match requirement:" 
                "required: True"
            )
        if self._deliveryModePoints is None:
            raise ValueError(
                "AlertDeliveryMode.deliveryModePoints doesnt match requirement:" 
                "required: True"
            )
        if (self._deliveryModePoints is not None
            and
            len(self._deliveryModePoints) < 6):
            raise ValueError(
                "AlertDeliveryMode.deliveryModePoints: " + str(self._deliveryModePoints) + 
                " doesnt match requirement: minLength: 6")
        if (self._deliveryModePoints is not None
            and
            len(self._deliveryModePoints) > 255):
            raise ValueError(
                "AlertDeliveryMode.deliveryModePoints: " + str(self._deliveryModePoints) + 
                " doesnt match requirement: maxLength: 255")
        if (self._deliveryModePoints is not None
            and
            len(self._deliveryModePoints) < 1):
            raise ValueError(
                "AlertDeliveryMode.deliveryModePoints: " + str(self._deliveryModePoints) + 
                " doesnt match requirement: minItems: 1")
        if (self._secret is not None
            and
            len(self._secret) > 64):
            raise ValueError(
                "AlertDeliveryMode.secret: " + str(self._secret) + 
                " doesnt match requirement: maxLength: 64")
        return True
    

