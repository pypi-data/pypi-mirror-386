"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class InfinityManagerSettings(object):
    """Infinity manager setting definition"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.infinityManagerEnableTeamOverride = (
            None if not fromDict or propDict.get(
                "infinityManagerEnableTeamOverride"
            ) is None
            else propDict["infinityManagerEnableTeamOverride"])
        self.infinityManagerEnabled = (
            None if not fromDict or propDict.get(
                "infinityManagerEnabled"
            ) is None
            else propDict["infinityManagerEnabled"])

    @property
    def infinityManagerEnableTeamOverride(self):
        """bool: Allow override settings at team level. Only used in org level
         object"""
        return self._infinityManagerEnableTeamOverride

    @infinityManagerEnableTeamOverride.setter
    def infinityManagerEnableTeamOverride(self, value):
        if value is not None and not isinstance(value, bool):
            value = bool(value)
        if (value is None) or isinstance(value, bool):
            self._infinityManagerEnableTeamOverride = value
        else:
            raise TypeError(
                'Property "infinityManagerEnableTeamOverride" of type "list<b'
                'ool>" set to wrong type'
            )

    @property
    def infinityManagerEnabled(self):
        """bool: Enable the infinity manager or not. Used both in org and team
         level object"""
        return self._infinityManagerEnabled

    @infinityManagerEnabled.setter
    def infinityManagerEnabled(self, value):
        if value is not None and not isinstance(value, bool):
            value = bool(value)
        if (value is None) or isinstance(value, bool):
            self._infinityManagerEnabled = value
        else:
            raise TypeError(
                'Property "infinityManagerEnabled" of type "list<bool>" set t'
                'o wrong type'
            )

    def toDict(self):
        result = {}
        if self._infinityManagerEnableTeamOverride is not None:
            result["infinityManagerEnableTeamOverride"] = \
                self._infinityManagerEnableTeamOverride
        if self._infinityManagerEnabled is not None:
            result["infinityManagerEnabled"] = \
                self._infinityManagerEnabled
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

