"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types
from .PolicyEnum import PolicyEnum

# Unused import over optimization prevention
str(repr(PolicyEnum))


if sys.version_info > (3,):
    long = int
    unicode = str

class UpdateArtifactVersionConfigs(object):
    """Request to publish an artifact"""
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.policy = (
            None if not fromDict or propDict.get(
                "policy"
            ) is None
            else propDict["policy"])

    @property
    def policy(self):
        """list: Policy label to be added to a specific version"""
        return self._policy

    @policy.setter
    def policy(self, value):
        if value is not None and not isinstance(value, list):
            value = list(value)
        if (value is None) or isinstance(value, list):
            self._policy = value
        else:
            raise TypeError(
                'Property "policy" of type "list<PolicyEnum>" set to wrong ty'
                'pe'
            )

    def toDict(self):
        result = {}
        if self._policy is not None:
            result["policy"] = \
                self._policy
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

