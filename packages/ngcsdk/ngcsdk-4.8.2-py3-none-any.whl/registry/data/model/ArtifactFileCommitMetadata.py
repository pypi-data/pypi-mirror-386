"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types
from .ArtifactFileCommitType import ArtifactFileCommitTypeEnum

# Unused import over optimization prevention
str(repr(ArtifactFileCommitTypeEnum))


if sys.version_info > (3,):
    long = int
    unicode = str

class ArtifactFileCommitMetadata(object):
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.commitType = (
            None if not fromDict or propDict.get(
                "commitType"
            ) is None
            else propDict["commitType"])
        self.filePath = (
            None if not fromDict or propDict.get(
                "filePath"
            ) is None
            else propDict["filePath"])
        self.sha256 = (
            None if not fromDict or propDict.get(
                "sha256"
            ) is None
            else propDict["sha256"])

    @property
    def commitType(self):
        """ """
        return self._commitType

    @commitType.setter
    def commitType(self, value):
        if (value is None) or isinstance(value, str) or isinstance(value, unicode):
            self._commitType = value
        else:
            raise TypeError(
                'Property "commitType" of type "list<ArtifactFileCommitTypeEn'
                'um>" set to wrong type'
            )

    @property
    def filePath(self):
        """str: Artifact file path"""
        return self._filePath

    @filePath.setter
    def filePath(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._filePath = value
        else:
            raise TypeError(
                'Property "filePath" of type "list<str>" set to wrong type'
            )

    @property
    def sha256(self):
        """str: Base64 encoded sha256 hash of the artifact file. Required for 
        addition and not required for deletion"""
        return self._sha256

    @sha256.setter
    def sha256(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._sha256 = value
        else:
            raise TypeError(
                'Property "sha256" of type "list<str>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._commitType is not None:
            result["commitType"] = \
                self._commitType
        if self._filePath is not None:
            result["filePath"] = \
                self._filePath
        if self._sha256 is not None:
            result["sha256"] = \
                self._sha256
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        if self._commitType is None:
            raise ValueError(
                "ArtifactFileCommitMetadata.commitType doesnt match requirement:" 
                "required: True"
            )
        if self._filePath is None:
            raise ValueError(
                "ArtifactFileCommitMetadata.filePath doesnt match requirement:" 
                "required: True"
            )
        return True
    

