"""
------------------------------------------------------------------------------
<auto-generated>
    This code was auto-generated by main/tools/jsonparser.
    Do not change this file.
</auto-generated>
------------------------------------------------------------------------------
"""
import json
import sys
import re
from six import string_types

# Unused import over optimization prevention


if sys.version_info > (3,):
    long = int
    unicode = str

class ManifestV2Config(object):
    def __init__(self, propDict=None):
        fromDict = propDict is not None and isinstance(propDict, dict)
        self.digest = (
            None if not fromDict or propDict.get(
                "digest"
            ) is None
            else propDict["digest"])
        self.mediaType = (
            None if not fromDict or propDict.get(
                "mediaType"
            ) is None
            else propDict["mediaType"])
        self.size = (
            None if not fromDict or propDict.get(
                "size"
            ) is None
            else propDict["size"])

    @property
    def digest(self):
        """str: Images sha256 digest"""
        return self._digest

    @digest.setter
    def digest(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._digest = value
        else:
            raise TypeError(
                'Property "digest" of type "list<str>" set to wrong type'
            )

    @property
    def mediaType(self):
        """str: should point to v1 manifest type, 'application/vnd.docker.cont
        ainer.image.v1+json'"""
        return self._mediaType

    @mediaType.setter
    def mediaType(self, value):
        if value is not None and not isinstance(value, string_types):
            value = repr(value)
        if (value is None) or isinstance(value, string_types):
            self._mediaType = value
        else:
            raise TypeError(
                'Property "mediaType" of type "list<str>" set to wrong type'
            )

    @property
    def size(self):
        """long: Manifest size, bytes"""
        return self._size

    @size.setter
    def size(self, value):
        if value is not None and not isinstance(value, long):
            value = long(value)
        if (value is None) or isinstance(value, long):
            self._size = value
        else:
            raise TypeError(
                'Property "size" of type "list<long>" set to wrong type'
            )

    def toDict(self):
        result = {}
        if self._digest is not None:
            result["digest"] = \
                self._digest
        if self._mediaType is not None:
            result["mediaType"] = \
                self._mediaType
        if self._size is not None:
            result["size"] = \
                self._size
        return result

    def toJSON(self, pretty=False):
        if pretty:
            return json.dumps(self.toDict(), sort_keys=True, indent=4)
        else:
            return json.dumps(self.toDict(), sort_keys=True)

    def isValid(self):
        return True
    

