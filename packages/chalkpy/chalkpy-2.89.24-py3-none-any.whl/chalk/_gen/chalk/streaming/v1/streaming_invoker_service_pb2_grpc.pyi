"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
The StreamingInvokerService is used to communicate between the main process and remote (i.e. subprocess) invokers"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.streaming.v1.streaming_invoker_service_pb2 import (
    StreamingUnaryInvokeRequest,
    StreamingUnaryInvokeResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class StreamingInvokerServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    StreamingUnaryInvoke: UnaryUnaryMultiCallable[
        StreamingUnaryInvokeRequest,
        StreamingUnaryInvokeResponse,
    ]

class StreamingInvokerServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def StreamingUnaryInvoke(
        self,
        request: StreamingUnaryInvokeRequest,
        context: ServicerContext,
    ) -> StreamingUnaryInvokeResponse: ...

def add_StreamingInvokerServiceServicer_to_server(
    servicer: StreamingInvokerServiceServicer, server: Server
) -> None: ...
