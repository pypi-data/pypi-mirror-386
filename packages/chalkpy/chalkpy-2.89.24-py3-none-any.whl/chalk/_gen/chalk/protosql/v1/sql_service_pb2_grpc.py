# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from chalk._gen.chalk.protosql.v1 import sql_service_pb2 as chalk_dot_protosql_dot_v1_dot_sql__service__pb2


class SqlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecuteSqlQuery = channel.unary_unary(
            "/chalk.protosql.v1.SqlService/ExecuteSqlQuery",
            request_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryRequest.SerializeToString,
            response_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryResponse.FromString,
        )
        self.PlanSqlQuery = channel.unary_unary(
            "/chalk.protosql.v1.SqlService/PlanSqlQuery",
            request_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryRequest.SerializeToString,
            response_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryResponse.FromString,
        )
        self.GetDbCatalogs = channel.unary_unary(
            "/chalk.protosql.v1.SqlService/GetDbCatalogs",
            request_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsRequest.SerializeToString,
            response_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsResponse.FromString,
        )
        self.GetDbSchemas = channel.unary_unary(
            "/chalk.protosql.v1.SqlService/GetDbSchemas",
            request_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasRequest.SerializeToString,
            response_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasResponse.FromString,
        )
        self.GetTables = channel.unary_unary(
            "/chalk.protosql.v1.SqlService/GetTables",
            request_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesRequest.SerializeToString,
            response_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesResponse.FromString,
        )


class SqlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecuteSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PlanSqlQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDbCatalogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDbSchemas(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetTables(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_SqlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ExecuteSqlQuery": grpc.unary_unary_rpc_method_handler(
            servicer.ExecuteSqlQuery,
            request_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryRequest.FromString,
            response_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryResponse.SerializeToString,
        ),
        "PlanSqlQuery": grpc.unary_unary_rpc_method_handler(
            servicer.PlanSqlQuery,
            request_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryRequest.FromString,
            response_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryResponse.SerializeToString,
        ),
        "GetDbCatalogs": grpc.unary_unary_rpc_method_handler(
            servicer.GetDbCatalogs,
            request_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsRequest.FromString,
            response_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsResponse.SerializeToString,
        ),
        "GetDbSchemas": grpc.unary_unary_rpc_method_handler(
            servicer.GetDbSchemas,
            request_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasRequest.FromString,
            response_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasResponse.SerializeToString,
        ),
        "GetTables": grpc.unary_unary_rpc_method_handler(
            servicer.GetTables,
            request_deserializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesRequest.FromString,
            response_serializer=chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("chalk.protosql.v1.SqlService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SqlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecuteSqlQuery(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.protosql.v1.SqlService/ExecuteSqlQuery",
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryRequest.SerializeToString,
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.ExecuteSqlQueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def PlanSqlQuery(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.protosql.v1.SqlService/PlanSqlQuery",
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryRequest.SerializeToString,
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.PlanSqlQueryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDbCatalogs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.protosql.v1.SqlService/GetDbCatalogs",
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsRequest.SerializeToString,
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbCatalogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDbSchemas(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.protosql.v1.SqlService/GetDbSchemas",
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasRequest.SerializeToString,
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetDbSchemasResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetTables(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.protosql.v1.SqlService/GetTables",
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesRequest.SerializeToString,
            chalk_dot_protosql_dot_v1_dot_sql__service__pb2.GetTablesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
