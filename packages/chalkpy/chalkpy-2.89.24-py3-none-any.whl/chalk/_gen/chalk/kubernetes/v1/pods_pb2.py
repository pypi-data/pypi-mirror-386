# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/kubernetes/v1/pods.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1e\x63halk/kubernetes/v1/pods.proto\x12\x13\x63halk.kubernetes.v1"\xef\x41\n\x11KubernetesPodData\x12\x12\n\x04team\x18\x01 \x01(\tR\x04team\x12\x10\n\x03\x61pp\x18\x02 \x01(\tR\x03\x61pp\x12\x1c\n\tcomponent\x18\x03 \x01(\tR\tcomponent\x12\'\n\x0f\x64\x61tadog_service\x18\x04 \x01(\tR\x0e\x64\x61tadogService\x12\'\n\x0f\x64\x61tadog_version\x18\x05 \x01(\tR\x0e\x64\x61tadogVersion\x12*\n\x11pod_template_hash\x18\x06 \x01(\tR\x0fpodTemplateHash\x12H\n\x06status\x18\x07 \x01(\x0b\x32\x30.chalk.kubernetes.v1.KubernetesPodData.PodStatusR\x06status\x12\x42\n\x04spec\x18\x08 \x01(\x0b\x32..chalk.kubernetes.v1.KubernetesPodData.PodSpecR\x04spec\x12-\n\x12\x63reation_timestamp\x18\x12 \x01(\x03R\x11\x63reationTimestamp\x12-\n\x12\x64\x65letion_timestamp\x18\x13 \x01(\x03R\x11\x64\x65letionTimestamp\x12-\n\x12observed_timestamp\x18\x14 \x01(\x03R\x11observedTimestamp\x12J\n\x06labels\x18\x15 \x03(\x0b\x32\x32.chalk.kubernetes.v1.KubernetesPodData.LabelsEntryR\x06labels\x12Y\n\x0b\x61nnotations\x18\x16 \x03(\x0b\x32\x37.chalk.kubernetes.v1.KubernetesPodData.AnnotationsEntryR\x0b\x61nnotations\x12\x18\n\x07\x63luster\x18\x17 \x01(\tR\x07\x63luster\x12\x10\n\x03uid\x18\x18 \x01(\tR\x03uid\x12\x12\n\x04name\x18\x19 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x1a \x01(\tR\tnamespace\x1a\x1c\n\x06Volume\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x1a\xc1\x01\n\x0b\x43laimSource\x12\x33\n\x13resource_claim_name\x18\x01 \x01(\tH\x00R\x11resourceClaimName\x88\x01\x01\x12\x44\n\x1cresource_claim_template_name\x18\x02 \x01(\tH\x01R\x19resourceClaimTemplateName\x88\x01\x01\x42\x16\n\x14_resource_claim_nameB\x1f\n\x1d_resource_claim_template_name\x1a\x82\x01\n\x10PodResourceClaim\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12O\n\x06source\x18\x02 \x01(\x0b\x32\x32.chalk.kubernetes.v1.KubernetesPodData.ClaimSourceH\x00R\x06source\x88\x01\x01\x42\t\n\x07_source\x1a\xf6\r\n\x07PodSpec\x12G\n\x07volumes\x18\x01 \x03(\x0b\x32-.chalk.kubernetes.v1.KubernetesPodData.VolumeR\x07volumes\x12Y\n\x0finit_containers\x18\x14 \x03(\x0b\x32\x30.chalk.kubernetes.v1.KubernetesPodData.ContainerR\x0einitContainers\x12P\n\ncontainers\x18\x02 \x03(\x0b\x32\x30.chalk.kubernetes.v1.KubernetesPodData.ContainerR\ncontainers\x12*\n\x0erestart_policy\x18\x03 \x01(\tH\x00R\rrestartPolicy\x88\x01\x01\x12L\n termination_grace_period_seconds\x18\x04 \x01(\x03H\x01R\x1dterminationGracePeriodSeconds\x88\x01\x01\x12;\n\x17\x61\x63tive_deadline_seconds\x18\x05 \x01(\x03H\x02R\x15\x61\x63tiveDeadlineSeconds\x88\x01\x01\x12"\n\ndns_policy\x18\x06 \x01(\tH\x03R\tdnsPolicy\x88\x01\x01\x12\x65\n\rnode_selector\x18\x07 \x03(\x0b\x32@.chalk.kubernetes.v1.KubernetesPodData.PodSpec.NodeSelectorEntryR\x0cnodeSelector\x12\x35\n\x14service_account_name\x18\x08 \x01(\tH\x04R\x12serviceAccountName\x88\x01\x01\x12J\n\x1f\x61utomount_service_account_token\x18\x15 \x01(\x08H\x05R\x1c\x61utomountServiceAccountToken\x88\x01\x01\x12 \n\tnode_name\x18\n \x01(\tH\x06R\x08nodeName\x88\x01\x01\x12!\n\x0chost_network\x18\x0b \x01(\x08R\x0bhostNetwork\x12\x19\n\x08host_pid\x18\x0c \x01(\x08R\x07hostPid\x12\x19\n\x08host_ipc\x18\r \x01(\x08R\x07hostIpc\x12\x36\n\x17share_process_namespace\x18\x1b \x01(\x08R\x15shareProcessNamespace\x12\x1f\n\x08hostname\x18\x10 \x01(\tH\x07R\x08hostname\x88\x01\x01\x12!\n\tsubdomain\x18\x11 \x01(\tH\x08R\tsubdomain\x88\x01\x01\x12*\n\x0escheduler_name\x18\x13 \x01(\tH\tR\rschedulerName\x88\x01\x01\x12\x33\n\x13priority_class_name\x18\x18 \x01(\tH\nR\x11priorityClassName\x88\x01\x01\x12\x1f\n\x08priority\x18\x19 \x01(\x05H\x0bR\x08priority\x88\x01\x01\x12\x31\n\x12runtime_class_name\x18\x1d \x01(\tH\x0cR\x10runtimeClassName\x88\x01\x01\x12\x35\n\x14\x65nable_service_links\x18\x1e \x01(\x08H\rR\x12\x65nableServiceLinks\x88\x01\x01\x12\x30\n\x11preemption_policy\x18\x1f \x01(\tH\x0eR\x10preemptionPolicy\x88\x01\x01\x12"\n\nhost_users\x18% \x01(\x08H\x0fR\thostUsers\x88\x01\x01\x12`\n\x0fresource_claims\x18\' \x03(\x0b\x32\x37.chalk.kubernetes.v1.KubernetesPodData.PodResourceClaimR\x0eresourceClaims\x1a?\n\x11NodeSelectorEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\x11\n\x0f_restart_policyB#\n!_termination_grace_period_secondsB\x1a\n\x18_active_deadline_secondsB\r\n\x0b_dns_policyB\x17\n\x15_service_account_nameB"\n _automount_service_account_tokenB\x0c\n\n_node_nameB\x0b\n\t_hostnameB\x0c\n\n_subdomainB\x11\n\x0f_scheduler_nameB\x16\n\x14_priority_class_nameB\x0b\n\t_priorityB\x15\n\x13_runtime_class_nameB\x17\n\x15_enable_service_linksB\x14\n\x12_preemption_policyB\r\n\x0b_host_users\x1a\xd7\x02\n\x0e\x43ontainerState\x12[\n\x07waiting\x18\x01 \x01(\x0b\x32<.chalk.kubernetes.v1.KubernetesPodData.ContainerStateWaitingH\x00R\x07waiting\x88\x01\x01\x12[\n\x07running\x18\x02 \x01(\x0b\x32<.chalk.kubernetes.v1.KubernetesPodData.ContainerStateRunningH\x01R\x07running\x88\x01\x01\x12\x64\n\nterminated\x18\x03 \x01(\x0b\x32?.chalk.kubernetes.v1.KubernetesPodData.ContainerStateTerminatedH\x02R\nterminated\x88\x01\x01\x42\n\n\x08_waitingB\n\n\x08_runningB\r\n\x0b_terminated\x1a\x36\n\x15\x43ontainerStateRunning\x12\x1d\n\nstarted_at\x18\x01 \x01(\x03R\tstartedAt\x1a\xd4\x02\n\x18\x43ontainerStateTerminated\x12\x1b\n\texit_code\x18\x01 \x01(\x05R\x08\x65xitCode\x12\x1b\n\x06signal\x18\x02 \x01(\x05H\x00R\x06signal\x88\x01\x01\x12\x1b\n\x06reason\x18\x03 \x01(\tH\x01R\x06reason\x88\x01\x01\x12\x1d\n\x07message\x18\x04 \x01(\tH\x02R\x07message\x88\x01\x01\x12"\n\nstarted_at\x18\x05 \x01(\x03H\x03R\tstartedAt\x88\x01\x01\x12$\n\x0b\x66inished_at\x18\x06 \x01(\x03H\x04R\nfinishedAt\x88\x01\x01\x12&\n\x0c\x63ontainer_id\x18\x07 \x01(\tH\x05R\x0b\x63ontainerId\x88\x01\x01\x42\t\n\x07_signalB\t\n\x07_reasonB\n\n\x08_messageB\r\n\x0b_started_atB\x0e\n\x0c_finished_atB\x0f\n\r_container_id\x1a\x9a\x01\n\x06\x45nvVar\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\x12W\n\nvalue_from\x18\x03 \x01(\x0b\x32\x33.chalk.kubernetes.v1.KubernetesPodData.EnvVarSourceH\x00R\tvalueFrom\x88\x01\x01\x42\r\n\x0b_value_from\x1a\x80\x04\n\x0c\x45nvVarSource\x12\\\n\tfield_ref\x18\x01 \x01(\x0b\x32:.chalk.kubernetes.v1.KubernetesPodData.ObjectFieldSelectorH\x00R\x08\x66ieldRef\x88\x01\x01\x12o\n\x12resource_field_ref\x18\x02 \x01(\x0b\x32<.chalk.kubernetes.v1.KubernetesPodData.ResourceFieldSelectorH\x01R\x10resourceFieldRef\x88\x01\x01\x12m\n\x12\x63onfig_map_key_ref\x18\x03 \x01(\x0b\x32;.chalk.kubernetes.v1.KubernetesPodData.ConfigMapKeySelectorH\x02R\x0f\x63onfigMapKeyRef\x88\x01\x01\x12\x63\n\x0esecret_key_ref\x18\x04 \x01(\x0b\x32\x38.chalk.kubernetes.v1.KubernetesPodData.SecretKeySelectorH\x03R\x0csecretKeyRef\x88\x01\x01\x42\x0c\n\n_field_refB\x15\n\x13_resource_field_refB\x15\n\x13_config_map_key_refB\x11\n\x0f_secret_key_ref\x1aU\n\x13ObjectFieldSelector\x12\x1f\n\x0b\x61pi_version\x18\x01 \x01(\tR\napiVersion\x12\x1d\n\nfield_path\x18\x02 \x01(\tR\tfieldPath\x1a\xb6\x01\n\x15ResourceFieldSelector\x12%\n\x0e\x63ontainer_name\x18\x01 \x01(\tR\rcontainerName\x12\x1a\n\x08resource\x18\x02 \x01(\tR\x08resource\x12N\n\x07\x64ivisor\x18\x03 \x01(\x0b\x32/.chalk.kubernetes.v1.KubernetesPodData.QuantityH\x00R\x07\x64ivisor\x88\x01\x01\x42\n\n\x08_divisor\x1aj\n\x14\x43onfigMapKeySelector\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n\x03key\x18\x02 \x01(\tR\x03key\x12\x1f\n\x08optional\x18\x03 \x01(\x08H\x00R\x08optional\x88\x01\x01\x42\x0b\n\t_optional\x1ag\n\x11SecretKeySelector\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n\x03key\x18\x02 \x01(\tR\x03key\x12\x1f\n\x08optional\x18\x03 \x01(\x08H\x00R\x08optional\x88\x01\x01\x42\x0b\n\t_optional\x1a\x9b\x02\n\rEnvFromSource\x12\x1b\n\x06prefix\x18\x01 \x01(\tH\x00R\x06prefix\x88\x01\x01\x12\x64\n\x0e\x63onfig_map_ref\x18\x02 \x01(\x0b\x32\x39.chalk.kubernetes.v1.KubernetesPodData.ConfigMapEnvSourceH\x01R\x0c\x63onfigMapRef\x88\x01\x01\x12Z\n\nsecret_ref\x18\x03 \x01(\x0b\x32\x36.chalk.kubernetes.v1.KubernetesPodData.SecretEnvSourceH\x02R\tsecretRef\x88\x01\x01\x42\t\n\x07_prefixB\x11\n\x0f_config_map_refB\r\n\x0b_secret_ref\x1aV\n\x12\x43onfigMapEnvSource\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n\x08optional\x18\x02 \x01(\x08H\x00R\x08optional\x88\x01\x01\x42\x0b\n\t_optional\x1aS\n\x0fSecretEnvSource\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n\x08optional\x18\x02 \x01(\x08H\x00R\x08optional\x88\x01\x01\x42\x0b\n\t_optional\x1a\xb3\x06\n\tContainer\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n\x05image\x18\x02 \x01(\tH\x00R\x05image\x88\x01\x01\x12\x18\n\x07\x63ommand\x18\x03 \x03(\tR\x07\x63ommand\x12\x12\n\x04\x61rgs\x18\x04 \x03(\tR\x04\x61rgs\x12$\n\x0bworking_dir\x18\x05 \x01(\tH\x01R\nworkingDir\x88\x01\x01\x12O\n\x08\x65nv_from\x18\x13 \x03(\x0b\x32\x34.chalk.kubernetes.v1.KubernetesPodData.EnvFromSourceR\x07\x65nvFrom\x12?\n\x03\x65nv\x18\x07 \x03(\x0b\x32-.chalk.kubernetes.v1.KubernetesPodData.EnvVarR\x03\x65nv\x12^\n\tresources\x18\x08 \x01(\x0b\x32;.chalk.kubernetes.v1.KubernetesPodData.ResourceRequirementsH\x02R\tresources\x88\x01\x01\x12*\n\x0erestart_policy\x18\x18 \x01(\tH\x03R\rrestartPolicy\x88\x01\x01\x12=\n\x18termination_message_path\x18\r \x01(\tH\x04R\x16terminationMessagePath\x88\x01\x01\x12\x41\n\x1atermination_message_policy\x18\x14 \x01(\tH\x05R\x18terminationMessagePolicy\x88\x01\x01\x12/\n\x11image_pull_policy\x18\x0e \x01(\tH\x06R\x0fimagePullPolicy\x88\x01\x01\x12\x14\n\x05stdin\x18\x10 \x01(\x08R\x05stdin\x12\x1d\n\nstdin_once\x18\x11 \x01(\x08R\tstdinOnce\x12\x10\n\x03tty\x18\x12 \x01(\x08R\x03ttyB\x08\n\x06_imageB\x0e\n\x0c_working_dirB\x0c\n\n_resourcesB\x11\n\x0f_restart_policyB\x1b\n\x19_termination_message_pathB\x1d\n\x1b_termination_message_policyB\x14\n\x12_image_pull_policy\x1aj\n\x15\x43ontainerStateWaiting\x12\x1b\n\x06reason\x18\x01 \x01(\tH\x00R\x06reason\x88\x01\x01\x12\x1d\n\x07message\x18\x02 \x01(\tH\x01R\x07message\x88\x01\x01\x42\t\n\x07_reasonB\n\n\x08_message\x1a\xa3\x03\n\x0f\x43ontainerStatus\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12P\n\x05state\x18\x02 \x01(\x0b\x32\x35.chalk.kubernetes.v1.KubernetesPodData.ContainerStateH\x00R\x05state\x88\x01\x01\x12Y\n\nlast_state\x18\x03 \x01(\x0b\x32\x35.chalk.kubernetes.v1.KubernetesPodData.ContainerStateH\x01R\tlastState\x88\x01\x01\x12\x19\n\x05ready\x18\x04 \x01(\x08H\x02R\x05ready\x88\x01\x01\x12#\n\rrestart_count\x18\x05 \x01(\x05R\x0crestartCount\x12\x14\n\x05image\x18\x06 \x01(\tR\x05image\x12\x19\n\x08image_id\x18\x07 \x01(\tR\x07imageId\x12!\n\x0c\x63ontainer_id\x18\x08 \x01(\tR\x0b\x63ontainerId\x12\x18\n\x07started\x18\t \x01(\x08R\x07startedB\x08\n\x06_stateB\r\n\x0b_last_stateB\x08\n\x06_ready\x1a\x32\n\x08Quantity\x12\x1b\n\x06string\x18\x01 \x01(\tH\x00R\x06string\x88\x01\x01\x42\t\n\x07_string\x1a\xb8\x03\n\x14ResourceRequirements\x12_\n\x06limits\x18\x01 \x03(\x0b\x32G.chalk.kubernetes.v1.KubernetesPodData.ResourceRequirements.LimitsEntryR\x06limits\x12\x65\n\x08requests\x18\x02 \x03(\x0b\x32I.chalk.kubernetes.v1.KubernetesPodData.ResourceRequirements.RequestsEntryR\x08requests\x1aj\n\x0bLimitsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x45\n\x05value\x18\x02 \x01(\x0b\x32/.chalk.kubernetes.v1.KubernetesPodData.QuantityR\x05value:\x02\x38\x01\x1al\n\rRequestsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x45\n\x05value\x18\x02 \x01(\x0b\x32/.chalk.kubernetes.v1.KubernetesPodData.QuantityR\x05value:\x02\x38\x01\x1a\xe7\x01\n\x0cPodCondition\x12\x12\n\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n\x06status\x18\x02 \x01(\tR\x06status\x12&\n\x0flast_probe_time\x18\x03 \x01(\x03R\rlastProbeTime\x12\x30\n\x14last_transition_time\x18\x04 \x01(\x03R\x12lastTransitionTime\x12\x1b\n\x06reason\x18\x05 \x01(\tH\x00R\x06reason\x88\x01\x01\x12\x1d\n\x07message\x18\x06 \x01(\tH\x01R\x07message\x88\x01\x01\x42\t\n\x07_reasonB\n\n\x08_message\x1a$\n\x06HostIP\x12\x13\n\x02ip\x18\x01 \x01(\tH\x00R\x02ip\x88\x01\x01\x42\x05\n\x03_ip\x1a\x9c\x07\n\tPodStatus\x12\x19\n\x05phase\x18\x01 \x01(\tH\x00R\x05phase\x88\x01\x01\x12S\n\nconditions\x18\x02 \x03(\x0b\x32\x33.chalk.kubernetes.v1.KubernetesPodData.PodConditionR\nconditions\x12\x1d\n\x07message\x18\x03 \x01(\tH\x01R\x07message\x88\x01\x01\x12\x1b\n\x06reason\x18\x04 \x01(\tH\x02R\x06reason\x88\x01\x01\x12\x33\n\x13nominated_node_name\x18\x0b \x01(\tH\x03R\x11nominatedNodeName\x88\x01\x01\x12\x1c\n\x07host_ip\x18\x05 \x01(\tH\x04R\x06hostIp\x88\x01\x01\x12H\n\x08host_ips\x18\x10 \x03(\x0b\x32-.chalk.kubernetes.v1.KubernetesPodData.HostIPR\x07hostIps\x12\x1a\n\x06pod_ip\x18\x06 \x01(\tH\x05R\x05podIp\x88\x01\x01\x12"\n\nstart_time\x18\x07 \x01(\x03H\x06R\tstartTime\x88\x01\x01\x12n\n\x17init_container_statuses\x18\n \x03(\x0b\x32\x36.chalk.kubernetes.v1.KubernetesPodData.ContainerStatusR\x15initContainerStatuses\x12\x65\n\x12\x63ontainer_statuses\x18\x08 \x03(\x0b\x32\x36.chalk.kubernetes.v1.KubernetesPodData.ContainerStatusR\x11\x63ontainerStatuses\x12 \n\tqos_class\x18\t \x01(\tH\x07R\x08qosClass\x88\x01\x01\x12x\n\x1c\x65phemeral_container_statuses\x18\r \x03(\x0b\x32\x36.chalk.kubernetes.v1.KubernetesPodData.ContainerStatusR\x1a\x65phemeralContainerStatuses\x12\x1b\n\x06resize\x18\x0e \x01(\tH\x08R\x06resize\x88\x01\x01\x42\x08\n\x06_phaseB\n\n\x08_messageB\t\n\x07_reasonB\x16\n\x14_nominated_node_nameB\n\n\x08_host_ipB\t\n\x07_pod_ipB\r\n\x0b_start_timeB\x0c\n\n_qos_classB\t\n\x07_resize\x1a\x39\n\x0bLabelsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x1a>\n\x10\x41nnotationsEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value:\x02\x38\x01\x42\xae\x01\n\x17\x63om.chalk.kubernetes.v1B\tPodsProtoP\x01Z\x1akubernetes/v1;kubernetesv1\xa2\x02\x03\x43KX\xaa\x02\x13\x43halk.Kubernetes.V1\xca\x02\x13\x43halk\\Kubernetes\\V1\xe2\x02\x1f\x43halk\\Kubernetes\\V1\\GPBMetadata\xea\x02\x15\x43halk::Kubernetes::V1b\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "chalk.kubernetes.v1.pods_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    _globals["DESCRIPTOR"]._options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = b"\n\027com.chalk.kubernetes.v1B\tPodsProtoP\001Z\032kubernetes/v1;kubernetesv1\242\002\003CKX\252\002\023Chalk.Kubernetes.V1\312\002\023Chalk\\Kubernetes\\V1\342\002\037Chalk\\Kubernetes\\V1\\GPBMetadata\352\002\025Chalk::Kubernetes::V1"
    _globals["_KUBERNETESPODDATA_PODSPEC_NODESELECTORENTRY"]._options = None
    _globals["_KUBERNETESPODDATA_PODSPEC_NODESELECTORENTRY"]._serialized_options = b"8\001"
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_LIMITSENTRY"]._options = None
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_LIMITSENTRY"]._serialized_options = b"8\001"
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_REQUESTSENTRY"]._options = None
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_REQUESTSENTRY"]._serialized_options = b"8\001"
    _globals["_KUBERNETESPODDATA_LABELSENTRY"]._options = None
    _globals["_KUBERNETESPODDATA_LABELSENTRY"]._serialized_options = b"8\001"
    _globals["_KUBERNETESPODDATA_ANNOTATIONSENTRY"]._options = None
    _globals["_KUBERNETESPODDATA_ANNOTATIONSENTRY"]._serialized_options = b"8\001"
    _globals["_KUBERNETESPODDATA"]._serialized_start = 56
    _globals["_KUBERNETESPODDATA"]._serialized_end = 8487
    _globals["_KUBERNETESPODDATA_VOLUME"]._serialized_start = 815
    _globals["_KUBERNETESPODDATA_VOLUME"]._serialized_end = 843
    _globals["_KUBERNETESPODDATA_CLAIMSOURCE"]._serialized_start = 846
    _globals["_KUBERNETESPODDATA_CLAIMSOURCE"]._serialized_end = 1039
    _globals["_KUBERNETESPODDATA_PODRESOURCECLAIM"]._serialized_start = 1042
    _globals["_KUBERNETESPODDATA_PODRESOURCECLAIM"]._serialized_end = 1172
    _globals["_KUBERNETESPODDATA_PODSPEC"]._serialized_start = 1175
    _globals["_KUBERNETESPODDATA_PODSPEC"]._serialized_end = 2957
    _globals["_KUBERNETESPODDATA_PODSPEC_NODESELECTORENTRY"]._serialized_start = 2552
    _globals["_KUBERNETESPODDATA_PODSPEC_NODESELECTORENTRY"]._serialized_end = 2615
    _globals["_KUBERNETESPODDATA_CONTAINERSTATE"]._serialized_start = 2960
    _globals["_KUBERNETESPODDATA_CONTAINERSTATE"]._serialized_end = 3303
    _globals["_KUBERNETESPODDATA_CONTAINERSTATERUNNING"]._serialized_start = 3305
    _globals["_KUBERNETESPODDATA_CONTAINERSTATERUNNING"]._serialized_end = 3359
    _globals["_KUBERNETESPODDATA_CONTAINERSTATETERMINATED"]._serialized_start = 3362
    _globals["_KUBERNETESPODDATA_CONTAINERSTATETERMINATED"]._serialized_end = 3702
    _globals["_KUBERNETESPODDATA_ENVVAR"]._serialized_start = 3705
    _globals["_KUBERNETESPODDATA_ENVVAR"]._serialized_end = 3859
    _globals["_KUBERNETESPODDATA_ENVVARSOURCE"]._serialized_start = 3862
    _globals["_KUBERNETESPODDATA_ENVVARSOURCE"]._serialized_end = 4374
    _globals["_KUBERNETESPODDATA_OBJECTFIELDSELECTOR"]._serialized_start = 4376
    _globals["_KUBERNETESPODDATA_OBJECTFIELDSELECTOR"]._serialized_end = 4461
    _globals["_KUBERNETESPODDATA_RESOURCEFIELDSELECTOR"]._serialized_start = 4464
    _globals["_KUBERNETESPODDATA_RESOURCEFIELDSELECTOR"]._serialized_end = 4646
    _globals["_KUBERNETESPODDATA_CONFIGMAPKEYSELECTOR"]._serialized_start = 4648
    _globals["_KUBERNETESPODDATA_CONFIGMAPKEYSELECTOR"]._serialized_end = 4754
    _globals["_KUBERNETESPODDATA_SECRETKEYSELECTOR"]._serialized_start = 4756
    _globals["_KUBERNETESPODDATA_SECRETKEYSELECTOR"]._serialized_end = 4859
    _globals["_KUBERNETESPODDATA_ENVFROMSOURCE"]._serialized_start = 4862
    _globals["_KUBERNETESPODDATA_ENVFROMSOURCE"]._serialized_end = 5145
    _globals["_KUBERNETESPODDATA_CONFIGMAPENVSOURCE"]._serialized_start = 5147
    _globals["_KUBERNETESPODDATA_CONFIGMAPENVSOURCE"]._serialized_end = 5233
    _globals["_KUBERNETESPODDATA_SECRETENVSOURCE"]._serialized_start = 5235
    _globals["_KUBERNETESPODDATA_SECRETENVSOURCE"]._serialized_end = 5318
    _globals["_KUBERNETESPODDATA_CONTAINER"]._serialized_start = 5321
    _globals["_KUBERNETESPODDATA_CONTAINER"]._serialized_end = 6140
    _globals["_KUBERNETESPODDATA_CONTAINERSTATEWAITING"]._serialized_start = 6142
    _globals["_KUBERNETESPODDATA_CONTAINERSTATEWAITING"]._serialized_end = 6248
    _globals["_KUBERNETESPODDATA_CONTAINERSTATUS"]._serialized_start = 6251
    _globals["_KUBERNETESPODDATA_CONTAINERSTATUS"]._serialized_end = 6670
    _globals["_KUBERNETESPODDATA_QUANTITY"]._serialized_start = 6672
    _globals["_KUBERNETESPODDATA_QUANTITY"]._serialized_end = 6722
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS"]._serialized_start = 6725
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS"]._serialized_end = 7165
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_LIMITSENTRY"]._serialized_start = 6949
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_LIMITSENTRY"]._serialized_end = 7055
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_REQUESTSENTRY"]._serialized_start = 7057
    _globals["_KUBERNETESPODDATA_RESOURCEREQUIREMENTS_REQUESTSENTRY"]._serialized_end = 7165
    _globals["_KUBERNETESPODDATA_PODCONDITION"]._serialized_start = 7168
    _globals["_KUBERNETESPODDATA_PODCONDITION"]._serialized_end = 7399
    _globals["_KUBERNETESPODDATA_HOSTIP"]._serialized_start = 7401
    _globals["_KUBERNETESPODDATA_HOSTIP"]._serialized_end = 7437
    _globals["_KUBERNETESPODDATA_PODSTATUS"]._serialized_start = 7440
    _globals["_KUBERNETESPODDATA_PODSTATUS"]._serialized_end = 8364
    _globals["_KUBERNETESPODDATA_LABELSENTRY"]._serialized_start = 8366
    _globals["_KUBERNETESPODDATA_LABELSENTRY"]._serialized_end = 8423
    _globals["_KUBERNETESPODDATA_ANNOTATIONSENTRY"]._serialized_start = 8425
    _globals["_KUBERNETESPODDATA_ANNOTATIONSENTRY"]._serialized_end = 8487
# @@protoc_insertion_point(module_scope)
