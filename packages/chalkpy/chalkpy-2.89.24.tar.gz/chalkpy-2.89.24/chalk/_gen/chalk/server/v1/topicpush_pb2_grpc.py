# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from chalk._gen.chalk.server.v1 import topicpush_pb2 as chalk_dot_server_dot_v1_dot_topicpush__pb2


class TopicPushServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListJobs = channel.unary_unary(
            "/chalk.server.v1.TopicPushService/ListJobs",
            request_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsResponse.FromString,
        )
        self.CreateJob = channel.unary_unary(
            "/chalk.server.v1.TopicPushService/CreateJob",
            request_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobResponse.FromString,
        )
        self.UpdateJob = channel.unary_unary(
            "/chalk.server.v1.TopicPushService/UpdateJob",
            request_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobResponse.FromString,
        )
        self.DeleteJob = channel.unary_unary(
            "/chalk.server.v1.TopicPushService/DeleteJob",
            request_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobResponse.FromString,
        )
        self.GetJobByName = channel.unary_unary(
            "/chalk.server.v1.TopicPushService/GetJobByName",
            request_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameResponse.FromString,
        )


class TopicPushServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetJobByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_TopicPushServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListJobs": grpc.unary_unary_rpc_method_handler(
            servicer.ListJobs,
            request_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsResponse.SerializeToString,
        ),
        "CreateJob": grpc.unary_unary_rpc_method_handler(
            servicer.CreateJob,
            request_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobResponse.SerializeToString,
        ),
        "UpdateJob": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateJob,
            request_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobResponse.SerializeToString,
        ),
        "DeleteJob": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteJob,
            request_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobResponse.SerializeToString,
        ),
        "GetJobByName": grpc.unary_unary_rpc_method_handler(
            servicer.GetJobByName,
            request_deserializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("chalk.server.v1.TopicPushService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class TopicPushService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListJobs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.TopicPushService/ListJobs",
            chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_topicpush__pb2.ListJobsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def CreateJob(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.TopicPushService/CreateJob",
            chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_topicpush__pb2.CreateJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateJob(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.TopicPushService/UpdateJob",
            chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_topicpush__pb2.UpdateJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteJob(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.TopicPushService/DeleteJob",
            chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_topicpush__pb2.DeleteJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetJobByName(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.TopicPushService/GetJobByName",
            chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_topicpush__pb2.GetJobByNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
