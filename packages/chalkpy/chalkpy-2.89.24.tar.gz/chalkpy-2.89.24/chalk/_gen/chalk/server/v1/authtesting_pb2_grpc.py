# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from chalk._gen.chalk.server.v1 import authtesting_pb2 as chalk_dot_server_dot_v1_dot_authtesting__pb2


class AuthTestingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUnauthedTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetUnauthedTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointResponse.FromString,
        )
        self.GetAuthedTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetAuthedTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointResponse.FromString,
        )
        self.GetViewerTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetViewerTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointResponse.FromString,
        )
        self.GetDataScientistTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetDataScientistTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointResponse.FromString,
        )
        self.GetDeveloperTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetDeveloperTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointResponse.FromString,
        )
        self.GetAdminTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetAdminTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointResponse.FromString,
        )
        self.GetOwnerTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetOwnerTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointResponse.FromString,
        )
        self.GetAuthServiceManagerTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetAuthServiceManagerTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointResponse.FromString,
        )
        self.GetFeatureFlagTestEndpoint = channel.unary_unary(
            "/chalk.server.v1.AuthTestingService/GetFeatureFlagTestEndpoint",
            request_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointRequest.SerializeToString,
            response_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointResponse.FromString,
        )


class AuthTestingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUnauthedTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAuthedTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetViewerTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDataScientistTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetDeveloperTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAdminTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOwnerTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAuthServiceManagerTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFeatureFlagTestEndpoint(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_AuthTestingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetUnauthedTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetUnauthedTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointResponse.SerializeToString,
        ),
        "GetAuthedTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetAuthedTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointResponse.SerializeToString,
        ),
        "GetViewerTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetViewerTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointResponse.SerializeToString,
        ),
        "GetDataScientistTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetDataScientistTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointResponse.SerializeToString,
        ),
        "GetDeveloperTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetDeveloperTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointResponse.SerializeToString,
        ),
        "GetAdminTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetAdminTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointResponse.SerializeToString,
        ),
        "GetOwnerTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetOwnerTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointResponse.SerializeToString,
        ),
        "GetAuthServiceManagerTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetAuthServiceManagerTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointResponse.SerializeToString,
        ),
        "GetFeatureFlagTestEndpoint": grpc.unary_unary_rpc_method_handler(
            servicer.GetFeatureFlagTestEndpoint,
            request_deserializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointRequest.FromString,
            response_serializer=chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("chalk.server.v1.AuthTestingService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class AuthTestingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUnauthedTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetUnauthedTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetUnauthedTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAuthedTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetAuthedTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthedTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetViewerTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetViewerTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetViewerTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDataScientistTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetDataScientistTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDataScientistTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetDeveloperTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetDeveloperTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetDeveloperTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAdminTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetAdminTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAdminTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetOwnerTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetOwnerTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetOwnerTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAuthServiceManagerTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetAuthServiceManagerTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetAuthServiceManagerTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetFeatureFlagTestEndpoint(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.server.v1.AuthTestingService/GetFeatureFlagTestEndpoint",
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointRequest.SerializeToString,
            chalk_dot_server_dot_v1_dot_authtesting__pb2.GetFeatureFlagTestEndpointResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
