"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.authtesting_pb2 import (
    GetAdminTestEndpointRequest,
    GetAdminTestEndpointResponse,
    GetAuthServiceManagerTestEndpointRequest,
    GetAuthServiceManagerTestEndpointResponse,
    GetAuthedTestEndpointRequest,
    GetAuthedTestEndpointResponse,
    GetDataScientistTestEndpointRequest,
    GetDataScientistTestEndpointResponse,
    GetDeveloperTestEndpointRequest,
    GetDeveloperTestEndpointResponse,
    GetFeatureFlagTestEndpointRequest,
    GetFeatureFlagTestEndpointResponse,
    GetOwnerTestEndpointRequest,
    GetOwnerTestEndpointResponse,
    GetUnauthedTestEndpointRequest,
    GetUnauthedTestEndpointResponse,
    GetViewerTestEndpointRequest,
    GetViewerTestEndpointResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class AuthTestingServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    GetUnauthedTestEndpoint: UnaryUnaryMultiCallable[
        GetUnauthedTestEndpointRequest,
        GetUnauthedTestEndpointResponse,
    ]
    GetAuthedTestEndpoint: UnaryUnaryMultiCallable[
        GetAuthedTestEndpointRequest,
        GetAuthedTestEndpointResponse,
    ]
    GetViewerTestEndpoint: UnaryUnaryMultiCallable[
        GetViewerTestEndpointRequest,
        GetViewerTestEndpointResponse,
    ]
    GetDataScientistTestEndpoint: UnaryUnaryMultiCallable[
        GetDataScientistTestEndpointRequest,
        GetDataScientistTestEndpointResponse,
    ]
    GetDeveloperTestEndpoint: UnaryUnaryMultiCallable[
        GetDeveloperTestEndpointRequest,
        GetDeveloperTestEndpointResponse,
    ]
    GetAdminTestEndpoint: UnaryUnaryMultiCallable[
        GetAdminTestEndpointRequest,
        GetAdminTestEndpointResponse,
    ]
    GetOwnerTestEndpoint: UnaryUnaryMultiCallable[
        GetOwnerTestEndpointRequest,
        GetOwnerTestEndpointResponse,
    ]
    GetAuthServiceManagerTestEndpoint: UnaryUnaryMultiCallable[
        GetAuthServiceManagerTestEndpointRequest,
        GetAuthServiceManagerTestEndpointResponse,
    ]
    GetFeatureFlagTestEndpoint: UnaryUnaryMultiCallable[
        GetFeatureFlagTestEndpointRequest,
        GetFeatureFlagTestEndpointResponse,
    ]

class AuthTestingServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def GetUnauthedTestEndpoint(
        self,
        request: GetUnauthedTestEndpointRequest,
        context: ServicerContext,
    ) -> GetUnauthedTestEndpointResponse: ...
    @abstractmethod
    def GetAuthedTestEndpoint(
        self,
        request: GetAuthedTestEndpointRequest,
        context: ServicerContext,
    ) -> GetAuthedTestEndpointResponse: ...
    @abstractmethod
    def GetViewerTestEndpoint(
        self,
        request: GetViewerTestEndpointRequest,
        context: ServicerContext,
    ) -> GetViewerTestEndpointResponse: ...
    @abstractmethod
    def GetDataScientistTestEndpoint(
        self,
        request: GetDataScientistTestEndpointRequest,
        context: ServicerContext,
    ) -> GetDataScientistTestEndpointResponse: ...
    @abstractmethod
    def GetDeveloperTestEndpoint(
        self,
        request: GetDeveloperTestEndpointRequest,
        context: ServicerContext,
    ) -> GetDeveloperTestEndpointResponse: ...
    @abstractmethod
    def GetAdminTestEndpoint(
        self,
        request: GetAdminTestEndpointRequest,
        context: ServicerContext,
    ) -> GetAdminTestEndpointResponse: ...
    @abstractmethod
    def GetOwnerTestEndpoint(
        self,
        request: GetOwnerTestEndpointRequest,
        context: ServicerContext,
    ) -> GetOwnerTestEndpointResponse: ...
    @abstractmethod
    def GetAuthServiceManagerTestEndpoint(
        self,
        request: GetAuthServiceManagerTestEndpointRequest,
        context: ServicerContext,
    ) -> GetAuthServiceManagerTestEndpointResponse: ...
    @abstractmethod
    def GetFeatureFlagTestEndpoint(
        self,
        request: GetFeatureFlagTestEndpointRequest,
        context: ServicerContext,
    ) -> GetFeatureFlagTestEndpointResponse: ...

def add_AuthTestingServiceServicer_to_server(servicer: AuthTestingServiceServicer, server: Server) -> None: ...
