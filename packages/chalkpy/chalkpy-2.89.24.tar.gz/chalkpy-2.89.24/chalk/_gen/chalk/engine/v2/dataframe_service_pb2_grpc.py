# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from chalk._gen.chalk.common.v2 import execute_plan_pb2 as chalk_dot_common_dot_v2_dot_execute__plan__pb2


class DataFrameServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecutePlan = channel.unary_unary(
            "/chalk.engine.v2.DataFrameService/ExecutePlan",
            request_serializer=chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanRequest.SerializeToString,
            response_deserializer=chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanResponse.FromString,
        )


class DataFrameServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecutePlan(self, request, context):
        """Execute a DataFrame plan."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_DataFrameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ExecutePlan": grpc.unary_unary_rpc_method_handler(
            servicer.ExecutePlan,
            request_deserializer=chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanRequest.FromString,
            response_serializer=chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("chalk.engine.v2.DataFrameService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class DataFrameService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecutePlan(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/chalk.engine.v2.DataFrameService/ExecutePlan",
            chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanRequest.SerializeToString,
            chalk_dot_common_dot_v2_dot_execute__plan__pb2.ExecutePlanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
