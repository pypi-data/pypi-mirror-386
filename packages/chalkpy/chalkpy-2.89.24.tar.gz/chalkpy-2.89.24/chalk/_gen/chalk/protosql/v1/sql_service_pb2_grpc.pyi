"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.protosql.v1.sql_service_pb2 import (
    ExecuteSqlQueryRequest,
    ExecuteSqlQueryResponse,
    GetDbCatalogsRequest,
    GetDbCatalogsResponse,
    GetDbSchemasRequest,
    GetDbSchemasResponse,
    GetTablesRequest,
    GetTablesResponse,
    PlanSqlQueryRequest,
    PlanSqlQueryResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class SqlServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    ExecuteSqlQuery: UnaryUnaryMultiCallable[
        ExecuteSqlQueryRequest,
        ExecuteSqlQueryResponse,
    ]
    PlanSqlQuery: UnaryUnaryMultiCallable[
        PlanSqlQueryRequest,
        PlanSqlQueryResponse,
    ]
    GetDbCatalogs: UnaryUnaryMultiCallable[
        GetDbCatalogsRequest,
        GetDbCatalogsResponse,
    ]
    GetDbSchemas: UnaryUnaryMultiCallable[
        GetDbSchemasRequest,
        GetDbSchemasResponse,
    ]
    GetTables: UnaryUnaryMultiCallable[
        GetTablesRequest,
        GetTablesResponse,
    ]

class SqlServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def ExecuteSqlQuery(
        self,
        request: ExecuteSqlQueryRequest,
        context: ServicerContext,
    ) -> ExecuteSqlQueryResponse: ...
    @abstractmethod
    def PlanSqlQuery(
        self,
        request: PlanSqlQueryRequest,
        context: ServicerContext,
    ) -> PlanSqlQueryResponse: ...
    @abstractmethod
    def GetDbCatalogs(
        self,
        request: GetDbCatalogsRequest,
        context: ServicerContext,
    ) -> GetDbCatalogsResponse: ...
    @abstractmethod
    def GetDbSchemas(
        self,
        request: GetDbSchemasRequest,
        context: ServicerContext,
    ) -> GetDbSchemasResponse: ...
    @abstractmethod
    def GetTables(
        self,
        request: GetTablesRequest,
        context: ServicerContext,
    ) -> GetTablesResponse: ...

def add_SqlServiceServicer_to_server(servicer: SqlServiceServicer, server: Server) -> None: ...
