[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "pybind11>=2.6.0",
    "scikit-build-core"
]
build-backend = "scikit_build_core.build"

[project]
name = "adaptive-pipeline"
version = "0.1.4"
description = "An adaptive Pipeline Cache composed of FIFO and upgraded TinyLFU with cost-awareness"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Nadav Keren", email = "nadavker@pm.me"}
]
keywords = ["cache", "pipeline", "performance", "cpp", "lru", "lfu", "fifo", "adaptive"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: C++",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "pybind11>=2.6.0"
]

[project.urls]
Homepage = "https://github.com/NadavKeren/python-adaptive-pipeline-cache"
Repository = "https://github.com/NadavKeren/python-adaptive-pipeline-cache"
Issues = "https://github.com/NadavKeren/python-adaptive-pipeline-cache/issues"

[tool.cibuildwheel]
# Build for CPython 3.8-3.13
build = "cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*"

# Skip 32-bit builds, musl (Alpine), and PyPy
skip = [
    "*-win32",
    "*-manylinux_i686",
    "*-musllinux_*",
    "pp*",
]

# Set environment variables
[tool.cibuildwheel.environment]
CMAKE_BUILD_TYPE = "Release"

# macOS specific settings
# Note: Architecture is controlled per-runner in the GitHub Actions workflow
# to avoid duplicate wheel filenames when merging artifacts
[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15" }

# Linux specific settings
[tool.cibuildwheel.linux]
archs = ["x86_64"]
# Use manylinux2014 for broader compatibility
manylinux-x86_64-image = "manylinux2014"

# Windows specific settings
[tool.cibuildwheel.windows]
archs = ["AMD64"]

# Test the built wheels
test-requires = "pytest"
test-command = "python -c \"from adaptive_pipeline import AdaptivePipelineCache; cache = AdaptivePipelineCache(1024); print('Wheel test passed!')\""

# scikit-build-core configuration
[tool.scikit-build]
build.verbose = true
cmake.build-type = "Release"
wheel.install-dir = "adaptive_pipeline"
wheel.packages = ["adaptive_pipeline"]

