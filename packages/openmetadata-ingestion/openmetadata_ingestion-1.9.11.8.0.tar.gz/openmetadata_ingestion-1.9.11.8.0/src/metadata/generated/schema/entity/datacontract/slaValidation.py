# generated by datamodel-codegen:
#   filename:  entity/datacontract/slaValidation.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class SlaValidation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    refreshFrequencyMet: Annotated[
        Optional[bool],
        Field(None, description='Whether refresh frequency requirement was met.'),
    ]
    latencyMet: Annotated[
        Optional[bool], Field(None, description='Whether latency requirement was met.')
    ]
    availabilityMet: Annotated[
        Optional[bool],
        Field(None, description='Whether availability requirement was met.'),
    ]
    actualLatency: Annotated[
        Optional[int], Field(None, description='Actual latency in milliseconds.')
    ]
