# generated by datamodel-codegen:
#   filename:  analytics/webAnalyticEventType/pageViewEvent.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional

from pydantic import Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic as basic_1
from .. import basic


class PageViewData(BaseModel):
    fullUrl: Annotated[
        Optional[basic.FullUrl], Field(None, description='complete URL of the page')
    ]
    url: Annotated[
        Optional[basic.Url],
        Field(None, description='url part after the domain specification'),
    ]
    hostname: Annotated[
        Optional[basic.Hostname], Field(None, description='domain name')
    ]
    language: Annotated[
        Optional[str], Field(None, description='language set on the page')
    ]
    screenSize: Annotated[Optional[str], Field(None, description='Size of the screen')]
    userId: Annotated[
        Optional[basic_1.Uuid],
        Field(None, description='OpenMetadata logged in user Id'),
    ]
    sessionId: Annotated[
        Optional[basic.SessionId],
        Field(None, description='Unique ID identifying a session'),
    ]
    pageLoadTime: Annotated[
        Optional[float], Field(None, description='time for the page to load in seconds')
    ]
    referrer: Annotated[Optional[str], Field(None, description='referrer URL')]
