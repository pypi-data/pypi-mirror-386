# generated by datamodel-codegen:
#   filename:  api/tests/createTestCaseResolutionStatus.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...tests import assigned, resolved, testCaseResolutionStatus
from ...type import basic


class CreateTestCaseResolutionStatus(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    testCaseResolutionStatusType: Annotated[
        testCaseResolutionStatus.TestCaseResolutionStatusTypes,
        Field(description='Status of Test Case.'),
    ]
    testCaseResolutionStatusDetails: Annotated[
        Optional[Union[resolved.Resolved, assigned.Assigned]],
        Field(None, description='Details of the test case failure status.'),
    ]
    testCaseReference: Annotated[
        basic.FullyQualifiedEntityName, Field(description='Test case reference FQN')
    ]
    severity: Annotated[
        Optional[testCaseResolutionStatus.Severities],
        Field(
            None,
            description='Severity failure for the test associated with the resolution.',
        ),
    ]
