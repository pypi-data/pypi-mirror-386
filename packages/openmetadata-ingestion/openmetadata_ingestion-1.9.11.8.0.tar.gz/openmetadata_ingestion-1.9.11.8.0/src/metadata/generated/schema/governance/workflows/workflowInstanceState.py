# generated by datamodel-codegen:
#   filename:  governance/workflows/workflowInstanceState.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic
from . import workflowInstance


class Stage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[basic.EntityName] = None
    displayName: Annotated[
        Optional[str],
        Field(None, description='Display name of the workflow stage node.'),
    ]
    startedAt: Annotated[
        Optional[basic.Timestamp],
        Field(
            None, description='Timestamp on which the workflow instance stage started.'
        ),
    ]
    endedAt: Annotated[
        Optional[basic.Timestamp],
        Field(
            None, description='Timestamp on which the workflow instance stage ended.'
        ),
    ]
    tasks: Optional[List[basic.Uuid]] = []
    variables: Optional[Dict[str, Any]] = None


class WorkflowInstanceState(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Annotated[
        Optional[basic.Uuid],
        Field(None, description='Unique identifier of this workflow instance state.'),
    ]
    workflowInstanceId: Annotated[
        Optional[basic.Uuid], Field(None, description='Workflow Instance ID.')
    ]
    workflowInstanceExecutionId: Annotated[
        Optional[basic.Uuid],
        Field(
            None,
            description='One WorkflowInstance might execute a flow multiple times. This ID groups together the States of one of those flows.',
        ),
    ]
    workflowDefinitionId: Annotated[
        Optional[basic.Uuid], Field(None, description='Workflow Definition Reference.')
    ]
    stage: Optional[Stage] = None
    timestamp: Annotated[
        Optional[basic.Timestamp],
        Field(
            None,
            description='Timestamp on which the workflow instance state was created.',
        ),
    ]
    status: Optional[workflowInstance.WorkflowStatus] = None
    exception: Optional[str] = None
