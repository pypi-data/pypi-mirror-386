# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/automator/addDomainAction.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ......type import entityReferenceList


class AddDomainActionType(Enum):
    AddDomainAction = 'AddDomainAction'


class AddDomainAction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        AddDomainActionType,
        Field(description='Application Type', title='Application Type'),
    ]
    domains: Annotated[
        entityReferenceList.EntityReferenceList, Field(description='Domains to apply')
    ]
    overwriteMetadata: Annotated[
        Optional[bool],
        Field(
            False,
            description='Update the domains even if they are defined in the asset. By default, we will only apply the domains to assets without domains.',
            title='Overwrite Metadata',
        ),
    ]
