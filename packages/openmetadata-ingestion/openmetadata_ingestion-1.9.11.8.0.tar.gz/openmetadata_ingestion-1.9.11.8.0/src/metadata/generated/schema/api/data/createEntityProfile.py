# generated by datamodel-codegen:
#   filename:  api/data/createEntityProfile.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...entity.data import table
from ...type import basic, entityProfile


class CreateEntityProfileRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entityType: Annotated[
        str,
        Field(
            description="Type of entity for which the profile is created. For example, 'table'."
        ),
    ]
    timestamp: Annotated[
        Optional[basic.Timestamp],
        Field(None, description='Timestamp when the profile is created.'),
    ]
    profileData: Union[table.TableProfile, table.ColumnProfile, table.SystemProfile]
    profileType: Annotated[
        Optional[entityProfile.ProfileTypeEnum],
        Field(None, description='type of profile'),
    ]
