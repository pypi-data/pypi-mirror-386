# generated by datamodel-codegen:
#   filename:  dataInsight/type/aggregatedUsedVsUnusedAssetsCount.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic


class AggregatedUsedVsUnusedAssetsCount(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    timestamp: Annotated[
        Optional[basic.Timestamp], Field(None, description='timestamp')
    ]
    UnusedPercentage: Annotated[
        Optional[float],
        Field(
            None,
            description='Percentage of the count of unused assets (last access >= 3 days)',
        ),
    ]
    UsedPercentage: Annotated[
        Optional[float],
        Field(
            None,
            description='Percentage of the count of used assets (last access < 3 days)',
        ),
    ]
    Unused: Annotated[
        Optional[float],
        Field(None, description='Count of unused assets (last access >= 3 days)'),
    ]
    Used: Annotated[
        Optional[float],
        Field(None, description='Count of used assets (last access < 3 days)'),
    ]
