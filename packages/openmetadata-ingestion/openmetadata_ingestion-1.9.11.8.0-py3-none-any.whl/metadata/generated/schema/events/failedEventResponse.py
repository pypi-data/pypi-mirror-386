# generated by datamodel-codegen:
#   filename:  events/failedEventResponse.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ..type import basic, changeEvent


class FailedEvents(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    failingSubscriptionId: Annotated[
        Optional[basic.Uuid],
        Field(
            None,
            description='Unique identifier that identifies this Event Subscription.',
        ),
    ]
    changeEvent: Annotated[
        Optional[changeEvent.ChangeEvent],
        Field(None, description='Change Event that failed'),
    ]
    reason: Annotated[Optional[str], Field(None, description='Reason for failure')]
    source: Annotated[
        Optional[str], Field(None, description='Source of the failed event')
    ]
    timestamp: Annotated[
        Optional[basic.Timestamp], Field(None, description='Time of Failure')
    ]
