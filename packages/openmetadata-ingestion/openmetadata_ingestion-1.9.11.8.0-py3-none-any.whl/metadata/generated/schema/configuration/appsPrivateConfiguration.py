# generated by datamodel-codegen:
#   filename:  configuration/appsPrivateConfiguration.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ..entity.applications import app


class AppPrivateConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Annotated[str, Field(description='Application Name')]
    preview: Annotated[
        Optional[bool],
        Field(
            False,
            description="Flag to enable/disable preview for the application. If the app is in preview mode, it can't be installed.",
        ),
    ]
    schedule: Optional[app.AppSchedule] = None
    parameters: Annotated[
        Dict[str, Any], Field(description='Parameters to initialize the Applications.')
    ]


class AppsPrivateConfiguration(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appsPrivateConfiguration: Annotated[
        List[AppPrivateConfig], Field(description='List of configuration for apps')
    ]
