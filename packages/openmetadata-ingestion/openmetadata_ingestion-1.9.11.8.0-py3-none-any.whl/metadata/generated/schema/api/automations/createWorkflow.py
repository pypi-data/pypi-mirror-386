# generated by datamodel-codegen:
#   filename:  api/automations/createWorkflow.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import List, Optional, Union

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...entity.automations import testServiceConnection, workflow
from ...entity.services.connections import testConnectionResult
from ...entity.services.ingestionPipelines import reverseIngestionResponse
from ...metadataIngestion import reverseIngestionPipeline
from ...type import basic, entityReferenceList


class CreateWorkflowRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Annotated[basic.EntityName, Field(description='Name of the workflow.')]
    displayName: Annotated[
        Optional[str],
        Field(
            None, description='Display Name that identifies this workflow definition.'
        ),
    ]
    description: Annotated[
        Optional[basic.Markdown],
        Field(None, description='Description of the test connection def.'),
    ]
    workflowType: Annotated[
        workflow.WorkflowType, Field(description='Type of the workflow.')
    ]
    request: Annotated[
        Union[
            testServiceConnection.TestServiceConnectionRequest,
            reverseIngestionPipeline.ReverseIngestionPipeline,
        ],
        Field(description='Request body for a specific workflow type'),
    ]
    status: Annotated[
        Optional[workflow.WorkflowStatus],
        Field(
            workflow.WorkflowStatus.Pending, description='Workflow computation status.'
        ),
    ]
    response: Annotated[
        Optional[
            Union[
                testConnectionResult.TestConnectionResult,
                reverseIngestionResponse.ReverseIngestionResponse,
            ]
        ],
        Field(None, description='Response to the request.'),
    ]
    owners: Annotated[
        Optional[entityReferenceList.EntityReferenceList],
        Field(None, description='Owners of this workflow.'),
    ]
    domains: Annotated[
        Optional[List[str]],
        Field(
            None,
            description='Fully qualified names of the domains the Workflow belongs to.',
        ),
    ]
