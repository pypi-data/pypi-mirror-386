# generated by datamodel-codegen:
#   filename:  entity/utils/servicesCount.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class ServicesCount(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    databaseServiceCount: Annotated[
        Optional[int], Field(None, description='Database Service Count')
    ]
    messagingServiceCount: Annotated[
        Optional[int], Field(None, description='Messaging Service Count')
    ]
    dashboardServiceCount: Annotated[
        Optional[int], Field(None, description='Dashboard Service Count')
    ]
    pipelineServiceCount: Annotated[
        Optional[int], Field(None, description='Pipeline Service Count')
    ]
    mlModelServiceCount: Annotated[
        Optional[int], Field(None, description='MlModel Service Count')
    ]
    storageServiceCount: Annotated[
        Optional[int], Field(None, description='Storage Service Count')
    ]
