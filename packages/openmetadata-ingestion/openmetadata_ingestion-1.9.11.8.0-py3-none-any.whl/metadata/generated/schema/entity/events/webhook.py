# generated by datamodel-codegen:
#   filename:  entity/events/webhook.json
#   timestamp: 2025-10-23T04:50:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import AnyUrl, ConfigDict, Field, RootModel
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class HttpMethod(Enum):
    POST = 'POST'
    PUT = 'PUT'


class Webhook(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    receivers: Annotated[
        Optional[List[str]],
        Field(None, description='List of receivers to send mail to'),
    ]
    endpoint: Annotated[
        Optional[AnyUrl],
        Field(
            None,
            description='Endpoint to receive the webhook events over POST requests.',
        ),
    ]
    secretKey: Annotated[
        Optional[str],
        Field(
            None,
            description='Secret set by the webhook client used for computing HMAC SHA256 signature of webhook payload and sent in `X-OM-Signature` header in POST requests to publish the events.',
        ),
    ]
    headers: Annotated[
        Optional[Dict[str, Any]],
        Field(None, description='Custom headers to be sent with the webhook request.'),
    ]
    queryParams: Annotated[
        Optional[Dict[str, Any]],
        Field(
            None, description='Query parameters to be added to the webhook request URL.'
        ),
    ]
    httpMethod: Annotated[
        Optional[HttpMethod],
        Field(
            HttpMethod.POST,
            description='HTTP operation to send the webhook request. Supports POST or PUT.',
        ),
    ]
    sendToAdmins: Annotated[
        Optional[bool], Field(False, description='Send the Event to Admins')
    ]
    sendToOwners: Annotated[
        Optional[bool], Field(False, description='Send the Event to Owners')
    ]
    sendToFollowers: Annotated[
        Optional[bool], Field(False, description='Send the Event to Followers')
    ]


class EntityName(RootModel[str]):
    root: Annotated[
        str,
        Field(
            description='Unique name of the application receiving webhook events.',
            max_length=128,
            min_length=1,
            pattern="(?u)^[\\w'\\-.]+$",
        ),
    ]
