# generated by datamodel-codegen:
#   filename:  events/api/eventsRecord.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class EventSubscriptionEventsRecord(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    totalEventsCount: Annotated[
        Optional[Any],
        Field(
            None,
            description='Count of total events (pendingEventsCount + successfulEventsCount + failedEventsCount) for specific alert.',
        ),
    ]
    pendingEventsCount: Annotated[
        Optional[Any],
        Field(None, description='Count of pending events for specific alert.'),
    ]
    successfulEventsCount: Annotated[
        Optional[Any],
        Field(None, description='Count of successful events for specific alert.'),
    ]
    failedEventsCount: Annotated[
        Optional[Any],
        Field(None, description='Count of failed events for specific alert.'),
    ]
