# generated by datamodel-codegen:
#   filename:  events/filterResourceDescriptor.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from . import eventFilterRule


class FilterResourceDescriptor(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Annotated[
        Optional[str],
        Field(
            None,
            description='Name of the resource. For entity related resources, resource name is same as the entity name. Some resources such as lineage are not entities but are resources.',
        ),
    ]
    supportedFilters: Annotated[
        Optional[List[eventFilterRule.EventFilterRule]],
        Field(
            None, description='List of operations supported filters by the resource.'
        ),
    ]
    supportedActions: Annotated[
        Optional[List[eventFilterRule.EventFilterRule]],
        Field(None, description='List of actions supported filters by the resource.'),
    ]
