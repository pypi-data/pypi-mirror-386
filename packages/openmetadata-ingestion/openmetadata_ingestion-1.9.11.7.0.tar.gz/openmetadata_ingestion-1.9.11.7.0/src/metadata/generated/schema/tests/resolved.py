# generated by datamodel-codegen:
#   filename:  tests/resolved.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ..type import entityReference


class TestCaseFailureReasonType(Enum):
    FalsePositive = 'FalsePositive'
    MissingData = 'MissingData'
    Duplicates = 'Duplicates'
    OutOfBounds = 'OutOfBounds'
    Other = 'Other'


class Resolved(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    testCaseFailureReason: Annotated[
        TestCaseFailureReasonType, Field(description='Reason of Test Case resolution.')
    ]
    testCaseFailureComment: Annotated[
        str, Field(description='Test case failure resolution comment.')
    ]
    resolvedBy: Annotated[
        Optional[entityReference.EntityReference],
        Field(None, description='User who resolved the test case failure.'),
    ]
