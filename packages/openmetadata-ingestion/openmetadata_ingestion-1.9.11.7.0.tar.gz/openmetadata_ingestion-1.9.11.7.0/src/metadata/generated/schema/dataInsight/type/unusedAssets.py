# generated by datamodel-codegen:
#   filename:  dataInsight/type/unusedAssets.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic, entityReference


class UnusedAssets(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entity: Annotated[
        Optional[entityReference.EntityReference],
        Field(None, description='Entity of the life cycle data'),
    ]
    sizeInBytes: Annotated[
        Optional[float], Field(None, description='Size of the asset in bytes')
    ]
    lastAccessedAt: Annotated[
        Optional[basic.Timestamp], Field(None, description='timestamp')
    ]
