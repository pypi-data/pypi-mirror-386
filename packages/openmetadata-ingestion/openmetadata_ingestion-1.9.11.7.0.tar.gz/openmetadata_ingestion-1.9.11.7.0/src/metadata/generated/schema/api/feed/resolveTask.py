# generated by datamodel-codegen:
#   filename:  api/feed/resolveTask.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...tests import resolved
from ...type import basic


class ResolveTaskRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    newValue: Annotated[
        str,
        Field(
            description='The new value object that needs to be updated to resolve the task.'
        ),
    ]
    testCaseFailureReason: Annotated[
        Optional[resolved.TestCaseFailureReasonType],
        Field(None, description='Reason of Test Case resolution.'),
    ]
    testCaseFQN: Annotated[
        Optional[basic.FullyQualifiedEntityName],
        Field(None, description='Fully qualified name of the test case.'),
    ]
