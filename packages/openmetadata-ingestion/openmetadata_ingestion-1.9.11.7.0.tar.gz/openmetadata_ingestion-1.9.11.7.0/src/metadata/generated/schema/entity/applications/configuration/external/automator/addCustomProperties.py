# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/automator/addCustomProperties.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ......type import basic


class AddCustomPropertiesActionType(Enum):
    AddCustomPropertiesAction = 'AddCustomPropertiesAction'


class AddCustomPropertiesAction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        AddCustomPropertiesActionType,
        Field(description='Application Type', title='Application Type'),
    ]
    customProperties: Annotated[
        basic.EntityExtension, Field(description='Owners to apply')
    ]
    overwriteMetadata: Annotated[
        Optional[bool],
        Field(
            False,
            description='Update the Custom Property even if it is defined in the asset. By default, we will only apply the owners to assets without the given Custom Property informed.',
            title='Overwrite Metadata',
        ),
    ]
