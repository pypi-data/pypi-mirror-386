# generated by datamodel-codegen:
#   filename:  api/scim/scimUser.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import AwareDatetime, ConfigDict, EmailStr, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class Email(BaseModel):
    value: Optional[EmailStr] = None
    type: Optional[str] = None
    primary: Optional[bool] = None


class PhoneNumber(BaseModel):
    value: Optional[str] = None
    type: Optional[str] = None


class Address(BaseModel):
    type: Optional[str] = None
    formatted: Optional[str] = None
    streetAddress: Optional[str] = None
    locality: Optional[str] = None
    region: Optional[str] = None
    postalCode: Optional[str] = None
    country: Optional[str] = None


class Name(BaseModel):
    givenName: Optional[str] = None
    familyName: Optional[str] = None
    formatted: Optional[str] = None


class Meta(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    resourceType: Optional[str] = None
    created: Optional[AwareDatetime] = None
    lastModified: Optional[AwareDatetime] = None
    location: Optional[str] = None


class Manager(BaseModel):
    value: Optional[str] = None
    displayName: Optional[str] = None


class UrnIetfParamsScimSchemasExtensionEnterprise20User(BaseModel):
    employeeId: Optional[str] = None
    department: Optional[str] = None
    manager: Optional[Manager] = None


class ScimUser(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    schemas: Optional[List[str]] = None
    id: Optional[str] = None
    externalId: Optional[str] = None
    userName: Optional[str] = None
    displayName: Optional[str] = None
    active: Optional[bool] = True
    title: Optional[str] = None
    preferredLanguage: Optional[str] = None
    emails: Optional[List[Email]] = None
    phoneNumbers: Optional[List[PhoneNumber]] = None
    addresses: Optional[List[Address]] = None
    name: Optional[Name] = None
    meta: Optional[Meta] = None
    urn_ietf_params_scim_schemas_extension_enterprise_2_0_User: Annotated[
        Optional[UrnIetfParamsScimSchemasExtensionEnterprise20User],
        Field(None, alias='urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'),
    ]
