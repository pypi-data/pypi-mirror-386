# generated by datamodel-codegen:
#   filename:  analytics/webAnalyticEventData.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Optional, Union

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ..type import basic
from . import basic as basic_1
from .webAnalyticEventType import customEvent, pageViewEvent


class WebAnalyticEventData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    eventId: Annotated[
        Optional[basic.Uuid],
        Field(None, description='Unique identifier of the report.'),
    ]
    timestamp: Annotated[basic.Timestamp, Field(description='event timestamp')]
    eventType: Annotated[basic_1.WebAnalyticEventType, Field(description='event type')]
    eventData: Annotated[
        Optional[Union[pageViewEvent.PageViewData, customEvent.CustomData]],
        Field(None, description='Web analytic data captured'),
    ]
