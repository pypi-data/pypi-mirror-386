# generated by datamodel-codegen:
#   filename:  analytics/reportDataType/rawCostAnalysisReportData.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import entityReference, lifeCycle


class RawCostAnalysisReportData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entity: Annotated[
        entityReference.EntityReference,
        Field(description='Entity of the life cycle data'),
    ]
    lifeCycle: Annotated[
        Optional[lifeCycle.LifeCycle],
        Field(None, description='Life Cycle data related to the entity'),
    ]
    sizeInByte: Annotated[
        Optional[float], Field(None, description='Entity size in bytes')
    ]
