# generated by datamodel-codegen:
#   filename:  analytics/reportDataType/webAnalyticEntityViewReportData.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic, tagLabel


class WebAnalyticEntityViewReportData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entityType: Annotated[Optional[str], Field(None, description='entity type')]
    entityTier: Annotated[Optional[str], Field(None, description='entity tier')]
    entityFqn: Annotated[
        Optional[basic.FullyQualifiedEntityName],
        Field(None, description='entity fully qualified name'),
    ]
    entityHref: Annotated[Optional[str], Field(None, description='entity href')]
    tagsFQN: Annotated[
        Optional[List[tagLabel.TagFQN]], Field(None, description='Tags FQN')
    ]
    owner: Annotated[Optional[str], Field(None, description='Name of the entity owner')]
    ownerId: Annotated[
        Optional[str], Field(None, description='Name of the entity owner')
    ]
    views: Annotated[
        Optional[int], Field(None, description='Number of time the entity was viewed')
    ]
