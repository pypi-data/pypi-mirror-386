# generated by datamodel-codegen:
#   filename:  analytics/reportDataType/entityReportData.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class EntityReportData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    serviceName: Annotated[
        Optional[str], Field(None, description='Name of the service')
    ]
    entityType: Annotated[Optional[str], Field(None, description='type of the entity')]
    entityTier: Annotated[Optional[str], Field(None, description='Tier for the entity')]
    team: Annotated[
        Optional[str],
        Field(None, description='Team associated with the entity (i.e. owner)'),
    ]
    organization: Annotated[
        Optional[str],
        Field(None, description='Organization associated with the entity (i.e. owner)'),
    ]
    completedDescriptions: Annotated[
        Optional[int],
        Field(None, description='Number of completed description for the entity'),
    ]
    missingDescriptions: Annotated[
        Optional[int],
        Field(None, description='Number of missing description for the entity'),
    ]
    hasOwner: Annotated[
        Optional[int], Field(None, description='number of entities with owner')
    ]
    missingOwner: Annotated[
        Optional[int], Field(None, description='number of entities missing owners')
    ]
    entityCount: Annotated[Optional[int], Field(None, description='number of entities')]
