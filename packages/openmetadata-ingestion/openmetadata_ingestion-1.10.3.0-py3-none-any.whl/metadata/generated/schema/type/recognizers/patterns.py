# generated by datamodel-codegen:
#   filename:  type/recognizers/patterns.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class Pattern(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Annotated[str, Field(description='Name of the pattern')]
    regex: Annotated[str, Field(description='Regular expression pattern')]
    score: Annotated[
        Optional[float],
        Field(
            0.8,
            description='Confidence score for this pattern (0.0 to 1.0)',
            ge=0.0,
            le=1.0,
        ),
    ]
