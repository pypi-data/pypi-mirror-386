# generated by datamodel-codegen:
#   filename:  entity/services/connections/pipeline/kinesisFirehoseConnection.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from .....security.credentials import awsCredentials
from .....type import filterPattern
from .. import connectionBasicType


class KinesisFirehoseType(Enum):
    KinesisFirehose = 'KinesisFirehose'


class KinesisFirehoseConnection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[KinesisFirehoseType],
        Field(
            KinesisFirehoseType.KinesisFirehose,
            description='Service Type',
            title='Service Type',
        ),
    ]
    awsConfig: Annotated[
        awsCredentials.AWSCredentials, Field(title='AWS Credentials Configuration')
    ]
    messagingServiceName: Annotated[
        Optional[str],
        Field(
            None,
            description='Name of the Kafka Messaging Service associated with this Firehose Pipeline Service. e.g. local_kafka',
            title='Kafka Service Name',
        ),
    ]
    pipelineFilterPattern: Annotated[
        Optional[filterPattern.FilterPattern],
        Field(
            None,
            description='Regex exclude pipelines.',
            title='Default Pipeline Filter Pattern',
        ),
    ]
    supportsMetadataExtraction: Annotated[
        Optional[connectionBasicType.SupportsMetadataExtraction],
        Field(None, title='Supports Metadata Extraction'),
    ]
