# generated by datamodel-codegen:
#   filename:  entity/automations/queryRunnerRequest.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic


class QueryRunnerRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    connectionType: Annotated[
        Optional[str],
        Field(
            None,
            description='Type of the connection to test such as Snowflake, MySQL, Looker, etc.',
        ),
    ]
    serviceName: Annotated[
        Optional[basic.EntityName],
        Field(None, description='Optional value that identifies this service name.'),
    ]
    query: Annotated[Optional[str], Field(None, description='Query to be executed.')]
    transpile: Annotated[
        Optional[bool],
        Field(
            None,
            description='Optional value to indicate if the query should be transpiled.',
        ),
    ]
    ingestionRunner: Annotated[
        Optional[str],
        Field(
            None,
            description='Optional value of the ingestion runner name responsible for running the test',
        ),
    ]
