# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/automator/addDataProductAction.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ......type import entityReference


class AddDataProductActionType(Enum):
    AddDataProductAction = 'AddDataProductAction'


class AddDataProductAction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        AddDataProductActionType,
        Field(description='Application Type', title='Application Type'),
    ]
    dataProducts: Annotated[
        List[entityReference.EntityReference],
        Field(description='Data Products to apply'),
    ]
    overwriteMetadata: Annotated[
        Optional[bool],
        Field(
            False,
            description='Update the Data Product even if the asset belongs to a different Domain. By default, we will only add the Data Product if the asset has no Domain, or it belongs to the same domain as the Data Product.',
            title='Overwrite Metadata',
        ),
    ]
