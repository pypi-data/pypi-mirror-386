# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/external/automator/propagationStopConfig.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Union

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ......type import entityReference, tagLabel


class MetadataAttribute(Enum):
    description = 'description'
    tags = 'tags'
    glossaryTerms = 'glossaryTerms'
    owner = 'owner'
    tier = 'tier'
    domains = 'domains'


class PropagationStopConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    metadataAttribute: Annotated[
        MetadataAttribute,
        Field(
            description='The metadata attribute to check for stopping propagation',
            title='Metadata Attribute',
        ),
    ]
    value: Annotated[
        List[Union[str, tagLabel.TagLabel, entityReference.EntityReference]],
        Field(
            description='List of attribute values that will stop propagation when any of them is matched',
            title='Stop Values',
        ),
    ]
