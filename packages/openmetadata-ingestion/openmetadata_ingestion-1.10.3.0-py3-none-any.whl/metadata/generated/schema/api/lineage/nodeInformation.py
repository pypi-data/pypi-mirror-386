# generated by datamodel-codegen:
#   filename:  api/lineage/nodeInformation.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Any, Optional

from pydantic import Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from . import searchLineageResult


class NodeInformation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entity: Annotated[Optional[Any], Field(None, description='Entity object.')]
    paging: Optional[searchLineageResult.LayerPaging] = None
    nodeDepth: Annotated[
        Optional[int],
        Field(
            None,
            description='Depth of the node from the root entity in the lineage graph. Root entity has depth 0, its immediate upstream/downstream entities have depth 1, and so on.',
            ge=0,
        ),
    ]
