# generated by datamodel-codegen:
#   filename:  api/entityRelationship/searchEntityRelationshipResult.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class SearchEntityRelationshipResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    nodes: Annotated[
        Optional[Any],
        Field(None, description='Nodes in the entity relationship response.'),
    ]
    upstreamEdges: Annotated[
        Optional[Any], Field(None, description='Upstream Edges for the entity.')
    ]
    downstreamEdges: Annotated[
        Optional[Any], Field(None, description='Downstream Edges for the node.')
    ]


class LayerPaging(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entityDownstreamCount: Annotated[
        Optional[int],
        Field(None, description='Count of entities downstream current layer entity.'),
    ]
    entityUpstreamCount: Annotated[
        Optional[int],
        Field(None, description='Count of entities upstream current layer entity.'),
    ]


class DirectionPaging(BaseModel):
    upstream: Optional[List[LayerPaging]] = None
    downstream: Optional[List[LayerPaging]] = None
