# generated by datamodel-codegen:
#   filename:  security/credentials/kubernetesCredentials.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class KubernetesCredentials(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    namespace: Annotated[
        Optional[str],
        Field(
            None,
            description='The namespace of the Kubernetes cluster',
            title='Namespace',
        ),
    ]
    inCluster: Annotated[
        Optional[bool],
        Field(
            None,
            description='Whether the Kubernetes secrets manager is running in the same cluster where the OpenMetadata services are running',
            title='In Cluster',
        ),
    ]
    kubeconfigPath: Annotated[
        Optional[str],
        Field(
            None, description='The path to the kubeconfig file', title='Kubeconfig Path'
        ),
    ]
