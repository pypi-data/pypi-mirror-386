# generated by datamodel-codegen:
#   filename:  entity/services/connections/pipeline/matillionConnection.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from .....type import filterPattern
from .. import connectionBasicType
from .matillion import matillionETL


class MatillionType(Enum):
    Matillion = 'Matillion'


class MatillionConnection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[MatillionType],
        Field(
            MatillionType.Matillion, description='Service Type', title='Service Type'
        ),
    ]
    connection: Annotated[
        Optional[matillionETL.MatillionEtlAuthConfig],
        Field(
            None,
            description='Matillion Auth Configuration',
            title='Matillion Connection',
        ),
    ]
    pipelineFilterPattern: Annotated[
        Optional[filterPattern.FilterPattern],
        Field(
            None,
            description='Regex exclude pipelines.',
            title='Default Pipeline Filter Pattern',
        ),
    ]
    supportsMetadataExtraction: Annotated[
        Optional[connectionBasicType.SupportsMetadataExtraction],
        Field(None, title='Supports Metadata Extraction'),
    ]
