# generated by datamodel-codegen:
#   filename:  type/collectionDescriptor.json
#   timestamp: 2025-10-22T06:46:32+00:00

from __future__ import annotations

from typing import Optional

from pydantic import AnyUrl, ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from . import profile


class CollectionInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Annotated[
        Optional[str],
        Field(None, description='Unique name that identifies a collection.'),
    ]
    documentation: Annotated[
        Optional[str], Field(None, description='Description of collection.')
    ]
    href: Annotated[
        Optional[AnyUrl],
        Field(
            None,
            description='URL of the API endpoint where given collections are available.',
        ),
    ]
    images: Optional[profile.ImageList] = None


class CollectionDescriptor(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    collection: Optional[CollectionInfo] = None
