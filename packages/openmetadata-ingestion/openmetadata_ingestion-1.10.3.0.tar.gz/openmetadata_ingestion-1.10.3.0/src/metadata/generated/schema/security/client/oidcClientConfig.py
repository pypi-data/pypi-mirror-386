# generated by datamodel-codegen:
#   filename:  security/client/oidcClientConfig.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel, CustomSecretStr


class ClientAuthenticationMethod(Enum):
    client_secret_basic = 'client_secret_basic'
    client_secret_post = 'client_secret_post'
    client_secret_jwt = 'client_secret_jwt'
    private_key_jwt = 'private_key_jwt'


class OidcClientConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[str], Field(None, description='IDP type (Example Google,Azure).')
    ]
    id: Annotated[str, Field(description='Client ID.')]
    secret: Annotated[CustomSecretStr, Field(description='Client Secret.')]
    scope: Annotated[
        Optional[str], Field('openid email profile', description='Oidc Request Scopes.')
    ]
    discoveryUri: Annotated[str, Field(description='Discovery Uri for the Client.')]
    useNonce: Annotated[Optional[str], Field(True, description='Use Nonce.')]
    preferredJwsAlgorithm: Annotated[
        Optional[str], Field('RS256', description='Preferred Jws Algorithm.')
    ]
    responseType: Annotated[
        Optional[str], Field('code', description='Auth0 Client Secret Key.')
    ]
    disablePkce: Annotated[Optional[bool], Field(True, description='Disable PKCE.')]
    maxClockSkew: Annotated[Optional[str], Field(None, description='Max Clock Skew')]
    clientAuthenticationMethod: Annotated[
        Optional[ClientAuthenticationMethod],
        Field(None, description='Client Authentication Method.'),
    ]
    tokenValidity: Annotated[
        Optional[int],
        Field(
            '3600', description='Validity for the JWT Token created from SAML Response'
        ),
    ]
    customParams: Annotated[
        Optional[Dict[str, Any]], Field(None, description='Custom Params.')
    ]
    tenant: Annotated[str, Field(description='Tenant in case of Azure.')]
    serverUrl: Annotated[Optional[str], Field(None, description='Server Url.')]
    callbackUrl: Annotated[Optional[str], Field(None, description='Callback Url.')]
    maxAge: Annotated[
        Optional[str],
        Field(
            None, description='Validity for the JWT Token created from SAML Response'
        ),
    ]
    prompt: Annotated[
        Optional[str], Field(None, description='Prompt whether login/consent')
    ]
    sessionExpiry: Annotated[
        Optional[int],
        Field(
            '604800',
            description='Validity for the Session in case of confidential clients',
        ),
    ]
