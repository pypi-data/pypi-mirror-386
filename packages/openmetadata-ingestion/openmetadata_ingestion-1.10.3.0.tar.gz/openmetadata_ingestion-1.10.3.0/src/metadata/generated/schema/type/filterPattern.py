# generated by datamodel-codegen:
#   filename:  type/filterPattern.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class FilterPatternModel(BaseModel):
    pass


class FilterPattern(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    includes: Annotated[
        Optional[List[str]],
        Field(
            None,
            description='List of strings/regex patterns to match and include only database entities that match.',
        ),
    ]
    excludes: Annotated[
        Optional[List[str]],
        Field(
            None,
            description='List of strings/regex patterns to match and exclude only database entities that match.',
        ),
    ]
