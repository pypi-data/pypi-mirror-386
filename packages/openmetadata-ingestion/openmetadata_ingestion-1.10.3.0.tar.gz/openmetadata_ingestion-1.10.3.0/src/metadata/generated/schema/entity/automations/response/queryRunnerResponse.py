# generated by datamodel-codegen:
#   filename:  entity/automations/response/queryRunnerResponse.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...data import table


class StatusType(Enum):
    Successful = 'Successful'
    Failed = 'Failed'
    Running = 'Running'


class QueryRunnerResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    status: Annotated[
        Optional[StatusType], Field(None, description='Status of the query execution')
    ]
    message: Annotated[
        Optional[str], Field(None, description='Error message in case of failure')
    ]
    errorLog: Annotated[
        Optional[str], Field(None, description='Detailed error log in case of failure')
    ]
    duration: Annotated[
        Optional[float],
        Field(None, description='Duration of the query execution in seconds'),
    ]
    results: Annotated[
        Optional[table.TableData],
        Field(None, description='Results of the query execution'),
    ]
    executedQuery: Annotated[
        Optional[str],
        Field(
            None,
            description='The actual query that was executed (may be transpiled or modified from the original)',
        ),
    ]
