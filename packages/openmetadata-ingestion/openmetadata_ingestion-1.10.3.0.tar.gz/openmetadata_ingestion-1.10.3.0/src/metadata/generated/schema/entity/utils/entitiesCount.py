# generated by datamodel-codegen:
#   filename:  entity/utils/entitiesCount.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class EntitiesCount(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    tableCount: Annotated[Optional[int], Field(None, description='Table Count')]
    topicCount: Annotated[Optional[int], Field(None, description='Topic Count')]
    dashboardCount: Annotated[Optional[int], Field(None, description='Dashboard Count')]
    pipelineCount: Annotated[Optional[int], Field(None, description='Pipeline Count')]
    mlmodelCount: Annotated[Optional[int], Field(None, description='MlModel Count')]
    servicesCount: Annotated[Optional[int], Field(None, description='Services Count')]
    userCount: Annotated[Optional[int], Field(None, description='User Count')]
    teamCount: Annotated[Optional[int], Field(None, description='Team Count')]
    testSuiteCount: Annotated[
        Optional[int], Field(None, description='Test Suite Count')
    ]
    storageContainerCount: Annotated[
        Optional[int], Field(None, description='Storage Container Count')
    ]
    glossaryCount: Annotated[Optional[int], Field(None, description='Glossary Count')]
    glossaryTermCount: Annotated[
        Optional[int], Field(None, description='Glossary Term Count')
    ]
