# generated by datamodel-codegen:
#   filename:  entity/applications/configuration/internal/autoPilotAppConfig.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from .....type import basic


class AutoPilotAppType(Enum):
    AutoPilotApplication = 'AutoPilotApplication'


class AutoPilotAppConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[AutoPilotAppType],
        Field(
            AutoPilotAppType.AutoPilotApplication,
            description='Application Type',
            title='Application Type',
        ),
    ]
    active: Annotated[
        bool,
        Field(
            description='Whether the AutoPilot Workflow should be active or not.',
            title='Active',
        ),
    ]
    entityLink: Annotated[
        Optional[basic.EntityLink],
        Field(
            None,
            description='Service Entity Link for which to trigger the application.',
            title='Service Entity Link',
        ),
    ]
