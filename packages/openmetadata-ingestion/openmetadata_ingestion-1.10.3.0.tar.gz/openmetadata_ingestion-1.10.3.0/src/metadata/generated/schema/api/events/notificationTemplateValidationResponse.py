# generated by datamodel-codegen:
#   filename:  api/events/notificationTemplateValidationResponse.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class FieldValidation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    passed: Annotated[bool, Field(description='Whether the field validation passed')]
    error: Annotated[
        Optional[str], Field(None, description='Error message if validation failed')
    ]


class NotificationTemplateValidationResponse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    templateBody: Annotated[
        Optional[FieldValidation],
        Field(None, description='Validation result for template body'),
    ]
    templateSubject: Annotated[
        Optional[FieldValidation],
        Field(None, description='Validation result for template subject'),
    ]
