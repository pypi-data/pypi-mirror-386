# generated by datamodel-codegen:
#   filename:  api/configuration/rdfConfiguration.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import AnyUrl, ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class StorageType(Enum):
    FUSEKI = 'FUSEKI'
    QLEVER = 'QLEVER'


class RdfConfiguration(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    enabled: Annotated[bool, Field(description='Enable or disable RDF support')]
    storageType: Annotated[
        StorageType, Field(description='Type of RDF storage backend')
    ]
    remoteEndpoint: Annotated[
        Optional[AnyUrl],
        Field(None, description='SPARQL endpoint URL for remote RDF storage'),
    ]
    username: Annotated[
        Optional[str],
        Field(None, description='Username for RDF storage authentication'),
    ]
    password: Annotated[
        Optional[str],
        Field(None, description='Password for RDF storage authentication'),
    ]
    dataset: Annotated[
        Optional[str], Field('openmetadata', description='Dataset name in RDF storage')
    ]
    baseUri: Annotated[
        Optional[AnyUrl],
        Field('https://open-metadata.org/', description='Base URI for RDF resources'),
    ]
