# generated by datamodel-codegen:
#   filename:  type/recognizers/regexFlags.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class RegexFlags(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dotAll: Annotated[
        Optional[bool], Field(True, description='DOTALL flag - `.` matches newlines')
    ]
    multiline: Annotated[
        Optional[bool],
        Field(True, description='MULTILINE flag - `^` and `$` match line boundaries'),
    ]
    ignoreCase: Annotated[
        Optional[bool],
        Field(True, description='IGNORECASE flag - case insensitive matching'),
    ]
