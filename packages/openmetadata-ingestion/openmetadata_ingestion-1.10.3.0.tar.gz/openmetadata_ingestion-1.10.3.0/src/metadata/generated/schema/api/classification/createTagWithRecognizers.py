# generated by datamodel-codegen:
#   filename:  api/classification/createTagWithRecognizers.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic, entityReferenceList, recognizer


class CreateTagWithRecognizersRequest(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    classification: Annotated[
        str,
        Field(
            description='Fully qualified name of the classification that this tag is part of'
        ),
    ]
    parent: Annotated[
        Optional[str],
        Field(
            None,
            description='Fully qualified name of the parent tag. When null, the tag is at the root of the classification',
        ),
    ]
    name: Annotated[basic.EntityName, Field(description='Name of the tag')]
    displayName: Annotated[
        Optional[str], Field(None, description='Display name for the tag')
    ]
    description: Annotated[basic.Markdown, Field(description='Description of the tag')]
    style: Optional[basic.Style] = None
    autoClassificationEnabled: Annotated[
        Optional[bool],
        Field(
            False,
            description='Whether automatic classification is enabled for this tag',
        ),
    ]
    autoClassificationPriority: Annotated[
        Optional[int],
        Field(
            50,
            description='Priority for conflict resolution when multiple tags match',
            ge=0,
            le=100,
        ),
    ]
    recognizers: Annotated[
        Optional[List[recognizer.Recognizer]],
        Field(None, description='List of recognizers for automatic detection'),
    ]
    owners: Annotated[
        Optional[entityReferenceList.EntityReferenceList],
        Field(None, description='Owners of this tag'),
    ]
    reviewers: Annotated[
        Optional[entityReferenceList.EntityReferenceList],
        Field(None, description='Reviewers of this tag'),
    ]
