# generated by datamodel-codegen:
#   filename:  api/lineage/lineagePaginationInfo.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import List

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel


class DepthInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    depth: Annotated[
        int,
        Field(
            description='The depth level from root entity (0 for root, 1 for immediate upstream/downstream, etc.)',
            ge=0,
        ),
    ]
    entityCount: Annotated[
        int, Field(description='Total number of entities at this depth level', ge=0)
    ]


class LineagePaginationInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    totalUpstreamEntities: Annotated[
        int,
        Field(description='Total number of upstream entities across all depths', ge=0),
    ]
    totalDownstreamEntities: Annotated[
        int,
        Field(
            description='Total number of downstream entities across all depths', ge=0
        ),
    ]
    upstreamDepthInfo: Annotated[
        List[DepthInfo], Field(description='Depth-wise breakdown of upstream entities')
    ]
    downstreamDepthInfo: Annotated[
        List[DepthInfo],
        Field(description='Depth-wise breakdown of downstream entities'),
    ]
    maxUpstreamDepth: Annotated[
        int, Field(description='Maximum depth reached in upstream direction', ge=0)
    ]
    maxDownstreamDepth: Annotated[
        int, Field(description='Maximum depth reached in downstream direction', ge=0)
    ]
