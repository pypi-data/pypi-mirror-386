# generated by datamodel-codegen:
#   filename:  metadataIngestion/applicationPipeline.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ..entity.applications.configuration import applicationConfig


class ApplicationConfigType(Enum):
    Application = 'Application'


class ApplicationPipeline(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[ApplicationConfigType],
        Field(ApplicationConfigType.Application, description='Pipeline type'),
    ]
    sourcePythonClass: Annotated[
        Optional[str],
        Field(None, description='Source Python Class Name to run the application'),
    ]
    appConfig: Annotated[
        Optional[applicationConfig.AppConfig],
        Field(None, description='Application configuration'),
    ]
    appPrivateConfig: Annotated[
        Optional[applicationConfig.PrivateConfig],
        Field(None, description='Application private configuration'),
    ]
