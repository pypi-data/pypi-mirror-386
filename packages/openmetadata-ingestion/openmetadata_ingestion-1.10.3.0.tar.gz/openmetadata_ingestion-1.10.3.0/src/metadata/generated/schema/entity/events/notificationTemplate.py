# generated by datamodel-codegen:
#   filename:  entity/events/notificationTemplate.json
#   timestamp: 2025-10-22T04:03:21+00:00

from __future__ import annotations

from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from ...type import basic, entityHistory


class NotificationTemplate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Annotated[
        basic.Uuid, Field(description='Unique identifier of this template instance.')
    ]
    name: Annotated[
        basic.EntityName,
        Field(
            description="Name for the notification template (e.g., 'Default Table Template', 'Custom Pipeline Alerts')."
        ),
    ]
    displayName: Annotated[
        Optional[str],
        Field(None, description='Display Name that identifies this template.'),
    ]
    fullyQualifiedName: Annotated[
        Optional[basic.FullyQualifiedEntityName],
        Field(None, description='Fully qualified name for the template.'),
    ]
    description: Annotated[
        Optional[basic.Markdown],
        Field(None, description='Description of the template purpose and usage.'),
    ]
    version: Annotated[
        Optional[entityHistory.EntityVersion],
        Field(None, description='Metadata version of the template.'),
    ]
    updatedAt: Annotated[
        Optional[basic.Timestamp],
        Field(
            None,
            description='Last update time corresponding to the new version of the template.',
        ),
    ]
    updatedBy: Annotated[
        Optional[str], Field(None, description='User who made the update.')
    ]
    href: Annotated[
        Optional[basic.Href], Field(None, description='Link to this template resource.')
    ]
    templateSubject: Annotated[
        Optional[str],
        Field(
            None,
            description='Handlebars template for the email subject line with placeholders.',
            max_length=256,
            min_length=1,
        ),
    ]
    templateBody: Annotated[
        str,
        Field(
            description='Handlebars HTML template body with placeholders.',
            max_length=10240,
            min_length=1,
        ),
    ]
    provider: Annotated[
        Optional[basic.ProviderType],
        Field(
            basic.ProviderType.user,
            description='Provider of the template. System templates are pre-loaded and cannot be deleted. User templates are created by users and can be deleted.',
        ),
    ]
    changeDescription: Annotated[
        Optional[entityHistory.ChangeDescription],
        Field(None, description='Change that lead to this version of the template.'),
    ]
    incrementalChangeDescription: Annotated[
        Optional[entityHistory.ChangeDescription],
        Field(None, description='Change that lead to this version of the entity.'),
    ]
    deleted: Annotated[
        Optional[bool],
        Field(
            False,
            description='When `true` indicates the template has been soft deleted.',
        ),
    ]
    isModifiedFromDefault: Annotated[
        Optional[bool],
        Field(
            False,
            description='Indicates if this system template has been modified from its default version. Only applicable to system templates.',
        ),
    ]
    defaultTemplateChecksum: Annotated[
        Optional[str],
        Field(
            None,
            description='Checksum of the default template to detect if updates are available. Only applicable to system templates.',
        ),
    ]
