Metadata-Version: 2.4
Name: ape-foundry
Version: 0.8.10
Summary: ape-foundry: Ape network provider for Foundry
Home-page: https://github.com/ApeWorX/ape-foundry
Author: ApeWorX Ltd.
Author-email: admin@apeworx.io
License: Apache-2.0
Keywords: ethereum
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9,<4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: eth-ape<0.9,>=0.8.34
Requires-Dist: eth_pydantic_types<0.3,>=0.2.0
Requires-Dist: evm-trace<0.3,>=0.2.3
Requires-Dist: ethpm-types<0.7,>=0.6.19
Requires-Dist: hexbytes<2,>=0.3.1
Requires-Dist: web3<8,>=6.20.1
Requires-Dist: yarl<2,>=1.9.2
Provides-Extra: test
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-xdist; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Requires-Dist: pytest-mock; extra == "test"
Requires-Dist: pytest-benchmark; extra == "test"
Requires-Dist: hypothesis<7.0,>=6.2.0; extra == "test"
Requires-Dist: ape-alchemy>=0.8.9; extra == "test"
Requires-Dist: ape-polygon; extra == "test"
Requires-Dist: ape-optimism; extra == "test"
Provides-Extra: lint
Requires-Dist: mypy<2,>=1.13.0; extra == "lint"
Requires-Dist: types-setuptools; extra == "lint"
Requires-Dist: types-requests; extra == "lint"
Requires-Dist: types-PyYAML; extra == "lint"
Requires-Dist: ruff>=0.12.0; extra == "lint"
Requires-Dist: mdformat>=0.7.19; extra == "lint"
Requires-Dist: mdformat-gfm>=0.3.5; extra == "lint"
Requires-Dist: mdformat-frontmatter>=0.4.1; extra == "lint"
Requires-Dist: mdformat-pyproject>=0.0.2; extra == "lint"
Provides-Extra: doc
Requires-Dist: sphinx-ape; extra == "doc"
Provides-Extra: release
Requires-Dist: setuptools>=75.6.0; extra == "release"
Requires-Dist: setuptools-scm; extra == "release"
Requires-Dist: wheel; extra == "release"
Requires-Dist: twine; extra == "release"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-xdist; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: pytest-benchmark; extra == "dev"
Requires-Dist: hypothesis<7.0,>=6.2.0; extra == "dev"
Requires-Dist: ape-alchemy>=0.8.9; extra == "dev"
Requires-Dist: ape-polygon; extra == "dev"
Requires-Dist: ape-optimism; extra == "dev"
Requires-Dist: mypy<2,>=1.13.0; extra == "dev"
Requires-Dist: types-setuptools; extra == "dev"
Requires-Dist: types-requests; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Requires-Dist: ruff>=0.12.0; extra == "dev"
Requires-Dist: mdformat>=0.7.19; extra == "dev"
Requires-Dist: mdformat-gfm>=0.3.5; extra == "dev"
Requires-Dist: mdformat-frontmatter>=0.4.1; extra == "dev"
Requires-Dist: mdformat-pyproject>=0.0.2; extra == "dev"
Requires-Dist: sphinx-ape; extra == "dev"
Requires-Dist: setuptools>=75.6.0; extra == "dev"
Requires-Dist: setuptools-scm; extra == "dev"
Requires-Dist: wheel; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: commitizen; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: IPython; extra == "dev"
Requires-Dist: ipdb; extra == "dev"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Quick Start

Foundry network provider plugin for Ape.
Foundry is a development framework written in Rust for Ethereum that includes a local network implementation.

## Dependencies

- [python3](https://www.python.org/downloads) version 3.9 up to 3.12.
- Foundry. See Foundry's [Installation](https://github.com/foundry-rs/foundry#installation) documentation for steps.

## Installation

### via `pip`

You can install the latest release via [`pip`](https://pypi.org/project/pip/):

```bash
pip install ape-foundry
```

### via `setuptools`

You can clone the repository and use [`setuptools`](https://github.com/pypa/setuptools) for the most up-to-date version:

```bash
git clone https://github.com/ApeWorX/ape-foundry.git
cd ape-foundry
python3 setup.py install
```

## Quick Usage

Use the `--network ethereum:local:foundry` command line flag to use the foundry network (if it's not already configured as the default).

This network provider takes additional Foundry-specific configuration options. To use them, add these configs in your project's `ape-config.yaml`:

```yaml
foundry:
  host: https://127.0.0.1:8555
```

To select a random port, use a value of "auto":

```yaml
foundry:
  host: auto
```

This is useful for multiprocessing and starting up multiple providers.

You can also adjust the request timeout setting:

```yaml
foundry:
  request_timeout: 20  # Defaults to 30
  fork_request_timeout: 600  # Defaults to 300
```

## Mainnet Fork

The `ape-foundry` plugin also includes a mainnet fork provider.
It requires using another provider that has access to mainnet.

Use it in most commands like this:

```bash
ape console --network :mainnet-fork:foundry
```

Specify the upstream archive-data provider in your `ape-config.yaml`:

```yaml
foundry:
  fork:
    ethereum:
      mainnet:
        upstream_provider: alchemy
```

Otherwise, it defaults to the default mainnet provider plugin.
You can also specify a `block_number` and `evm_version`.

If the block number is specified, but no EVM version is specified, it is automatically set based on the block height for known networks.

**NOTE**: Make sure you have the upstream provider plugin installed for ape.

```bash
ape plugins install alchemy
```

## Remote Anvil Node

To connect to a remote anvil node, set up your config like this:

```yaml
foundry:
  host: https://anvil.example.com
```

Now, instead of launching a local process, it will attempt to connect to the remote anvil node and use this plugin as the ape interface.

To connect to a remote anvil node using an environment variable, set `APE_FOUNDRY_HOST`:

```bash
export APE_FOUNDRY_HOST=https://your-anvil.example.com`
```

## Impersonate Accounts

You can impersonate accounts using the `ape-foundry` plugin.
To impersonate an account, do the following:

```python
import pytest

@pytest.fixture
def whale(accounts):
    return accounts["example.eth"]
```

To transact, your impersonated account must have a balance.
You can achieve this by using a forked network and impersonating an account with a balance.
Alternatively, you can set your node's base fee and priority fee to `0`.

To programtically set an account's balance, do the following:

```python
from ape import accounts

account = accounts["example.eth"]
account.balance = "1000 ETH"  # This calls `anvil_setBalance` under-the-hood.
```

## Base Fee and Priority Fee

Configure your node's base fee and priority fee using the `ape-config.yaml` file.

```yaml
foundry:
  base_fee: 0
  priority_fee: 0
```

## Auto-mining

Anvil nodes by default auto-mine.
However, you can disable auto-mining on startup by configuring the foundry plugin like so:

```yaml
foundry:
  auto_mine: false
```

Else, you can disable auto-mining using the provider instance:

```python
from ape import chain

anvil = chain.provider
anvil.auto_mine = False  # calls `anvil_setAutomine` RPC.
```

### Mine on an interval

By default, Anvil will mine a new block every time a transaction is submitted.
To mine on an interval instead, set the `block_time` config:

```yaml
foundry:
  block_time: 10  # mine a new block every 10 seconds
```

## EVM Version (hardfork)

To change the EVM version for local foundry networks, use the `evm_version` config:

```yaml
foundry:
  evm_version: shanghai
```

To change the EVM version for forked networks, set it the specific forked-network config(s):

```yaml
foundry:
  fork:
    ethereum:
      mainnet:
        evm_version: shanghai
```
