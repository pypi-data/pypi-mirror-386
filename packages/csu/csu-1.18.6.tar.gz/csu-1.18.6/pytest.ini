[pytest]
asyncio_default_fixture_loop_scope = function
log_level = INFO

# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
norecursedirs =
    migrations

python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    -vv
    --strict-markers
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
    --continue-on-collection-errors
    --pyargs
# The order of these options matters. testpaths comes after addopts so that
# csu in testpaths is interpreted as
# --pyargs csu.
# Any tests in the src/ directory (that is, tests installed with the package)
# can be run by any user with pytest --pyargs csu.
testpaths =
    csu
    tests
# If you want to switch back to tests outside package just remove --pyargs
# and edit testpaths to have "tests/" instead of "csu".

# Idea from: https://til.simonwillison.net/pytest/treat-warnings-as-errors
filterwarnings =
    error
    always::ResourceWarning
    ignore:unclosed database in <sqlite3.Connection object at:ResourceWarning
# You can add exclusions, some examples:
#    ignore:'csu' defines default_app_config:PendingDeprecationWarning::
#    ignore:The {{% if:::
#    ignore:Coverage disabled via --no-cov switch!
