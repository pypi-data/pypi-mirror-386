[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "langchain-google-vertexai"
version = "3.0.1"
description = "An integration package connecting Google VertexAI and LangChain"
authors = []
requires-python = ">=3.10.0,<4.0.0"
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain-google"
dependencies = [
    "langchain-core>=1.0.0,<2.0.0",
    "google-cloud-aiplatform>=1.97.0,<2.0.0",
    "google-cloud-storage>=2.18.0,<3.0.0",
    "httpx>=0.28.0,<1.0.0",
    "httpx-sse>=0.4.0,<1.0.0",
    "pydantic>=2.9.0,<3.0.0",
    "validators>=0.22.0,<1.0.0",
    "bottleneck>=1.4.0,<2.0.0",
    "numexpr>=2.8.6,<3.0.0",
    "pyarrow>=19.0.1,<22.0.0",
]

[project.license]
text = "MIT"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain-google/tree/main/libs/vertexai"
"Release Notes" = "https://github.com/langchain-ai/langchain-google/releases"
repository = "https://github.com/langchain-ai/langchain-google"

[project.optional-dependencies]
anthropic = [
    "anthropic>=0.35.0,<1.0.0",
]
mistral = [
    "langchain-mistralai>=0.2.0,<2.0.0",
]

[dependency-groups]
lint = [
    "ruff>=0.13.1,<0.14.0",
]
typing = [
    "mypy>=1.18.1,<1.19.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-google-cloud-ndb>=2.2.0.20240106,<3.0.0.0",
    "types-protobuf>=4.24.0.4,<5.0.0.0",
    "anthropic>=0.64.0,<1.0.0",
]
test = [
    "pytest>=8.4.0,<9.0.0",
    "pytest-xdist>=3.8.0,<4.0.0",
    "pytest-order>=1.3.0,<2.0.0",
    "pytest-retry>=1.7.0,<2.0.0",
    "freezegun>=1.5.0,<2.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "syrupy>=4.9.0,<5.0.0",
    "pytest-watcher>=0.4.0,<1.0.0",
    "pytest-asyncio>=0.21.0,<2.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "types-requests>=2.31.0,<3.0.0",
    "types-protobuf>=4.24.0.4,<7.0.0.0",
    "google-api-python-client>=2.117.0,<3.0.0",
    "langchain>=1.0.0rc2,<2.0.0",
    "anthropic>=0.64.0,<1.0.0",
    "validators>=0.35.0,<1.0.0",
    "langchain-tests>=1.0.0,<2.0.0",
]
test_integration = [
    "numexpr>=2.8.8; python_version>='3.9'",
    "numpy>=1.26.4; python_version<'3.13'",
    "numpy>=2.1.0; python_version>='3.13'",
    "google-api-python-client>=2.114.0,<3.0.0",
    "google-cloud-datastore>=2.19.0,<3.0.0",
    "langchain-mistralai>=0.2.12,<2.0.0",
    "langchain-tests>=1.0.0,<2.0.0",
]
dev = []

[tool.ruff]
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
]
ignore = [
    "C90",
    "COM812",
    "CPY",
    "FIX002",
    "ISC001",
    "PERF203",
    "PLR09",
    "RUF012",
    "TC001",
    "TC002",
    "TC003",
    "TD002",
    "TD003",
    "UP007",
    "UP006",
    "UP045",
    "FA100",
    "ANN401",
    "BLE",
    "DOC",
    "ERA",
    "PLR2004",
]
unfixable = [
    "B028",
    "PLW1510",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D1",
    "S",
    "SLF",
    "ARG001",
    "PGH003",
    "PT011",
]
"scripts/**" = [
    "INP",
    "S",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
check_untyped_defs = true
error_summary = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
overrides = [
    { module = "vertexai.*", ignore_missing_imports = true },
]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
    "requires: mark tests as requiring a specific library",
    "asyncio: mark tests as requiring asyncio",
    "compile: mark placeholder test used to compile integration tests without running them",
    "extended: mark tests as extended integration tests",
]
asyncio_mode = "auto"
