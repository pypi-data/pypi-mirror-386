[project]
name = "mcp-url-downloader"
version = "0.1.0"
description = "MCP server that enables AI assistants to download files from URLs to the local filesystem"
readme = "README.md"
authors = [
    { name = "Dmitry Gilemkhanov", email = "dima.rize@yandex.ru" }
]
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]
keywords = ["mcp", "download", "url", "file-download", "ai-assistant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "https://github.com/dmitryglhf/mcp-url-downloader"
Repository = "https://github.com/dmitryglhf/mcp-url-downloader"
Issues = "https://github.com/dmitryglhf/mcp-url-downloader/issues"

[project.scripts]
mcp-url-downloader = "mcp_url_downloader.server:main"

[build-system]
requires = ["uv_build>=0.9.3,<0.10.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.8.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "asyncio: marks tests as async tests",
]
