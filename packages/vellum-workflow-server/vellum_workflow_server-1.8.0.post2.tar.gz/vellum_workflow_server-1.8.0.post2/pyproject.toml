[project]
name = "vellum-workflow-server"

[tool.poetry]
name = "vellum-workflow-server"
version = "1.8.0.post2"
description = ""
readme = "README.md"
authors = []
keywords = []
license = "AGPL"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
    "License :: OSI Approved :: MIT License"
]
packages = [
    { include = "workflow_server", from = "src"}
]

[tool.poetry.group.dev.dependencies]
requests-mock = "^1.12.1"
pytest-mock = "^3.14.1"

[project.urls]
Repository = 'https://github.com/vellum-ai/vembda-service'

[tool.poetry.dependencies]
cryptography = "43.0.3"
pyjwt = "2.10.0"
python = ">=3.9.0,<4"
flask = "2.3.3"
orderly-set = "5.2.2"
pebble = "5.0.7"
gunicorn = "23.0.0"
vellum-ai = "1.8.0"
python-dotenv = "1.0.1"
retrying = "1.3.4"
sentry-sdk = {extras = ["flask"], version = "2.20.0"}

[tool.poetry.dev-dependencies]
mypy = "1.0.1"
deepdiff = "^8.0.1"  # https://github.com/seperman/deepdiff
pytest = "^7.4.0"
pytest-asyncio = "^0.23.5"
black = "24.8.0"  # https://github.com/psf/black
flake8 = "5.0.4"  # https://github.com/PyCQA/flake8
flake8-breakpoint = "1.1.0"  # https://github.com/afonasev/flake8-breakpoint
flake8-isort = "6.1.1"  # https://github.com/gforcada/flake8-isort
flake8-print = "5.0.0"  # https://github.com/JBKahn/flake8-print
ipdb = "0.13.13"  # https://github.com/gotcha/ipdb
pre-commit = "3.5.0"  # https://github.com/pre-commit/pre-commit
requests = "2.32.3"
types-requests = "2.32.0.20241016"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
asyncio_mode = "auto"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
create = true
in-project = true

[tool.black]
line-length = 120
target-version = ['py38']
include = ".*\\.py$"
exclude = "(.git|venv)"

[tool.poetry.scripts]
vellum_start_server_local = "src.workflow_server.start:start"
vellum_start_server = "workflow_server.start:start"
vellum_code_exec_local = "src.workflow_server.code_exec_runner:run_code_exec_stream"
vellum_code_exec = "workflow_server.code_exec_runner:run_code_exec_stream"
