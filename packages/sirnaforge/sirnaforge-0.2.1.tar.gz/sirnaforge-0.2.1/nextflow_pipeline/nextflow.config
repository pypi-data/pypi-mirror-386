/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    sirnaforge/nextflow_pipeline Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params
params {
    // Input/Output
    input                    = null
    outdir                   = 'results'

    // Analysis parameters
    genome_species           = 'human,rat,rhesus'
    max_hits                 = 10000

    // BWA parameters (optimized for short sequences)
    bwa_k                    = 12
    bwa_T                    = 15

    // Seed region parameters
    seed_start               = 2
    seed_end                 = 8

    // Genome inputs - either provide FASTAs or indices
    genome_fastas            = null  // Format: "species:path,species2:path2"
    genome_indices           = null  // Format: "species:index_prefix,species2:index_prefix2"

    // Output options
    publish_dir_mode         = 'copy'

    // Max resource options
    max_memory               = '128.GB'
    max_cpus                 = 16
    max_time                 = '240.h'
}

// Process configuration
process {
    // Default resource allocation
    cpus   = 1
    memory = '6.GB'
    time   = '4.h'

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    // Process-specific resource requirements
    withLabel:process_single {
        cpus   = 1
        memory = '6.GB'
        time   = '4.h'
    }
    withLabel:process_low {
        cpus   = 2
        memory = '12.GB'
        time   = '4.h'
    }
    withLabel:process_medium {
        cpus   = 6
        memory = '36.GB'
        time   = '8.h'
    }
    withLabel:process_high {
        cpus   = 12
        memory = '72.GB'
        time   = '16.h'
    }
    withLabel:process_long {
        time   = '20.h'
    }
    withLabel:process_high_memory {
        memory = '200.GB'
    }
    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }
}

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
    }

    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        conda.cacheDir         = "${System.getProperty('user.home')}/.nextflow-conda-cache"
    }

    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }

    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.cacheDir   = "${System.getProperty('user.home')}/.nextflow-singularity-cache"
    }

    test {
        // Limit resources for testing
        params.max_cpus        = 2
        params.max_memory      = '6.GB'
        params.max_time        = '6.h'

        // Test with minimal data
        params.genome_species  = 'human'
        params.max_hits        = 100

        // Use conda by default for tests
        conda.enabled          = true
        docker.enabled         = false
        conda.cacheDir         = "${System.getProperty('user.home')}/.nextflow-conda-cache"
    }

    smoke {
        // Ultra-minimal resources for smoke testing
        params.max_cpus        = 1
        params.max_memory      = '512.MB'
        params.max_time        = '15.m'

        // Smoke test with toy data only
        params.genome_species  = 'human'
        params.max_hits        = 10

        // Override process resources for smoke tests
        process {
            cpus   = 1
            memory = '256.MB'
            time   = '10.m'

            withLabel:process_single {
                cpus   = 1
                memory = '256.MB'
                time   = '10.m'
            }
            withLabel:process_low {
                cpus   = 1
                memory = '256.MB'
                time   = '10.m'
            }
            withLabel:process_medium {
                cpus   = 1
                memory = '512.MB'
                time   = '15.m'
            }
            withLabel:process_high {
                cpus   = 1
                memory = '512.MB'
                time   = '15.m'
            }
        }

        // Use Docker with minimal resources
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }

    local {
        executor.name          = 'local'
        executor.cpus          = 8
        executor.memory        = '32.GB'
        conda.enabled          = true
        docker.enabled         = false
    }
}

// Export these variables to prevent local Python/R libraries conflicts
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag.html"
}

manifest {
    name            = 'sirnaforge/offtarget'
    author          = 'Austin Hovland'
    homePage        = 'https://github.com/austin-s-h/sirnaforge'
    description     = 'Comprehensive off-target analysis pipeline for siRNA candidates'
}
