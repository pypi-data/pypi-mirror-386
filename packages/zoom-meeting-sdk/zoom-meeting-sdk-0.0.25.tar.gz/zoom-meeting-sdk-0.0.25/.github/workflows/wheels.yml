name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - main
  release:
    types:
      - published

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install gdown
      run: pip install gdown

    - name: Download and extract
      run: |
        gdown ${{ secrets.ZOOM_SDK_GDRIVE_ID }}
        tar -xf ${{ secrets.ZOOM_SDK_FILENAME }} -C src/zoomsdk
        cp src/zoomsdk/libmeetingsdk.so src/zoomsdk/libmeetingsdk.so.1

    - uses: pypa/cibuildwheel@v2.19
      env:      
        ZOOM_APP_CLIENT_ID: ${{ secrets.ZOOM_APP_CLIENT_ID }}
        ZOOM_APP_CLIENT_SECRET: ${{ secrets.ZOOM_APP_CLIENT_SECRET }}
        MEETING_URLS: ${{ secrets.MEETING_URLS }}
        CIBW_ENVIRONMENT_PASS_LINUX: ZOOM_APP_CLIENT_ID ZOOM_APP_CLIENT_SECRET MEETING_URLS
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "auditwheel repair --exclude libunistring.so.2 --exclude libgnutls.so.30 --exclude libcrypto.so.1 --exclude libsystemd.so.0 -w {dest_dir} {wheel}"

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl
        name: dist-${{ matrix.os }}

  merge_wheels:
    name: Merge wheels into a combined artifact
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          pattern: dist-*

  upload_all:
    name: Upload if release
    needs: merge_wheels
    runs-on: ubuntu-latest
    environment: release
    if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write

    steps:
    - uses: actions/setup-python@v5

    - uses: actions/download-artifact@v4
      with:
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/dist
        verbose: true