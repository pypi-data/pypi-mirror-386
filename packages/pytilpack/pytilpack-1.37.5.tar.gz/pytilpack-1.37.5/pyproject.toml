[project]
name = "pytilpack"
dynamic = ["version"]
description = "Python Utility Pack"
license = {text = "MIT"}
authors = [
    {name = "aki.", email = "mark@aur.ll.to"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "beautifulsoup4>=4.12",
    "httpx>=0.28.1",
    "mcp>=1.0.0",
    "typing-extensions>=4.0",
]

[project.optional-dependencies]
all = [
    "azure-identity>=1.23.0",
    "bleach>=6.2",
    "fastapi>=0.111",
    "flask-login>=0.6",
    "flask>=3.0",
    "html5lib",
    "markdown>=3.6",
    "mcp>=1.0.0",
    "msal>=1.32.3",
    "openai>=1.99.6",
    "pillow",
    "pycryptodome",
    "pytest",
    "pytest-asyncio",
    "pyyaml>=6.0",
    "quart>=0.20.0",
    "sqlalchemy>=2.0",
    "tabulate[widechars]>=0.9",
    "tiktoken>=0.6",
    "tinycss2>=1.4",
    "tqdm>=4.0",
    "uvicorn>=0.34.3",
]
bleach = [
    "bleach>=6.2",
]
fastapi = [
    "fastapi>=0.111",
    "html5lib",
]
flask = [
    "flask-login>=0.6",
    "flask>=3.0",
    "html5lib",
    "pytest",
]
markdown = [
    "bleach",
    "markdown>=3.6",
    "tinycss2",
]
openai = [
    "openai>=1.99.6",
]
pycryptodome = [
    "pycryptodome",
]
pytest = [
    "pytest",
    "pytest-asyncio",
]
pyyaml = [
    "pyyaml>=6.0",
]
sqlalchemy = [
    "sqlalchemy>=2.0",
    "tabulate[widechars]>=0.9",
]
tiktoken = [
    "openai>=1.99.6",
    "pillow",
    "tiktoken>=0.6",
]
tqdm = [
    "tqdm>=4.0",
]
quart = [
    "html5lib",
    "pytest",
    "quart-auth>=0.11.0",
    "quart>=0.20.0",
    "uvicorn>=0.34.3",
]
msal = [
    "azure-identity>=1.23.0",
    "msal>=1.32.3",
]
mcp = [
    "mcp>=1.0.0",
]

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "litellm>=1.72.4",
    "pre-commit>=4.2.0",
    "pyfltr>=1.10.0",
    "pyright[nodejs]>=1.1.403",
    "types-bleach>=6.2.0.20241123",
    "types-markdown>=3.7.0.20241204",
    "types-pyyaml>=6.0.12.20241230",
    "types-requests>=2.32.4.20250913",
    "types-tabulate>=0.9.0.20241207",
    "uv-sort>=0.6.0",
]

[project.scripts]
pytilpack = "pytilpack.cli.main:main"

[tool.uv]
default-groups = ["dev"]

[tool.uv.sources]
pyfltr = { git = "https://github.com/ak110/pyfltr.git" }

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.pyfltr]
preset = "latest"
pyright = true
pylint-args = ["--jobs=4"]

[tool.ruff]
line-length = 128

[tool.ruff.lint]
# https://docs.astral.sh/ruff/linter/#rule-selection
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-import-conventions
    "ICN",
    # isort
    "I",
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "--showlocals -p no:cacheprovider --maxfail=5 --durations=30 --durations-min=0.5"
log_level = "DEBUG"
xfail_strict = true
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
filterwarnings = [
    "ignore:Secure cookies will be ignored on insecure requests:UserWarning",
]
