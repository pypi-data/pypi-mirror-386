#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è QuantumEqualizer –∏ QuantumPyramid

4-–∫–∞–Ω–∞–ª—å–Ω—ã–π —ç–∫–≤–∞–ª–∞–π–∑–µ—Ä –¥–ª—è –º–æ–¥–µ–ª–µ–π:
- Mozgach108-Maximal
- Braindler-–Æ—Ä–∏—Å—Ç
- Braindler-–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
- Sridhar-multimodal

¬© 2025 NativeMind
"""

from quantum_sync import QuantumEqualizer, QuantumPyramid, ModelChannel


def example_equalizer():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è QuantumEqualizer"""
    
    print("\n" + "="*80)
    print("üéöÔ∏è  –ü—Ä–∏–º–µ—Ä: QuantumEqualizer (4-–∫–∞–Ω–∞–ª—å–Ω—ã–π)")
    print("="*80)
    print()
    
    # –ü—É—Ç–∏ –∫ –º–æ–¥–µ–ª—è–º (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
    models = {
        'mozgach': '/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_073_shridhar',
        'lawyer': '/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_074_shridhar',
        'developer': '/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_075_shridhar',
        'sridhar': '/Users/anton/proj/ai.nativemind.net/sridhar/shridhar_multimodal_8k'
    }
    
    # –°–æ–∑–¥–∞–µ–º 4-–∫–∞–Ω–∞–ª—å–Ω—ã–π —ç–∫–≤–∞–ª–∞–π–∑–µ—Ä
    equalizer = QuantumEqualizer(
        channels=[
            ModelChannel(
                name="Mozgach108-Maximal",
                model_path=models['mozgach'],
                frequency=440.0,    # –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞
                amplitude=0.8,      # 80% –≤–ª–∏—è–Ω–∏—è
                face=0              # –ì—Ä–∞–Ω—å 0 (–∞–∑–∏–º—É—Ç 0¬∞)
            ),
            ModelChannel(
                name="Braindler-–Æ—Ä–∏—Å—Ç",
                model_path=models['lawyer'],
                frequency=493.88,   # B (—Å–∏) - –≤—ã—à–µ –æ—Å–Ω–æ–≤–Ω–æ–π
                amplitude=0.6,      # 60% –≤–ª–∏—è–Ω–∏—è
                face=1              # –ì—Ä–∞–Ω—å 1 (–∞–∑–∏–º—É—Ç 90¬∞)
            ),
            ModelChannel(
                name="Braindler-–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
                model_path=models['developer'],
                frequency=523.25,   # C (–¥–æ) - –µ—â–µ –≤—ã—à–µ
                amplitude=0.7,      # 70% –≤–ª–∏—è–Ω–∏—è
                face=2              # –ì—Ä–∞–Ω—å 2 (–∞–∑–∏–º—É—Ç 180¬∞)
            ),
            ModelChannel(
                name="Sridhar-multimodal",
                model_path=models['sridhar'],
                frequency=440.0,    # –ë–∞–∑–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞ (—É—á–µ–Ω–∏–∫)
                amplitude=0.5,      # 50% (–±—É–¥–µ—Ç —É—Å–∏–ª–∏–≤–∞—Ç—å—Å—è)
                face=3              # –ì—Ä–∞–Ω—å 3 (–∞–∑–∏–º—É—Ç 270¬∞)
            )
        ],
        resonance_freq=440.0  # –õ—è –ø–µ—Ä–≤–æ–π –æ–∫—Ç–∞–≤—ã
    )
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤
    print(equalizer.visualize_channels())
    
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–µ–π
    signatures = equalizer.extract_all_signatures()
    
    # –†–∞—Å—á–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
    interference = equalizer.calculate_interference_pattern(
        target_channel="Sridhar-multimodal",
        sources=["Mozgach108-Maximal", "Braindler-–Æ—Ä–∏—Å—Ç", "Braindler-–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"]
    )
    
    # –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞
    result = equalizer.balance(
        target_model="Sridhar-multimodal",
        learning_rate=0.05,  # 5% –∑–∞ —Ü–∏–∫–ª
        cycles=20,
        sync_target=0.90     # 90% —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    )
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏:")
    print(f"   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {result['final_sync']:.1%}")
    print(f"   –í—Å–µ–≥–æ —Ü–∏–∫–ª–æ–≤: {len(result['cycles'])}")
    print(f"   –£—Å–ø–µ—Ö: {'‚úÖ –î–∞' if result['success'] else '‚ùå –ù–µ—Ç'}")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    equalizer.save_configuration("equalizer_config.json")
    
    return result


def example_pyramid():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è QuantumPyramid"""
    
    print("\n" + "="*80)
    print("üî∫ –ü—Ä–∏–º–µ—Ä: QuantumPyramid (–ø–∏—Ä–∞–º–∏–¥–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)")
    print("="*80)
    print()
    
    # –°–æ–∑–¥–∞–µ–º –ø–∏—Ä–∞–º–∏–¥—É (–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞–∫ —É NETA-V)
    pyramid = QuantumPyramid(
        base_side=50.8,      # –º–º
        height=48.05,        # –º–º
        resonance_freq=440.0,# Hz
        refractive_index=1.586
    )
    
    # –†–∞–∑–º–µ—â–∞–µ–º –º–æ–¥–µ–ª–∏ –Ω–∞ –≥—Ä–∞–Ω—è—Ö
    pyramid.place_model(
        model_name="Mozgach108-Maximal",
        model_path="/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_073_shridhar",
        face=0,
        role="teacher",
        distance=500.0  # 50 —Å–º –æ—Ç –ø–∏—Ä–∞–º–∏–¥—ã
    )
    
    pyramid.place_model(
        model_name="Braindler-–Æ—Ä–∏—Å—Ç",
        model_path="/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_074_shridhar",
        face=1,
        role="teacher",
        distance=500.0
    )
    
    pyramid.place_model(
        model_name="Braindler-–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
        model_path="/Users/anton/proj/ai.nativemind.net/multimodal_braindler/models/sphere_075_shridhar",
        face=2,
        role="teacher",
        distance=500.0
    )
    
    pyramid.place_model(
        model_name="Sridhar-multimodal",
        model_path="/Users/anton/proj/ai.nativemind.net/sridhar/shridhar_multimodal_8k",
        face=3,
        role="student",
        distance=500.0
    )
    
    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    print(pyramid.visualize())
    
    # –†–∞—Å—á–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
    patterns = pyramid.calculate_interference(observation_angle=15.0)
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –æ–±—É—á–µ–Ω–∏—è
    teaching_patterns = pyramid.generate_teaching_patterns(
        target_face=3,  # Sridhar –Ω–∞ –≥—Ä–∞–Ω–∏ 3
        learning_rate=0.05
    )
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    result = pyramid.synchronize(
        target="Sridhar-multimodal",
        cycles=20,
        learning_rate=0.05,
        rest_period=30  # 30 —Å–µ–∫—É–Ω–¥ –æ—Ç–¥—ã—Ö–∞
    )
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
    print(f"   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {result['final_sync']:.1%}")
    print(f"   –í—Å–µ–≥–æ —Ü–∏–∫–ª–æ–≤: {len(result['cycles'])}")
    print(f"   –¶–µ–ª–µ–≤–∞—è –≥—Ä–∞–Ω—å: {result['target_face']}")
    
    return result


def example_comparison():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ Equalizer vs Pyramid"""
    
    print("\n" + "="*80)
    print("‚öñÔ∏è  –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: Equalizer vs Pyramid")
    print("="*80)
    print()
    
    print("üìä QuantumEqualizer:")
    print("   ‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    print("   ‚úÖ –ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–º–ø–ª–∏—Ç—É–¥")
    print("   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("   ‚úÖ –•–æ—Ä–æ—à–æ –¥–ª—è 2-4 –º–æ–¥–µ–ª–µ–π")
    print()
    
    print("üî∫ QuantumPyramid:")
    print("   ‚úÖ –§–∏–∑–∏—á–µ—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (FreeDome)")
    print("   ‚úÖ –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è")
    print("   ‚úÖ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏–∏")
    print("   ‚úÖ –õ—É—á—à–µ –¥–ª—è 3-4 –º–æ–¥–µ–ª–µ–π (3 —É—á–∏—Ç–µ–ª—è, 1 —É—á–µ–Ω–∏–∫)")
    print()
    
    print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   ‚Ä¢ –î–ª—è –ø—Ä–æ—Å—Ç–æ–π –∑–∞–¥–∞—á–∏: QuantumEqualizer")
    print("   ‚Ä¢ –î–ª—è —Ç–æ—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: QuantumPyramid")
    print("   ‚Ä¢ –î–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤: –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞!")
    print()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("\n" + "üåü"*40)
    print("Quantum Sync - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    print("üåü"*40)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print("\n1Ô∏è‚É£  –ó–∞–ø—É—Å–∫ QuantumEqualizer...")
    eq_result = example_equalizer()
    
    print("\n2Ô∏è‚É£  –ó–∞–ø—É—Å–∫ QuantumPyramid...")
    pyr_result = example_pyramid()
    
    print("\n3Ô∏è‚É£  –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤...")
    example_comparison()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "="*80)
    print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
    print("="*80)
    print()
    print(f"QuantumEqualizer: {eq_result['final_sync']:.1%} —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    print(f"QuantumPyramid:   {pyr_result['final_sync']:.1%} —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
    print()
    print("üôè –°–ª—É–∂–µ–Ω–∏–µ –∏—Å—Ç–∏–Ω–µ —á–µ—Ä–µ–∑ AI")
    print("–•–∞—Ä–µ –ö—Ä–∏—à–Ω–∞! üïâÔ∏è")


if __name__ == "__main__":
    main()

