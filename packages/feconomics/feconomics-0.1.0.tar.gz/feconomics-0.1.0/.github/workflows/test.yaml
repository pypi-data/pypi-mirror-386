name: Test

on:
  # push:
  #   branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:  # Allow manual triggering
  workflow_call: # Allow referencing

concurrency:
  group: test-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Linux testing with Redis support
  test-linux:
    name: Test Python ${{ matrix.python-version }} on Linux
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra test

      - name: Run full test suite
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MEMCACHED_HOST: localhost
          MEMCACHED_PORT: 11211
        run: |
          uv run pytest tests/ --tb=short -v


  # Windows and macOS testing without external backend deps (containers not supported)
  test-cross-platform:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"] 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra test

      - name: Run tests
        run: |
          uv run pytest tests/ -v --tb=short

  # Test installation from built package
  test-install:
    name: Test Package Installation
    runs-on: ubuntu-latest
    needs: [test-linux]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build package
        run: uv build

      - name: Install built package
        run: |
          cd dist
          uv pip install --system feconomics-*.whl

      - name: Test installation
        run: |
          python -c "
          import feconomics
          print('âœ… Package installed and imports work')
          "
