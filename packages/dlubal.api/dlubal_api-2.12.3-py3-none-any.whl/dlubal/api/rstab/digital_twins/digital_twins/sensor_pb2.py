# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: dlubal/api/rstab/digital_twins/digital_twins/sensor.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'dlubal/api/rstab/digital_twins/digital_twins/sensor.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dlubal.api.common import common_pb2 as dlubal_dot_api_dot_common_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n9dlubal/api/rstab/digital_twins/digital_twins/sensor.proto\x12,dlubal.api.rstab.digital_twins.digital_twins\x1a\x1e\x64lubal/api/common/common.proto\"\xb2\x11\n\x06Sensor\x12\x0f\n\x02no\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12L\n\x04type\x18\x02 \x01(\x0e\x32\x39.dlubal.api.rstab.digital_twins.digital_twins.Sensor.TypeH\x01\x88\x01\x01\x12&\n\x19user_defined_name_enabled\x18\x03 \x01(\x08H\x02\x88\x01\x01\x12\x11\n\x04name\x18\x04 \x01(\tH\x03\x88\x01\x01\x12\x36\n\x0csensor_point\x18\x05 \x01(\x0b\x32\x1b.dlubal.api.common.Vector3dH\x04\x88\x01\x01\x12\x1b\n\x0esensor_point_x\x18\x06 \x01(\x01H\x05\x88\x01\x01\x12\x1b\n\x0esensor_point_y\x18\x07 \x01(\x01H\x06\x88\x01\x01\x12\x1b\n\x0esensor_point_z\x18\x08 \x01(\x01H\x07\x88\x01\x01\x12/\n\x05point\x18\t \x01(\x0b\x32\x1b.dlubal.api.common.Vector3dH\x08\x88\x01\x01\x12\x14\n\x07point_x\x18\n \x01(\x01H\t\x88\x01\x01\x12\x14\n\x07point_y\x18\x0b \x01(\x01H\n\x88\x01\x01\x12\x14\n\x07point_z\x18\x0c \x01(\x01H\x0b\x88\x01\x01\x12\x11\n\x04node\x18\r \x01(\x05H\x0c\x88\x01\x01\x12\x61\n\x0cmeasurements\x18\x0e \x01(\x0b\x32\x46.dlubal.api.rstab.digital_twins.digital_twins.Sensor.MeasurementsTableH\r\x88\x01\x01\x12U\n\x06values\x18\x0f \x01(\x0b\x32@.dlubal.api.rstab.digital_twins.digital_twins.Sensor.ValuesTableH\x0e\x88\x01\x01\x12\x13\n\x06status\x18\x10 \x01(\tH\x0f\x88\x01\x01\x12\x19\n\x0cis_generated\x18\x11 \x01(\x08H\x10\x88\x01\x01\x12#\n\x16generating_object_info\x18\x12 \x01(\tH\x11\x88\x01\x01\x12\x14\n\x07\x63omment\x18\x13 \x01(\tH\x12\x88\x01\x01\x12!\n\x14id_for_export_import\x18\x14 \x01(\tH\x13\x88\x01\x01\x12\'\n\x1ametadata_for_export_import\x18\x15 \x01(\tH\x14\x88\x01\x01\x1ag\n\x11MeasurementsTable\x12R\n\x04rows\x18\x01 \x03(\x0b\x32\x44.dlubal.api.rstab.digital_twins.digital_twins.Sensor.MeasurementsRow\x1a\xc7\x03\n\x0fMeasurementsRow\x12\x0f\n\x02no\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x18\n\x0b\x64\x65scription\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x1d\n\x10value_definition\x18\x03 \x01(\x05H\x02\x88\x01\x01\x12\x12\n\x05value\x18\x04 \x01(\tH\x03\x88\x01\x01\x12\x11\n\x04unit\x18\x05 \x01(\tH\x04\x88\x01\x01\x12\x13\n\x06status\x18\x06 \x01(\tH\x05\x88\x01\x01\x12\x14\n\x07\x63omment\x18\x07 \x01(\tH\x06\x88\x01\x01\x12\x13\n\x06values\x18\x08 \x01(\tH\x07\x88\x01\x01\x12\x16\n\treference\x18\t \x01(\tH\x08\x88\x01\x01\x12\x17\n\ndeviations\x18\n \x01(\tH\t\x88\x01\x01\x12\x1c\n\x0frelative_values\x18\x0b \x01(\tH\n\x88\x01\x01\x12\x15\n\x08statuses\x18\x0c \x01(\tH\x0b\x88\x01\x01\x42\x05\n\x03_noB\x0e\n\x0c_descriptionB\x13\n\x11_value_definitionB\x08\n\x06_valueB\x07\n\x05_unitB\t\n\x07_statusB\n\n\x08_commentB\t\n\x07_valuesB\x0c\n\n_referenceB\r\n\x0b_deviationsB\x12\n\x10_relative_valuesB\x0b\n\t_statuses\x1a[\n\x0bValuesTable\x12L\n\x04rows\x18\x01 \x03(\x0b\x32>.dlubal.api.rstab.digital_twins.digital_twins.Sensor.ValuesRow\x1a\xad\x02\n\tValuesRow\x12\x0f\n\x02no\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x18\n\x0b\x64\x65scription\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x16\n\treference\x18\x03 \x01(\x08H\x02\x88\x01\x01\x12\x14\n\x07value_x\x18\x04 \x01(\tH\x03\x88\x01\x01\x12\x14\n\x07value_y\x18\x05 \x01(\tH\x04\x88\x01\x01\x12\x1b\n\x0erelative_value\x18\x06 \x01(\tH\x05\x88\x01\x01\x12\x16\n\tdeviation\x18\x07 \x01(\tH\x06\x88\x01\x01\x12\x13\n\x06status\x18\x08 \x01(\tH\x07\x88\x01\x01\x42\x05\n\x03_noB\x0e\n\x0c_descriptionB\x0c\n\n_referenceB\n\n\x08_value_xB\n\n\x08_value_yB\x11\n\x0f_relative_valueB\x0c\n\n_deviationB\t\n\x07_status\"y\n\x04Type\x12\x10\n\x0cTYPE_UNKNOWN\x10\x00\x12\r\n\tTYPE_LINE\x10\x03\x12\x0f\n\x0bTYPE_MEMBER\x10\x04\x12\r\n\tTYPE_NODE\x10\x02\x12\x0e\n\nTYPE_POINT\x10\x01\x12\x0e\n\nTYPE_SOLID\x10\x06\x12\x10\n\x0cTYPE_SURFACE\x10\x05\x42\x05\n\x03_noB\x07\n\x05_typeB\x1c\n\x1a_user_defined_name_enabledB\x07\n\x05_nameB\x0f\n\r_sensor_pointB\x11\n\x0f_sensor_point_xB\x11\n\x0f_sensor_point_yB\x11\n\x0f_sensor_point_zB\x08\n\x06_pointB\n\n\x08_point_xB\n\n\x08_point_yB\n\n\x08_point_zB\x07\n\x05_nodeB\x0f\n\r_measurementsB\t\n\x07_valuesB\t\n\x07_statusB\x0f\n\r_is_generatedB\x19\n\x17_generating_object_infoB\n\n\x08_commentB\x17\n\x15_id_for_export_importB\x1d\n\x1b_metadata_for_export_importb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'dlubal.api.rstab.digital_twins.digital_twins.sensor_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_SENSOR']._serialized_start=140
  _globals['_SENSOR']._serialized_end=2366
  _globals['_SENSOR_MEASUREMENTSTABLE']._serialized_start=950
  _globals['_SENSOR_MEASUREMENTSTABLE']._serialized_end=1053
  _globals['_SENSOR_MEASUREMENTSROW']._serialized_start=1056
  _globals['_SENSOR_MEASUREMENTSROW']._serialized_end=1511
  _globals['_SENSOR_VALUESTABLE']._serialized_start=1513
  _globals['_SENSOR_VALUESTABLE']._serialized_end=1604
  _globals['_SENSOR_VALUESROW']._serialized_start=1607
  _globals['_SENSOR_VALUESROW']._serialized_end=1908
  _globals['_SENSOR_TYPE']._serialized_start=1910
  _globals['_SENSOR_TYPE']._serialized_end=2031
# @@protoc_insertion_point(module_scope)
