"use strict";(self.webpackChunk_datalayer_ui=self.webpackChunk_datalayer_ui||[]).push([[3684],{3684:(t,e,i)=>{i.r(e),i.d(e,{ScreenCapture:()=>d,default:()=>r});var o=i(18683),n=i(9387),s=i(57583);class d extends n.Component{state={on:!1,startX:0,startY:0,endX:0,endY:0,crossHairsTop:0,crossHairsLeft:0,isMouseDown:!1,windowWidth:0,windowHeight:0,borderWidth:0,cropPositionTop:0,cropPositionLeft:0,cropWidth:0,cropHeigth:0,imageURL:""};handleWindowResize=()=>{const t=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,e=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;this.setState({windowWidth:t,windowHeight:e})};componentDidMount=()=>{this.handleWindowResize(),window.addEventListener("resize",this.handleWindowResize)};componentWillUnmount=()=>{window.removeEventListener("resize",this.handleWindowResize)};handStartCapture=()=>this.setState({on:!0});handleMouseMove=t=>{const{isMouseDown:e,windowWidth:i,windowHeight:o,startX:n,startY:s,borderWidth:d}=this.state;let r=s,h=n;const a=t.clientX,c=t.clientY,p=c>=s,l=c<=s,w=a>=n,u=a<=n;let x=d,W=0,g=0;e&&(p&&w&&(x=`${s}px ${i-a}px ${o-c}px ${n}px`,W=a-n,g=c-s),p&&u&&(x=`${s}px ${i-n}px ${o-c}px ${a}px`,W=n-a,g=c-s,h=a),l&&w&&(x=`${c}px ${i-a}px ${o-s}px ${n}px`,W=a-n,g=s-c,r=c),l&&u&&(x=`${c}px ${i-n}px ${o-s}px ${a}px`,W=n-a,g=s-c,h=a,r=c)),W*=window.devicePixelRatio,g*=window.devicePixelRatio,this.setState({crossHairsTop:t.clientY,crossHairsLeft:t.clientX,borderWidth:x,cropWidth:W,cropHeigth:g,cropPositionTop:r,cropPositionLeft:h})};handleMouseDown=t=>{const e=t.clientX,i=t.clientY;this.setState(t=>({startX:e,startY:i,cropPositionTop:i,cropPositionLeft:e,isMouseDown:!0,borderWidth:`${t.windowWidth}px ${t.windowHeight}px`}))};handleMouseUp=()=>{this.handleClickTakeScreenShot(),this.setState({on:!1,isMouseDown:!1,borderWidth:0})};handleClickTakeScreenShot=()=>{const{windowWidth:t,windowHeight:e,cropPositionTop:i,cropPositionLeft:o,cropWidth:n,cropHeigth:d}=this.state,r=document.querySelector("body");if(r){const h=window.devicePixelRatio;s(r,{width:t,height:e,scale:h}).then(t=>{const e=document.createElement("canvas"),s=e.getContext("2d");if(e.width=n,e.height=d,s&&s.drawImage(t,o*h,i*h,n*h,d*h,0,0,n*h,d*h),e){const t="image/png",i=1,o=e.toDataURL(t,i);this.props.onEndCapture(o)}})}this.setState({crossHairsTop:0,crossHairsLeft:0})};renderChild=()=>{const{children:t}=this.props,e={onStartCapture:this.handStartCapture};return"function"==typeof t?t(e):t};render(){const{on:t,crossHairsTop:e,crossHairsLeft:i,borderWidth:n,isMouseDown:s}=this.state;return t?(0,o.jsxs)("div",{onMouseMove:this.handleMouseMove,onMouseDown:this.handleMouseDown,onMouseUp:this.handleMouseUp,children:[this.renderChild(),(0,o.jsx)("div",{className:`overlay ${s&&"highlighting"}`,style:{borderWidth:`${n}`}}),(0,o.jsx)("div",{className:"crosshairs",style:{left:i+"px",top:e+"px"}})]}):this.renderChild()}}const r=d}}]);