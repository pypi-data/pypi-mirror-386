"use strict";(self.webpackChunk_datalayer_ui=self.webpackChunk_datalayer_ui||[]).push([[5003],{7384:(e,n,r)=>{r.r(n),r.d(n,{createMarkdownParser:()=>c,default:()=>d});var a=r(98238),t=r(63711),i=r(1290),o=r(5279);new a.Token("@jupyterlab/mermaid:IMermaidManager","a manager for rendering mermaid text-based diagrams");const l=new a.Token("@jupyterlab/mermaid:IMermaidMarkdown","a manager for rendering mermaid text-based diagrams in markdown fenced code blocks"),s="```~~~";function c(e,n){return{render:r=>u.render(r,e,n)}}const d={id:"@jupyterlab/markedparser-extension:plugin",description:"Provides the Markdown parser.",autoStart:!0,provides:o.co,requires:[i.SW],optional:[l],activate:(e,n,r)=>c(n,{blocks:r?[r]:[]})};var u;!function(e){let n=null,i=null,o=[],l=null,c={},d=new t.LruCache;async function u(e){if(i)return i;if(n)return await n.promise;o=(null==e?void 0:e.blocks)||[],o=o.sort((e,n)=>{var r,a;return(null!==(r=e.rank)&&void 0!==r?r:1/0)-(null!==(a=n.rank)&&void 0!==a?a:1/0)}),n=new a.PromiseDelegate;const[{marked:t,Renderer:l},s]=await Promise.all([r.e(5846).then(r.bind(r,55846)),f()]);for(const e of s)t.use(e);return c={async:!0,gfm:!0,walkTokens:m,renderer:g(l)},i=t,n.resolve(i),i}async function f(){return Promise.all([(async()=>(await r.e(529).then(r.bind(r,90529))).gfmHeadingId())(),(async()=>(await r.e(9741).then(r.bind(r,59741))).mangle())()])}function g(e){const n=new e,r=n.code;return n.code=({text:e,lang:a,escaped:t})=>{for(const n of o)if(a&&n.languages.includes(a)){const r=n.render(e);if(null!=r)return r}const i=`${a}${s}${e}${s}`,l=d.get(i);return null!=l?l:r.call(n,{text:e,lang:a,escaped:t})},n}async function m(e){if("code"===e.type){if(e.lang)for(const n of o)if(n.languages.includes(e.lang))return void await n.walk(e.text);await async function(e){const{lang:n,text:r}=e;if(!n||!l)return;const a=`${n}${s}${r}${s}`;if(d.get(a))return;const t=document.createElement("div");try{await l.highlight(r,l.findBest(n),t);const e=`<pre><code class="language-${n}">${t.innerHTML}</code></pre>`;d.set(a,e)}catch(e){console.error(`Failed to highlight ${n} code`,e)}finally{t.remove()}}(e)}}e.render=async function(e,n,r){return l=n,i||(i=await u(r)),i(e,c)},e.initializeMarked=u}(u||(u={}))}}]);