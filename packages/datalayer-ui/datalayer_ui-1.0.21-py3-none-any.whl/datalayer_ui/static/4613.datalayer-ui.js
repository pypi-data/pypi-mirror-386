"use strict";(self.webpackChunk_datalayer_ui=self.webpackChunk_datalayer_ui||[]).push([[4613],{4613:(e,n,a)=>{a.r(n),a.d(n,{default:()=>s});var t,o=a(59179),r=a(60872),d=a(89915),i=a(53054),l=a(5279),c=a(85181);!function(e){e.handleLink="rendermime:handle-local-link"}(t||(t={}));const s={id:"@jupyterlab/rendermime-extension:plugin",description:"Provides the render mime registry.",optional:[r.cR,l.nc,o.zG,l.co,c.sQ],provides:l.N3,activate:function(e,n,a,o,r,l){const s=(null!=l?l:c.wK).load("jupyterlab");return n&&e.commands.addCommand(t.handleLink,{label:s.__("Handle Local Link"),execute:a=>{const t=a.path,o=a.id,r=a.scope||"server";if(t)return"kernel"===r?e.commands.hasCommand(u)?e.commands.execute(u,{path:t}):void console.warn("Cannot open kernel file: debugger sources provider not available"):n.services.contents.get(t,{content:!1}).then(()=>{const e=n.registry.defaultRenderedWidgetFactory(t),a=n.openOrReveal(t,e.name);a&&o&&a.setFragment(o)})}}),new i.K({initialFactories:d.dn,linkHandler:n?{handleLink:(n,a,o)=>{"A"===n.tagName&&n.hasAttribute("download")||e.commandLinker.connectNode(n,t.handleLink,{path:a,id:o})},handlePath:(n,a,o,r)=>{e.commandLinker.connectNode(n,t.handleLink,{path:a,id:r,scope:o})}}:void 0,latexTypesetter:null!=a?a:void 0,markdownParser:null!=r?r:void 0,translator:null!=l?l:void 0,sanitizer:null!=o?o:void 0})},autoStart:!0},u="debugger:open-source"}}]);