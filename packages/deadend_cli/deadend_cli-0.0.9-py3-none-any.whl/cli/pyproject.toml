[project]
name = "cli"
dynamic = ["version"]
authors = [
  { name="Yassine Bargach", email="yassine.bargach@proton.me" },
]
description = "AI agent CLI for security research"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "deadend-sdk",
    "eval",
    "docker>=7.1.0",
    "dotenv>=0.9.9",
    "google-genai>=1.18.0",
    "jinja2>=3.1.6",
    "jsbeautifier>=1.15.4",
    "logfire>=4.3.3",
    "logging>=0.4.9.6",
    "lxml>=6.0.0",
    "nest-asyncio>=1.6.0",
    "numpy>=2.3.1",
    "playwright>=1.54.0",
    "prompt-toolkit>=3.0.51",
    "pydantic>=2.11.5",
    "pyright>=1.1.402",
    "pytest-asyncio>=1.0.0",
    "pyyaml>=6.0.2",
    "readchar>=4.2.1",
    "rich>=14.0.0",
    "tenacity>=9.1.2",
    "tiktoken>=0.9.0",
    "toml>=0.10.2",
    "typer>=0.15.4",
]

[project.scripts]
cli = "cli.cli:app"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "flake8>=7.2.0",
    "isort>=6.0.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.1",
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/cli",
    "src/deadend_sdk",
    "src/deadend_prompts",
    "src/eval"
]
include = [
    "deadend_prompts/*.jinja2",
    "deadend_prompts/tools/*.jinja2",
    "deadend/data/*.json",
    "deadend/data/memory/*.json"
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"


[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
lint = "flake8 {args:deadend_cli deadend_sdk}"
format = "black {args:deadend_cli deadend_sdk}"
format-check = "black --check {args:deadend_cli deadend_sdk}"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
adopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=deadend_cli",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["deadend_cli", "deadend_sdk/src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
