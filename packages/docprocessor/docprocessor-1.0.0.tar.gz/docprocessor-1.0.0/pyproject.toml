[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docprocessor"
version = "1.0.0"
description = "Intelligent document processing with OCR, chunking, and AI summarization"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Knowledge Innovation Centre", email = "info@knowledgeinnovation.eu"}
]
keywords = ["document-processing", "ocr", "nlp", "meilisearch", "ai", "pdf", "chunking", "summarization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "meilisearch>=0.30.0",
    "langchain-text-splitters>=0.2.0",
    "tiktoken>=0.5.0",
    "pdfminer.six>=20240706",
    "pdf2image>=1.17.0",
    "pillow>=11.0.0",
    "pytesseract>=0.3.13",
    "opencv-python>=4.8.0",
    "python-docx>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "isort>=5.12.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "reportlab>=4.0.0",  # For PDF fixture generation in tests
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.25.0",
]

all = ["docprocessor[dev,docs]"]

[project.urls]
Homepage = "https://github.com/Knowledge-Innovation-Centre/doc-processor"
Documentation = "https://github.com/Knowledge-Innovation-Centre/doc-processor#readme"
Repository = "https://github.com/Knowledge-Innovation-Centre/doc-processor"
"Bug Tracker" = "https://github.com/Knowledge-Innovation-Centre/doc-processor/issues"
Changelog = "https://github.com/Knowledge-Innovation-Centre/doc-processor/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["docprocessor*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=docprocessor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["docprocessor"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
fail_under = 80

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101"]  # Skip assert_used warnings in tests
