[project]
name = "asyncapi-python"
version = "0.3.0rc5"
license = { text = "Apache-2.0" }
description = "Easily generate type-safe and async Python applications from AsyncAPI 3 specifications."
authors = [{ name = "Yaroslav Petrov", email = "yaroslav.v.petrov@gmail.com" }]
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = ["pydantic>=2", "pytz"]

[project.optional-dependencies]
codegen = [
    "jinja2>=3.1.4",
    "typer[all]>=0.12.5",
    "pyyaml",
    "datamodel-code-generator[http]>=0.26.4",
    "black",
]
amqp = ["aio-pika"]

[project.scripts]
asyncapi-python-codegen = "asyncapi_python_codegen:app"

[tool.uv]
dev-dependencies = [
    "black",
    "mypy",
    "isort",
    "types-pyyaml",
    "pytest",
    "types-pytz",
    "pytest-asyncio",
    "pytest-timeout",
    "pyright>=1.1.405",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/asyncapi_python_pants",
    "src/asyncapi_python_codegen",
    "src/asyncapi_python",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
asyncio_default_test_loop_scope = "session"
timeout = 30

[tool.pyright]
include = ["src", "*.py"]
exclude = ["**/__pycache__", "src/asyncapi_python_pants"]
pythonVersion = "3.10"
pythonPlatform = "Linux"
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"
