syntax = "proto3";

package strique.model.ai.catalog;

import "db/catalog/product.proto";
import "types/filter_predicate/filters.proto";

option java_outer_classname = "EnhanceProductProto";
option java_package = "com.strique.model.ai.catalog";

// Next Id: 5
// Proto definition for the AI Catalog Enhancement Request.
message EnhanceProductRequest {
  // List of products to enhance.
  repeated db.catalog.Product products = 1;

  // Specifies which columns/fields should be updated during enhancement.
  repeated string columns_to_update = 2;

  // Specifies the enhancement mode.
  Mode mode = 3;

  // Specifies the enhancement style/approach.
  EnhancementStyle enhancement_style = 4;
}

// Next Id: 2
// Proto definition for the AI Catalog Enhancement Response.
message EnhanceProductResponse {
  // List of enhanced products with AI-generated content.
  repeated db.catalog.Product enhanced_products = 1;
}

// Next Id: 6
// Proto definition for the AI Catalog Enhancement Request.
message BulkEnhanceProductRequest {
  // List of products ids to enhance.
  repeated string product_ids = 1;

  // Specifies which columns/fields should be updated during enhancement.
  repeated string columns_to_update = 2;

  // Specifies the enhancement mode.
  Mode mode = 3;

  // Specifies the enhancement style/approach.
  EnhancementStyle enhancement_style = 4;

  // Specifies the platform id.
  types.Expression filter_expression = 5;
}

// Next Id: 3
// Enhancement mode specifies how products should be enhanced.
enum Mode {
  MODE_UNKNOWN = 0;
  ENHANCE_ALL = 1;
  UPDATE_ONLY_MISSING = 2;
}

// Next Id: 3
// Enhancement style specifies the approach for content generation.
enum EnhancementStyle {
  ENHANCEMENT_STYLE_UNKNOWN = 0;
  SEO_FRIENDLY = 1;
  CONVERSION_FOCUSED = 2;
}

