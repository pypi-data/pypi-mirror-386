syntax = "proto3";

package strique.model.widget.magento;

import "constants/datetime/hour.proto";
import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "options/strique_enum_options.proto";
import "types/currency/currency.proto";
import "types/filter_predicate/filters.proto";

option java_outer_classname = "TimeWiseBifurcationProto";
option java_package = "com.strique.model.widget.magento";

// Next Id: 5
// Proto definition for Time-wise Bifurcation Data.
message TimeWiseBifurcationData {
    // Title for this widget.
    string widget_title = 1;

    // List of records for this widget.
    repeated TimeWiseBifurcationRecord records = 2;
  
    // Total record.
    optional TimeWiseBifurcationRecord total = 3;
  
    // Summary data for a subset of records.
    optional TimeWiseBifurcationRecord subtotal = 4;
}

// Next Id: 5
// Proto definition for SingleTime-wise Bifurcation Record.
message TimeWiseBifurcationRecord {
  // Time in hours
  constants.Hour hour = 1 [json_name = "hour"];

  // Number of total orders placed.
  uint64 total_orders = 2 [json_name = "totalOrders"];

  // Total Quantity Ordered
  uint64 total_qty_ordered = 3 [json_name = "totalQtyOrdered"];

  // Grand Total of the orders
  types.Currency grand_total = 4 [json_name = "grandTotal"];
}

// Next Id: 4
// Proto definition for Time-wise Bifurcation Data Configuration.
message TimeWiseBifurcationConfig {
  // Next Id: 5
  // Enumeration of possible columns in the Time-wise Bifurcation Data table
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false,
      (options.is_filterable) = false
    ];
    COLUMN_HOUR = 1 [
      (options.label) = 'Hour',
      (options.accessor_key) = 'hour',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_TOTAL_ORDERS = 2 [
      (options.label) = 'Orders',
      (options.accessor_key) = 'totalOrders',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_TOTAL_QTY_ORDERED = 3 [
      (options.label) = 'Qty ordered',
      (options.accessor_key) = 'totalQtyOrdered',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_GRAND_TOTAL = 4 [
      (options.label) = 'Grand total',
      (options.accessor_key) = 'grandTotal',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
  }

  // Next Id: 8
  // Configuration for the table displayed in the Time-wise Bifurcation Data.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;

    types.Expression filter_expression = 7;
  }

   // Next Id: 3
  // Configuration for the area chart displayed in the Time-wise Bifurcation Data.
  message AreaChartConfig {
    // Specifies the dimension for the area chart.
    Column dimension = 1;

    // Specifies the areas for the area chart.
    repeated Column areas = 2;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;

  // Configuration for the area chart displayed in the widget.
  AreaChartConfig area_chart_config = 3;
}