syntax = "proto3";

package strique.model.widget.google_analytics.leadgen;

import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "options/strique_enum_options.proto";
import "types/filter_predicate/filters.proto";

option java_outer_classname = "LeadGenLeadBySourceAndMediumProto";
option java_package = "com.strique.model.widget.googleanalytics.leadgen";

// Next Id: 5
// Proto definition for Users by Source and Medium Data.
message LeadGenLeadBySourceAndMediumData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated LeadGenLeadBySourceAndMediumRecord records = 2;

  // Total record.
  optional LeadGenLeadBySourceAndMediumRecord total = 3;

  // Summary data for a subset of records.
  optional LeadGenLeadBySourceAndMediumRecord subtotal = 4;
}

// Next Id: 7
// Proto definition for a single record of Users by Source and Medium.
message LeadGenLeadBySourceAndMediumRecord {
  // Indicate from where and how user came to website.
  string source_medium = 1 [json_name = "sourceMedium"];

  // Number of session created by source/medium.
  uint64 sessions = 2 [json_name = "sessions"];

  uint64 total_users = 3 [json_name = "totalUsers"];

  uint64 event_count = 4 [json_name = "eventCount"];

  float engagement_rate = 5 [json_name = "engagementRate"];

  float bounce_rate = 6 [json_name = "bounceRate"];
}

// Next Id: 3
// Proto definition for Users by Source and Medium Data Configuration.
message LeadGenLeadBySourceAndMediumConfig {
  // Next Id: 7
  // Enumeration of possible columns in the Users by Source and Medium Data table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false,
      (options.is_filterable) = false
    ];
    COLUMN_SOURCE_MEDIUM = 1 [
      (options.label) = 'Source medium',
      (options.accessor_key) = 'sourceMedium',
      (options.is_sortable) = false,
      (options.is_filterable) = true
    ];
    COLUMN_SESSIONS = 2 [
      (options.label) = 'Sessions',
      (options.accessor_key) = 'sessions',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_TOTAL_USERS = 3 [
      (options.label) = 'Total users',
      (options.accessor_key) = 'totalUsers',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_EVENT_COUNT = 4 [
      (options.label) = 'Event count',
      (options.accessor_key) = 'eventCount',
      (options.is_sortable) = true,
      (options.is_filterable) = true
    ];
    COLUMN_ENGAGEMENT_RATE = 5 [
      (options.label) = 'Engagement rate',
      (options.accessor_key) = 'engagementRate',
      (options.is_sortable) = true,
      (options.is_filterable) = true,
      (options.suffix) = '%'
    ];
    COLUMN_BOUNCE_RATE = 6 [
      (options.label) = 'Bounce rate',
      (options.accessor_key) = 'bounceRate',
      (options.is_sortable) = true,
      (options.is_filterable) = true,
      (options.suffix) = '%'
    ];
  }

  // Next Id: 8
  // Configuration for the table displayed in the Users by Source and Medium Data.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;

    types.Expression filter_expression = 7;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;
}
