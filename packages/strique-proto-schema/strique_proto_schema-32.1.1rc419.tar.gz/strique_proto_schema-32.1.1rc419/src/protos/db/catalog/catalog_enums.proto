syntax = "proto3";

package strique.model.db.catalog;

import "options/strique_enum_options.proto";

option java_outer_classname = "CatalogEnumsProto";
option java_package = "com.strique.model.db.catalog";

// Next Id: 5
// Proto definition for targeted destinations
enum ProductDestination {
  ProductDestination_UNKNOWN = 0;
  GOOGLE_MERCHANT_CENTER = 1 [(options.label) = 'Google merchant center'];
  META_CATALOG = 2 [(options.label) = 'Meta catalog'];
  XML_FEED = 3 [(options.label) = 'XML feed'];
}

// Next Id: 4
// Proto definition for product status
enum ProductStatus {
  PRODUCT_STATUS_UNKNOWN = 0;
  PRODUCT_STATUS_ACTIVE = 1;
  PRODUCT_STATUS_ARCHIVED = 2;
  PRODUCT_STATUS_DRAFT = 3;
}

// Next Id: 3
// Proto definition for inventory policy
enum InventoryPolicy {
  INVENTORY_POLICY_UNKNOWN = 0;
  INVENTORY_POLICY_DENY = 1;
  INVENTORY_POLICY_CONTINUE = 2;
}

// Next Id: 3
// Proto definition for product availablity
enum ProductAvailability {
  PRODUCT_AVAILABILITY_UNKNOWN = 0;
  IN_STOCK = 1 [(options.label) = 'in_stock'];
  OUT_OF_STOCK = 2 [(options.label) = 'out_of_stock'];
}

// Next Id: 24
// Proto definition for supported units
enum SupportedUnits {
  SUPPORTED_UNITS_UNKNOWN = 0;
  // Weight
  WEIGHT_OUNCE = 1 [(options.label) = 'oz'];
  WEIGHT_MILLIGRAM = 2 [(options.label) = 'mg'];
  WEIGHT_GRAM = 3 [(options.label) = 'g'];
  WEIGHT_KILOGRAM = 4 [(options.label) = 'kg'];
  WEIGHT_POUND = 5 [(options.label) = 'lb'];
  // Volume (US imperial)
  VOLUME_PINT_US = 6 [(options.label) = 'pt'];
  VOLUME_QUART_US = 7 [(options.label) = 'qt'];
  VOLUME_GALLON_US = 8 [(options.label) = 'gal'];
  VOLUME_FLUID_OUNCE_US = 9 [(options.label) = 'floz'];
  // Volume (metric)
  VOLUME_CENTILITER = 10 [(options.label) = 'cl'];
  VOLUME_LITER = 11 [(options.label) = 'l'];
  VOLUME_CUBIC_METER = 12 [(options.label) = 'cbm'];
  VOLUME_MILLILITER = 13 [(options.label) = 'ml'];
  // Length
  LENGTH_FOOT = 14 [(options.label) = 'ft'];
  LENGTH_YARD = 15 [(options.label) = 'yd'];
  LENGTH_CENTIMETER = 16 [(options.label) = 'cm'];
  LENGTH_METER = 17 [(options.label) = 'm'];
  LENGTH_INCH = 18 [(options.label) = 'in'];
  // Area
  AREA_SQUARE_METER = 19 [(options.label) = 'sqm'];
  AREA_SQUARE_FEET = 20 [(options.label) = 'sqft'];
  // Per unit
  UNIT_SHEET = 21 [(options.label) = 'sheet'];
  UNIT_ITEM = 22 [(options.label) = 'item'];
  UNIT_COUNT = 23 [(options.label) = 'ct'];
}

// Next Id: 4
// Proto definition for product condition
enum ProductCondition {
  CONDITION_UNKNOWN = 0;
  CONDITION_NEW = 1 [(options.label) = 'new'];
  CONDITION_REFURBISHED = 2 [(options.label) = 'refurbished'];
  CONDITION_USED = 3 [(options.label) = 'used'];
}

// Next Id: 11
// Proto definition for energy efficiency class
enum EnergyEfficiencyClass {
  ENERGY_EFFICIENCY_CLASS_UNKNOWN = 0;
  CLASS_A3 = 1 [(options.label) = 'A+++'];
  CLASS_A2 = 2 [(options.label) = 'A++'];
  CLASS_A1 = 3 [(options.label) = 'A+'];
  CLASS_A = 4 [(options.label) = 'A'];
  CLASS_B = 5 [(options.label) = 'B'];
  CLASS_C = 6 [(options.label) = 'C'];
  CLASS_D = 7 [(options.label) = 'D'];
  CLASS_E = 8 [(options.label) = 'E'];
  CLASS_F = 9 [(options.label) = 'F'];
  CLASS_G = 10 [(options.label) = 'G'];
}

// Next Id: 6
// Proto definition for age group
enum AgeGroup {
  AGE_GROUP_UNKNOWN = 0;
  AGE_GROUP_NEWBORN = 1 [(options.label) = 'newborn'];
  AGE_GROUP_INFANT = 2 [(options.label) = 'infant'];
  AGE_GROUP_TODDLER = 3 [(options.label) = 'toddler'];
  AGE_GROUP_KIDS = 4 [(options.label) = 'kids'];
  AGE_GROUP_ADULT = 5 [(options.label) = 'adult'];
}

// Next Id: 4
// Proto definition for gender
enum Gender {
  GENDER_UNKNOWN = 0;
  MALE = 1 [(options.label) = 'male'];
  FEMALE = 2 [(options.label) = 'female'];
  UNISEX = 3 [(options.label) = 'unisex'];
}

// Next Id: 7
// Proto definition for size type
enum SizeType {
  SIZE_TYPE_UNKNOWN = 0;
  REGULAR = 1 [(options.label) = 'regular'];
  PETITE = 2 [(options.label) = 'petite'];
  TALL = 3 [(options.label) = 'tall'];
  PLUS = 4 [(options.label) = 'plus'];
  BIG = 5 [(options.label) = 'big'];
  Maternity = 6 [(options.label) = 'maternity'];
}

// Next Id: 12
// Proto definition for size system
enum SizeSystem {
  SIZE_SYSTEM_UNKNOWN = 0;
  US = 1 [(options.label) = 'US'];
  UK = 2 [(options.label) = 'UK'];
  EU = 3 [(options.label) = 'EU'];
  DE = 4 [(options.label) = 'DE'];
  FR = 5 [(options.label) = 'FR'];
  JP = 6 [(options.label) = 'JP'];
  CN = 7 [(options.label) = 'CN'];
  IT = 8 [(options.label) = 'IT'];
  BR = 9 [(options.label) = 'BR'];
  MEX = 10 [(options.label) = 'MEX'];
  AU = 11 [(options.label) = 'AU'];
}

// Next Id: 3
// Proto definition for length units
enum LengthUnits {
  LENGTH_UNITS_UNKNOWN = 0;
  LENGTH_UNITS_CENTIMETER = 1 [(options.label) = 'cm'];
  LENGTH_UNITS_INCH = 2 [(options.label) = 'in'];
}

// Next Id: 5
// Proto definition for weight units
enum WeightUnits {
  WEIGHT_UNITS_UNKNOWN = 0;
  WEIGHT_UNITS_POUND = 1 [(options.label) = 'lb'];
  WEIGHT_UNITS_OUNCE = 2 [(options.label) = 'oz'];
  WEIGHT_UNITS_GRAM = 3 [(options.label) = 'g'];
  WEIGHT_UNITS_KILOGRAM = 4 [(options.label) = 'kg'];
}

// Next Id: 3
// Proto definition for subscription period
enum SubscriptionPeriod {
  SUBSCRIPTION_PERIOD_UNKNOWN = 0;
  MONTH = 1 [(options.label) = 'month'];
  YEAR = 2 [(options.label) = 'year'];
}

// Next Id: 3
// Proto definition for Measured value.
message MeasuredValue {
  // Numeric value of the measurement.
  double value = 1;

  // The unit used for the measurement.
  MeasuringUnit unit = 2;
}

message MeasuringUnit {
  oneof measuring_unit {
    // Weight units
    WeightUnits weight = 1;
    // Length units
    LengthUnits length = 2;
    // other supported units
    SupportedUnits other = 3;
  }
}

// Next Id: 19
// Proto definition for AI enhance columns
enum AiEnhanceColumn {
  COLUMN_UNKNOWN = 0 [
    (options.label) = 'Unknown',
    (options.accessor_key) = '',
    (options.is_ai_enhanceable) = false
  ];
  COLUMN_ID = 1 [
    (options.label) = 'ID',
    (options.accessor_key) = 'productId',
    (options.is_ai_enhanceable) = false
  ];
  COLUMN_TITLE = 2 [
    (options.label) = 'Title',
    (options.accessor_key) = 'title',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_DESCRIPTION = 3 [
    (options.label) = 'Description',
    (options.accessor_key) = 'description',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_PRODUCT_TYPE = 4 [
    (options.label) = 'Product type',
    (options.accessor_key) = 'productType',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_BRAND = 5 [
    (options.label) = 'Brand',
    (options.accessor_key) = 'brand',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_GOOGLE_PRODUCT_CATEGORY = 6 [
    (options.label) = 'Google product category',
    (options.accessor_key) = 'googleProductCategory',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_FB_PRODUCT_CATEGORY = 7 [
    (options.label) = 'Facebook product category',
    (options.accessor_key) = 'fbProductCategory',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_GENDER = 8 [
    (options.label) = 'Gender',
    (options.accessor_key) = 'gender',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_COLOR = 9 [
    (options.label) = 'Color',
    (options.accessor_key) = 'color',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_SIZE = 10 [
    (options.label) = 'Size',
    (options.accessor_key) = 'size',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_AGE_GROUP = 11 [
    (options.label) = 'Age group',
    (options.accessor_key) = 'ageGroup',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_MATERIAL = 12 [
    (options.label) = 'Material',
    (options.accessor_key) = 'material',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_PATTERN = 13 [
    (options.label) = 'Pattern',
    (options.accessor_key) = 'pattern',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_ADULT_ORIENTED_PRODUCT = 14 [
    (options.label) = 'Adult-oriented product',
    (options.accessor_key) = 'adult',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_CONDITION = 15 [
    (options.label) = 'Condition',
    (options.accessor_key) = 'condition',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_SIZE_SYSTEM = 16 [
    (options.label) = 'Size system',
    (options.accessor_key) = 'sizeSystem',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_SIZE_TYPE = 17 [
    (options.label) = 'Size type',
    (options.accessor_key) = 'sizeType',
    (options.is_ai_enhanceable) = true
  ];
  COLUMN_MULTIPACK = 18 [
    (options.label) = 'Multipack',
    (options.accessor_key) = 'multipack',
    (options.is_ai_enhanceable) = true
  ];
}