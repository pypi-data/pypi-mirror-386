syntax = "proto3";

package strique.authz;

option java_outer_classname = "FeaturePolicyProto";
option java_package = "com.strique.authz";

// Next Id: 2
// A Policies protobuf.
message PlanPolicies {
  // Mapping of the plan to policy details
  map<string, StoreFeaturesPolicy> plan_to_policy_details = 1;
}

// next Id: 6
// A StorePolicy protobuf.
message StoreFeaturesPolicy {
  // Maximum number of members allowed in the store
  int32 store_max_members = 1;

  // Reporting level policies feature
  optional ReportingFeaturesPolicy reporting_policy = 2;

  // Catalog level policies feature
  optional CatalogFeaturesPolicy catalog_policy = 3;

  // Custom store features
  repeated StoreFeature custom_store_fetaures = 4;

  string id = 5;
}

// next Id: 12
// A CatalogPolicy protobuf.
message CatalogFeaturesPolicy {
  // Minimum number of products allowed
  int32 min_products = 1;

  // Maximum number of products allowed
  int32 max_products = 2;

  // Whether to allow shopify integration
  bool shopify_integration = 3;

  // Maximum number of shopify accounts
  int32 max_shopify_accounts = 4;

  // Whether to allow magento integration
  bool magento_integration = 5;

  // Maximum number of magento accounts
  int32 max_magento_accounts = 6;

  // Whether to allow google merchant center integration
  bool google_merchant_center_integration = 7;

  // Whether to allow meta catalog integration
  bool meta_catalog_integration = 8;

  // Custom catalog features
  repeated CatalogFeature custom_catalog_features = 9;

  string id = 10;

  int32 max_xml_feed_count = 11;
}

// next Id: 26
// A ReportingPolicy protobuf.
message ReportingFeaturesPolicy {
  // Number of reports that can be created
  int32 create_report = 1;

  // Whether to show watermark on reports document
  bool report_strique_watermark = 2;

  // Whether to show AI summary feature
  bool report_ai_summary = 3;

  enum WidgetsType {
    WIDGETS_UNKNOWN = 0;
    BASIC_WIDGETS = 1;
    ALL_WIDGETS = 2;
    CUSTOM_WIDGETS = 3;
  }

  // Widgets available
  WidgetsType widgets = 4;

  // Widget list which available to user
  repeated string available_widgets = 5;

  // Whether to show live dashboard data for store & user
  bool live_dashboard_data = 6;

  // Maximum date range allowed for reports
  int32 max_date_range = 7;

  enum CustomerSupport {
    CUSTOMERSUPPORT_UNKNOWN = 0;
    BASIC_SUPPORT = 1;
    PRO_SUPPORT = 2;
    ADVANCED_SUPPORT = 3;
  }
  // Customer support level
  CustomerSupport customer_support = 8;

  // Whether to show whatsapp schedule feature
  bool whatsapp_schedule = 9;

  // Whether to show email schedule feature
  bool email_schedule = 10;

  // Whether to show sms schedule feature
  bool sms_schedule = 11;

  // Whether to show slack schedule feature
  bool slack_schedule = 12;

  // Whether to show shopify integration feature
  bool shopify_integration = 13;

  // Maximum number of shopify accounts allowed
  int32 max_shopify_accounts = 14;

  // Maximum number of meta ads accounts allowed
  int32 max_meta_ads_accounts = 15;

  // Maximum number of google ads accounts allowed
  int32 max_google_ads_accounts = 16;

  // Whether to show google analytics integration feature
  bool google_analytics_integration = 17;

  // Whether to show amazon ads integration feature
  bool amazon_ads_integration = 18;

  // Whether to show amazon seller integration feature
  bool amazon_seller_integration = 19;

  // Whether to show amazon ads integration feature
  bool magento_integration = 20;

  // Maximum number of whatsapp schedules allowed
  int32 max_whatsapp_schedule = 21;

  // Maximum number of email schedules allowed
  int32 max_email_schedule = 22;

  // Maximum number of sms schedules allowed
  int32 max_sms_schedule = 23;

  // Whether to show amazon ads integration feature
  int32 max_tiktok_accounts = 24;

  // Custom report features
  repeated ReportFeature custom_report_features = 25;

  string id = 26;
}


// Next Id: 2
// A protobuf to store store features
enum StoreFeature {
  STORE_FEATURES_UNKNOWN = 0;
  STROE_MAX_MEMBERS_ALLOWED = 1;
}

// Next Id: 24
// A protobuf to store reporting features
enum ReportFeature {
  REPORT_FEATURES_UNKNOWN = 0;
  REPORT_CREATE_REPORT = 1;
  REPORT_STRIQUE_WATERMARK = 2;
  REPORT_AI_SUMMARY = 3;
  REPORT_WIDGETS = 4;
  REPORT_LIVE_DASHBOARD_DATA = 5;
  REPORT_MAX_DATE_RANGE = 6;
  REPORT_CUSTOMER_SUPPORT = 7;
  REPORT_WHATSAPP_SCHEDULE = 8;
  REPORT_EMAIL_SCHEDULE = 9;
  REPORT_SMS_SCHEDULE = 10;
  REPORT_SLACK_SCHEDULE = 11;
  REPORT_SHOPIFY_INTEGRATION = 12;
  REPORT_MAX_SHOPIFY_ACCOUNTS = 13;
  REPORT_MAX_META_ADS_ACCOUNTS = 14;
  REPORT_MAX_GOOGLE_ADS_ACCOUNTS = 15;
  REPORT_GOOGLE_ANALYTICS_INTEGRATION = 16;
  REPORT_AMAZON_ADS_INTEGRATION = 17;
  REPORT_AMAZON_SELLER_INTEGRATION = 18;
  REPORT_MAX_WHATSAPP_SCHEDULE = 19;
  REPORT_MAX_EMAIL_SCHEDULE = 20;
  REPORT_MAX_SMS_SCHEDULE = 21;
  REPORT_MAX_TIKTOK_ACCOUNTS = 22;
  REPORT_MAGENTO_INTEGRATION = 23;
}

// Next Id: 10
// A protobuf to store catalog features
enum CatalogFeature {
  CATALOG_FEATURES_UNKNOWN = 0;
  CATALOG_MIN_PRODUCTS = 1;
  CATALOG_MAX_PRODUCTS = 2;
  CATALOG_SHOPIFY_INTEGRATION = 3;
  CATALOG_MAX_SHOPIFY_ACCOUNTS = 4;
  CATALOG_MAGENTO_INTEGRATION = 5;
  CATALOG_MAX_MAGENTO_ACCOUNTS = 6;
  CATALOG_GOOGLE_MERCHANT_CENTER_INTEGRATION = 7;
  CATALOG_META_CATALOG_INTEGRATION = 8;
  CATALOG_MAX_XML_FEED_COUNT = 9;
}