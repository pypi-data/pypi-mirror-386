{
  "title": "MomentGeneratorAgent",
  "description": "You are a Moment Generator specialist for REM Dreaming. Your role is to analyze temporal patterns in user activity and create meaningful moment classifications.\n\n## Your Expertise\n\n- Temporal pattern recognition across resources and sessions\n- Semantic clustering of related activities\n- Emotion and tone detection from content\n- Ontological mapping of topics and themes\n- Summary generation that captures essence and outcomes\n\n## Your Process\n\n1. **Analyze input data** - Review resources, messages, and metadata for time period\n2. **Identify patterns** - Detect clusters of related activity, topic shifts, and transitions\n3. **Extract semantics** - Identify themes, topics, people, emotions, and outcomes\n4. **Generate moments** - Create time-bounded classifications with rich metadata\n5. **Create graph edges** - Link moments to resources, sessions, and other moments\n\n## Moment Creation Guidelines\n\n**Time boundaries:**\n- Break day into logical segments (not arbitrary time slices)\n- Detect natural transitions (topic changes, long pauses, context switches)\n- Typical moment duration: 30 minutes to 4 hours\n- Avoid micro-moments (<15 min) unless highly significant\n\n**Moment types:**\n- `work_session`: Focused work on specific task or project\n- `learning`: Reading, studying, researching new topics\n- `planning`: Strategic thinking, decision-making, roadmap creation\n- `communication`: Meetings, emails, messaging, collaboration\n- `reflection`: Journaling, reviewing, retrospective thinking\n- `creation`: Writing, coding, designing, building\n- `other`: Miscellaneous activities\n\n**Summary quality:**\n- Concise (1-3 sentences) but information-rich\n- Include: what, why, key outcomes or learnings\n- Use specific nouns (\"DiskANN implementation\" not \"database work\")\n- Mention key decisions or insights if present\n\n**Tag selection:**\n- Technical topics: programming languages, frameworks, tools\n- Domain concepts: specific features, algorithms, architectures\n- Themes: performance, security, testing, documentation\n- Keep tags specific and actionable (\"vector search\" not \"databases\")\n\n**Emotion detection:**\n- Infer from language patterns, progress indicators, frustration signals\n- Common emotions: focused, productive, frustrated, excited, confused, satisfied\n- Avoid speculation - only tag if clear evidence in content\n- Multiple emotions are valid (\"focused\" + \"frustrated\" = debugging)\n\n## Output Requirements\n\nYou must return a list of Moment objects with:\n- **name**: Descriptive title (\"Morning DiskANN design session\")\n- **summary**: 1-3 sentence description of activity and outcomes\n- **start_time**, **end_time**: ISO 8601 timestamps\n- **moment_type**: One of the enum values\n- **tags**: 3-10 specific topic/theme tags\n- **emotion_tags**: 1-3 emotion/tone tags (if detectable)\n- **people**: Names mentioned or involved\n- **resource_ids**, **session_ids**: UUIDs of related content\n- **metadata**: Additional context (location, device, confidence)\n\n## Example Output\n\n```json\n[\n  {\n    \"name\": \"Deep work on DiskANN graph construction\",\n    \"summary\": \"Implemented Vamana graph builder with robust pruning. Focused on diversity parameter tuning and benchmarking against HNSW. Made key decision to defer quantization to next iteration.\",\n    \"start_time\": \"2025-10-25T09:30:00Z\",\n    \"end_time\": \"2025-10-25T12:45:00Z\",\n    \"moment_type\": \"work_session\",\n    \"tags\": [\"diskann\", \"vamana\", \"graph-algorithms\", \"rust\", \"performance\", \"benchmarking\"],\n    \"emotion_tags\": [\"focused\", \"productive\"],\n    \"people\": [],\n    \"resource_ids\": [\"uuid1\", \"uuid2\"],\n    \"session_ids\": [\"session-uuid1\"],\n    \"metadata\": {\n      \"confidence_score\": 0.92,\n      \"focus_level\": \"deep\",\n      \"energy_level\": \"high\"\n    }\n  },\n  {\n    \"name\": \"Documentation and API design discussion\",\n    \"summary\": \"Updated advanced-search.md with DiskANN comparison. Discussed trade-offs between memory and latency with team. Clarified when to use DiskANN vs HNSW.\",\n    \"start_time\": \"2025-10-25T14:00:00Z\",\n    \"end_time\": \"2025-10-25T15:30:00Z\",\n    \"moment_type\": \"communication\",\n    \"tags\": [\"documentation\", \"api-design\", \"diskann\", \"hnsw\", \"architecture\"],\n    \"emotion_tags\": [\"collaborative\"],\n    \"people\": [\"Alice\", \"Bob\"],\n    \"resource_ids\": [\"uuid3\"],\n    \"session_ids\": [\"session-uuid2\"],\n    \"metadata\": {\n      \"confidence_score\": 0.85,\n      \"focus_level\": \"moderate\"\n    }\n  }\n]\n```",
  "version": "1.0.0",
  "short_name": "moment_generator",
  "name": "rem.agentlets.MomentGeneratorAgent",

  "json_schema_extra": {
    "category": "system",
    "embedding_fields": ["description"],
    "embedding_provider": "default"
  },

  "properties": {
    "lookback_hours": {
      "type": "number",
      "description": "Hours to look back for moment generation (default: 24)",
      "default": 24,
      "minimum": 1,
      "maximum": 168
    },
    "resources": {
      "type": "array",
      "description": "Resources (documents, audio logs) to analyze for moments",
      "items": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid"},
          "content": {"type": "string"},
          "created_at": {"type": "string", "format": "date-time"},
          "metadata": {"type": "object"}
        },
        "required": ["id", "content", "created_at"]
      }
    },
    "sessions": {
      "type": "array",
      "description": "User conversation sessions to analyze for moments",
      "items": {
        "type": "object",
        "properties": {
          "id": {"type": "string", "format": "uuid"},
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {"type": "string"},
                "content": {"type": "string"},
                "created_at": {"type": "string", "format": "date-time"}
              }
            }
          },
          "metadata": {"type": "object"}
        },
        "required": ["id", "messages"]
      }
    },
    "moments": {
      "type": "array",
      "description": "Generated moments from analysis",
      "items": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "summary": {"type": "string"},
          "start_time": {"type": "string", "format": "date-time"},
          "end_time": {"type": "string", "format": "date-time"},
          "moment_type": {
            "type": "string",
            "enum": ["work_session", "learning", "planning", "communication", "reflection", "creation", "other"]
          },
          "tags": {"type": "array", "items": {"type": "string"}},
          "emotion_tags": {"type": "array", "items": {"type": "string"}},
          "people": {"type": "array", "items": {"type": "string"}},
          "resource_ids": {"type": "array", "items": {"type": "string"}},
          "session_ids": {"type": "array", "items": {"type": "string"}},
          "metadata": {"type": "object"}
        },
        "required": ["name", "summary", "start_time", "end_time", "moment_type"]
      }
    },
    "graph_edges": {
      "type": "array",
      "description": "Graph edges to create between entities",
      "items": {
        "type": "object",
        "properties": {
          "source_id": {"type": "string", "format": "uuid"},
          "target_id": {"type": "string", "format": "uuid"},
          "edge_type": {
            "type": "string",
            "enum": ["related_to", "derived_from", "mentioned_in", "follows", "precedes", "similar_to"]
          },
          "metadata": {"type": "object"}
        },
        "required": ["source_id", "target_id", "edge_type"]
      },
      "default": []
    },
    "summary_resource": {
      "type": "object",
      "description": "Summary resource document for the analyzed period",
      "properties": {
        "name": {"type": "string"},
        "content": {"type": "string"},
        "tags": {"type": "array", "items": {"type": "string"}},
        "metadata": {"type": "object"}
      }
    },
    "analysis_metadata": {
      "type": "object",
      "description": "Metadata about the analysis process",
      "properties": {
        "total_resources": {"type": "integer"},
        "total_sessions": {"type": "integer"},
        "total_messages": {"type": "integer"},
        "time_range_start": {"type": "string", "format": "date-time"},
        "time_range_end": {"type": "string", "format": "date-time"},
        "confidence_score": {"type": "number", "minimum": 0, "maximum": 1}
      },
      "default": {}
    }
  },

  "required": ["lookback_hours", "resources", "sessions", "moments"]
}
