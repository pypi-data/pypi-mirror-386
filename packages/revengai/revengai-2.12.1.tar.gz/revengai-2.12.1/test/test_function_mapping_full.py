# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.function_mapping_full import FunctionMappingFull

class TestFunctionMappingFull(unittest.TestCase):
    """FunctionMappingFull unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FunctionMappingFull:
        """Test FunctionMappingFull
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FunctionMappingFull`
        """
        model = FunctionMappingFull()
        if include_optional:
            return FunctionMappingFull(
                inverse_string_map = {
                    'key' : revengai.models.inverse_string_map_item.InverseStringMapItem(
                        string = '', 
                        addr = 56, )
                    },
                inverse_function_map = {
                    'key' : revengai.models.inverse_function_map_item.InverseFunctionMapItem(
                        name = '', 
                        addr = null, 
                        is_external = True, )
                    },
                unmatched_functions = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_external_vars = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_custom_types = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_strings = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_vars = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_go_to_labels = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_custom_function_pointers = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_variadic_lists = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                fields = {
                    'key' : {
                        'key' : revengai.models.inverse_value.InverseValue(
                            value = '', )
                        }
                    }
            )
        else:
            return FunctionMappingFull(
                inverse_string_map = {
                    'key' : revengai.models.inverse_string_map_item.InverseStringMapItem(
                        string = '', 
                        addr = 56, )
                    },
                inverse_function_map = {
                    'key' : revengai.models.inverse_function_map_item.InverseFunctionMapItem(
                        name = '', 
                        addr = null, 
                        is_external = True, )
                    },
                unmatched_functions = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_external_vars = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_custom_types = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_strings = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_vars = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_go_to_labels = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_custom_function_pointers = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                unmatched_variadic_lists = {
                    'key' : revengai.models.inverse_value.InverseValue(
                        value = '', )
                    },
                fields = {
                    'key' : {
                        'key' : revengai.models.inverse_value.InverseValue(
                            value = '', )
                        }
                    },
        )
        """

    def testFunctionMappingFull(self):
        """Test FunctionMappingFull"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
