# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.base_response_callees_caller_functions_response import BaseResponseCalleesCallerFunctionsResponse

class TestBaseResponseCalleesCallerFunctionsResponse(unittest.TestCase):
    """BaseResponseCalleesCallerFunctionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseResponseCalleesCallerFunctionsResponse:
        """Test BaseResponseCalleesCallerFunctionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseResponseCalleesCallerFunctionsResponse`
        """
        model = BaseResponseCalleesCallerFunctionsResponse()
        if include_optional:
            return BaseResponseCalleesCallerFunctionsResponse(
                status = True,
                data = revengai.models.callees_caller_functions_response.CalleesCallerFunctionsResponse(
                    base_address = 56, 
                    callees = [
                        revengai.models.callee_function_info.CalleeFunctionInfo(
                            function_id = 56, 
                            matched_function_id = 56, 
                            dashboard_url = '', 
                            is_external = True, 
                            callee_name = 'FUN_001e1370', 
                            callee_vaddr = '1971056', )
                        ], 
                    callers = [
                        revengai.models.caller_function_info.CallerFunctionInfo(
                            function_id = 56, 
                            matched_function_id = 56, 
                            dashboard_url = '', 
                            is_external = True, 
                            caller_name = 'FUN_0002a5d8', 
                            caller_vaddr = '173528', )
                        ], ),
                message = '',
                errors = [
                    revengai.models.error_model.ErrorModel(
                        code = '', 
                        message = '', )
                    ],
                meta = revengai.models.meta_model.MetaModel(
                    pagination = revengai.models.pagination_model.PaginationModel(
                        page_size = 56, 
                        page_number = 56, 
                        has_next_page = True, ), )
            )
        else:
            return BaseResponseCalleesCallerFunctionsResponse(
        )
        """

    def testBaseResponseCalleesCallerFunctionsResponse(self):
        """Test BaseResponseCalleesCallerFunctionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
