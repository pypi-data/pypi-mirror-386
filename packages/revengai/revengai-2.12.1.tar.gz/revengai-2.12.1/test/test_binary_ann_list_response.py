# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.binary_ann_list_response import BinaryAnnListResponse

class TestBinaryAnnListResponse(unittest.TestCase):
    """BinaryAnnListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BinaryAnnListResponse:
        """Test BinaryAnnListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BinaryAnnListResponse`
        """
        model = BinaryAnnListResponse()
        if include_optional:
            return BinaryAnnListResponse(
                list = [
                    revengai.models.exported_binary_ann_result.ExportedBinaryAnnResult(
                        analysis_id = 56, 
                        binary_id = 56, 
                        binary_name = '', 
                        sha_256_hash = '', 
                        analysis_scope = '', 
                        embedding_3d = [
                            1.337
                            ], 
                        embedding_1d = [
                            1.337
                            ], 
                        confidence = 1.337, 
                        tags = [
                            revengai.models.tag_item.TagItem(
                                tag = '', 
                                origin = '', )
                            ], )
                    ]
            )
        else:
            return BinaryAnnListResponse(
                list = [
                    revengai.models.exported_binary_ann_result.ExportedBinaryAnnResult(
                        analysis_id = 56, 
                        binary_id = 56, 
                        binary_name = '', 
                        sha_256_hash = '', 
                        analysis_scope = '', 
                        embedding_3d = [
                            1.337
                            ], 
                        embedding_1d = [
                            1.337
                            ], 
                        confidence = 1.337, 
                        tags = [
                            revengai.models.tag_item.TagItem(
                                tag = '', 
                                origin = '', )
                            ], )
                    ],
        )
        """

    def testBinaryAnnListResponse(self):
        """Test BinaryAnnListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
