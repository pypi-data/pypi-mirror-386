# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.analysis_config import AnalysisConfig

class TestAnalysisConfig(unittest.TestCase):
    """AnalysisConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisConfig:
        """Test AnalysisConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisConfig`
        """
        model = AnalysisConfig()
        if include_optional:
            return AnalysisConfig(
                scrape_third_party_config = revengai.models.scrape_third_party_config.ScrapeThirdPartyConfig(
                    enabled = True, ),
                generate_cves = True,
                generate_sbom = True,
                generate_capabilities = True,
                no_cache = True,
                advanced_analysis = True,
                sandbox_config = revengai.models.sandbox_options.SandboxOptions(
                    enabled = True, 
                    command_line_args = '', )
            )
        else:
            return AnalysisConfig(
        )
        """

    def testAnalysisConfig(self):
        """Test AnalysisConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
