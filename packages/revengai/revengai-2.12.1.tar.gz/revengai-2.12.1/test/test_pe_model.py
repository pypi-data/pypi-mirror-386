# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.pe_model import PEModel

class TestPEModel(unittest.TestCase):
    """PEModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PEModel:
        """Test PEModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PEModel`
        """
        model = PEModel()
        if include_optional:
            return PEModel(
                type = '',
                timestamps = revengai.models.timestamp_model.TimestampModel(
                    pe_timestamp = 56, 
                    export_timestamp = 56, 
                    debug_timestamp = 56, ),
                architecture = '',
                checksum = 56,
                image_base = 56,
                security = revengai.models.security_model.SecurityModel(
                    aslr = True, 
                    dep = True, 
                    cfg = True, 
                    driver_model = True, 
                    app_container = True, 
                    terminal_server_aware = True, 
                    image_isolation = True, 
                    code_integrity = True, 
                    high_entropy = True, 
                    seh = True, 
                    bound_image = True, ),
                version_info = {
                    'key' : null
                    },
                debug_info = revengai.models.pdb_debug_model.PDBDebugModel(
                    debug_entries = [
                        revengai.models.single_pdb_entry_model.SinglePDBEntryModel(
                            guid = '', 
                            age = 56, 
                            path = '', )
                        ], ),
                number_of_resources = 56,
                entry_point = revengai.models.entrypoint_model.EntrypointModel(
                    address = 56, 
                    first_bytes = '', ),
                signature = revengai.models.code_signature_model.CodeSignatureModel(
                    signed = True, 
                    valid_signature = True, 
                    signatures = [
                        revengai.models.single_code_signature_model.SingleCodeSignatureModel(
                            certificates = [
                                revengai.models.single_code_certificate_model.SingleCodeCertificateModel(
                                    version = 56, 
                                    issued_on = '', 
                                    expires_on = '', 
                                    issuer_name = '', 
                                    serial_number = '', 
                                    subject_name = '', )
                                ], 
                            authenticode_digest = '', )
                        ], ),
                dotnet = True,
                debug_stripped = True,
                import_hash = '',
                export_hash = '',
                rich_header_hash = '',
                sections = revengai.models.section_model.SectionModel(
                    number_of_sections = 56, 
                    sections = [
                        revengai.models.single_section_model.SingleSectionModel(
                            name = '', 
                            virtual_address = 56, 
                            virtual_size = 56, 
                            characteristics = '', 
                            raw_size = 56, 
                            entropy = 1.337, 
                            sha3_256 = '', )
                        ], ),
                imports = revengai.models.import_model.ImportModel(
                    number_of_imports = 56, 
                    imports = [
                        {
                            'key' : {
                                'key' : 56
                                }
                            }
                        ], ),
                exports = revengai.models.export_model.ExportModel(
                    number_of_exports = 56, 
                    exports = [
                        {
                            'key' : 56
                            }
                        ], ),
                icon_data = revengai.models.icon_model.IconModel(
                    content = '', )
            )
        else:
            return PEModel(
                type = '',
                timestamps = revengai.models.timestamp_model.TimestampModel(
                    pe_timestamp = 56, 
                    export_timestamp = 56, 
                    debug_timestamp = 56, ),
                architecture = '',
                checksum = 56,
                image_base = 56,
                security = revengai.models.security_model.SecurityModel(
                    aslr = True, 
                    dep = True, 
                    cfg = True, 
                    driver_model = True, 
                    app_container = True, 
                    terminal_server_aware = True, 
                    image_isolation = True, 
                    code_integrity = True, 
                    high_entropy = True, 
                    seh = True, 
                    bound_image = True, ),
                version_info = {
                    'key' : null
                    },
                debug_info = revengai.models.pdb_debug_model.PDBDebugModel(
                    debug_entries = [
                        revengai.models.single_pdb_entry_model.SinglePDBEntryModel(
                            guid = '', 
                            age = 56, 
                            path = '', )
                        ], ),
                number_of_resources = 56,
                entry_point = revengai.models.entrypoint_model.EntrypointModel(
                    address = 56, 
                    first_bytes = '', ),
                signature = revengai.models.code_signature_model.CodeSignatureModel(
                    signed = True, 
                    valid_signature = True, 
                    signatures = [
                        revengai.models.single_code_signature_model.SingleCodeSignatureModel(
                            certificates = [
                                revengai.models.single_code_certificate_model.SingleCodeCertificateModel(
                                    version = 56, 
                                    issued_on = '', 
                                    expires_on = '', 
                                    issuer_name = '', 
                                    serial_number = '', 
                                    subject_name = '', )
                                ], 
                            authenticode_digest = '', )
                        ], ),
                dotnet = True,
                debug_stripped = True,
                import_hash = '',
                export_hash = '',
                rich_header_hash = '',
                sections = revengai.models.section_model.SectionModel(
                    number_of_sections = 56, 
                    sections = [
                        revengai.models.single_section_model.SingleSectionModel(
                            name = '', 
                            virtual_address = 56, 
                            virtual_size = 56, 
                            characteristics = '', 
                            raw_size = 56, 
                            entropy = 1.337, 
                            sha3_256 = '', )
                        ], ),
                imports = revengai.models.import_model.ImportModel(
                    number_of_imports = 56, 
                    imports = [
                        {
                            'key' : {
                                'key' : 56
                                }
                            }
                        ], ),
                exports = revengai.models.export_model.ExportModel(
                    number_of_exports = 56, 
                    exports = [
                        {
                            'key' : 56
                            }
                        ], ),
                icon_data = revengai.models.icon_model.IconModel(
                    content = '', ),
        )
        """

    def testPEModel(self):
        """Test PEModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
