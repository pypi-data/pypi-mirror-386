# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.analysis_detail_response import AnalysisDetailResponse

class TestAnalysisDetailResponse(unittest.TestCase):
    """AnalysisDetailResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisDetailResponse:
        """Test AnalysisDetailResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisDetailResponse`
        """
        model = AnalysisDetailResponse()
        if include_optional:
            return AnalysisDetailResponse(
                access = revengai.models.analysis_access_info.AnalysisAccessInfo(
                    owner = True, 
                    username = '', ),
                analysis_id = 56,
                analysis_scope = '',
                architecture = '',
                binary_dynamic = True,
                binary_format = '',
                binary_name = '',
                binary_size = 56,
                binary_type = '',
                creation = '',
                debug = True,
                model_name = '',
                sbom = {
                    'key' : null
                    },
                sha_256_hash = ''
            )
        else:
            return AnalysisDetailResponse(
                access = revengai.models.analysis_access_info.AnalysisAccessInfo(
                    owner = True, 
                    username = '', ),
                analysis_id = 56,
                analysis_scope = '',
                architecture = '',
                binary_dynamic = True,
                binary_format = '',
                binary_name = '',
                binary_size = 56,
                binary_type = '',
                creation = '',
                debug = True,
                model_name = '',
                sha_256_hash = '',
        )
        """

    def testAnalysisDetailResponse(self):
        """Test AnalysisDetailResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
