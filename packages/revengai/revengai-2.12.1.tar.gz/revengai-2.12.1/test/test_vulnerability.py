# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.vulnerability import Vulnerability

class TestVulnerability(unittest.TestCase):
    """Vulnerability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Vulnerability:
        """Test Vulnerability
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Vulnerability`
        """
        model = Vulnerability()
        if include_optional:
            return Vulnerability(
                vendor = '',
                product = '',
                version = '',
                cve_number = '',
                severity = 'CRITICAL',
                source = '',
                cvss_version = '',
                cvss_vector = '',
                remarks = '',
                score = 1.337,
                is_unknown = True
            )
        else:
            return Vulnerability(
                vendor = '',
                product = '',
                version = '',
                cve_number = '',
                severity = 'CRITICAL',
                source = '',
                cvss_version = '',
                cvss_vector = '',
                remarks = '',
                score = 1.337,
        )
        """

    def testVulnerability(self):
        """Test Vulnerability"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
