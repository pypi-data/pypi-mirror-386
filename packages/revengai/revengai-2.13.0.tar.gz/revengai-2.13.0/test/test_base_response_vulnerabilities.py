# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.base_response_vulnerabilities import BaseResponseVulnerabilities

class TestBaseResponseVulnerabilities(unittest.TestCase):
    """BaseResponseVulnerabilities unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseResponseVulnerabilities:
        """Test BaseResponseVulnerabilities
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseResponseVulnerabilities`
        """
        model = BaseResponseVulnerabilities()
        if include_optional:
            return BaseResponseVulnerabilities(
                status = True,
                data = revengai.models.vulnerabilities.Vulnerabilities(
                    vulnerabilities = [
                        revengai.models.vulnerability.Vulnerability(
                            vendor = '', 
                            product = '', 
                            version = '', 
                            cve_number = '', 
                            severity = 'CRITICAL', 
                            source = '', 
                            cvss_version = '', 
                            cvss_vector = '', 
                            remarks = '', 
                            score = 1.337, 
                            is_unknown = True, )
                        ], ),
                message = '',
                errors = [
                    revengai.models.error_model.ErrorModel(
                        code = '', 
                        message = '', )
                    ],
                meta = revengai.models.meta_model.MetaModel(
                    pagination = revengai.models.pagination_model.PaginationModel(
                        page_size = 56, 
                        page_number = 56, 
                        has_next_page = True, ), )
            )
        else:
            return BaseResponseVulnerabilities(
        )
        """

    def testBaseResponseVulnerabilities(self):
        """Test BaseResponseVulnerabilities"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
