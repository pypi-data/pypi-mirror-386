# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.binary_search_response import BinarySearchResponse

class TestBinarySearchResponse(unittest.TestCase):
    """BinarySearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BinarySearchResponse:
        """Test BinarySearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BinarySearchResponse`
        """
        model = BinarySearchResponse()
        if include_optional:
            return BinarySearchResponse(
                results = [
                    revengai.models.binary_search_result.BinarySearchResult(
                        binary_id = 56, 
                        binary_name = '', 
                        analysis_id = 56, 
                        sha_256_hash = '', 
                        tags = [
                            ''
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model_id = 56, 
                        model_name = '', 
                        owned_by = '', )
                    ]
            )
        else:
            return BinarySearchResponse(
                results = [
                    revengai.models.binary_search_result.BinarySearchResult(
                        binary_id = 56, 
                        binary_name = '', 
                        analysis_id = 56, 
                        sha_256_hash = '', 
                        tags = [
                            ''
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model_id = 56, 
                        model_name = '', 
                        owned_by = '', )
                    ],
        )
        """

    def testBinarySearchResponse(self):
        """Test BinarySearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
