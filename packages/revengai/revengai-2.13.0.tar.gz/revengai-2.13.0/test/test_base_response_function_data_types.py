# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.base_response_function_data_types import BaseResponseFunctionDataTypes

class TestBaseResponseFunctionDataTypes(unittest.TestCase):
    """BaseResponseFunctionDataTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseResponseFunctionDataTypes:
        """Test BaseResponseFunctionDataTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseResponseFunctionDataTypes`
        """
        model = BaseResponseFunctionDataTypes()
        if include_optional:
            return BaseResponseFunctionDataTypes(
                status = True,
                data = revengai.models.function_data_types.FunctionDataTypes(
                    completed = True, 
                    status = '', 
                    data_types = revengai.models.function_info.FunctionInfo(
                        func_types = revengai.models.function_type.FunctionType(
                            last_change = '', 
                            addr = 56, 
                            size = 56, 
                            header = revengai.models.function_header.FunctionHeader(
                                last_change = '', 
                                name = '', 
                                addr = 56, 
                                type = '', 
                                args = {
                                    'key' : revengai.models.argument.Argument(
                                        last_change = '', 
                                        offset = 56, 
                                        name = '', 
                                        type = '', 
                                        size = 56, )
                                    }, ), 
                            stack_vars = {
                                'key' : revengai.models.stack_variable.StackVariable(
                                    last_change = '', 
                                    offset = 56, 
                                    name = '', 
                                    type = '', 
                                    size = 56, 
                                    addr = 56, )
                                }, 
                            name = '', 
                            type = '', 
                            artifact_type = 'Function', ), 
                        func_deps = [
                            null
                            ], ), 
                    data_types_version = 56, ),
                message = '',
                errors = [
                    revengai.models.error_model.ErrorModel(
                        code = '', 
                        message = '', )
                    ],
                meta = revengai.models.meta_model.MetaModel(
                    pagination = revengai.models.pagination_model.PaginationModel(
                        page_size = 56, 
                        page_number = 56, 
                        has_next_page = True, ), )
            )
        else:
            return BaseResponseFunctionDataTypes(
        )
        """

    def testBaseResponseFunctionDataTypes(self):
        """Test BaseResponseFunctionDataTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
