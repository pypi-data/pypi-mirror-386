# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.code_signature_model import CodeSignatureModel

class TestCodeSignatureModel(unittest.TestCase):
    """CodeSignatureModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeSignatureModel:
        """Test CodeSignatureModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeSignatureModel`
        """
        model = CodeSignatureModel()
        if include_optional:
            return CodeSignatureModel(
                signed = True,
                valid_signature = True,
                signatures = [
                    revengai.models.single_code_signature_model.SingleCodeSignatureModel(
                        certificates = [
                            revengai.models.single_code_certificate_model.SingleCodeCertificateModel(
                                version = 56, 
                                issued_on = '', 
                                expires_on = '', 
                                issuer_name = '', 
                                serial_number = '', 
                                subject_name = '', )
                            ], 
                        authenticode_digest = '', )
                    ]
            )
        else:
            return CodeSignatureModel(
                signed = True,
                valid_signature = True,
                signatures = [
                    revengai.models.single_code_signature_model.SingleCodeSignatureModel(
                        certificates = [
                            revengai.models.single_code_certificate_model.SingleCodeCertificateModel(
                                version = 56, 
                                issued_on = '', 
                                expires_on = '', 
                                issuer_name = '', 
                                serial_number = '', 
                                subject_name = '', )
                            ], 
                        authenticode_digest = '', )
                    ],
        )
        """

    def testCodeSignatureModel(self):
        """Test CodeSignatureModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
