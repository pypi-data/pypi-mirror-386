# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.function_data_types import FunctionDataTypes

class TestFunctionDataTypes(unittest.TestCase):
    """FunctionDataTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FunctionDataTypes:
        """Test FunctionDataTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FunctionDataTypes`
        """
        model = FunctionDataTypes()
        if include_optional:
            return FunctionDataTypes(
                completed = True,
                status = '',
                data_types = revengai.models.function_info.FunctionInfo(
                    func_types = revengai.models.function_type.FunctionType(
                        last_change = '', 
                        addr = 56, 
                        size = 56, 
                        header = revengai.models.function_header.FunctionHeader(
                            last_change = '', 
                            name = '', 
                            addr = 56, 
                            type = '', 
                            args = {
                                'key' : revengai.models.argument.Argument(
                                    last_change = '', 
                                    offset = 56, 
                                    name = '', 
                                    type = '', 
                                    size = 56, )
                                }, ), 
                        stack_vars = {
                            'key' : revengai.models.stack_variable.StackVariable(
                                last_change = '', 
                                offset = 56, 
                                name = '', 
                                type = '', 
                                size = 56, 
                                addr = 56, )
                            }, 
                        name = '', 
                        type = '', 
                        artifact_type = 'Function', ), 
                    func_deps = [
                        null
                        ], ),
                data_types_version = 56
            )
        else:
            return FunctionDataTypes(
                completed = True,
                status = '',
        )
        """

    def testFunctionDataTypes(self):
        """Test FunctionDataTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
