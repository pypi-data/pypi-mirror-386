# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.generate_function_data_types import GenerateFunctionDataTypes

class TestGenerateFunctionDataTypes(unittest.TestCase):
    """GenerateFunctionDataTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenerateFunctionDataTypes:
        """Test GenerateFunctionDataTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenerateFunctionDataTypes`
        """
        model = GenerateFunctionDataTypes()
        if include_optional:
            return GenerateFunctionDataTypes(
                queued = True,
                reference = '',
                data_types_list = revengai.models.generation_status_list.GenerationStatusList(
                    total_count = 56, 
                    total_data_types_count = 56, 
                    items = [
                        revengai.models.function_data_types_status.FunctionDataTypesStatus(
                            function_id = 56, 
                            completed = True, 
                            status = '', )
                        ], )
            )
        else:
            return GenerateFunctionDataTypes(
                queued = True,
                reference = '',
                data_types_list = revengai.models.generation_status_list.GenerationStatusList(
                    total_count = 56, 
                    total_data_types_count = 56, 
                    items = [
                        revengai.models.function_data_types_status.FunctionDataTypesStatus(
                            function_id = 56, 
                            completed = True, 
                            status = '', )
                        ], ),
        )
        """

    def testGenerateFunctionDataTypes(self):
        """Test GenerateFunctionDataTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
