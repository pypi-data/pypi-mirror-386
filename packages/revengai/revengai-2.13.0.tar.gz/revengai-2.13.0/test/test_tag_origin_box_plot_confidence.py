# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.tag_origin_box_plot_confidence import TagOriginBoxPlotConfidence

class TestTagOriginBoxPlotConfidence(unittest.TestCase):
    """TagOriginBoxPlotConfidence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TagOriginBoxPlotConfidence:
        """Test TagOriginBoxPlotConfidence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TagOriginBoxPlotConfidence`
        """
        model = TagOriginBoxPlotConfidence()
        if include_optional:
            return TagOriginBoxPlotConfidence(
                tag = revengai.models.tags.Tags(
                    tag = '', 
                    origin = 'RevEng-Malware', ),
                box_plot = revengai.models.box_plot_confidence.BoxPlotConfidence(
                    min = 1.337, 
                    max = 1.337, 
                    average = 1.337, 
                    upper_quartile = 1.337, 
                    lower_quartile = 1.337, 
                    positive_count = 56, 
                    negative_count = 56, )
            )
        else:
            return TagOriginBoxPlotConfidence(
                tag = revengai.models.tags.Tags(
                    tag = '', 
                    origin = 'RevEng-Malware', ),
                box_plot = revengai.models.box_plot_confidence.BoxPlotConfidence(
                    min = 1.337, 
                    max = 1.337, 
                    average = 1.337, 
                    upper_quartile = 1.337, 
                    lower_quartile = 1.337, 
                    positive_count = 56, 
                    negative_count = 56, ),
        )
        """

    def testTagOriginBoxPlotConfidence(self):
        """Test TagOriginBoxPlotConfidence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
