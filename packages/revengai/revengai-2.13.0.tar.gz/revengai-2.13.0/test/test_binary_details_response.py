# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.binary_details_response import BinaryDetailsResponse

class TestBinaryDetailsResponse(unittest.TestCase):
    """BinaryDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BinaryDetailsResponse:
        """Test BinaryDetailsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BinaryDetailsResponse`
        """
        model = BinaryDetailsResponse()
        if include_optional:
            return BinaryDetailsResponse(
                arch = '',
                bits = 56,
                crc32 = '',
                var_class = '',
                entropy = 1.337,
                file_size = 56,
                language = '',
                md5 = '',
                machine = '',
                os = '',
                sha1 = '',
                sha256 = '',
                ssdeep = '',
                static = True,
                stripped = True,
                sub_sys = '',
                tlsh = '',
                type = '',
                debug = True,
                first_seen = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return BinaryDetailsResponse(
                arch = '',
                bits = 56,
                crc32 = '',
                var_class = '',
                entropy = 1.337,
                file_size = 56,
                language = '',
                md5 = '',
                machine = '',
                os = '',
                sha1 = '',
                sha256 = '',
                ssdeep = '',
                static = True,
                stripped = True,
                sub_sys = '',
                tlsh = '',
                type = '',
                debug = True,
                first_seen = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testBinaryDetailsResponse(self):
        """Test BinaryDetailsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
