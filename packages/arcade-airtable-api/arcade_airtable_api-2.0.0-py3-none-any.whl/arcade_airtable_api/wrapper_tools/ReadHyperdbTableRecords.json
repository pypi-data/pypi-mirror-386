{
  "name": "ReadHyperdbTableRecords",
  "fully_qualified_name": "AirtableApi.ReadHyperdbTableRecords@2.0.0",
  "description": "Retrieve records from a specified HyperDB table.\n\nUse this tool to fetch records from a HyperDB table by specifying the enterprise account ID and data table ID. Ideal for accessing or reviewing data stored in HyperDB tables.",
  "toolkit": {
    "name": "ArcadeAirtableApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "enterprise_account_id",
        "required": true,
        "description": "The unique identifier for the enterprise account. Required to access records from the specified HyperDB table.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "enterpriseAccountId"
      },
      {
        "name": "data_table_id",
        "required": true,
        "description": "The identifier of the HyperDB table from which records are to be retrieved. It is required to specify the correct table ID to access the corresponding data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "dataTableId"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "A string representing the position within the dataset to start retrieving records from. Use for paginated data retrieval.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "cursor"
      },
      {
        "name": "fields_to_retrieve",
        "required": false,
        "description": "List of field names to retrieve from the HyperDB table records. Specify as an array of strings.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "fields"
      },
      {
        "name": "maximum_records_to_retrieve",
        "required": false,
        "description": "The maximum number of records to retrieve from the HyperDB table. Specify an integer value to limit the number of records returned.",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "maxRecords"
      },
      {
        "name": "primary_keys_to_retrieve",
        "required": false,
        "description": "An array of primary key strings to specify which records to retrieve from the HyperDB table.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "primaryKeys"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'hyperdb-table-read-records'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-airtable",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "hyperDB.records:read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the airtable API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.airtable.com/v0/{enterpriseAccountId}/{dataTableId}/getRecords",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "enterpriseAccountId",
        "tool_parameter_name": "enterprise_account_id",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "dataTableId",
        "tool_parameter_name": "data_table_id",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "cursor",
        "tool_parameter_name": "pagination_cursor",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "fields",
        "tool_parameter_name": "fields_to_retrieve",
        "description": "",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "maxRecords",
        "tool_parameter_name": "maximum_records_to_retrieve",
        "description": "",
        "value_schema": {
          "val_type": "number",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "primaryKeys",
        "tool_parameter_name": "primary_keys_to_retrieve",
        "description": "",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"Filtering on primary key\": {\n          \"description\": \"Simple filtering on primary key\",\n          \"summary\": \"Filtering on primary key\",\n          \"value\": {\n            \"primaryKeys\": [\n              \"483\",\n              \"484\",\n              \"99294934924299\"\n            ]\n          }\n        },\n        \"Querying all records - first request\": {\n          \"description\": \"Example of how to query all records.\",\n          \"summary\": \"Querying all records - first request\",\n          \"value\": {}\n        },\n        \"Querying all records - second request using cursor\": {\n          \"description\": \"Example of how to query all records using a cursor returned in a previous request\",\n          \"summary\": \"Querying all records - second request using cursor\",\n          \"value\": {\n            \"cursor\": \"25k49x\"\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"cursor\": {\n            \"type\": \"string\"\n          },\n          \"fields\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"maxRecords\": {\n            \"type\": \"number\"\n          },\n          \"primaryKeys\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [],\n        \"type\": \"object\"\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
