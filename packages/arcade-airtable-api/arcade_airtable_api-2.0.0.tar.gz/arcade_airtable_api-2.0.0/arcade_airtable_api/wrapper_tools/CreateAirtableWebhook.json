{
  "name": "CreateAirtableWebhook",
  "fully_qualified_name": "AirtableApi.CreateAirtableWebhook@2.0.0",
  "description": "Create a new webhook in a specified Airtable base.\n\nUse this tool to create a webhook in a specified Airtable base with the option to receive payload notifications. Note that webhooks are limited to 10 per base, and OAuth integrations can create up to 2. Webhooks expire in 7 days but can be refreshed if still active. Creator level permissions are required.",
  "toolkit": {
    "name": "ArcadeAirtableApi",
    "description": null,
    "version": "2.0.0"
  },
  "input": {
    "parameters": [
      {
        "name": "base_id",
        "required": true,
        "description": "The ID of the Airtable base where the webhook will be created. It should be a string.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "baseId"
      },
      {
        "name": "webhook_specification",
        "required": false,
        "description": "A JSON object defining the webhook's notification URL and the types of changes to watch. Includes options for filtering by change types, data types, source, and fields.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "notificationUrl": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "An optional url that can receive notification pings. [See notification delivery](/api/webhooks-overview#webhook-notification-delivery)."
            },
            "specification": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "options": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "filters": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "changeTypes": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads that contain changes of these types."
                        },
                        "dataTypes": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads that contain changes affecting objects of these types.\n\n- `tableData`: record and cell value changes\n- `tableFields`: field changes\n- `tableMetadata`: table name and description changes"
                        },
                        "fromSources": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes from these sources.\nIf omitted, changes from all sources are reported.\n\n - `client`: changes generated by a user through the web or mobile clients\n - `publicApi`: changes generated through the Airtable API\n - `formSubmission`: changes generated when a form _view_ is submitted\n - `formPageSubmission`: changes generated when an _interface_ form builder page, form layout page, or record creation button page is submitted\n - `automation`: changes generated through an automation action\n - `system`: changes generated by system events, such as processing time function formulas\n - `sync`: changes generated through Airtable Sync"
                        },
                        "recordChangeScope": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes in the specified TableId or ViewId.\n\n`Warning`: [Form view](https://support.airtable.com/v1/docs/form-view) and [List view](https://support.airtable.com/v1/docs/list-view) are currently not supported."
                        },
                        "sourceOptions": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "formPageSubmission": {
                              "val_type": "json",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": {
                                "pageId": {
                                  "val_type": "string",
                                  "inner_val_type": null,
                                  "enum": null,
                                  "properties": null,
                                  "inner_properties": null,
                                  "description": null
                                }
                              },
                              "inner_properties": null,
                              "description": null
                            },
                            "formSubmission": {
                              "val_type": "json",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": {
                                "viewId": {
                                  "val_type": "string",
                                  "inner_val_type": null,
                                  "enum": null,
                                  "properties": null,
                                  "inner_properties": null,
                                  "description": null
                                }
                              },
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": "Additional options for source filtering.\nThis allows users to filter form _view_ submissions by `ViewId`, or _interface_\nform builder page, form layout page, or record creation button page submissions by `PageId`."
                        },
                        "watchDataInFieldIds": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes that modify values in cells in these fields.\nIf omitted, all fields within the table/view/base are watched.\n\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\nwill generate an error payload and the webhook will go into an error state and payloads will\nno longer be generated. More information about the error reponse is available in\n[Webhooks payload](/api/model/webhooks-payload)."
                        },
                        "watchSchemasOfFieldIds": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes that modify the schemas of these fields.\nIf omitted, schemas of all fields within the table/view/base are watched.\n\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\nwill generate an error payload and the webhook will go into an error state and payloads will\nno longer be generated. More information about the error reponse is available in\n[Webhooks payload](/api/model/webhooks-payload)."
                        }
                      },
                      "inner_properties": null,
                      "description": "A webhook specification can contain a filters object. For example, the specification for a webhook\nwatching the data in a table is as follows:\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\"\n    }\n  }\n}\n```\nThe table events can be filtered down even more to cover just record data changes for certain fields\nfrom specific sources.\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"fromSources\": [\n        \"client\"\n      ],\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\",\n      \"watchDataInFieldIds\": [\n        \"fld00000000000000\",\n        \"fld00000000000001\",\n        \"fld00000000000002\"\n      ]\n    }\n  }\n}\n```\n\nAside from dataTypes, the keys in a filters object are optional. By default, a webhook will generate\npayloads across an entire base according to the specified dataTypes. We strongly recommend that your\nintegration specify a filters object with a subset of the filter keys to ensure that your integration\nis notified for only the most relevant events."
                    },
                    "includes": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "includeCellValuesInFieldIds": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A list of fields to include in the payload\nregardless of whether or not they changed."
                        },
                        "includePreviousCellValues": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, include the previous cell value in the payload."
                        },
                        "includePreviousFieldDefinitions": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, include the previous field definition in the payload."
                        }
                      },
                      "inner_properties": null,
                      "description": "By default, the payloads only contain the data that changed. In order to generate payloads with more\ncontextual data, an includes object may be added to the specification:\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"fromSources\": [\n        \"client\"\n      ],\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\",\n      \"watchDataInFieldIds\": [\n        \"fld00000000000001\",\n        \"fld00000000000002\"\n      ]\n    },\n    \"includes\": {\n      \"includeCellValuesInFieldIds\": [\n        \"fld00000000000000\"\n      ]\n    }\n  }\n}\n```"
                    }
                  },
                  "inner_properties": null,
                  "description": "A single webhook may watch changes in a table, view, or base. The specification defines the types of\nthe changes that are included in the webhook's payloads.\n\nNote that tables, fields, and views in the specification must be specified by ID rather than by name.\nYou may find the IDs for each of these with the manage fields UI."
                }
              },
              "inner_properties": null,
              "description": "A JSON object that describe the types of changes the webhook is interested in."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'create-a-webhook'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-airtable",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "webhook:manage"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the airtable API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.airtable.com/v0/bases/{baseId}/webhooks",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "baseId",
        "tool_parameter_name": "base_id",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "webhook_specification",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "notificationUrl": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "An optional url that can receive notification pings. [See notification delivery](/api/webhooks-overview#webhook-notification-delivery)."
            },
            "specification": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "options": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "filters": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "changeTypes": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads that contain changes of these types."
                        },
                        "dataTypes": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads that contain changes affecting objects of these types.\n\n- `tableData`: record and cell value changes\n- `tableFields`: field changes\n- `tableMetadata`: table name and description changes"
                        },
                        "fromSources": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes from these sources.\nIf omitted, changes from all sources are reported.\n\n - `client`: changes generated by a user through the web or mobile clients\n - `publicApi`: changes generated through the Airtable API\n - `formSubmission`: changes generated when a form _view_ is submitted\n - `formPageSubmission`: changes generated when an _interface_ form builder page, form layout page, or record creation button page is submitted\n - `automation`: changes generated through an automation action\n - `system`: changes generated by system events, such as processing time function formulas\n - `sync`: changes generated through Airtable Sync"
                        },
                        "recordChangeScope": {
                          "val_type": "string",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes in the specified TableId or ViewId.\n\n`Warning`: [Form view](https://support.airtable.com/v1/docs/form-view) and [List view](https://support.airtable.com/v1/docs/list-view) are currently not supported."
                        },
                        "sourceOptions": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": {
                            "formPageSubmission": {
                              "val_type": "json",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": {
                                "pageId": {
                                  "val_type": "string",
                                  "inner_val_type": null,
                                  "enum": null,
                                  "properties": null,
                                  "inner_properties": null,
                                  "description": null
                                }
                              },
                              "inner_properties": null,
                              "description": null
                            },
                            "formSubmission": {
                              "val_type": "json",
                              "inner_val_type": null,
                              "enum": null,
                              "properties": {
                                "viewId": {
                                  "val_type": "string",
                                  "inner_val_type": null,
                                  "enum": null,
                                  "properties": null,
                                  "inner_properties": null,
                                  "description": null
                                }
                              },
                              "inner_properties": null,
                              "description": null
                            }
                          },
                          "inner_properties": null,
                          "description": "Additional options for source filtering.\nThis allows users to filter form _view_ submissions by `ViewId`, or _interface_\nform builder page, form layout page, or record creation button page submissions by `PageId`."
                        },
                        "watchDataInFieldIds": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes that modify values in cells in these fields.\nIf omitted, all fields within the table/view/base are watched.\n\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\nwill generate an error payload and the webhook will go into an error state and payloads will\nno longer be generated. More information about the error reponse is available in\n[Webhooks payload](/api/model/webhooks-payload)."
                        },
                        "watchSchemasOfFieldIds": {
                          "val_type": "array",
                          "inner_val_type": "string",
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "Only generate payloads for changes that modify the schemas of these fields.\nIf omitted, schemas of all fields within the table/view/base are watched.\n\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\nwill generate an error payload and the webhook will go into an error state and payloads will\nno longer be generated. More information about the error reponse is available in\n[Webhooks payload](/api/model/webhooks-payload)."
                        }
                      },
                      "inner_properties": null,
                      "description": "A webhook specification can contain a filters object. For example, the specification for a webhook\nwatching the data in a table is as follows:\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\"\n    }\n  }\n}\n```\nThe table events can be filtered down even more to cover just record data changes for certain fields\nfrom specific sources.\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"fromSources\": [\n        \"client\"\n      ],\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\",\n      \"watchDataInFieldIds\": [\n        \"fld00000000000000\",\n        \"fld00000000000001\",\n        \"fld00000000000002\"\n      ]\n    }\n  }\n}\n```\n\nAside from dataTypes, the keys in a filters object are optional. By default, a webhook will generate\npayloads across an entire base according to the specified dataTypes. We strongly recommend that your\nintegration specify a filters object with a subset of the filter keys to ensure that your integration\nis notified for only the most relevant events."
                    },
                    "includes": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "includeCellValuesInFieldIds": {
                          "val_type": "json",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "A list of fields to include in the payload\nregardless of whether or not they changed."
                        },
                        "includePreviousCellValues": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, include the previous cell value in the payload."
                        },
                        "includePreviousFieldDefinitions": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": "If true, include the previous field definition in the payload."
                        }
                      },
                      "inner_properties": null,
                      "description": "By default, the payloads only contain the data that changed. In order to generate payloads with more\ncontextual data, an includes object may be added to the specification:\n```\n{\n  \"options\": {\n    \"filters\": {\n      \"fromSources\": [\n        \"client\"\n      ],\n      \"dataTypes\": [\n        \"tableData\"\n      ],\n      \"recordChangeScope\": \"tbl00000000000000\",\n      \"watchDataInFieldIds\": [\n        \"fld00000000000001\",\n        \"fld00000000000002\"\n      ]\n    },\n    \"includes\": {\n      \"includeCellValuesInFieldIds\": [\n        \"fld00000000000000\"\n      ]\n    }\n  }\n}\n```"
                    }
                  },
                  "inner_properties": null,
                  "description": "A single webhook may watch changes in a table, view, or base. The specification defines the types of\nthe changes that are included in the webhook's payloads.\n\nNote that tables, fields, and views in the specification must be specified by ID rather than by name.\nYou may find the IDs for each of these with the manage fields UI."
                }
              },
              "inner_properties": null,
              "description": "A JSON object that describe the types of changes the webhook is interested in."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"Success response\": {\n          \"description\": \"Create webhook\",\n          \"summary\": \"Success response\",\n          \"value\": {\n            \"notificationUrl\": \"https://foo.com/receive-ping\",\n            \"specification\": {\n              \"options\": {\n                \"filters\": {\n                  \"dataTypes\": [\n                    \"tableData\"\n                  ],\n                  \"recordChangeScope\": \"tbltp8DGLhqbUmjK1\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"notificationUrl\": {\n            \"description\": \"An optional url that can receive notification pings. [See notification delivery](/api/webhooks-overview#webhook-notification-delivery).\",\n            \"type\": [\n              \"string\",\n              \"null\"\n            ],\n            \"x-airtable-hide-null\": true\n          },\n          \"specification\": {\n            \"description\": \"A JSON object that describe the types of changes the webhook is interested in.\",\n            \"properties\": {\n              \"options\": {\n                \"description\": \"A single webhook may watch changes in a table, view, or base. The specification defines the types of\\nthe changes that are included in the webhook's payloads.\\n\\nNote that tables, fields, and views in the specification must be specified by ID rather than by name.\\nYou may find the IDs for each of these with the manage fields UI.\",\n                \"properties\": {\n                  \"filters\": {\n                    \"description\": \"A webhook specification can contain a filters object. For example, the specification for a webhook\\nwatching the data in a table is as follows:\\n```\\n{\\n  \\\"options\\\": {\\n    \\\"filters\\\": {\\n      \\\"dataTypes\\\": [\\n        \\\"tableData\\\"\\n      ],\\n      \\\"recordChangeScope\\\": \\\"tbl00000000000000\\\"\\n    }\\n  }\\n}\\n```\\nThe table events can be filtered down even more to cover just record data changes for certain fields\\nfrom specific sources.\\n```\\n{\\n  \\\"options\\\": {\\n    \\\"filters\\\": {\\n      \\\"fromSources\\\": [\\n        \\\"client\\\"\\n      ],\\n      \\\"dataTypes\\\": [\\n        \\\"tableData\\\"\\n      ],\\n      \\\"recordChangeScope\\\": \\\"tbl00000000000000\\\",\\n      \\\"watchDataInFieldIds\\\": [\\n        \\\"fld00000000000000\\\",\\n        \\\"fld00000000000001\\\",\\n        \\\"fld00000000000002\\\"\\n      ]\\n    }\\n  }\\n}\\n```\\n\\nAside from dataTypes, the keys in a filters object are optional. By default, a webhook will generate\\npayloads across an entire base according to the specified dataTypes. We strongly recommend that your\\nintegration specify a filters object with a subset of the filter keys to ensure that your integration\\nis notified for only the most relevant events.\",\n                    \"properties\": {\n                      \"changeTypes\": {\n                        \"description\": \"Only generate payloads that contain changes of these types.\",\n                        \"items\": {\n                          \"enum\": [\n                            \"add\",\n                            \"remove\",\n                            \"update\"\n                          ],\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                      },\n                      \"dataTypes\": {\n                        \"description\": \"Only generate payloads that contain changes affecting objects of these types.\\n\\n- `tableData`: record and cell value changes\\n- `tableFields`: field changes\\n- `tableMetadata`: table name and description changes\",\n                        \"items\": {\n                          \"enum\": [\n                            \"tableData\",\n                            \"tableFields\",\n                            \"tableMetadata\"\n                          ],\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                      },\n                      \"fromSources\": {\n                        \"description\": \"Only generate payloads for changes from these sources.\\nIf omitted, changes from all sources are reported.\\n\\n - `client`: changes generated by a user through the web or mobile clients\\n - `publicApi`: changes generated through the Airtable API\\n - `formSubmission`: changes generated when a form _view_ is submitted\\n - `formPageSubmission`: changes generated when an _interface_ form builder page, form layout page, or record creation button page is submitted\\n - `automation`: changes generated through an automation action\\n - `system`: changes generated by system events, such as processing time function formulas\\n - `sync`: changes generated through Airtable Sync\",\n                        \"items\": {\n                          \"enum\": [\n                            \"client\",\n                            \"publicApi\",\n                            \"formSubmission\",\n                            \"formPageSubmission\",\n                            \"automation\",\n                            \"system\",\n                            \"sync\",\n                            \"anonymousUser\",\n                            \"unknown\"\n                          ],\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                      },\n                      \"recordChangeScope\": {\n                        \"description\": \"Only generate payloads for changes in the specified TableId or ViewId.\\n\\n`Warning`: [Form view](https://support.airtable.com/v1/docs/form-view) and [List view](https://support.airtable.com/v1/docs/list-view) are currently not supported.\",\n                        \"type\": \"string\"\n                      },\n                      \"sourceOptions\": {\n                        \"description\": \"Additional options for source filtering.\\nThis allows users to filter form _view_ submissions by `ViewId`, or _interface_\\nform builder page, form layout page, or record creation button page submissions by `PageId`.\",\n                        \"properties\": {\n                          \"formPageSubmission\": {\n                            \"properties\": {\n                              \"pageId\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          },\n                          \"formSubmission\": {\n                            \"properties\": {\n                              \"viewId\": {\n                                \"type\": \"string\"\n                              }\n                            },\n                            \"type\": \"object\"\n                          }\n                        },\n                        \"type\": \"object\"\n                      },\n                      \"watchDataInFieldIds\": {\n                        \"description\": \"Only generate payloads for changes that modify values in cells in these fields.\\nIf omitted, all fields within the table/view/base are watched.\\n\\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\\nwill generate an error payload and the webhook will go into an error state and payloads will\\nno longer be generated. More information about the error reponse is available in\\n[Webhooks payload](/api/model/webhooks-payload).\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                      },\n                      \"watchSchemasOfFieldIds\": {\n                        \"description\": \"Only generate payloads for changes that modify the schemas of these fields.\\nIf omitted, schemas of all fields within the table/view/base are watched.\\n\\n`Warning`: If fields are specified and one of the specified fields are deleted, the webhook\\nwill generate an error payload and the webhook will go into an error state and payloads will\\nno longer be generated. More information about the error reponse is available in\\n[Webhooks payload](/api/model/webhooks-payload).\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                      }\n                    },\n                    \"required\": [\n                      \"dataTypes\"\n                    ],\n                    \"type\": \"object\"\n                  },\n                  \"includes\": {\n                    \"description\": \"By default, the payloads only contain the data that changed. In order to generate payloads with more\\ncontextual data, an includes object may be added to the specification:\\n```\\n{\\n  \\\"options\\\": {\\n    \\\"filters\\\": {\\n      \\\"fromSources\\\": [\\n        \\\"client\\\"\\n      ],\\n      \\\"dataTypes\\\": [\\n        \\\"tableData\\\"\\n      ],\\n      \\\"recordChangeScope\\\": \\\"tbl00000000000000\\\",\\n      \\\"watchDataInFieldIds\\\": [\\n        \\\"fld00000000000001\\\",\\n        \\\"fld00000000000002\\\"\\n      ]\\n    },\\n    \\\"includes\\\": {\\n      \\\"includeCellValuesInFieldIds\\\": [\\n        \\\"fld00000000000000\\\"\\n      ]\\n    }\\n  }\\n}\\n```\",\n                    \"properties\": {\n                      \"includeCellValuesInFieldIds\": {\n                        \"anyOf\": [\n                          {\n                            \"items\": {\n                              \"type\": \"string\"\n                            },\n                            \"type\": \"array\"\n                          },\n                          {\n                            \"const\": \"all\",\n                            \"type\": \"string\"\n                          }\n                        ],\n                        \"description\": \"A list of fields to include in the payload\\nregardless of whether or not they changed.\"\n                      },\n                      \"includePreviousCellValues\": {\n                        \"description\": \"If true, include the previous cell value in the payload.\",\n                        \"type\": \"boolean\"\n                      },\n                      \"includePreviousFieldDefinitions\": {\n                        \"description\": \"If true, include the previous field definition in the payload.\",\n                        \"type\": \"boolean\"\n                      }\n                    },\n                    \"type\": \"object\"\n                  }\n                },\n                \"required\": [\n                  \"filters\"\n                ],\n                \"type\": \"object\",\n                \"x-airtable-name\": \"Webhooks specification\",\n                \"x-airtable-tag\": \"webhooks\"\n              }\n            },\n            \"required\": [\n              \"options\"\n            ],\n            \"type\": \"object\"\n          }\n        },\n        \"required\": [\n          \"specification\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
