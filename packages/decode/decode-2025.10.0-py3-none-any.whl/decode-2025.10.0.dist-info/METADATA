Metadata-Version: 2.4
Name: decode
Version: 2025.10.0
Summary: DESHIMA code for data analysis
Project-URL: homepage, https://deshima-dev.github.io/decode
Project-URL: repository, https://github.com/deshima-dev/decode
Author-email: Akio Taniguchi <taniguchi.akio@gmail.com>, Juri Yamanaka <j.yamanaka@a.phys.nagoya-u.ac.jp>, Shinji Fujita <s-fujita@ism.ac.jp>
License: MIT License
        
        Copyright (c) 2018-2025 DESHIMA Team
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: astronomy,data-analysis,deshima,spectroscopy,submillimeter
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: <3.13,>=3.9
Requires-Dist: astropy<8,>=6
Requires-Dist: dask<2026,>=2024
Requires-Dist: dems<2026.0,>=2025.6
Requires-Dist: fire<1.0,>=0.5
Requires-Dist: matplotlib<4,>=3
Requires-Dist: ndtools<2,>=1
Requires-Dist: numpy<3.0,>=1.23
Requires-Dist: pandas-stubs<3,>=2
Requires-Dist: pandas<3,>=2
Requires-Dist: scikit-learn<2,>=1
Requires-Dist: scipy<2,>=1
Requires-Dist: tomli-w<2,>=1
Requires-Dist: xarray<2026,>=2024
Requires-Dist: zarr<3,>=2
Description-Content-Type: text/markdown

# de:code

[![Release](https://img.shields.io/pypi/v/decode?label=Release&color=cornflowerblue&style=flat-square)](https://pypi.org/project/decode/)
[![Python](https://img.shields.io/pypi/pyversions/decode?label=Python&color=cornflowerblue&style=flat-square)](https://pypi.org/project/decode/)
[![Downloads](https://img.shields.io/pypi/dm/decode?label=Downloads&color=cornflowerblue&style=flat-square)](https://pepy.tech/project/decode)
[![DOI](https://img.shields.io/badge/DOI-10.5281/zenodo.3384216-cornflowerblue?style=flat-square)](https://doi.org/10.5281/zenodo.3384216)
[![Tests](https://img.shields.io/github/actions/workflow/status/deshima-dev/decode/tests.yaml?label=Tests&style=flat-square)](https://github.com/deshima-dev/decode/actions)

DESHIMA code for data analysis

## Installation

```shell
pip install decode==2025.10.0
```

## Quick look

de:code ships with a quick look command `decode-qlook`, which will be available from the CUI after installation. It has several subcommands for each observation type. For example, to quick-look at a raster observation:
```shell
$ decode-qlook raster /path/to/dems.zarr.zip
```
where `dems.zarr.zip` is the merged observation data ([DESHIMA measurement set: DEMS](https://github.com/deshima-dev/dems)) to be checked. By default, it will output an image of the result plots by a simple analysis (e.g. continuum map, etc). You can also get the result data themselves by changing the output format:
```shell
$ decode-qlook raster /path/to/dems.zarr.zip --format zarr.zip
```
See the command help for all available options:
```shell
# list of the subcommands and descriptions
$ decode-qlook --help

# list of the available command options
$ decode-qlook raster --help
```

If you are not sure about the observation type, the `auto` subcommand may be useful to automatically select the appropriate command to use:
```shell
$ decode-qlook auto /path/to/dems.zarr.zip
```

Finally, all subcommands are available as functions in the `qlook` submodule. For example, the `raster` command corresponds to `decode.qlook.raster` and the following Python code is equivalent to the CUI:
```python
import decode

decode.qlook.raster("/path/to/dems.zarr.zip")
```
See [the qlook module documentation](https://deshima-dev.github.io/decode/_apidoc/decode.qlook.html) for more information.
