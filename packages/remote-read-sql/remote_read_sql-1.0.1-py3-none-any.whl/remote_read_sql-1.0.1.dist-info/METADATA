Metadata-Version: 2.4
Name: remote-read-sql
Version: 1.0.1
Summary: Securely read sql into a pandas dataframe from a remote mysql DB
Keywords: pandas,ssh,mysql,remote,dataframe
Author: Erik van Widenfelt
Author-email: Erik van Widenfelt <ew2789@gmail.com>
License-Expression: MIT
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: mysql-connector-python>=9.5.0
Requires-Dist: pandas>=2.3.3
Requires-Dist: paramiko>=4.0.0
Requires-Dist: python-dotenv>=1.1.1
Requires-Dist: sphinx>=8.2.3
Requires-Dist: sqlalchemy>=2.0.44
Requires-Dist: sqlglot>=27.28.1
Requires-Python: >=3.14
Description-Content-Type: text/x-rst

Remote read_sql
===============

Homepage: https://github.com/erikvw/remote-read-sql

Source code: https://github.com/erikvw/remote-read-sql

Read SQL into a pandas data frame from a remote server

Installation
------------

.. code-block:: bash

    pip install remote-read-sql

Usage
-----

.. code-block:: python

    # change to your own paths
    ssh_config = Path("~/.my_ssh_config")
    my_cnf_path = Path("~/.my.cnf")
    db_name = "production"

    opts = {
        "ssh_config": ssh_config,
        "my_cnf_path": my_cnf_path,
        "db_name": db_name
    }

    df = remote_read_sql("SELECT * FROM subject_glucose", **opts)

    df.head()
