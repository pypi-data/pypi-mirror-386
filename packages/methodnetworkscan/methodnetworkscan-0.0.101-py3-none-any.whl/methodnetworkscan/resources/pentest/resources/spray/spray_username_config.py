# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .spray_stealth_config import SprayStealthConfig
from .spray_target_service import SprayTargetService
from .username_scheme import UsernameScheme
from .wordlist_type import WordlistType


class SprayUsernameConfig(UniversalBaseModel):
    targets: typing.List[str]
    service: SprayTargetService
    username_lists: typing.Optional[typing.List[WordlistType]] = pydantic.Field(alias="usernameLists", default=None)
    usernames: typing.Optional[typing.List[str]] = None
    username_scheme: typing.Optional[UsernameScheme] = pydantic.Field(alias="usernameScheme", default=None)
    domain: str
    timeout: int
    continue_on_error: bool = pydantic.Field(alias="continueOnError")
    successful_only: bool = pydantic.Field(alias="successfulOnly")
    stealth: typing.Optional[SprayStealthConfig] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
