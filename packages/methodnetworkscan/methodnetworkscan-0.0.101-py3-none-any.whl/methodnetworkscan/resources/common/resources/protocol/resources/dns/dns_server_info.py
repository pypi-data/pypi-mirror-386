# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DnsServerInfo(UniversalBaseModel):
    response_code: typing.Optional[str] = pydantic.Field(alias="responseCode", default=None)
    authoritative: typing.Optional[bool] = None
    recursion_available: typing.Optional[bool] = pydantic.Field(alias="recursionAvailable", default=None)
    dns_version: typing.Optional[str] = pydantic.Field(alias="dnsVersion", default=None)
    edns_0_support: typing.Optional[bool] = pydantic.Field(alias="edns0Support", default=None)
    udp_buffer_size: typing.Optional[str] = pydantic.Field(alias="udpBufferSize", default=None)
    server_name: typing.Optional[str] = pydantic.Field(alias="serverName", default=None)
    supported_record_types: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="supportedRecordTypes", default=None
    )
    dnssec_enabled: typing.Optional[bool] = pydantic.Field(alias="dnssecEnabled", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
