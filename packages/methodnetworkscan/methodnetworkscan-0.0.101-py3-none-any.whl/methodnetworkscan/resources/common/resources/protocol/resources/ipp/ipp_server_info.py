# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class IppServerInfo(UniversalBaseModel):
    server: typing.Optional[str] = None
    status_code: typing.Optional[str] = pydantic.Field(alias="statusCode", default=None)
    http_status: typing.Optional[str] = pydantic.Field(alias="httpStatus", default=None)
    scheme: typing.Optional[str] = None
    printer_name: typing.Optional[str] = pydantic.Field(alias="printerName", default=None)
    printer_state: typing.Optional[str] = pydantic.Field(alias="printerState", default=None)
    printer_uri: typing.Optional[typing.List[str]] = pydantic.Field(alias="printerUri", default=None)
    supported_operations: typing.Optional[typing.List[str]] = pydantic.Field(alias="supportedOperations", default=None)
    document_formats: typing.Optional[typing.List[str]] = pydantic.Field(alias="documentFormats", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
