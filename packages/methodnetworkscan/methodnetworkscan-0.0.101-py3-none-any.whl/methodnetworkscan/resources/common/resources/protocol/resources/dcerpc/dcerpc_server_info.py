# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DcerpcServerInfo(UniversalBaseModel):
    version: typing.Optional[str] = None
    packet_type: typing.Optional[str] = pydantic.Field(alias="packetType", default=None)
    fragment_length: typing.Optional[str] = pydantic.Field(alias="fragmentLength", default=None)
    interfaces: typing.Optional[typing.List[str]] = None
    auth_level: typing.Optional[str] = pydantic.Field(alias="authLevel", default=None)
    max_transmit_frag: typing.Optional[int] = pydantic.Field(alias="maxTransmitFrag", default=None)
    max_receive_frag: typing.Optional[int] = pydantic.Field(alias="maxReceiveFrag", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
