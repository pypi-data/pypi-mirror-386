# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DomainContainer(UniversalBaseModel):
    object_identifier: typing.Optional[str] = pydantic.Field(alias="objectIdentifier", default=None)
    distinguished_name: typing.Optional[str] = pydantic.Field(alias="distinguishedName", default=None)
    name: typing.Optional[str] = None
    domain: typing.Optional[str] = None
    domain_sid: typing.Optional[str] = pydantic.Field(alias="domainSid", default=None)
    description: typing.Optional[str] = None
    high_value: typing.Optional[bool] = pydantic.Field(alias="highValue", default=None)
    when_created: typing.Optional[str] = pydantic.Field(alias="whenCreated", default=None)
    is_deleted: typing.Optional[bool] = pydantic.Field(alias="isDeleted", default=None)
    is_acl_protected: typing.Optional[bool] = pydantic.Field(alias="isACLProtected", default=None)
    child_objects: typing.Optional[typing.List[str]] = pydantic.Field(alias="childObjects", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
