# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2
from ..auth.pentest_auth_config import PentestAuthConfig


class PentestGeneralConfig(PentestAuthConfig):
    targets: typing.List[str]
    timeout: int
    threads: typing.Optional[int] = None
    verbose: typing.Optional[bool] = None
    successful_only: typing.Optional[bool] = pydantic.Field(alias="successfulOnly", default=None)
    stop_first_success: typing.Optional[bool] = pydantic.Field(alias="stopFirstSuccess", default=None)
    continue_on_error: typing.Optional[bool] = pydantic.Field(alias="continueOnError", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
