# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DomainObject(UniversalBaseModel):
    name: typing.Optional[str] = None
    netbios_name: typing.Optional[str] = pydantic.Field(alias="netbiosName", default=None)
    distinguished_name: typing.Optional[str] = pydantic.Field(alias="distinguishedName", default=None)
    object_sid: typing.Optional[str] = pydantic.Field(alias="objectSid", default=None)
    functional_level: typing.Optional[str] = pydantic.Field(alias="functionalLevel", default=None)
    domain_mode: typing.Optional[str] = pydantic.Field(alias="domainMode", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
