# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class PentestKerberosResult_ServiceTicketResult(UniversalBaseModel):
    type: typing.Literal["ServiceTicketResult"] = "ServiceTicketResult"
    target: str
    spn: str
    impersonate_user: typing.Optional[str] = pydantic.Field(alias="impersonateUser", default=None)
    requesting_user: str = pydantic.Field(alias="requestingUser")
    principal: typing.Optional[str] = None
    realm: typing.Optional[str] = None
    ticket_acquired: bool = pydantic.Field(alias="ticketAcquired")
    ticket_base_64: typing.Optional[str] = pydantic.Field(alias="ticketBase64", default=None)
    message: str
    timestamp: dt.datetime
    errors: typing.Optional[typing.List[str]] = None
    service_principal: typing.Optional[str] = pydantic.Field(alias="servicePrincipal", default=None)
    start_time: typing.Optional[dt.datetime] = pydantic.Field(alias="startTime", default=None)
    end_time: typing.Optional[dt.datetime] = pydantic.Field(alias="endTime", default=None)
    renew_until: typing.Optional[dt.datetime] = pydantic.Field(alias="renewUntil", default=None)
    ticket_flags: typing.Optional[str] = pydantic.Field(alias="ticketFlags", default=None)
    encryption_type: typing.Optional[str] = pydantic.Field(alias="encryptionType", default=None)
    key_version_number: typing.Optional[int] = pydantic.Field(alias="keyVersionNumber", default=None)
    algorithm: typing.Optional[str] = None
    ticket_version_number: typing.Optional[int] = pydantic.Field(alias="ticketVersionNumber", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


PentestKerberosResult = PentestKerberosResult_ServiceTicketResult
