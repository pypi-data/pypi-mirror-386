# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....auth.auth_attempt import AuthAttempt


class PentestTelnetResult_AuthResult(UniversalBaseModel):
    type: typing.Literal["AuthResult"] = "AuthResult"
    target: str
    auth_attempts: typing.Optional[typing.List[AuthAttempt]] = pydantic.Field(alias="authAttempts", default=None)
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


PentestTelnetResult = PentestTelnetResult_AuthResult
