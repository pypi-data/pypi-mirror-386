# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class RpcMethod(UniversalBaseModel):
    name: str
    full_path: str = pydantic.Field(alias="fullPath")
    request_type: str = pydantic.Field(alias="requestType")
    response_type: str = pydantic.Field(alias="responseType")
    client_streaming: bool = pydantic.Field(alias="clientStreaming")
    server_streaming: bool = pydantic.Field(alias="serverStreaming")
    request_fields: typing.Optional[typing.List[str]] = pydantic.Field(alias="requestFields", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
