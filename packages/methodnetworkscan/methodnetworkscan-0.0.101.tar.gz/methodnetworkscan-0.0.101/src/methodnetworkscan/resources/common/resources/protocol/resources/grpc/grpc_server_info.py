# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from .......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .grpc_service import GrpcService


class GrpcServerInfo(UniversalBaseModel):
    reflection_supported: bool = pydantic.Field(alias="reflectionSupported")
    services: typing.Optional[typing.List[GrpcService]] = None
    raw_descriptor_set: typing.Optional[str] = pydantic.Field(alias="rawDescriptorSet", default=None)
    supported_compression: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="supportedCompression", default=None
    )
    max_message_size: typing.Optional[int] = pydantic.Field(alias="maxMessageSize", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
