[project]
version = "2025.10.22"
name = "agi-node"
description = "agi-node the local code for AGI framework"
requires-python = ">=3.11"
readme = "README.md"
authors = [
    { name = "Jean-Pierre Morard", email = "focus@thalesgroup.com" },
]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
keywords = [
    "asyncio",
    "distributed",
    "cluster",
    "dataframe",
    "dataset",
    "agi",
    "datascience",
]
dependencies = [
    "scikit-learn",
    "parso",
    "cython",
    "setuptools",
    "msgpack",
    "numba",
    "py7zr",
    "python-dotenv",
    "tomli",
    "dask[distributed]",
    "wheel",
    "scipy==1.15.2",
    "psutil",
    "typing-inspection>=0.4.1",
    "polars",
    "pandas",
    "cmake>=3.29",
]

[project.urls]
Documentation = "https://thalesgroup.github.io/agilab"
Source = "https://github.com/ThalesGroup/agilab/tree/main/src/agilab/core/agi-node"
Tracker = "https://github.com/ThalesGroup/agilab/issues"










[dependency-groups]
dev = [
    "black",
    "pytest",
    "licensecheck",
    "pytest-local-badge",
    "pytest-cov",
    "pytest-asyncio",
    "fastparquet",
    "pytest-cov",
    "agi-node",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.mypy]
mypy_path = [
    "stubs",
]
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pyment]
source_dir = "src"
format = "google"

[tool.pytest.ini_options]
# Where your tests live for this project
testpaths = ["test"]

# Prefer auto so async tests don't need @pytest.mark.asyncio
asyncio_mode = "auto"

# Quiet known third-party deprecations
filterwarnings = [
  "ignore:ast\\.Num is deprecated.*:DeprecationWarning:ast",
]
