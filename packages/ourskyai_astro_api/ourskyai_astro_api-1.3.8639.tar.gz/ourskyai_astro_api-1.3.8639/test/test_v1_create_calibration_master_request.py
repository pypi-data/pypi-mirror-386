# coding: utf-8

"""
    OurSky Astro

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from ourskyai_astro_api.models.v1_create_calibration_master_request import V1CreateCalibrationMasterRequest  # noqa: E501

class TestV1CreateCalibrationMasterRequest(unittest.TestCase):
    """V1CreateCalibrationMasterRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1CreateCalibrationMasterRequest:
        """Test V1CreateCalibrationMasterRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1CreateCalibrationMasterRequest`
        """
        model = V1CreateCalibrationMasterRequest()  # noqa: E501
        if include_optional:
            return V1CreateCalibrationMasterRequest(
                node_id = '',
                calibration_master_type = 'FLAT',
                filter_type = 'NONE',
                bin_xy = 56,
                gain = 56,
                readout_mode = 56,
                temperature = 1.337,
                exposure_time = 1.337,
                rotator_angle = 1.337,
                offset = 56,
                overwrite = True,
                captured_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return V1CreateCalibrationMasterRequest(
                node_id = '',
                calibration_master_type = 'FLAT',
                bin_xy = 56,
                exposure_time = 1.337,
        )
        """

    def testV1CreateCalibrationMasterRequest(self):
        """Test V1CreateCalibrationMasterRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
