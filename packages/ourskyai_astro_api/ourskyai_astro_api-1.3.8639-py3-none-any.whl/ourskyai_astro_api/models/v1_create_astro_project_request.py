# coding: utf-8

"""
    OurSky Astro

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.3.8639
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional, Union
from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr
from ourskyai_astro_api.models.filter_type import FilterType

class V1CreateAstroProjectRequest(BaseModel):
    """
    V1CreateAstroProjectRequest
    """
    name: Optional[StrictStr] = None
    target_id: Optional[StrictStr] = Field(None, alias="targetId")
    ra: Optional[Union[StrictFloat, StrictInt]] = None
    dec: Optional[Union[StrictFloat, StrictInt]] = None
    node_id: StrictStr = Field(..., alias="nodeId")
    filter_type: Optional[FilterType] = Field(None, alias="filterType")
    __properties = ["name", "targetId", "ra", "dec", "nodeId", "filterType"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> V1CreateAstroProjectRequest:
        """Create an instance of V1CreateAstroProjectRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> V1CreateAstroProjectRequest:
        """Create an instance of V1CreateAstroProjectRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return V1CreateAstroProjectRequest.parse_obj(obj)

        _obj = V1CreateAstroProjectRequest.parse_obj({
            "name": obj.get("name"),
            "target_id": obj.get("targetId"),
            "ra": obj.get("ra"),
            "dec": obj.get("dec"),
            "node_id": obj.get("nodeId"),
            "filter_type": obj.get("filterType")
        })
        return _obj


