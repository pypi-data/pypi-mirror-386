[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ynab-converter"
version = "0.5.0"
description = "A powerful CLI tool for converting bank export files to YNAB-compatible CSV format with interactive preset management"
readme = "README.md"
requires-python = ">=3.12"
license = {file = "LICENSE"}
authors = [
    {name = "Pavel Apekhtin", email = "pavelapekdev@gmail.com"},
]
maintainers = [
    {name = "Pavel Apekhtin", email = "pavelapekdev@gmail.com"},
]
keywords = ["ynab", "budget", "finance", "csv", "bank", "import", "converter", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "pandas>=2.3.2",
    "pydantic>=2.11.9",
    "rich>=14.1.0",
    "openpyxl>=3.1.0",
    "ipykernel>=6.30.1",
    "xlrd>=2.0.2",
    "questionary>=2.0.0",
    "tomli>=2.0.0",
    "tomli-w>=1.0.0",
    "platformdirs>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/pavelapekhtin/ynab-import"
Repository = "https://github.com/pavelapekhtin/ynab-import"
Documentation = "https://github.com/pavelapekhtin/ynab-import#readme"
"Bug Tracker" = "https://github.com/pavelapekhtin/ynab-import/issues"
Changelog = "https://github.com/pavelapekhtin/ynab-import/blob/main/CHANGELOG.md"

[project.scripts]
ynab-converter = "ynab_import.cli.menus:main_menu"

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ipykernel",
    "build>=1.0.0",
    "twine>=4.0.0",
    "commitizen>=3.0.0",
    "pandas-stubs>=2.0.0",
    "pre-commit>=3.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/ynab_import"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/tests",
    "/.gitignore",
    "/explore.py",
    "/main.py",
    "/run_cli.py",
    "/todo.md",
    "/uv.lock",
    "/.python-version",
]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
bump_message = "bump: version $current_version â†’ $new_version"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = ["src"]
markers = [
    "csv: marks tests as CSV-related (deselect with '-m \"not csv\"')",
    "excel: marks tests as Excel-related (deselect with '-m \"not excel\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]
