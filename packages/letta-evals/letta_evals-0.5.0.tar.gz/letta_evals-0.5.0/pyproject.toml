[project]
name = "letta-evals"
version = "0.5.0"
description = "Evaluation framework for Letta AI agents"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = "<3.14,>=3.11"
authors = [{name = "Letta AI", email = "contact@letta.com"}]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Natural Language :: English",
]
dependencies = [
    "letta-client>=0.1.319",
    "typer>=0.12.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "jinja2>=3.1.0",
    "jsonpath-ng>=1.6.0",
    "openai>=1.0.0",
    "anthropic>=0.71.0",
    "python-dotenv>=1.0.0",
    "anyio==4.10.0",
    "pandas>=2.3.2",
    "matplotlib>=3.10.6",
]

[project.urls]
Homepage = "https://github.com/letta-ai/letta-evals-kit"
Repository = "https://github.com/letta-ai/letta-evals-kit"
Issues = "https://github.com/letta-ai/letta-evals-kit/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.6.0",
    "pre-commit>=3.0.0",
]
filesystem = [
    "faker>=37.6.0",
]

[project.scripts]
letta-evals = "letta_evals.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = [
    "E501",  # line too long (cannot be autofixed)
    "E731",  # lambda assignment (cannot be autofixed)
]

[tool.hatch.build]
include = [
    "letta_evals/**/*.py",
    "letta_evals/**/*.json",
    "letta_evals/py.typed",
]
