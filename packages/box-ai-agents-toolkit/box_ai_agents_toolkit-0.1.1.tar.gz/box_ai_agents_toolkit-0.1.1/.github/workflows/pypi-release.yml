name: Build and Publish Package

on:
  push:
    tags:
      - '*'  # Trigger on any tag

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for changelog generation
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Extract tag version
      id: get_version
      run: |
        # Get tag name and strip any 'v' prefix if present
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "TAG=$TAG" >> $GITHUB_ENV
    
    - name: Create virtual environment and install dependencies
      run: |
        uv sync --all-extras
        uv pip install -e .
        
    
    - name: Run linting
      run: |
        uv run ruff check .
    
    - name: Run tests
      run: |
        echo "Running tests"
        echo "current path: $(pwd)"
        echo "BOX_CLIENT_ID=${{ secrets.BOX_CLIENT_ID }}"
        echo "BOX_CLIENT_SECRET=${{ secrets.BOX_CLIENT_SECRET }}"
        echo "BOX_SUBJECT_TYPE=${{ secrets.BOX_SUBJECT_TYPE }}"
        echo "BOX_SUBJECT_ID=${{ secrets.BOX_SUBJECT_ID }}"
        uv run pytest
      env:
        BOX_CLIENT_ID: ${{ secrets.BOX_CLIENT_ID }}
        BOX_CLIENT_SECRET: ${{ secrets.BOX_CLIENT_SECRET }}
        BOX_SUBJECT_TYPE: ${{ secrets.BOX_SUBJECT_TYPE }}
        BOX_SUBJECT_ID: ${{ secrets.BOX_SUBJECT_ID }}
    
    - name: Update version in pyproject.toml
      run: |
        uv run .github/scripts/update_version.py $VERSION
    
    - name: Generate changelog updates
      run: |
        bash .github/scripts/generate_changelog.sh $TAG
        # Save the latest changelog entry for the release notes
        head -n 20 CHANGELOG_UPDATES.md > RELEASE_NOTES.md
    
    - name: Build package
      run: |
        uv build
    
    - name: Publish to PyPI
      env:
        PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "Publishing to pypi"
        echo "VERSION=$VERSION"
        echo "TAG=$TAG"
        uv publish -t $PYPI_API_TOKEN

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.VERSION }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          files: |
            dist/*.tar.gz
            dist/*.whl
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Commit version and changelog updates
      run: |
        echo "Committing version and changelog updates"
        echo "VERSION=$VERSION"
        echo "TAG=$TAG"
        cat CHANGELOG.md
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml CHANGELOG.md
        git commit -m "Update version to $VERSION and changelog" || echo "No changes to commit"
        # git push origin version-bump-$VERSION
        git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main || echo "No changes to push"