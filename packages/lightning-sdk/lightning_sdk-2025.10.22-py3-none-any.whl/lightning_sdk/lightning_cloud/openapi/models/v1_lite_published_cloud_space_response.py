# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class V1LitePublishedCloudSpaceResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'display_name': 'str',
        'engagement_counts': 'dict(str, str)',
        'id': 'str',
        'name': 'str',
        'project_id': 'str',
        'project_name': 'str',
        'project_owner_id': 'str',
        'project_owner_name': 'str',
        'project_owner_type': 'V1OwnerType',
        'studio_creator_avatar_url': 'str',
        'studio_creator_first_name': 'str',
        'studio_creator_id': 'str',
        'studio_creator_last_name': 'str',
        'studio_creator_username': 'str',
        'thumbnail_url': 'str'
    }

    attribute_map = {
        'description': 'description',
        'display_name': 'displayName',
        'engagement_counts': 'engagementCounts',
        'id': 'id',
        'name': 'name',
        'project_id': 'projectId',
        'project_name': 'projectName',
        'project_owner_id': 'projectOwnerId',
        'project_owner_name': 'projectOwnerName',
        'project_owner_type': 'projectOwnerType',
        'studio_creator_avatar_url': 'studioCreatorAvatarUrl',
        'studio_creator_first_name': 'studioCreatorFirstName',
        'studio_creator_id': 'studioCreatorId',
        'studio_creator_last_name': 'studioCreatorLastName',
        'studio_creator_username': 'studioCreatorUsername',
        'thumbnail_url': 'thumbnailUrl'
    }

    def __init__(self, description: 'str' =None, display_name: 'str' =None, engagement_counts: 'dict(str, str)' =None, id: 'str' =None, name: 'str' =None, project_id: 'str' =None, project_name: 'str' =None, project_owner_id: 'str' =None, project_owner_name: 'str' =None, project_owner_type: 'V1OwnerType' =None, studio_creator_avatar_url: 'str' =None, studio_creator_first_name: 'str' =None, studio_creator_id: 'str' =None, studio_creator_last_name: 'str' =None, studio_creator_username: 'str' =None, thumbnail_url: 'str' =None):  # noqa: E501
        """V1LitePublishedCloudSpaceResponse - a model defined in Swagger"""  # noqa: E501
        self._description = None
        self._display_name = None
        self._engagement_counts = None
        self._id = None
        self._name = None
        self._project_id = None
        self._project_name = None
        self._project_owner_id = None
        self._project_owner_name = None
        self._project_owner_type = None
        self._studio_creator_avatar_url = None
        self._studio_creator_first_name = None
        self._studio_creator_id = None
        self._studio_creator_last_name = None
        self._studio_creator_username = None
        self._thumbnail_url = None
        self.discriminator = None
        if description is not None:
            self.description = description
        if display_name is not None:
            self.display_name = display_name
        if engagement_counts is not None:
            self.engagement_counts = engagement_counts
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if project_id is not None:
            self.project_id = project_id
        if project_name is not None:
            self.project_name = project_name
        if project_owner_id is not None:
            self.project_owner_id = project_owner_id
        if project_owner_name is not None:
            self.project_owner_name = project_owner_name
        if project_owner_type is not None:
            self.project_owner_type = project_owner_type
        if studio_creator_avatar_url is not None:
            self.studio_creator_avatar_url = studio_creator_avatar_url
        if studio_creator_first_name is not None:
            self.studio_creator_first_name = studio_creator_first_name
        if studio_creator_id is not None:
            self.studio_creator_id = studio_creator_id
        if studio_creator_last_name is not None:
            self.studio_creator_last_name = studio_creator_last_name
        if studio_creator_username is not None:
            self.studio_creator_username = studio_creator_username
        if thumbnail_url is not None:
            self.thumbnail_url = thumbnail_url

    @property
    def description(self) -> 'str':
        """Gets the description of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The description of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: 'str'):
        """Sets the description of this V1LitePublishedCloudSpaceResponse.


        :param description: The description of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def display_name(self) -> 'str':
        """Gets the display_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The display_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: 'str'):
        """Sets the display_name of this V1LitePublishedCloudSpaceResponse.


        :param display_name: The display_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def engagement_counts(self) -> 'dict(str, str)':
        """Gets the engagement_counts of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The engagement_counts of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._engagement_counts

    @engagement_counts.setter
    def engagement_counts(self, engagement_counts: 'dict(str, str)'):
        """Sets the engagement_counts of this V1LitePublishedCloudSpaceResponse.


        :param engagement_counts: The engagement_counts of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: dict(str, str)
        """

        self._engagement_counts = engagement_counts

    @property
    def id(self) -> 'str':
        """Gets the id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: 'str'):
        """Sets the id of this V1LitePublishedCloudSpaceResponse.


        :param id: The id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self) -> 'str':
        """Gets the name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: 'str'):
        """Sets the name of this V1LitePublishedCloudSpaceResponse.


        :param name: The name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def project_id(self) -> 'str':
        """Gets the project_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The project_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: 'str'):
        """Sets the project_id of this V1LitePublishedCloudSpaceResponse.


        :param project_id: The project_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._project_id = project_id

    @property
    def project_name(self) -> 'str':
        """Gets the project_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The project_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name: 'str'):
        """Sets the project_name of this V1LitePublishedCloudSpaceResponse.


        :param project_name: The project_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def project_owner_id(self) -> 'str':
        """Gets the project_owner_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The project_owner_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_owner_id

    @project_owner_id.setter
    def project_owner_id(self, project_owner_id: 'str'):
        """Sets the project_owner_id of this V1LitePublishedCloudSpaceResponse.


        :param project_owner_id: The project_owner_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._project_owner_id = project_owner_id

    @property
    def project_owner_name(self) -> 'str':
        """Gets the project_owner_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The project_owner_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_owner_name

    @project_owner_name.setter
    def project_owner_name(self, project_owner_name: 'str'):
        """Sets the project_owner_name of this V1LitePublishedCloudSpaceResponse.


        :param project_owner_name: The project_owner_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._project_owner_name = project_owner_name

    @property
    def project_owner_type(self) -> 'V1OwnerType':
        """Gets the project_owner_type of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The project_owner_type of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: V1OwnerType
        """
        return self._project_owner_type

    @project_owner_type.setter
    def project_owner_type(self, project_owner_type: 'V1OwnerType'):
        """Sets the project_owner_type of this V1LitePublishedCloudSpaceResponse.


        :param project_owner_type: The project_owner_type of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: V1OwnerType
        """

        self._project_owner_type = project_owner_type

    @property
    def studio_creator_avatar_url(self) -> 'str':
        """Gets the studio_creator_avatar_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The studio_creator_avatar_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._studio_creator_avatar_url

    @studio_creator_avatar_url.setter
    def studio_creator_avatar_url(self, studio_creator_avatar_url: 'str'):
        """Sets the studio_creator_avatar_url of this V1LitePublishedCloudSpaceResponse.


        :param studio_creator_avatar_url: The studio_creator_avatar_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._studio_creator_avatar_url = studio_creator_avatar_url

    @property
    def studio_creator_first_name(self) -> 'str':
        """Gets the studio_creator_first_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The studio_creator_first_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._studio_creator_first_name

    @studio_creator_first_name.setter
    def studio_creator_first_name(self, studio_creator_first_name: 'str'):
        """Sets the studio_creator_first_name of this V1LitePublishedCloudSpaceResponse.


        :param studio_creator_first_name: The studio_creator_first_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._studio_creator_first_name = studio_creator_first_name

    @property
    def studio_creator_id(self) -> 'str':
        """Gets the studio_creator_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The studio_creator_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._studio_creator_id

    @studio_creator_id.setter
    def studio_creator_id(self, studio_creator_id: 'str'):
        """Sets the studio_creator_id of this V1LitePublishedCloudSpaceResponse.


        :param studio_creator_id: The studio_creator_id of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._studio_creator_id = studio_creator_id

    @property
    def studio_creator_last_name(self) -> 'str':
        """Gets the studio_creator_last_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The studio_creator_last_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._studio_creator_last_name

    @studio_creator_last_name.setter
    def studio_creator_last_name(self, studio_creator_last_name: 'str'):
        """Sets the studio_creator_last_name of this V1LitePublishedCloudSpaceResponse.


        :param studio_creator_last_name: The studio_creator_last_name of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._studio_creator_last_name = studio_creator_last_name

    @property
    def studio_creator_username(self) -> 'str':
        """Gets the studio_creator_username of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The studio_creator_username of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._studio_creator_username

    @studio_creator_username.setter
    def studio_creator_username(self, studio_creator_username: 'str'):
        """Sets the studio_creator_username of this V1LitePublishedCloudSpaceResponse.


        :param studio_creator_username: The studio_creator_username of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._studio_creator_username = studio_creator_username

    @property
    def thumbnail_url(self) -> 'str':
        """Gets the thumbnail_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501


        :return: The thumbnail_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url: 'str'):
        """Sets the thumbnail_url of this V1LitePublishedCloudSpaceResponse.


        :param thumbnail_url: The thumbnail_url of this V1LitePublishedCloudSpaceResponse.  # noqa: E501
        :type: str
        """

        self._thumbnail_url = thumbnail_url

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1LitePublishedCloudSpaceResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'V1LitePublishedCloudSpaceResponse') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, V1LitePublishedCloudSpaceResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'V1LitePublishedCloudSpaceResponse') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
