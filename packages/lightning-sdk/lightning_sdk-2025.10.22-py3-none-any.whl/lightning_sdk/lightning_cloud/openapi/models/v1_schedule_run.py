# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class V1ScheduleRun(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'action_type': 'V1ScheduleActionType',
        'command': 'str',
        'created_at': 'datetime',
        'id': 'str',
        'output': 'str',
        'project_id': 'str',
        'resource_id': 'str',
        'schedule_id': 'str',
        'state': 'str',
        'stopped_at': 'datetime'
    }

    attribute_map = {
        'action_type': 'actionType',
        'command': 'command',
        'created_at': 'createdAt',
        'id': 'id',
        'output': 'output',
        'project_id': 'projectId',
        'resource_id': 'resourceId',
        'schedule_id': 'scheduleId',
        'state': 'state',
        'stopped_at': 'stoppedAt'
    }

    def __init__(self, action_type: 'V1ScheduleActionType' =None, command: 'str' =None, created_at: 'datetime' =None, id: 'str' =None, output: 'str' =None, project_id: 'str' =None, resource_id: 'str' =None, schedule_id: 'str' =None, state: 'str' =None, stopped_at: 'datetime' =None):  # noqa: E501
        """V1ScheduleRun - a model defined in Swagger"""  # noqa: E501
        self._action_type = None
        self._command = None
        self._created_at = None
        self._id = None
        self._output = None
        self._project_id = None
        self._resource_id = None
        self._schedule_id = None
        self._state = None
        self._stopped_at = None
        self.discriminator = None
        if action_type is not None:
            self.action_type = action_type
        if command is not None:
            self.command = command
        if created_at is not None:
            self.created_at = created_at
        if id is not None:
            self.id = id
        if output is not None:
            self.output = output
        if project_id is not None:
            self.project_id = project_id
        if resource_id is not None:
            self.resource_id = resource_id
        if schedule_id is not None:
            self.schedule_id = schedule_id
        if state is not None:
            self.state = state
        if stopped_at is not None:
            self.stopped_at = stopped_at

    @property
    def action_type(self) -> 'V1ScheduleActionType':
        """Gets the action_type of this V1ScheduleRun.  # noqa: E501


        :return: The action_type of this V1ScheduleRun.  # noqa: E501
        :rtype: V1ScheduleActionType
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type: 'V1ScheduleActionType'):
        """Sets the action_type of this V1ScheduleRun.


        :param action_type: The action_type of this V1ScheduleRun.  # noqa: E501
        :type: V1ScheduleActionType
        """

        self._action_type = action_type

    @property
    def command(self) -> 'str':
        """Gets the command of this V1ScheduleRun.  # noqa: E501


        :return: The command of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._command

    @command.setter
    def command(self, command: 'str'):
        """Sets the command of this V1ScheduleRun.


        :param command: The command of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._command = command

    @property
    def created_at(self) -> 'datetime':
        """Gets the created_at of this V1ScheduleRun.  # noqa: E501


        :return: The created_at of this V1ScheduleRun.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: 'datetime'):
        """Sets the created_at of this V1ScheduleRun.


        :param created_at: The created_at of this V1ScheduleRun.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def id(self) -> 'str':
        """Gets the id of this V1ScheduleRun.  # noqa: E501


        :return: The id of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: 'str'):
        """Sets the id of this V1ScheduleRun.


        :param id: The id of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def output(self) -> 'str':
        """Gets the output of this V1ScheduleRun.  # noqa: E501


        :return: The output of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._output

    @output.setter
    def output(self, output: 'str'):
        """Sets the output of this V1ScheduleRun.


        :param output: The output of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._output = output

    @property
    def project_id(self) -> 'str':
        """Gets the project_id of this V1ScheduleRun.  # noqa: E501


        :return: The project_id of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: 'str'):
        """Sets the project_id of this V1ScheduleRun.


        :param project_id: The project_id of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._project_id = project_id

    @property
    def resource_id(self) -> 'str':
        """Gets the resource_id of this V1ScheduleRun.  # noqa: E501


        :return: The resource_id of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id: 'str'):
        """Sets the resource_id of this V1ScheduleRun.


        :param resource_id: The resource_id of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._resource_id = resource_id

    @property
    def schedule_id(self) -> 'str':
        """Gets the schedule_id of this V1ScheduleRun.  # noqa: E501


        :return: The schedule_id of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._schedule_id

    @schedule_id.setter
    def schedule_id(self, schedule_id: 'str'):
        """Sets the schedule_id of this V1ScheduleRun.


        :param schedule_id: The schedule_id of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._schedule_id = schedule_id

    @property
    def state(self) -> 'str':
        """Gets the state of this V1ScheduleRun.  # noqa: E501


        :return: The state of this V1ScheduleRun.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: 'str'):
        """Sets the state of this V1ScheduleRun.


        :param state: The state of this V1ScheduleRun.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def stopped_at(self) -> 'datetime':
        """Gets the stopped_at of this V1ScheduleRun.  # noqa: E501


        :return: The stopped_at of this V1ScheduleRun.  # noqa: E501
        :rtype: datetime
        """
        return self._stopped_at

    @stopped_at.setter
    def stopped_at(self, stopped_at: 'datetime'):
        """Sets the stopped_at of this V1ScheduleRun.


        :param stopped_at: The stopped_at of this V1ScheduleRun.  # noqa: E501
        :type: datetime
        """

        self._stopped_at = stopped_at

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1ScheduleRun, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'V1ScheduleRun') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, V1ScheduleRun):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'V1ScheduleRun') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
