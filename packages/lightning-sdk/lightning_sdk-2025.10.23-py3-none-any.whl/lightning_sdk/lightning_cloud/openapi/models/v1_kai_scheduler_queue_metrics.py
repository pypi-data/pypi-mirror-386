# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class V1KaiSchedulerQueueMetrics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'allocated_cpu_millicores': 'int',
        'allocated_gpus': 'int',
        'allocated_memory_bytes': 'str',
        'allocated_non_preemptible_cpu_millicores': 'int',
        'allocated_non_preemptible_gpus': 'int',
        'allocated_non_preemptible_memory_bytes': 'str',
        'allocated_non_preemptible_rdma_devices': 'int',
        'allocated_rdma_devices': 'int',
        'name': 'str',
        'parent_queue': 'str',
        'quota_cpu_millicores': 'int',
        'quota_gpus': 'int',
        'quota_memory_bytes': 'str',
        'quota_rdma_devices': 'int',
        'requested_cpu_millicores': 'int',
        'requested_gpus': 'int',
        'requested_memory_bytes': 'str',
        'requested_rdma_devices': 'int',
        'timestamp': 'datetime'
    }

    attribute_map = {
        'allocated_cpu_millicores': 'allocatedCpuMillicores',
        'allocated_gpus': 'allocatedGpus',
        'allocated_memory_bytes': 'allocatedMemoryBytes',
        'allocated_non_preemptible_cpu_millicores': 'allocatedNonPreemptibleCpuMillicores',
        'allocated_non_preemptible_gpus': 'allocatedNonPreemptibleGpus',
        'allocated_non_preemptible_memory_bytes': 'allocatedNonPreemptibleMemoryBytes',
        'allocated_non_preemptible_rdma_devices': 'allocatedNonPreemptibleRdmaDevices',
        'allocated_rdma_devices': 'allocatedRdmaDevices',
        'name': 'name',
        'parent_queue': 'parentQueue',
        'quota_cpu_millicores': 'quotaCpuMillicores',
        'quota_gpus': 'quotaGpus',
        'quota_memory_bytes': 'quotaMemoryBytes',
        'quota_rdma_devices': 'quotaRdmaDevices',
        'requested_cpu_millicores': 'requestedCpuMillicores',
        'requested_gpus': 'requestedGpus',
        'requested_memory_bytes': 'requestedMemoryBytes',
        'requested_rdma_devices': 'requestedRdmaDevices',
        'timestamp': 'timestamp'
    }

    def __init__(self, allocated_cpu_millicores: 'int' =None, allocated_gpus: 'int' =None, allocated_memory_bytes: 'str' =None, allocated_non_preemptible_cpu_millicores: 'int' =None, allocated_non_preemptible_gpus: 'int' =None, allocated_non_preemptible_memory_bytes: 'str' =None, allocated_non_preemptible_rdma_devices: 'int' =None, allocated_rdma_devices: 'int' =None, name: 'str' =None, parent_queue: 'str' =None, quota_cpu_millicores: 'int' =None, quota_gpus: 'int' =None, quota_memory_bytes: 'str' =None, quota_rdma_devices: 'int' =None, requested_cpu_millicores: 'int' =None, requested_gpus: 'int' =None, requested_memory_bytes: 'str' =None, requested_rdma_devices: 'int' =None, timestamp: 'datetime' =None):  # noqa: E501
        """V1KaiSchedulerQueueMetrics - a model defined in Swagger"""  # noqa: E501
        self._allocated_cpu_millicores = None
        self._allocated_gpus = None
        self._allocated_memory_bytes = None
        self._allocated_non_preemptible_cpu_millicores = None
        self._allocated_non_preemptible_gpus = None
        self._allocated_non_preemptible_memory_bytes = None
        self._allocated_non_preemptible_rdma_devices = None
        self._allocated_rdma_devices = None
        self._name = None
        self._parent_queue = None
        self._quota_cpu_millicores = None
        self._quota_gpus = None
        self._quota_memory_bytes = None
        self._quota_rdma_devices = None
        self._requested_cpu_millicores = None
        self._requested_gpus = None
        self._requested_memory_bytes = None
        self._requested_rdma_devices = None
        self._timestamp = None
        self.discriminator = None
        if allocated_cpu_millicores is not None:
            self.allocated_cpu_millicores = allocated_cpu_millicores
        if allocated_gpus is not None:
            self.allocated_gpus = allocated_gpus
        if allocated_memory_bytes is not None:
            self.allocated_memory_bytes = allocated_memory_bytes
        if allocated_non_preemptible_cpu_millicores is not None:
            self.allocated_non_preemptible_cpu_millicores = allocated_non_preemptible_cpu_millicores
        if allocated_non_preemptible_gpus is not None:
            self.allocated_non_preemptible_gpus = allocated_non_preemptible_gpus
        if allocated_non_preemptible_memory_bytes is not None:
            self.allocated_non_preemptible_memory_bytes = allocated_non_preemptible_memory_bytes
        if allocated_non_preemptible_rdma_devices is not None:
            self.allocated_non_preemptible_rdma_devices = allocated_non_preemptible_rdma_devices
        if allocated_rdma_devices is not None:
            self.allocated_rdma_devices = allocated_rdma_devices
        if name is not None:
            self.name = name
        if parent_queue is not None:
            self.parent_queue = parent_queue
        if quota_cpu_millicores is not None:
            self.quota_cpu_millicores = quota_cpu_millicores
        if quota_gpus is not None:
            self.quota_gpus = quota_gpus
        if quota_memory_bytes is not None:
            self.quota_memory_bytes = quota_memory_bytes
        if quota_rdma_devices is not None:
            self.quota_rdma_devices = quota_rdma_devices
        if requested_cpu_millicores is not None:
            self.requested_cpu_millicores = requested_cpu_millicores
        if requested_gpus is not None:
            self.requested_gpus = requested_gpus
        if requested_memory_bytes is not None:
            self.requested_memory_bytes = requested_memory_bytes
        if requested_rdma_devices is not None:
            self.requested_rdma_devices = requested_rdma_devices
        if timestamp is not None:
            self.timestamp = timestamp

    @property
    def allocated_cpu_millicores(self) -> 'int':
        """Gets the allocated_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total allocated CPU in millicores.  # noqa: E501

        :return: The allocated_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_cpu_millicores

    @allocated_cpu_millicores.setter
    def allocated_cpu_millicores(self, allocated_cpu_millicores: 'int'):
        """Sets the allocated_cpu_millicores of this V1KaiSchedulerQueueMetrics.

        Total allocated CPU in millicores.  # noqa: E501

        :param allocated_cpu_millicores: The allocated_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_cpu_millicores = allocated_cpu_millicores

    @property
    def allocated_gpus(self) -> 'int':
        """Gets the allocated_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total allocated GPUs.  # noqa: E501

        :return: The allocated_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_gpus

    @allocated_gpus.setter
    def allocated_gpus(self, allocated_gpus: 'int'):
        """Sets the allocated_gpus of this V1KaiSchedulerQueueMetrics.

        Total allocated GPUs.  # noqa: E501

        :param allocated_gpus: The allocated_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_gpus = allocated_gpus

    @property
    def allocated_memory_bytes(self) -> 'str':
        """Gets the allocated_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total allocated memory in bytes.  # noqa: E501

        :return: The allocated_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._allocated_memory_bytes

    @allocated_memory_bytes.setter
    def allocated_memory_bytes(self, allocated_memory_bytes: 'str'):
        """Sets the allocated_memory_bytes of this V1KaiSchedulerQueueMetrics.

        Total allocated memory in bytes.  # noqa: E501

        :param allocated_memory_bytes: The allocated_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._allocated_memory_bytes = allocated_memory_bytes

    @property
    def allocated_non_preemptible_cpu_millicores(self) -> 'int':
        """Gets the allocated_non_preemptible_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Non-preemptible allocated CPU in millicores.  # noqa: E501

        :return: The allocated_non_preemptible_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_non_preemptible_cpu_millicores

    @allocated_non_preemptible_cpu_millicores.setter
    def allocated_non_preemptible_cpu_millicores(self, allocated_non_preemptible_cpu_millicores: 'int'):
        """Sets the allocated_non_preemptible_cpu_millicores of this V1KaiSchedulerQueueMetrics.

        Non-preemptible allocated CPU in millicores.  # noqa: E501

        :param allocated_non_preemptible_cpu_millicores: The allocated_non_preemptible_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_non_preemptible_cpu_millicores = allocated_non_preemptible_cpu_millicores

    @property
    def allocated_non_preemptible_gpus(self) -> 'int':
        """Gets the allocated_non_preemptible_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Non-preemptible allocated GPUs.  # noqa: E501

        :return: The allocated_non_preemptible_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_non_preemptible_gpus

    @allocated_non_preemptible_gpus.setter
    def allocated_non_preemptible_gpus(self, allocated_non_preemptible_gpus: 'int'):
        """Sets the allocated_non_preemptible_gpus of this V1KaiSchedulerQueueMetrics.

        Non-preemptible allocated GPUs.  # noqa: E501

        :param allocated_non_preemptible_gpus: The allocated_non_preemptible_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_non_preemptible_gpus = allocated_non_preemptible_gpus

    @property
    def allocated_non_preemptible_memory_bytes(self) -> 'str':
        """Gets the allocated_non_preemptible_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Non-preemptible allocated memory in bytes.  # noqa: E501

        :return: The allocated_non_preemptible_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._allocated_non_preemptible_memory_bytes

    @allocated_non_preemptible_memory_bytes.setter
    def allocated_non_preemptible_memory_bytes(self, allocated_non_preemptible_memory_bytes: 'str'):
        """Sets the allocated_non_preemptible_memory_bytes of this V1KaiSchedulerQueueMetrics.

        Non-preemptible allocated memory in bytes.  # noqa: E501

        :param allocated_non_preemptible_memory_bytes: The allocated_non_preemptible_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._allocated_non_preemptible_memory_bytes = allocated_non_preemptible_memory_bytes

    @property
    def allocated_non_preemptible_rdma_devices(self) -> 'int':
        """Gets the allocated_non_preemptible_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Non-preemptible allocated RDMA devices.  # noqa: E501

        :return: The allocated_non_preemptible_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_non_preemptible_rdma_devices

    @allocated_non_preemptible_rdma_devices.setter
    def allocated_non_preemptible_rdma_devices(self, allocated_non_preemptible_rdma_devices: 'int'):
        """Sets the allocated_non_preemptible_rdma_devices of this V1KaiSchedulerQueueMetrics.

        Non-preemptible allocated RDMA devices.  # noqa: E501

        :param allocated_non_preemptible_rdma_devices: The allocated_non_preemptible_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_non_preemptible_rdma_devices = allocated_non_preemptible_rdma_devices

    @property
    def allocated_rdma_devices(self) -> 'int':
        """Gets the allocated_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total allocated RDMA devices.  # noqa: E501

        :return: The allocated_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._allocated_rdma_devices

    @allocated_rdma_devices.setter
    def allocated_rdma_devices(self, allocated_rdma_devices: 'int'):
        """Sets the allocated_rdma_devices of this V1KaiSchedulerQueueMetrics.

        Total allocated RDMA devices.  # noqa: E501

        :param allocated_rdma_devices: The allocated_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._allocated_rdma_devices = allocated_rdma_devices

    @property
    def name(self) -> 'str':
        """Gets the name of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        The name of the queue (e.g., \"text-queue\").  # noqa: E501

        :return: The name of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: 'str'):
        """Sets the name of this V1KaiSchedulerQueueMetrics.

        The name of the queue (e.g., \"text-queue\").  # noqa: E501

        :param name: The name of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def parent_queue(self) -> 'str':
        """Gets the parent_queue of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        The name of the parent queue (e.g., \"cluster-queue\"). Will be empty for root queues.  # noqa: E501

        :return: The parent_queue of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._parent_queue

    @parent_queue.setter
    def parent_queue(self, parent_queue: 'str'):
        """Sets the parent_queue of this V1KaiSchedulerQueueMetrics.

        The name of the parent queue (e.g., \"cluster-queue\"). Will be empty for root queues.  # noqa: E501

        :param parent_queue: The parent_queue of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._parent_queue = parent_queue

    @property
    def quota_cpu_millicores(self) -> 'int':
        """Gets the quota_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        CPU quota stored in millicores to avoid floats (e.g., 1.5 cores is stored as 1500).  # noqa: E501

        :return: The quota_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._quota_cpu_millicores

    @quota_cpu_millicores.setter
    def quota_cpu_millicores(self, quota_cpu_millicores: 'int'):
        """Sets the quota_cpu_millicores of this V1KaiSchedulerQueueMetrics.

        CPU quota stored in millicores to avoid floats (e.g., 1.5 cores is stored as 1500).  # noqa: E501

        :param quota_cpu_millicores: The quota_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._quota_cpu_millicores = quota_cpu_millicores

    @property
    def quota_gpus(self) -> 'int':
        """Gets the quota_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        GPU quota is a whole number count.  # noqa: E501

        :return: The quota_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._quota_gpus

    @quota_gpus.setter
    def quota_gpus(self, quota_gpus: 'int'):
        """Sets the quota_gpus of this V1KaiSchedulerQueueMetrics.

        GPU quota is a whole number count.  # noqa: E501

        :param quota_gpus: The quota_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._quota_gpus = quota_gpus

    @property
    def quota_memory_bytes(self) -> 'str':
        """Gets the quota_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Memory quota stored in bytes. uint64 is required for large values (terabytes).  # noqa: E501

        :return: The quota_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._quota_memory_bytes

    @quota_memory_bytes.setter
    def quota_memory_bytes(self, quota_memory_bytes: 'str'):
        """Sets the quota_memory_bytes of this V1KaiSchedulerQueueMetrics.

        Memory quota stored in bytes. uint64 is required for large values (terabytes).  # noqa: E501

        :param quota_memory_bytes: The quota_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._quota_memory_bytes = quota_memory_bytes

    @property
    def quota_rdma_devices(self) -> 'int':
        """Gets the quota_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        RDMA device quota is a whole number count.  # noqa: E501

        :return: The quota_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._quota_rdma_devices

    @quota_rdma_devices.setter
    def quota_rdma_devices(self, quota_rdma_devices: 'int'):
        """Sets the quota_rdma_devices of this V1KaiSchedulerQueueMetrics.

        RDMA device quota is a whole number count.  # noqa: E501

        :param quota_rdma_devices: The quota_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._quota_rdma_devices = quota_rdma_devices

    @property
    def requested_cpu_millicores(self) -> 'int':
        """Gets the requested_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total requested CPU in millicores.  # noqa: E501

        :return: The requested_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._requested_cpu_millicores

    @requested_cpu_millicores.setter
    def requested_cpu_millicores(self, requested_cpu_millicores: 'int'):
        """Sets the requested_cpu_millicores of this V1KaiSchedulerQueueMetrics.

        Total requested CPU in millicores.  # noqa: E501

        :param requested_cpu_millicores: The requested_cpu_millicores of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._requested_cpu_millicores = requested_cpu_millicores

    @property
    def requested_gpus(self) -> 'int':
        """Gets the requested_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total requested GPUs.  # noqa: E501

        :return: The requested_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._requested_gpus

    @requested_gpus.setter
    def requested_gpus(self, requested_gpus: 'int'):
        """Sets the requested_gpus of this V1KaiSchedulerQueueMetrics.

        Total requested GPUs.  # noqa: E501

        :param requested_gpus: The requested_gpus of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._requested_gpus = requested_gpus

    @property
    def requested_memory_bytes(self) -> 'str':
        """Gets the requested_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total requested memory in bytes.  # noqa: E501

        :return: The requested_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: str
        """
        return self._requested_memory_bytes

    @requested_memory_bytes.setter
    def requested_memory_bytes(self, requested_memory_bytes: 'str'):
        """Sets the requested_memory_bytes of this V1KaiSchedulerQueueMetrics.

        Total requested memory in bytes.  # noqa: E501

        :param requested_memory_bytes: The requested_memory_bytes of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: str
        """

        self._requested_memory_bytes = requested_memory_bytes

    @property
    def requested_rdma_devices(self) -> 'int':
        """Gets the requested_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501

        Total requested RDMA devices.  # noqa: E501

        :return: The requested_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: int
        """
        return self._requested_rdma_devices

    @requested_rdma_devices.setter
    def requested_rdma_devices(self, requested_rdma_devices: 'int'):
        """Sets the requested_rdma_devices of this V1KaiSchedulerQueueMetrics.

        Total requested RDMA devices.  # noqa: E501

        :param requested_rdma_devices: The requested_rdma_devices of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: int
        """

        self._requested_rdma_devices = requested_rdma_devices

    @property
    def timestamp(self) -> 'datetime':
        """Gets the timestamp of this V1KaiSchedulerQueueMetrics.  # noqa: E501


        :return: The timestamp of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: 'datetime'):
        """Sets the timestamp of this V1KaiSchedulerQueueMetrics.


        :param timestamp: The timestamp of this V1KaiSchedulerQueueMetrics.  # noqa: E501
        :type: datetime
        """

        self._timestamp = timestamp

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1KaiSchedulerQueueMetrics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'V1KaiSchedulerQueueMetrics') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, V1KaiSchedulerQueueMetrics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'V1KaiSchedulerQueueMetrics') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
