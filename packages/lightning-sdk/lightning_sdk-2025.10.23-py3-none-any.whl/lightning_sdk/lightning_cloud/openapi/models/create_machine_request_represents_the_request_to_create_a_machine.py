# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class CreateMachineRequestRepresentsTheRequestToCreateAMachine(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address': 'str',
        'instance_type': 'str',
        'management_api_url': 'str',
        'name': 'str',
        'org_id': 'str',
        'parent_cluster_id': 'str',
        'provider': 'str',
        'provider_instance_id': 'str',
        'provider_region': 'str',
        'provisioning_method': 'str',
        'resources': 'V1Resources',
        'tls_cert': 'str',
        'tls_key': 'str',
        'unschedulable': 'bool'
    }

    attribute_map = {
        'address': 'address',
        'instance_type': 'instanceType',
        'management_api_url': 'managementApiUrl',
        'name': 'name',
        'org_id': 'orgId',
        'parent_cluster_id': 'parentClusterId',
        'provider': 'provider',
        'provider_instance_id': 'providerInstanceId',
        'provider_region': 'providerRegion',
        'provisioning_method': 'provisioningMethod',
        'resources': 'resources',
        'tls_cert': 'tlsCert',
        'tls_key': 'tlsKey',
        'unschedulable': 'unschedulable'
    }

    def __init__(self, address: 'str' =None, instance_type: 'str' =None, management_api_url: 'str' =None, name: 'str' =None, org_id: 'str' =None, parent_cluster_id: 'str' =None, provider: 'str' =None, provider_instance_id: 'str' =None, provider_region: 'str' =None, provisioning_method: 'str' =None, resources: 'V1Resources' =None, tls_cert: 'str' =None, tls_key: 'str' =None, unschedulable: 'bool' =None):  # noqa: E501
        """CreateMachineRequestRepresentsTheRequestToCreateAMachine - a model defined in Swagger"""  # noqa: E501
        self._address = None
        self._instance_type = None
        self._management_api_url = None
        self._name = None
        self._org_id = None
        self._parent_cluster_id = None
        self._provider = None
        self._provider_instance_id = None
        self._provider_region = None
        self._provisioning_method = None
        self._resources = None
        self._tls_cert = None
        self._tls_key = None
        self._unschedulable = None
        self.discriminator = None
        if address is not None:
            self.address = address
        if instance_type is not None:
            self.instance_type = instance_type
        if management_api_url is not None:
            self.management_api_url = management_api_url
        if name is not None:
            self.name = name
        if org_id is not None:
            self.org_id = org_id
        if parent_cluster_id is not None:
            self.parent_cluster_id = parent_cluster_id
        if provider is not None:
            self.provider = provider
        if provider_instance_id is not None:
            self.provider_instance_id = provider_instance_id
        if provider_region is not None:
            self.provider_region = provider_region
        if provisioning_method is not None:
            self.provisioning_method = provisioning_method
        if resources is not None:
            self.resources = resources
        if tls_cert is not None:
            self.tls_cert = tls_cert
        if tls_key is not None:
            self.tls_key = tls_key
        if unschedulable is not None:
            self.unschedulable = unschedulable

    @property
    def address(self) -> 'str':
        """Gets the address of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The address of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: 'str'):
        """Sets the address of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param address: The address of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def instance_type(self) -> 'str':
        """Gets the instance_type of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The instance_type of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type: 'str'):
        """Sets the instance_type of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param instance_type: The instance_type of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._instance_type = instance_type

    @property
    def management_api_url(self) -> 'str':
        """Gets the management_api_url of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The management_api_url of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._management_api_url

    @management_api_url.setter
    def management_api_url(self, management_api_url: 'str'):
        """Sets the management_api_url of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param management_api_url: The management_api_url of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._management_api_url = management_api_url

    @property
    def name(self) -> 'str':
        """Gets the name of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The name of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: 'str'):
        """Sets the name of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param name: The name of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def org_id(self) -> 'str':
        """Gets the org_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The org_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._org_id

    @org_id.setter
    def org_id(self, org_id: 'str'):
        """Sets the org_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param org_id: The org_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._org_id = org_id

    @property
    def parent_cluster_id(self) -> 'str':
        """Gets the parent_cluster_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The parent_cluster_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._parent_cluster_id

    @parent_cluster_id.setter
    def parent_cluster_id(self, parent_cluster_id: 'str'):
        """Sets the parent_cluster_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param parent_cluster_id: The parent_cluster_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._parent_cluster_id = parent_cluster_id

    @property
    def provider(self) -> 'str':
        """Gets the provider of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The provider of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider: 'str'):
        """Sets the provider of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param provider: The provider of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._provider = provider

    @property
    def provider_instance_id(self) -> 'str':
        """Gets the provider_instance_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The provider_instance_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._provider_instance_id

    @provider_instance_id.setter
    def provider_instance_id(self, provider_instance_id: 'str'):
        """Sets the provider_instance_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param provider_instance_id: The provider_instance_id of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._provider_instance_id = provider_instance_id

    @property
    def provider_region(self) -> 'str':
        """Gets the provider_region of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The provider_region of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._provider_region

    @provider_region.setter
    def provider_region(self, provider_region: 'str'):
        """Sets the provider_region of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param provider_region: The provider_region of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._provider_region = provider_region

    @property
    def provisioning_method(self) -> 'str':
        """Gets the provisioning_method of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The provisioning_method of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._provisioning_method

    @provisioning_method.setter
    def provisioning_method(self, provisioning_method: 'str'):
        """Sets the provisioning_method of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param provisioning_method: The provisioning_method of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._provisioning_method = provisioning_method

    @property
    def resources(self) -> 'V1Resources':
        """Gets the resources of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The resources of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: V1Resources
        """
        return self._resources

    @resources.setter
    def resources(self, resources: 'V1Resources'):
        """Sets the resources of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param resources: The resources of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: V1Resources
        """

        self._resources = resources

    @property
    def tls_cert(self) -> 'str':
        """Gets the tls_cert of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The tls_cert of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._tls_cert

    @tls_cert.setter
    def tls_cert(self, tls_cert: 'str'):
        """Sets the tls_cert of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param tls_cert: The tls_cert of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._tls_cert = tls_cert

    @property
    def tls_key(self) -> 'str':
        """Gets the tls_key of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The tls_key of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: str
        """
        return self._tls_key

    @tls_key.setter
    def tls_key(self, tls_key: 'str'):
        """Sets the tls_key of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param tls_key: The tls_key of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: str
        """

        self._tls_key = tls_key

    @property
    def unschedulable(self) -> 'bool':
        """Gets the unschedulable of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501


        :return: The unschedulable of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :rtype: bool
        """
        return self._unschedulable

    @unschedulable.setter
    def unschedulable(self, unschedulable: 'bool'):
        """Sets the unschedulable of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.


        :param unschedulable: The unschedulable of this CreateMachineRequestRepresentsTheRequestToCreateAMachine.  # noqa: E501
        :type: bool
        """

        self._unschedulable = unschedulable

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateMachineRequestRepresentsTheRequestToCreateAMachine, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'CreateMachineRequestRepresentsTheRequestToCreateAMachine') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateMachineRequestRepresentsTheRequestToCreateAMachine):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'CreateMachineRequestRepresentsTheRequestToCreateAMachine') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
