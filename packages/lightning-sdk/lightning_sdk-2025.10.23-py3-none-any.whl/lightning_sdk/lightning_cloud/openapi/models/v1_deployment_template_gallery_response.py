# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class V1DeploymentTemplateGalleryResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'creation_timestamp': 'datetime',
        'creator_avatar_url': 'str',
        'creator_first_name': 'str',
        'creator_id': 'str',
        'creator_last_name': 'str',
        'creator_username': 'str',
        'description': 'str',
        'engagement_counts': 'dict(str, str)',
        'featured': 'bool',
        'id': 'str',
        'image_url': 'str',
        'name': 'str',
        'project_id': 'str',
        'project_name': 'str',
        'project_owner_id': 'str',
        'project_owner_name': 'str',
        'project_owner_type': 'V1OwnerType',
        'tags': 'list[V1ResourceTag]',
        'thumbnail_url': 'str'
    }

    attribute_map = {
        'creation_timestamp': 'creationTimestamp',
        'creator_avatar_url': 'creatorAvatarUrl',
        'creator_first_name': 'creatorFirstName',
        'creator_id': 'creatorId',
        'creator_last_name': 'creatorLastName',
        'creator_username': 'creatorUsername',
        'description': 'description',
        'engagement_counts': 'engagementCounts',
        'featured': 'featured',
        'id': 'id',
        'image_url': 'imageUrl',
        'name': 'name',
        'project_id': 'projectId',
        'project_name': 'projectName',
        'project_owner_id': 'projectOwnerId',
        'project_owner_name': 'projectOwnerName',
        'project_owner_type': 'projectOwnerType',
        'tags': 'tags',
        'thumbnail_url': 'thumbnailUrl'
    }

    def __init__(self, creation_timestamp: 'datetime' =None, creator_avatar_url: 'str' =None, creator_first_name: 'str' =None, creator_id: 'str' =None, creator_last_name: 'str' =None, creator_username: 'str' =None, description: 'str' =None, engagement_counts: 'dict(str, str)' =None, featured: 'bool' =None, id: 'str' =None, image_url: 'str' =None, name: 'str' =None, project_id: 'str' =None, project_name: 'str' =None, project_owner_id: 'str' =None, project_owner_name: 'str' =None, project_owner_type: 'V1OwnerType' =None, tags: 'list[V1ResourceTag]' =None, thumbnail_url: 'str' =None):  # noqa: E501
        """V1DeploymentTemplateGalleryResponse - a model defined in Swagger"""  # noqa: E501
        self._creation_timestamp = None
        self._creator_avatar_url = None
        self._creator_first_name = None
        self._creator_id = None
        self._creator_last_name = None
        self._creator_username = None
        self._description = None
        self._engagement_counts = None
        self._featured = None
        self._id = None
        self._image_url = None
        self._name = None
        self._project_id = None
        self._project_name = None
        self._project_owner_id = None
        self._project_owner_name = None
        self._project_owner_type = None
        self._tags = None
        self._thumbnail_url = None
        self.discriminator = None
        if creation_timestamp is not None:
            self.creation_timestamp = creation_timestamp
        if creator_avatar_url is not None:
            self.creator_avatar_url = creator_avatar_url
        if creator_first_name is not None:
            self.creator_first_name = creator_first_name
        if creator_id is not None:
            self.creator_id = creator_id
        if creator_last_name is not None:
            self.creator_last_name = creator_last_name
        if creator_username is not None:
            self.creator_username = creator_username
        if description is not None:
            self.description = description
        if engagement_counts is not None:
            self.engagement_counts = engagement_counts
        if featured is not None:
            self.featured = featured
        if id is not None:
            self.id = id
        if image_url is not None:
            self.image_url = image_url
        if name is not None:
            self.name = name
        if project_id is not None:
            self.project_id = project_id
        if project_name is not None:
            self.project_name = project_name
        if project_owner_id is not None:
            self.project_owner_id = project_owner_id
        if project_owner_name is not None:
            self.project_owner_name = project_owner_name
        if project_owner_type is not None:
            self.project_owner_type = project_owner_type
        if tags is not None:
            self.tags = tags
        if thumbnail_url is not None:
            self.thumbnail_url = thumbnail_url

    @property
    def creation_timestamp(self) -> 'datetime':
        """Gets the creation_timestamp of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creation_timestamp of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_timestamp

    @creation_timestamp.setter
    def creation_timestamp(self, creation_timestamp: 'datetime'):
        """Sets the creation_timestamp of this V1DeploymentTemplateGalleryResponse.


        :param creation_timestamp: The creation_timestamp of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: datetime
        """

        self._creation_timestamp = creation_timestamp

    @property
    def creator_avatar_url(self) -> 'str':
        """Gets the creator_avatar_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creator_avatar_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._creator_avatar_url

    @creator_avatar_url.setter
    def creator_avatar_url(self, creator_avatar_url: 'str'):
        """Sets the creator_avatar_url of this V1DeploymentTemplateGalleryResponse.


        :param creator_avatar_url: The creator_avatar_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._creator_avatar_url = creator_avatar_url

    @property
    def creator_first_name(self) -> 'str':
        """Gets the creator_first_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creator_first_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._creator_first_name

    @creator_first_name.setter
    def creator_first_name(self, creator_first_name: 'str'):
        """Sets the creator_first_name of this V1DeploymentTemplateGalleryResponse.


        :param creator_first_name: The creator_first_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._creator_first_name = creator_first_name

    @property
    def creator_id(self) -> 'str':
        """Gets the creator_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creator_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._creator_id

    @creator_id.setter
    def creator_id(self, creator_id: 'str'):
        """Sets the creator_id of this V1DeploymentTemplateGalleryResponse.


        :param creator_id: The creator_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._creator_id = creator_id

    @property
    def creator_last_name(self) -> 'str':
        """Gets the creator_last_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creator_last_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._creator_last_name

    @creator_last_name.setter
    def creator_last_name(self, creator_last_name: 'str'):
        """Sets the creator_last_name of this V1DeploymentTemplateGalleryResponse.


        :param creator_last_name: The creator_last_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._creator_last_name = creator_last_name

    @property
    def creator_username(self) -> 'str':
        """Gets the creator_username of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The creator_username of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._creator_username

    @creator_username.setter
    def creator_username(self, creator_username: 'str'):
        """Sets the creator_username of this V1DeploymentTemplateGalleryResponse.


        :param creator_username: The creator_username of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._creator_username = creator_username

    @property
    def description(self) -> 'str':
        """Gets the description of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The description of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: 'str'):
        """Sets the description of this V1DeploymentTemplateGalleryResponse.


        :param description: The description of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def engagement_counts(self) -> 'dict(str, str)':
        """Gets the engagement_counts of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The engagement_counts of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._engagement_counts

    @engagement_counts.setter
    def engagement_counts(self, engagement_counts: 'dict(str, str)'):
        """Sets the engagement_counts of this V1DeploymentTemplateGalleryResponse.


        :param engagement_counts: The engagement_counts of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: dict(str, str)
        """

        self._engagement_counts = engagement_counts

    @property
    def featured(self) -> 'bool':
        """Gets the featured of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The featured of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: bool
        """
        return self._featured

    @featured.setter
    def featured(self, featured: 'bool'):
        """Sets the featured of this V1DeploymentTemplateGalleryResponse.


        :param featured: The featured of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: bool
        """

        self._featured = featured

    @property
    def id(self) -> 'str':
        """Gets the id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: 'str'):
        """Sets the id of this V1DeploymentTemplateGalleryResponse.


        :param id: The id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def image_url(self) -> 'str':
        """Gets the image_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The image_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url: 'str'):
        """Sets the image_url of this V1DeploymentTemplateGalleryResponse.


        :param image_url: The image_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._image_url = image_url

    @property
    def name(self) -> 'str':
        """Gets the name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: 'str'):
        """Sets the name of this V1DeploymentTemplateGalleryResponse.


        :param name: The name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def project_id(self) -> 'str':
        """Gets the project_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The project_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: 'str'):
        """Sets the project_id of this V1DeploymentTemplateGalleryResponse.


        :param project_id: The project_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._project_id = project_id

    @property
    def project_name(self) -> 'str':
        """Gets the project_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The project_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name: 'str'):
        """Sets the project_name of this V1DeploymentTemplateGalleryResponse.


        :param project_name: The project_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def project_owner_id(self) -> 'str':
        """Gets the project_owner_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The project_owner_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_owner_id

    @project_owner_id.setter
    def project_owner_id(self, project_owner_id: 'str'):
        """Sets the project_owner_id of this V1DeploymentTemplateGalleryResponse.


        :param project_owner_id: The project_owner_id of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._project_owner_id = project_owner_id

    @property
    def project_owner_name(self) -> 'str':
        """Gets the project_owner_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The project_owner_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._project_owner_name

    @project_owner_name.setter
    def project_owner_name(self, project_owner_name: 'str'):
        """Sets the project_owner_name of this V1DeploymentTemplateGalleryResponse.


        :param project_owner_name: The project_owner_name of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._project_owner_name = project_owner_name

    @property
    def project_owner_type(self) -> 'V1OwnerType':
        """Gets the project_owner_type of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The project_owner_type of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: V1OwnerType
        """
        return self._project_owner_type

    @project_owner_type.setter
    def project_owner_type(self, project_owner_type: 'V1OwnerType'):
        """Sets the project_owner_type of this V1DeploymentTemplateGalleryResponse.


        :param project_owner_type: The project_owner_type of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: V1OwnerType
        """

        self._project_owner_type = project_owner_type

    @property
    def tags(self) -> 'list[V1ResourceTag]':
        """Gets the tags of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The tags of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: list[V1ResourceTag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: 'list[V1ResourceTag]'):
        """Sets the tags of this V1DeploymentTemplateGalleryResponse.


        :param tags: The tags of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: list[V1ResourceTag]
        """

        self._tags = tags

    @property
    def thumbnail_url(self) -> 'str':
        """Gets the thumbnail_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501


        :return: The thumbnail_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url: 'str'):
        """Sets the thumbnail_url of this V1DeploymentTemplateGalleryResponse.


        :param thumbnail_url: The thumbnail_url of this V1DeploymentTemplateGalleryResponse.  # noqa: E501
        :type: str
        """

        self._thumbnail_url = thumbnail_url

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1DeploymentTemplateGalleryResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'V1DeploymentTemplateGalleryResponse') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, V1DeploymentTemplateGalleryResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'V1DeploymentTemplateGalleryResponse') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
