# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class V1CloudSpaceVersion(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'about_page_content': 'str',
        'about_page_id': 'str',
        'cloud_space_id': 'str',
        'code_url': 'str',
        'code_version': 'V1CloudSpaceCodeVersion',
        'created_at': 'datetime',
        'description': 'str',
        'draft': 'bool',
        'globally_visible': 'bool',
        'hide_files': 'bool',
        'id': 'str',
        'license': 'str',
        'operating_cost': 'str',
        'paper_authors': 'str',
        'paper_org': 'str',
        'paper_org_avatar_url': 'str',
        'paper_url': 'str',
        'project_id': 'str',
        'unpublished': 'bool',
        'updated_at': 'datetime',
        'user_id': 'str',
        'version_name': 'str'
    }

    attribute_map = {
        'about_page_content': 'aboutPageContent',
        'about_page_id': 'aboutPageId',
        'cloud_space_id': 'cloudSpaceId',
        'code_url': 'codeUrl',
        'code_version': 'codeVersion',
        'created_at': 'createdAt',
        'description': 'description',
        'draft': 'draft',
        'globally_visible': 'globallyVisible',
        'hide_files': 'hideFiles',
        'id': 'id',
        'license': 'license',
        'operating_cost': 'operatingCost',
        'paper_authors': 'paperAuthors',
        'paper_org': 'paperOrg',
        'paper_org_avatar_url': 'paperOrgAvatarUrl',
        'paper_url': 'paperUrl',
        'project_id': 'projectId',
        'unpublished': 'unpublished',
        'updated_at': 'updatedAt',
        'user_id': 'userId',
        'version_name': 'versionName'
    }

    def __init__(self, about_page_content: 'str' =None, about_page_id: 'str' =None, cloud_space_id: 'str' =None, code_url: 'str' =None, code_version: 'V1CloudSpaceCodeVersion' =None, created_at: 'datetime' =None, description: 'str' =None, draft: 'bool' =None, globally_visible: 'bool' =None, hide_files: 'bool' =None, id: 'str' =None, license: 'str' =None, operating_cost: 'str' =None, paper_authors: 'str' =None, paper_org: 'str' =None, paper_org_avatar_url: 'str' =None, paper_url: 'str' =None, project_id: 'str' =None, unpublished: 'bool' =None, updated_at: 'datetime' =None, user_id: 'str' =None, version_name: 'str' =None):  # noqa: E501
        """V1CloudSpaceVersion - a model defined in Swagger"""  # noqa: E501
        self._about_page_content = None
        self._about_page_id = None
        self._cloud_space_id = None
        self._code_url = None
        self._code_version = None
        self._created_at = None
        self._description = None
        self._draft = None
        self._globally_visible = None
        self._hide_files = None
        self._id = None
        self._license = None
        self._operating_cost = None
        self._paper_authors = None
        self._paper_org = None
        self._paper_org_avatar_url = None
        self._paper_url = None
        self._project_id = None
        self._unpublished = None
        self._updated_at = None
        self._user_id = None
        self._version_name = None
        self.discriminator = None
        if about_page_content is not None:
            self.about_page_content = about_page_content
        if about_page_id is not None:
            self.about_page_id = about_page_id
        if cloud_space_id is not None:
            self.cloud_space_id = cloud_space_id
        if code_url is not None:
            self.code_url = code_url
        if code_version is not None:
            self.code_version = code_version
        if created_at is not None:
            self.created_at = created_at
        if description is not None:
            self.description = description
        if draft is not None:
            self.draft = draft
        if globally_visible is not None:
            self.globally_visible = globally_visible
        if hide_files is not None:
            self.hide_files = hide_files
        if id is not None:
            self.id = id
        if license is not None:
            self.license = license
        if operating_cost is not None:
            self.operating_cost = operating_cost
        if paper_authors is not None:
            self.paper_authors = paper_authors
        if paper_org is not None:
            self.paper_org = paper_org
        if paper_org_avatar_url is not None:
            self.paper_org_avatar_url = paper_org_avatar_url
        if paper_url is not None:
            self.paper_url = paper_url
        if project_id is not None:
            self.project_id = project_id
        if unpublished is not None:
            self.unpublished = unpublished
        if updated_at is not None:
            self.updated_at = updated_at
        if user_id is not None:
            self.user_id = user_id
        if version_name is not None:
            self.version_name = version_name

    @property
    def about_page_content(self) -> 'str':
        """Gets the about_page_content of this V1CloudSpaceVersion.  # noqa: E501


        :return: The about_page_content of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._about_page_content

    @about_page_content.setter
    def about_page_content(self, about_page_content: 'str'):
        """Sets the about_page_content of this V1CloudSpaceVersion.


        :param about_page_content: The about_page_content of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._about_page_content = about_page_content

    @property
    def about_page_id(self) -> 'str':
        """Gets the about_page_id of this V1CloudSpaceVersion.  # noqa: E501


        :return: The about_page_id of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._about_page_id

    @about_page_id.setter
    def about_page_id(self, about_page_id: 'str'):
        """Sets the about_page_id of this V1CloudSpaceVersion.


        :param about_page_id: The about_page_id of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._about_page_id = about_page_id

    @property
    def cloud_space_id(self) -> 'str':
        """Gets the cloud_space_id of this V1CloudSpaceVersion.  # noqa: E501


        :return: The cloud_space_id of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._cloud_space_id

    @cloud_space_id.setter
    def cloud_space_id(self, cloud_space_id: 'str'):
        """Sets the cloud_space_id of this V1CloudSpaceVersion.


        :param cloud_space_id: The cloud_space_id of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._cloud_space_id = cloud_space_id

    @property
    def code_url(self) -> 'str':
        """Gets the code_url of this V1CloudSpaceVersion.  # noqa: E501


        :return: The code_url of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._code_url

    @code_url.setter
    def code_url(self, code_url: 'str'):
        """Sets the code_url of this V1CloudSpaceVersion.


        :param code_url: The code_url of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._code_url = code_url

    @property
    def code_version(self) -> 'V1CloudSpaceCodeVersion':
        """Gets the code_version of this V1CloudSpaceVersion.  # noqa: E501


        :return: The code_version of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: V1CloudSpaceCodeVersion
        """
        return self._code_version

    @code_version.setter
    def code_version(self, code_version: 'V1CloudSpaceCodeVersion'):
        """Sets the code_version of this V1CloudSpaceVersion.


        :param code_version: The code_version of this V1CloudSpaceVersion.  # noqa: E501
        :type: V1CloudSpaceCodeVersion
        """

        self._code_version = code_version

    @property
    def created_at(self) -> 'datetime':
        """Gets the created_at of this V1CloudSpaceVersion.  # noqa: E501


        :return: The created_at of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: 'datetime'):
        """Sets the created_at of this V1CloudSpaceVersion.


        :param created_at: The created_at of this V1CloudSpaceVersion.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def description(self) -> 'str':
        """Gets the description of this V1CloudSpaceVersion.  # noqa: E501


        :return: The description of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: 'str'):
        """Sets the description of this V1CloudSpaceVersion.


        :param description: The description of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def draft(self) -> 'bool':
        """Gets the draft of this V1CloudSpaceVersion.  # noqa: E501


        :return: The draft of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: bool
        """
        return self._draft

    @draft.setter
    def draft(self, draft: 'bool'):
        """Sets the draft of this V1CloudSpaceVersion.


        :param draft: The draft of this V1CloudSpaceVersion.  # noqa: E501
        :type: bool
        """

        self._draft = draft

    @property
    def globally_visible(self) -> 'bool':
        """Gets the globally_visible of this V1CloudSpaceVersion.  # noqa: E501


        :return: The globally_visible of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: bool
        """
        return self._globally_visible

    @globally_visible.setter
    def globally_visible(self, globally_visible: 'bool'):
        """Sets the globally_visible of this V1CloudSpaceVersion.


        :param globally_visible: The globally_visible of this V1CloudSpaceVersion.  # noqa: E501
        :type: bool
        """

        self._globally_visible = globally_visible

    @property
    def hide_files(self) -> 'bool':
        """Gets the hide_files of this V1CloudSpaceVersion.  # noqa: E501


        :return: The hide_files of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: bool
        """
        return self._hide_files

    @hide_files.setter
    def hide_files(self, hide_files: 'bool'):
        """Sets the hide_files of this V1CloudSpaceVersion.


        :param hide_files: The hide_files of this V1CloudSpaceVersion.  # noqa: E501
        :type: bool
        """

        self._hide_files = hide_files

    @property
    def id(self) -> 'str':
        """Gets the id of this V1CloudSpaceVersion.  # noqa: E501


        :return: The id of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: 'str'):
        """Sets the id of this V1CloudSpaceVersion.


        :param id: The id of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def license(self) -> 'str':
        """Gets the license of this V1CloudSpaceVersion.  # noqa: E501


        :return: The license of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license: 'str'):
        """Sets the license of this V1CloudSpaceVersion.


        :param license: The license of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._license = license

    @property
    def operating_cost(self) -> 'str':
        """Gets the operating_cost of this V1CloudSpaceVersion.  # noqa: E501


        :return: The operating_cost of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._operating_cost

    @operating_cost.setter
    def operating_cost(self, operating_cost: 'str'):
        """Sets the operating_cost of this V1CloudSpaceVersion.


        :param operating_cost: The operating_cost of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._operating_cost = operating_cost

    @property
    def paper_authors(self) -> 'str':
        """Gets the paper_authors of this V1CloudSpaceVersion.  # noqa: E501


        :return: The paper_authors of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._paper_authors

    @paper_authors.setter
    def paper_authors(self, paper_authors: 'str'):
        """Sets the paper_authors of this V1CloudSpaceVersion.


        :param paper_authors: The paper_authors of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._paper_authors = paper_authors

    @property
    def paper_org(self) -> 'str':
        """Gets the paper_org of this V1CloudSpaceVersion.  # noqa: E501


        :return: The paper_org of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._paper_org

    @paper_org.setter
    def paper_org(self, paper_org: 'str'):
        """Sets the paper_org of this V1CloudSpaceVersion.


        :param paper_org: The paper_org of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._paper_org = paper_org

    @property
    def paper_org_avatar_url(self) -> 'str':
        """Gets the paper_org_avatar_url of this V1CloudSpaceVersion.  # noqa: E501


        :return: The paper_org_avatar_url of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._paper_org_avatar_url

    @paper_org_avatar_url.setter
    def paper_org_avatar_url(self, paper_org_avatar_url: 'str'):
        """Sets the paper_org_avatar_url of this V1CloudSpaceVersion.


        :param paper_org_avatar_url: The paper_org_avatar_url of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._paper_org_avatar_url = paper_org_avatar_url

    @property
    def paper_url(self) -> 'str':
        """Gets the paper_url of this V1CloudSpaceVersion.  # noqa: E501


        :return: The paper_url of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._paper_url

    @paper_url.setter
    def paper_url(self, paper_url: 'str'):
        """Sets the paper_url of this V1CloudSpaceVersion.


        :param paper_url: The paper_url of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._paper_url = paper_url

    @property
    def project_id(self) -> 'str':
        """Gets the project_id of this V1CloudSpaceVersion.  # noqa: E501


        :return: The project_id of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id: 'str'):
        """Sets the project_id of this V1CloudSpaceVersion.


        :param project_id: The project_id of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._project_id = project_id

    @property
    def unpublished(self) -> 'bool':
        """Gets the unpublished of this V1CloudSpaceVersion.  # noqa: E501


        :return: The unpublished of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: bool
        """
        return self._unpublished

    @unpublished.setter
    def unpublished(self, unpublished: 'bool'):
        """Sets the unpublished of this V1CloudSpaceVersion.


        :param unpublished: The unpublished of this V1CloudSpaceVersion.  # noqa: E501
        :type: bool
        """

        self._unpublished = unpublished

    @property
    def updated_at(self) -> 'datetime':
        """Gets the updated_at of this V1CloudSpaceVersion.  # noqa: E501


        :return: The updated_at of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: 'datetime'):
        """Sets the updated_at of this V1CloudSpaceVersion.


        :param updated_at: The updated_at of this V1CloudSpaceVersion.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def user_id(self) -> 'str':
        """Gets the user_id of this V1CloudSpaceVersion.  # noqa: E501


        :return: The user_id of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: 'str'):
        """Sets the user_id of this V1CloudSpaceVersion.


        :param user_id: The user_id of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def version_name(self) -> 'str':
        """Gets the version_name of this V1CloudSpaceVersion.  # noqa: E501


        :return: The version_name of this V1CloudSpaceVersion.  # noqa: E501
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name: 'str'):
        """Sets the version_name of this V1CloudSpaceVersion.


        :param version_name: The version_name of this V1CloudSpaceVersion.  # noqa: E501
        :type: str
        """

        self._version_name = version_name

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1CloudSpaceVersion, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'V1CloudSpaceVersion') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, V1CloudSpaceVersion):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'V1CloudSpaceVersion') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
