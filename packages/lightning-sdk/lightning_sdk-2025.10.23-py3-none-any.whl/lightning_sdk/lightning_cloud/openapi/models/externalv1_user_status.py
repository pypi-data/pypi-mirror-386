# coding: utf-8

"""
    external/v1/auth_service.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    NOTE
    ----
    standard swagger-codegen-cli for this python client has been modified
    by custom templates. The purpose of these templates is to include
    typing information in the API and Model code. Please refer to the
    main grid repository for more info
"""

import pprint
import re  # noqa: F401

from typing import TYPE_CHECKING

import six

if TYPE_CHECKING:
    from datetime import datetime
    from lightning_sdk.lightning_cloud.openapi.models import *

class Externalv1UserStatus(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'acked_storage_violation': 'bool',
        'auth_provider': 'str',
        'auto_verify_reason': 'str',
        'auto_verify_response': 'bool',
        'completed_project_onboarding': 'bool',
        'completed_signup': 'bool',
        'has_received_free_months': 'bool',
        'installed_grid': 'bool',
        'verified': 'bool',
        'verified_at': 'datetime'
    }

    attribute_map = {
        'acked_storage_violation': 'ackedStorageViolation',
        'auth_provider': 'authProvider',
        'auto_verify_reason': 'autoVerifyReason',
        'auto_verify_response': 'autoVerifyResponse',
        'completed_project_onboarding': 'completedProjectOnboarding',
        'completed_signup': 'completedSignup',
        'has_received_free_months': 'hasReceivedFreeMonths',
        'installed_grid': 'installedGrid',
        'verified': 'verified',
        'verified_at': 'verifiedAt'
    }

    def __init__(self, acked_storage_violation: 'bool' =None, auth_provider: 'str' =None, auto_verify_reason: 'str' =None, auto_verify_response: 'bool' =None, completed_project_onboarding: 'bool' =None, completed_signup: 'bool' =None, has_received_free_months: 'bool' =None, installed_grid: 'bool' =None, verified: 'bool' =None, verified_at: 'datetime' =None):  # noqa: E501
        """Externalv1UserStatus - a model defined in Swagger"""  # noqa: E501
        self._acked_storage_violation = None
        self._auth_provider = None
        self._auto_verify_reason = None
        self._auto_verify_response = None
        self._completed_project_onboarding = None
        self._completed_signup = None
        self._has_received_free_months = None
        self._installed_grid = None
        self._verified = None
        self._verified_at = None
        self.discriminator = None
        if acked_storage_violation is not None:
            self.acked_storage_violation = acked_storage_violation
        if auth_provider is not None:
            self.auth_provider = auth_provider
        if auto_verify_reason is not None:
            self.auto_verify_reason = auto_verify_reason
        if auto_verify_response is not None:
            self.auto_verify_response = auto_verify_response
        if completed_project_onboarding is not None:
            self.completed_project_onboarding = completed_project_onboarding
        if completed_signup is not None:
            self.completed_signup = completed_signup
        if has_received_free_months is not None:
            self.has_received_free_months = has_received_free_months
        if installed_grid is not None:
            self.installed_grid = installed_grid
        if verified is not None:
            self.verified = verified
        if verified_at is not None:
            self.verified_at = verified_at

    @property
    def acked_storage_violation(self) -> 'bool':
        """Gets the acked_storage_violation of this Externalv1UserStatus.  # noqa: E501


        :return: The acked_storage_violation of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._acked_storage_violation

    @acked_storage_violation.setter
    def acked_storage_violation(self, acked_storage_violation: 'bool'):
        """Sets the acked_storage_violation of this Externalv1UserStatus.


        :param acked_storage_violation: The acked_storage_violation of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._acked_storage_violation = acked_storage_violation

    @property
    def auth_provider(self) -> 'str':
        """Gets the auth_provider of this Externalv1UserStatus.  # noqa: E501


        :return: The auth_provider of this Externalv1UserStatus.  # noqa: E501
        :rtype: str
        """
        return self._auth_provider

    @auth_provider.setter
    def auth_provider(self, auth_provider: 'str'):
        """Sets the auth_provider of this Externalv1UserStatus.


        :param auth_provider: The auth_provider of this Externalv1UserStatus.  # noqa: E501
        :type: str
        """

        self._auth_provider = auth_provider

    @property
    def auto_verify_reason(self) -> 'str':
        """Gets the auto_verify_reason of this Externalv1UserStatus.  # noqa: E501


        :return: The auto_verify_reason of this Externalv1UserStatus.  # noqa: E501
        :rtype: str
        """
        return self._auto_verify_reason

    @auto_verify_reason.setter
    def auto_verify_reason(self, auto_verify_reason: 'str'):
        """Sets the auto_verify_reason of this Externalv1UserStatus.


        :param auto_verify_reason: The auto_verify_reason of this Externalv1UserStatus.  # noqa: E501
        :type: str
        """

        self._auto_verify_reason = auto_verify_reason

    @property
    def auto_verify_response(self) -> 'bool':
        """Gets the auto_verify_response of this Externalv1UserStatus.  # noqa: E501


        :return: The auto_verify_response of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._auto_verify_response

    @auto_verify_response.setter
    def auto_verify_response(self, auto_verify_response: 'bool'):
        """Sets the auto_verify_response of this Externalv1UserStatus.


        :param auto_verify_response: The auto_verify_response of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._auto_verify_response = auto_verify_response

    @property
    def completed_project_onboarding(self) -> 'bool':
        """Gets the completed_project_onboarding of this Externalv1UserStatus.  # noqa: E501


        :return: The completed_project_onboarding of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._completed_project_onboarding

    @completed_project_onboarding.setter
    def completed_project_onboarding(self, completed_project_onboarding: 'bool'):
        """Sets the completed_project_onboarding of this Externalv1UserStatus.


        :param completed_project_onboarding: The completed_project_onboarding of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._completed_project_onboarding = completed_project_onboarding

    @property
    def completed_signup(self) -> 'bool':
        """Gets the completed_signup of this Externalv1UserStatus.  # noqa: E501


        :return: The completed_signup of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._completed_signup

    @completed_signup.setter
    def completed_signup(self, completed_signup: 'bool'):
        """Sets the completed_signup of this Externalv1UserStatus.


        :param completed_signup: The completed_signup of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._completed_signup = completed_signup

    @property
    def has_received_free_months(self) -> 'bool':
        """Gets the has_received_free_months of this Externalv1UserStatus.  # noqa: E501


        :return: The has_received_free_months of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._has_received_free_months

    @has_received_free_months.setter
    def has_received_free_months(self, has_received_free_months: 'bool'):
        """Sets the has_received_free_months of this Externalv1UserStatus.


        :param has_received_free_months: The has_received_free_months of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._has_received_free_months = has_received_free_months

    @property
    def installed_grid(self) -> 'bool':
        """Gets the installed_grid of this Externalv1UserStatus.  # noqa: E501


        :return: The installed_grid of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._installed_grid

    @installed_grid.setter
    def installed_grid(self, installed_grid: 'bool'):
        """Sets the installed_grid of this Externalv1UserStatus.


        :param installed_grid: The installed_grid of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._installed_grid = installed_grid

    @property
    def verified(self) -> 'bool':
        """Gets the verified of this Externalv1UserStatus.  # noqa: E501


        :return: The verified of this Externalv1UserStatus.  # noqa: E501
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified: 'bool'):
        """Sets the verified of this Externalv1UserStatus.


        :param verified: The verified of this Externalv1UserStatus.  # noqa: E501
        :type: bool
        """

        self._verified = verified

    @property
    def verified_at(self) -> 'datetime':
        """Gets the verified_at of this Externalv1UserStatus.  # noqa: E501


        :return: The verified_at of this Externalv1UserStatus.  # noqa: E501
        :rtype: datetime
        """
        return self._verified_at

    @verified_at.setter
    def verified_at(self, verified_at: 'datetime'):
        """Sets the verified_at of this Externalv1UserStatus.


        :param verified_at: The verified_at of this Externalv1UserStatus.  # noqa: E501
        :type: datetime
        """

        self._verified_at = verified_at

    def to_dict(self) -> dict:
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Externalv1UserStatus, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self) -> str:
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other: 'Externalv1UserStatus') -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, Externalv1UserStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other: 'Externalv1UserStatus') -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
