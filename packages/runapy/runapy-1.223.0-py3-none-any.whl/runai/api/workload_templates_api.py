from typing import Optional, List
from datetime import datetime

from runai import models
from runai.api.runai_api_service import RunaiAPIService, deprecated_message


class WorkloadTemplatesApi(RunaiAPIService):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        self._api_client = api_client

    def count_templates(
        self,
        filter_by: Optional[List[str]] = None,
        search: Optional[str] = None,
    ):
        r"""


        ### Description
        Count templates. [Experimental]

        ### Parameters:
        ```python
        filter_by: Optional[List[str]]
        search: Optional[str]
        ```
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.
        search: Filter results by a free text search.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            filter_by=['[\"name!=some-template-name\",\"createdAt>=2021-01-01T00:00:00Z\"]'],
                        search='test project'
        )
        ```
        """

        # Query params:
        query_params = [
            ("filterBy", filter_by),
            ("search", search),
        ]
        resource_path = f"/api/v1/workload_templates/count".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def create_distributed_template(
        self,
        distributed_template_creation_request: Optional[
            models.DistributedTemplateCreationRequest
        ] = None,
    ):
        r"""


        ### Description
        Create a new distributed training template. [Experimental]

        ### Parameters:
        ```python
        distributed_template_creation_request: DistributedTemplateCreationRequest
        ```
        distributed_template_creation_request: See model DistributedTemplateCreationRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            distributed_template_creation_request=runai.DistributedTemplateCreationRequest()
        )
        ```
        """

        # Body params:
        body_params = distributed_template_creation_request

        resource_path = f"/api/v1/workload_templates/distributed".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def create_training_template(
        self,
        training_template_creation_request: Optional[
            models.TrainingTemplateCreationRequest
        ] = None,
    ):
        r"""


        ### Description
        Create a new training template. [Experimental]

        ### Parameters:
        ```python
        training_template_creation_request: TrainingTemplateCreationRequest
        ```
        training_template_creation_request: See model TrainingTemplateCreationRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            training_template_creation_request=runai.TrainingTemplateCreationRequest()
        )
        ```
        """

        # Body params:
        body_params = training_template_creation_request

        resource_path = f"/api/v1/workload_templates/trainings".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def create_workspace_template(
        self,
        workspace_template_creation_request: Optional[
            models.WorkspaceTemplateCreationRequest
        ] = None,
    ):
        r"""


        ### Description
        Create a new workspace template. [Experimental]

        ### Parameters:
        ```python
        workspace_template_creation_request: WorkspaceTemplateCreationRequest
        ```
        workspace_template_creation_request: See model WorkspaceTemplateCreationRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            workspace_template_creation_request=runai.WorkspaceTemplateCreationRequest()
        )
        ```
        """

        # Body params:
        body_params = workspace_template_creation_request

        resource_path = f"/api/v1/workload_templates/workspaces".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def delete_distributed_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Delete a distributed training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/distributed/{template_id}".replace(
            "_", "-"
        )
        method = "DELETE"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def delete_training_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Delete a training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/trainings/{template_id}".replace(
            "_", "-"
        )
        method = "DELETE"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def delete_workspace_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Delete a workspace template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/workspaces/{template_id}".replace(
            "_", "-"
        )
        method = "DELETE"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_distributed_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Get a specific distributed training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/distributed/{template_id}".replace(
            "_", "-"
        )
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_template_by_id1(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Get a template, any type. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/{template_id}".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_training_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Retrieve a specific training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/trainings/{template_id}".replace(
            "_", "-"
        )
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_workspace_template(
        self,
        template_id: str,
    ):
        r"""


        ### Description
        Retrieve a specific workspace template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000'
        )
        ```
        """

        resource_path = f"/api/v1/workload_templates/workspaces/{template_id}".replace(
            "_", "-"
        )
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def list_distributed_templates(
        self,
        offset: Optional[int] = None,
        limit: Optional[int] = None,
        sort_order: Optional[str] = None,
        sort_by: Optional[str] = None,
        filter_by: Optional[List[str]] = None,
        search: Optional[str] = None,
    ):
        r"""


        ### Description
        List all distributed training templates. [Experimental]

        ### Parameters:
        ```python
        offset: Optional[int]
        limit: Optional[int]
        sort_order: Optional[str]
        sort_by: Optional[str]
        filter_by: Optional[List[str]]
        search: Optional[str]
        ```
        offset: The offset of the first item returned in the collection.
        limit: The maximum number of entries to return. - Default: 50
        sort_order: Sort results in descending or ascending order. - Default: asc
        sort_by: Sort results by parameter.
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.
        search: Filter results by a free text search.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            offset=100,
                        limit=50,
                        sort_order=asc,
                        sort_by='sort_by_example',
                        filter_by=['[\"name!=some-template-name\",\"createdAt>=2021-01-01T00:00:00Z\"]'],
                        search='test project'
        )
        ```
        """

        # Query params:
        query_params = [
            ("offset", offset),
            ("limit", limit),
            ("sortOrder", sort_order),
            ("sortBy", sort_by),
            ("filterBy", filter_by),
            ("search", search),
        ]
        resource_path = f"/api/v1/workload_templates/distributed".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def list_templates1(
        self,
        offset: Optional[int] = None,
        limit: Optional[int] = None,
        sort_order: Optional[str] = None,
        sort_by: Optional[str] = None,
        filter_by: Optional[List[str]] = None,
        search: Optional[str] = None,
    ):
        r"""


        ### Description
        List templates. [Experimental]

        ### Parameters:
        ```python
        offset: Optional[int]
        limit: Optional[int]
        sort_order: Optional[str]
        sort_by: Optional[str]
        filter_by: Optional[List[str]]
        search: Optional[str]
        ```
        offset: The offset of the first item returned in the collection.
        limit: The maximum number of entries to return. - Default: 50
        sort_order: Sort results in descending or ascending order. - Default: asc
        sort_by: Sort results by parameter.
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.
        search: Filter results by a free text search.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            offset=100,
                        limit=50,
                        sort_order=asc,
                        sort_by='sort_by_example',
                        filter_by=['[\"name!=some-template-name\",\"createdAt>=2021-01-01T00:00:00Z\"]'],
                        search='test project'
        )
        ```
        """

        # Query params:
        query_params = [
            ("offset", offset),
            ("limit", limit),
            ("sortOrder", sort_order),
            ("sortBy", sort_by),
            ("filterBy", filter_by),
            ("search", search),
        ]
        resource_path = f"/api/v1/workload_templates".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def list_training_templates(
        self,
        offset: Optional[int] = None,
        limit: Optional[int] = None,
        sort_order: Optional[str] = None,
        sort_by: Optional[str] = None,
        filter_by: Optional[List[str]] = None,
        search: Optional[str] = None,
    ):
        r"""


        ### Description
        List all training templates. [Experimental]

        ### Parameters:
        ```python
        offset: Optional[int]
        limit: Optional[int]
        sort_order: Optional[str]
        sort_by: Optional[str]
        filter_by: Optional[List[str]]
        search: Optional[str]
        ```
        offset: The offset of the first item returned in the collection.
        limit: The maximum number of entries to return. - Default: 50
        sort_order: Sort results in descending or ascending order. - Default: asc
        sort_by: Sort results by parameter.
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.
        search: Filter results by a free text search.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            offset=100,
                        limit=50,
                        sort_order=asc,
                        sort_by='sort_by_example',
                        filter_by=['[\"name!=some-template-name\",\"createdAt>=2021-01-01T00:00:00Z\"]'],
                        search='test project'
        )
        ```
        """

        # Query params:
        query_params = [
            ("offset", offset),
            ("limit", limit),
            ("sortOrder", sort_order),
            ("sortBy", sort_by),
            ("filterBy", filter_by),
            ("search", search),
        ]
        resource_path = f"/api/v1/workload_templates/trainings".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def list_workspace_templates(
        self,
        offset: Optional[int] = None,
        limit: Optional[int] = None,
        sort_order: Optional[str] = None,
        sort_by: Optional[str] = None,
        filter_by: Optional[List[str]] = None,
        search: Optional[str] = None,
    ):
        r"""


        ### Description
        List all workspace templates. [Experimental]

        ### Parameters:
        ```python
        offset: Optional[int]
        limit: Optional[int]
        sort_order: Optional[str]
        sort_by: Optional[str]
        filter_by: Optional[List[str]]
        search: Optional[str]
        ```
        offset: The offset of the first item returned in the collection.
        limit: The maximum number of entries to return. - Default: 50
        sort_order: Sort results in descending or ascending order. - Default: asc
        sort_by: Sort results by parameter.
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.
        search: Filter results by a free text search.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            offset=100,
                        limit=50,
                        sort_order=asc,
                        sort_by='sort_by_example',
                        filter_by=['[\"name!=some-template-name\",\"createdAt>=2021-01-01T00:00:00Z\"]'],
                        search='test project'
        )
        ```
        """

        # Query params:
        query_params = [
            ("offset", offset),
            ("limit", limit),
            ("sortOrder", sort_order),
            ("sortBy", sort_by),
            ("filterBy", filter_by),
            ("search", search),
        ]
        resource_path = f"/api/v1/workload_templates/workspaces".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def patch_distributed_template(
        self,
        template_id: str,
        distributed_template_patch_request: Optional[
            models.DistributedTemplatePatchRequest
        ] = None,
    ):
        r"""


        ### Description
        Patch a distributed training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        distributed_template_patch_request: DistributedTemplatePatchRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        distributed_template_patch_request: See model DistributedTemplatePatchRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        distributed_template_patch_request=runai.DistributedTemplatePatchRequest()
        )
        ```
        """

        # Body params:
        body_params = distributed_template_patch_request

        resource_path = f"/api/v1/workload_templates/distributed/{template_id}".replace(
            "_", "-"
        )
        method = "PATCH"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def patch_training_template(
        self,
        template_id: str,
        training_template_patch_request: Optional[
            models.TrainingTemplatePatchRequest
        ] = None,
    ):
        r"""


        ### Description
        Patch a training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        training_template_patch_request: TrainingTemplatePatchRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        training_template_patch_request: See model TrainingTemplatePatchRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        training_template_patch_request=runai.TrainingTemplatePatchRequest()
        )
        ```
        """

        # Body params:
        body_params = training_template_patch_request

        resource_path = f"/api/v1/workload_templates/trainings/{template_id}".replace(
            "_", "-"
        )
        method = "PATCH"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def patch_workspace_template(
        self,
        template_id: str,
        workspace_template_patch_request: Optional[
            models.WorkspaceTemplatePatchRequest
        ] = None,
    ):
        r"""


        ### Description
        Patch a workspace template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        workspace_template_patch_request: WorkspaceTemplatePatchRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        workspace_template_patch_request: See model WorkspaceTemplatePatchRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        workspace_template_patch_request=runai.WorkspaceTemplatePatchRequest()
        )
        ```
        """

        # Body params:
        body_params = workspace_template_patch_request

        resource_path = f"/api/v1/workload_templates/workspaces/{template_id}".replace(
            "_", "-"
        )
        method = "PATCH"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def update_distributed_template(
        self,
        template_id: str,
        distributed_template_update_request: Optional[
            models.DistributedTemplateUpdateRequest
        ] = None,
    ):
        r"""


        ### Description
        Update a distributed training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        distributed_template_update_request: DistributedTemplateUpdateRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        distributed_template_update_request: See model DistributedTemplateUpdateRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        distributed_template_update_request=runai.DistributedTemplateUpdateRequest()
        )
        ```
        """

        # Body params:
        body_params = distributed_template_update_request

        resource_path = f"/api/v1/workload_templates/distributed/{template_id}".replace(
            "_", "-"
        )
        method = "PUT"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def update_training_template(
        self,
        template_id: str,
        training_template_update_request: Optional[
            models.TrainingTemplateUpdateRequest
        ] = None,
    ):
        r"""


        ### Description
        Update a training template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        training_template_update_request: TrainingTemplateUpdateRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        training_template_update_request: See model TrainingTemplateUpdateRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        training_template_update_request=runai.TrainingTemplateUpdateRequest()
        )
        ```
        """

        # Body params:
        body_params = training_template_update_request

        resource_path = f"/api/v1/workload_templates/trainings/{template_id}".replace(
            "_", "-"
        )
        method = "PUT"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def update_workspace_template(
        self,
        template_id: str,
        workspace_template_update_request: Optional[
            models.WorkspaceTemplateUpdateRequest
        ] = None,
    ):
        r"""


        ### Description
        Update a workspace template by ID. [Experimental]

        ### Parameters:
        ```python
        template_id: str
        workspace_template_update_request: WorkspaceTemplateUpdateRequest
        ```
        template_id: The  Universally Unique Identifier (UUID) of the template.
        workspace_template_update_request: See model WorkspaceTemplateUpdateRequest for more information.

        ### Example:
        ```python
        WorkloadTemplatesApi(
            template_id='550e8400-e29b-41d4-a716-446655440000',
                        workspace_template_update_request=runai.WorkspaceTemplateUpdateRequest()
        )
        ```
        """

        # Body params:
        body_params = workspace_template_update_request

        resource_path = f"/api/v1/workload_templates/workspaces/{template_id}".replace(
            "_", "-"
        )
        method = "PUT"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )
