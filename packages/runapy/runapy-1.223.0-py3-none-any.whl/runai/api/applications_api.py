from typing import Optional, List
from datetime import datetime

from runai import models
from runai.api.runai_api_service import RunaiAPIService, deprecated_message


class ApplicationsApi(RunaiAPIService):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        self._api_client = api_client

    def create_application(
        self,
        application_creation_request: models.ApplicationCreationRequest,
    ):
        r"""


        ### Description
        Create an application.

        ### Parameters:
        ```python
        application_creation_request: ApplicationCreationRequest
        ```
        application_creation_request: Application object to create

        ### Example:
        ```python
        ApplicationsApi(
            application_creation_request=runai.ApplicationCreationRequest()
        )
        ```
        """

        # Body params:
        body_params = application_creation_request

        resource_path = f"/api/v1/apps".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def delete_application_by_id(
        self,
        app_id: str,
    ):
        r"""


        ### Description
        Delete an application by id.

        ### Parameters:
        ```python
        app_id: str
        ```
        app_id: The application id to retrieve

        ### Example:
        ```python
        ApplicationsApi(
            app_id='app_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/apps/{app_id}".replace("_", "-")
        method = "DELETE"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_application_by_id(
        self,
        app_id: str,
    ):
        r"""


        ### Description
        Get application by id.

        ### Parameters:
        ```python
        app_id: str
        ```
        app_id: The application id to retrieve

        ### Example:
        ```python
        ApplicationsApi(
            app_id='app_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/apps/{app_id}".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_applications(
        self,
    ):
        r"""


        ### Description
        Get a list of applications.

        ### Parameters:
        ```python
        ```

        ### Example:
        ```python
        ApplicationsApi(

        )
        ```
        """

        resource_path = f"/api/v1/apps".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def regenerate_application_secret(
        self,
        app_id: str,
    ):
        r"""


        ### Description
        Regenerate an application secret.

        ### Parameters:
        ```python
        app_id: str
        ```
        app_id: The application id to retrieve

        ### Example:
        ```python
        ApplicationsApi(
            app_id='app_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/apps/{app_id}/secret".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def update_application_by_id(
        self,
        app_id: str,
        application_patch_request: Optional[models.ApplicationPatchRequest] = None,
    ):
        r"""


        ### Description
        Update application details by id.

        ### Parameters:
        ```python
        app_id: str
        application_patch_request: ApplicationPatchRequest
        ```
        app_id: The application id to retrieve
        application_patch_request: Application object that needs to be updated.

        ### Example:
        ```python
        ApplicationsApi(
            app_id='app_id_example',
                        application_patch_request=runai.ApplicationPatchRequest()
        )
        ```
        """

        # Body params:
        body_params = application_patch_request

        resource_path = f"/api/v1/apps/{app_id}".replace("_", "-")
        method = "PATCH"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )
