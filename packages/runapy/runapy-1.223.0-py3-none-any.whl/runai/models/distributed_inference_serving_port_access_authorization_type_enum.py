# coding: utf-8

"""
NVIDIA Run:ai

# Introduction  The NVIDIA Run:ai Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  NVIDIA Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the NVIDIA Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/accessrules#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://run-ai-docs.nvidia.com/saas/reference/api/rest-auth/#request-an-api-token).

The version of the OpenAPI document: latest
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class DistributedInferenceServingPortAccessAuthorizationTypeEnum(str, Enum):
    """
    Specifies who can send inference requests to the serving endpoint:  Possible values: - `public`: No authorization required. - `authenticatedUsers`: Any NVIDIA Run:ai authenticated user can send requests. - `authorizedUsers`: Only users listed in the authorizedUsers field can send requests. - `authorizedGroups`: Only members of user groups listed in the authorizedGroups field can send requests.

    Allowed enum values:

    PUBLIC = 'public'

    AUTHENTICATEDUSERS = 'authenticatedUsers'

    AUTHORIZEDUSERS = 'authorizedUsers'

    AUTHORIZEDGROUPS = 'authorizedGroups'


    Example:
        ```python
        DistributedInferenceServingPortAccessAuthorizationTypeEnum.PUBLIC
        DistributedInferenceServingPortAccessAuthorizationTypeEnum.AUTHENTICATEDUSERS
        DistributedInferenceServingPortAccessAuthorizationTypeEnum.AUTHORIZEDUSERS
        DistributedInferenceServingPortAccessAuthorizationTypeEnum.AUTHORIZEDGROUPS
        ```
    """

    PUBLIC = "public"
    AUTHENTICATEDUSERS = "authenticatedUsers"
    AUTHORIZEDUSERS = "authorizedUsers"
    AUTHORIZEDGROUPS = "authorizedGroups"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of DistributedInferenceServingPortAccessAuthorizationTypeEnum from a JSON string"""
        return cls(json.loads(json_str))
