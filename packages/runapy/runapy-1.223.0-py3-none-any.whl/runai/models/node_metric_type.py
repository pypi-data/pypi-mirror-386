# coding: utf-8

"""
NVIDIA Run:ai

# Introduction  The NVIDIA Run:ai Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  NVIDIA Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the NVIDIA Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/accessrules#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://run-ai-docs.nvidia.com/saas/reference/api/rest-auth/#request-an-api-token).

The version of the OpenAPI document: latest
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class NodeMetricType(str, Enum):
    """
    Specify which metric data to request.

    Allowed enum values:

    GPU_UTILIZATION_PER_GPU = 'GPU_UTILIZATION_PER_GPU'

    GPU_UTILIZATION = 'GPU_UTILIZATION'

    GPU_MEMORY_UTILIZATION_PER_GPU = 'GPU_MEMORY_UTILIZATION_PER_GPU'

    GPU_MEMORY_UTILIZATION = 'GPU_MEMORY_UTILIZATION'

    GPU_MEMORY_USAGE_BYTES_PER_GPU = 'GPU_MEMORY_USAGE_BYTES_PER_GPU'

    GPU_MEMORY_USAGE_BYTES = 'GPU_MEMORY_USAGE_BYTES'

    GPU_ALLOCATION_PER_GPU = 'GPU_ALLOCATION_PER_GPU'

    GPU_MEMORY_ALLOCATION_BYTES_PER_GPU = 'GPU_MEMORY_ALLOCATION_BYTES_PER_GPU'

    GPU_IDLE_TIME_SECONDS_PER_GPU = 'GPU_IDLE_TIME_SECONDS_PER_GPU'

    CPU_USAGE_CORES = 'CPU_USAGE_CORES'

    CPU_UTILIZATION = 'CPU_UTILIZATION'

    CPU_MEMORY_USAGE_BYTES = 'CPU_MEMORY_USAGE_BYTES'

    CPU_MEMORY_UTILIZATION = 'CPU_MEMORY_UTILIZATION'

    GPU_OOMKILL_BURST_COUNT_PER_GPU = 'GPU_OOMKILL_BURST_COUNT_PER_GPU'

    GPU_OOMKILL_IDLE_COUNT_PER_GPU = 'GPU_OOMKILL_IDLE_COUNT_PER_GPU'

    GPU_OOMKILL_SWAP_OUT_OF_RAM_COUNT_PER_GPU = 'GPU_OOMKILL_SWAP_OUT_OF_RAM_COUNT_PER_GPU'

    GPU_GRAPHICS_ENGINE_ACTIVITY_PER_GPU = 'GPU_GRAPHICS_ENGINE_ACTIVITY_PER_GPU'

    GPU_SM_ACTIVITY_PER_GPU = 'GPU_SM_ACTIVITY_PER_GPU'

    GPU_SM_OCCUPANCY_PER_GPU = 'GPU_SM_OCCUPANCY_PER_GPU'

    GPU_TENSOR_ACTIVITY_PER_GPU = 'GPU_TENSOR_ACTIVITY_PER_GPU'

    GPU_FP64_ENGINE_ACTIVITY_PER_GPU = 'GPU_FP64_ENGINE_ACTIVITY_PER_GPU'

    GPU_FP32_ENGINE_ACTIVITY_PER_GPU = 'GPU_FP32_ENGINE_ACTIVITY_PER_GPU'

    GPU_FP16_ENGINE_ACTIVITY_PER_GPU = 'GPU_FP16_ENGINE_ACTIVITY_PER_GPU'

    GPU_MEMORY_BANDWIDTH_UTILIZATION_PER_GPU = 'GPU_MEMORY_BANDWIDTH_UTILIZATION_PER_GPU'

    GPU_NVLINK_TRANSMITTED_BANDWIDTH_PER_GPU = 'GPU_NVLINK_TRANSMITTED_BANDWIDTH_PER_GPU'

    GPU_NVLINK_RECEIVED_BANDWIDTH_PER_GPU = 'GPU_NVLINK_RECEIVED_BANDWIDTH_PER_GPU'

    GPU_PCIE_TRANSMITTED_BANDWIDTH_PER_GPU = 'GPU_PCIE_TRANSMITTED_BANDWIDTH_PER_GPU'

    GPU_PCIE_RECEIVED_BANDWIDTH_PER_GPU = 'GPU_PCIE_RECEIVED_BANDWIDTH_PER_GPU'

    DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL = 'DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL'

    DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL_PER_GPU = 'DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL_PER_GPU'


    Example:
        ```python
        NodeMetricType.GPU_UTILIZATION_PER_GPU
        NodeMetricType.GPU_UTILIZATION
        NodeMetricType.GPU_MEMORY_UTILIZATION_PER_GPU
        NodeMetricType.GPU_MEMORY_UTILIZATION
        NodeMetricType.GPU_MEMORY_USAGE_BYTES_PER_GPU
        NodeMetricType.GPU_MEMORY_USAGE_BYTES
        NodeMetricType.GPU_ALLOCATION_PER_GPU
        NodeMetricType.GPU_MEMORY_ALLOCATION_BYTES_PER_GPU
        NodeMetricType.GPU_IDLE_TIME_SECONDS_PER_GPU
        NodeMetricType.CPU_USAGE_CORES
        NodeMetricType.CPU_UTILIZATION
        NodeMetricType.CPU_MEMORY_USAGE_BYTES
        NodeMetricType.CPU_MEMORY_UTILIZATION
        NodeMetricType.GPU_OOMKILL_BURST_COUNT_PER_GPU
        NodeMetricType.GPU_OOMKILL_IDLE_COUNT_PER_GPU
        NodeMetricType.GPU_OOMKILL_SWAP_OUT_OF_RAM_COUNT_PER_GPU
        NodeMetricType.GPU_GRAPHICS_ENGINE_ACTIVITY_PER_GPU
        NodeMetricType.GPU_SM_ACTIVITY_PER_GPU
        NodeMetricType.GPU_SM_OCCUPANCY_PER_GPU
        NodeMetricType.GPU_TENSOR_ACTIVITY_PER_GPU
        NodeMetricType.GPU_FP64_ENGINE_ACTIVITY_PER_GPU
        NodeMetricType.GPU_FP32_ENGINE_ACTIVITY_PER_GPU
        NodeMetricType.GPU_FP16_ENGINE_ACTIVITY_PER_GPU
        NodeMetricType.GPU_MEMORY_BANDWIDTH_UTILIZATION_PER_GPU
        NodeMetricType.GPU_NVLINK_TRANSMITTED_BANDWIDTH_PER_GPU
        NodeMetricType.GPU_NVLINK_RECEIVED_BANDWIDTH_PER_GPU
        NodeMetricType.GPU_PCIE_TRANSMITTED_BANDWIDTH_PER_GPU
        NodeMetricType.GPU_PCIE_RECEIVED_BANDWIDTH_PER_GPU
        NodeMetricType.DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL
        NodeMetricType.DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL_PER_GPU
        ```
    """

    GPU_UTILIZATION_PER_GPU = "GPU_UTILIZATION_PER_GPU"
    GPU_UTILIZATION = "GPU_UTILIZATION"
    GPU_MEMORY_UTILIZATION_PER_GPU = "GPU_MEMORY_UTILIZATION_PER_GPU"
    GPU_MEMORY_UTILIZATION = "GPU_MEMORY_UTILIZATION"
    GPU_MEMORY_USAGE_BYTES_PER_GPU = "GPU_MEMORY_USAGE_BYTES_PER_GPU"
    GPU_MEMORY_USAGE_BYTES = "GPU_MEMORY_USAGE_BYTES"
    GPU_ALLOCATION_PER_GPU = "GPU_ALLOCATION_PER_GPU"
    GPU_MEMORY_ALLOCATION_BYTES_PER_GPU = "GPU_MEMORY_ALLOCATION_BYTES_PER_GPU"
    GPU_IDLE_TIME_SECONDS_PER_GPU = "GPU_IDLE_TIME_SECONDS_PER_GPU"
    CPU_USAGE_CORES = "CPU_USAGE_CORES"
    CPU_UTILIZATION = "CPU_UTILIZATION"
    CPU_MEMORY_USAGE_BYTES = "CPU_MEMORY_USAGE_BYTES"
    CPU_MEMORY_UTILIZATION = "CPU_MEMORY_UTILIZATION"
    GPU_OOMKILL_BURST_COUNT_PER_GPU = "GPU_OOMKILL_BURST_COUNT_PER_GPU"
    GPU_OOMKILL_IDLE_COUNT_PER_GPU = "GPU_OOMKILL_IDLE_COUNT_PER_GPU"
    GPU_OOMKILL_SWAP_OUT_OF_RAM_COUNT_PER_GPU = (
        "GPU_OOMKILL_SWAP_OUT_OF_RAM_COUNT_PER_GPU"
    )
    GPU_GRAPHICS_ENGINE_ACTIVITY_PER_GPU = "GPU_GRAPHICS_ENGINE_ACTIVITY_PER_GPU"
    GPU_SM_ACTIVITY_PER_GPU = "GPU_SM_ACTIVITY_PER_GPU"
    GPU_SM_OCCUPANCY_PER_GPU = "GPU_SM_OCCUPANCY_PER_GPU"
    GPU_TENSOR_ACTIVITY_PER_GPU = "GPU_TENSOR_ACTIVITY_PER_GPU"
    GPU_FP64_ENGINE_ACTIVITY_PER_GPU = "GPU_FP64_ENGINE_ACTIVITY_PER_GPU"
    GPU_FP32_ENGINE_ACTIVITY_PER_GPU = "GPU_FP32_ENGINE_ACTIVITY_PER_GPU"
    GPU_FP16_ENGINE_ACTIVITY_PER_GPU = "GPU_FP16_ENGINE_ACTIVITY_PER_GPU"
    GPU_MEMORY_BANDWIDTH_UTILIZATION_PER_GPU = (
        "GPU_MEMORY_BANDWIDTH_UTILIZATION_PER_GPU"
    )
    GPU_NVLINK_TRANSMITTED_BANDWIDTH_PER_GPU = (
        "GPU_NVLINK_TRANSMITTED_BANDWIDTH_PER_GPU"
    )
    GPU_NVLINK_RECEIVED_BANDWIDTH_PER_GPU = "GPU_NVLINK_RECEIVED_BANDWIDTH_PER_GPU"
    GPU_PCIE_TRANSMITTED_BANDWIDTH_PER_GPU = "GPU_PCIE_TRANSMITTED_BANDWIDTH_PER_GPU"
    GPU_PCIE_RECEIVED_BANDWIDTH_PER_GPU = "GPU_PCIE_RECEIVED_BANDWIDTH_PER_GPU"
    DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL = "DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL"
    DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL_PER_GPU = (
        "DCGM_FI_DEV_NVLINK_BANDWIDTH_TOTAL_PER_GPU"
    )

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of NodeMetricType from a JSON string"""
        return cls(json.loads(json_str))
