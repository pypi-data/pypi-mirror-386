from typing import Optional, List
from datetime import datetime

from runai import models
from runai.api.runai_api_service import RunaiAPIService, deprecated_message


class WorkloadPropertiesApi(RunaiAPIService):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        self._api_client = api_client

    def create_workload_type(
        self,
        workload_type_create_fields: models.WorkloadTypeCreateFields,
    ):
        r"""


        ### Description
        Create a workload type.

        ### Parameters:
        ```python
        workload_type_create_fields: WorkloadTypeCreateFields
        ```
        workload_type_create_fields: Workload type to create.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            workload_type_create_fields=runai.WorkloadTypeCreateFields()
        )
        ```
        """

        # Body params:
        body_params = workload_type_create_fields

        resource_path = f"/api/v1/workload_types".replace("_", "-")
        method = "POST"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )

    def delete_workload_type(
        self,
        workload_type_id: str,
    ):
        r"""


        ### Description
        Delete a workload type by id.

        ### Parameters:
        ```python
        workload_type_id: str
        ```
        workload_type_id: The unique identifier of the workload type.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            workload_type_id='workload_type_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/workload_types/{workload_type_id}".replace("_", "-")
        method = "DELETE"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_category_by_id(
        self,
        category_id: str,
    ):
        r"""


        ### Description
        Get workload category by id.

        ### Parameters:
        ```python
        category_id: str
        ```
        category_id: The unique identifier of the workload category.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            category_id='category_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/workload_categories/{category_id}".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def get_workload_priorities(
        self,
        sort_order: Optional[str] = None,
        sort_by: Optional[str] = None,
        filter_by: Optional[List[str]] = None,
    ):
        r"""


        ### Description
        Get workload priorities.

        ### Parameters:
        ```python
        sort_order: Optional[str]
        sort_by: Optional[str]
        filter_by: Optional[List[str]]
        ```
        sort_order: Sort results in descending or ascending order. - Default: asc
        sort_by: Defines the field to sort the results by
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x3D;&#x3D; Equals, !&#x3D; Not equals, &lt;&#x3D; Less than or equal, &gt;&#x3D; Greater than or equal, &#x3D;@ contains, !@ Does not contains, &#x3D;^ Starts with and &#x3D;$ Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x3D;&#x3D;, !&#x3D;, &lt;&#x3D; and &gt;&#x3D;

        ### Example:
        ```python
        WorkloadPropertiesApi(
            sort_order=asc,
                        sort_by='sort_by_example',
                        filter_by=['[\"name!=some-name\"]']
        )
        ```
        """

        # Query params:
        query_params = [
            ("sortOrder", sort_order),
            ("sortBy", sort_by),
            ("filterBy", filter_by),
        ]
        resource_path = f"/api/v1/workload_priorities".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def get_workload_type(
        self,
        workload_type_id: str,
    ):
        r"""


        ### Description
        List workload type by id.

        ### Parameters:
        ```python
        workload_type_id: str
        ```
        workload_type_id: The unique identifier of the workload type.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            workload_type_id='workload_type_id_example'
        )
        ```
        """

        resource_path = f"/api/v1/workload_types/{workload_type_id}".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def list_categories(
        self,
    ):
        r"""


        ### Description
        List workload categories.

        ### Parameters:
        ```python
        ```

        ### Example:
        ```python
        WorkloadPropertiesApi(

        )
        ```
        """

        resource_path = f"/api/v1/workload_categories".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
        )

    def list_workload_types(
        self,
        external_types_only: Optional[bool] = None,
        filter_by: Optional[List[str]] = None,
    ):
        r"""


        ### Description
        List workload types.

        ### Parameters:
        ```python
        external_types_only: Optional[bool]
        filter_by: Optional[List[str]]
        ```
        external_types_only: Return only external and user_external sourced workload types. - Default: False
        filter_by: Filter results by a parameter. Use the format field-name operator value. Operators are &#x60;&#x3D;&#x3D;&#x60; Equals, &#x60;!&#x3D;&#x60; Not equals, &#x60;&lt;&#x3D;&#x60; Less than or equal, &#x60;&gt;&#x3D;&#x60; Greater than or equal, &#x60;&#x3D;@&#x60; contains, &#x60;!@&#x60; Does not contain, &#x60;&#x3D;^&#x60; Starts with and &#x60;&#x3D;$&#x60; Ends with. Dates are in ISO 8601 timestamp format and available for operators &#x60;&#x3D;&#x3D;&#x60;, &#x60;!&#x3D;&#x60;, &#x60;&lt;&#x3D;&#x60; and &#x60;&gt;&#x3D;&#x60;.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            external_types_only=False,
                        filter_by=['[\"name==Deployment\",\"group==apps\"]']
        )
        ```
        """

        # Query params:
        query_params = [
            ("externalTypesOnly", external_types_only),
            ("filterBy", filter_by),
        ]
        resource_path = f"/api/v1/workload_types".replace("_", "-")
        method = "GET"
        return self._api_client.call_api(
            resource_path=resource_path, method=method, query_params=query_params
        )

    def update_workload_type(
        self,
        workload_type_id: str,
        workload_type_update_fields: models.WorkloadTypeUpdateFields,
    ):
        r"""


        ### Description
        Update a workload type by id.

        ### Parameters:
        ```python
        workload_type_id: str
        workload_type_update_fields: WorkloadTypeUpdateFields
        ```
        workload_type_id: The unique identifier of the workload type.
        workload_type_update_fields: Workload type to update.

        ### Example:
        ```python
        WorkloadPropertiesApi(
            workload_type_id='workload_type_id_example',
                        workload_type_update_fields=runai.WorkloadTypeUpdateFields()
        )
        ```
        """

        # Body params:
        body_params = workload_type_update_fields

        resource_path = f"/api/v1/workload_types/{workload_type_id}".replace("_", "-")
        method = "PUT"
        return self._api_client.call_api(
            resource_path=resource_path,
            method=method,
            body=body_params,
        )
