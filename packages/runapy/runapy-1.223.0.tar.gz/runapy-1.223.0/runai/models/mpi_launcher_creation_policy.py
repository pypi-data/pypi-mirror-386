# coding: utf-8

"""
NVIDIA Run:ai

# Introduction  The NVIDIA Run:ai Control-Plane API reference is a guide that provides an easy-to-use programming interface for adding various tasks to your application, including workload submission, resource management, and administrative operations.  NVIDIA Run:ai APIs are accessed using *bearer tokens*. To obtain a token, you need to create an **Application** through the NVIDIA Run:ai user interface. To create an application, in your UI, go to `Settings & Tools`, `Application` and create a new Application.  After you have created a new application, you will need to assign it access rules. To assign access rules to the application, see [Create access rules](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/accessrules#create-or-delete-rules). Make sure you assign the correct rules to your application. Use the [Roles](https://run-ai-docs.nvidia.com/saas/infrastructure-setup/authentication/roles) to assign the correct access rules.  To get your access token, follow the instructions in [Request a token](https://run-ai-docs.nvidia.com/saas/reference/api/rest-auth/#request-an-api-token).

The version of the OpenAPI document: latest
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class MpiLauncherCreationPolicy(str, Enum):
    """
    Define whether the MPI Launcher is created in parallel with the workers, or if its creation is postponed until all workers are in  Ready state. This prevents failures when the launcher attempts to connect to workers that are not yet ready.

    Allowed enum values:

    ATSTARTUP = 'AtStartup'

    WAITFORWORKERSREADY = 'WaitForWorkersReady'


    Example:
        ```python
        MpiLauncherCreationPolicy.ATSTARTUP
        MpiLauncherCreationPolicy.WAITFORWORKERSREADY
        ```
    """

    ATSTARTUP = "AtStartup"
    WAITFORWORKERSREADY = "WaitForWorkersReady"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of MpiLauncherCreationPolicy from a JSON string"""
        return cls(json.loads(json_str))
