Metadata-Version: 2.4
Name: EnclaveSDK
Version: 2.1.1.dev45184
Summary: BeeKeeperAI EscrowAI Enclave API
Home-page: 
Author: OpenAPI Generator community
Author-email: OpenAPI Generator Community <engineering@beekeeperai.com>
Project-URL: Repository, https://github.com/GIT_USER_ID/GIT_REPO_ID
Keywords: OpenAPI,OpenAPI-Generator,BeeKeeperAI EscrowAI Enclave API
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: urllib3<3.0.0,>=2.1.0
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: pydantic>=2
Requires-Dist: typing-extensions>=4.7.1
Dynamic: author

# EnclaveSDK
Described below is the EscrowAI Enclave API that provides functionality inside a BeeKeeperAI environment. Included are data engineering endpoints and reporting endpoints.

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 2.1.1
- Package version: 2.1.1.dev45184
- Generator version: 7.17.0-SNAPSHOT
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import EnclaveSDK
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import EnclaveSDK
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import EnclaveSDK
from EnclaveSDK.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://sandbox.dev.escrow.beekeeperai.com
# See configuration.py for a list of all supported configuration parameters.
configuration = EnclaveSDK.Configuration(
    host = "http://sandbox.dev.escrow.beekeeperai.com"
)



# Enter a context with an instance of the API client
with EnclaveSDK.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = EnclaveSDK.AuthApi(api_client)
    auth_request = EnclaveSDK.AuthRequest() # AuthRequest | 

    try:
        # Authenticate and return server configuration
        api_response = api_instance.api_v1_auth_post(auth_request)
        print("The response of AuthApi->api_v1_auth_post:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling AuthApi->api_v1_auth_post: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://sandbox.dev.escrow.beekeeperai.com*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AuthApi* | [**api_v1_auth_post**](docs/AuthApi.md#api_v1_auth_post) | **POST** /api/v1/auth | Authenticate and return server configuration
*DataApi* | [**api_v1_data_file_get**](docs/DataApi.md#api_v1_data_file_get) | **GET** /api/v1/data/file | Retrieve a file by its filename and optionally SASUrl as a get request
*DataApi* | [**api_v1_data_file_post**](docs/DataApi.md#api_v1_data_file_post) | **POST** /api/v1/data/file | Retrieve a file by its filename and optionally SASUrl as a post request
*DataApi* | [**api_v1_data_files_get**](docs/DataApi.md#api_v1_data_files_get) | **GET** /api/v1/data/files | Retrieve a list of available files
*DataApi* | [**api_v1_data_sql_select_post**](docs/DataApi.md#api_v1_data_sql_select_post) | **POST** /api/v1/data/sql/select | Execute a SQL query
*EscrowApi* | [**api_v1_ping_attestation_get**](docs/EscrowApi.md#api_v1_ping_attestation_get) | **GET** /api/v1/ping/attestation | Ping attestation authority
*EscrowApi* | [**api_v1_ping_enclave_get**](docs/EscrowApi.md#api_v1_ping_enclave_get) | **GET** /api/v1/ping/enclave | Ping to check if the enclave API is up
*EscrowApi* | [**api_v1_ping_escrow_get**](docs/EscrowApi.md#api_v1_ping_escrow_get) | **GET** /api/v1/ping/escrow | Ping to check if the backend Escrow service is up
*EscrowApi* | [**api_v1_ping_kms_get**](docs/EscrowApi.md#api_v1_ping_kms_get) | **GET** /api/v1/ping/kms | Ping key manager
*LogApi* | [**api_v1_log_post**](docs/LogApi.md#api_v1_log_post) | **POST** /api/v1/log | Post log data
*MlflowApi* | [**api20_mlflow_artifacts_artifact_path_delete**](docs/MlflowApi.md#api20_mlflow_artifacts_artifact_path_delete) | **DELETE** /api/2.0/mlflow-artifacts/{artifactPath} | Proxy DELETE request to MLflow Artifacts
*MlflowApi* | [**api20_mlflow_artifacts_artifact_path_get**](docs/MlflowApi.md#api20_mlflow_artifacts_artifact_path_get) | **GET** /api/2.0/mlflow-artifacts/{artifactPath} | Proxy GET request to MLflow Artifacts
*MlflowApi* | [**api20_mlflow_artifacts_artifact_path_post**](docs/MlflowApi.md#api20_mlflow_artifacts_artifact_path_post) | **POST** /api/2.0/mlflow-artifacts/{artifactPath} | Proxy POST request to MLflow Artifacts
*MlflowApi* | [**api20_mlflow_artifacts_artifact_path_put**](docs/MlflowApi.md#api20_mlflow_artifacts_artifact_path_put) | **PUT** /api/2.0/mlflow-artifacts/{artifactPath} | Proxy PUT request to MLflow Artifacts
*MlflowApi* | [**api20_mlflow_proxy_path_delete**](docs/MlflowApi.md#api20_mlflow_proxy_path_delete) | **DELETE** /api/2.0/mlflow/{proxyPath} | Proxy DELETE request to MLflow
*MlflowApi* | [**api20_mlflow_proxy_path_get**](docs/MlflowApi.md#api20_mlflow_proxy_path_get) | **GET** /api/2.0/mlflow/{proxyPath} | Proxy GET request to MLflow
*MlflowApi* | [**api20_mlflow_proxy_path_post**](docs/MlflowApi.md#api20_mlflow_proxy_path_post) | **POST** /api/2.0/mlflow/{proxyPath} | Proxy POST request to MLflow
*MlflowApi* | [**api20_mlflow_proxy_path_put**](docs/MlflowApi.md#api20_mlflow_proxy_path_put) | **PUT** /api/2.0/mlflow/{proxyPath} | Proxy PUT request to MLflow
*ReportApi* | [**api_v1_report_artifact_post**](docs/ReportApi.md#api_v1_report_artifact_post) | **POST** /api/v1/report/artifact | Upload a report artifact (image or video)
*ReportApi* | [**api_v1_report_post**](docs/ReportApi.md#api_v1_report_post) | **POST** /api/v1/report | Post a valid report
*ReportApi* | [**api_v1_validate_post**](docs/ReportApi.md#api_v1_validate_post) | **POST** /api/v1/validate | Validate a report
*RunApi* | [**api_v1_algorithm_status_post**](docs/RunApi.md#api_v1_algorithm_status_post) | **POST** /api/v1/algorithm/status | Log the status of an algorithm execution
*WritebackApi* | [**api_v1_writeback_file_delete**](docs/WritebackApi.md#api_v1_writeback_file_delete) | **DELETE** /api/v1/writeback/file | Delete a writeback file
*WritebackApi* | [**api_v1_writeback_file_get**](docs/WritebackApi.md#api_v1_writeback_file_get) | **GET** /api/v1/writeback/file | Retrieve a writeback file
*WritebackApi* | [**api_v1_writeback_file_post**](docs/WritebackApi.md#api_v1_writeback_file_post) | **POST** /api/v1/writeback/file | Create a writeback file
*WritebackApi* | [**api_v1_writeback_file_put**](docs/WritebackApi.md#api_v1_writeback_file_put) | **PUT** /api/v1/writeback/file | Upsert a writeback file
*WritebackApi* | [**api_v1_writeback_files_get**](docs/WritebackApi.md#api_v1_writeback_files_get) | **GET** /api/v1/writeback/files | Retrieve a list of available writeback files


## Documentation For Models

 - [AlgorithmStatus](docs/AlgorithmStatus.md)
 - [ApiV1DataFilesGet200Response](docs/ApiV1DataFilesGet200Response.md)
 - [ApiV1LogPost200Response](docs/ApiV1LogPost200Response.md)
 - [ArtifactResponse](docs/ArtifactResponse.md)
 - [AuthRequest](docs/AuthRequest.md)
 - [BasicMessage](docs/BasicMessage.md)
 - [File](docs/File.md)
 - [LogData](docs/LogData.md)
 - [PingAttestationStatus](docs/PingAttestationStatus.md)
 - [PingEnclaveStatus](docs/PingEnclaveStatus.md)
 - [PingEscrowStatus](docs/PingEscrowStatus.md)
 - [PingKeyManagerStatus](docs/PingKeyManagerStatus.md)
 - [Report](docs/Report.md)
 - [ReportJsonSchema](docs/ReportJsonSchema.md)
 - [RequestFileData](docs/RequestFileData.md)
 - [SASObject](docs/SASObject.md)
 - [SASObjectS3Config](docs/SASObjectS3Config.md)
 - [SQLQuery](docs/SQLQuery.md)
 - [SQLResponse](docs/SQLResponse.md)
 - [ServerConfig](docs/ServerConfig.md)
 - [ValidationResult](docs/ValidationResult.md)
 - [WriteFileRequest](docs/WriteFileRequest.md)
 - [WriteFileResponse](docs/WriteFileResponse.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="BearerAuth"></a>
### BearerAuth

- **Type**: Bearer authentication


## Author

engineering@beekeeperai.com


