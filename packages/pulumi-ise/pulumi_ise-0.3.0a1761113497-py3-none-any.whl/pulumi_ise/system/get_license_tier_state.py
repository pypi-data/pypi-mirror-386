# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetLicenseTierStateResult',
    'AwaitableGetLicenseTierStateResult',
    'get_license_tier_state',
    'get_license_tier_state_output',
]

@pulumi.output_type
class GetLicenseTierStateResult:
    """
    A collection of values returned by getLicenseTierState.
    """
    def __init__(__self__, id=None, licenses=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if licenses and not isinstance(licenses, list):
            raise TypeError("Expected argument 'licenses' to be a list")
        pulumi.set(__self__, "licenses", licenses)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The id of the object
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def licenses(self) -> Sequence['outputs.GetLicenseTierStateLicenseResult']:
        """
        List of licenses
        """
        return pulumi.get(self, "licenses")


class AwaitableGetLicenseTierStateResult(GetLicenseTierStateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLicenseTierStateResult(
            id=self.id,
            licenses=self.licenses)


def get_license_tier_state(id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLicenseTierStateResult:
    """
    This data source can read the License Tier State.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ise as ise

    example = ise.system.get_license_tier_state(id="76d24097-41c4-4558-a4d0-a8c07ac08470")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ise:system/getLicenseTierState:getLicenseTierState', __args__, opts=opts, typ=GetLicenseTierStateResult).value

    return AwaitableGetLicenseTierStateResult(
        id=pulumi.get(__ret__, 'id'),
        licenses=pulumi.get(__ret__, 'licenses'))
def get_license_tier_state_output(id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetLicenseTierStateResult]:
    """
    This data source can read the License Tier State.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ise as ise

    example = ise.system.get_license_tier_state(id="76d24097-41c4-4558-a4d0-a8c07ac08470")
    ```


    :param _builtins.str id: The id of the object
    """
    __args__ = dict()
    __args__['id'] = id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ise:system/getLicenseTierState:getLicenseTierState', __args__, opts=opts, typ=GetLicenseTierStateResult)
    return __ret__.apply(lambda __response__: GetLicenseTierStateResult(
        id=pulumi.get(__response__, 'id'),
        licenses=pulumi.get(__response__, 'licenses')))
