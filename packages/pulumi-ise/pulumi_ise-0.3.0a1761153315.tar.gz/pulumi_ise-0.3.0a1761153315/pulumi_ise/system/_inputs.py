# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'LicenseTierStateLicenseArgs',
    'LicenseTierStateLicenseArgsDict',
]

MYPY = False

if not MYPY:
    class LicenseTierStateLicenseArgsDict(TypedDict):
        name: pulumi.Input[_builtins.str]
        """
        License name
          - Choices: `ESSENTIAL`, `ADVANTAGE`, `PREMIER`, `DEVICEADMIN`, `VM`
        """
        status: pulumi.Input[_builtins.str]
        """
        License status
          - Choices: `ENABLED`, `DISABLED`
        """
elif False:
    LicenseTierStateLicenseArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class LicenseTierStateLicenseArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[_builtins.str],
                 status: pulumi.Input[_builtins.str]):
        """
        :param pulumi.Input[_builtins.str] name: License name
                 - Choices: `ESSENTIAL`, `ADVANTAGE`, `PREMIER`, `DEVICEADMIN`, `VM`
        :param pulumi.Input[_builtins.str] status: License status
                 - Choices: `ENABLED`, `DISABLED`
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "status", status)

    @_builtins.property
    @pulumi.getter
    def name(self) -> pulumi.Input[_builtins.str]:
        """
        License name
          - Choices: `ESSENTIAL`, `ADVANTAGE`, `PREMIER`, `DEVICEADMIN`, `VM`
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "name", value)

    @_builtins.property
    @pulumi.getter
    def status(self) -> pulumi.Input[_builtins.str]:
        """
        License status
          - Choices: `ENABLED`, `DISABLED`
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "status", value)


