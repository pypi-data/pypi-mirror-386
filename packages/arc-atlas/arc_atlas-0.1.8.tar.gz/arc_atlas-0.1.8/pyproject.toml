[project]
name = "arc-atlas"
version = "0.1.8"
description = "Teacher/Student orchestration toolkit for Bring-Your-Own-Agent workflows."
readme = { file = "docs/pypi.md", content-type = "text/markdown" }
requires-python = ">=3.10"
keywords = ["autonomy", "agents", "langchain", "langgraph", "reasoning", "reward-models"]
dependencies = [
    "asyncpg>=0.29.0",
    "httpx>=0.25.0",
    "langchain-core>=0.3.76",
    "langgraph>=0.6.8",
    "litellm>=1.77.7",
    "python-dotenv>=1.0.1",
    "pydantic>=2.11.9",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries",
]
[project.scripts]
"atlas.export" = "atlas.cli.export:main"
"arc-atlas" = "atlas.cli.export:main"
"atlas-export" = "atlas.cli.export:main"
"atlas" = "atlas.cli.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-asyncio>=0.21",
]

[project.urls]
Documentation = "https://docs.arc.computer/introduction"
Source = "https://github.com/Arc-Computer/atlas-sdk"
Issues = "https://github.com/Arc-Computer/atlas-sdk/issues"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
markers = [
    "postgres: integration tests requiring PostgreSQL",
]
pythonpath = ["."]

[tool.setuptools.packages.find]
include = ["atlas*"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"atlas.data" = [
    "sample_traces.jsonl",
    "sample_probe_payloads.jsonl",
    "synthetic_runtime_tasks.jsonl",
    "reward_eval_trajectories.jsonl",
]
