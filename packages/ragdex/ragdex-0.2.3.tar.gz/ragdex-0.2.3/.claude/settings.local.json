{
  "permissions": {
    "allow": [
      "Bash(export SPIRITUAL_LIBRARY_BOOKS_PATH=\"/Users/hpoliset/SpiritualLibrary\")",
      "Bash(export SPIRITUAL_LIBRARY_DB_PATH=\"/Users/hpoliset/DocumentIndexerMCP/chroma_db\")",
      "Bash(export SPIRITUAL_LIBRARY_LOGS_PATH=\"/Users/hpoliset/DocumentIndexerMCP/logs\")",
      "Bash(./setup.sh:*)",
      "Bash(cat:*)",
      "Bash(./scripts/start_web_monitor.sh:*)",
      "Bash(./scripts/indexing_status.sh:*)",
      "Bash(./scripts/install_service.sh:*)",
      "Bash(./scripts/service_status.sh:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(./scripts/uninstall_service.sh:*)",
      "Bash(ls:*)",
      "Bash(kill:*)",
      "Bash(mv:*)",
      "Bash(log show:*)",
      "Bash(brew install:*)",
      "Bash(soffice:*)",
      "Bash(grep:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/manage_failed_docs.sh:*)",
      "Bash(find:*)",
      "Bash(python3:*)",
      "Bash(pandoc:*)",
      "Bash(echo:*)",
      "Bash(./scripts/cleanup_failed_list.sh:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./scripts/cleanup_ocr_cache.sh:*)",
      "Bash(./scripts/run.sh:*)",
      "Bash(export PERSONAL_LIBRARY_DOC_PATH=\"/Users/hpoliset/SpiritualLibrary\")",
      "Bash(venv_mcp/bin/python -c \"from src.core.config import config; print(f''Books directory: {config.books_directory}'')\")",
      "Bash(git push:*)",
      "Bash(diff:*)",
      "Bash(venv_mcp/bin/python:*)",
      "Bash(timeout 5 venv_mcp/bin/python:*)",
      "Bash(venv_mcp/bin/pip:*)",
      "Bash(curl:*)",
      "Bash(launchctl:*)",
      "Bash(mkdir:*)",
      "Bash(git remote set-url:*)",
      "Bash(for:*)",
      "Bash(do sed -i '' 's/com\\.spiritual-library/com.personal-library/g' \"$file\")",
      "Bash(done)",
      "Bash(sed:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git branch:*)",
      "Bash(git fetch:*)",
      "Bash(gs:*)",
      "Bash(./scripts/view_mcp_logs.sh:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(rm:*)",
      "WebSearch",
      "Bash(export TOKENIZERS_PARALLELISM=false CHROMA_TELEMETRY=false ANONYMIZED_TELEMETRY=false)",
      "Bash(/opt/homebrew/bin/python3.12:*)",
      "Bash(venv_mcp_312/bin/python:*)",
      "Bash(venv_mcp_312/bin/pip install --upgrade pip)",
      "Bash(venv_mcp_312/bin/pip install:*)",
      "Bash(do)",
      "Bash(if grep -q \"venv_mcp/bin/python\" \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Bash(export PERSONAL_LIBRARY_DB_PATH=\"/Users/hpoliset/DocumentIndexerMCP/chroma_db\")",
      "Bash(./scripts/update_claude_config.sh:*)",
      "Bash(./scripts/install_webmonitor_service.sh:*)",
      "Bash(./scripts/uninstall_webmonitor_service.sh:*)",
      "Bash(sample:*)",
      "Bash(open http://localhost:8888)",
      "Bash(/tmp/monitor_indexing.sh:*)",
      "Bash(venv_mcp/bin/pdlib-cli:*)",
      "Bash(timeout 5 venv_mcp/bin/pdlib-mcp:*)",
      "Bash(timeout:*)",
      "Read(//Users/hpoliset/Library/Logs/Claude/**)",
      "Read(//Users/hpoliset/Library/Application Support/Claude/**)",
      "Bash(python test_mcp_features.py)",
      "Read(//Users/hpoliset/Library/Mail/**)",
      "Read(//Users/hpoliset/Library/**)",
      "Bash(git log:*)",
      "Bash(uv build:*)",
      "Bash(uv publish:*)",
      "Bash(uv tool run twine upload:*)",
      "Read(//Users/hpoliset/**)",
      "Bash(TESTPYPI_TOKEN='pypi-AgENdGVzdC5weXBpLm9yZwIkZjlhODI1ZmUtMzgxOC00NGZkLTk2YzAtMWE2ZmM1ZGFmMTdhAAIqWzMsImJkZWM2YzIwLTFiM2UtNDNiYS05MWJjLWUyNDFlNGZjMjA1MyJdAAAGICNbfIPybj7tXmVpUW36IMbO6O_B6qwUl-TLxdL_1Lfh')",
      "Bash(PYPI_TOKEN='pypi-AgEIcHlwaS5vcmcCJGNkY2Y4ZTljLTBjZTAtNDhhNy05YjJlLWQ5YzBiZTIyZjUyZAACKlszLCJiMTUzMzM3ZC1iNGI4LTRhZWMtOTRkNC00ZmZhNTY1MjU5YzQiXQAABiDUcFg4kz0ygRDEQ3FqzMJOSMK77FR3MHdZvzNxJ3BJXQ')"
    ],
    "deny": []
  }
}
