# coding: utf-8

"""
    TOCTOC API ROUTER

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from toctoc_controller_router_sdk.models.highlight200_response import Highlight200Response
from toctoc_controller_router_sdk.models.remove200_response import Remove200Response
from toctoc_controller_router_sdk.models.status200_response import Status200Response
from toctoc_controller_router_sdk.models.summary200_response import Summary200Response

from toctoc_controller_router_sdk.api_client import ApiClient, RequestSerialized
from toctoc_controller_router_sdk.api_response import ApiResponse
from toctoc_controller_router_sdk.rest import RESTResponseType


class HighlightApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def highlight(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Highlight200Response:
        """Highlight property

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Highlight Property</strong>   </div>      <p style=\"margin: 0px;\">This endpoint enables you to highlight a specific property in the search results.</p>   </div>          <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Duration & Recovery</strong>   </div>      <p style=\"margin: 0px;\">The highlight will remain active until your next package renewal date. You can remove it at any time to recover the credit.</p>   </div>          <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Note</strong>   </div>      <p style=\"margin: 0px;\">Properties already highlighted cannot be highlighted again.</p>   </div>          <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Credit Usage</strong>   </div>      <p style=\"margin: 0px;\">Each highlight activation will consume one credit from your current package allocation.</p>   </div>      

        :param property_code: Property code to highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._highlight_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Highlight200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def highlight_with_http_info(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Highlight200Response]:
        """Highlight property

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Highlight Property</strong>   </div>      <p style=\"margin: 0px;\">This endpoint enables you to highlight a specific property in the search results.</p>   </div>          <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Duration & Recovery</strong>   </div>      <p style=\"margin: 0px;\">The highlight will remain active until your next package renewal date. You can remove it at any time to recover the credit.</p>   </div>          <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Note</strong>   </div>      <p style=\"margin: 0px;\">Properties already highlighted cannot be highlighted again.</p>   </div>          <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Credit Usage</strong>   </div>      <p style=\"margin: 0px;\">Each highlight activation will consume one credit from your current package allocation.</p>   </div>      

        :param property_code: Property code to highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._highlight_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Highlight200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def highlight_without_preload_content(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Highlight property

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Highlight Property</strong>   </div>      <p style=\"margin: 0px;\">This endpoint enables you to highlight a specific property in the search results.</p>   </div>          <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Duration & Recovery</strong>   </div>      <p style=\"margin: 0px;\">The highlight will remain active until your next package renewal date. You can remove it at any time to recover the credit.</p>   </div>          <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Note</strong>   </div>      <p style=\"margin: 0px;\">Properties already highlighted cannot be highlighted again.</p>   </div>          <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Credit Usage</strong>   </div>      <p style=\"margin: 0px;\">Each highlight activation will consume one credit from your current package allocation.</p>   </div>      

        :param property_code: Property code to highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._highlight_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Highlight200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _highlight_serialize(
        self,
        property_code,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if property_code is not None:
            _path_params['propertyCode'] = property_code
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/1.0/properties/highlight/{propertyCode}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def remove(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to remove highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Remove200Response:
        """Remove property highlight

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Remove Highlight</strong>   </div>      <p style=\"margin: 0px;\">Remove the highlight status from a specific property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Credit Recovery</strong>   </div>      <p style=\"margin: 0px;\">When you remove a highlight, the credit will be returned to your package for future use.</p>   </div>        <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Immediate Effect</strong>   </div>      <p style=\"margin: 0px;\">The highlight will be immediately removed from search top highlighted results.</p>   </div>   

        :param property_code: Property code to remove highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._remove_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Remove200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def remove_with_http_info(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to remove highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Remove200Response]:
        """Remove property highlight

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Remove Highlight</strong>   </div>      <p style=\"margin: 0px;\">Remove the highlight status from a specific property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Credit Recovery</strong>   </div>      <p style=\"margin: 0px;\">When you remove a highlight, the credit will be returned to your package for future use.</p>   </div>        <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Immediate Effect</strong>   </div>      <p style=\"margin: 0px;\">The highlight will be immediately removed from search top highlighted results.</p>   </div>   

        :param property_code: Property code to remove highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._remove_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Remove200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def remove_without_preload_content(
        self,
        property_code: Annotated[StrictStr, Field(description="Property code to remove highlight")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Remove property highlight

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Remove Highlight</strong>   </div>      <p style=\"margin: 0px;\">Remove the highlight status from a specific property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Credit Recovery</strong>   </div>      <p style=\"margin: 0px;\">When you remove a highlight, the credit will be returned to your package for future use.</p>   </div>        <div style=\"color:#645225; background-color:#fefaee; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#face5d\">   <path d=\"M7.134 2.987a1 1 0 0 1 1.732 0l5.196 9a1 1 0 0 1-.866 1.5H2.804a1 1 0 0 1-.866-1.5l5.196-9Z\"></path>   <path d=\"M8.09 11.717a.535.535 0 1 0 0-1.07.535.535 0 0 0 0 1.07Z\"></path>   <path d=\"M8.09 6.662v2.855\"></path> </svg>   <strong>Immediate Effect</strong>   </div>      <p style=\"margin: 0px;\">The highlight will be immediately removed from search top highlighted results.</p>   </div>   

        :param property_code: Property code to remove highlight (required)
        :type property_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._remove_serialize(
            property_code=property_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Remove200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _remove_serialize(
        self,
        property_code,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if property_code is not None:
            _path_params['propertyCode'] = property_code
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/1.0/properties/highlight/remove/{propertyCode}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def status(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Status200Response:
        """Status of subscription

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Package Status</strong>   </div>      <p style=\"margin: 0px;\">View the current status of your highlight package, including available credits and usage statistics.</p>   </div>           <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Subscription Details</strong>   </div>      <p style=\"margin: 0px;\">This endpoint provides detailed information about your current highlight subscription and its limitations.</p>   </div>      

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._status_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Status200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def status_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Status200Response]:
        """Status of subscription

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Package Status</strong>   </div>      <p style=\"margin: 0px;\">View the current status of your highlight package, including available credits and usage statistics.</p>   </div>           <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Subscription Details</strong>   </div>      <p style=\"margin: 0px;\">This endpoint provides detailed information about your current highlight subscription and its limitations.</p>   </div>      

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._status_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Status200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def status_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Status of subscription

               <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Package Status</strong>   </div>      <p style=\"margin: 0px;\">View the current status of your highlight package, including available credits and usage statistics.</p>   </div>           <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Subscription Details</strong>   </div>      <p style=\"margin: 0px;\">This endpoint provides detailed information about your current highlight subscription and its limitations.</p>   </div>      

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._status_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Status200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _status_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/1.0/properties/highlight/status',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def summary(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Page number for pagination")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Number of items per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Summary200Response:
        """Summary of highlighted properties

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Property List</strong>   </div>      <p style=\"margin: 0px;\">Retrieve a comprehensive list of all your currently highlighted properties.</p>   </div>        <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Pagination</strong>   </div>      <p style=\"margin: 0px;\">Results are paginated and include details about each highlighted property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Management</strong>   </div>      <p style=\"margin: 0px;\">Use this endpoint to track and manage your active highlights effectively.</p>   </div>   

        :param page: Page number for pagination
        :type page: float
        :param page_size: Number of items per page
        :type page_size: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._summary_serialize(
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Summary200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def summary_with_http_info(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Page number for pagination")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Number of items per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Summary200Response]:
        """Summary of highlighted properties

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Property List</strong>   </div>      <p style=\"margin: 0px;\">Retrieve a comprehensive list of all your currently highlighted properties.</p>   </div>        <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Pagination</strong>   </div>      <p style=\"margin: 0px;\">Results are paginated and include details about each highlighted property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Management</strong>   </div>      <p style=\"margin: 0px;\">Use this endpoint to track and manage your active highlights effectively.</p>   </div>   

        :param page: Page number for pagination
        :type page: float
        :param page_size: Number of items per page
        :type page_size: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._summary_serialize(
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Summary200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def summary_without_preload_content(
        self,
        page: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Page number for pagination")] = None,
        page_size: Annotated[Optional[Union[StrictFloat, StrictInt]], Field(description="Number of items per page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Summary of highlighted properties

            <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Property List</strong>   </div>      <p style=\"margin: 0px;\">Retrieve a comprehensive list of all your currently highlighted properties.</p>   </div>        <div style=\"color:#014361; background-color:#e5f6fd; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#0288d1\">   <path d=\"M8 4.648A.581.581 0 108 5.81a.581.581 0 000-1.162z\"></path>   <circle cx=\"8\" cy=\"8\" r=\"6\" transform=\"rotate(-180 8 8)\"></circle>   <path d=\"M8 11V7\"></path> </svg>   <strong>Pagination</strong>   </div>      <p style=\"margin: 0px;\">Results are paginated and include details about each highlighted property.</p>   </div>        <div style=\"color:#1f4b34; background-color:#edf8f2; padding: 15px;font-family: Nunito;display: flex; flex-direction: column;gap: 10px\">      <div style=\"display: flex;gap: 6px;align-items: center;\">   <svg viewBox=\"0 0 16 16\" width=\"20\" height=\"20\" stroke-width=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#23ad63\">     <circle cx=\"8\" cy=\"8\" r=\"6\"></circle>     <path d=\"M5.5 8.5L7 10L10.5 6.5\"></path>   </svg>   <strong>Management</strong>   </div>      <p style=\"margin: 0px;\">Use this endpoint to track and manage your active highlights effectively.</p>   </div>   

        :param page: Page number for pagination
        :type page: float
        :param page_size: Number of items per page
        :type page_size: float
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._summary_serialize(
            page=page,
            page_size=page_size,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Summary200Response",
            '400': "ResponseBadRequestDto",
            '500': "ResponseErrorDto",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _summary_serialize(
        self,
        page,
        page_size,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if page is not None:
            
            _query_params.append(('page', page))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearer'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/1.0/properties/highlight/summary',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


