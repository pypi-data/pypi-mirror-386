# {{ project_name }} - Environment Variables
# Copy this file to .env and fill in your API keys

{% if 'daily' in transports or 'daily_telephony' in transports %}
# Daily (Transport)
DAILY_API_KEY=
DAILY_SAMPLE_ROOM_URL=  # Optional: leave empty to create a new room

{% endif %}
{% if 'twilio' in transports %}
# Twilio (Transport)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=

{% endif %}
{% if 'telnyx' in transports %}
# Telnyx (Transport)
TELNYX_API_KEY=
TELNYX_ACCOUNT_SID=

{% endif %}
{% if 'plivo' in transports %}
# Plivo (Transport)
PLIVO_AUTH_ID=
PLIVO_AUTH_TOKEN=

{% endif %}
{% if 'exotel' in transports %}
# Exotel (Transport)
# No environment variables required

{% endif %}
{% if stt_service == 'assemblyai_stt' %}
# AssemblyAI (STT)
ASSEMBLYAI_API_KEY=

{% endif %}
{% if stt_service == 'aws_transcribe_stt' or llm_service == 'aws_bedrock_llm' or tts_service == 'aws_polly_tts' or realtime_service == 'aws_nova_realtime' %}
# AWS (STT/LLM/TTS/Realtime)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
{% if llm_service == 'aws_bedrock_llm' %}
AWS_BEDROCK_MODEL=
AWS_SESSION_TOKEN=
{% endif %}
{% if tts_service == 'aws_polly_tts' or realtime_service == 'aws_nova_realtime' %}
AWS_VOICE_ID=
{% endif %}
{% if realtime_service == 'aws_nova_realtime' %}
AWS_SESSION_TOKEN=  # Optional
{% endif %}

{% endif %}
{% if stt_service == 'azure_stt' or llm_service == 'azure_llm' or tts_service == 'azure_tts' or realtime_service == 'azure_realtime' %}
# Azure (STT/LLM/TTS/Realtime)
{% if stt_service == 'azure_stt' or tts_service == 'azure_tts' %}
AZURE_SPEECH_API_KEY=
AZURE_SPEECH_REGION=
{% if tts_service == 'azure_tts' %}
AZURE_SPEECH_VOICE_ID=
{% endif %}
{% endif %}
{% if llm_service == 'azure_llm' %}
AZURE_CHATGPT_API_KEY=
AZURE_CHATGPT_ENDPOINT=
AZURE_CHATGPT_MODEL=
{% endif %}
{% if realtime_service == 'azure_realtime' %}
AZURE_REALTIME_API_KEY=
AZURE_REALTIME_BASE_URL=
AZURE_INSTRUCTIONS=  # Optional: Custom system instructions
{% endif %}

{% endif %}
{% if stt_service == 'cartesia_stt' or tts_service == 'cartesia_tts' %}
# Cartesia (STT/TTS)
CARTESIA_API_KEY=
{% if tts_service == 'cartesia_tts' %}
CARTESIA_VOICE_ID=
{% endif %}

{% endif %}
{% if stt_service == 'deepgram_stt' or stt_service == 'deepgram_flux_stt' or tts_service == 'deepgram_tts' %}
# Deepgram (STT/TTS)
DEEPGRAM_API_KEY=
{% if tts_service == 'deepgram_tts' %}
DEEPGRAM_VOICE_ID=
{% endif %}

{% endif %}
{% if stt_service == 'elevenlabs_stt' or tts_service == 'elevenlabs_tts' %}
# ElevenLabs (STT/TTS)
ELEVENLABS_API_KEY=
{% if tts_service == 'elevenlabs_tts' %}
ELEVENLABS_VOICE_ID=
{% endif %}

{% endif %}
{% if stt_service == 'fal_stt' %}
# Fal (STT)
FAL_KEY=

{% endif %}
{% if stt_service == 'gladia_stt' %}
# Gladia (STT)
GLADIA_API_KEY=
GLADIA_REGION=

{% endif %}
{% if stt_service == 'google_stt' or llm_service == 'google_gemini_llm' or llm_service == 'google_vertex_llm' or tts_service == 'google_tts' or realtime_service == 'gemini_live_realtime' or realtime_service == 'gemini_vertex_live_realtime' %}
# Google (STT/LLM/TTS/Realtime)
{% if stt_service == 'google_stt' or llm_service == 'google_gemini_llm' or tts_service == 'google_tts' or realtime_service == 'gemini_live_realtime' %}
GOOGLE_API_KEY=
GOOGLE_MODEL=
{% endif %}
{% if stt_service == 'google_stt' or tts_service == 'google_tts' or llm_service == 'google_vertex_llm' or realtime_service == 'gemini_vertex_live_realtime' %}
GOOGLE_APPLICATION_CREDENTIALS=path/to/credentials.json  # For service account
{% endif %}
{% if llm_service == 'google_vertex_llm' or realtime_service == 'gemini_vertex_live_realtime' %}
GOOGLE_LOCATION=
GOOGLE_PROJECT_ID=
{% endif %}
{% if tts_service == 'google_tts' or realtime_service == 'gemini_live_realtime' or realtime_service == 'gemini_vertex_live_realtime' %}
GOOGLE_VOICE_ID=
{% endif %}
{% if realtime_service == 'gemini_live_realtime' or realtime_service == 'gemini_vertex_live_realtime' %}
GOOGLE_SYSTEM_INSTRUCTION=
{% endif %}

{% endif %}
{% if stt_service == 'groq_stt' or llm_service == 'groq_llm' or tts_service == 'groq_tts' %}
# Groq (STT/LLM/TTS)
GROQ_API_KEY=
GROQ_MODEL=
{% if tts_service == 'groq_tts' %}
GROQ_VOICE_ID=
{% endif %}

{% endif %}
{% if stt_service == 'nvidia_riva_stt' or llm_service == 'nvidia_nim_llm' or tts_service == 'nvidia_riva_tts' %}
# NVIDIA (STT/LLM/TTS)
NVIDIA_API_KEY=
NVIDIA_MODEL=

{% endif %}
{% if stt_service == 'openai_stt' or llm_service == 'openai_llm' or llm_service == 'openpipe_llm' or tts_service == 'openai_tts' or realtime_service == 'openai_realtime' %}
# OpenAI (STT/LLM/TTS/Realtime)
OPENAI_API_KEY=
OPENAI_MODEL=
{% if tts_service == 'openai_tts' %}
OPENAI_VOICE_ID=
{% endif %}
{% if llm_service == 'openpipe_llm' %}
OPENPIPE_API_KEY=
{% endif %}
{% if realtime_service == 'openai_realtime' %}
OPENAI_INSTRUCTIONS=  # Optional: Custom system instructions
{% endif %}

{% endif %}
{% if stt_service == 'sambanova_stt' or llm_service == 'sambanova_llm' %}
# SambaNova (STT/LLM)
SAMBANOVA_API_KEY=
SAMBANOVA_MODEL=

{% endif %}
{% if stt_service == 'soniox_stt' %}
# Soniox (STT)
SONIOX_API_KEY=

{% endif %}
{% if stt_service == 'speechmatics_stt' %}
# Speechmatics (STT)
SPEECHMATICS_API_KEY=

{% endif %}
{% if stt_service == 'ultravox_stt' %}
# Ultravox (STT)
ULTRAVOX_MODEL_NAME=
HF_TOKEN=
ULTRAVOX_REGION=

{% endif %}
{% if stt_service == 'whisper_stt' %}
# Whisper (STT)
OPENAI_API_KEY=

{% endif %}
{% if llm_service == 'anthropic_llm' %}
# Anthropic Claude (LLM)
ANTHROPIC_API_KEY=
ANTHROPIC_MODEL=

{% endif %}
{% if llm_service == 'cerebras_llm' %}
# Cerebras (LLM)
CEREBRAS_API_KEY=
CEREBRAS_MODEL=

{% endif %}
{% if llm_service == 'deepseek_llm' %}
# DeepSeek (LLM)
DEEPSEEK_API_KEY=
DEEPSEEK_MODEL=

{% endif %}
{% if llm_service == 'fireworks_llm' %}
# Fireworks (LLM)
FIREWORKS_API_KEY= 
FIREWORKS_MODEL=

{% endif %}
{% if llm_service == 'grok_llm' %}
# Grok (LLM)
GROK_API_KEY=
GROK_MODEL=

{% endif %}
{% if llm_service == 'mistral_llm' %}
# Mistral (LLM)
MISTRAL_API_KEY=
MISTRAL_MODEL=

{% endif %}
{% if llm_service == 'ollama_llm' %}
# Ollama (LLM)
OLLAMA_MODEL=

{% endif %}
{% if llm_service == 'openrouter_llm' %}
# OpenRouter (LLM)
OPENROUTER_API_KEY=
OPENROUTER_MODEL=

{% endif %}
{% if llm_service == 'perplexity_llm' %}
# Perplexity (LLM)
PERPLEXITY_API_KEY=
PERPLEXITY_MODEL=

{% endif %}
{% if llm_service == 'qwen_llm' %}
# Qwen (LLM)
QWEN_API_KEY=
QWEN_MODEL=

{% endif %}
{% if llm_service == 'together_llm' %}
# Together (LLM)
TOGETHER_API_KEY=
TOGETHER_MODEL=

{% endif %}
{% if tts_service == 'asyncai_tts' %}
# AsyncAI (TTS)
ASYNCAI_API_KEY=
ASYNCAI_VOICE_ID=

{% endif %}
{% if tts_service == 'fish_tts' %}
# Fish (TTS)
FISH_API_KEY=
FISH_MODEL=

{% endif %}
{% if tts_service == 'hume_tts' %}
# Hume (TTS)
HUME_API_KEY=
HUME_VOICE_ID=

{% endif %}
{% if tts_service == 'inworld_tts' %}
# Inworld (TTS)
INWORLD_API_KEY=
INWORLD_VOICE_ID=

{% endif %}
{% if tts_service == 'lmnt_tts' %}
# LMNT (TTS)
LMNT_API_KEY=
LMNT_VOICE_ID=

{% endif %}
{% if tts_service == 'minimax_tts' %}
# MiniMax (TTS)
MINIMAX_API_KEY=
MINIMAX_GROUP_ID=
MINIMAX_VOICE_ID=

{% endif %}
{% if tts_service == 'neuphonic_tts' %}
# Neuphonic (TTS)
NEUPHONIC_API_KEY=
NEUPHONIC_VOICE_ID=

{% endif %}
{% if tts_service == 'piper_tts' %}
# Piper (TTS)
PIPER_BASE_URL=

{% endif %}
{% if tts_service == 'rime_tts' %}
# Rime (TTS)
RIME_API_KEY=
RIME_VOICE_ID=

{% endif %}
{% if tts_service == 'sarvam_tts' %}
# Sarvam (TTS)
SARVAM_API_KEY=
SARVAM_MODEL=
SARVAM_VOICE_ID=

{% endif %}
{% if tts_service == 'xtts_tts' %}
# XTTS (TTS)
XTTS_VOICE_ID=
XTTS_BASE_URL=

{% endif %}