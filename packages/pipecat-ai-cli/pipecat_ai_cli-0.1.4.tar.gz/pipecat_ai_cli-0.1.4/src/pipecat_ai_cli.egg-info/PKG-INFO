Metadata-Version: 2.4
Name: pipecat-ai-cli
Version: 0.1.4
Summary: CLI for building, deploying, and monitoring Pipecat voice agents
License-Expression: BSD-2-Clause
Project-URL: Source, https://github.com/pipecat-ai/pipecat-cli
Project-URL: Website, https://pipecat.ai
Project-URL: Issues, https://github.com/pipecat-ai/pipecat-cli/issues
Keywords: pipecat,ai,cli,voice,agents,scaffolding
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Multimedia :: Sound/Audio
Classifier: Topic :: Communications :: Conferencing
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typer<1,>=0.9.0
Requires-Dist: rich<14,>=13.0.0
Requires-Dist: jinja2<4,>=3.1.0
Requires-Dist: questionary<3,>=2.0.0
Requires-Dist: ruff<1,>=0.12.1
Requires-Dist: pipecat-ai-tail>=0.0.1
Requires-Dist: pipecatcloud>=0.2.6
Dynamic: license-file

# Pipecat CLI

A complete toolkit for building, deploying, and monitoring [Pipecat](https://github.com/pipecat-ai/pipecat) AI voice agents.

- **Scaffold** new projects with `pipecat init`
- **Deploy** to production with `pipecat cloud`
- **Monitor** live bots with `pipecat tail`

## Requirements

- Python 3.10+

## Installation

```bash
uv tool install pipecat-ai-cli
```

This installs the CLI globally. If you don't have `uv`, you can also use `pipx install pipecat-ai-cli`.

> **Tip:** All commands can use either `pipecat` or the shorter `pc` alias.

## Create a New Project

Create a new Pipecat project interactively:

```bash
pipecat init
```

The CLI will guide you through selecting:

- Bot type and client framework
- Transport provider (Daily, Twilio, etc.)
- Pipeline mode (Cascade or Realtime)
- AI services (STT, LLM, TTS)
- Optional features and deployment target

**Generated Project Structure**

```
mybot/
├── server/                  # Python bot server
│   ├── bot.py              # Main bot implementation
│   ├── pyproject.toml      # Python dependencies
│   ├── .env.example        # Environment variables template
│   ├── Dockerfile          # Container image (if cloud enabled)
│   └── pcc-deploy.toml     # Deployment config (if cloud enabled)
├── client/                  # Web client (if generated)
│   ├── src/
│   ├── package.json
│   └── ...
├── .gitignore
└── README.md                # Project setup instructions
```

## Monitor Your Bot

Use the built-in Tail dashboard to monitor your bot in real-time:

```bash
# Connect to local bot (default: ws://localhost:9292)
pipecat tail

# Connect to remote session
pipecat tail --url wss://your-bot.example.com
```

Tail provides:

- 📜 Real-time system logs
- 💬 Live conversation tracking
- 🔊 Audio level monitoring
- 📈 Service metrics and usage stats

## Deploy to Pipecat Cloud

Deploy and manage your bot in production with [Pipecat Cloud](https://www.daily.co/products/pipecat-cloud/):

```bash
# Authenticate
pipecat cloud auth login

# Build and deploy
pipecat cloud docker build-push
pipecat cloud deploy

# Manage deployments
pipecat cloud agent list
pipecat cloud agent logs <agent-name>
```

Cloud commands provide:

- 🔐 Authentication and credential management
- 🐳 Docker build and registry integration
- 🚀 One-command deployment
- 📊 Agent status and log monitoring
- 🔧 Runtime configuration management

**Note:** When you enable "Deploy to Pipecat Cloud" during project creation, the necessary Docker and deployment config files are automatically generated.

Learn more in the [Pipecat Cloud documentation](https://docs.pipecat.ai/deployment/pipecat-cloud/introduction).

## 📚 Next steps

- See the [Pipecat documentation](https://docs.pipecat.ai) for more about building bots
- Learn how to extend the template using [examples & recipes](https://docs.pipecat.ai/examples)
- [Join our Discord](https://discord.gg/pipecat) to get help or provide feedback
