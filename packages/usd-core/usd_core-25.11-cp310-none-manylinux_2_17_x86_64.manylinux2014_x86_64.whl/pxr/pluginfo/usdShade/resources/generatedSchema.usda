#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED BY usdGenSchema.  DO NOT EDIT."
)

class NodeGraph "NodeGraph" (
    customData = {
        string userDocBrief = """A node-graph is a container for shading nodes, as well as other 
    node-graphs."""
    }
)
{
}

class Material "Material" (
    customData = {
        string userDocBrief = '''A Material provides a container into which multiple "render contexts"
    can add data that defines a "shading material" for a renderer.'''
    }
)
{
    token outputs:displacement (
        customData = {
            string userDocBrief = '''Represents the universal "displacement" output terminal of a 
        material.'''
        }
        displayGroup = "Outputs"
    )
    token outputs:surface (
        customData = {
            string userDocBrief = '''Represents the universal "surface" output terminal of a
        material.'''
        }
        displayGroup = "Outputs"
    )
    token outputs:volume (
        customData = {
            string userDocBrief = '''Represents the universal "volume" output terminal of a
        material.'''
        }
        displayGroup = "Outputs"
    )
}

class Shader "Shader" (
    apiSchemas = ["NodeDefAPI"]
    customData = {
        string userDocBrief = "Base class for all USD shaders."
    }
)
{
}

class "NodeDefAPI" (
    customData = {
        string userDocBrief = '''UsdShadeNodeDefAPI is an API schema that provides attributes
    for a prim to select a corresponding Shader Node Definition ("Sdr Node"),
    as well as to look up a runtime entry for that shader node in the
    form of an SdrShaderNode.'''
    }
)
{
    uniform token info:id (
        customData = {
            string userDocBrief = """The id is an identifier for the type or purpose of the 
        shader."""
        }
    )
    uniform token info:implementationSource = "id" (
        allowedTokens = ["id", "sourceAsset", "sourceCode"]
        customData = {
            string userDocBrief = """Specifies the attribute that should be consulted to get the 
        shader's implementation or its source code."""
        }
    )
}

class "ConnectableAPI" (
    customData = {
        string userDocBrief = """UsdShadeConnectableAPI is an API schema that provides a common
    interface for creating outputs and making connections between shading 
    parameters and outputs."""
    }
)
{
}

class "MaterialBindingAPI" (
    customData = {
        string userDocBrief = """UsdShadeMaterialBindingAPI is an API schema that provides an 
    interface for binding materials to prims or collections of prims 
    (represented by UsdCollectionAPI objects)."""
    }
)
{
}

class "CoordSysAPI" (
    customData = {
        string userDocBrief = """UsdShadeCoordSysAPI provides a way to designate, name,
    and discover coordinate systems."""
    }
)
{
    rel coordSys:__INSTANCE_NAME__:binding (
        customData = {
            string userDocBrief = "Prim binding expressing the appropriate coordinate systems."
        }
        displayName = "Bound Coordinate System"
    )
}

