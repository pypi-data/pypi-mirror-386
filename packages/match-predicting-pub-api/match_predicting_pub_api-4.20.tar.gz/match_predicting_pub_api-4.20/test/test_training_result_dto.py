# coding: utf-8

"""
    Match Predicting Application Public API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from match_predicting_pub_api.models.training_result_dto import TrainingResultDTO  # noqa: E501

class TestTrainingResultDTO(unittest.TestCase):
    """TrainingResultDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrainingResultDTO:
        """Test TrainingResultDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrainingResultDTO`
        """
        model = TrainingResultDTO()  # noqa: E501
        if include_optional:
            return TrainingResultDTO(
                training_request = match_predicting_pub_api.models.training_request_dto.TrainingRequestDTO(
                    competition_ids = [
                        56
                        ], 
                    seasons = [
                        56
                        ], 
                    number_of_epochs = 56, 
                    learning_rate = 1.337, 
                    training_network = match_predicting_pub_api.models.training_network_dto.TrainingNetworkDTO(
                        network_version = 56, 
                        ignore_matches_with_insufficient_data = True, 
                        number_of_last_matches = 56, 
                        number_of_last_common_matches = 56, 
                        number_of_matches_for_team_hard_factor = 56, 
                        number_of_matches_for_player_hard_factor = 56, ), ),
                number_of_matches = 56,
                starting_time = 56,
                precision = 1.337,
                sizes = '',
                biases = '',
                weights = ''
            )
        else:
            return TrainingResultDTO(
        )
        """

    def testTrainingResultDTO(self):
        """Test TrainingResultDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
