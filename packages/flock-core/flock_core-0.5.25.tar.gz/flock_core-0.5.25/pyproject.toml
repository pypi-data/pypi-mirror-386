[project]
name = "flock-core"
version = "0.5.25"
description = "Flock: A declrative framework for building and orchestrating AI agents."
readme = "README.md"
requires-python = ">=3.12"
dependencies = [ "dspy==3.0.3", "litellm==1.78.0", "fastapi>=0.117.1", "httpx>=0.28.1", "aiosqlite>=0.20.0", "pydantic[email]>=2.11.9", "rich>=14.1.0", "typer>=0.19.2", "uvicorn>=0.37.0", "opentelemetry-api>=1.30.0", "opentelemetry-exporter-jaeger>=1.21.0", "opentelemetry-exporter-jaeger-proto-grpc>=1.21.0", "opentelemetry-exporter-otlp>=1.30.0", "opentelemetry-instrumentation-logging>=0.51b0", "opentelemetry-sdk>=1.30.0", "loguru>=0.7.3", "mcp>=1.7.1", "toml>=0.10.2", "poethepoet>=0.30.0", "devtools>=0.12.2", "websockets>=15.0.1", "duckdb>=1.1.0", "hanging-threads>=2.0.7",]

[project.optional-dependencies]
semantic = [
    "sentence-transformers>=3.0.0",
]

[[project.authors]]
name = "Andre Ratzenberger"
email = "andre.ratzenberger@whiteduck.de"

[build-system]
requires = [ "hatchling",]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
 "pytest>=8.3.3",
 "pytest-clarity>=1.0.1",
 "pytest-cov>=6.0.0",
 "pytest-sugar>=1.0.0",
 "ruff>=0.7.2",
 "pytest-asyncio>=0.24.0",
 "pytest-mock>=3.14.0",
 "pytest-order>=1.3.0",
 "httpx>=0.28.1",
 "respx>=0.22.0",
 "mkdocs>=1.6.1",
 "mkdocs-material>=9.6.3",
 "mkdocstrings[python]>=0.28.0",
 "mkdocs-gen-files>=0.5.0",
 "mkdocs-literate-nav>=0.6.1",
 "mkdocs-section-index>=0.3.9",
 "mkdocs-minify-plugin>=0.8.0",
 "mkdocs-git-revision-date-localized-plugin>=1.3.0",
 "mkdocs-redirects>=1.2.2",
 "mkdocs-glightbox>=0.4.0",
 "mypy>=1.15.0",
 "pre-commit>=4.3.0",
 "bandit[toml]>=1.8.6",
 "jupyter>=1.1.1",
 "ipykernel>=6.29.5",
 "ipywidgets>=8.1.5",
 "notebook>=7.2.2",
 "jupyterlab>=4.3.3",
 "radon>=6.0.1",
]

[project.license]
text = "MIT"

[project.scripts]
flock-flow = "flock:main"

[tool.bandit]
exclude_dirs = [ "tests/", "examples/",]
skips = [ "B113",]

[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4
exclude = [ ".git", ".mypy_cache", ".pytest_cache", ".ruff_cache", ".venv", "__pycache__", "dist", "build", "htmlcov", "logs", "metrics", "*.egg-info", "frontend/", "docs/", "src/flock/dashboard/graph_builder.py",]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true
check_untyped_defs = true
disallow_untyped_decorators = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = false
disallow_incomplete_defs = false
disallow_untyped_defs = false
no_implicit_reexport = true
strict_optional = true
show_error_codes = true
show_column_numbers = true
pretty = true
platform = "linux"
exclude = [ "^frontend/", "^docs/", "^build/", "^dist/",]
plugins = [ "pydantic.mypy",]
[[tool.mypy.overrides]]
module = [ "dspy.*", "litellm.*", "mcp.*", "opentelemetry.*", "loguru.*", "devtools.*", "toml.*", "fastapi.*", "rich.*", "typer.*", "uvicorn.*", "httpx.*", "websockets.*", "jupyter.*", "ipykernel.*", "ipywidgets.*", "notebook.*", "jupyterlab.*",]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_any_generics = false

[[tool.mypy.overrides]]
module = "examples.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_any_generics = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "N", "UP", "YTT", "ASYNC", "BLE", "B", "A", "C4", "DTZ", "T10", "EXE", "ISC", "ICN", "G", "PIE", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PL", "TRY", "FURB", "PERF", "RUF",]
ignore = [ "E501", "PLR0913", "PLR2004", "PLR0915", "PLR0912", "TRY003", "TRY300", "TRY002", "TRY301", "TRY401", "ISC001", "G004", "G201", "PLC0415", "N817", "ERA001", "BLE001", "B904", "N806", "ARG001", "ARG002", "PTH123", "E402", "SLF001", "A002", "PLW0603", "PLW2901", "SIM105", "SIM108", "SIM113", "SIM117", "SIM118", "TC001", "TC003", "UP007", "RUF002", "RUF003", "RUF012", "RUF100", "EXE001", "PLW0602", "PLC0206", "B008", "ARG003", "DTZ003",]
fixable = [ "ALL",]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"
preview = true
docstring-code-format = true
docstring-code-line-length = 72

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [ "tests",]

[tool.coverage.run]
source = [ "src/flock",]
omit = [ "tests/*", "examples/*", "*/themes/*", "*/__pycache__/*", "*/logging/*", "*/utilities.py",]
branch = true

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "raise AssertionError", "raise NotImplementedError", "if __name__ == .__main__.:", "if TYPE_CHECKING:", "@abstract",]
precision = 2
show_missing = true

[tool.poe.tasks]
_sync = "uv sync --dev --all-groups --all-extras"
_build = "uv build"
_install = "uv pip install -e ."
_init = [ "_ensure-uv",]
_ensure-uv = "python scripts/ensure_uv.py"
install = [ "_init", "build",]
build = [ "_sync", "_build", "_install",]
lint = "ruff check src/flock/"
format = "ruff format src/flock/"
docs = "mkdocs serve"
docs-serve = "mkdocs serve"
docs-build = "mkdocs build"
docs-deploy = "mkdocs gh-deploy --force"
test = "uv run pytest -v"
test-cov = "uv run pytest --cov=src/flock --cov-branch --cov-report=term-missing --cov-report=html"
test-cov-fail = "uv run pytest --cov=src/flock --cov-branch --cov-report=term --cov-fail-under=75"
test-critical = "uv run pytest tests/test_orchestrator.py tests/test_subscription.py tests/test_visibility.py tests/test_agent.py --cov=flock.orchestrator --cov=flock.subscription --cov=flock.visibility --cov=flock.agent --cov-fail-under=100"
test-watch = "uv run pytest --watch"
test-determinism = "for i in {1..10}; do uv run pytest -q || exit 1; done"
version-patch = "python scripts/bump_version.py patch"
version-minor = "python scripts/bump_version.py minor"
version-major = "python scripts/bump_version.py major"
version-check = "python scripts/bump_version.py patch --check"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [ "S101", "PLR2004", "PLR0912", "SLF001", "ARG001", "ARG002", "ARG005", "PT011", "E402", "F841", "B904", "TRY301", "TRY401", "PTH123", "E721", "A002", "SIM105", "SIM108", "SIM113", "PLW0603", "RUF059", "PT017", "RUF043", "B018", "PT012", "E741", "PLE1205", "F811", "PT015", "B011", "RSE102",]
"examples/**/*.py" = [ "T201", "ARG001", "PLR2004",]
"__init__.py" = [ "F401", "E402",]

[tool.ruff.lint.isort]
known-first-party = [ "flock",]
force-single-line = false
lines-after-imports = 2
section-order = [ "future", "standard-library", "third-party", "first-party", "local-folder",]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.poe.tasks.clean]
script = "poethepoet.scripts:rm('dist', 'htmlcov', 'logs','metrics','.mypy_cache', '.pytest_cache', './**/__pycache__')"

[tool.hatch.build.targets.wheel]
packages = [ "src/flock",]
