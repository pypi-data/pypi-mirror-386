Metadata-Version: 2.4
Name: funcsim
Version: 0.1.14
Summary: functional, simple stochastic simulation
Home-page: https://github.com/h-bryant/funcsim
Author: Henry Bryant
Author-email: henry@tamu.edu
License: bsd-3-clause
Keywords: functional,stochastic,simulation
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=2.2.0
Requires-Dist: pandas>=2.2.0
Requires-Dist: scipy>=1.16.0
Requires-Dist: xarray>=2025.4.0
Provides-Extra: plotting
Requires-Dist: plotly>=6.0.0; extra == "plotting"
Requires-Dist: jupyter; extra == "plotting"
Provides-Extra: copula
Requires-Dist: copulae>=0.8.0; extra == "copula"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx_autodoc_typehints; extra == "docs"
Provides-Extra: full
Requires-Dist: plotly>=6.0.0; extra == "full"
Requires-Dist: copulae>=0.8.0; extra == "full"
Requires-Dist: sphinx; extra == "full"
Requires-Dist: sphinx_autodoc_typehints; extra == "full"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: summary

# funcsim
Lightweight, functional stochastic simulation

Features:
- cross-sectional and recursive dynamic simulations
- pseudo-random numbers (so that results are comparable across multiple runs or scenarios)
- stratified/Latin hypercube sampling
- painless multi-core simulations
- highly flexible, and as simple as possible (but no more)
- functional paradigm

Developed using:
- python >= 3.9
- numpy 2.2.0
- scipy 1.16.0
- pandas 2.2.0
- xarray 2025.4.0

For optional functionality, additinoal packages are needed:
- plotting: plotly
- some copula typed: copulae

Additionally, to run the demos, run tests, and build docs:
- pytest
- sphinx, sphinx-autodoc-typehints

### building html docs
From the top-level funcsim directory...
```bash
sphinx-build -b html docs/source/ docs/build/
```

### running tests
From the top-level funcsim directory...
```bash
python3 -m pytest
```
