[project]
name = "obi-one"
authors = [
  { name="James Isbister", email="james.isbister@openbraininstitute.org" },
  { name="Christoph Pokorny", email="christoph.pokorny@openbraininstitute.org" },
  { name="Daniela Egas Santander", email="daniela.egassantander@openbraininstitute.org" },
  { name="Gianluca Ficarelli", email="gianluca.ficarelli@openbraininstitute.org" },
  { name="Michael Reimann", email="michael.reimann@openbraininstitute.org" },
  { name="Darshan Mandge", email="darshan.mandge@openbraininstitute.org" },
  { name="Ilkan Kilic", email="ilkan.kilic@openbraininstitute.org" },
  { name="AurÃ©lien Jaquier", email="aurelien.jaquier@openbraininstitute.org" },
  { name="Dries Verachtert", email="dries.verachtert@openbraininstitute.org" },
  { name="Jean-Denis Courcol", email="jean-denis.courcol@openbraininstitute.org"},
  { name="Armando Romani", email="armando.romani@openbraininstitute.org" },
  { name="Mike Geveart", email="michael.gevaert@openbraininstitute.org" },
  { name="Nicolas Frank", email="nicolas.frank@openbraininstitute.org" }
]
description = "Standardized library of functions and workflows for biophysically-detailed brain modeling"
readme = "README.md"
requires-python = ">=3.12.2,<3.13"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = "Apache-2.0"
license-files = ["LICENSE"]
dynamic = ["version"]

dependencies = [
    # PYDANTIC
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "pydantic-core",
    # CIRCUIT EXTRACTION
    "brainbuilder>=0.20.2",
    # MORPHOLOGY CONTAINERIZATION
    "bluepysnap>=3.0.2",
    # FAST API SERVICE
    "fastapi",
    "uvicorn",
    "starlette",
    "python-multipart",  # Added python-multipart
    # JUPYTER
    "jupyter",
    "notebook",
    "jupyterlab>=4.4.8",
    "ipykernel",
    # DATABASE
    "sqlalchemy",
    # BLUEETL
    "blueetl",
    # NEUROM
    "aiofiles",
    "neurom",
    "morph-tool",
    # ENTITYSDK
    "entitysdk>=0.8.3",
    "obi-auth>=0.3.0",
    "networkx>=3.4.2",
    "pyjwt>=2.10.1",
    "cachetools>=5.5.2",
    "httpx>=0.28.1",
    "bluepyefe>=2.3.51",
    # CONNECTOME-UTILITIES
    "connectome-utilities>=0.4.11",
    "connectome-manipulator",
    "bluecellulab>=2.6.71",
    # OBI NOTEBOOK
    "obi_notebook",
]

[project.optional-dependencies]
connectivity = [
    "connectome-analysis>=1.0.1",
]

[dependency-groups]
audit = [
    "pip-audit>=2.9.0",
]
dev = [
    "coverage[toml]",
    "pyright",
    "pytest",
    "pytest-cov",
    "pytest-freezer>=0.4.9",
    "pytest-httpx>=0.35.0",
    "ruff<=0.12.7",
]

[build-system]
requires = [
    "setuptools>=42",
    "setuptools-scm[toml]>=6.2",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project.urls]
Homepage = "https://github.com/openbraininstitute/obi-one"
Issues = "https://github.com/openbraininstitute/obi-one/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["obi_one*"]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.uv]
required-version = ">=0.8.0"

[tool.uv.sources]
repo_name = { git = "https://github.com/openbraininstitute/ion-channel-builder.git", branch="main" }

[tool.ruff]
line-length = 100
target-version = "py312"
include = ["pyproject.toml", "app/**/*.py", "tests/**/*.py", "obi_one/**/*.py"]

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "A005",    # Module is shadowing a Python builtin module
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "COM812",  # Trailing comma (to have similar behavior to black)
    "CPY001",  # Missing copyright notice at top of file
    "ISC001",  # single line implicit string concatenation (disabling suggested by ruff formatter)
    "N802",    # function name should be lowercase
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D102",    # Missing docstring in public method
    "D103",    # Missing docstring in public function
    "D104",    # Missing docstring in public package
    "D106",    # Missing docstring in public nested class
    "DOC201",  # `return` is not documented in docstring
    "DOC402",  # `yield` is not documented in docstring
    "DOC501",  # Raised exception missing from docstring
    "RET504",  # Unnecessary assignment before `return` statement
    "RUF029",  # Function is declared `async`, but doesn't `await` or use `async` features.
    "FIX002",  # Line contains TODO, consider resolving the issue
    "TD002",   # Missing author in TODO
    "TD003",   # Missing issue link for this TODO
    "D205",    # 1 blank line required between summary line and description
]

[tool.ruff.lint.isort]
known-local-folder = ["tests"]
combine-as-imports = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["license"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "ANN", # Missing type annotation
    "D", # pydocstyle
    "ERA001", # Found commented-out code
    "PLC2701", # Private name import from external module
    "PLR2004", # magic value (constant) used in comparison (i.e. expected == 3)
    "S101", # Use of `assert` detected
    "SLF001", # private member access
]
"obi_one/scientific/blocks/neuron_sets/pair.py" = [
    "SLF001"
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 12
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50
max-public-methods = 60

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--import-mode=importlib",
    "-vv",
    "-ra",
    "--cov=app",
    "--durations=10",
    "--durations-min=1.0",
]
testpaths = [
    "tests",
    "examples",
]

[tool.coverage.run]
branch = true
parallel = false
source_pkgs = [
    "app",
    "obi_one",
]

[tool.coverage.report]
show_missing = true
precision = 0
fail_under = 30
omit = [
    "__main__.py",
]