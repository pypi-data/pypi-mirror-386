"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sentry_protos.snuba.v1.request_common_pb2
import sentry_protos.snuba.v1.trace_item_attribute_pb2
import sentry_protos.snuba.v1.trace_item_filter_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AttributeDistributionsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_BUCKETS_FIELD_NUMBER: builtins.int
    MAX_ATTRIBUTES_FIELD_NUMBER: builtins.int
    max_buckets: builtins.int
    """max_buckets and limit wouldn't apply to other stats types (like totals)"""
    max_attributes: builtins.int
    def __init__(
        self,
        *,
        max_buckets: builtins.int = ...,
        max_attributes: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["max_attributes", b"max_attributes", "max_buckets", b"max_buckets"]) -> None: ...

global___AttributeDistributionsRequest = AttributeDistributionsRequest

@typing.final
class HeatmapRequest(google.protobuf.message.Message):
    """
    This is a request for a heatmap, the x-axis is every distinct value of x_attribute,
    the y-axis is the numerical_y_attribute divided into num_y_buckets buckets. A
    single x,y coordinate has the count of trace-items that fit into that bucket.

    Example Request:
    x_attribute = "span.op"
    numerical_y_attribute = "eap.duration"
    num_y_buckets = 4

    Example Response:
    span.op = "db.query"
    - duration 0-100ms: 10
    - duration 100-200ms: 30
    - duration 200-300ms: 20
    - duration 300-400ms: 0

    span.op = "http.server"
    ...
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_ATTRIBUTE_FIELD_NUMBER: builtins.int
    Y_ATTRIBUTE_FIELD_NUMBER: builtins.int
    NUM_Y_BUCKETS_FIELD_NUMBER: builtins.int
    NUM_X_BUCKETS_FIELD_NUMBER: builtins.int
    num_y_buckets: builtins.int
    """these are only used if the attribute is numeric and needs to be bucketed"""
    num_x_buckets: builtins.int
    @property
    def x_attribute(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey: ...
    @property
    def y_attribute(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey: ...
    def __init__(
        self,
        *,
        x_attribute: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey | None = ...,
        y_attribute: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey | None = ...,
        num_y_buckets: builtins.int | None = ...,
        num_x_buckets: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_num_x_buckets", b"_num_x_buckets", "_num_y_buckets", b"_num_y_buckets", "num_x_buckets", b"num_x_buckets", "num_y_buckets", b"num_y_buckets", "x_attribute", b"x_attribute", "y_attribute", b"y_attribute"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_num_x_buckets", b"_num_x_buckets", "_num_y_buckets", b"_num_y_buckets", "num_x_buckets", b"num_x_buckets", "num_y_buckets", b"num_y_buckets", "x_attribute", b"x_attribute", "y_attribute", b"y_attribute"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_num_x_buckets", b"_num_x_buckets"]) -> typing.Literal["num_x_buckets"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_num_y_buckets", b"_num_y_buckets"]) -> typing.Literal["num_y_buckets"] | None: ...

global___HeatmapRequest = HeatmapRequest

@typing.final
class StatsType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTE_DISTRIBUTIONS_FIELD_NUMBER: builtins.int
    HEATMAP_FIELD_NUMBER: builtins.int
    @property
    def attribute_distributions(self) -> global___AttributeDistributionsRequest: ...
    @property
    def heatmap(self) -> global___HeatmapRequest: ...
    def __init__(
        self,
        *,
        attribute_distributions: global___AttributeDistributionsRequest | None = ...,
        heatmap: global___HeatmapRequest | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["attribute_distributions", b"attribute_distributions", "heatmap", b"heatmap", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attribute_distributions", b"attribute_distributions", "heatmap", b"heatmap", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["type", b"type"]) -> typing.Literal["attribute_distributions", "heatmap"] | None: ...

global___StatsType = StatsType

@typing.final
class TraceItemStatsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    META_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    STATS_TYPES_FIELD_NUMBER: builtins.int
    @property
    def meta(self) -> sentry_protos.snuba.v1.request_common_pb2.RequestMeta: ...
    @property
    def filter(self) -> sentry_protos.snuba.v1.trace_item_filter_pb2.TraceItemFilter:
        """same filter applies to all stats types requested"""

    @property
    def stats_types(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StatsType]: ...
    def __init__(
        self,
        *,
        meta: sentry_protos.snuba.v1.request_common_pb2.RequestMeta | None = ...,
        filter: sentry_protos.snuba.v1.trace_item_filter_pb2.TraceItemFilter | None = ...,
        stats_types: collections.abc.Iterable[global___StatsType] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter", "meta", b"meta"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["filter", b"filter", "meta", b"meta", "stats_types", b"stats_types"]) -> None: ...

global___TraceItemStatsRequest = TraceItemStatsRequest

@typing.final
class AttributeDistribution(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Bucket(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        LABEL_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        label: builtins.str
        value: builtins.float
        def __init__(
            self,
            *,
            label: builtins.str = ...,
            value: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["label", b"label", "value", b"value"]) -> None: ...

    ATTRIBUTE_NAME_FIELD_NUMBER: builtins.int
    BUCKETS_FIELD_NUMBER: builtins.int
    attribute_name: builtins.str
    @property
    def buckets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttributeDistribution.Bucket]: ...
    def __init__(
        self,
        *,
        attribute_name: builtins.str = ...,
        buckets: collections.abc.Iterable[global___AttributeDistribution.Bucket] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attribute_name", b"attribute_name", "buckets", b"buckets"]) -> None: ...

global___AttributeDistribution = AttributeDistribution

@typing.final
class AttributeDistributions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTES_FIELD_NUMBER: builtins.int
    @property
    def attributes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AttributeDistribution]: ...
    def __init__(
        self,
        *,
        attributes: collections.abc.Iterable[global___AttributeDistribution] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes"]) -> None: ...

global___AttributeDistributions = AttributeDistributions

@typing.final
class MatrixColumn(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_LABEL_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    @property
    def x_label(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue: ...
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        x_label: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue | None = ...,
        values: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["x_label", b"x_label"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["values", b"values", "x_label", b"x_label"]) -> None: ...

global___MatrixColumn = MatrixColumn

@typing.final
class Heatmap(google.protobuf.message.Message):
    """
    This is a heatmap, example heatmap:
    x_attribute = "span.op"
    y_attribute = "duration"
    y_buckets = [0-100, 100-200, 200-300, 300-400]
    data = [
    "db_query": [10, 20, 30, 40],
    "http_server": [50, 60, 70, 80],
    ]

    this means there are 20 trace-items with span.op = "db.query" and duration 100-200ms,
    etc.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_ATTRIBUTE_FIELD_NUMBER: builtins.int
    Y_ATTRIBUTE_FIELD_NUMBER: builtins.int
    Y_BUCKETS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    @property
    def x_attribute(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey: ...
    @property
    def y_attribute(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey: ...
    @property
    def y_buckets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue]: ...
    @property
    def data(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MatrixColumn]:
        """the `values` array in each MatrixColumn and `y_buckets` are associative arrays"""

    def __init__(
        self,
        *,
        x_attribute: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey | None = ...,
        y_attribute: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey | None = ...,
        y_buckets: collections.abc.Iterable[sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue] | None = ...,
        data: collections.abc.Iterable[global___MatrixColumn] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["x_attribute", b"x_attribute", "y_attribute", b"y_attribute"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "x_attribute", b"x_attribute", "y_attribute", b"y_attribute", "y_buckets", b"y_buckets"]) -> None: ...

global___Heatmap = Heatmap

@typing.final
class TraceItemStatsResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ATTRIBUTE_DISTRIBUTIONS_FIELD_NUMBER: builtins.int
    HEATMAP_FIELD_NUMBER: builtins.int
    @property
    def attribute_distributions(self) -> global___AttributeDistributions: ...
    @property
    def heatmap(self) -> global___Heatmap: ...
    def __init__(
        self,
        *,
        attribute_distributions: global___AttributeDistributions | None = ...,
        heatmap: global___Heatmap | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["attribute_distributions", b"attribute_distributions", "heatmap", b"heatmap", "result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attribute_distributions", b"attribute_distributions", "heatmap", b"heatmap", "result", b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["result", b"result"]) -> typing.Literal["attribute_distributions", "heatmap"] | None: ...

global___TraceItemStatsResult = TraceItemStatsResult

@typing.final
class TraceItemStatsResponse(google.protobuf.message.Message):
    """this is a response from the TraceItemStats endpoint
    it is the counterpart to TraceItemStatsRequest
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULTS_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    @property
    def results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TraceItemStatsResult]: ...
    @property
    def page_token(self) -> sentry_protos.snuba.v1.request_common_pb2.PageToken: ...
    @property
    def meta(self) -> sentry_protos.snuba.v1.request_common_pb2.ResponseMeta: ...
    def __init__(
        self,
        *,
        results: collections.abc.Iterable[global___TraceItemStatsResult] | None = ...,
        page_token: sentry_protos.snuba.v1.request_common_pb2.PageToken | None = ...,
        meta: sentry_protos.snuba.v1.request_common_pb2.ResponseMeta | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["meta", b"meta", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["meta", b"meta", "page_token", b"page_token", "results", b"results"]) -> None: ...

global___TraceItemStatsResponse = TraceItemStatsResponse
