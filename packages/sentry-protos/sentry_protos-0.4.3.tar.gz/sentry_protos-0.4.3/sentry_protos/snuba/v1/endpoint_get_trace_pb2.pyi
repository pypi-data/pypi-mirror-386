"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sentry_protos.snuba.v1.request_common_pb2
import sentry_protos.snuba.v1.trace_item_attribute_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetTraceRequest(google.protobuf.message.Message):
    """GetTraceRequest lets you query a trace by trace_id, returning all its items.

    Each item will return every attributes by default or you can pass a list of
    attributes to return for each item type.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TraceItem(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TYPE_FIELD_NUMBER: builtins.int
        ATTRIBUTES_FIELD_NUMBER: builtins.int
        ITEM_TYPE_FIELD_NUMBER: builtins.int
        type: sentry_protos.snuba.v1.request_common_pb2.TraceItemName.ValueType
        """DEPRECATED: use item_type instead"""
        item_type: sentry_protos.snuba.v1.request_common_pb2.TraceItemType.ValueType
        @property
        def attributes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey]:
            """If attributes is empty, all attributes will be returned for this type."""

        def __init__(
            self,
            *,
            type: sentry_protos.snuba.v1.request_common_pb2.TraceItemName.ValueType = ...,
            attributes: collections.abc.Iterable[sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey] | None = ...,
            item_type: sentry_protos.snuba.v1.request_common_pb2.TraceItemType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "item_type", b"item_type", "type", b"type"]) -> None: ...

    META_FIELD_NUMBER: builtins.int
    TRACE_ID_FIELD_NUMBER: builtins.int
    ITEMS_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    trace_id: builtins.str
    limit: builtins.int
    """Optional limit on the number of items to return per page. If not specified,
    a default limit will be applied by the server.
    """
    @property
    def meta(self) -> sentry_protos.snuba.v1.request_common_pb2.RequestMeta: ...
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetTraceRequest.TraceItem]:
        """A list of items and their attributes to return in the response."""

    @property
    def page_token(self) -> sentry_protos.snuba.v1.request_common_pb2.PageToken:
        """Optional page token for pagination. If provided, returns the next page of results."""

    def __init__(
        self,
        *,
        meta: sentry_protos.snuba.v1.request_common_pb2.RequestMeta | None = ...,
        trace_id: builtins.str = ...,
        items: collections.abc.Iterable[global___GetTraceRequest.TraceItem] | None = ...,
        page_token: sentry_protos.snuba.v1.request_common_pb2.PageToken | None = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["meta", b"meta", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["items", b"items", "limit", b"limit", "meta", b"meta", "page_token", b"page_token", "trace_id", b"trace_id"]) -> None: ...

global___GetTraceRequest = GetTraceRequest

@typing.final
class GetTraceResponse(google.protobuf.message.Message):
    """GetTraceResponse returns a trace and all its items."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Item(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class Attribute(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            @property
            def key(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey: ...
            @property
            def value(self) -> sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue: ...
            def __init__(
                self,
                *,
                key: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeKey | None = ...,
                value: sentry_protos.snuba.v1.trace_item_attribute_pb2.AttributeValue | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

        ID_FIELD_NUMBER: builtins.int
        TIMESTAMP_FIELD_NUMBER: builtins.int
        ATTRIBUTES_FIELD_NUMBER: builtins.int
        id: builtins.str
        @property
        def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
        @property
        def attributes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetTraceResponse.Item.Attribute]: ...
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
            attributes: collections.abc.Iterable[global___GetTraceResponse.Item.Attribute] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["timestamp", b"timestamp"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "id", b"id", "timestamp", b"timestamp"]) -> None: ...

    @typing.final
    class ItemGroup(google.protobuf.message.Message):
        """ItemGroup is a list of items of a specific type."""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TYPE_FIELD_NUMBER: builtins.int
        ITEMS_FIELD_NUMBER: builtins.int
        ITEM_TYPE_FIELD_NUMBER: builtins.int
        type: sentry_protos.snuba.v1.request_common_pb2.TraceItemName.ValueType
        """DEPRECATED: use item_type instead"""
        item_type: sentry_protos.snuba.v1.request_common_pb2.TraceItemType.ValueType
        @property
        def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetTraceResponse.Item]: ...
        def __init__(
            self,
            *,
            type: sentry_protos.snuba.v1.request_common_pb2.TraceItemName.ValueType = ...,
            items: collections.abc.Iterable[global___GetTraceResponse.Item] | None = ...,
            item_type: sentry_protos.snuba.v1.request_common_pb2.TraceItemType.ValueType = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["item_type", b"item_type", "items", b"items", "type", b"type"]) -> None: ...

    TRACE_ID_FIELD_NUMBER: builtins.int
    META_FIELD_NUMBER: builtins.int
    ITEM_GROUPS_FIELD_NUMBER: builtins.int
    PAGE_TOKEN_FIELD_NUMBER: builtins.int
    trace_id: builtins.str
    @property
    def meta(self) -> sentry_protos.snuba.v1.request_common_pb2.ResponseMeta: ...
    @property
    def item_groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetTraceResponse.ItemGroup]: ...
    @property
    def page_token(self) -> sentry_protos.snuba.v1.request_common_pb2.PageToken:
        """Page token for the next page of results."""

    def __init__(
        self,
        *,
        trace_id: builtins.str = ...,
        meta: sentry_protos.snuba.v1.request_common_pb2.ResponseMeta | None = ...,
        item_groups: collections.abc.Iterable[global___GetTraceResponse.ItemGroup] | None = ...,
        page_token: sentry_protos.snuba.v1.request_common_pb2.PageToken | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["meta", b"meta", "page_token", b"page_token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["item_groups", b"item_groups", "meta", b"meta", "page_token", b"page_token", "trace_id", b"trace_id"]) -> None: ...

global___GetTraceResponse = GetTraceResponse
