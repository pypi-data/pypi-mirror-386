"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class TopicConfig(google.protobuf.message.Message):
    """Used to signal that a schema is associated with the output of a kafka topic, including
    some metadata about that.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class TopicCreationConfigEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    TOPIC_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    SERVICES_FIELD_NUMBER: builtins.int
    PIPELINE_FIELD_NUMBER: builtins.int
    TOPIC_CREATION_CONFIG_FIELD_NUMBER: builtins.int
    ENFORCED_PARTITION_COUNT_FIELD_NUMBER: builtins.int
    topic: builtins.str
    description: builtins.str
    pipeline: builtins.str
    enforced_partition_count: builtins.int
    @property
    def services(self) -> global___ServicesData: ...
    @property
    def topic_creation_config(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        topic: builtins.str = ...,
        description: builtins.str = ...,
        services: global___ServicesData | None = ...,
        pipeline: builtins.str = ...,
        topic_creation_config: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        enforced_partition_count: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["enforced_partition_count", b"enforced_partition_count", "has_enforced_partition_count", b"has_enforced_partition_count", "services", b"services"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "enforced_partition_count", b"enforced_partition_count", "has_enforced_partition_count", b"has_enforced_partition_count", "pipeline", b"pipeline", "services", b"services", "topic", b"topic", "topic_creation_config", b"topic_creation_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["has_enforced_partition_count", b"has_enforced_partition_count"]) -> typing.Literal["enforced_partition_count"] | None: ...

global___TopicConfig = TopicConfig

@typing.final
class ServicesData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONSUMERS_FIELD_NUMBER: builtins.int
    PRODUCERS_FIELD_NUMBER: builtins.int
    @property
    def consumers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def producers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        consumers: collections.abc.Iterable[builtins.str] | None = ...,
        producers: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["consumers", b"consumers", "producers", b"producers"]) -> None: ...

global___ServicesData = ServicesData
