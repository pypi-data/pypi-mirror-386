{
  "entryPoints": [
    {
      "filePath": "researcher-RAG-agent",
      "uniqueId": "82d7a2be-6c6b-416f-baf1-90d418537758",
      "type": "agent",
      "input": {
        "type": "object",
        "properties": {
          "search_instructions": {
            "title": "Search Instructions",
            "type": "string"
          },
          "index_name": {
            "title": "Index Name",
            "type": "string"
          },
          "index_folder_path": {
            "title": "Index Folder Path",
            "type": "string"
          }
        },
        "required": [
          "search_instructions",
          "index_name",
          "index_folder_path"
        ]
      },
      "output": {
        "type": "object",
        "properties": {
          "messages": {
            "items": {
              "oneOf": [
                {
                  "additionalProperties": true,
                  "description": "Message from an AI.\n\nAIMessage is returned from a chat model as a response to a prompt.\n\nThis message represents the output of the model and consists of both\nthe raw output as returned by the model together standardized fields\n(e.g., tool calls, usage metadata) added by the LangChain framework.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "ai",
                      "default": "ai",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "example": {
                      "default": false,
                      "title": "Example",
                      "type": "boolean"
                    },
                    "tool_calls": {
                      "default": [],
                      "items": {
                        "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\".",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "type": "string"
                          },
                          "args": {
                            "additionalProperties": true,
                            "title": "Args",
                            "type": "object"
                          },
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "const": "tool_call",
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "args",
                          "id"
                        ],
                        "title": "ToolCall",
                        "type": "object"
                      },
                      "title": "Tool Calls",
                      "type": "array"
                    },
                    "invalid_tool_calls": {
                      "default": [],
                      "items": {
                        "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "args": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "error": {
                            "type": "string"
                          },
                          "type": {
                            "const": "invalid_tool_call",
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "args",
                          "id",
                          "error"
                        ],
                        "title": "InvalidToolCall",
                        "type": "object"
                      },
                      "title": "Invalid Tool Calls",
                      "type": "array"
                    },
                    "usage_metadata": {
                      "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``.",
                      "properties": {
                        "input_tokens": {
                          "title": "Input Tokens",
                          "type": "integer"
                        },
                        "output_tokens": {
                          "title": "Output Tokens",
                          "type": "integer"
                        },
                        "total_tokens": {
                          "title": "Total Tokens",
                          "type": "integer"
                        },
                        "input_token_details": {
                          "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9",
                          "properties": {
                            "audio": {
                              "title": "Audio",
                              "type": "integer"
                            },
                            "cache_creation": {
                              "title": "Cache Creation",
                              "type": "integer"
                            },
                            "cache_read": {
                              "title": "Cache Read",
                              "type": "integer"
                            }
                          },
                          "title": "InputTokenDetails",
                          "type": "object"
                        },
                        "output_token_details": {
                          "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9",
                          "properties": {
                            "audio": {
                              "title": "Audio",
                              "type": "integer"
                            },
                            "reasoning": {
                              "title": "Reasoning",
                              "type": "integer"
                            }
                          },
                          "title": "OutputTokenDetails",
                          "type": "object"
                        }
                      },
                      "required": [
                        "input_tokens",
                        "output_tokens",
                        "total_tokens"
                      ],
                      "title": "UsageMetadata",
                      "type": "object"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "AIMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message from a human.\n\nHumanMessages are messages that are passed in from a human to the model.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Instantiate a chat model and invoke it with the messages\n        model = ...\n        print(model.invoke(messages))",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "human",
                      "default": "human",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "example": {
                      "default": false,
                      "title": "Example",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "HumanMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message that can be assigned an arbitrary speaker (i.e. role).",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "chat",
                      "default": "chat",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "role": {
                      "title": "Role",
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "role"
                  ],
                  "title": "ChatMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message for priming AI behavior.\n\nThe system message is usually passed in as the first of a sequence\nof input messages.\n\nExample:\n\n    .. code-block:: python\n\n        from langchain_core.messages import HumanMessage, SystemMessage\n\n        messages = [\n            SystemMessage(\n                content=\"You are a helpful assistant! Your name is Bob.\"\n            ),\n            HumanMessage(\n                content=\"What is your name?\"\n            )\n        ]\n\n        # Define a chat model and invoke it with the messages\n        print(model.invoke(messages))",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "system",
                      "default": "system",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "SystemMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message for passing the result of executing a tool back to a model.\n\nFunctionMessage are an older version of the ToolMessage schema, and\ndo not contain the tool_call_id field.\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "function",
                      "default": "function",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name",
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "name"
                  ],
                  "title": "FunctionMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message for passing the result of executing a tool back to a model.\n\nToolMessages contain the result of a tool invocation. Typically, the result\nis encoded inside the `content` field.\n\nExample: A ToolMessage representing a result of 42 from a tool call with id\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        ToolMessage(content='42', tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL')\n\n\nExample: A ToolMessage where only part of the tool output is sent to the model\n    and the full output is passed in to artifact.\n\n    .. versionadded:: 0.2.17\n\n    .. code-block:: python\n\n        from langchain_core.messages import ToolMessage\n\n        tool_output = {\n            \"stdout\": \"From the graph we can see that the correlation between x and y is ...\",\n            \"stderr\": None,\n            \"artifacts\": {\"type\": \"image\", \"base64_data\": \"/9j/4gIcSU...\"},\n        }\n\n        ToolMessage(\n            content=tool_output[\"stdout\"],\n            artifact=tool_output,\n            tool_call_id='call_Jja7J89XsjrOLA5r!MEOW!SL',\n        )\n\nThe tool_call_id field is used to associate the tool call request with the\ntool call response. This is useful in situations where a chat model is able\nto request multiple tool calls in parallel.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "tool",
                      "default": "tool",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "tool_call_id": {
                      "title": "Tool Call Id",
                      "type": "string"
                    },
                    "artifact": {
                      "default": null,
                      "title": "Artifact"
                    },
                    "status": {
                      "default": "success",
                      "enum": [
                        "success",
                        "error"
                      ],
                      "title": "Status",
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "tool_call_id"
                  ],
                  "title": "ToolMessage",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Message chunk from an AI.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "AIMessageChunk",
                      "default": "AIMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "example": {
                      "default": false,
                      "title": "Example",
                      "type": "boolean"
                    },
                    "tool_calls": {
                      "default": [],
                      "items": {
                        "description": "Represents a request to call a tool.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"name\": \"foo\",\n            \"args\": {\"a\": 1},\n            \"id\": \"123\"\n        }\n\n    This represents a request to call the tool named \"foo\" with arguments {\"a\": 1}\n    and an identifier of \"123\".",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "type": "string"
                          },
                          "args": {
                            "additionalProperties": true,
                            "title": "Args",
                            "type": "object"
                          },
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "const": "tool_call",
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "args",
                          "id"
                        ],
                        "title": "ToolCall",
                        "type": "object"
                      },
                      "title": "Tool Calls",
                      "type": "array"
                    },
                    "invalid_tool_calls": {
                      "default": [],
                      "items": {
                        "description": "Allowance for errors made by LLM.\n\nHere we add an `error` key to surface errors made during generation\n(e.g., invalid JSON arguments.)",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "args": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "error": {
                            "type": "string"
                          },
                          "type": {
                            "const": "invalid_tool_call",
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "args",
                          "id",
                          "error"
                        ],
                        "title": "InvalidToolCall",
                        "type": "object"
                      },
                      "title": "Invalid Tool Calls",
                      "type": "array"
                    },
                    "usage_metadata": {
                      "description": "Usage metadata for a message, such as token counts.\n\nThis is a standard representation of token usage that is consistent across models.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"input_tokens\": 350,\n            \"output_tokens\": 240,\n            \"total_tokens\": 590,\n            \"input_token_details\": {\n                \"audio\": 10,\n                \"cache_creation\": 200,\n                \"cache_read\": 100,\n            },\n            \"output_token_details\": {\n                \"audio\": 10,\n                \"reasoning\": 200,\n            }\n        }\n\n.. versionchanged:: 0.3.9\n\n    Added ``input_token_details`` and ``output_token_details``.",
                      "properties": {
                        "input_tokens": {
                          "title": "Input Tokens",
                          "type": "integer"
                        },
                        "output_tokens": {
                          "title": "Output Tokens",
                          "type": "integer"
                        },
                        "total_tokens": {
                          "title": "Total Tokens",
                          "type": "integer"
                        },
                        "input_token_details": {
                          "description": "Breakdown of input token counts.\n\nDoes *not* need to sum to full input token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"cache_creation\": 200,\n            \"cache_read\": 100,\n        }\n\n.. versionadded:: 0.3.9",
                          "properties": {
                            "audio": {
                              "title": "Audio",
                              "type": "integer"
                            },
                            "cache_creation": {
                              "title": "Cache Creation",
                              "type": "integer"
                            },
                            "cache_read": {
                              "title": "Cache Read",
                              "type": "integer"
                            }
                          },
                          "title": "InputTokenDetails",
                          "type": "object"
                        },
                        "output_token_details": {
                          "description": "Breakdown of output token counts.\n\nDoes *not* need to sum to full output token count. Does *not* need to have all keys.\n\nExample:\n\n    .. code-block:: python\n\n        {\n            \"audio\": 10,\n            \"reasoning\": 200,\n        }\n\n.. versionadded:: 0.3.9",
                          "properties": {
                            "audio": {
                              "title": "Audio",
                              "type": "integer"
                            },
                            "reasoning": {
                              "title": "Reasoning",
                              "type": "integer"
                            }
                          },
                          "title": "OutputTokenDetails",
                          "type": "object"
                        }
                      },
                      "required": [
                        "input_tokens",
                        "output_tokens",
                        "total_tokens"
                      ],
                      "title": "UsageMetadata",
                      "type": "object"
                    },
                    "tool_call_chunks": {
                      "default": [],
                      "items": {
                        "description": "A chunk of a tool call (e.g., as part of a stream).\n\nWhen merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\nall string attributes are concatenated. Chunks are only merged if their\nvalues of `index` are equal and not None.\n\nExample:\n\n.. code-block:: python\n\n    left_chunks = [ToolCallChunk(name=\"foo\", args='{\"a\":', index=0)]\n    right_chunks = [ToolCallChunk(name=None, args='1}', index=0)]\n\n    (\n        AIMessageChunk(content=\"\", tool_call_chunks=left_chunks)\n        + AIMessageChunk(content=\"\", tool_call_chunks=right_chunks)\n    ).tool_call_chunks == [ToolCallChunk(name='foo', args='{\"a\":1}', index=0)]",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "args": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "index": {
                            "type": "integer"
                          },
                          "type": {
                            "const": "tool_call_chunk",
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "args",
                          "id",
                          "index"
                        ],
                        "title": "ToolCallChunk",
                        "type": "object"
                      },
                      "title": "Tool Call Chunks",
                      "type": "array"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "AIMessageChunk",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Human Message chunk.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "HumanMessageChunk",
                      "default": "HumanMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "example": {
                      "default": false,
                      "title": "Example",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "HumanMessageChunk",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Chat Message chunk.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "ChatMessageChunk",
                      "default": "ChatMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "role": {
                      "title": "Role",
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "role"
                  ],
                  "title": "ChatMessageChunk",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "System Message chunk.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "SystemMessageChunk",
                      "default": "SystemMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "title": "SystemMessageChunk",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Function Message chunk.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "FunctionMessageChunk",
                      "default": "FunctionMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "title": "Name",
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "name"
                  ],
                  "title": "FunctionMessageChunk",
                  "type": "object"
                },
                {
                  "additionalProperties": true,
                  "description": "Tool Message chunk.",
                  "properties": {
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "items": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "additionalProperties": true,
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      ],
                      "title": "Content"
                    },
                    "additional_kwargs": {
                      "additionalProperties": true,
                      "title": "Additional Kwargs",
                      "type": "object"
                    },
                    "response_metadata": {
                      "additionalProperties": true,
                      "title": "Response Metadata",
                      "type": "object"
                    },
                    "type": {
                      "const": "ToolMessageChunk",
                      "default": "ToolMessageChunk",
                      "title": "Type",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "tool_call_id": {
                      "title": "Tool Call Id",
                      "type": "string"
                    },
                    "artifact": {
                      "default": null,
                      "title": "Artifact"
                    },
                    "status": {
                      "default": "success",
                      "enum": [
                        "success",
                        "error"
                      ],
                      "title": "Status",
                      "type": "string"
                    }
                  },
                  "required": [
                    "content",
                    "tool_call_id"
                  ],
                  "title": "ToolMessageChunk",
                  "type": "object"
                }
              ]
            },
            "title": "Messages",
            "type": "array"
          }
        },
        "required": [
          "messages"
        ]
      }
    },
    {
      "filePath": "quiz-generator-RAG-agent",
      "uniqueId": "86265cb5-05be-4ebe-b305-18f6bce00115",
      "type": "agent",
      "input": {
        "type": "object",
        "properties": {
          "quiz_topic": {
            "title": "Quiz Topic",
            "type": "string"
          },
          "index_name": {
            "title": "Index Name",
            "type": "string"
          },
          "index_folder_path": {
            "title": "Index Folder Path",
            "type": "string"
          }
        },
        "required": [
          "quiz_topic",
          "index_name",
          "index_folder_path"
        ]
      },
      "output": {
        "type": "object",
        "properties": {
          "quiz": {
            "properties": {
              "quiz_items": {
                "description": "A list of quiz items",
                "items": {
                  "properties": {
                    "question": {
                      "description": "One quiz question",
                      "title": "Question",
                      "type": "string"
                    },
                    "difficulty": {
                      "description": "How difficult is the question",
                      "maximum": 1.0,
                      "minimum": 0.0,
                      "title": "Difficulty",
                      "type": "number"
                    },
                    "answer": {
                      "description": "The expected answer to the question",
                      "title": "Answer",
                      "type": "string"
                    }
                  },
                  "required": [
                    "question",
                    "difficulty",
                    "answer"
                  ],
                  "title": "QuizItem",
                  "type": "object"
                },
                "title": "Quiz Items",
                "type": "array"
              }
            },
            "required": [
              "quiz_items"
            ],
            "title": "Quiz",
            "type": "object"
          }
        },
        "required": [
          "quiz"
        ]
      }
    }
  ],
  "bindings": {
    "version": "2.0",
    "resources": []
  }
}