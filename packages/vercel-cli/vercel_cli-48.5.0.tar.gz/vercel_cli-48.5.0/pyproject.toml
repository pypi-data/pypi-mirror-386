[project]
name = "vercel-cli"
dynamic = ["version"]
description = "Vercel CLI packaged for Python (bundled Node.js, vendored npm)"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "nodejs-wheel-binaries==22.16.0",
]
authors = [
    { name = "Nuage" }
]
maintainers = [
    { name = "Nuage" }
]
keywords = [
    "vercel",
    "cli",
    "deployment",
    "serverless",
    "nodejs",
    "wrapper",
    "npm",
    "edge",
    "functions",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Utilities",
    "Topic :: System :: Systems Administration",
]
[project.urls]
Homepage = "https://github.com/nuage-studio/vercel-cli-python"
Repository = "https://github.com/nuage-studio/vercel-cli-python"
Issues = "https://github.com/nuage-studio/vercel-cli-python/issues"
Documentation = "https://github.com/nuage-studio/vercel-cli-python#readme"

[dependency-groups]
dev = [
    "basedpyright>=1.31.3",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.10",
]

[project.scripts]
vercel = "vercel_cli.run:main"
vendor = "vercel_cli.vendor_cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["vercel_cli/vendor/**"]

[tool.hatch.build.targets.wheel]
packages = ["vercel_cli"]

[tool.hatch.version]
# Extract the version from the vendored package.json
path = "vercel_cli/vendor/package.json"
pattern = '"version"\s*:\s*"(?P<version>[^\"]+)"'


[tool.pytest.ini_options]
addopts = "--cov --cov-branch --cov-report=term-missing"
testpaths = ["tests"]

[tool.ruff]
# https://docs.astral.sh/ruff/settings/
preview = true
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "CPY001", # We don't want warnings about missing Copyrights because it's private code
    "TID252", # Nuage team disagrees about relative imports: we find them more readable
    # Opinionated choices for conflicting rules
    "D203",   # 1 blank line required before class docstring (we prefer D211: no blank line)
    "D213",   # Multi-line docstring summary should start at the second line (we prefer D212: first line)
    "COM812", # Trailing comma missing (conflicts with formatter, let formatter handle it)
]
exclude = [".venv"]

[tool.ruff.format]
preview = true
skip-magic-trailing-comma = true

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S",    # none of these security focused rules are relevant for tests/build scripts
    "D100", # Allow missing module docstrings in tests
    "D103", # Allow missing function docstrings in tests
    "S101", # Allow assert in tests
    "PLR2004", # Allow magic numbers in tests
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false  # Align with formatter's skip-magic-trailing-comma = true

[tool.pyright]
pythonVersion = "3.8"
typeCheckingMode = "strict"
