# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_rpm.models.rpm_update_record_response import RpmUpdateRecordResponse

class TestRpmUpdateRecordResponse(unittest.TestCase):
    """RpmUpdateRecordResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RpmUpdateRecordResponse:
        """Test RpmUpdateRecordResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RpmUpdateRecordResponse`
        """
        model = RpmUpdateRecordResponse()
        if include_optional:
            return RpmUpdateRecordResponse(
                pulp_href = '',
                prn = '',
                pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pulp_last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pulp_labels = {
                    'key' : ''
                    },
                vuln_report = '',
                id = '',
                updated_date = '',
                description = '',
                issued_date = '',
                fromstr = '',
                status = '',
                title = '',
                summary = '',
                version = '',
                type = '',
                severity = '',
                solution = '',
                release = '',
                rights = '',
                pushcount = '',
                pkglist = [
                    pulpcore.client.pulp_rpm.models.rpm/update_collection_response.rpm.UpdateCollectionResponse(
                        name = '', 
                        shortname = '', 
                        module = null, 
                        packages = [
                            None
                            ], )
                    ],
                references = [
                    None
                    ],
                reboot_suggested = True
            )
        else:
            return RpmUpdateRecordResponse(
        )
        """

    def testRpmUpdateRecordResponse(self):
        """Test RpmUpdateRecordResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
