[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-copycat-oslili"
version = "1.5.5"
description = "Semantic Copycat Open Source License Identification Library"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Oscar Valenzuela B.", email = "oscar.valenzuela.b@gmail.com"}
]
maintainers = [
    {name = "Oscar Valenzuela B.", email = "oscar.valenzuela.b@gmail.com"}
]
keywords = [
    "license",
    "attribution",
    "legal",
    "sbom",
    "spdx",
    "copyright",
    "compliance",
    "open-source",
    "package-analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Legal Industry",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Documentation",
    "Topic :: System :: Software Distribution",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "packageurl-python>=0.11.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "colorama>=0.4.0",
    "fuzzywuzzy>=0.18.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
fast = [
    "python-Levenshtein>=0.20.0",  # Speeds up fuzzywuzzy
]
tlsh = [
    "python-tlsh>=4.5.0",  # For Tier 2 TLSH fuzzy hashing
]
purl2src = [
    "purl2src>=0.1.0",  # For package URL resolution
]
cyclonedx = [
    "cyclonedx-python-lib>=4.0.0",  # For CycloneDX SBOM generation
]
ml = [
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "scikit-learn>=1.3.0",
]
all = [
    "semantic-copycat-oslili[fast,tlsh,purl2src,cyclonedx]",
]

[project.urls]
Homepage = "https://github.com/oscarvalenzuelab/semantic-copycat-oslili"
Documentation = "https://github.com/oscarvalenzuelab/semantic-copycat-oslili#readme"
Repository = "https://github.com/oscarvalenzuelab/semantic-copycat-oslili.git"
Issues = "https://github.com/oscarvalenzuelab/semantic-copycat-oslili/issues"
Changelog = "https://github.com/oscarvalenzuelab/semantic-copycat-oslili/blob/main/CHANGELOG.md"

[project.scripts]
oslili = "semantic_copycat_oslili.cli:main"

[tool.setuptools]
packages = ["semantic_copycat_oslili", 
           "semantic_copycat_oslili.core",
           "semantic_copycat_oslili.data", 
           "semantic_copycat_oslili.detectors",
           "semantic_copycat_oslili.extractors",
           "semantic_copycat_oslili.formatters",
           "semantic_copycat_oslili.utils"]

[tool.setuptools.package-data]
semantic_copycat_oslili = ["data/*.json", "data/*.yaml", "data/*.txt"]
"semantic_copycat_oslili.data" = ["*.json", "*.yaml", "*.txt"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=semantic_copycat_oslili --cov-report=term-missing"

[tool.coverage.run]
source = ["semantic_copycat_oslili"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
