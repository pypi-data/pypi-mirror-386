# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetWorkloadResult',
    'AwaitableGetWorkloadResult',
    'get_workload',
    'get_workload_output',
]

@pulumi.output_type
class GetWorkloadResult:
    """
    A collection of values returned by getWorkload.
    """
    def __init__(__self__, containers=None, cpln_id=None, description=None, extras=None, firewall_specs=None, gvc=None, id=None, identity_link=None, jobs=None, load_balancers=None, local_options=None, name=None, options=None, request_retry_policies=None, rollout_options=None, security_options=None, self_link=None, sidecars=None, statuses=None, support_dynamic_tags=None, tags=None, type=None):
        if containers and not isinstance(containers, list):
            raise TypeError("Expected argument 'containers' to be a list")
        pulumi.set(__self__, "containers", containers)
        if cpln_id and not isinstance(cpln_id, str):
            raise TypeError("Expected argument 'cpln_id' to be a str")
        pulumi.set(__self__, "cpln_id", cpln_id)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if extras and not isinstance(extras, str):
            raise TypeError("Expected argument 'extras' to be a str")
        pulumi.set(__self__, "extras", extras)
        if firewall_specs and not isinstance(firewall_specs, list):
            raise TypeError("Expected argument 'firewall_specs' to be a list")
        pulumi.set(__self__, "firewall_specs", firewall_specs)
        if gvc and not isinstance(gvc, str):
            raise TypeError("Expected argument 'gvc' to be a str")
        pulumi.set(__self__, "gvc", gvc)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if identity_link and not isinstance(identity_link, str):
            raise TypeError("Expected argument 'identity_link' to be a str")
        pulumi.set(__self__, "identity_link", identity_link)
        if jobs and not isinstance(jobs, list):
            raise TypeError("Expected argument 'jobs' to be a list")
        pulumi.set(__self__, "jobs", jobs)
        if load_balancers and not isinstance(load_balancers, list):
            raise TypeError("Expected argument 'load_balancers' to be a list")
        pulumi.set(__self__, "load_balancers", load_balancers)
        if local_options and not isinstance(local_options, list):
            raise TypeError("Expected argument 'local_options' to be a list")
        pulumi.set(__self__, "local_options", local_options)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if options and not isinstance(options, list):
            raise TypeError("Expected argument 'options' to be a list")
        pulumi.set(__self__, "options", options)
        if request_retry_policies and not isinstance(request_retry_policies, list):
            raise TypeError("Expected argument 'request_retry_policies' to be a list")
        pulumi.set(__self__, "request_retry_policies", request_retry_policies)
        if rollout_options and not isinstance(rollout_options, list):
            raise TypeError("Expected argument 'rollout_options' to be a list")
        pulumi.set(__self__, "rollout_options", rollout_options)
        if security_options and not isinstance(security_options, list):
            raise TypeError("Expected argument 'security_options' to be a list")
        pulumi.set(__self__, "security_options", security_options)
        if self_link and not isinstance(self_link, str):
            raise TypeError("Expected argument 'self_link' to be a str")
        pulumi.set(__self__, "self_link", self_link)
        if sidecars and not isinstance(sidecars, list):
            raise TypeError("Expected argument 'sidecars' to be a list")
        pulumi.set(__self__, "sidecars", sidecars)
        if statuses and not isinstance(statuses, list):
            raise TypeError("Expected argument 'statuses' to be a list")
        pulumi.set(__self__, "statuses", statuses)
        if support_dynamic_tags and not isinstance(support_dynamic_tags, bool):
            raise TypeError("Expected argument 'support_dynamic_tags' to be a bool")
        pulumi.set(__self__, "support_dynamic_tags", support_dynamic_tags)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @_builtins.property
    @pulumi.getter
    def containers(self) -> Optional[Sequence['outputs.GetWorkloadContainerResult']]:
        return pulumi.get(self, "containers")

    @_builtins.property
    @pulumi.getter(name="cplnId")
    def cpln_id(self) -> _builtins.str:
        return pulumi.get(self, "cpln_id")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def extras(self) -> _builtins.str:
        return pulumi.get(self, "extras")

    @_builtins.property
    @pulumi.getter(name="firewallSpecs")
    def firewall_specs(self) -> Optional[Sequence['outputs.GetWorkloadFirewallSpecResult']]:
        return pulumi.get(self, "firewall_specs")

    @_builtins.property
    @pulumi.getter
    def gvc(self) -> _builtins.str:
        return pulumi.get(self, "gvc")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="identityLink")
    def identity_link(self) -> _builtins.str:
        return pulumi.get(self, "identity_link")

    @_builtins.property
    @pulumi.getter
    def jobs(self) -> Optional[Sequence['outputs.GetWorkloadJobResult']]:
        return pulumi.get(self, "jobs")

    @_builtins.property
    @pulumi.getter(name="loadBalancers")
    def load_balancers(self) -> Optional[Sequence['outputs.GetWorkloadLoadBalancerResult']]:
        return pulumi.get(self, "load_balancers")

    @_builtins.property
    @pulumi.getter(name="localOptions")
    def local_options(self) -> Optional[Sequence['outputs.GetWorkloadLocalOptionResult']]:
        return pulumi.get(self, "local_options")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def options(self) -> Optional[Sequence['outputs.GetWorkloadOptionResult']]:
        return pulumi.get(self, "options")

    @_builtins.property
    @pulumi.getter(name="requestRetryPolicies")
    def request_retry_policies(self) -> Optional[Sequence['outputs.GetWorkloadRequestRetryPolicyResult']]:
        return pulumi.get(self, "request_retry_policies")

    @_builtins.property
    @pulumi.getter(name="rolloutOptions")
    def rollout_options(self) -> Optional[Sequence['outputs.GetWorkloadRolloutOptionResult']]:
        return pulumi.get(self, "rollout_options")

    @_builtins.property
    @pulumi.getter(name="securityOptions")
    def security_options(self) -> Optional[Sequence['outputs.GetWorkloadSecurityOptionResult']]:
        return pulumi.get(self, "security_options")

    @_builtins.property
    @pulumi.getter(name="selfLink")
    def self_link(self) -> _builtins.str:
        return pulumi.get(self, "self_link")

    @_builtins.property
    @pulumi.getter
    def sidecars(self) -> Optional[Sequence['outputs.GetWorkloadSidecarResult']]:
        return pulumi.get(self, "sidecars")

    @_builtins.property
    @pulumi.getter
    def statuses(self) -> Sequence['outputs.GetWorkloadStatusResult']:
        return pulumi.get(self, "statuses")

    @_builtins.property
    @pulumi.getter(name="supportDynamicTags")
    def support_dynamic_tags(self) -> _builtins.bool:
        return pulumi.get(self, "support_dynamic_tags")

    @_builtins.property
    @pulumi.getter
    def tags(self) -> Mapping[str, _builtins.str]:
        return pulumi.get(self, "tags")

    @_builtins.property
    @pulumi.getter
    def type(self) -> _builtins.str:
        return pulumi.get(self, "type")


class AwaitableGetWorkloadResult(GetWorkloadResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetWorkloadResult(
            containers=self.containers,
            cpln_id=self.cpln_id,
            description=self.description,
            extras=self.extras,
            firewall_specs=self.firewall_specs,
            gvc=self.gvc,
            id=self.id,
            identity_link=self.identity_link,
            jobs=self.jobs,
            load_balancers=self.load_balancers,
            local_options=self.local_options,
            name=self.name,
            options=self.options,
            request_retry_policies=self.request_retry_policies,
            rollout_options=self.rollout_options,
            security_options=self.security_options,
            self_link=self.self_link,
            sidecars=self.sidecars,
            statuses=self.statuses,
            support_dynamic_tags=self.support_dynamic_tags,
            tags=self.tags,
            type=self.type)


def get_workload(containers: Optional[Sequence[Union['GetWorkloadContainerArgs', 'GetWorkloadContainerArgsDict']]] = None,
                 firewall_specs: Optional[Sequence[Union['GetWorkloadFirewallSpecArgs', 'GetWorkloadFirewallSpecArgsDict']]] = None,
                 gvc: Optional[_builtins.str] = None,
                 jobs: Optional[Sequence[Union['GetWorkloadJobArgs', 'GetWorkloadJobArgsDict']]] = None,
                 load_balancers: Optional[Sequence[Union['GetWorkloadLoadBalancerArgs', 'GetWorkloadLoadBalancerArgsDict']]] = None,
                 local_options: Optional[Sequence[Union['GetWorkloadLocalOptionArgs', 'GetWorkloadLocalOptionArgsDict']]] = None,
                 name: Optional[_builtins.str] = None,
                 options: Optional[Sequence[Union['GetWorkloadOptionArgs', 'GetWorkloadOptionArgsDict']]] = None,
                 request_retry_policies: Optional[Sequence[Union['GetWorkloadRequestRetryPolicyArgs', 'GetWorkloadRequestRetryPolicyArgsDict']]] = None,
                 rollout_options: Optional[Sequence[Union['GetWorkloadRolloutOptionArgs', 'GetWorkloadRolloutOptionArgsDict']]] = None,
                 security_options: Optional[Sequence[Union['GetWorkloadSecurityOptionArgs', 'GetWorkloadSecurityOptionArgsDict']]] = None,
                 sidecars: Optional[Sequence[Union['GetWorkloadSidecarArgs', 'GetWorkloadSidecarArgsDict']]] = None,
                 tags: Optional[Mapping[str, _builtins.str]] = None,
                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetWorkloadResult:
    """
    Use this data source to access information about an existing [Workload](https://docs.controlplane.com/reference/workload) within Control Plane.

    ## Required

    - **name** (String) Name of the workload.
    - **gvc** (String) Name of the GVC that the specified workload belongs to.

    ## Outputs

    The following attributes are exported:

    - **id** (String) The unique identifier for this workload.
    - **cpln_id** (String) The ID, in GUID format, of the workload.
    - **name** (String) Name of the workload.
    - **gvc** (String) Name of the associated GVC.
    - **type** (String) Workload type. Either `serverless`, `standard`, `stateful`, or `cron`.
    - **description** (String) Description of the workload.
    - **tags** (Map of String) Key-value map of resource tags.
    - **self_link** (String) Full link to this resource. Can be referenced by other resources.
    - **identity_link** (String) Full link to the identity used as the access scope for 3rd party cloud resources.
    - **support_dynamic_tags** (Boolean) Indicates if Control Plane automatically redeploys when referenced container images are updated in the registry.
    - **extras** (String) Extra Kubernetes modifications. Only used for BYOK.
    - **container** (Block List) (see below).
    - **firewall_spec** (Block List, Max: 1) (see below).
    - **options** (Block List, Max: 1) (see below).
    - **local_options** (Block List) (see below).
    - **job** (Block List, Max: 1) (see below).
    - **sidecar** (Block List, Max: 1) (see below).
    - **rollout_options** (Block List, Max: 1) (see below).
    - **security_options** (Block List, Max: 1) (see below).
    - **load_balancer** (Block List, Max: 1) (see below).
    - **request_retry_policy** (Block List, Max: 1) (see below).
    - **status** (Block List) (see below).

    <a id="nestedblock--container"></a>

    ### `container`

    > **Note** A workload always exposes at least one container definition.

    Read-Only:

    - **name** (String) Name of the container. Cannot be `istio-proxy`, `queue-proxy`, or `istio-validation`, and cannot start with `cpln_`.
    - **image** (String) The full image and tag path.
    - **working_directory** (String) Override for the container working directory. Must be an absolute path.
    - **port** (Number) The port the container exposes. Only one container can specify a port. Min: `80`. Max: `65535`. Used by the `serverless` workload type. **Deprecated – use `ports`.**
    - **memory** (String) Reserved memory when Capacity AI is disabled, or maximum memory when it is enabled. Default: `128Mi`.
    - **cpu** (String) Reserved CPU when Capacity AI is disabled, or maximum CPU when it is enabled. Default: `50m`.
    - **min_cpu** (String) Minimum CPU when Capacity AI is enabled.
    - **min_memory** (String) Minimum memory when Capacity AI is enabled.
    - **env** (Map of String) Environment variables exposed to the container.
    - **inherit_env** (Boolean) Indicates whether GVC environment variables are inherited. A variable in `env` overrides the same key from the GVC.
    - **command** (String) Override for the container entry point.
    - **args** (List of String) Command-line arguments passed to the container in order.
    - **metrics** (Block List, Max: 1) (see below).
    - **ports** (Block List) (see below).
    - **readiness_probe** (Block List, Max: 1) (see below).
    - **liveness_probe** (Block List, Max: 1) (see below).
    - **gpu_nvidia** (Block List, Max: 1) (see below).
    - **gpu_custom** (Block List, Max: 1) (see below).
    - **lifecycle** (Block List, Max: 1) (see below).
    - **volume** (Block List) (see below).

    > **Note** The following container ports are reserved and cannot be used: `8012`, `8022`, `9090`, `9091`, `15000`, `15001`, `15006`, `15020`, `15021`, `15090`, `41000`.

    <a id="nestedblock--container--metrics"></a>

    ### `container.metrics`

    Read-Only:

    - **port** (Number) Port that exposes custom metrics.
    - **path** (String) Path where custom metrics are available.
    - **drop_metrics** (List of String) Patterns describing metrics to discard.

    <a id="nestedblock--container--ports"></a>

    ### `container.ports`

    Read-Only:

    - **protocol** (String) Protocol. One of `http`, `http2`, `tcp`, or `grpc`.
    - **number** (Number) Port that the container exposes.

    <a id="nestedblock--container--readiness_probe"></a>

    ### `container.readiness_probe`

    Read-Only:

    - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
    - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
    - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
    - **success_threshold** (Number) Minimum consecutive successes to be considered ready. Default: `1`. Min: `1`. Max: `20`.
    - **failure_threshold** (Number) Consecutive failures before marking the container unhealthy. Default: `3`. Min: `1`. Max: `20`.
    - **exec** (Block List, Max: 1) (see below).
    - **grpc** (Block List, Max: 1) (see below).
    - **tcp_socket** (Block List, Max: 1) (see below).
    - **http_get** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--liveness_probe"></a>

    ### `container.liveness_probe`

    Read-Only:

    - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
    - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
    - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
    - **success_threshold** (Number) Minimum consecutive successes to be considered healthy. Default: `1`. Min: `1`. Max: `20`.
    - **failure_threshold** (Number) Consecutive failures before restarting the container. Default: `3`. Min: `1`. Max: `20`.
    - **exec** (Block List, Max: 1) (see below).
    - **grpc** (Block List, Max: 1) (see below).
    - **tcp_socket** (Block List, Max: 1) (see below).
    - **http_get** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--probe--exec"></a>

    ### `container.*_probe.exec`

    Read-Only:

    - **command** (List of String) Command executed inside the container when the probe runs.

    <a id="nestedblock--container--probe--grpc"></a>

    ### `container.*_probe.grpc`

    Read-Only:

    - **port** (Number) gRPC port used for the probe.

    <a id="nestedblock--container--probe--tcp_socket"></a>

    ### `container.*_probe.tcp_socket`

    Read-Only:

    - **port** (Number) TCP port used for the probe.

    <a id="nestedblock--container--probe--http_get"></a>

    ### `container.*_probe.http_get`

    Read-Only:

    - **path** (String) HTTP path to query. Default: `/`.
    - **port** (Number) Port for the HTTP GET. Min: `80`. Max: `65535`.
    - **http_headers** (Map of String) Headers included in the probe request.
    - **scheme** (String) HTTP scheme. Either `HTTP` or `HTTPS`. Default: `HTTP`.

    <a id="nestedblock--container--gpu_nvidia"></a>

    ### `container.gpu_nvidia`

    Read-Only:

    - **model** (String) GPU model (for example, `t4`).
    - **quantity** (Number) Number of NVIDIA GPUs attached to the container.

    <a id="nestedblock--container--gpu_custom"></a>

    ### `container.gpu_custom`

    Read-Only:

    - **resource** (String) Name of the custom GPU resource.
    - **quantity** (Number) Number of GPUs requested.
    - **runtime_class** (String) Runtime class that must be used with the custom GPU.

    <a id="nestedblock--container--lifecycle"></a>

    ### `container.lifecycle`

    Read-Only:

    - **post_start** (Block List, Max: 1) (see below).
    - **pre_stop** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--lifecycle--spec"></a>

    ### `container.lifecycle.*`

    Read-Only:

    - **exec** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--lifecycle--exec"></a>

    ### `container.lifecycle.*.exec`

    Read-Only:

    - **command** (List of String) Command executed during the lifecycle hook.

    <a id="nestedblock--container--volume"></a>

    ### `container.volume`

    > **Note** The following paths are reserved and cannot be used: `/dev`, `/dev/log`, `/tmp`, `/var`, `/var/log`.

    > **Note** Valid URI prefixes include `s3://bucket`, `gs://bucket`, `azureblob://storageAccount/container`, `azurefs://storageAccount/share`, `cpln://secret`, `cpln://volumeset`, and `scratch://`.

    Read-Only:

    - **uri** (String) URI of a volume hosted in Control Plane (Volume Set) or a supported cloud provider.
    - **recovery_policy** (String) Recovery policy for persistent volumes. Either `retain` or `recycle`. **Deprecated – no longer used.**
    - **path** (String) File-system path where the volume is mounted inside the container.

    <a id="nestedblock--firewall_spec"></a>

    ### `firewall_spec`

    Controls inbound and outbound access for external (public) and internal (service-to-service) traffic. Access is restricted by default.

    Read-Only:

    - **external** (Block List, Max: 1) (see below).
    - **internal** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external"></a>

    ### `firewall_spec.external`

    Read-Only:

    - **inbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks allowed to reach the workload. `0.0.0.0/0` opens access to the public internet.
    - **inbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks explicitly denied.
    - **outbound_allow_hostname** (List of String) Public hostnames the workload can reach. Wildcards are allowed only as a prefix (for example, `*.amazonaws.com`).
    - **outbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks the workload can reach. `0.0.0.0/0` enables outbound access to the public internet.
    - **outbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks that are denied even if allow lists include them.
    - **outbound_allow_port** (Block List) (see below).
    - **http** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external--outbound_allow_port"></a>

    ### `firewall_spec.external.outbound_allow_port`

    Allows outbound access to specific ports and protocols.

    Read-Only:

    - **protocol** (String) Either `http`, `https`, or `tcp`. Default: `tcp`.
    - **number** (Number) Port number. Max: `65000`.

    <a id="nestedblock--firewall_spec--external--http"></a>

    ### `firewall_spec.external.http`

    Firewall options for HTTP workloads.

    Read-Only:

    - **inbound_header_filter** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external--http--inbound_header_filter"></a>

    ### `firewall_spec.external.http.inbound_header_filter`

    Configures header-based allow/deny logic.

    Read-Only:

    - **key** (String) Header name to inspect.
    - **allowed_values** (List of String) Regular expressions describing allowed header values. Requests that fail to match any allowed value are filtered.
    - **blocked_values** (List of String) Regular expressions describing blocked header values. Requests that match any blocked value are filtered.

    <a id="nestedblock--firewall_spec--internal"></a>

    ### `firewall_spec.internal`

    Controls access between workloads.

    Read-Only:

    - **inbound_allow_type** (String) Internal firewall mode. One of `none`, `same-gvc`, `same-org`, or `workload-list`.
    - **inbound_allow_workload** (List of String) Specific workloads allowed when `inbound_allow_type` is `workload-list`.

    <a id="nestedblock--options"></a>

    ### `options`

    Exports the workload-level options applied by Control Plane.

    Read-Only:

    - **timeout_seconds** (Number) Request timeout in seconds. Default: `5`.
    - **capacity_ai** (Boolean) Whether Capacity AI is enabled. Default: `true`.
    - **capacity_ai_update_minutes** (Number) Minimum interval (in minutes) between Capacity AI reservation updates.
    - **debug** (Boolean) Indicates if debug mode is enabled. Default: `false`.
    - **suspend** (Boolean) Indicates if the workload is suspended. Default: `false`.
    - **autoscaling** (Block List, Max: 1) (see below).
    - **multi_zone** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling"></a>

    ### `options.autoscaling`

    Read-Only:

    - **metric** (String) Scaling metric. One of `concurrency`, `cpu`, `memory`, `rps`, `latency`, `keda`, or `disabled`.
    - **metric_percentile** (String) Percentile to target when the metric represents a distribution (for example, latency).
    - **target** (Number) Target value for the selected metric. Min: `1`. Max: `20000`. Default: `95`.
    - **min_scale** (Number) Minimum replicas allowed. Min: `0`. Max: `max_scale`. Default: `1`.
    - **max_scale** (Number) Maximum replicas allowed. Min: `0`. Default: `5`.
    - **scale_to_zero_delay** (Number) Seconds without requests before scaling to zero. Min: `30`. Max: `3600`. Default: `300`.
    - **max_concurrency** (Number) Maximum concurrent requests per replica. Min: `0`. Max: `1000`. Default: `0`.
    - **multi** (Block List, Max: 1) (see below).
    - **keda** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling--multi"></a>

    ### `options.autoscaling.multi`

    Read-Only:

    - **metric** (String) Either `cpu` or `memory`.
    - **target** (Number) Target value for the metric. Min: `1`. Max: `20000`.

    <a id="nestedblock--options--autoscaling--keda"></a>

    ### `options.autoscaling.keda`

    KEDA (Kubernetes-based Event Driven Autoscaling) configuration.

    Read-Only:

    - **polling_interval** (Number) Seconds between KEDA polling cycles.
    - **cooldown_period** (Number) Cooldown seconds after scaling to zero before scaling up again.
    - **initial_cooldown_period** (Number) Initial cooldown after scaling to zero.
    - **trigger** (Block List) (see below).
    - **advanced** (Block List) (see below).

    <a id="nestedblock--options--autoscaling--keda--trigger"></a>

    ### `options.autoscaling.keda.trigger`

    Defines event-driven scaling triggers.

    Read-Only:

    - **type** (String) Trigger type (for example, `prometheus`, `aws-sqs`).
    - **metadata** (Map of String) Configuration parameters required by the trigger.
    - **name** (String) Optional trigger name.
    - **use_cached_metrics** (Boolean) Indicates whether metrics caching is enabled during the polling interval.
    - **metric_type** (String) Metric type used for scaling.
    - **authentication_ref** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling--keda--trigger--authentication_ref"></a>

    ### `options.autoscaling.keda.trigger.authentication_ref`

    Read-Only:

    - **name** (String) Name of the secret listed in `spec.keda.secrets` on the GVC.

    <a id="nestedblock--options--autoscaling--keda--advanced"></a>

    ### `options.autoscaling.keda.advanced`

    Advanced KEDA modifiers.

    Read-Only:

    - **scaling_modifiers** (Block List) (see below).

    <a id="nestedblock--options--autoscaling--keda--advanced--scaling_modifiers"></a>

    ### `options.autoscaling.keda.advanced.scaling_modifiers`

    Read-Only:

    - **target** (String) New target value for the composed metric.
    - **activation_target** (String) Activation target for the composed metric.
    - **metric_type** (String) Metric type used for the composed metric.
    - **formula** (String) Expression that combines or transforms metrics.

    <a id="nestedblock--options--multi_zone"></a>

    ### `options.multi_zone`

    Read-Only:

    - **enabled** (Boolean) Indicates if multi-zone execution is enabled.

    <a id="nestedblock--local_options"></a>

    ### `local_options`

    Overrides default options for specific Control Plane locations.

    Read-Only:

    - **location** (String) Location name whose options are overridden.
    - All attributes from `options` are repeated here with location-specific values.

    <a id="nestedblock--job"></a>

    ### `job`

    Exports cron workload settings.

    Read-Only:

    - **schedule** (String) Cron schedule expression determining job execution times.
    - **concurrency_policy** (String) Either `Forbid` or `Replace`. Determines how overlapping jobs are handled.
    - **history_limit** (Number) Maximum completed job instances retained. Integer between `1` and `10`. Default: `5`.
    - **restart_policy** (String) Either `OnFailure` or `Never`. Default: `Never`.
    - **active_deadline_seconds** (Number) Maximum seconds a job can run before it is forcibly stopped.

    <a id="nestedblock--sidecar"></a>

    ### `sidecar`

    Read-Only:

    - **envoy** (String) Name of the Envoy sidecar configuration attached to the workload.

    <a id="nestedblock--rollout_options"></a>

    ### `rollout_options`

    Controls rolling-update behavior.

    Read-Only:

    - **min_ready_seconds** (Number) Minimum seconds a container must run without crashing to be considered available.
    - **max_unavailable_replicas** (String) Maximum replicas that can be unavailable during an update.
    - **max_surge_replicas** (String) Maximum replicas above the desired count during an update.
    - **scaling_policy** (String) Update strategy. Either `OrderedReady` or `Parallel`. Default: `OrderedReady`.
    - **termination_grace_period_seconds** (Number) Seconds allowed for graceful termination, including `preStop` hooks.

    > **Note** `max_surge_replicas` and `max_unavailable_replicas` accept absolute numbers (for example, `2`) or percentages (for example, `50%`), and they cannot both be zero.

    <a id="nestedblock--security_options"></a>

    ### `security_options`

    Read-Only:

    - **file_system_group_id** (Number) Group ID applied to mounted volumes.

    <a id="nestedblock--load_balancer"></a>

    ### `load_balancer`

    Read-Only:

    - **replica_direct** (Boolean) When `true`, individual replicas can be reached directly using `replica-<index>` subdomains. Only valid for `stateful` workloads.
    - **direct** (Block List, Max: 1) (see below).
    - **geo_location** (Block List, Max: 1) (see below).

    <a id="nestedblock--load_balancer--direct"></a>

    ### `load_balancer.direct`

    Direct load balancers are created in each workload location and expose the workload's standard endpoints. Customers must configure certificates if TLS is required.

    Read-Only:

    - **enabled** (Boolean) Indicates if the direct load balancer is active.
    - **ipset** (String) Name of the IP set associated with the load balancer, if any.
    - **port** (Block List) (see below).

    <a id="nestedblock--load_balancer--direct--port"></a>

    ### `load_balancer.direct.port`

    Read-Only:

    - **external_port** (Number) Public-facing port.
    - **protocol** (String) Protocol exposed publicly.
    - **scheme** (String) Overrides the default `https` URL scheme in generated links.
    - **container_port** (Number) Container port receiving the traffic.

    <a id="nestedblock--load_balancer--geo_location"></a>

    ### `load_balancer.geo_location`

    Read-Only:

    - **enabled** (Boolean) When enabled, geo-location headers are injected into inbound HTTP requests.
    - **headers** (Block List, Max: 1) (see below).

    <a id="nestedblock--load_balancer--geo_location--headers"></a>

    ### `load_balancer.geo_location.headers`

    Read-Only:

    - **asn** (String) ASN header value injected into requests.
    - **city** (String) City header value.
    - **country** (String) Country header value.
    - **region** (String) Region header value.

    <a id="nestedblock--request_retry_policy"></a>

    ### `request_retry_policy`

    Read-Only:

    - **attempts** (Number) Number of retry attempts. Default: `2`.
    - **retry_on** (List of String) Retry conditions that trigger another attempt.

    <a id="nestedblock--status"></a>

    ### `status`

    Current state of the workload.

    Read-Only:

    - **parent_id** (String) ID of the parent object.
    - **canonical_endpoint** (String) Canonical endpoint for the workload.
    - **endpoint** (String) Public endpoint for the workload.
    - **internal_name** (String) Internal hostname used for service-to-service communication.
    - **replica_internal_names** (List of String)
    - **health_check** (Block List) (see below).
    - **current_replica_count** (Number) Current number of replicas deployed.
    - **resolved_images** (Block List) (see below).
    - **load_balancer** (Block List) (see below).

    <a id="nestedblock--status--health_check"></a>

    ### `status.health_check`

    Details about the most recent health checks.

    Read-Only:

    - **active** (Boolean) Indicates if the health check is active.
    - **success** (Boolean) Indicates if the workload is considered healthy.
    - **code** (Number) Status code returned by the check.
    - **message** (String) Health check message.
    - **failures** (Number) Number of recent failures.
    - **successes** (Number) Number of recent successes.
    - **last_checked** (String) Timestamp (UTC) of the last health check.

    <a id="nestedblock--status--resolved_images"></a>

    ### `status.resolved_images`

    Resolved container images when dynamic tags are enabled.

    Read-Only:

    - **resolved_for_version** (Number) Workload version for which the images were resolved.
    - **resolved_at** (String) UTC timestamp when resolution happened.
    - **error_messages** (List of String) Errors encountered while resolving images.
    - **next_retry_at** (String)
    - **images** (Block List) (see below).

    <a id="nestedblock--status--resolved_images--images"></a>

    ### `status.resolved_images.images`

    Read-Only:

    - **digest** (String) SHA256 digest uniquely identifying the image content.
    - **manifests** (Block List) (see below).

    <a id="nestedblock--status--resolved_images--images--manifests"></a>

    ### `status.resolved_images.images.manifests`

    Read-Only:

    - **image** (String) Name and tag of the resolved image.
    - **media_type** (String) MIME type describing the manifest format.
    - **digest** (String) SHA256 digest identifying the manifest.
    - **platform** (Map of String) Key-value pairs describing the target OS and architecture.

    <a id="nestedblock--status--load_balancer"></a>

    ### `status.load_balancer`

    Read-Only:

    - **origin** (String) Origin identifier associated with the load balancer.
    - **url** (String) Load-balancer endpoint URL exposed by Control Plane.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_cpln as cpln

    workload = cpln.get_workload(name="workload-example",
        gvc="gvc-example")
    pulumi.export("workloadId", workload.id)
    ```
    """
    __args__ = dict()
    __args__['containers'] = containers
    __args__['firewallSpecs'] = firewall_specs
    __args__['gvc'] = gvc
    __args__['jobs'] = jobs
    __args__['loadBalancers'] = load_balancers
    __args__['localOptions'] = local_options
    __args__['name'] = name
    __args__['options'] = options
    __args__['requestRetryPolicies'] = request_retry_policies
    __args__['rolloutOptions'] = rollout_options
    __args__['securityOptions'] = security_options
    __args__['sidecars'] = sidecars
    __args__['tags'] = tags
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('cpln:index/getWorkload:getWorkload', __args__, opts=opts, typ=GetWorkloadResult).value

    return AwaitableGetWorkloadResult(
        containers=pulumi.get(__ret__, 'containers'),
        cpln_id=pulumi.get(__ret__, 'cpln_id'),
        description=pulumi.get(__ret__, 'description'),
        extras=pulumi.get(__ret__, 'extras'),
        firewall_specs=pulumi.get(__ret__, 'firewall_specs'),
        gvc=pulumi.get(__ret__, 'gvc'),
        id=pulumi.get(__ret__, 'id'),
        identity_link=pulumi.get(__ret__, 'identity_link'),
        jobs=pulumi.get(__ret__, 'jobs'),
        load_balancers=pulumi.get(__ret__, 'load_balancers'),
        local_options=pulumi.get(__ret__, 'local_options'),
        name=pulumi.get(__ret__, 'name'),
        options=pulumi.get(__ret__, 'options'),
        request_retry_policies=pulumi.get(__ret__, 'request_retry_policies'),
        rollout_options=pulumi.get(__ret__, 'rollout_options'),
        security_options=pulumi.get(__ret__, 'security_options'),
        self_link=pulumi.get(__ret__, 'self_link'),
        sidecars=pulumi.get(__ret__, 'sidecars'),
        statuses=pulumi.get(__ret__, 'statuses'),
        support_dynamic_tags=pulumi.get(__ret__, 'support_dynamic_tags'),
        tags=pulumi.get(__ret__, 'tags'),
        type=pulumi.get(__ret__, 'type'))
def get_workload_output(containers: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadContainerArgs', 'GetWorkloadContainerArgsDict']]]]] = None,
                        firewall_specs: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadFirewallSpecArgs', 'GetWorkloadFirewallSpecArgsDict']]]]] = None,
                        gvc: Optional[pulumi.Input[_builtins.str]] = None,
                        jobs: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadJobArgs', 'GetWorkloadJobArgsDict']]]]] = None,
                        load_balancers: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadLoadBalancerArgs', 'GetWorkloadLoadBalancerArgsDict']]]]] = None,
                        local_options: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadLocalOptionArgs', 'GetWorkloadLocalOptionArgsDict']]]]] = None,
                        name: Optional[pulumi.Input[_builtins.str]] = None,
                        options: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadOptionArgs', 'GetWorkloadOptionArgsDict']]]]] = None,
                        request_retry_policies: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadRequestRetryPolicyArgs', 'GetWorkloadRequestRetryPolicyArgsDict']]]]] = None,
                        rollout_options: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadRolloutOptionArgs', 'GetWorkloadRolloutOptionArgsDict']]]]] = None,
                        security_options: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadSecurityOptionArgs', 'GetWorkloadSecurityOptionArgsDict']]]]] = None,
                        sidecars: Optional[pulumi.Input[Optional[Sequence[Union['GetWorkloadSidecarArgs', 'GetWorkloadSidecarArgsDict']]]]] = None,
                        tags: Optional[pulumi.Input[Optional[Mapping[str, _builtins.str]]]] = None,
                        opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetWorkloadResult]:
    """
    Use this data source to access information about an existing [Workload](https://docs.controlplane.com/reference/workload) within Control Plane.

    ## Required

    - **name** (String) Name of the workload.
    - **gvc** (String) Name of the GVC that the specified workload belongs to.

    ## Outputs

    The following attributes are exported:

    - **id** (String) The unique identifier for this workload.
    - **cpln_id** (String) The ID, in GUID format, of the workload.
    - **name** (String) Name of the workload.
    - **gvc** (String) Name of the associated GVC.
    - **type** (String) Workload type. Either `serverless`, `standard`, `stateful`, or `cron`.
    - **description** (String) Description of the workload.
    - **tags** (Map of String) Key-value map of resource tags.
    - **self_link** (String) Full link to this resource. Can be referenced by other resources.
    - **identity_link** (String) Full link to the identity used as the access scope for 3rd party cloud resources.
    - **support_dynamic_tags** (Boolean) Indicates if Control Plane automatically redeploys when referenced container images are updated in the registry.
    - **extras** (String) Extra Kubernetes modifications. Only used for BYOK.
    - **container** (Block List) (see below).
    - **firewall_spec** (Block List, Max: 1) (see below).
    - **options** (Block List, Max: 1) (see below).
    - **local_options** (Block List) (see below).
    - **job** (Block List, Max: 1) (see below).
    - **sidecar** (Block List, Max: 1) (see below).
    - **rollout_options** (Block List, Max: 1) (see below).
    - **security_options** (Block List, Max: 1) (see below).
    - **load_balancer** (Block List, Max: 1) (see below).
    - **request_retry_policy** (Block List, Max: 1) (see below).
    - **status** (Block List) (see below).

    <a id="nestedblock--container"></a>

    ### `container`

    > **Note** A workload always exposes at least one container definition.

    Read-Only:

    - **name** (String) Name of the container. Cannot be `istio-proxy`, `queue-proxy`, or `istio-validation`, and cannot start with `cpln_`.
    - **image** (String) The full image and tag path.
    - **working_directory** (String) Override for the container working directory. Must be an absolute path.
    - **port** (Number) The port the container exposes. Only one container can specify a port. Min: `80`. Max: `65535`. Used by the `serverless` workload type. **Deprecated – use `ports`.**
    - **memory** (String) Reserved memory when Capacity AI is disabled, or maximum memory when it is enabled. Default: `128Mi`.
    - **cpu** (String) Reserved CPU when Capacity AI is disabled, or maximum CPU when it is enabled. Default: `50m`.
    - **min_cpu** (String) Minimum CPU when Capacity AI is enabled.
    - **min_memory** (String) Minimum memory when Capacity AI is enabled.
    - **env** (Map of String) Environment variables exposed to the container.
    - **inherit_env** (Boolean) Indicates whether GVC environment variables are inherited. A variable in `env` overrides the same key from the GVC.
    - **command** (String) Override for the container entry point.
    - **args** (List of String) Command-line arguments passed to the container in order.
    - **metrics** (Block List, Max: 1) (see below).
    - **ports** (Block List) (see below).
    - **readiness_probe** (Block List, Max: 1) (see below).
    - **liveness_probe** (Block List, Max: 1) (see below).
    - **gpu_nvidia** (Block List, Max: 1) (see below).
    - **gpu_custom** (Block List, Max: 1) (see below).
    - **lifecycle** (Block List, Max: 1) (see below).
    - **volume** (Block List) (see below).

    > **Note** The following container ports are reserved and cannot be used: `8012`, `8022`, `9090`, `9091`, `15000`, `15001`, `15006`, `15020`, `15021`, `15090`, `41000`.

    <a id="nestedblock--container--metrics"></a>

    ### `container.metrics`

    Read-Only:

    - **port** (Number) Port that exposes custom metrics.
    - **path** (String) Path where custom metrics are available.
    - **drop_metrics** (List of String) Patterns describing metrics to discard.

    <a id="nestedblock--container--ports"></a>

    ### `container.ports`

    Read-Only:

    - **protocol** (String) Protocol. One of `http`, `http2`, `tcp`, or `grpc`.
    - **number** (Number) Port that the container exposes.

    <a id="nestedblock--container--readiness_probe"></a>

    ### `container.readiness_probe`

    Read-Only:

    - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
    - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
    - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
    - **success_threshold** (Number) Minimum consecutive successes to be considered ready. Default: `1`. Min: `1`. Max: `20`.
    - **failure_threshold** (Number) Consecutive failures before marking the container unhealthy. Default: `3`. Min: `1`. Max: `20`.
    - **exec** (Block List, Max: 1) (see below).
    - **grpc** (Block List, Max: 1) (see below).
    - **tcp_socket** (Block List, Max: 1) (see below).
    - **http_get** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--liveness_probe"></a>

    ### `container.liveness_probe`

    Read-Only:

    - **initial_delay_seconds** (Number) Initial delay before the probe runs. Default: `10`. Min: `0`. Max: `600`.
    - **period_seconds** (Number) Interval between probes. Default: `10`. Min: `1`. Max: `600`.
    - **timeout_seconds** (Number) Probe timeout. Default: `1`. Min: `1`. Max: `600`.
    - **success_threshold** (Number) Minimum consecutive successes to be considered healthy. Default: `1`. Min: `1`. Max: `20`.
    - **failure_threshold** (Number) Consecutive failures before restarting the container. Default: `3`. Min: `1`. Max: `20`.
    - **exec** (Block List, Max: 1) (see below).
    - **grpc** (Block List, Max: 1) (see below).
    - **tcp_socket** (Block List, Max: 1) (see below).
    - **http_get** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--probe--exec"></a>

    ### `container.*_probe.exec`

    Read-Only:

    - **command** (List of String) Command executed inside the container when the probe runs.

    <a id="nestedblock--container--probe--grpc"></a>

    ### `container.*_probe.grpc`

    Read-Only:

    - **port** (Number) gRPC port used for the probe.

    <a id="nestedblock--container--probe--tcp_socket"></a>

    ### `container.*_probe.tcp_socket`

    Read-Only:

    - **port** (Number) TCP port used for the probe.

    <a id="nestedblock--container--probe--http_get"></a>

    ### `container.*_probe.http_get`

    Read-Only:

    - **path** (String) HTTP path to query. Default: `/`.
    - **port** (Number) Port for the HTTP GET. Min: `80`. Max: `65535`.
    - **http_headers** (Map of String) Headers included in the probe request.
    - **scheme** (String) HTTP scheme. Either `HTTP` or `HTTPS`. Default: `HTTP`.

    <a id="nestedblock--container--gpu_nvidia"></a>

    ### `container.gpu_nvidia`

    Read-Only:

    - **model** (String) GPU model (for example, `t4`).
    - **quantity** (Number) Number of NVIDIA GPUs attached to the container.

    <a id="nestedblock--container--gpu_custom"></a>

    ### `container.gpu_custom`

    Read-Only:

    - **resource** (String) Name of the custom GPU resource.
    - **quantity** (Number) Number of GPUs requested.
    - **runtime_class** (String) Runtime class that must be used with the custom GPU.

    <a id="nestedblock--container--lifecycle"></a>

    ### `container.lifecycle`

    Read-Only:

    - **post_start** (Block List, Max: 1) (see below).
    - **pre_stop** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--lifecycle--spec"></a>

    ### `container.lifecycle.*`

    Read-Only:

    - **exec** (Block List, Max: 1) (see below).

    <a id="nestedblock--container--lifecycle--exec"></a>

    ### `container.lifecycle.*.exec`

    Read-Only:

    - **command** (List of String) Command executed during the lifecycle hook.

    <a id="nestedblock--container--volume"></a>

    ### `container.volume`

    > **Note** The following paths are reserved and cannot be used: `/dev`, `/dev/log`, `/tmp`, `/var`, `/var/log`.

    > **Note** Valid URI prefixes include `s3://bucket`, `gs://bucket`, `azureblob://storageAccount/container`, `azurefs://storageAccount/share`, `cpln://secret`, `cpln://volumeset`, and `scratch://`.

    Read-Only:

    - **uri** (String) URI of a volume hosted in Control Plane (Volume Set) or a supported cloud provider.
    - **recovery_policy** (String) Recovery policy for persistent volumes. Either `retain` or `recycle`. **Deprecated – no longer used.**
    - **path** (String) File-system path where the volume is mounted inside the container.

    <a id="nestedblock--firewall_spec"></a>

    ### `firewall_spec`

    Controls inbound and outbound access for external (public) and internal (service-to-service) traffic. Access is restricted by default.

    Read-Only:

    - **external** (Block List, Max: 1) (see below).
    - **internal** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external"></a>

    ### `firewall_spec.external`

    Read-Only:

    - **inbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks allowed to reach the workload. `0.0.0.0/0` opens access to the public internet.
    - **inbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks explicitly denied.
    - **outbound_allow_hostname** (List of String) Public hostnames the workload can reach. Wildcards are allowed only as a prefix (for example, `*.amazonaws.com`).
    - **outbound_allow_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks the workload can reach. `0.0.0.0/0` enables outbound access to the public internet.
    - **outbound_blocked_cidr** (List of String) IPv4/IPv6 addresses or CIDR blocks that are denied even if allow lists include them.
    - **outbound_allow_port** (Block List) (see below).
    - **http** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external--outbound_allow_port"></a>

    ### `firewall_spec.external.outbound_allow_port`

    Allows outbound access to specific ports and protocols.

    Read-Only:

    - **protocol** (String) Either `http`, `https`, or `tcp`. Default: `tcp`.
    - **number** (Number) Port number. Max: `65000`.

    <a id="nestedblock--firewall_spec--external--http"></a>

    ### `firewall_spec.external.http`

    Firewall options for HTTP workloads.

    Read-Only:

    - **inbound_header_filter** (Block List, Max: 1) (see below).

    <a id="nestedblock--firewall_spec--external--http--inbound_header_filter"></a>

    ### `firewall_spec.external.http.inbound_header_filter`

    Configures header-based allow/deny logic.

    Read-Only:

    - **key** (String) Header name to inspect.
    - **allowed_values** (List of String) Regular expressions describing allowed header values. Requests that fail to match any allowed value are filtered.
    - **blocked_values** (List of String) Regular expressions describing blocked header values. Requests that match any blocked value are filtered.

    <a id="nestedblock--firewall_spec--internal"></a>

    ### `firewall_spec.internal`

    Controls access between workloads.

    Read-Only:

    - **inbound_allow_type** (String) Internal firewall mode. One of `none`, `same-gvc`, `same-org`, or `workload-list`.
    - **inbound_allow_workload** (List of String) Specific workloads allowed when `inbound_allow_type` is `workload-list`.

    <a id="nestedblock--options"></a>

    ### `options`

    Exports the workload-level options applied by Control Plane.

    Read-Only:

    - **timeout_seconds** (Number) Request timeout in seconds. Default: `5`.
    - **capacity_ai** (Boolean) Whether Capacity AI is enabled. Default: `true`.
    - **capacity_ai_update_minutes** (Number) Minimum interval (in minutes) between Capacity AI reservation updates.
    - **debug** (Boolean) Indicates if debug mode is enabled. Default: `false`.
    - **suspend** (Boolean) Indicates if the workload is suspended. Default: `false`.
    - **autoscaling** (Block List, Max: 1) (see below).
    - **multi_zone** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling"></a>

    ### `options.autoscaling`

    Read-Only:

    - **metric** (String) Scaling metric. One of `concurrency`, `cpu`, `memory`, `rps`, `latency`, `keda`, or `disabled`.
    - **metric_percentile** (String) Percentile to target when the metric represents a distribution (for example, latency).
    - **target** (Number) Target value for the selected metric. Min: `1`. Max: `20000`. Default: `95`.
    - **min_scale** (Number) Minimum replicas allowed. Min: `0`. Max: `max_scale`. Default: `1`.
    - **max_scale** (Number) Maximum replicas allowed. Min: `0`. Default: `5`.
    - **scale_to_zero_delay** (Number) Seconds without requests before scaling to zero. Min: `30`. Max: `3600`. Default: `300`.
    - **max_concurrency** (Number) Maximum concurrent requests per replica. Min: `0`. Max: `1000`. Default: `0`.
    - **multi** (Block List, Max: 1) (see below).
    - **keda** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling--multi"></a>

    ### `options.autoscaling.multi`

    Read-Only:

    - **metric** (String) Either `cpu` or `memory`.
    - **target** (Number) Target value for the metric. Min: `1`. Max: `20000`.

    <a id="nestedblock--options--autoscaling--keda"></a>

    ### `options.autoscaling.keda`

    KEDA (Kubernetes-based Event Driven Autoscaling) configuration.

    Read-Only:

    - **polling_interval** (Number) Seconds between KEDA polling cycles.
    - **cooldown_period** (Number) Cooldown seconds after scaling to zero before scaling up again.
    - **initial_cooldown_period** (Number) Initial cooldown after scaling to zero.
    - **trigger** (Block List) (see below).
    - **advanced** (Block List) (see below).

    <a id="nestedblock--options--autoscaling--keda--trigger"></a>

    ### `options.autoscaling.keda.trigger`

    Defines event-driven scaling triggers.

    Read-Only:

    - **type** (String) Trigger type (for example, `prometheus`, `aws-sqs`).
    - **metadata** (Map of String) Configuration parameters required by the trigger.
    - **name** (String) Optional trigger name.
    - **use_cached_metrics** (Boolean) Indicates whether metrics caching is enabled during the polling interval.
    - **metric_type** (String) Metric type used for scaling.
    - **authentication_ref** (Block List, Max: 1) (see below).

    <a id="nestedblock--options--autoscaling--keda--trigger--authentication_ref"></a>

    ### `options.autoscaling.keda.trigger.authentication_ref`

    Read-Only:

    - **name** (String) Name of the secret listed in `spec.keda.secrets` on the GVC.

    <a id="nestedblock--options--autoscaling--keda--advanced"></a>

    ### `options.autoscaling.keda.advanced`

    Advanced KEDA modifiers.

    Read-Only:

    - **scaling_modifiers** (Block List) (see below).

    <a id="nestedblock--options--autoscaling--keda--advanced--scaling_modifiers"></a>

    ### `options.autoscaling.keda.advanced.scaling_modifiers`

    Read-Only:

    - **target** (String) New target value for the composed metric.
    - **activation_target** (String) Activation target for the composed metric.
    - **metric_type** (String) Metric type used for the composed metric.
    - **formula** (String) Expression that combines or transforms metrics.

    <a id="nestedblock--options--multi_zone"></a>

    ### `options.multi_zone`

    Read-Only:

    - **enabled** (Boolean) Indicates if multi-zone execution is enabled.

    <a id="nestedblock--local_options"></a>

    ### `local_options`

    Overrides default options for specific Control Plane locations.

    Read-Only:

    - **location** (String) Location name whose options are overridden.
    - All attributes from `options` are repeated here with location-specific values.

    <a id="nestedblock--job"></a>

    ### `job`

    Exports cron workload settings.

    Read-Only:

    - **schedule** (String) Cron schedule expression determining job execution times.
    - **concurrency_policy** (String) Either `Forbid` or `Replace`. Determines how overlapping jobs are handled.
    - **history_limit** (Number) Maximum completed job instances retained. Integer between `1` and `10`. Default: `5`.
    - **restart_policy** (String) Either `OnFailure` or `Never`. Default: `Never`.
    - **active_deadline_seconds** (Number) Maximum seconds a job can run before it is forcibly stopped.

    <a id="nestedblock--sidecar"></a>

    ### `sidecar`

    Read-Only:

    - **envoy** (String) Name of the Envoy sidecar configuration attached to the workload.

    <a id="nestedblock--rollout_options"></a>

    ### `rollout_options`

    Controls rolling-update behavior.

    Read-Only:

    - **min_ready_seconds** (Number) Minimum seconds a container must run without crashing to be considered available.
    - **max_unavailable_replicas** (String) Maximum replicas that can be unavailable during an update.
    - **max_surge_replicas** (String) Maximum replicas above the desired count during an update.
    - **scaling_policy** (String) Update strategy. Either `OrderedReady` or `Parallel`. Default: `OrderedReady`.
    - **termination_grace_period_seconds** (Number) Seconds allowed for graceful termination, including `preStop` hooks.

    > **Note** `max_surge_replicas` and `max_unavailable_replicas` accept absolute numbers (for example, `2`) or percentages (for example, `50%`), and they cannot both be zero.

    <a id="nestedblock--security_options"></a>

    ### `security_options`

    Read-Only:

    - **file_system_group_id** (Number) Group ID applied to mounted volumes.

    <a id="nestedblock--load_balancer"></a>

    ### `load_balancer`

    Read-Only:

    - **replica_direct** (Boolean) When `true`, individual replicas can be reached directly using `replica-<index>` subdomains. Only valid for `stateful` workloads.
    - **direct** (Block List, Max: 1) (see below).
    - **geo_location** (Block List, Max: 1) (see below).

    <a id="nestedblock--load_balancer--direct"></a>

    ### `load_balancer.direct`

    Direct load balancers are created in each workload location and expose the workload's standard endpoints. Customers must configure certificates if TLS is required.

    Read-Only:

    - **enabled** (Boolean) Indicates if the direct load balancer is active.
    - **ipset** (String) Name of the IP set associated with the load balancer, if any.
    - **port** (Block List) (see below).

    <a id="nestedblock--load_balancer--direct--port"></a>

    ### `load_balancer.direct.port`

    Read-Only:

    - **external_port** (Number) Public-facing port.
    - **protocol** (String) Protocol exposed publicly.
    - **scheme** (String) Overrides the default `https` URL scheme in generated links.
    - **container_port** (Number) Container port receiving the traffic.

    <a id="nestedblock--load_balancer--geo_location"></a>

    ### `load_balancer.geo_location`

    Read-Only:

    - **enabled** (Boolean) When enabled, geo-location headers are injected into inbound HTTP requests.
    - **headers** (Block List, Max: 1) (see below).

    <a id="nestedblock--load_balancer--geo_location--headers"></a>

    ### `load_balancer.geo_location.headers`

    Read-Only:

    - **asn** (String) ASN header value injected into requests.
    - **city** (String) City header value.
    - **country** (String) Country header value.
    - **region** (String) Region header value.

    <a id="nestedblock--request_retry_policy"></a>

    ### `request_retry_policy`

    Read-Only:

    - **attempts** (Number) Number of retry attempts. Default: `2`.
    - **retry_on** (List of String) Retry conditions that trigger another attempt.

    <a id="nestedblock--status"></a>

    ### `status`

    Current state of the workload.

    Read-Only:

    - **parent_id** (String) ID of the parent object.
    - **canonical_endpoint** (String) Canonical endpoint for the workload.
    - **endpoint** (String) Public endpoint for the workload.
    - **internal_name** (String) Internal hostname used for service-to-service communication.
    - **replica_internal_names** (List of String)
    - **health_check** (Block List) (see below).
    - **current_replica_count** (Number) Current number of replicas deployed.
    - **resolved_images** (Block List) (see below).
    - **load_balancer** (Block List) (see below).

    <a id="nestedblock--status--health_check"></a>

    ### `status.health_check`

    Details about the most recent health checks.

    Read-Only:

    - **active** (Boolean) Indicates if the health check is active.
    - **success** (Boolean) Indicates if the workload is considered healthy.
    - **code** (Number) Status code returned by the check.
    - **message** (String) Health check message.
    - **failures** (Number) Number of recent failures.
    - **successes** (Number) Number of recent successes.
    - **last_checked** (String) Timestamp (UTC) of the last health check.

    <a id="nestedblock--status--resolved_images"></a>

    ### `status.resolved_images`

    Resolved container images when dynamic tags are enabled.

    Read-Only:

    - **resolved_for_version** (Number) Workload version for which the images were resolved.
    - **resolved_at** (String) UTC timestamp when resolution happened.
    - **error_messages** (List of String) Errors encountered while resolving images.
    - **next_retry_at** (String)
    - **images** (Block List) (see below).

    <a id="nestedblock--status--resolved_images--images"></a>

    ### `status.resolved_images.images`

    Read-Only:

    - **digest** (String) SHA256 digest uniquely identifying the image content.
    - **manifests** (Block List) (see below).

    <a id="nestedblock--status--resolved_images--images--manifests"></a>

    ### `status.resolved_images.images.manifests`

    Read-Only:

    - **image** (String) Name and tag of the resolved image.
    - **media_type** (String) MIME type describing the manifest format.
    - **digest** (String) SHA256 digest identifying the manifest.
    - **platform** (Map of String) Key-value pairs describing the target OS and architecture.

    <a id="nestedblock--status--load_balancer"></a>

    ### `status.load_balancer`

    Read-Only:

    - **origin** (String) Origin identifier associated with the load balancer.
    - **url** (String) Load-balancer endpoint URL exposed by Control Plane.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_cpln as cpln

    workload = cpln.get_workload(name="workload-example",
        gvc="gvc-example")
    pulumi.export("workloadId", workload.id)
    ```
    """
    __args__ = dict()
    __args__['containers'] = containers
    __args__['firewallSpecs'] = firewall_specs
    __args__['gvc'] = gvc
    __args__['jobs'] = jobs
    __args__['loadBalancers'] = load_balancers
    __args__['localOptions'] = local_options
    __args__['name'] = name
    __args__['options'] = options
    __args__['requestRetryPolicies'] = request_retry_policies
    __args__['rolloutOptions'] = rollout_options
    __args__['securityOptions'] = security_options
    __args__['sidecars'] = sidecars
    __args__['tags'] = tags
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('cpln:index/getWorkload:getWorkload', __args__, opts=opts, typ=GetWorkloadResult)
    return __ret__.apply(lambda __response__: GetWorkloadResult(
        containers=pulumi.get(__response__, 'containers'),
        cpln_id=pulumi.get(__response__, 'cpln_id'),
        description=pulumi.get(__response__, 'description'),
        extras=pulumi.get(__response__, 'extras'),
        firewall_specs=pulumi.get(__response__, 'firewall_specs'),
        gvc=pulumi.get(__response__, 'gvc'),
        id=pulumi.get(__response__, 'id'),
        identity_link=pulumi.get(__response__, 'identity_link'),
        jobs=pulumi.get(__response__, 'jobs'),
        load_balancers=pulumi.get(__response__, 'load_balancers'),
        local_options=pulumi.get(__response__, 'local_options'),
        name=pulumi.get(__response__, 'name'),
        options=pulumi.get(__response__, 'options'),
        request_retry_policies=pulumi.get(__response__, 'request_retry_policies'),
        rollout_options=pulumi.get(__response__, 'rollout_options'),
        security_options=pulumi.get(__response__, 'security_options'),
        self_link=pulumi.get(__response__, 'self_link'),
        sidecars=pulumi.get(__response__, 'sidecars'),
        statuses=pulumi.get(__response__, 'statuses'),
        support_dynamic_tags=pulumi.get(__response__, 'support_dynamic_tags'),
        tags=pulumi.get(__response__, 'tags'),
        type=pulumi.get(__response__, 'type')))
