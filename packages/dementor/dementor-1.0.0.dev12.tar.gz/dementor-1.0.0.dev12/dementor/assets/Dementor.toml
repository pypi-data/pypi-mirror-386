# Dementor Configuration File 1.0

# This file describes the settings to be used by the CLI application Dementor.
# For more details on all configuration values, refer to the official
# documentation:
# - https://matrixeditor.github.io/dementor/config/protocols.html
#
# The configuration heavily relies on features provided by TOML:
# - https://toml.io/en/
#
# Value Resolution:
# -----------------
# All values are resolved in the following order:
#   1. Most local section (e.g. [[SMB.Server]] or [QUIC])
#   2. Local (protocol) section (e.g. [SMB] or [Log])
#   3. Global section ([Globals]) â€” used only in specific cases.
#      Refer to the online documentation for a complete list.
#
# Note: Some settings can only be used in the most local section (e.g. "Port").
# These are also described in the docs.
#
# Server Configuration:
# ---------------------
# For brevity, servers are configured via array tables. This means each server
# configuration for a protocol can be placed under an extra section named
# [[PROTOCOL.Server]].


# =============================================================================
# Main Configuration
# =============================================================================
[Dementor]

# Workspace directory for storing logs, temporary files, and the database.
# Uncomment to use the current directory as the workspace.
# The default value is: "~/.dementor"

# Workspace = "."

# Dementor uses a modular system that can include custom protocol implementations
# at runtime. This option should contain paths to directories with additional
# Python module files (.py). Invalid or non-existent directories are silently
# ignored.
# The default value is: []

# ExtraModules = [ "/path/to/modules" ]

# Enables mDNS multicast poisoning. Does not require superuser privileges.
# The default value is: true

mDNS = true

# Enables LLNMR multicast poisoning. Does not require superuser privileges.
# The default value is: true

LLMNR = true

# Enables NBT-NS multicast poisoning. Requires superuser privileges.
# The default value is: true

NBTNS = true

# Enables SSDP multicast poisoning. Does not require superuser privileges.
# The default value is: true

SSDP = true

# Enables the MSSQL Browser service. Does not require superuser privileges.
# The default value is: true

SSRP = true

# Enables the SMTP service. Uses privileged ports and requires root privileges.
# The default value is: true

SMTP = true

# Enables the NetBIOS Datagram Service (NBT-DS). Does not capture hashes, but
# may help enumerate local hosts.
# The default value is: true

NBTDS = true

# Enables the SMB server. Runs on privileged ports and requires root privileges.
# Note: Only supports clients with at least SMBv1 support.
# The default value is: true

SMB = true

# Enables an unencrypted FTP server. Runs on a privileged port and requires root
# privileges.
# The default value is: true

FTP = true

# Enables a rogue Key Distribution Center (KDC). Starts both UDP and TCP servers
# on port 88.
# The default value is: true

KDC = true

# Enables LDAP servers. Runs on a privileged port and requires root privileges.
# The default value is: true

LDAP = true

# Enables the QUIC server on port 443. Runs on a privileged port and requires root
# privileges.
# The default value is: true

QUIC = true

# Enables the WinRM server on port 5985. This setting is a shortcut for defining
# an extra HTTP server. Note that if a global of HTTP local certificate and key
# are configured, another WinRM server on port 5986 will be created.
# The default value is: true

WinRM = true

# Enables a simple MSSQL server on its configured port. This setting does not
# require root privileges by default.

MSSQL = true

# Enables a simple MySQL server on its configured port. This setting does not
# require root privileges by default.

MySQL = true

# Enables POP3 servers. Requires root privileges by default (depends on port
# configuration)
# The default value is: true

POP3 = true

# Enables IMAP servers. Requires root privileges by default (depends on port
# configuration)
# The default value is: true

IMAP = true

# Enables X11 TCP servers. Requires no special privileges by default (depends on
# port configuration)
# The default value is: true

X11 = true

# Enables an IPP server. Requires root privileges by default (also depends on
# port configuration)
# The default value is: true

IPP = true

# Enables the UPnP web server.Requires no special privileges by default (depends on
# port configuration)
# The default value is: true

UPnP = true


# =============================================================================
# Globals
# =============================================================================
# All variables defined here act as fallback defaults and can be overridden
# in more specific sections. This section has the lowest priority and will only
# be used if the local (protocol-specific) section does not define the value.
[Globals]

# Describes a list of hosts to *include* for poisoning (whitelist approach).
# Supported filter formats:
#
#   - Simple string:
#       "127.0.0.1"
#
#   - Glob pattern string:
#       "g:*._tcp.*" (Unix-style wildcards)
#
#   - Regex pattern string:
#       "re:.*foobar.*"
#
#   - Dictionary with explicit filter configuration:
#       Example 1: { Target = "hostname" }
#       Example 2: { File = "filters.txt" }         # Load filters from file
#       Example 3: { Target = "host", foo = 1 }      # With custom extras
#
#   These extra fields (e.g., `foo`, `bar`) will be passed to the final
#   FilterObj instance and may be used for protocol-specific handling.

# AnswerTo = []

# Describes a list of hosts to *exclude* from poisoning (blacklist approach).
# Uses the same filter structure as `AnswerTo`.

# Ignore = []


# =============================================================================
# Database Configuration
# =============================================================================
[DB]

# If true, allows duplicate credentials to be stored. If false, only unique
# credentials will be stored and printed once.
# The default value is: true

DuplicateCreds = true

# Custom database filename (overrides default "Dementor.db"). Do not put any
# path information here.

# Name = "database.db"

# Custom path where the database file will be stored. If set, it overrides the
# workspace directory.

# Directory = "/path/to/directory/"


# =============================================================================
# mDNS
# =============================================================================
[mDNS]

# Default Time-To-Live (TTL) in seconds for poisoned responses. This value will
# be applied unless explicitly overridden per target (proposed).

TTL = 120

# Maximum number of domain name labels to process in incoming queries. Queries
# with more labels than this value will be ignored.

MaxLabels = 1

# List of DNS query types that will receive responses. Supported types include: A,
# AAAA, ALL, CNAME, PTR, etc.

AllowedQueryTypes = ["A", "AAAA", "ALL"]


# =============================================================================
# LLMNR
# =============================================================================
[LLMNR]

# Specifies the name to return when responding to LLMNR queries.This can be useful
# for Kerberos relay attacks. Refer to the documentation for more details.

# AnswerName = "other-srv"

# =============================================================================
# SMB (Server Message Block) Configuration
# =============================================================================
[SMB]

# The name that will be used to identify the SMB server when responding to client
# queries.

# FQDN = "name.domain.com"

# The operating system reported by the SMB server. This helps identify the type
# of server responding.

# ServerOS = "UNIX"

# Enables SMB2 protocol support. Requests made with SMB1 will be upgraded automatically
# to SMB2.

SMB2Support = true

# Error code to return when access is denied. You can specify NT_STATUS values or
# string equivalents (e.g., "STATUS_ACCESS_DENIED").

ErrorCode = "STATUS_SMB_BAD_UID"

# You can define multiple SMB server instances to listen on different ports or use
# different configurations.
[[SMB.Server]]
Port = 139

[[SMB.Server]]
Port = 445
# e.g.
# ExtendedSessionSecurity = false


# =============================================================================
# SMTP (Simple Mail Transfer Protocol)
# =============================================================================
[SMTP]

# List of supported authentication mechanisms for SMTP clients.

AuthMechanisms = ["NTLM", "PLAIN", "LOGIN"]

# Fully Qualified Domain Name (FQDN) used by the SMTP server.
# The first part of the FQDN is used as the hostname in responses.

FQDN = "DEMENTOR"

# SMTP server banner (identifier and version sent to clients).

Ident = "Dementor 1.0"

# Require authentication before allowing clients to send emails.

RequireAUTH = false

# Attempt to downgrade authentication from NTLM to weaker methods like LOGIN.
# Only effective if the client is configured to use plaintext credentials.

Downgrade = true

# Require TLS encryption before processing any SMTP commands.

RequireSTARTTLS = false

# Example servers
[[SMTP.Server]]
Port = 25

# [[SMTP.Server]]
# Port = 465

# [[SMTP.Server]]
# Port = 587
# Enable SSL with custom certificate here
# TLS = true
# Cert = "/path/to/cert"
# Key = "/path/to/key"


# =============================================================================
# NTLM Configuration
# =============================================================================
[NTLM]

# Server challenge value used in NTLM authentication.
# Should be a fixed 8-byte string.

Challenge = "1337LEET"

# Enable Extended Session Security (ESS) for NTLM authentication.
# ESS results in NTLMv1/v2-SSP hashes instead of regular NTLMv1/v2 hashes.

ExtendedSessionSecurity = true


# =============================================================================
# FTP Server(s)
# =============================================================================
[[FTP.Server]]
Port = 21


# =============================================================================
# Kerberos KDC
# =============================================================================
[Kerberos]

# Port can't be changed, salt should not be set
# Salt = "1337LEET1337LEET"

# See Hashcat Issue #2783
# - Kerberos 5, etype 18, Pre-Auth (19900) with salt fails
#   You can use this setting but make sure no custom salt has been configured

EncType = "aes256_cts_hmac_sha1_96"

# default configuration
# ErrorCode = "KDC_ERR_C_PRINCIPAL_UNKNOWN"


# =============================================================================
# LDAP
# =============================================================================
[LDAP]

# A list of capabilities to support. You can also set this option in each server

# Capabilities = []

# A list of SASL mechanisms to return. Can be set in each server

# SASLMechanisms = []

# Global timeout configuration (can be changed in each server). Zero (0) indeicates
# no timeout (default), all other values are set in seconds. Note that no timeout
# will lead to problems when closing Dementor.

Timeout = 2

# Hostname + fully qualified domain name, whereby the domain name is optional
# Full example: "HOSTNAME.domain.local"

FQDN = "DEMENTOR"

# Global TLS option, will enable TLS on all TCP servers

TLS = false

# TLS key and certificate (for all TCP servers)
# Cert = "..."

# Key = "/path/to/key"

# The error code to return after successful authentication. It is recommended to return
# an actual error code rather that success(0). By default, "unwillingToPerform" will be
# returned.

# ErrorCode = "unwillingToPerform"

[[LDAP.Server]]
Connectionless = false
Port = 389

[[LDAP.Server]]
# means UDP
Port = 389
Connectionless = true


# =============================================================================
# QUIC
# =============================================================================
[QUIC]
Port = 443
Cert = "default.cert"
Key = "default.key"

# Control the target smb server to connect to.
# TargetSMBPort = 445
# TargetSMBHost =


# =============================================================================
# Proxy
# =============================================================================
[Proxy]

# Specifies a custom WPAD (Web Proxy Auto-Discovery) script in PAC (Proxy
# Auto-Configuration) format used to define proxy behavior. This field supports
# Jinja2 template syntax.
#
# The default WPAD script is bundled with the installed package and located in
# the assets/www directory. You may override it using one of the following formats:
#   1. A file path string referencing the external PAC script.
#   2. An inline string containing the PAC script itself.
#   3. A dictionary with the 'file' key pointing to the external script.

# Script = { file = "dementor/assets/wpad.dat" }

# Additional proxy configuration options may be introduced in future updates.


# =============================================================================
# HTTP
# =============================================================================
[HTTP]

# Specifies the HTTP server software identifier returned in responses. This value
# appears in the 'Server' HTTP response header.
# Default: "Microsoft-IIS/10.0"

# ServerType =

# Defines additional HTTP headers to include in all HTTP responses. Each entry must
# be a valid header string.

# ExtraHeaders = [ "X-Powered-By: Dementor" ]

# Specifies the authentication schemes supported by the HTTP server. Supported schemes
# include:
#   - Basic
#   - Negotiate
#   - NTLM
#   - Bearer

AuthSchemes = ["Basic", "Negotiate", "NTLM", "Bearer"]

# Enables or disables WebDAV protocol support. This setting is enabled by default and
# should only be disabled if WebDAV functionality is not required.

WebDAV = true

# Challenge and ExtendedSessionSecurity are defined in the NTLM section and can
# be applied here too.


# Indicates whether WPAD/PAC file serving is enabled. This setting is enabled by
# default.Refer to the [Proxy] section for configuring the WPAD script source.

WPAD = true

# Determines whether authentication is required to access the WPAD script. When set
# to `true`, clients must authenticate before retrieving the PAC file. Disabling this
# may prevent the server from capturing authentication headers for requests to WPAD
# files.

WPADAuthRequired = true

# Defines the list of supported HTTP request methods. The following methods are
# NOT allowed: OPTIONS, PROPFIND.

# Methods = [ "GET", "POST" ]

# Specifies additional directories to search for template files. Paths defined here
# take precedence over the default template location.

# TemplatesPath = [ "/path/to/templates" ]

[[HTTP.Server]]
Port = 80

# To build an HTTPS server, you need to enable TLS, and configure a certificate
# [[HTTP.Server]]
# Port = 443
# TLS = true
# Cert = "default.cert"
# Key = "default.key"

# To build a WinRM server, you just need to disable WPAD and WebDAV
# [[HTTP.Server]]
# Port = 5985
# WPAD = false
# WebDAV = false


# =============================================================================
# RPC
# =============================================================================
[RPC]

# Similar to HTTP, SMTP, and SMB services, the RPC service also utilizes
# the FQDN, Challenge, and ExtendedSessionSecurity settings defined in the
# [NTLM] section.

# Specifies the RPC error code to be returned upon successful authentication.

ErrorCode = "rpc_s_access_denied"

# Specifies a list of interface handler definitions used by the RPC server.
# These can be either:
#   - Python modules defining RPC interfaces (files ending in `.py`), or
#   - Directories containing multiple interface definitions.
#
# This allows extension of the server with custom protocol handling logic for
# different interface UUIDs and operation numbers.

# Interfaces = [ "/path/to/proto.py", "/path/to/directory/"]


# =============================================================================
# EMP
# =============================================================================
[EPM]

# Specifies the target port to which incoming EPMv4 map requests should be
# redirected.The port must correspond to an open service on the local machine.

TargetPort = 49000

# Defines a range of target ports to use when mapping EPMv4 requests.
# This setting overrides `TargetPort` if both are specified.
#
# The value can be provided as:
#   - A string in the format "start-end"
#   - A dictionary with keys 'start' and 'end'

# TargetPortRange = "45000-49999"


# =============================================================================
# MSSQL
# =============================================================================
[MSSQL]

# The following NTLM-related settings can be inherited from the [NTLM] section:
#   - FQDN
#   - Challenge
#   - ExtendedSessionSecurity

# Defines the error response configuration used to simulate MSSQL authentication
# failure or control behavior.

# Numeric error code returned to the client.

ErrorCode = 1205

# Optional custom error message returned with the error code.

# ErrorMessage = "Access Denied"

# Optional error state value to be included in the MSSQL response.

# ErrorState = 2

# Optional error class value to be included in the MSSQL response.

# ErrorClass = 14

# Specifies the reported version of the MSSQL server. This version string is returned
# in responses and may influence client behavior.

Version = "9.00.1399.06"

# Specifies the name of the MSSQL instance. This value is included in SSRP responses
#and may be used to identify the server instance.

InstanceName = "MSSQLServer"


# =============================================================================
# SSRP
# =============================================================================
[SSRP]

# The following values can be defined here or inherited from the [MSSQL] section:
#   - FQDN
#   - ServerVersion
#   - InstanceName

# The following values can be defined here or inherited from the [Globals] section:
#   - Ignore
#   - AnswerTo

# Specifies the instance-specific response used for SSRP (SQL Server Resolution Protocol).
# This can be used to emulate specific server instance behaviors or service identifiers.

# InstanceConfig = ";rpc;DEMENTOR"


# =============================================================================
# POP3
# =============================================================================
[POP3]

# The following NTLM-related settings can be inherited from the [NTLM] section:
#   - FQDN (global)
#   - Challenge
#   - ExtendedSessionSecurity

# TLS configuration is also available and will be applied if TLS is set to true.
# Therefore, it is recommended to use the TLS setting only within a server block.

# TLS = false
# Cert = /path/to/cert"
# Key = "/path/to/key"

# Attempt to downgrade authentication from NTLM to weaker methods like LOGIN.
# Only effective if the client configured plaintext credentials.

Downgrade = true

# Specifies the banner message to be returned to the client.

Banner = "POP3 Service Ready"

# List of supported authentication mechanisms for POP3 clients.

AuthMechanisms = ["PLAIN", "LOGIN", "NTLM"]

# default plaintext server
[[POP3.Server]]
Port = 110

# Example TLS server
# [[POP3.Server]]
# Port = 995
# TLS = true
# Cert = "/path/to/cert"
# Key = "/path/to/key"


# =============================================================================
# IMAP
# =============================================================================
[IMAP]

# The following NTLM-related settings can be inherited from the [NTLM] section:
#   - FQDN (global)
#   - Challenge
#   - ExtendedSessionSecurity

# TLS configuration is also available and will be applied if TLS is set to true.
# Therefore, it is recommended to use the TLS setting only within a server block.

# TLS = false
# Cert = /path/to/cert"
# Key = "/path/to/key"

# Attempt to downgrade authentication from NTLM to weaker methods like LOGIN.
# Only effective if the client configured plaintext credentials.

Downgrade = true

# Specifies the banner message to be returned to the client.

Banner = "IMAP4rev2 Service Ready"

# List of supported authentication mechanisms for IMAP clients.

AuthMechanisms = ["PLAIN", "LOGIN", "NTLM"]

# List of supported capabilities for IMAP clients. NOTE that this list MUST include
# the revision number if specified

# Capabilities = []

# default plaintext server
[[IMAP.Server]]
Port = 143

# Example TLS server
# [[POP3.Server]]
# Port = 995
# TLS = true
# Cert = "/path/to/cert"
# Key = "/path/to/key"


# =============================================================================
# MySQL
# =============================================================================
[MySQL]

# Port for the MySQL server.

Port = 3306

# Numeric error code returned to the client.

# ErrorCode = 1205

# Optional custom error message returned with the error code.

# ErrorMessage = "Access Denied"

# Specifies the reported version of the MySQL server. This version string is returned
# in responses and may influence client behavior.

ServerVersion = "8.0.42"

# TLS configuration is also available and will be applied if TLS is set to true.

# TLS = false
# Cert = /path/to/cert"
# Key = "/path/to/key"


# =============================================================================
# X11
# =============================================================================
[X11]

# Defines the port range the server will listen on. By default, five ports are opened
# (for displays 0 through 4). Inclusive start and exclusive end.

# PortRange = "6000-6005"

# Custom message returned to the client after authentication completes.

# ErrorMessage = "Access Denied"


# =============================================================================
# IPP
# =============================================================================
[IPP]

# Specifies the port used by the IPP server instance.

Port = 631

# Defines the server name returned in the Server header.The value can be a formatted
# string, supporting templating (Jinja2)

# ServerType = "IPP/1.1 UNIX-{{ random(5) }}"

# Specifies additional headers to include in all server responses. Each entry must be
# a fully qualified HTTP header line without CRLF at the end.

# ExtraHeaders = []

# Specifies additional attributes to include in the get-printer-attributes response.
# Each new attribute requires the following fields:
#   - name: e.g. "printer-device-id"
#   - value: e.g. "1234567890"
#   - tag: e.g. "TEXT" (optional, if type alredy known)
# # The default attribute settings below can be overridden using this options.

# Attributes = []

# Default attributes:

# PrinterName = "Printer Info"
# PrinterLocation = "outside"
# PrinterModel = "HP 8.0"
# DriverUri =
# DocumentFormats = []
# DefaultDocumentFormat = "text/plain"
# SupportedVersions =  ["1.0", "1.1", "2.0", "2.1", "2.2"]
# SupportedOperations = []

# The following settings can be used to trigger CVE-2024-47175 / CVE-2024-47076.

# Specifies the command to inject into the generated PPD. (CVE-2024-47175) Any
# extra hyphens will NOT get escaped.

# RemoteCmd =

# Specifies the printer attribute that stores the malformed text. (CVE-2024-47176)

# RemoteCmdAttr =

# Specifies the printer attribute that stores the malformed text. (CVE-2024-47176).
# "foomatic-rip" must be present in this filter string to correctly interpolate
# the FoomaticRIPCommandLine.

# RemoteCmdCupsFilter =


# =============================================================================
# SSDP
# =============================================================================

# Specifies the target location of the UPnP webserver. This value will point to
# the current host if not explicitly set

# Location =

# Specifies the server type (``Server`` header) that will be returned in SSDP
# M-SEARCH responses

Server = "OS/1.0 UPnP/1.0 Dementor/1.0"

# Defines the duration a response to a multicast search should be valid. Maximum
# cche time.

MaxAge = 1800

# Specifies additional headers to include in all server responses. Each entry must
# be a fully qualified SSDP header line without CRLF at the end.

ExtraHeaders = ["BOOTID.UPNP.ORG: 1", "CONFIGID.UPNP.ORG: 1337"]


# =============================================================================
# UPnP
# =============================================================================
[UPnP]

# Port for the UPnP web server.

Port = 50001

# A list of directories that store extra UPnP profiles to be used by the web server. Note that
# only the target directory specified in "Template" will be used.

# TemplatesPath = ["/path/to/templates"]

# The directory name under one of the template directories specified in "TemplatesPath"
# that stores the device description, service description and presentation HTML.

Template = "upnp-default"

# URI and path to the local device description template.

DDUri = "/dd.xml"

# URI and path to the local service control description template. The file will
# be empty by default.

SCPDUri = "/scpd.xml"

# URI and path to the presentation page template.

PresentationUri = "/present.html"


# =============================================================================
# Logging
# =============================================================================
[Log]

# Enable logging output to a file

Enabled = false

# Specify custom log directory under the current workspace

# LogDir = "logs"

# List of debug loggers to enable for troubleshooting. Those won't be visible in
# file output and only affect the terminal output.

DebugLoggers = [
    "asyncio",
    "mail.log",
    "impacket.smbserver",
    "impacket",
    "quic",
    "pyipp.parser",
]


[Log.Stream.Hosts]

# Uncommenting the Path variable will enable logging all identified clients
# within the network that either (1) establish a direct connection to dementor,
# or (2) via multicast/broadcast messages.

# Path =  "./client_hosts.txt"

# Enables/Disables logging IPv4/v6 addresses

# IPv6 = true
# IPv4 = true

[Log.Stream.DNS]

# Uncommenting the Path variable will enable logging all multicast or broadcast
# name queries (currently: mDNS, LLMNR and NetBIOS).

# Path = "/absolute/path"

[Log.Stream.Hashes]

# Enables logging captured hashes either to a single output file or into
# separate files.

# Path = "./hash-collections"

# "Splits" the collected hashes into separate files.

# Split = true

# File prefix (dynamic string) and suffix to apply when writeing hashes to
# separate files.

# FilePrefix = "{{ hash_type }}-capture"
# FileSuffix = ".txt"

