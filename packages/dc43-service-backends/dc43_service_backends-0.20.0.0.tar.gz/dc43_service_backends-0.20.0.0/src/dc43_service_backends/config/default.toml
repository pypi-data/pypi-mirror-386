[contract_store]
# Filesystem contract store configuration. ``type`` controls the active backend.
type = "filesystem"
# Path to the filesystem contract store. Defaults to a "contracts" directory
# inside the current working directory when unset.
root = ""
# DSN used by the SQL contract store (e.g. postgresql+psycopg://user:pass@host/db).
dsn = ""
# Optional schema name when using SQL-backed storage.
schema = ""
# Use ``table`` to back the service with a Unity Catalog table instead of a
# filesystem directory. Requires ``type = "delta"`` and a Spark runtime.
table = ""

[data_product]
# In-memory data product store mirrors the historical behaviour. Switch to
# ``filesystem`` or ``delta`` to persist ODPS definitions.
type = "memory"
root = ""
table = ""

[data_quality]
# Embedded engine remains the default for backwards compatibility. Switch to
# ``http`` when delegating to an external data observability platform.
type = "local"
base_url = ""
token = ""
token_header = "Authorization"
token_scheme = "Bearer"
default_engine = "native"

# Define data-quality execution engines keyed by the names referenced in
# contracts. The "native" engine is always available and maps to the contract
# driven validator shipped with dc43.
[data_quality.engines.native]
type = "builtin"

[auth]
# Optional bearer token required for requests to the backend API.
token = ""

[unity_catalog]
# Disable Unity Catalog tagging by default; enable and supply Databricks
# connection details (profile or host/token) to mirror dataset links into
# catalog table properties.
enabled = false
dataset_prefix = "table:"
workspace_profile = ""
workspace_url = ""
workspace_token = ""

[governance_store]
# Persist governance outcomes in memory by default. Switch to ``filesystem``,
# ``sql``, ``delta`` or ``http`` to delegate storage to alternative systems.
type = "memory"
root = ""
table = ""
status_table = ""
activity_table = ""
link_table = ""
base_url = ""
token = ""
token_header = "Authorization"
token_scheme = "Bearer"
