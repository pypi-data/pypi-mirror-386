# –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –æ–±—Ä–∞–∑–µ—Ü –¥–ª—è –¥—Ä—É–≥–∏—Ö
import argparse
import logging
from datetime import datetime, timedelta, timezone

from ..api import ApiClient, ClientError
from ..constants import INVALID_ISO8601_FORMAT
from ..main import BaseOperation
from ..main import Namespace as BaseNamespace
from ..types import ApiListResponse
from ..utils import print_err, truncate_string

logger = logging.getLogger(__package__)


class Namespace(BaseNamespace):
    older_than: int
    blacklist_discard: bool
    all: bool


class Operation(BaseOperation):
    """–û—Ç–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –æ—Ç–∫–ª–∏–∫–∏, —Å–∫—Ä—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑—ã —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è."""

    def setup_parser(self, parser: argparse.ArgumentParser) -> None:
        parser.add_argument(
            "--older-than",
            type=int,
            default=30,
            help="–£–¥–∞–ª–∏—Ç—å –æ—Ç–∫–ª–∏–∫–∏ —Å—Ç–∞—Ä—à–µ –æ–ø—Ä. –∫–æ–ª-–≤–∞ –¥–Ω–µ–π. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: %(default)d",
        )
        parser.add_argument(
            "--all",
            type=bool,
            default=False,
            action=argparse.BooleanOptionalAction,
            help="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ—Ç–∫–ª–∏–∫–∏ –≤ —Ç—á —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏",
        )
        parser.add_argument(
            "--blacklist-discard",
            help="–ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è –≤ —Å–ª—É—á–∞–µ –æ—Ç–∫–∞–∑–∞, —á—Ç–æ–±—ã –µ–≥–æ –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å –≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö",
            type=bool,
            default=False,
            action=argparse.BooleanOptionalAction,
        )

    def _get_active_negotiations(self, api_client: ApiClient) -> list[dict]:
        rv = []
        page = 0
        per_page = 100
        while True:
            r: ApiListResponse = api_client.get(
                "/negotiations", page=page, per_page=per_page, status="active"
            )
            rv.extend(r["items"])
            page += 1
            if page >= r["pages"]:
                break
        return rv

    def run(self, args: Namespace, api_client: ApiClient, *_) -> None:
        negotiations = self._get_active_negotiations(api_client)
        print("–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö:", len(negotiations))
        for item in negotiations:
            state = item["state"]
            # messaging_status archived
            # decline_allowed False
            # hidden True
            is_discard = state["id"] == "discard"
            if not item["hidden"] and (
                args.all
                or is_discard
                or (
                    state["id"] == "response"
                    and (datetime.utcnow() - timedelta(days=args.older_than)).replace(
                        tzinfo=timezone.utc
                    )
                    > datetime.strptime(item["updated_at"], INVALID_ISO8601_FORMAT)
                )
            ):
                decline_allowed = item.get("decline_allowed") or False
                r = api_client.delete(
                    f"/negotiations/active/{item['id']}",
                    with_decline_message=decline_allowed,
                )
                assert {} == r
                vacancy = item["vacancy"]
                print(
                    "‚ùå –£–¥–∞–ª–∏–ª–∏",
                    state["name"].lower(),
                    vacancy["alternate_url"],
                    "(",
                    truncate_string(vacancy["name"]),
                    ")",
                )
                if is_discard and args.blacklist_discard:
                    employer = vacancy.get("employer", {})
                    if not employer or 'id' not in employer:
                        # –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–ª–∏ —Å–∫—Ä—ã—Ç
                        continue
                    try:
                        r = api_client.put(f"/employers/blacklisted/{employer['id']}")
                        assert not r
                        print(
                            "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏",
                            employer["alternate_url"],
                            "(",
                            truncate_string(employer["name"]),
                            ")",
                        )
                    except ClientError as ex:
                        print_err("‚ùó –û—à–∏–±–∫–∞:", ex)
        print("üßπ –ß–∏—Å—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
