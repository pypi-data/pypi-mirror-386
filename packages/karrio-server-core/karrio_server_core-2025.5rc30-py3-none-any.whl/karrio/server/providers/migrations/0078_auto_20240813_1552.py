# Generated by Django 4.2.15 on 2024-08-13 15:52

import karrio.lib as lib
from django import forms
import django.conf as conf
import karrio.server.core.models
from django.db import migrations, models, transaction


@transaction.atomic
def forwards_func(apps, schema_editor):
    try:
        from karrio.server.providers.models import MODELS
    except ImportError:
        pass

    db_alias = schema_editor.connection.alias
    User = apps.get_model(*conf.settings.AUTH_USER_MODEL.split("."))
    Carrier = apps.get_model("providers", "Carrier")
    RateSheet = apps.get_model("providers", "RateSheet")

    carrier_accounts = Carrier.objects.using(db_alias).all().iterator()

    for _carrier in carrier_accounts:
        _carrier_name, _settings = next(
            (
                (
                    name,
                    _carrier.metadata.get("__settings")
                    or forms.model_to_dict(getattr(_carrier, model.__name__.lower())),
                )
                for name, model in MODELS.items()
                if hasattr(_carrier, model.__name__.lower())
            ),
            (
                _carrier.metadata.get("__settings", {}).get("carrier_name")
                or "eshipper",
                _carrier.metadata.get("__settings", {}),
            ),
        )

        _services = _settings.pop("services", {})
        _carrier.credentials = {
            key: value
            for key, value in _settings.items()
            if key
            not in [
                "active",
                "services",
                "rate_sheet",
                "carrier_ptr",
                "is_system",
                "capabilities",
                "active_users",
                "created_by",
                "test_mode",
                "metadata",
                "credentials",
                "carrier_code",
                "carrier_id",
            ]
        }
        _carrier.carrier_code = _carrier_name
        _carrier.metadata = {
            key: value
            for key, value in (_carrier.metadata or {}).items()
            if key not in ["__settings"]
        }

        if "username" in _settings and "password" in _settings:
            if _carrier_name == "usps":
                _carrier.carrier_code = "usps_wt"
            if _carrier_name == "usps_international":
                _carrier.carrier_code = "usps_wt_international"
            if _carrier_name == "eshipper":
                _carrier.credentials = {
                    **_carrier.credentials,
                    "principal": lib.identity(
                        _settings.get("principal")
                        if any(_settings.get("principal") or "")
                        else _settings.get("username")
                    ),
                    "credential": lib.identity(
                        _settings.get("credential")
                        if any(_settings.get("credential") or "")
                        else _settings.get("password")
                    ),
                }

        if any(_services):
            settings = getattr(_carrier, MODELS[_carrier_name].__name__.lower())
            _carrier.rate_sheet = karrio.server.core.models._identity(
                getattr(settings, "rate_sheet", None)
                or RateSheet.objects.create(
                    name=f"{_carrier_name} - sheet",
                    slug=f"{_carrier_name} - rate-sheet",
                    carrier_name=_carrier_name,
                    is_system=_carrier.is_system,
                    created_by=_carrier.created_by
                    or User.objects.filter(is_superuser=True).first(),
                )
            )
            _carrier.rate_sheet.services.set(_services)

        _carrier.save(using=db_alias)


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("providers", "0077_uspswtinternationalsettings_uspswtsettings_and_more"),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
