name: webvoyager-benchmark

on:
  schedule:
    - cron: '0 22 * * *'  # Run at 10 PM every day
  workflow_dispatch:  # Allow manual triggering
    inputs:
        use_sdk:
          description: "Run with sdk"
          required: false
          type: boolean
          default: true
        n_runs:
          description: "Number of runs per task"
          required: false
          type: number
          default: 5
        use_vision:
          description: "Use vision capabilities"
          required: false
          type: boolean
          default: true
        headless:
          description: "Run in headless mode"
          required: false
          type: boolean
          default: true
        model:
          description: "Model to use"
          required: false
          type: string
          default: "vertex_ai/gemini-2.0-flash"
        browser_type:
          description: "Browser to use"
          required: false
          type: string
          default: "chrome-nightly"
        max_steps:
          description: "Maximum steps per task"
          required: false
          type: number
          default: 20
        proxies:
          description: "Use proxies"
          required: false
          type: boolean
          default: true
        user_agent:
          description: "Custom user agent (optional)"
          required: false
          type: string
          default: ""
        task_dir:
          description: "Path relative to notte_eval/data with the tasks json"
          required: false
          type: string
          default: "webvoyager/webvoyager_simple.jsonl"


  push:
    branches:
      - main

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref }}-
    ${{ github.event.inputs.task_dir }}-${{ github.event.inputs.model }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  CACHE_TYPE: "pip"

jobs:
  run-benchmark:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "DISABLE_TELEMETRY=true" >> $GITHUB_ENV
          echo "NOTTE_API_KEY=${{ secrets.NOTTE_API_KEY }}" >> $GITHUB_ENV

      - name: Set parameters
        run: |
          echo "NB_TASK_DIR=${{ github.event.inputs.task_dir || 'webvoyager/webvoyager_simple.jsonl' }}" >> $GITHUB_ENV
          echo "NB_MODEL=${{ github.event.inputs.model || 'vertex_ai/gemini-2.0-flash' }}" >> $GITHUB_ENV
          echo "NB_USE_SDK=${{ github.event.inputs.use_sdk || 'true' }}" >> $GITHUB_ENV
          echo "NB_N_RUNS=${{ github.event.inputs.n_runs || '5' }}" >> $GITHUB_ENV
          echo "NB_USE_VISION=${{ github.event.inputs.use_vision || 'true' }}" >> $GITHUB_ENV
          echo "NB_BROWSER_TYPE=${{ github.event.inputs.browser_type || 'chrome-nightly' }}" >> $GITHUB_ENV
          echo "NB_HEADLESS=${{ github.event.inputs.headless || 'true' }}" >> $GITHUB_ENV
          echo "NB_MAX_STEPS=${{ github.event.inputs.max_steps || '20' }}" >> $GITHUB_ENV
          echo "NB_PROXIES=${{ github.event.inputs.proxies || 'true' }}" >> $GITHUB_ENV
          echo "NB_USER_AGENT=${{ github.event.inputs.user_agent || '' }}" >> $GITHUB_ENV

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.VERTEX_AI }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
            enable-cache: true
            cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: ${{ env.CACHE_TYPE }}

      - name: Set up ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        with:
          ffmpeg-version: release

      - name: Cache patchright
        id: cache-patchright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/patchright
            ~/.local/share/patchright
            ${{ github.workspace }}/.patchright
          key: ${{ runner.os }}-patchright-${{ hashFiles('**/pyproject.toml') }}-playwright1155-ffmpeg1011-v1
          restore-keys: |
            ${{ runner.os }}-patchright-${{ hashFiles('**/pyproject.toml') }}-playwright1155-ffmpeg1011-
            ${{ runner.os }}-patchright-

      - name: Install dependencies
        run: uv sync --dev --all-extras

      - name: Install patchright
        if: steps.cache-patchright.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss - installing patchright"
          uv run patchright install --with-deps chromium  --only-shell

      - name: Run benchmark unit tests
        run: |
          uv run pytest -n logical packages/notte-eval/src/notte_eval/webvoyager/test_run.py \
            --tb=short \
            --task_dir "$NB_TASK_DIR" \
            --model "$NB_MODEL" \
            --use_sdk "$NB_USE_SDK" \
            --n_runs "$NB_N_RUNS" \
            --browser_type "$NB_BROWSER_TYPE" \
            --use_vision "$NB_USE_VISION" \
            --headless "$NB_HEADLESS" \
            --max_steps "$NB_MAX_STEPS" \
            --proxies "$NB_PROXIES" \
            --user_agent "$NB_USER_AGENT"

      - name: Zip raw_output_data
        if: always()
        run: |
          if [ -d raw_output_data ]; then
            zip -r raw-output-data.zip raw_output_data
          else
            echo "raw_output_data directory not found!"
            exit 1
          fi

      - name: Upload benchmark raw data artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: raw-output-data
          path: raw-output-data.zip

      - name: Generate results table
        if: always()
        run: |
          uv run python packages/notte-eval/src/notte_eval/webvoyager/analysis.py \
            --task_dir "$NB_TASK_DIR" \
            --n_runs "$NB_N_RUNS"

      - name: Upload md results as step summary
        if: always()
        run: |
          if ls raw_output_data/output_table_*.md 1> /dev/null 2>&1; then
            cat raw_output_data/output_table_*.md >> "$GITHUB_STEP_SUMMARY"
          else
            echo "table file not found!"
            exit 1
          fi
