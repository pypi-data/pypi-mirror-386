repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.11.10
    hooks:
      # Run the linter.
      - id: ruff-check
        types_or: [ python, pyi ]
      - id: ruff-check
        types_or: [ python, pyi ]
        args: [ --fix ]
      # Run the formatter.
      - id: ruff-format
        types_or: [ python, pyi ]

  - repo: https://github.com/DetachHead/basedpyright-pre-commit-mirror
    rev: 1.27.1
    hooks:
      - id: basedpyright
        args: ["--project", "."]
        verbose: true
        exclude: ^(docs/src/|examples/)

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        exclude: ^(.*/README\.md|.*/pyproject\.toml|docs/archives/20250306_README\.md|README\.md||tests/data/.*|docs/src/.*)$

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        types: [file]
        exclude: ^(.*/README\.md|.*/pyproject\.toml|docs/archives/20250307_README\.md|README\.md|.*\.(gif|png|ico|otf))$
      - id: end-of-file-fixer
        types: [file]
        exclude: ^(.*/README\.md|.*/pyproject\.toml|docs/archives/20250307_README\.md|README\.md|.*\.(gif|png|ico|otf))$
      - id: check-yaml
        types: [file]
        files: \.(yaml|yml)$
      - id: check-json
        types: [file]
        files: \.json$

  - repo: local
    hooks:
      - id: check-forbidden-imports
        name: Check for forbidden imports in notte packages
        entry: scripts/check_forbidden_imports.sh
        language: system
        types: [python]
        files: ^packages/(notte-core|notte-sdk)/
      - id: check-playwright-imports
        name: Check for playwright/patchright imports in notte packages
        entry: scripts/check_playwright_imports.sh
        language: system
        types: [python]
        files: ^packages/
      - id: check-docs-broken-links
        name: Check for broken links in documentation
        entry: bash -c "cd docs/src && output=$(mint broken-links 2>&1); echo \"$output\"; if echo \"$output\" | grep -q 'found [1-9]'; then exit 1; fi"
        language: system
        files: ^docs/src/
        pass_filenames: false
      - id: check-sdk-docs
        name: Check that SDK methods used in examples are documented
        entry: scripts/check_sdk_docs.py
        language: system
        types: [python, text]
        files: ^(examples/|docs/src/|packages/notte-sdk/src/).*\.(py|mdx)$
        pass_filenames: false
      - id: no-loguru-logger-import
        name: Check for loguru logger imports
        entry: 'from loguru import logger'
        always_run: true
        language: pygrep
        types: [python]
        exclude: 'tests/|examples/|logging.py$'
