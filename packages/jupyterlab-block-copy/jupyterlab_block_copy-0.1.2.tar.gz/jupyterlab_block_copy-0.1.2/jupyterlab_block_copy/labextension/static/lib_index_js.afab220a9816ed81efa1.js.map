{"version":3,"file":"lib_index_js.afab220a9816ed81efa1.js","mappings":";;;;;;;;;;;;;AAKA;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,8BAA8B;IAClC,WAAW,EAAE,6DAA6D;IAC1E,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,EAAE;QACjC,OAAO,CAAC,GAAG,CAAC,0DAA0D,CAAC,CAAC;QACvE,+BAA+B;QAChC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoCpB,CAAC;QACF,CAAC,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAClE,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://jupyterlab_block_copy/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\n/**\n * Initialization data for the jupyterlab_block_copy extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_block_copy:plugin',\n  description: 'A JupyterLab extension. block copy/cut events in jupyterLab',\n  autoStart: true,\n  activate: (app: JupyterFrontEnd) => {\n    console.log('JupyterLab extension jupyterlab_block_copy is activated!');\n     // Inject script để chặn events\n    const script = document.createElement('script');\n    script.textContent = `\n      setTimeout(function() {\n          // Helper function để chặn event\n          function blockEvent(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              e.stopImmediatePropagation();\n              return false;\n          }\n\n          // Chặn trên document (toàn bộ)\n          ['copy', 'cut', 'paste', 'contextmenu'].forEach(eventType => {\n              document.addEventListener(eventType, blockEvent, { capture: true });\n          });\n\n          // Thêm chặn cụ thể cho notebook container (.jp-Notebook)\n          const notebook = document.querySelector('.jp-Notebook');\n          if (notebook) {\n              ['copy', 'cut', 'paste', 'contextmenu'].forEach(eventType => {\n                  notebook.addEventListener(eventType, blockEvent, { capture: true });\n              });\n          }\n\n          // Để theo dõi cells mới (CodeMirror editors)\n          const observer = new MutationObserver(() => {\n              const editors = document.querySelectorAll('.cm-editor, .CodeMirror');\n              editors.forEach(editor => {\n                  ['copy', 'cut', 'paste', 'contextmenu'].forEach(eventType => {\n                      editor.addEventListener(eventType, blockEvent, { capture: true });\n                  });\n              });\n          });\n          observer.observe(document.body, { childList: true, subtree: true });\n\n          console.log('Full copy/paste blocking script injected!');\n      }, 1000);  // Delay 1s để DOM load đầy đủ\n    `;\n    (document.head || document.documentElement).appendChild(script);\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}