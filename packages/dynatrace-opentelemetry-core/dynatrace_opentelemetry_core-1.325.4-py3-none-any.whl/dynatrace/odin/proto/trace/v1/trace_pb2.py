# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dynatrace/odin/proto/trace/v1/trace.proto
"""Generated protocol buffer code."""
from dynatrace._vendor.google.protobuf.internal import builder as _builder
from dynatrace._vendor.google.protobuf import descriptor as _descriptor
from dynatrace._vendor.google.protobuf import descriptor_pool as _descriptor_pool
from dynatrace._vendor.google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dynatrace.odin.proto.common.v1 import common_pb2 as dynatrace_dot_odin_dot_proto_dot_common_dot_v1_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)dynatrace/odin/proto/trace/v1/trace.proto\x12\x1d\x64ynatrace.odin.proto.trace.v1\x1a+dynatrace/odin/proto/common/v1/common.proto\"\xfd\x01\n\tCustomTag\x12;\n\x04type\x18\x01 \x01(\x0e\x32-.dynatrace.odin.proto.trace.v1.CustomTag.Type\x12\x45\n\tdirection\x18\x02 \x01(\x0e\x32\x32.dynatrace.odin.proto.trace.v1.CustomTag.Direction\x12\x10\n\x08tagValue\x18\x03 \x01(\x0c\"\x1b\n\x04Type\x12\x0b\n\x07Generic\x10\x00\x12\x06\n\x02MQ\x10\x01\"=\n\tDirection\x12\x14\n\x10InvalidDirection\x10\x00\x12\x0c\n\x08Incoming\x10\x01\x12\x0c\n\x08Outgoing\x10\x02\"\xa3\x0b\n\x04Span\x12\x10\n\x08trace_id\x18\x01 \x01(\x0c\x12\x0f\n\x07span_id\x18\x02 \x01(\x0c\x12\x12\n\ntracestate\x18\x03 \x01(\t\x12\x16\n\x0eparent_span_id\x18\x04 \x01(\x0c\x12\x0c\n\x04name\x18\x05 \x01(\t\x12:\n\x04kind\x18\x06 \x01(\x0e\x32,.dynatrace.odin.proto.trace.v1.Span.SpanKind\x12\x1b\n\x13start_time_unixnano\x18\x07 \x01(\x06\x12\x19\n\x11\x65nd_time_unixnano\x18\x08 \x01(\x06\x12\x45\n\nattributes\x18\t \x03(\x0b\x32\x31.dynatrace.odin.proto.common.v1.AttributeKeyValue\x12 \n\x18\x64ropped_attributes_count\x18\n \x01(\r\x12\x39\n\x06\x65vents\x18\x0b \x03(\x0b\x32).dynatrace.odin.proto.trace.v1.Span.Event\x12\x1c\n\x14\x64ropped_events_count\x18\x0c \x01(\r\x12\x37\n\x05links\x18\r \x03(\x0b\x32(.dynatrace.odin.proto.trace.v1.Span.Link\x12\x1b\n\x13\x64ropped_links_count\x18\x0e \x01(\r\x12\x35\n\x06status\x18\x0f \x01(\x0b\x32%.dynatrace.odin.proto.trace.v1.Status\x12\x43\n\x0bsend_reason\x18  \x01(\x0e\x32..dynatrace.odin.proto.trace.v1.Span.SendReason\x12\x1a\n\x12update_sequence_no\x18! \x01(\x05\x12$\n\x1clast_propagate_time_unixnano\x18\" \x01(\x06\x12\x1d\n\x15tenant_parent_span_id\x18# \x01(\x0c\x12\x12\n\nmobile_tag\x18$ \x01(\t\x12<\n\ncustom_tag\x18% \x01(\x0b\x32(.dynatrace.odin.proto.trace.v1.CustomTag\x12)\n\x1cparent_fwtag_encoded_link_id\x18& \x01(\x05H\x00\x88\x01\x01\x1a\x95\x01\n\x05\x45vent\x12\x15\n\rtime_unixnano\x18\x01 \x01(\x06\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x45\n\nattributes\x18\x03 \x03(\x0b\x32\x31.dynatrace.odin.proto.common.v1.AttributeKeyValue\x12 \n\x18\x64ropped_attributes_count\x18\x04 \x01(\r\x1a\xe4\x01\n\x04Link\x12\x10\n\x08trace_id\x18\x01 \x01(\x0c\x12\x0f\n\x07span_id\x18\x02 \x01(\x0c\x12\x12\n\ntracestate\x18\x03 \x01(\t\x12\x45\n\nattributes\x18\x04 \x03(\x0b\x32\x31.dynatrace.odin.proto.common.v1.AttributeKeyValue\x12 \n\x18\x64ropped_attributes_count\x18\x05 \x01(\r\x12\"\n\x15\x66wtag_encoded_link_id\x18\x06 \x01(\x05H\x00\x88\x01\x01\x42\x18\n\x16_fwtag_encoded_link_id\"q\n\x08SpanKind\x12\x19\n\x15SPAN_KIND_UNSPECIFIED\x10\x00\x12\x0c\n\x08INTERNAL\x10\x01\x12\n\n\x06SERVER\x10\x02\x12\n\n\x06\x43LIENT\x10\x03\x12\x0c\n\x08PRODUCER\x10\x04\x12\x0c\n\x08\x43ONSUMER\x10\x05\x12\x08\n\x04LINK\x10\x06\"E\n\nSendReason\x12\t\n\x05\x45nded\x10\x00\x12\x10\n\x0cNewOrChanged\x10\x01\x12\r\n\tKeepAlive\x10\x02\x12\x0b\n\x07\x44ropped\x10\x03\x42\x1f\n\x1d_parent_fwtag_encoded_link_id\"\x99\x03\n\x06Status\x12>\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x30.dynatrace.odin.proto.trace.v1.Status.StatusCode\x12\x0f\n\x07message\x18\x02 \x01(\t\"\xbd\x02\n\nStatusCode\x12\x06\n\x02Ok\x10\x00\x12\r\n\tCancelled\x10\x01\x12\x10\n\x0cUnknownError\x10\x02\x12\x13\n\x0fInvalidArgument\x10\x03\x12\x14\n\x10\x44\x65\x61\x64lineExceeded\x10\x04\x12\x0c\n\x08NotFound\x10\x05\x12\x11\n\rAlreadyExists\x10\x06\x12\x14\n\x10PermissionDenied\x10\x07\x12\x15\n\x11ResourceExhausted\x10\x08\x12\x16\n\x12\x46\x61iledPrecondition\x10\t\x12\x0b\n\x07\x41\x62orted\x10\n\x12\x0e\n\nOutOfRange\x10\x0b\x12\x11\n\rUnimplemented\x10\x0c\x12\x11\n\rInternalError\x10\r\x12\x0f\n\x0bUnavailable\x10\x0e\x12\x0c\n\x08\x44\x61taLoss\x10\x0f\x12\x13\n\x0fUnauthenticated\x10\x10\x42\x87\x01\n!com.dynatrace.odin.proto.trace.v1B\nTraceProtoP\x01ZTgithub.com/dynatrace-oss/opentelemetry-exporter-go/core/internal/odin-proto/trace/v1b\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'dynatrace.odin.proto.trace.v1.trace_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n!com.dynatrace.odin.proto.trace.v1B\nTraceProtoP\001ZTgithub.com/dynatrace-oss/opentelemetry-exporter-go/core/internal/odin-proto/trace/v1'
  _CUSTOMTAG._serialized_start=122
  _CUSTOMTAG._serialized_end=375
  _CUSTOMTAG_TYPE._serialized_start=285
  _CUSTOMTAG_TYPE._serialized_end=312
  _CUSTOMTAG_DIRECTION._serialized_start=314
  _CUSTOMTAG_DIRECTION._serialized_end=375
  _SPAN._serialized_start=378
  _SPAN._serialized_end=1821
  _SPAN_EVENT._serialized_start=1222
  _SPAN_EVENT._serialized_end=1371
  _SPAN_LINK._serialized_start=1374
  _SPAN_LINK._serialized_end=1602
  _SPAN_SPANKIND._serialized_start=1604
  _SPAN_SPANKIND._serialized_end=1717
  _SPAN_SENDREASON._serialized_start=1719
  _SPAN_SENDREASON._serialized_end=1788
  _STATUS._serialized_start=1824
  _STATUS._serialized_end=2233
  _STATUS_STATUSCODE._serialized_start=1916
  _STATUS_STATUSCODE._serialized_end=2233
# @@protoc_insertion_point(module_scope)
