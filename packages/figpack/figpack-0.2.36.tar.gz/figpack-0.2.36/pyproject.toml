[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "figpack"
version = "0.2.36"
description = "A Python package for creating shareable, interactive visualizations in the browser"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Jeremy Magland", email = "jmagland@flatironinstitute.org"}
]
keywords = ["visualization", "plotting", "timeseries", "interactive"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "numpy",
    "zarr",
    "requests",
    "psutil"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "spikeinterface",
    "matplotlib",
    "plotly",
    "Pillow",
    "pandas"
]
test-zarr2 = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "spikeinterface",
    "matplotlib",
    "plotly",
    "Pillow",
    "pandas",
    "zarr<3"
]
test-zarr3 = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "matplotlib",
    "plotly",
    "Pillow",
    "pandas",
    "zarr>=3"
]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "black>=24.0",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=7.0",
    "myst-parser>=2.0",
    "sphinx-rtd-theme>=2.0",
    "sphinx-autobuild>=2021.3.14",
    "linkify-it-py>=2.0",
    "sphinx-copybutton>=0.5",
    "lindi",
    "nibabel",
    "Pillow",
]

[project.urls]
Homepage = "https://github.com/flatironinstitute/figpack"
Repository = "https://github.com/flatironinstitute/figpack"
Documentation = "https://flatironinstitute.github.io/figpack"
"Bug Tracker" = "https://github.com/flatironinstitute/figpack/issues"

[project.scripts]
figpack = "figpack.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["figpack*"]
exclude = ["figpack-figure*", "figpack-api*", "figpack-manage*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=figpack",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=60",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "spikeinterface: marks tests that depend on spikeinterface",
]

[tool.coverage.run]
source = ["figpack"]
omit = [
    "*/tests/*",
    "*/test_*",
    "figpack/figpack-figure-dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | figpack-figure
  | figpack-api
  | figpack-manage
)/
'''
