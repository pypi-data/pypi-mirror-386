# coding: utf-8

"""
    Managed Ray API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class JobDetails(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'job_id': 'str',
        'submission_id': 'str',
        'runtime_env': 'object',
        'entrypoint': 'str'
    }

    attribute_map = {
        'job_id': 'job_id',
        'submission_id': 'submission_id',
        'runtime_env': 'runtime_env',
        'entrypoint': 'entrypoint'
    }

    def __init__(self, job_id=None, submission_id=None, runtime_env=None, entrypoint=None, local_vars_configuration=None):  # noqa: E501
        """JobDetails - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._job_id = None
        self._submission_id = None
        self._runtime_env = None
        self._entrypoint = None
        self.discriminator = None

        if job_id is not None:
            self.job_id = job_id
        if submission_id is not None:
            self.submission_id = submission_id
        if runtime_env is not None:
            self.runtime_env = runtime_env
        self.entrypoint = entrypoint

    @property
    def job_id(self):
        """Gets the job_id of this JobDetails.  # noqa: E501


        :return: The job_id of this JobDetails.  # noqa: E501
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobDetails.


        :param job_id: The job_id of this JobDetails.  # noqa: E501
        :type: str
        """

        self._job_id = job_id

    @property
    def submission_id(self):
        """Gets the submission_id of this JobDetails.  # noqa: E501


        :return: The submission_id of this JobDetails.  # noqa: E501
        :rtype: str
        """
        return self._submission_id

    @submission_id.setter
    def submission_id(self, submission_id):
        """Sets the submission_id of this JobDetails.


        :param submission_id: The submission_id of this JobDetails.  # noqa: E501
        :type: str
        """

        self._submission_id = submission_id

    @property
    def runtime_env(self):
        """Gets the runtime_env of this JobDetails.  # noqa: E501


        :return: The runtime_env of this JobDetails.  # noqa: E501
        :rtype: object
        """
        return self._runtime_env

    @runtime_env.setter
    def runtime_env(self, runtime_env):
        """Sets the runtime_env of this JobDetails.


        :param runtime_env: The runtime_env of this JobDetails.  # noqa: E501
        :type: object
        """

        self._runtime_env = runtime_env

    @property
    def entrypoint(self):
        """Gets the entrypoint of this JobDetails.  # noqa: E501


        :return: The entrypoint of this JobDetails.  # noqa: E501
        :rtype: str
        """
        return self._entrypoint

    @entrypoint.setter
    def entrypoint(self, entrypoint):
        """Sets the entrypoint of this JobDetails.


        :param entrypoint: The entrypoint of this JobDetails.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and entrypoint is None:  # noqa: E501
            raise ValueError("Invalid value for `entrypoint`, must not be `None`")  # noqa: E501

        self._entrypoint = entrypoint

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, JobDetails):
            return True

        return self.to_dict() != other.to_dict()
