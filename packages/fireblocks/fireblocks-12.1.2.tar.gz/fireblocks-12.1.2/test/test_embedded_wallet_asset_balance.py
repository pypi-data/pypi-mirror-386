# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.embedded_wallet_asset_balance import EmbeddedWalletAssetBalance


class TestEmbeddedWalletAssetBalance(unittest.TestCase):
    """EmbeddedWalletAssetBalance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddedWalletAssetBalance:
        """Test EmbeddedWalletAssetBalance
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `EmbeddedWalletAssetBalance`
        """
        model = EmbeddedWalletAssetBalance()
        if include_optional:
            return EmbeddedWalletAssetBalance(
                id = 'BTC-mainnet-acc-01',
                total = '0.87500000',
                available = '0.84500000',
                pending = '0.01500000',
                frozen = '0.00500000',
                locked_amount = '0.01000000',
                block_height = '8459341',
                block_hash = '0000000000000000000769e73a0b8f32a6c5d55e0d64f9ec20c6c3d4e5a9a3f1',
                reward_info = fireblocks.models.embedded_wallet_asset_reward_info.EmbeddedWalletAssetRewardInfo(
                    pending_rewards = '5', )
            )
        else:
            return EmbeddedWalletAssetBalance(
                id = 'BTC-mainnet-acc-01',
                total = '0.87500000',
                available = '0.84500000',
                pending = '0.01500000',
                frozen = '0.00500000',
                locked_amount = '0.01000000',
        )
        """

    def testEmbeddedWalletAssetBalance(self):
        """Test EmbeddedWalletAssetBalance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
