# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.order_details import OrderDetails


class TestOrderDetails(unittest.TestCase):
    """OrderDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderDetails:
        """Test OrderDetails
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `OrderDetails`
        """
        model = OrderDetails()
        if include_optional:
            return OrderDetails(
                id = '',
                via = None,
                status = 'PROCESSING',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                receipt = None,
                general_fees = [
                    null
                    ],
                execution_steps = [
                    {"type":"EXECUTE","status":"PROCESSING","fee":{"feeType":"NETWORK","assetId":"ETH","amountType":"FIXED","amount":"0.01"},"txId":"tx_abc123def456"}
                    ],
                execution_response_details = None,
                settlement = None,
                participants_identification = {"originator":{"externalReferenceId":"user_123456","entityType":"INDIVIDUAL","participantRelationshipType":"FirstParty","fullName":{"firstName":"John","lastName":"Smith"},"dateOfBirth":"1985-03-15","postalAddress":{"streetName":"Main Street","buildingNumber":"123","postalCode":"10001","city":"New York","subdivision":"NY","district":"Manhattan","country":"US"}},"beneficiary":{"externalReferenceId":"user_789012","entityType":"INDIVIDUAL","participantRelationshipType":"ThirdParty","fullName":{"firstName":"Alice","lastName":"Johnson"},"dateOfBirth":"1990-07-22","postalAddress":{"streetName":"Broadway","buildingNumber":"456","postalCode":"10002","city":"New York","subdivision":"NY","district":"Manhattan","country":"US"}}},
                payment_instructions = [
                    {"type":"IBAN","address":{"accountHolder":{"name":"John Smith","city":"London","country":"GB","subdivision":"ENG","address":"123 King's Road","postalCode":"SW3 4LX"},"iban":"GB82WEST12345698765432"},"referenceId":"PAY_INST_abc123def456"}
                    ],
                created_by = '',
                customer_internal_reference_id = '',
                note = '',
                expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return OrderDetails(
                id = '',
                via = None,
                status = 'PROCESSING',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                execution_steps = [
                    {"type":"EXECUTE","status":"PROCESSING","fee":{"feeType":"NETWORK","assetId":"ETH","amountType":"FIXED","amount":"0.01"},"txId":"tx_abc123def456"}
                    ],
                execution_response_details = None,
                settlement = None,
                created_by = '',
        )
        """

    def testOrderDetails(self):
        """Test OrderDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
