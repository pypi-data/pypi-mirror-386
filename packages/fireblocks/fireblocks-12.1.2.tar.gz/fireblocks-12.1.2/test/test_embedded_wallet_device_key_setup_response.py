# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.embedded_wallet_device_key_setup_response import (
    EmbeddedWalletDeviceKeySetupResponse,
)


class TestEmbeddedWalletDeviceKeySetupResponse(unittest.TestCase):
    """EmbeddedWalletDeviceKeySetupResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddedWalletDeviceKeySetupResponse:
        """Test EmbeddedWalletDeviceKeySetupResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `EmbeddedWalletDeviceKeySetupResponse`
        """
        model = EmbeddedWalletDeviceKeySetupResponse()
        if include_optional:
            return EmbeddedWalletDeviceKeySetupResponse(
                status = fireblocks.models.embedded_wallet_set_up_status.EmbeddedWalletSetUpStatus(
                    status = 'statusValue', ),
                device_id = 'deviceIdValue',
                enabled = True,
                setup_status = [{"setupStatus":"setupStatusValue","confirmed":true,"backedUp":true}]
            )
        else:
            return EmbeddedWalletDeviceKeySetupResponse(
                status = fireblocks.models.embedded_wallet_set_up_status.EmbeddedWalletSetUpStatus(
                    status = 'statusValue', ),
                device_id = 'deviceIdValue',
                enabled = True,
                setup_status = [{"setupStatus":"setupStatusValue","confirmed":true,"backedUp":true}],
        )
        """

    def testEmbeddedWalletDeviceKeySetupResponse(self):
        """Test EmbeddedWalletDeviceKeySetupResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
