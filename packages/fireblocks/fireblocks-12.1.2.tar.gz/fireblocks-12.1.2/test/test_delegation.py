# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.delegation import Delegation


class TestDelegation(unittest.TestCase):
    """Delegation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Delegation:
        """Test Delegation
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `Delegation`
        """
        model = Delegation()
        if include_optional:
            return Delegation(
                id = 'b70701f4-d7b1-4795-a8ee-b09cdb5b850a',
                vault_account_id = '2',
                validator_name = 'FwR3P......tT59f',
                provider_name = 'Kiln',
                chain_descriptor = 'SOL',
                amount = '0.05',
                rewards_amount = '0.000856038',
                date_created = '2023-07-13T15:55:34.256Z',
                date_updated = '2023-07-13T15:55:34.256Z',
                status = 'active',
                related_transactions = [{"txId":"b70601f4-d7b1-4795-a8ee-b09cdb4r850d","completed":true},{"txId":"c80601f4-d7b1-4795-a8ee-b09cdb5b450c","completed":false}],
                validator_address = 'FwR3PbjS5iyqzLiLugrBqKSa5EKZ4vK9SKs7eQXtT59f',
                provider_id = 'kiln',
                available_actions = ["unstake"],
                in_progress = True,
                in_progress_tx_id = 'c80601f4-d7b1-4795-a8ee-b09cdb5b450c',
                blockchain_position_info = {"stakeAccountAddress":"3Ru67FyzMTcdENmmRL4Eve4dtPd6AdpuypR21q5EQCdq"},
                related_requests = [{"status":"deactivating","inProgress":false,"amount":"0.05","txId":"c80601f4-d7b1-4795-a8ee-b09cdb5b450c"}]
            )
        else:
            return Delegation(
                id = 'b70701f4-d7b1-4795-a8ee-b09cdb5b850a',
                vault_account_id = '2',
                validator_name = 'FwR3P......tT59f',
                provider_name = 'Kiln',
                chain_descriptor = 'SOL',
                amount = '0.05',
                rewards_amount = '0.000856038',
                date_created = '2023-07-13T15:55:34.256Z',
                date_updated = '2023-07-13T15:55:34.256Z',
                status = 'active',
                related_transactions = [{"txId":"b70601f4-d7b1-4795-a8ee-b09cdb4r850d","completed":true},{"txId":"c80601f4-d7b1-4795-a8ee-b09cdb5b450c","completed":false}],
                validator_address = 'FwR3PbjS5iyqzLiLugrBqKSa5EKZ4vK9SKs7eQXtT59f',
                provider_id = 'kiln',
                available_actions = ["unstake"],
                in_progress = True,
                blockchain_position_info = {"stakeAccountAddress":"3Ru67FyzMTcdENmmRL4Eve4dtPd6AdpuypR21q5EQCdq"},
        )
        """

    def testDelegation(self):
        """Test Delegation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
