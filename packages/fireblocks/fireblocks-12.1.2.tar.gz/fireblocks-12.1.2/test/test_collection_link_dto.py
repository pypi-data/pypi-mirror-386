# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.collection_link_dto import CollectionLinkDto


class TestCollectionLinkDto(unittest.TestCase):
    """CollectionLinkDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionLinkDto:
        """Test CollectionLinkDto
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `CollectionLinkDto`
        """
        model = CollectionLinkDto()
        if include_optional:
            return CollectionLinkDto(
                id = 'fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb',
                status = 'COMPLETED',
                type = 'NON_FUNGIBLE_TOKEN',
                display_name = 'My Simple ERC721 Collection',
                collection_metadata = fireblocks.models.collection_metadata_dto.CollectionMetadataDto(
                    fb_collection_id = '911fe739f0d4d123c98fd366c3bed35c6e30c00e', 
                    name = 'Rarible', 
                    symbol = 'RARI', 
                    standard = '["ERC721","ERC1155","FA2"]', 
                    blockchain_descriptor = 'ETH', 
                    contract_address = '0x1723017329a804564bC8d215496C89eaBf1F3211', )
            )
        else:
            return CollectionLinkDto(
                id = 'fbfbfbfb-fbfb-fbfb-fbfb-fbfbfbfbfbfb',
                status = 'COMPLETED',
                type = 'NON_FUNGIBLE_TOKEN',
        )
        """

    def testCollectionLinkDto(self):
        """Test CollectionLinkDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
