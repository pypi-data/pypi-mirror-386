# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.token_ownership_response import TokenOwnershipResponse


class TestTokenOwnershipResponse(unittest.TestCase):
    """TokenOwnershipResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TokenOwnershipResponse:
        """Test TokenOwnershipResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TokenOwnershipResponse`
        """
        model = TokenOwnershipResponse()
        if include_optional:
            return TokenOwnershipResponse(
                id = '',
                token_id = '',
                standard = '',
                metadata_uri = '',
                cached_metadata_uri = '',
                media = [
                    fireblocks.models.media_entity_response.MediaEntityResponse(
                        url = '', 
                        content_type = 'IMAGE', )
                    ],
                spam = fireblocks.models.spam_ownership_response.SpamOwnershipResponse(
                    result = True, 
                    source = 'OWNER', ),
                collection = fireblocks.models.token_collection_response.TokenCollectionResponse(
                    id = '', 
                    name = '', 
                    symbol = '', ),
                balance = '',
                vault_account_id = '',
                ownership_start_time = 1.337,
                ownership_last_update_time = 1.337,
                blockchain_descriptor = 'ETH',
                description = '',
                name = '',
                ncw_id = '',
                ncw_account_id = '',
                status = 'LISTED'
            )
        else:
            return TokenOwnershipResponse(
                id = '',
                token_id = '',
                standard = '',
                balance = '',
                ownership_start_time = 1.337,
                ownership_last_update_time = 1.337,
                blockchain_descriptor = 'ETH',
                status = 'LISTED',
        )
        """

    def testTokenOwnershipResponse(self):
        """Test TokenOwnershipResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
