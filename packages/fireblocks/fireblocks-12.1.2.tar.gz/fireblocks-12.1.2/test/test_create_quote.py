# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.create_quote import CreateQuote


class TestCreateQuote(unittest.TestCase):
    """CreateQuote unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateQuote:
        """Test CreateQuote
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `CreateQuote`
        """
        model = CreateQuote()
        if include_optional:
            return CreateQuote(
                scope = [
                    null
                    ],
                base_asset_id = '',
                base_asset_rail = 'BLOCKCHAIN',
                quote_asset_id = '',
                quote_asset_rail = 'BLOCKCHAIN',
                base_amount = '100.00',
                slippage_bps = 1,
                settlement = {"type":"DVP","sourceAccount":{"type":"VAULT_ACCOUNT","id":"vault_acc_3f7e1d9b2c5a8e4f"},"destinationAccount":{"type":"VAULT_ACCOUNT","id":"vault_acc_7b2e5d8f1c4a9e3b"}},
                side = 'BUY'
            )
        else:
            return CreateQuote(
                scope = [
                    null
                    ],
                base_asset_id = '',
                quote_asset_id = '',
                base_amount = '100.00',
                side = 'BUY',
        )
        """

    def testCreateQuote(self):
        """Test CreateQuote"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
