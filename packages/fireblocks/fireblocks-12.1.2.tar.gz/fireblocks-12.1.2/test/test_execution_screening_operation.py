# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.execution_screening_operation import ExecutionScreeningOperation


class TestExecutionScreeningOperation(unittest.TestCase):
    """ExecutionScreeningOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExecutionScreeningOperation:
        """Test ExecutionScreeningOperation
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ExecutionScreeningOperation`
        """
        model = ExecutionScreeningOperation()
        if include_optional:
            return ExecutionScreeningOperation(
                operation_id = '',
                status = 'PENDING',
                operation_type = 'SCREENING',
                validation_failure = fireblocks.models.screening_validation_failure.ScreeningValidationFailure(
                    reason = 'SCREENING_DISABLED_IN_TENANT', 
                    data = {
                        'key' : null
                        }, ),
                execution = fireblocks.models.screening_operation_execution.ScreeningOperationExecution(
                    output = fireblocks.models.screening_operation_execution_output.ScreeningOperationExecutionOutput(
                        verdicts = [
                            fireblocks.models.screening_verdict.ScreeningVerdict(
                                verdict = 'PASSED', 
                                execution_operation_id = '', 
                                account = null, 
                                asset_id = '', 
                                amount = '', 
                                matched_rule = fireblocks.models.screening_verdict_matched_rule.ScreeningVerdict_matchedRule(
                                    action = '', 
                                    category = [
                                        ''
                                        ], ), )
                            ], ), 
                    started_at = 1.337, 
                    finished_at = 1.337, 
                    failure = fireblocks.models.screening_operation_failure.ScreeningOperationFailure(
                        reason = 'AML_PROCESS_FAILED', 
                        data = fireblocks.models.screening_operation_execution_output.ScreeningOperationExecutionOutput(
                            verdicts = [
                                fireblocks.models.screening_verdict.ScreeningVerdict(
                                    verdict = 'PASSED', 
                                    execution_operation_id = '', 
                                    account = null, 
                                    asset_id = '', 
                                    amount = '', )
                                ], ), ), )
            )
        else:
            return ExecutionScreeningOperation(
                operation_id = '',
                status = 'PENDING',
                operation_type = 'SCREENING',
        )
        """

    def testExecutionScreeningOperation(self):
        """Test ExecutionScreeningOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
