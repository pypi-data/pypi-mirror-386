# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.embedded_wallet_asset_response import EmbeddedWalletAssetResponse


class TestEmbeddedWalletAssetResponse(unittest.TestCase):
    """EmbeddedWalletAssetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddedWalletAssetResponse:
        """Test EmbeddedWalletAssetResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `EmbeddedWalletAssetResponse`
        """
        model = EmbeddedWalletAssetResponse()
        if include_optional:
            return EmbeddedWalletAssetResponse(
                id = '',
                symbol = 'USDT',
                name = 'Tether USD',
                decimals = 6,
                network_protocol = 'ETH',
                testnet = True,
                has_fee = True,
                base_asset = 'ETH_TEST5',
                eth_network = '',
                eth_contract_address = '',
                issuer_address = 'rnDV4JiwgRNhudPY2sm65AzECpRXaasL4r',
                blockchain_symbol = 'BTH',
                deprecated = False,
                coin_type = 0,
                blockchain = 'ETH_TEST5',
                blockchain_display_name = 'BTH',
                algorithm = 'MPC_ECDSA_SECP256K1'
            )
        else:
            return EmbeddedWalletAssetResponse(
                id = '',
                symbol = 'USDT',
                name = 'Tether USD',
                decimals = 6,
                network_protocol = 'ETH',
                testnet = True,
                has_fee = True,
                base_asset = 'ETH_TEST5',
                coin_type = 0,
                blockchain = 'ETH_TEST5',
        )
        """

    def testEmbeddedWalletAssetResponse(self):
        """Test EmbeddedWalletAssetResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
