# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.get_deployable_address_request import GetDeployableAddressRequest


class TestGetDeployableAddressRequest(unittest.TestCase):
    """GetDeployableAddressRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetDeployableAddressRequest:
        """Test GetDeployableAddressRequest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GetDeployableAddressRequest`
        """
        model = GetDeployableAddressRequest()
        if include_optional:
            return GetDeployableAddressRequest(
                chain_descriptor = 'ETH',
                template_id = 'b70701f4-d7b1-4795-a8ee-b09cdb5b850d',
                init_params = [{"internalType":"string","name":"name","type":"string","value":"name"},{"internalType":"string","name":"symbol","type":"string","value":"symbol"},{"components":[{"internalType":"bool","name":"_isMintable","type":"bool"}],"internalType":"struct MyStruct","value":[{"internalType":"bool","name":"_isMintable","type":"bool","value":false}]}],
                salt = '123456789'
            )
        else:
            return GetDeployableAddressRequest(
                chain_descriptor = 'ETH',
                template_id = 'b70701f4-d7b1-4795-a8ee-b09cdb5b850d',
                init_params = [{"internalType":"string","name":"name","type":"string","value":"name"},{"internalType":"string","name":"symbol","type":"string","value":"symbol"},{"components":[{"internalType":"bool","name":"_isMintable","type":"bool"}],"internalType":"struct MyStruct","value":[{"internalType":"bool","name":"_isMintable","type":"bool","value":false}]}],
                salt = '123456789',
        )
        """

    def testGetDeployableAddressRequest(self):
        """Test GetDeployableAddressRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
