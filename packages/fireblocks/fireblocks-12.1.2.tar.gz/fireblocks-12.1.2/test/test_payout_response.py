# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.payout_response import PayoutResponse


class TestPayoutResponse(unittest.TestCase):
    """PayoutResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PayoutResponse:
        """Test PayoutResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `PayoutResponse`
        """
        model = PayoutResponse()
        if include_optional:
            return PayoutResponse(
                payout_id = '',
                payment_account = fireblocks.models.payment_account_response.PaymentAccountResponse(
                    id = '', 
                    type = 'VAULT_ACCOUNT', ),
                created_at = 1.337,
                state = 'CREATED',
                status = 'REGISTERED',
                reason_of_failure = '',
                init_method = 'FILE',
                instruction_set = [
                    fireblocks.models.payout_instruction_response.PayoutInstructionResponse(
                        id = '', 
                        payee_account = fireblocks.models.payee_account_response.PayeeAccountResponse(
                            id = '', 
                            type = 'VAULT_ACCOUNT', ), 
                        amount = fireblocks.models.instruction_amount.InstructionAmount(
                            amount = '', 
                            asset_id = '', ), 
                        state = 'NOT_STARTED', 
                        transactions = [
                            fireblocks.models.transaction.Transaction(
                                id = '', 
                                state = 'SUBMITTED', 
                                timestamp = 1.337, 
                                instruction_id = '', )
                            ], )
                    ],
                report_url = ''
            )
        else:
            return PayoutResponse(
                payout_id = '',
                payment_account = fireblocks.models.payment_account_response.PaymentAccountResponse(
                    id = '', 
                    type = 'VAULT_ACCOUNT', ),
                created_at = 1.337,
                state = 'CREATED',
                status = 'REGISTERED',
                instruction_set = [
                    fireblocks.models.payout_instruction_response.PayoutInstructionResponse(
                        id = '', 
                        payee_account = fireblocks.models.payee_account_response.PayeeAccountResponse(
                            id = '', 
                            type = 'VAULT_ACCOUNT', ), 
                        amount = fireblocks.models.instruction_amount.InstructionAmount(
                            amount = '', 
                            asset_id = '', ), 
                        state = 'NOT_STARTED', 
                        transactions = [
                            fireblocks.models.transaction.Transaction(
                                id = '', 
                                state = 'SUBMITTED', 
                                timestamp = 1.337, 
                                instruction_id = '', )
                            ], )
                    ],
        )
        """

    def testPayoutResponse(self):
        """Test PayoutResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
