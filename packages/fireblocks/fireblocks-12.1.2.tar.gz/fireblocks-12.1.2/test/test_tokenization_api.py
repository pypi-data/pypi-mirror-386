# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.api.tokenization_api import TokenizationApi


class TestTokenizationApi(unittest.TestCase):
    """TokenizationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TokenizationApi()

    def tearDown(self) -> None:
        pass

    def test_burn_collection_token(self) -> None:
        """Test case for burn_collection_token

        Burn tokens
        """
        pass

    def test_create_new_collection(self) -> None:
        """Test case for create_new_collection

        Create a new collection
        """
        pass

    def test_deactivate_and_unlink_adapters(self) -> None:
        """Test case for deactivate_and_unlink_adapters

        Remove LayerZero adapters
        """
        pass

    def test_deploy_and_link_adapters(self) -> None:
        """Test case for deploy_and_link_adapters

        Deploy LayerZero adapters
        """
        pass

    def test_fetch_collection_token_details(self) -> None:
        """Test case for fetch_collection_token_details

        Get collection token details
        """
        pass

    def test_get_collection_by_id(self) -> None:
        """Test case for get_collection_by_id

        Get a collection by id
        """
        pass

    def test_get_deployable_address(self) -> None:
        """Test case for get_deployable_address

        Get deterministic address for contract deployment
        """
        pass

    def test_get_layer_zero_dvn_config(self) -> None:
        """Test case for get_layer_zero_dvn_config

        Get LayerZero DVN configuration
        """
        pass

    def test_get_layer_zero_peers(self) -> None:
        """Test case for get_layer_zero_peers

        Get LayerZero peers
        """
        pass

    def test_get_linked_collections(self) -> None:
        """Test case for get_linked_collections

        Get collections
        """
        pass

    def test_get_linked_token(self) -> None:
        """Test case for get_linked_token

        Return a linked token
        """
        pass

    def test_get_linked_tokens(self) -> None:
        """Test case for get_linked_tokens

        List all linked tokens
        """
        pass

    def test_issue_new_token(self) -> None:
        """Test case for issue_new_token

        Issue a new token
        """
        pass

    def test_issue_token_multi_chain(self) -> None:
        """Test case for issue_token_multi_chain

        Issue a token on one or more blockchains
        """
        pass

    def test_link(self) -> None:
        """Test case for link

        Link a contract
        """
        pass

    def test_mint_collection_token(self) -> None:
        """Test case for mint_collection_token

        Mint tokens
        """
        pass

    def test_re_issue_token_multi_chain(self) -> None:
        """Test case for re_issue_token_multi_chain

        Reissue a multichain token
        """
        pass

    def test_remove_layer_zero_peers(self) -> None:
        """Test case for remove_layer_zero_peers

        Remove LayerZero peers
        """
        pass

    def test_set_layer_zero_dvn_config(self) -> None:
        """Test case for set_layer_zero_dvn_config

        Set LayerZero DVN configuration
        """
        pass

    def test_set_layer_zero_peers(self) -> None:
        """Test case for set_layer_zero_peers

        Set LayerZero peers
        """
        pass

    def test_unlink(self) -> None:
        """Test case for unlink

        Unlink a token
        """
        pass

    def test_unlink_collection(self) -> None:
        """Test case for unlink_collection

        Delete a collection link
        """
        pass

    def test_validate_layer_zero_channel_config(self) -> None:
        """Test case for validate_layer_zero_channel_config

        Validate LayerZero channel configuration
        """
        pass


if __name__ == "__main__":
    unittest.main()
