# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.legacy_policy_rule_authorization_groups import (
    LegacyPolicyRuleAuthorizationGroups,
)


class TestLegacyPolicyRuleAuthorizationGroups(unittest.TestCase):
    """LegacyPolicyRuleAuthorizationGroups unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LegacyPolicyRuleAuthorizationGroups:
        """Test LegacyPolicyRuleAuthorizationGroups
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `LegacyPolicyRuleAuthorizationGroups`
        """
        model = LegacyPolicyRuleAuthorizationGroups()
        if include_optional:
            return LegacyPolicyRuleAuthorizationGroups(
                logic = 'AND',
                allow_operator_as_authorizer = True,
                groups = [
                    fireblocks.models.legacy_policy_rule_authorization_groups_groups_inner.LegacyPolicyRule_authorizationGroups_groups_inner(
                        users = [
                            ''
                            ], 
                        users_groups = [
                            ''
                            ], 
                        th = 1.337, )
                    ]
            )
        else:
            return LegacyPolicyRuleAuthorizationGroups(
        )
        """

    def testLegacyPolicyRuleAuthorizationGroups(self):
        """Test LegacyPolicyRuleAuthorizationGroups"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
