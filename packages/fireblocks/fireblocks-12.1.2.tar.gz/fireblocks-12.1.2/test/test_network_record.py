# coding: utf-8

"""
Fireblocks API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.6.2
Contact: support@fireblocks.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from fireblocks.models.network_record import NetworkRecord


class TestNetworkRecord(unittest.TestCase):
    """NetworkRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkRecord:
        """Test NetworkRecord
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `NetworkRecord`
        """
        model = NetworkRecord()
        if include_optional:
            return NetworkRecord(
                source = fireblocks.models.source_transfer_peer_path_response.SourceTransferPeerPathResponse(
                    type = 'VAULT_ACCOUNT', 
                    sub_type = '', 
                    id = '', 
                    name = '', 
                    wallet_id = '', 
                    trading_account = '', ),
                destination = fireblocks.models.destination_transfer_peer_path_response.DestinationTransferPeerPathResponse(
                    type = 'VAULT_ACCOUNT', 
                    sub_type = '', 
                    id = '', 
                    name = '', 
                    wallet_id = '', 
                    trading_account = '', ),
                tx_hash = '',
                network_fee = '',
                asset_id = '',
                net_amount = '',
                is_dropped = True,
                type = '',
                destination_address = '',
                amount_usd = '',
                reward_info = fireblocks.models.reward_info.RewardInfo(
                    src_rewards = '', 
                    dest_rewards = '', )
            )
        else:
            return NetworkRecord(
        )
        """

    def testNetworkRecord(self):
        """Test NetworkRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
