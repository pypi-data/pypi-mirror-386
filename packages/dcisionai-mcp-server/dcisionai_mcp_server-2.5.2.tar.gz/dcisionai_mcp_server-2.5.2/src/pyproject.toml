[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dcisionai-mcp-server"
version = "1.0.0"
description = "AI-powered business optimization MCP server with industry-specific workflows"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DcisionAI Team", email = "team@dcisionai.com"}
]
maintainers = [
    {name = "DcisionAI Team", email = "team@dcisionai.com"}
]
keywords = [
    "mcp",
    "model-context-protocol",
    "ai",
    "optimization",
    "business-intelligence",
    "decision-support",
    "qwen",
    "bedrock",
    "agentcore",
    "workflow-automation"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "fastmcp>=0.1.0",
    "httpx>=0.24.0",
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "pandas>=1.5.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "boto3>=1.26.0",
    "botocore>=1.29.0",
    "asyncio-mqtt>=0.11.0",
    "aiofiles>=23.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]

[project.urls]
Homepage = "https://platform.dcisionai.com"
Documentation = "https://docs.dcisionai.com"
Repository = "https://github.com/dcisionai/dcisionai-mcp-server"
"Bug Tracker" = "https://github.com/dcisionai/dcisionai-mcp-server/issues"

[project.scripts]
dcisionai-mcp-server = "dcisionai_mcp_server.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["dcisionai_mcp_server*"]

[tool.setuptools.package-data]
dcisionai_mcp_server = [
    "workflows/*.json",
    "config/*.yaml",
    "templates/*.json",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
