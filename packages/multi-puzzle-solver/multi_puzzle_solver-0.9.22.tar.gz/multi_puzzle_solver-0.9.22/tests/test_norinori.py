import numpy as np

from puzzle_solver import norinori_solver as solver
from puzzle_solver.core.utils import get_pos

def test_easy():
    # 6x6 easy
    # https://www.puzzle-norinori.com/?e=MDo1MDIsOTgz
    board = np.array([
        ['00', '00', '00', '01', '02', '02'],
        ['03', '00', '00', '01', '01', '02'],
        ['03', '04', '00', '01', '01', '01'],
        ['03', '04', '05', '06', '01', '01'],
        ['03', '05', '05', '06', '07', '01'],
        ['05', '05', '06', '06', '07', '01']
    ])
    binst = solver.Board(board=board)
    solutions = binst.solve_and_print()
    assert len(solutions) == 1, f'unique solutions != 1, == {len(solutions)}'
    solution = solutions[0].assignment
    ground = np.array([
        ['X', ' ', 'X', 'X', ' ', 'X'],
        ['X', ' ', ' ', ' ', ' ', 'X'],
        [' ', 'X', ' ', 'X', ' ', ' '],
        [' ', 'X', ' ', 'X', ' ', ' '],
        ['X', ' ', 'X', ' ', 'X', ' '],
        ['X', ' ', 'X', ' ', 'X', ' ']
    ])
    ground_assignment = {get_pos(x=x, y=y) for x in range(ground.shape[1]) for y in range(ground.shape[0]) if ground[y][x] == 'X'}
    assert set(solution.keys()) == ground_assignment, f'solution keys != ground assignment keys, {set(solution.keys()) ^ set(ground_assignment.keys())} \n\n\n{solution} \n\n\n{ground_assignment}'

def test_ground():
    # HUGE MASSIVE MONTHLY PUZZLE
    board = np.array([
        ['00', '00', '00', '01', '01', '01', '02', '02', '03', '03', '04', '04', '04', '05', '06', '06', '07', '07', '08', '09', '09', '10', '10', '11', '11', '11', '12', '12', '12', '13', '13', '13', '13', '13', '14', '15', '16', '16', '16', '16', '16', '17', '18', '18', '18', '18', '19', '20', '20', '20'],
        ['21', '21', '21', '21', '01', '22', '22', '22', '22', '03', '03', '04', '04', '05', '05', '06', '06', '07', '08', '09', '23', '23', '23', '23', '11', '11', '24', '24', '24', '25', '25', '25', '13', '13', '14', '15', '15', '26', '16', '16', '16', '17', '27', '27', '18', '28', '19', '20', '29', '29'],
        ['30', '21', '31', '31', '31', '31', '32', '22', '22', '33', '33', '33', '04', '04', '05', '05', '08', '08', '08', '23', '23', '34', '23', '23', '35', '35', '24', '36', '36', '25', '25', '25', '37', '37', '15', '15', '15', '26', '26', '38', '17', '17', '17', '27', '18', '28', '19', '19', '29', '29'],
        ['30', '21', '21', '21', '31', '31', '32', '22', '39', '39', '39', '04', '04', '04', '04', '40', '40', '08', '08', '08', '23', '34', '23', '41', '41', '35', '35', '36', '36', '42', '25', '43', '43', '37', '37', '37', '15', '38', '38', '38', '17', '17', '17', '27', '18', '18', '44', '19', '45', '45'],
        ['30', '46', '47', '47', '31', '32', '32', '22', '48', '49', '49', '50', '51', '51', '40', '40', '52', '53', '53', '53', '54', '34', '34', '55', '41', '41', '35', '35', '36', '42', '25', '25', '43', '43', '37', '37', '56', '56', '57', '57', '58', '17', '59', '59', '59', '60', '44', '19', '61', '45'],
        ['46', '46', '46', '47', '31', '62', '62', '22', '48', '49', '49', '50', '51', '63', '64', '64', '52', '53', '65', '65', '54', '34', '66', '55', '55', '67', '68', '68', '68', '69', '69', '69', '69', '43', '70', '37', '56', '56', '57', '58', '58', '71', '71', '71', '71', '60', '60', '60', '61', '61'],
        ['46', '72', '72', '73', '73', '62', '74', '48', '48', '49', '75', '50', '50', '63', '64', '76', '52', '77', '77', '65', '54', '78', '66', '66', '55', '67', '67', '68', '79', '80', '80', '80', '80', '80', '70', '81', '56', '82', '82', '82', '58', '58', '58', '83', '84', '84', '85', '60', '60', '61'],
        ['46', '72', '72', '73', '62', '62', '74', '74', '49', '49', '75', '75', '75', '63', '63', '76', '77', '77', '77', '65', '65', '78', '78', '66', '66', '86', '67', '79', '79', '87', '80', '80', '80', '80', '80', '81', '88', '81', '81', '82', '82', '58', '83', '83', '83', '84', '85', '89', '89', '89'],
        ['72', '72', '90', '90', '72', '49', '49', '49', '49', '49', '91', '75', '75', '75', '63', '76', '76', '76', '76', '76', '92', '92', '92', '92', '86', '86', '93', '93', '93', '87', '80', '80', '94', '94', '80', '81', '88', '81', '81', '82', '82', '95', '83', '83', '83', '84', '85', '96', '96', '96'],
        ['97', '72', '72', '72', '72', '98', '99', '100', '101', '91', '91', '102', '75', '75', '75', '75', '103', '104', '76', '92', '92', '105', '105', '105', '86', '86', '106', '93', '93', '87', '87', '80', '80', '80', '80', '81', '81', '81', '81', '81', '81', '95', '95', '95', '107', '84', '85', '108', '96', '108'],
        ['97', '72', '109', '72', '98', '98', '99', '100', '101', '101', '101', '102', '102', '75', '110', '110', '103', '104', '104', '111', '111', '105', '112', '112', '112', '112', '106', '106', '106', '87', '113', '113', '80', '114', '115', '115', '116', '116', '116', '116', '117', '117', '117', '107', '107', '84', '108', '108', '108', '108'],
        ['97', '97', '109', '109', '98', '99', '99', '100', '101', '118', '118', '119', '120', '120', '120', '110', '103', '104', '104', '111', '121', '121', '121', '121', '122', '122', '123', '106', '124', '125', '125', '113', '114', '114', '115', '126', '126', '116', '127', '116', '128', '128', '128', '107', '129', '108', '108', '130', '130', '130'],
        ['131', '97', '132', '132', '133', '133', '99', '100', '101', '118', '119', '119', '120', '134', '110', '110', '103', '104', '104', '111', '121', '135', '135', '121', '122', '122', '123', '106', '124', '125', '125', '113', '136', '136', '115', '126', '126', '127', '127', '116', '116', '129', '129', '107', '129', '108', '137', '130', '138', '138'],
        ['131', '132', '132', '132', '133', '133', '99', '99', '101', '118', '118', '119', '139', '134', '134', '134', '103', '103', '103', '103', '103', '135', '135', '122', '122', '123', '123', '140', '124', '125', '141', '141', '136', '136', '136', '136', '142', '142', '142', '142', '142', '129', '129', '129', '129', '108', '137', '138', '138', '108'],
        ['131', '143', '132', '143', '133', '133', '144', '144', '144', '144', '144', '145', '139', '146', '134', '147', '103', '147', '147', '103', '147', '122', '122', '122', '122', '140', '140', '140', '124', '125', '148', '149', '150', '150', '149', '151', '151', '152', '152', '153', '153', '153', '154', '155', '108', '108', '108', '108', '108', '108'],
        ['131', '143', '143', '143', '143', '156', '144', '157', '157', '144', '158', '145', '139', '146', '134', '147', '147', '147', '147', '147', '147', '159', '160', '161', '122', '162', '163', '163', '124', '148', '148', '149', '149', '149', '149', '149', '152', '152', '152', '164', '153', '154', '154', '155', '108', '165', '166', '108', '167', '167'],
        ['168', '169', '169', '169', '156', '156', '156', '156', '170', '170', '158', '145', '145', '146', '171', '171', '172', '172', '147', '173', '173', '159', '160', '161', '174', '162', '162', '162', '162', '175', '148', '148', '149', '176', '149', '149', '177', '177', '152', '164', '164', '178', '154', '155', '155', '165', '166', '166', '166', '167'],
        ['168', '168', '168', '168', '179', '180', '180', '181', '181', '170', '158', '158', '158', '158', '182', '171', '172', '173', '173', '173', '173', '159', '160', '161', '174', '174', '162', '175', '175', '175', '148', '149', '149', '176', '149', '183', '183', '152', '152', '184', '184', '178', '154', '155', '185', '165', '165', '166', '166', '186'],
        ['187', '187', '187', '187', '179', '180', '180', '181', '181', '158', '158', '158', '182', '182', '182', '182', '172', '173', '173', '160', '160', '160', '160', '161', '188', '188', '162', '175', '189', '189', '190', '149', '149', '149', '149', '183', '152', '152', '191', '184', '184', '154', '154', '154', '185', '192', '192', '186', '166', '186'],
        ['193', '193', '193', '187', '187', '180', '194', '194', '194', '195', '195', '195', '195', '195', '182', '196', '173', '173', '173', '197', '198', '198', '198', '198', '199', '188', '200', '175', '200', '201', '190', '190', '149', '149', '183', '183', '152', '191', '191', '184', '184', '202', '202', '185', '185', '192', '203', '186', '186', '186'],
        ['193', '193', '193', '187', '204', '204', '204', '194', '194', '205', '205', '206', '207', '207', '196', '196', '196', '173', '197', '197', '208', '208', '199', '199', '199', '199', '200', '200', '200', '201', '201', '190', '149', '209', '209', '209', '210', '210', '191', '211', '184', '202', '202', '185', '212', '212', '203', '203', '186', '213'],
        ['214', '193', '193', '215', '215', '215', '204', '216', '216', '205', '205', '206', '206', '207', '217', '217', '218', '218', '197', '208', '208', '219', '219', '199', '220', '220', '200', '221', '221', '201', '222', '222', '223', '223', '223', '224', '210', '211', '211', '211', '225', '225', '202', '226', '212', '212', '227', '227', '213', '213'],
        ['214', '228', '193', '229', '230', '230', '204', '230', '216', '205', '206', '206', '206', '206', '217', '231', '218', '232', '232', '232', '219', '219', '219', '233', '220', '220', '200', '221', '221', '201', '222', '234', '234', '234', '223', '224', '210', '210', '235', '225', '225', '225', '226', '226', '236', '236', '227', '227', '227', '213'],
        ['214', '228', '228', '229', '229', '230', '230', '230', '216', '217', '217', '217', '217', '217', '217', '231', '218', '232', '237', '237', '237', '219', '219', '233', '220', '220', '200', '238', '221', '222', '222', '234', '234', '239', '224', '224', '235', '235', '235', '240', '225', '225', '226', '241', '241', '236', '242', '242', '242', '242'],
        ['228', '228', '228', '228', '243', '244', '244', '245', '216', '217', '217', '246', '246', '247', '217', '217', '218', '232', '248', '249', '250', '250', '251', '233', '233', '233', '252', '238', '252', '222', '222', '222', '253', '239', '239', '254', '254', '254', '255', '240', '240', '225', '226', '256', '236', '236', '257', '257', '257', '242'],
        ['243', '243', '243', '243', '243', '244', '244', '245', '245', '245', '217', '247', '247', '247', '247', '217', '218', '248', '248', '249', '251', '251', '251', '258', '233', '259', '252', '252', '252', '259', '222', '253', '253', '239', '239', '254', '254', '254', '255', '240', '240', '256', '256', '256', '260', '236', '257', '257', '257', '242'],
        ['243', '261', '261', '262', '262', '262', '263', '263', '264', '265', '265', '247', '266', '266', '247', '247', '267', '248', '249', '249', '251', '268', '251', '258', '259', '259', '259', '259', '259', '259', '259', '269', '269', '269', '270', '254', '254', '271', '255', '256', '256', '256', '272', '272', '260', '257', '257', '273', '274', '274'],
        ['275', '261', '261', '262', '276', '276', '263', '263', '264', '264', '265', '247', '247', '266', '267', '267', '267', '267', '249', '251', '251', '268', '268', '258', '259', '259', '277', '278', '278', '278', '278', '269', '270', '270', '270', '279', '271', '271', '280', '280', '256', '256', '256', '272', '260', '260', '281', '273', '273', '274'],
        ['275', '261', '261', '282', '283', '276', '276', '276', '264', '265', '265', '247', '247', '284', '284', '267', '267', '285', '249', '249', '251', '286', '268', '268', '287', '259', '277', '278', '259', '270', '270', '270', '270', '288', '288', '279', '271', '271', '271', '280', '280', '289', '289', '289', '273', '273', '281', '273', '273', '274'],
        ['290', '282', '282', '282', '283', '283', '291', '291', '292', '292', '293', '294', '295', '295', '284', '284', '296', '285', '285', '285', '297', '286', '298', '299', '287', '259', '259', '259', '259', '259', '300', '300', '270', '301', '279', '279', '271', '302', '271', '271', '271', '303', '304', '305', '305', '273', '273', '273', '306', '274'],
        ['290', '290', '290', '307', '291', '291', '291', '291', '292', '293', '293', '294', '295', '295', '295', '296', '296', '285', '308', '308', '297', '298', '298', '299', '299', '309', '310', '310', '310', '259', '259', '300', '301', '301', '311', '302', '302', '302', '312', '303', '303', '303', '304', '304', '304', '313', '313', '273', '306', '306'],
        ['314', '314', '290', '307', '291', '291', '291', '315', '315', '293', '293', '294', '294', '316', '295', '295', '317', '317', '317', '308', '297', '298', '318', '318', '299', '309', '319', '319', '319', '320', '320', '320', '301', '311', '311', '302', '321', '302', '312', '312', '312', '303', '322', '322', '304', '304', '313', '323', '323', '324'],
        ['314', '314', '290', '290', '290', '325', '326', '315', '315', '327', '293', '293', '316', '316', '295', '295', '317', '328', '329', '308', '308', '298', '298', '318', '318', '309', '309', '319', '319', '330', '330', '301', '301', '311', '331', '331', '321', '302', '302', '312', '312', '303', '322', '322', '322', '322', '313', '323', '323', '324'],
        ['332', '314', '333', '333', '290', '325', '326', '326', '315', '327', '334', '293', '316', '316', '295', '328', '328', '328', '329', '329', '329', '298', '318', '318', '335', '335', '335', '336', '336', '330', '301', '301', '331', '331', '331', '337', '321', '321', '338', '338', '338', '303', '303', '339', '339', '324', '324', '324', '324', '324'],
        ['332', '314', '340', '333', '325', '325', '325', '325', '341', '334', '334', '334', '334', '334', '342', '329', '329', '329', '329', '343', '343', '343', '344', '344', '344', '335', '345', '336', '336', '345', '301', '346', '347', '348', '348', '337', '337', '337', '338', '349', '338', '303', '303', '303', '303', '303', '350', '350', '350', '350'],
        ['332', '314', '340', '333', '351', '351', '352', '341', '341', '353', '353', '334', '342', '342', '342', '354', '354', '354', '355', '355', '355', '344', '344', '344', '344', '335', '345', '345', '345', '345', '301', '346', '347', '348', '356', '356', '349', '349', '349', '349', '338', '357', '357', '357', '303', '358', '358', '358', '350', '359'],
        ['340', '340', '340', '360', '351', '351', '352', '341', '361', '353', '353', '362', '362', '342', '362', '354', '363', '354', '354', '355', '355', '344', '344', '364', '364', '364', '345', '345', '365', '365', '346', '346', '347', '366', '366', '356', '356', '367', '367', '367', '367', '368', '368', '368', '369', '369', '369', '370', '370', '359'],
        ['371', '371', '371', '360', '341', '341', '341', '341', '361', '361', '362', '362', '362', '362', '362', '354', '363', '363', '372', '355', '355', '373', '373', '373', '364', '374', '374', '345', '345', '346', '346', '346', '347', '347', '356', '356', '367', '367', '375', '367', '367', '376', '376', '377', '377', '369', '369', '370', '370', '370'],
        ['371', '378', '371', '360', '360', '360', '379', '380', '380', '380', '362', '362', '381', '362', '354', '354', '372', '372', '372', '382', '382', '382', '373', '364', '364', '374', '383', '345', '345', '384', '385', '385', '385', '347', '385', '385', '386', '367', '375', '367', '387', '387', '376', '376', '377', '377', '388', '388', '388', '388'],
        ['389', '378', '390', '390', '390', '379', '379', '391', '391', '392', '362', '362', '381', '393', '393', '394', '395', '395', '395', '395', '395', '373', '373', '373', '383', '383', '383', '383', '396', '384', '384', '397', '385', '385', '385', '386', '386', '367', '367', '367', '398', '376', '376', '376', '399', '399', '400', '401', '401', '401'],
        ['389', '378', '390', '390', '390', '390', '379', '391', '391', '392', '362', '362', '381', '393', '393', '394', '395', '395', '402', '402', '395', '403', '404', '404', '405', '383', '406', '383', '396', '397', '397', '397', '385', '407', '407', '407', '408', '409', '409', '367', '398', '410', '376', '410', '399', '400', '400', '401', '401', '401'],
        ['389', '411', '411', '411', '411', '412', '412', '412', '391', '392', '393', '393', '393', '393', '413', '394', '414', '414', '402', '415', '415', '403', '403', '404', '405', '405', '406', '406', '396', '416', '416', '397', '416', '416', '417', '417', '408', '408', '408', '408', '398', '410', '410', '410', '399', '400', '418', '418', '418', '418'],
        ['419', '419', '411', '411', '412', '412', '420', '420', '391', '421', '421', '421', '421', '421', '413', '394', '414', '422', '423', '423', '415', '415', '403', '404', '424', '424', '425', '425', '425', '425', '416', '416', '416', '416', '426', '417', '427', '427', '427', '427', '398', '398', '410', '428', '400', '400', '418', '418', '418', '418'],
        ['411', '419', '411', '429', '429', '420', '420', '420', '420', '421', '421', '430', '421', '421', '413', '394', '414', '422', '422', '423', '423', '431', '403', '432', '432', '424', '424', '425', '425', '424', '433', '433', '416', '416', '426', '417', '434', '434', '434', '435', '435', '398', '435', '428', '428', '428', '436', '418', '437', '418'],
        ['411', '411', '411', '438', '438', '438', '420', '420', '420', '439', '439', '430', '421', '421', '394', '394', '394', '394', '422', '422', '422', '431', '440', '441', '432', '442', '424', '424', '424', '424', '424', '443', '416', '426', '426', '417', '434', '444', '434', '435', '435', '435', '435', '428', '436', '436', '436', '445', '437', '446'],
        ['447', '447', '438', '438', '438', '438', '448', '448', '420', '449', '439', '430', '421', '450', '450', '451', '451', '451', '452', '453', '453', '453', '440', '441', '441', '442', '454', '454', '424', '443', '443', '443', '416', '455', '455', '417', '434', '444', '444', '456', '456', '456', '435', '428', '457', '457', '436', '445', '446', '446'],
        ['447', '438', '438', '458', '459', '459', '459', '459', '449', '449', '439', '439', '460', '461', '451', '451', '462', '452', '452', '452', '453', '440', '440', '440', '441', '442', '442', '442', '442', '463', '463', '464', '464', '455', '465', '465', '465', '466', '467', '467', '468', '456', '469', '469', '457', '446', '446', '445', '446', '470'],
        ['438', '438', '438', '458', '459', '459', '459', '471', '472', '449', '449', '439', '460', '461', '473', '473', '462', '462', '462', '452', '452', '440', '474', '440', '440', '440', '475', '442', '463', '463', '476', '464', '477', '478', '478', '478', '466', '466', '466', '467', '468', '469', '469', '469', '446', '446', '446', '446', '446', '470'],
        ['438', '479', '479', '479', '480', '480', '481', '471', '472', '472', '472', '439', '460', '461', '473', '462', '462', '482', '452', '452', '452', '483', '474', '484', '475', '475', '475', '475', '463', '476', '476', '464', '477', '477', '466', '466', '466', '466', '466', '467', '468', '469', '469', '469', '485', '485', '486', '486', '470', '470'],
        ['438', '438', '438', '479', '480', '480', '481', '471', '471', '472', '472', '439', '439', '461', '473', '462', '462', '482', '452', '452', '483', '483', '483', '484', '484', '475', '475', '475', '463', '476', '476', '464', '477', '477', '477', '477', '487', '487', '466', '467', '468', '468', '469', '469', '485', '485', '486', '470', '470', '470']
    ])
    binst = solver.Board(board=board)
    solutions = binst.solve_and_print()
    assert len(solutions) == 1, f'unique solutions != 1, == {len(solutions)}'
    solution = solutions[0].assignment
    ground = np.array([
        [ 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X' ],
        [ 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X' ],
        [ ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ' ],
        [ 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X' ],
        [ 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X' ],
        [ ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ' ],
        [ ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X' ],
        [ 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ' ],
        [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ' ],
        [ ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X' ],
        [ ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X' ],
        [ ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ' ],
        [ 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X' ],
        [ 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X' ],
        [ ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ' ],
        [ 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ' ],
        [ 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ' ],
        [ ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ ' ', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ' ],
        [ 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X' ],
        [ ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ' ],
        [ 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X' ],
        [ 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ' ],
        [ ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ' ],
        [ 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ' ],
        [ 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ' ],
        [ ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ' ],
        [ ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ' ],
        [ ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X' ],
        [ 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X' ],
        [ ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ' ],
        [ ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ' ],
        [ ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ' ],
        [ ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ' ],
        [ ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ' ],
        [ ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ' ],
    ])
    ground_assignment = {get_pos(x=x, y=y) for x in range(ground.shape[1]) for y in range(ground.shape[0]) if ground[y][x] == 'X'}
    assert set(solution.keys()) == ground_assignment, f'solution keys != ground assignment keys, {set(solution.keys()) ^ ground_assignment} \n\n\n{solution} \n\n\n{ground_assignment}'


def test_ground_2():
    # 20x20 hard
    # https://www.puzzle-norinori.com/?e=OTo0LDc0Miw5MTU=
    board = np.array([
        ['00', '01', '01', '01', '01', '02', '03', '03', '04', '04', '04', '05', '05', '05', '06', '07', '08', '08', '09', '09'],
        ['00', '00', '01', '01', '01', '02', '03', '04', '04', '10', '11', '11', '05', '06', '06', '07', '08', '08', '12', '12'],
        ['13', '13', '13', '01', '01', '03', '03', '10', '10', '10', '11', '14', '05', '14', '07', '07', '07', '12', '12', '12'],
        ['13', '15', '13', '16', '16', '16', '17', '17', '17', '18', '18', '14', '14', '14', '07', '07', '07', '07', '07', '12'],
        ['13', '15', '15', '16', '19', '19', '17', '17', '17', '18', '18', '18', '14', '20', '07', '07', '21', '21', '21', '21'],
        ['13', '19', '19', '19', '19', '19', '17', '22', '22', '22', '22', '18', '14', '20', '20', '07', '21', '23', '23', '21'],
        ['24', '24', '25', '25', '25', '25', '26', '27', '27', '27', '28', '28', '20', '20', '29', '29', '30', '30', '31', '31'],
        ['24', '24', '25', '32', '33', '33', '26', '27', '27', '34', '28', '35', '35', '36', '36', '29', '37', '30', '31', '31'],
        ['38', '32', '32', '32', '33', '27', '27', '27', '27', '34', '28', '28', '35', '35', '29', '29', '37', '37', '31', '37'],
        ['38', '38', '32', '39', '33', '40', '34', '34', '34', '34', '28', '35', '35', '35', '41', '37', '37', '37', '37', '37'],
        ['42', '38', '39', '39', '40', '40', '43', '43', '34', '44', '28', '35', '45', '45', '41', '41', '41', '41', '46', '46'],
        ['42', '42', '39', '47', '47', '40', '40', '44', '44', '44', '48', '48', '48', '48', '48', '41', '49', '49', '49', '46'],
        ['50', '50', '39', '39', '40', '40', '40', '40', '51', '51', '51', '52', '48', '48', '53', '41', '54', '54', '49', '46'],
        ['50', '39', '39', '55', '55', '40', '40', '40', '56', '51', '51', '52', '53', '48', '53', '41', '41', '54', '49', '46'],
        ['39', '39', '39', '57', '56', '56', '56', '56', '56', '56', '53', '53', '53', '53', '53', '58', '58', '58', '59', '59'],
        ['60', '39', '39', '57', '57', '61', '61', '61', '62', '56', '56', '63', '63', '63', '63', '63', '59', '59', '59', '59'],
        ['60', '64', '65', '65', '61', '61', '66', '66', '62', '62', '62', '67', '63', '63', '68', '69', '69', '69', '69', '69'],
        ['60', '64', '65', '65', '65', '65', '66', '70', '70', '70', '70', '67', '67', '71', '68', '69', '72', '73', '73', '69'],
        ['60', '60', '60', '65', '66', '66', '66', '66', '74', '75', '75', '75', '67', '71', '68', '68', '72', '73', '73', '73'],
        ['76', '76', '76', '76', '76', '77', '77', '74', '74', '74', '74', '67', '67', '71', '71', '71', '72', '73', '78', '78']
    ])
    binst = solver.Board(board=board)
    solutions = binst.solve_and_print()
    assert len(solutions) == 1, f'unique solutions != 1, == {len(solutions)}'
    solution = solutions[0].assignment
    ground = np.array([
        [ 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X' ],
        [ 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ' ],
        [ ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ' ],
        [ 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X' ],
        [ ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X' ],
        [ ' ', 'X', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ' ],
        [ ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X' ],
        [ 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X' ],
        [ 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ' ],
        [ ' ', 'X', 'X', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', 'X', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ' ],
        [ 'X', ' ', ' ', ' ', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ' ],
        [ 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ' ],
        [ ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X' ],
        [ 'X', ' ', ' ', 'X', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ' ],
        [ 'X', ' ', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', ' ', ' ' ],
        [ ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X' ],
        [ ' ', 'X', ' ', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X' ],
        [ ' ', 'X', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', ' ', 'X', 'X', ' ' ],
        [ 'X', ' ', 'X', ' ', ' ', ' ', ' ', 'X', ' ', ' ', 'X', 'X', ' ', ' ', 'X', ' ', 'X', ' ', ' ', ' ' ],
        [ 'X', ' ', 'X', ' ', ' ', 'X', 'X', ' ', 'X', 'X', ' ', ' ', ' ', ' ', 'X', ' ', 'X', ' ', 'X', 'X' ],
    ])
    ground_assignment = {get_pos(x=x, y=y) for x in range(ground.shape[1]) for y in range(ground.shape[0]) if ground[y][x] == 'X'}
    assert set(solution.keys()) == ground_assignment, f'solution keys != ground assignment keys, {set(solution.keys()) ^ ground_assignment} \n\n\n{solution} \n\n\n{ground_assignment}'


if __name__ == '__main__':
    # test_easy()
    # test_ground()
    test_ground_2()
