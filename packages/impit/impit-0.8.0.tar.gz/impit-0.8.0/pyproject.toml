[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "impit"
version = "0.8.0"
description = "A library for making HTTP requests through browser impersonation"
readme = "README.md"
authors = [{ name = "Jindřich Bär" }]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "apify",
    "http",
    "requests",
    "browser",
    "impersonation",
]
dependencies = []

[project.urls]
"Homepage" = "https://apify.github.io/impit/python"
"Apify homepage" = "https://apify.com"
"Changelog" = "https://github.com/apify/impit/blob/master/impit-python/CHANGELOG.md"
"Documentation" = "https://apify.github.io/impit/python"
"Issue tracker" = "https://github.com/apify/impit/issues"
"Repository" = "https://github.com/apify/impit"

[dependency-groups]
dev = [
    "mypy",
    "pytest-asyncio",
    "pytest-rerunfailures",
    "pytest-cov",
    "pytest-only",
    "pytest-xdist",
    "pytest",
    "ruff",
    "setuptools",
]
docs = [
    "sphinx>=7.4.7",
    "myst-parser>=3.0.1",
    "furo",
    "stubdoc",
]

[tool.maturin]
python-source = "python"
module-name = "impit"
manifest-path = "impit-python/Cargo.toml"

[tool.ruff]
line-length = 120
include = ["python/**/*.py", "test/**/*.py"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in {filename}
    "BLE001", # Do not catch blind exception
    "C901",   # `{name}` is too complex
    "COM812", # This rule may cause conflicts when used with the formatter
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D107",   # Missing docstring in `__init__`
    "D203",   # One blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "D413",   # Missing blank line after last section
    "EM",     # flake8-errmsg
    "ISC001", # This rule may cause conflicts when used with the formatter
    "FIX",    # flake8-fixme
    "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401", # Unused imports
]
"**/{test}/*" = [
    "D",       # Everything from the pydocstyle
    "INP001",  # File {filename} is part of an implicit namespace package, add an __init__.py
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "S101",    # Use of assert detected
    "SLF001",  # Private member accessed: `{name}`
    "T20",     # flake8-print
    "TRY301",  # Abstract `raise` to an inner function
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.isort]
known-first-party = ["impit"]

[tool.pytest.ini_options]
addopts = "-ra"
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
reruns = "3"

[tool.mypy]
python_version = "3.10"
files = ["python", "test"]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.uv.sources]
stubdoc = { git = "https://github.com/bayashi-cl/stubdoc" }
