"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from moovio_sdk.models.errors import MoovError
from moovio_sdk.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated


class LinkApplePayErrorData(BaseModel):
    error: Optional[str] = None
    r"""Describes an error that wasn't attributable to a single request field."""

    payment_data: Annotated[Optional[str], pydantic.Field(alias="paymentData")] = None
    r"""Describes an error within the `token.paymentData` request field."""

    payment_method: Annotated[Optional[str], pydantic.Field(alias="paymentMethod")] = (
        None
    )
    r"""Describes an error within the `token.paymentMethod` request field."""

    transaction_identifier: Annotated[
        Optional[str], pydantic.Field(alias="transactionIdentifier")
    ] = None
    r"""Describes an error within the `token.transactionIdentifier` request field."""


@dataclass(unsafe_hash=True)
class LinkApplePayError(MoovError):
    data: LinkApplePayErrorData = field(hash=False)

    def __init__(
        self,
        data: LinkApplePayErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
