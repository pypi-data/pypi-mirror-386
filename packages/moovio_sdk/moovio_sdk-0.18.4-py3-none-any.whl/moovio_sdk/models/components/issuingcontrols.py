"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .issuingvelocitylimit import IssuingVelocityLimit, IssuingVelocityLimitTypedDict
from moovio_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class IssuingControlsTypedDict(TypedDict):
    single_use: NotRequired[bool]
    r"""Indicates if the card is single-use. If true, the card closes after the first authorization."""
    velocity_limits: NotRequired[List[IssuingVelocityLimitTypedDict]]
    r"""Sets the spending limit per time interval. Only one limit per interval is supported."""


class IssuingControls(BaseModel):
    single_use: Annotated[Optional[bool], pydantic.Field(alias="singleUse")] = None
    r"""Indicates if the card is single-use. If true, the card closes after the first authorization."""

    velocity_limits: Annotated[
        Optional[List[IssuingVelocityLimit]], pydantic.Field(alias="velocityLimits")
    ] = None
    r"""Sets the spending limit per time interval. Only one limit per interval is supported."""
