"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from moovio_sdk.models.errors import MoovError
from moovio_sdk.types import BaseModel
from typing import Optional


class RefundValidationErrorData(BaseModel):
    amount: Optional[str] = None

    error: Optional[str] = None
    r"""Used for generic errors when invalid request data isn't attributed to a single request field."""


@dataclass(unsafe_hash=True)
class RefundValidationError(MoovError):
    data: RefundValidationErrorData = field(hash=False)

    def __init__(
        self,
        data: RefundValidationErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
