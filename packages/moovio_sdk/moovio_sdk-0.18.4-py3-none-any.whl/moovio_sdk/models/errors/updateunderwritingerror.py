"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from dataclasses import dataclass, field
import httpx
from moovio_sdk.models.components import (
    cardvolumedistributionerror as components_cardvolumedistributionerror,
    fulfillmentdetailserror as components_fulfillmentdetailserror,
    volumebycustomertypeerror as components_volumebycustomertypeerror,
)
from moovio_sdk.models.errors import MoovError
from moovio_sdk.types import BaseModel
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateUnderwritingErrorErrorTypedDict(TypedDict):
    average_monthly_transaction_volume: NotRequired[str]
    average_transaction_size: NotRequired[str]
    max_transaction_size: NotRequired[str]
    volume_by_customer_type: NotRequired[
        components_volumebycustomertypeerror.VolumeByCustomerTypeErrorTypedDict
    ]
    card_volume_distribution: NotRequired[
        components_cardvolumedistributionerror.CardVolumeDistributionErrorTypedDict
    ]
    fulfillment: NotRequired[
        components_fulfillmentdetailserror.FulfillmentDetailsErrorTypedDict
    ]


class UpdateUnderwritingErrorError(BaseModel):
    average_monthly_transaction_volume: Annotated[
        Optional[str], pydantic.Field(alias="averageMonthlyTransactionVolume")
    ] = None

    average_transaction_size: Annotated[
        Optional[str], pydantic.Field(alias="averageTransactionSize")
    ] = None

    max_transaction_size: Annotated[
        Optional[str], pydantic.Field(alias="maxTransactionSize")
    ] = None

    volume_by_customer_type: Annotated[
        Optional[components_volumebycustomertypeerror.VolumeByCustomerTypeError],
        pydantic.Field(alias="volumeByCustomerType"),
    ] = None

    card_volume_distribution: Annotated[
        Optional[components_cardvolumedistributionerror.CardVolumeDistributionError],
        pydantic.Field(alias="cardVolumeDistribution"),
    ] = None

    fulfillment: Optional[
        components_fulfillmentdetailserror.FulfillmentDetailsError
    ] = None


class UpdateUnderwritingErrorData(BaseModel):
    error: UpdateUnderwritingErrorError


@dataclass(unsafe_hash=True)
class UpdateUnderwritingError(MoovError):
    data: UpdateUnderwritingErrorData = field(hash=False)

    def __init__(
        self,
        data: UpdateUnderwritingErrorData,
        raw_response: httpx.Response,
        body: Optional[str] = None,
    ):
        message = body or raw_response.text
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
