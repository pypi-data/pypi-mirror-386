# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# template for the changelog header
header = """
# Changelog

All notable changes to this project will be documented in this file (from version 13.0.1.1.0 onwards).

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="photovoltaic_api-") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope and commit.scope != 'photovoltaic_api' %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
## [13.0.1.1.8] - 28-09-2023

### Added

- Note on contact when rgpd is accepted

## [13.0.1.1.7] - 24-08-2023

### Fixed

- Missing property in allow promotions method

## [13.0.1.1.6] - 08-08-2023

### Added
- New endpoint to retrieve powerstations open for investment

## [13.0.1.1.5] - 05-06-2023

### Added 
- New endpoint to allow synchronization with mailchimp via mailchimp webhooks


## [13.0.1.1.4] - 29-06-2023

### Fixed
- Promotions policy endpoint to allow both subscription and unsubscription

## [13.0.1.1.3] - 09-06-2023

### Added
- Endpoint to update promotions policy of a contact

### Fixed
- Comparator of vat in login and signup to be case insensitive

## [13.0.1.1.2] - 26-04-2023

### Fixed
- User update process
- Password regex to allow symbols

## [13.0.1.1.1] - 20-04-2023

### Fixed
- Selection of contacts on signup request

## [13.0.1.1.0] - 11-04-2023

### Fixed
- Incorrect retrieval of account allocations
- Count of allocations to use correct search domain
- Naming of company users
- Location of a user
- Allocations shown based on check
- Allocation period calculation
- Firsname and lastname of users with two first names

### Removed
- Email validation on users to allow multiple emails separated by ';'

<!-- generated by git-cliff -->
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
  # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # Replace issue numbers
  #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # Check spelling of the commit with https://github.com/crate-ci/typos
  # If the spelling is incorrect, it will be automatically fixed.
  #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->üöÄ Features" },
  { message = "^fix", group = "<!-- 1 -->üêõ Bug Fixes" },
  { message = "^doc", group = "<!-- 3 -->üìö Documentation" },
  { message = "^perf", group = "<!-- 4 -->‚ö° Performance" },
  { message = "^refactor", group = "<!-- 2 -->üöú Refactor" },
  { message = "^style", group = "<!-- 5 -->üé® Styling" },
  { message = "^test", group = "<!-- 6 -->üß™ Testing" },
  { message = "^chore\\(release\\): prepare for", skip = true },
  { message = "^chore\\(deps.*\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore|^ci", group = "<!-- 7 -->‚öôÔ∏è Miscellaneous Tasks" },
  { body = ".*security", group = "<!-- 8 -->üõ°Ô∏è Security" },
  { message = "^revert", group = "<!-- 9 -->‚óÄÔ∏è Revert" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
