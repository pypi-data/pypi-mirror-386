[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "langchain-mcp-registry"
version = "0.1.2"
description = "Seamlessly integrate MCP Registry servers into your LangChain workflows"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    { name = "Foresee Sira AI Team", email = "dev@foresee.ai" },
]
keywords = [
    "langchain",
    "mcp",
    "model-context-protocol",
    "registry",
    "ai",
    "agents",
    "tools",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "langchain-mcp-adapters>=0.1.0",
    "typer[all]>=0.12.0",
    "rich>=13.0.0",
    "aiofiles>=23.0.0",
    "platformdirs>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.scripts]
mcp-registry = "langchain_mcp_registry.cli:app"

[project.urls]
Homepage = "https://github.com/ChangjunZhao/langchain-mcp-registry"
Repository = "https://github.com/ChangjunZhao/langchain-mcp-registry"
Issues = "https://github.com/ChangjunZhao/langchain-mcp-registry/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/langchain_mcp_registry"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=langchain_mcp_registry",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src/langchain_mcp_registry"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
