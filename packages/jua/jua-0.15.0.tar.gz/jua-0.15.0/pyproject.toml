[project]
name = "jua"
version = "0.15.0"
description = "Easy access to Jua's weather & power services"
authors = [
   {name = "Jua.ai AG", email = "contact@jua.ai"}
]
license = "MIT"
license-files = ["LICENSE"]

readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiohttp>=3.11.18",
    "dask>=2025.4.1",
    "fsspec>=2025.3.2",
    "numcodecs!=0.16.0",
    "pandas>=2.2.3",
    "pyarrow>=21.0.0",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "requests>=2.32.3",
    "rich>=14.1.0",
    "types-requests>=2.32.0.20250328",
    "xarray>=2025.7.0",
    "zarr>=3.1.0",
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta",
]

keywords = [
    "weather",
    "power",
    "energy",
    "trading",
    "forecast",
    "hindcast",
    "weather forecast",
    "energy trading",
]

[project.urls]
Documentation = "https://docs.jua.ai"
Source = "https://github.com/juaAI/jua-python-sdk"

[tool.uv]
package = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
[project.scripts]
jua = "jua.scripts.jua:main"

[project.optional-dependencies]
plotting = [
    "matplotlib>=3.8.0",
]
examples = [
    "ipykernel>=6.29.5",
]
docs = [
    "myst-parser>=4.0.1",
    "sphinx>=8.2.3",
    "sphinx-autoapi>=3.6.0",
    "sphinx-book-theme>=1.1.4",
    "sphinx-markdown-builder>=0.6.8",
]

[dependency-groups]
dev = [
    "commitizen>=4.7.2",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.8",
    "rust-just>=1.40.0",
    "sphinx-autodoc-typehints>=3.2.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "W"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
plugins = ["pydantic.mypy"]
exclude = [
  "/.*",
  "/docs",
  "/tests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/jua"]

[tool.hatch.build]
exclude = [
  "/.*",
  "/docs",
  "/tests",
]

[tool.pytest.ini_options]
pythonpath = ["tests"]
