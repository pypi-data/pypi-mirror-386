####################################################
# neemuds_updf.py configuration file for global scale (can also be used by neemuds_mcmc.py to get mineos parameters).
####################################################
# Mineos parameters
# rhobar is for rho normalization (see Mineos)
rhobar = 3940.0
lmin = 5
lmax = 8000
nmin = 0
nmax = 0
# jcom (wave type) is set dynamically by programs

# Reference model file path to generate bounds of model domain for global scale (Mineos).
# File format is imposed by Mineos.
# The file path might be absolute or relative to the Neemuds directory.
refmod = ~/.ndata/prior/mars/DWThot.tvel
# output files for priors
lo_mod_rayl = ~/.ndata/prior/mod_mars_rayl_lo
hi_mod_rayl = ~/.ndata/prior/mod_mars_rayl_hi
lo_mod_love = ~/.ndata/prior/mod_mars_love_lo
hi_mod_love = ~/.ndata/prior/mod_mars_love_hi

#################################################
# Coefficients below are used by Neemuds to generate HIGH and LOW boundary models based on the reference model set above.
# The coefficients are applied to the reference model lines by a component-wise product (excluding the radius first field of the model line).
# For more details, look the comments after the values.
# Format : [r1;r2,]rho_coef,vpv_coef,vsv_coef,qkappa_coef,qshear_coef,vph_coef,vsh_coef,eta_coef
# (it's allowed to use this syntactic group several times on the same line to set different coefficients based on the radius interval)
# N.B.: When you change these coeffs, the previous files generated in data folder will be overriden by neemuds_updf.py to apply your changes (files: ~/.ndata/prior/mod_mars_*).
# N.B.: coeffs_rayl_lo variable stores the coeffs for the LOW model for Rayleigh wave type. And so on for other variables.
#################################################
coeffs_rayl_lo = .95, .85, .85, 1, 1, .85, .85, 1, 3389500;3289500,.90,.8,.8,1,1,.8,.8,1
coeffs_rayl_hi = 1.05, 1.15, 1.15, 1, 1, 1.15, 1.15, 1, 3389500;3289500,1.1,1.2,1.2,1,1,1.2,1.2,1
coeffs_love_lo = 0.85, 0.75, .75, 1, 1, 0.85, 0.75, 1
coeffs_love_hi = 1.15, 1.25, 1.25, 1, 1, 1.15, 1.25, 1

# You need to set the eight coefficients in the order imposed by Mineos : rho, vpv, vsv, qkappa, qshear, vph, vsh, eta.
# For example, the following coeffs : .95, .85, .85, 1, 1, 1, 1, 1
# will result in the component-wise product : rho*.95, vpv*.85, vsv*.85, qkappa*1, qshear*1, vph*1, vsh*1, eta*1 for each line of the reference model to finally obtain a boundary model with the same number of lines/layers.
# For a subset of radiuses, you can set a specific tuple of coeffs, by prefixing the tuple with two radius bounds in this format lower_radius;higer_radius (in meters).
# For example : 3389500;3289500,.90,.8,.8,1,1,1,1,1
# It means that the trailing coeffs apply to all lines of the model which radius is lower or equal to 3389500 and greater or equal to 32895000.
# Thus, you can combine default coeffs and by-radius-set coeffs.
# Default coeffs are a list of eight coefficients with no leading radius bounds.
# For example : 1.05, 1.15, 1.15, 1, 1, 1, 1, 1, 3389500;3289500,1.1,1.2,1.2,1,1,1,1,1
# It means that for the radiuses between 3389500 and 3289500, the coeffs just on the right will be used. And for all other radiuses the coeffs on the left apply. They are the default coefficients.
# If none default coefficients are specified, they will all be set to 1 outside of the given radius intervals.
# You can set as many radius subset coeffs specifications as you need for one boundary model (just add them on the same line).

