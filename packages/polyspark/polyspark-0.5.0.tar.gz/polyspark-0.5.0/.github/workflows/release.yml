name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Build and Publish Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install -r requirements-dev.txt

    - name: Run tests
      run: pytest --cov=polyspark --cov-fail-under=90

    - name: Run linters
      run: |
        ruff check polyspark tests examples
        black --check polyspark tests examples

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Extract release notes
      id: extract_release_notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract release notes from CHANGELOG.md
        awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '1d;$d' > release_notes.md || echo "Release $VERSION" > release_notes.md

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

    - name: Publish to Test PyPI
      if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: twine upload --repository testpypi dist/*

