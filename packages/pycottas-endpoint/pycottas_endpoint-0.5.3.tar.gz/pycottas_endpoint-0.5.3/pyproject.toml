[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
requires-python = ">=3.8"
name = "pycottas-endpoint"
description = "A package to deploy SPARQL endpoint to serve local COTTAS files, using RDFLib and FastAPI."
readme = "README.md"
license = { file = "LICENSE.txt" }
authors = [
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
    { name = "Julián Arenas-Guerrero", email = "julian.arenas.guerrero@upm.es" },
]
maintainers = [
    { name = "Vincent Emonet", email = "vincent.emonet@gmail.com" },
    { name = "Julián Arenas-Guerrero", email = "julian.arenas.guerrero@upm.es" },
]
keywords = [
    "Python",
    "SPARQL",
    "RDF",
    "COTTAS",
    "endpoint",
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]

dependencies = [
    "rdflib>=6.0.0, <8.0.0",
    "fastapi>=0.51.0, <2.0.0",
    "pycottas>=1.0.0, <2.0.0",
]


[project.scripts]
pycottas-endpoint = "pycottas_endpoint.__main__:cli"


[project.optional-dependencies]
cli = [
    "uvicorn[standard]>=0.12.0",
    "click",
]
web = [
    "uvicorn[standard]>=0.12.0",
]


[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=5.0.0",
    "ruff>=0.11.7",
    "mypy>=1.4.1",
    "pre-commit",
    "requests",
    "httpx",
    "testcontainers",
    "types-PyYAML",
    "types-setuptools",
    "types-ujson",
    "types-click",
]


[project.urls]
Homepage = "https://github.com/arenas-guerrero-julian/pycottas-endpoint"
Documentation = "https://github.com/arenas-guerrero-julian/pycottas-endpoint"
History = "https://github.com/arenas-guerrero-julian/pycottas-endpoint/releases"
Tracker = "https://github.com/arenas-guerrero-julian/pycottas-endpoint/issues"
Source = "https://github.com/arenas-guerrero-julian/pycottas-endpoint"


# ENVIRONMENTS AND SCRIPTS, not used anymore, checkout scripts/ folder
[tool.hatch.envs.default]
installer = "uv"
features = [
    "cli",
    "web",
    "oxigraph",
]
post-install-commands = [
    "pre-commit install",
]


[tool.hatch.envs.default.scripts]
dev = "uvicorn example.main:app --reload {args}"
fmt = [
    "pre-commit run --all --all-files",
    "mypy",
]
test = [
    "fmt",
    "pytest --cov-fail-under=85 {args}",
]
cov = [
    "pytest --cov-report html {args}",
    "python -c 'import webbrowser; webbrowser.open(\"http://0.0.0.0:3000\")'",
    "python -m http.server 3000 --directory ./htmlcov",
]


[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]


# TOOLS
[tool.hatch.build.targets.wheel]
packages = ["src/pycottas_endpoint"]

[tool.hatch.version]
path = "src/pycottas_endpoint/__init__.py"


[tool.coverage.run]
source = ["src/pycottas_endpoint"]
branch = false

[tool.coverage.report]
omit = ["tests/*"]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true


[tool.pytest.ini_options]
addopts = [
    "-vvv",
    "--cov=src",
    "--color=yes",
    "--cov-report=term-missing",
    "--cov-fail-under=85",
]
filterwarnings = [
    "ignore::DeprecationWarning:httpx.*:"
]


[tool.mypy]
files = ["src/"]
strict = true
implicit_reexport = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = false # needed due to _eval() not being typed in rdflib

# https://docs.astral.sh/ruff/rules/
[tool.ruff]
src = ["src", "tests"]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = [
    "I",     # isort
    "N",     # pep8-naming
    "S",     # bandit
    "A",     # flake8-builtins
    "YTT",   # flake8-2020
    "B",     # flake8-bugbear
    "C",     # flake8-comprehensions
    "ICN",   # flake8-import-conventions
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "Q",     # flake8-quotes
    # "FBT",   # flake8-boolean-trap
    "F",     # pyflakes
    "UP",    # pyupgrade
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "PLC",   # pylint convention
    "PLE",   # pylint error
    # "PLR",   # pylint refactor Magic value used in comparison, consider replacing 400 with a constant variable
    "PLW",   # pylint warning
    "RUF",   # ruff specific
    "T",
]

ignore = [
    "B008", # do not perform function calls in argument defaults (required for FastAPI afaik)
    "E501", # line too long
    "C901", # too complex
    "S101", # Use of `assert` detected
    "T201", "T203", # remove print and pprint
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I", "F401"] # module imported but unused
