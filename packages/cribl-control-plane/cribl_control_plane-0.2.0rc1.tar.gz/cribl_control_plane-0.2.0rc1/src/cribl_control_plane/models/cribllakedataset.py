"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .cacheconnection import CacheConnection, CacheConnectionTypedDict
from .lakedatasetsearchconfig import (
    LakeDatasetSearchConfig,
    LakeDatasetSearchConfigTypedDict,
)
from cribl_control_plane import utils
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import validate_open_enum
from enum import Enum
import pydantic
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CriblLakeDatasetFormat(str, Enum, metaclass=utils.OpenEnumMeta):
    JSON = "json"
    DDSS = "ddss"
    PARQUET = "parquet"


class CriblLakeDatasetTypedDict(TypedDict):
    id: str
    accelerated_fields: NotRequired[List[str]]
    bucket_name: NotRequired[str]
    cache_connection: NotRequired[CacheConnectionTypedDict]
    deletion_started_at: NotRequired[float]
    description: NotRequired[str]
    format_: NotRequired[CriblLakeDatasetFormat]
    http_da_used: NotRequired[bool]
    retention_period_in_days: NotRequired[float]
    search_config: NotRequired[LakeDatasetSearchConfigTypedDict]
    storage_location_id: NotRequired[str]
    view_name: NotRequired[str]


class CriblLakeDataset(BaseModel):
    id: str

    accelerated_fields: Annotated[
        Optional[List[str]], pydantic.Field(alias="acceleratedFields")
    ] = None

    bucket_name: Annotated[Optional[str], pydantic.Field(alias="bucketName")] = None

    cache_connection: Annotated[
        Optional[CacheConnection], pydantic.Field(alias="cacheConnection")
    ] = None

    deletion_started_at: Annotated[
        Optional[float], pydantic.Field(alias="deletionStartedAt")
    ] = None

    description: Optional[str] = None

    format_: Annotated[
        Annotated[
            Optional[CriblLakeDatasetFormat], PlainValidator(validate_open_enum(False))
        ],
        pydantic.Field(alias="format"),
    ] = None

    http_da_used: Annotated[Optional[bool], pydantic.Field(alias="httpDAUsed")] = None

    retention_period_in_days: Annotated[
        Optional[float], pydantic.Field(alias="retentionPeriodInDays")
    ] = None

    search_config: Annotated[
        Optional[LakeDatasetSearchConfig], pydantic.Field(alias="searchConfig")
    ] = None

    storage_location_id: Annotated[
        Optional[str], pydantic.Field(alias="storageLocationId")
    ] = None

    view_name: Annotated[Optional[str], pydantic.Field(alias="viewName")] = None
