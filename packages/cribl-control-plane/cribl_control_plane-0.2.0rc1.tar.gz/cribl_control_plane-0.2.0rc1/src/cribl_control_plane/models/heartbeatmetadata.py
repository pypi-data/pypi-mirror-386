"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class HeartbeatMetadataTagsTypedDict(TypedDict):
    pass


class HeartbeatMetadataTags(BaseModel):
    pass


class HeartbeatMetadataAwsTypedDict(TypedDict):
    enabled: bool
    region: str
    type: str
    zone: str
    tags: NotRequired[HeartbeatMetadataTagsTypedDict]


class HeartbeatMetadataAws(BaseModel):
    enabled: bool

    region: str

    type: str

    zone: str

    tags: Optional[HeartbeatMetadataTags] = None


class HeartbeatMetadataHostOsTypedDict(TypedDict):
    addresses: List[str]
    enabled: bool
    id: str
    version: str


class HeartbeatMetadataHostOs(BaseModel):
    addresses: List[str]

    enabled: bool

    id: str

    version: str


class HeartbeatMetadataOwnerTypedDict(TypedDict):
    kind: str
    name: str


class HeartbeatMetadataOwner(BaseModel):
    kind: str

    name: str


class HeartbeatMetadataKubeTypedDict(TypedDict):
    enabled: bool
    namespace: str
    node: str
    pod: str
    source: str
    owner: NotRequired[HeartbeatMetadataOwnerTypedDict]


class HeartbeatMetadataKube(BaseModel):
    enabled: bool

    namespace: str

    node: str

    pod: str

    source: str

    owner: Optional[HeartbeatMetadataOwner] = None


class HeartbeatMetadataOsTypedDict(TypedDict):
    addresses: List[str]
    enabled: bool
    id: str
    version: str


class HeartbeatMetadataOs(BaseModel):
    addresses: List[str]

    enabled: bool

    id: str

    version: str


class HeartbeatMetadataTypedDict(TypedDict):
    aws: NotRequired[HeartbeatMetadataAwsTypedDict]
    host_os: NotRequired[HeartbeatMetadataHostOsTypedDict]
    kube: NotRequired[HeartbeatMetadataKubeTypedDict]
    os: NotRequired[HeartbeatMetadataOsTypedDict]


class HeartbeatMetadata(BaseModel):
    aws: Optional[HeartbeatMetadataAws] = None

    host_os: Annotated[
        Optional[HeartbeatMetadataHostOs], pydantic.Field(alias="hostOs")
    ] = None

    kube: Optional[HeartbeatMetadataKube] = None

    os: Optional[HeartbeatMetadataOs] = None
