"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .gitdiffresult import GitDiffResult, GitDiffResultTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, QueryParamMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetVersionDiffRequestTypedDict(TypedDict):
    commit: NotRequired[str]
    r"""The Git commit hash to get the diff for."""
    group_id: NotRequired[str]
    r"""The <code>id</code> of the Worker Group or Edge Fleet to get the diff for."""
    filename: NotRequired[str]
    r"""The relative path of the file to get the diff for."""
    diff_line_limit: NotRequired[float]
    r"""Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines."""


class GetVersionDiffRequest(BaseModel):
    commit: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The Git commit hash to get the diff for."""

    group_id: Annotated[
        Optional[str],
        pydantic.Field(alias="groupId"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The <code>id</code> of the Worker Group or Edge Fleet to get the diff for."""

    filename: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The relative path of the file to get the diff for."""

    diff_line_limit: Annotated[
        Optional[float],
        pydantic.Field(alias="diffLineLimit"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""Number of lines of the diff to return. Default is 1000. Set to <code>0</code> to return the full diff, regardless of the number of lines."""


class GetVersionDiffResponseTypedDict(TypedDict):
    r"""a list of GitDiffResult objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[GitDiffResultTypedDict]]


class GetVersionDiffResponse(BaseModel):
    r"""a list of GitDiffResult objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[GitDiffResult]] = None
