"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class OutputSnmpType(str, Enum):
    SNMP = "snmp"


class OutputSnmpHostTypedDict(TypedDict):
    host: str
    r"""Destination host"""
    port: NotRequired[float]
    r"""Destination port, default is 162"""


class OutputSnmpHost(BaseModel):
    host: str
    r"""Destination host"""

    port: Optional[float] = 162
    r"""Destination port, default is 162"""


class OutputSnmpTypedDict(TypedDict):
    type: OutputSnmpType
    hosts: List[OutputSnmpHostTypedDict]
    r"""One or more SNMP destinations to forward traps to"""
    id: NotRequired[str]
    r"""Unique ID for this output"""
    pipeline: NotRequired[str]
    r"""Pipeline to process data before sending out to this output"""
    system_fields: NotRequired[List[str]]
    r"""Fields to automatically add to events, such as cribl_pipe. Supports wildcards."""
    environment: NotRequired[str]
    r"""Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere."""
    streamtags: NotRequired[List[str]]
    r"""Tags for filtering and grouping in @{product}"""
    dns_resolve_period_sec: NotRequired[float]
    r"""How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every trap sent will incur a DNS lookup."""
    description: NotRequired[str]


class OutputSnmp(BaseModel):
    type: OutputSnmpType

    hosts: List[OutputSnmpHost]
    r"""One or more SNMP destinations to forward traps to"""

    id: Optional[str] = None
    r"""Unique ID for this output"""

    pipeline: Optional[str] = None
    r"""Pipeline to process data before sending out to this output"""

    system_fields: Annotated[
        Optional[List[str]], pydantic.Field(alias="systemFields")
    ] = None
    r"""Fields to automatically add to events, such as cribl_pipe. Supports wildcards."""

    environment: Optional[str] = None
    r"""Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere."""

    streamtags: Optional[List[str]] = None
    r"""Tags for filtering and grouping in @{product}"""

    dns_resolve_period_sec: Annotated[
        Optional[float], pydantic.Field(alias="dnsResolvePeriodSec")
    ] = 0
    r"""How often to resolve the destination hostname to an IP address. Ignored if all destinations are IP addresses. A value of 0 means every trap sent will incur a DNS lookup."""

    description: Optional[str] = None
