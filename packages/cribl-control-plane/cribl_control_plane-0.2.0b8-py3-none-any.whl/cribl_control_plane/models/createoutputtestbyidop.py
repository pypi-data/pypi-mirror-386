"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .outputtestrequest import OutputTestRequest, OutputTestRequestTypedDict
from .outputtestresponse import OutputTestResponse, OutputTestResponseTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, PathParamMetadata, RequestMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateOutputTestByIDRequestTypedDict(TypedDict):
    id: str
    r"""The <code>id</code> of the Destination to send sample event data to."""
    output_test_request: OutputTestRequestTypedDict
    r"""OutputTestRequest object"""


class CreateOutputTestByIDRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The <code>id</code> of the Destination to send sample event data to."""

    output_test_request: Annotated[
        OutputTestRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""OutputTestRequest object"""


class CreateOutputTestByIDResponseTypedDict(TypedDict):
    r"""a list of OutputTestResponse objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[OutputTestResponseTypedDict]]


class CreateOutputTestByIDResponse(BaseModel):
    r"""a list of OutputTestResponse objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[OutputTestResponse]] = None
