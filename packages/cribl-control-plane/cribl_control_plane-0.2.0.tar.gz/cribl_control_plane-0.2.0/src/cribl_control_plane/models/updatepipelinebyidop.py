"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .pipeline import Pipeline, PipelineTypedDict
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import FieldMetadata, PathParamMetadata, RequestMetadata
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdatePipelineByIDRequestTypedDict(TypedDict):
    id_param: str
    r"""The <code>id</code> of the Pipeline to update."""
    pipeline: PipelineTypedDict
    r"""Pipeline object"""


class UpdatePipelineByIDRequest(BaseModel):
    id_param: Annotated[
        str,
        pydantic.Field(alias="id"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The <code>id</code> of the Pipeline to update."""

    pipeline: Annotated[
        Pipeline, FieldMetadata(request=RequestMetadata(media_type="application/json"))
    ]
    r"""Pipeline object"""


class UpdatePipelineByIDResponseTypedDict(TypedDict):
    r"""a list of Pipeline objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[PipelineTypedDict]]


class UpdatePipelineByIDResponse(BaseModel):
    r"""a list of Pipeline objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[Pipeline]] = None
