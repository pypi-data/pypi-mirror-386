"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
import pydantic
from typing_extensions import Annotated, TypedDict


class DistributedSummaryGroupsTypedDict(TypedDict):
    count: float
    destinations: float
    pipelines: float
    routes: float
    sources: float


class DistributedSummaryGroups(BaseModel):
    count: float

    destinations: float

    pipelines: float

    routes: float

    sources: float


class DistributedSummaryWorkersTypedDict(TypedDict):
    alive: float
    conf_versions: float
    count: float
    disconnected_count: float
    groups: float
    software_versions: float
    unhealthy: float


class DistributedSummaryWorkers(BaseModel):
    alive: float

    conf_versions: Annotated[float, pydantic.Field(alias="confVersions")]

    count: float

    disconnected_count: Annotated[float, pydantic.Field(alias="disconnectedCount")]

    groups: float

    software_versions: Annotated[float, pydantic.Field(alias="softwareVersions")]

    unhealthy: float


class DistributedSummaryTypedDict(TypedDict):
    groups: DistributedSummaryGroupsTypedDict
    workers: DistributedSummaryWorkersTypedDict


class DistributedSummary(BaseModel):
    groups: DistributedSummaryGroups

    workers: DistributedSummaryWorkers
