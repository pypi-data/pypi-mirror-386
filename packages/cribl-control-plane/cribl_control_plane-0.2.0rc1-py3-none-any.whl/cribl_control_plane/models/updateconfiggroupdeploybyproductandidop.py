"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .configgroup import ConfigGroup, ConfigGroupTypedDict
from .deployrequest import DeployRequest, DeployRequestTypedDict
from .productscore import ProductsCore
from cribl_control_plane.types import BaseModel
from cribl_control_plane.utils import (
    FieldMetadata,
    PathParamMetadata,
    RequestMetadata,
    validate_open_enum,
)
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateConfigGroupDeployByProductAndIDRequestTypedDict(TypedDict):
    product: ProductsCore
    r"""Name of the Cribl product to get the Worker Groups or Edge Fleets for."""
    id: str
    r"""The <code>id</code> of the target Worker Group or Edge Fleet for commit deployment."""
    deploy_request: DeployRequestTypedDict
    r"""DeployRequest object"""


class UpdateConfigGroupDeployByProductAndIDRequest(BaseModel):
    product: Annotated[
        Annotated[ProductsCore, PlainValidator(validate_open_enum(False))],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Name of the Cribl product to get the Worker Groups or Edge Fleets for."""

    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The <code>id</code> of the target Worker Group or Edge Fleet for commit deployment."""

    deploy_request: Annotated[
        DeployRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""DeployRequest object"""


class UpdateConfigGroupDeployByProductAndIDResponseTypedDict(TypedDict):
    r"""a list of ConfigGroup objects"""

    count: NotRequired[int]
    r"""number of items present in the items array"""
    items: NotRequired[List[ConfigGroupTypedDict]]


class UpdateConfigGroupDeployByProductAndIDResponse(BaseModel):
    r"""a list of ConfigGroup objects"""

    count: Optional[int] = None
    r"""number of items present in the items array"""

    items: Optional[List[ConfigGroup]] = None
