"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
from enum import Enum
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class OutputRouterType(str, Enum):
    ROUTER = "router"


class OutputRouterRuleTypedDict(TypedDict):
    filter_: str
    r"""JavaScript expression to select events to send to output"""
    output: str
    r"""Output to send matching events to"""
    description: NotRequired[str]
    r"""Description of this rule's purpose"""
    final: NotRequired[bool]
    r"""Flag to control whether to stop the event from being checked against other rules"""


class OutputRouterRule(BaseModel):
    filter_: Annotated[str, pydantic.Field(alias="filter")]
    r"""JavaScript expression to select events to send to output"""

    output: str
    r"""Output to send matching events to"""

    description: Optional[str] = None
    r"""Description of this rule's purpose"""

    final: Optional[bool] = True
    r"""Flag to control whether to stop the event from being checked against other rules"""


class OutputRouterTypedDict(TypedDict):
    type: OutputRouterType
    rules: List[OutputRouterRuleTypedDict]
    r"""Event routing rules"""
    id: NotRequired[str]
    r"""Unique ID for this output"""
    pipeline: NotRequired[str]
    r"""Pipeline to process data before sending out to this output"""
    system_fields: NotRequired[List[str]]
    r"""Fields to automatically add to events, such as cribl_pipe. Supports wildcards."""
    environment: NotRequired[str]
    r"""Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere."""
    streamtags: NotRequired[List[str]]
    r"""Tags for filtering and grouping in @{product}"""
    description: NotRequired[str]


class OutputRouter(BaseModel):
    type: OutputRouterType

    rules: List[OutputRouterRule]
    r"""Event routing rules"""

    id: Optional[str] = None
    r"""Unique ID for this output"""

    pipeline: Optional[str] = None
    r"""Pipeline to process data before sending out to this output"""

    system_fields: Annotated[
        Optional[List[str]], pydantic.Field(alias="systemFields")
    ] = None
    r"""Fields to automatically add to events, such as cribl_pipe. Supports wildcards."""

    environment: Optional[str] = None
    r"""Optionally, enable this config only on a specified Git branch. If empty, will be enabled everywhere."""

    streamtags: Optional[List[str]] = None
    r"""Tags for filtering and grouping in @{product}"""

    description: Optional[str] = None
