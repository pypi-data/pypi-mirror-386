"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.errors import CriblControlPlaneError
from cribl_control_plane.types import BaseModel
from dataclasses import dataclass, field
import httpx
from typing import Optional


class ErrorData(BaseModel):
    message: Optional[str] = None
    r"""Error message"""


@dataclass(unsafe_hash=True)
class Error(CriblControlPlaneError):
    data: ErrorData = field(hash=False)

    def __init__(
        self, data: ErrorData, raw_response: httpx.Response, body: Optional[str] = None
    ):
        fallback = body or raw_response.text
        message = str(data.message) or fallback
        super().__init__(message, raw_response, body)
        object.__setattr__(self, "data", data)
