"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from cribl_control_plane.types import BaseModel
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RouteConfTypedDict(TypedDict):
    final: bool
    id: str
    name: str
    pipeline: str
    clones: NotRequired[List[Dict[str, str]]]
    context: NotRequired[str]
    description: NotRequired[str]
    disabled: NotRequired[bool]
    enable_output_expression: NotRequired[bool]
    filter_: NotRequired[str]
    group_id: NotRequired[str]
    output: NotRequired[str]
    output_expression: NotRequired[str]


class RouteConf(BaseModel):
    final: bool

    id: str

    name: str

    pipeline: str

    clones: Optional[List[Dict[str, str]]] = None

    context: Optional[str] = None

    description: Optional[str] = None

    disabled: Optional[bool] = None

    enable_output_expression: Annotated[
        Optional[bool], pydantic.Field(alias="enableOutputExpression")
    ] = None

    filter_: Annotated[Optional[str], pydantic.Field(alias="filter")] = None

    group_id: Annotated[Optional[str], pydantic.Field(alias="groupId")] = None

    output: Optional[str] = None

    output_expression: Annotated[
        Optional[str], pydantic.Field(alias="outputExpression")
    ] = None
