name: Update uv Dependencies

on:
  schedule:
    - cron: '0 6 * * *'    # Runs daily at 6 AM UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-uv:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Fetch latest uv tag
        id: get_tag
        run: |
          latest_tag=$(git ls-remote --tags --refs https://github.com/astral-sh/uv.git | awk -F/ '{print $NF}' | sort -V | tail -n1)
          # Remove any leading 'v'
          version=$(echo "$latest_tag" | sed 's/^v//')         
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get current uv version from pyproject.toml
        id: current_py_uv
        run: |
          current_version=$(grep -oP 'uv==\K[0-9\.]+' pyproject.toml | head -n 1)
          echo "current=$current_version" >> $GITHUB_OUTPUT

      - name: Check if update is needed
        id: check_update
        run: |
          if [ "${{ steps.get_tag.outputs.version }}" = "${{ steps.current_py_uv.outputs.current }}" ]; then
            echo "No update needed."
            echo "update_needed=false" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Update needed: ${{ steps.get_tag.outputs.version }}"
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update Cargo.toml uv* dependencies
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          latest_tag="${{ steps.get_tag.outputs.tag }}"
          # For each uv* dependency, update its tag in Cargo.toml
          sed -i 's/\(uv\(-[a-z0-9]\+\)*\s*=\s*{[^}]*tag\s*=\s*"\)[^"]*\(".*\)/\1'"$latest_tag"'\3/' Cargo.toml

      - name: Update uv in pyproject.toml
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          latest_version="${{ steps.get_tag.outputs.version }}"
          # Update uv==... line in pyproject.toml
          sed -i -E 's/(uv==)[0-9\.]+/\1'"$latest_version"'/g' pyproject.toml

      - name: Set up Rust
        if: steps.check_update.outputs.update_needed == 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        if: steps.check_update.outputs.update_needed == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo
          restore-keys: |
            ${{ runner.os }}-cargo

      - name: Run cargo check
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          cargo update
          cargo check

      - name: Create Pull Request
        if: steps.check_update.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: update uv dependencies to ${{ steps.get_tag.outputs.version }}"
          branch: "update/uv-${{ steps.get_tag.outputs.version }}"
          title: "chore: update uv dependencies to ${{ steps.get_tag.outputs.version }}"
          body: |
            This PR updates all uv* dependencies in Cargo.toml and the uv version in pyproject.toml to ${{ steps.get_tag.outputs.version }}.
          delete-branch: true