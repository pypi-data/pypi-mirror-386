[project]
name = "langchain-azure-ai"
version = "1.0.1"
description = "An integration package to support Azure AI Foundry capabilities in LangChain/LangGraph ecosystem."
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.10.0,<4.0"

dependencies = [
  "aiohttp~=3.10",
  "azure-ai-agents~=1.2.0b3",
  "azure-ai-inference[opentelemetry]>=1.0.0b9,<2.0",
  "azure-ai-projects~=1.0",
  "azure-core~=1.32",
  "azure-cosmos>=4.14.0b1,<5.0",
  "azure-identity~=1.15",
  "azure-search-documents~=11.4",
  "langchain>=1.0.0,<2.0.0",
  "langchain-openai>=1.0.0,<2.0.0",
  "numpy>=1.26.2; python_version < '3.13'",
  "numpy>=2.1.0; python_version >= '3.13'",
  "six (>=1.17.0,<2.0.0)",
]

[project.optional-dependencies]
opentelemetry = [
  "azure-monitor-opentelemetry~=1.6",
  "opentelemetry-api>=1.37",
  "opentelemetry-instrumentation>=0.58b0",
  "opentelemetry-instrumentation-threading>=0.58b0",
  "opentelemetry-semantic-conventions>=0.58b0",
  "opentelemetry-semantic-conventions-ai~=0.4.2",
]
tools = [
  "azure-ai-documentintelligence (>=1.0.2,<2.0.0)",
  "azure-ai-textanalytics (>=5.3.0,<6.0.0)",
  "azure-ai-vision-imageanalysis (>=1.0.0,<2.0.0)",
  "azure-mgmt-logic (>=10.0.0,<11.0.0)",
]

[project.urls]
repository = "https://github.com/langchain-ai/langchain-azure"
"Source Code" = "https://github.com/langchain-ai/langchain-azure/tree/main/libs/azure-ai"
"Release Notes" = "https://github.com/langchain-ai/langchain-azure/releases"

[build-system]
requires = ["poetry-core~=2.0"]
build-backend = "poetry.core.masonry.api"

[tool.codespell]
ignore-words-list = "nin"

[tool.coverage.run]
omit = ["tests/*"]

[tool.mypy]
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
  "pytest_socket",
  "opentelemetry.instrumentation.threading",
  "opentelemetry.instrumentation.utils",
  "azure.monitor.opentelemetry",
]
ignore_missing_imports = true

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.codespell.dependencies]
codespell = "~=2.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ipykernel = "~=6.29"
langchain = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/langchain_v1" }
langchain-core = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/core" }

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
pydocstyle = "~=6.3"
pymongo = "~=4.5"
pytest = "~=7.4"
python-dotenv = "~=1.0"
ruff = "~=0.5.0"
simsimd = "~=6.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
azure-monitor-opentelemetry = "~=1.6"
opentelemetry-api = ">=1.37"
opentelemetry-instrumentation = ">=0.58b0"
opentelemetry-instrumentation-threading = ">=0.58b0"
opentelemetry-semantic-conventions = ">=0.58b0"
opentelemetry-semantic-conventions-ai = "~=0.4.2"
langchain-core = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/core" }
pydantic = "~=2.9"
pytest = "~=7.4"
pytest-asyncio = "~=0.21.1"
pytest-mock = "~=3.10"
pytest-socket = "~=0.6.0"
pytest-watcher = "~=0.3.4"
python-dotenv = "~=1.0"
syrupy = "~=4.7"

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.test_integration.dependencies]
pytest = "~=7.4"
python-dotenv = "~=1.0"

[tool.poetry.group.typing.dependencies]
mypy = "~=1.10"
types-requests = "~=2.28"

[tool.pytest.ini_options]
addopts = ["--durations=5", "--strict-config", "--strict-markers"]
markers = [
  "compile: mark placeholder test used to compile integration tests without running them",
  "requires: mark tests as requiring a specific library",
]
asyncio_mode = "auto"

[tool.ruff.lint]
select = ["E", "F", "I", "D"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv]
default-groups = ["typing"]

[dependency-groups]
codespell = ["codespell~=2.2"]
dev = ["ipykernel~=6.29", "langchain", "langchain-core"]
lint = [
  "pydocstyle~=6.3",
  "pymongo~=4.5",
  "pytest~=7.4",
  "python-dotenv~=1.0",
  "ruff~=0.5.0",
  "simsimd~=6.0",
]
test = [
  "azure-monitor-opentelemetry~=1.6",
  "opentelemetry-api>=1.37",
  "opentelemetry-instrumentation>=0.58b0",
  "opentelemetry-instrumentation-threading>=0.58b0",
  "opentelemetry-semantic-conventions>=0.58b0",
  "opentelemetry-semantic-conventions-ai~=0.4.2",
  "langchain-core",
  "pydantic~=2.9",
  "pytest~=7.4",
  "pytest-asyncio~=0.21.1",
  "pytest-mock~=3.10",
  "pytest-socket~=0.6.0",
  "pytest-watcher~=0.3.4",
  "python-dotenv~=1.0",
  "syrupy~=4.7",
]
test_integration = ["pytest~=7.4", "python-dotenv~=1.0"]
typing = ["mypy~=1.10", "types-requests~=2.28"]

[tool.uv.sources]
langchain = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/langchain_v1" }
langchain-core = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/core" }
