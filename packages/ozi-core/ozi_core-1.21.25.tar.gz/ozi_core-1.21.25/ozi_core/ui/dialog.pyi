"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from typing import Any
from typing import Sequence
from typing import TypeVar

from prompt_toolkit import Application
from prompt_toolkit.completion import Completer
from prompt_toolkit.filters import FilterOrBool
from prompt_toolkit.formatted_text import AnyFormattedText
from prompt_toolkit.styles import BaseStyle
from prompt_toolkit.validation import Validator
from prompt_toolkit.widgets import RadioList

if TYPE_CHECKING:
    ...
_T = TypeVar('_T')
class Admonition(RadioList[_T]):
    """Simple scrolling text dialog."""
    open_character = ''
    close_character = ''
    container_style = 'class:admonition-list'
    default_style = 'class:admonition'
    selected_style = 'class:admonition-selected'
    checked_style = 'class:admonition-checked'
    multiple_selection = False
    def __init__(self, values: Sequence[tuple[_T, Any]], default: _T | None = ...) -> None:
        ...



def admonition_dialog(title: str = ..., text: str = ..., heading_label: str = ..., ok_text: str | None = ..., cancel_text: str | None = ..., style: BaseStyle | None = ...) -> Application[list[Any]]:
    """Admonition dialog shortcut.
    The focus can be moved between the list and the Ok/Cancel button with tab.
    """

def input_dialog(title: AnyFormattedText = ..., text: AnyFormattedText = ..., ok_text: str | None = ..., cancel_text: str | None = ..., completer: Completer | None = ..., validator: Validator | None = ..., password: FilterOrBool = ..., style: BaseStyle | None = ..., multiline: bool = ..., default: str = ...) -> Application[str]:
    """
    Display a text input box.
    Return the given text, or None when cancelled.
    """

