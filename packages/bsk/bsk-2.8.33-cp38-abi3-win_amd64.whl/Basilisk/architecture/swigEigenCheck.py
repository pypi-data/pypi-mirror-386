# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _swigEigenCheck
else:
    import _swigEigenCheck

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _swigEigenCheck.delete_SwigPyIterator

    def value(self):
        return _swigEigenCheck.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _swigEigenCheck.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _swigEigenCheck.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _swigEigenCheck.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _swigEigenCheck.SwigPyIterator_equal(self, x)

    def copy(self):
        return _swigEigenCheck.SwigPyIterator_copy(self)

    def next(self):
        return _swigEigenCheck.SwigPyIterator_next(self)

    def __next__(self):
        return _swigEigenCheck.SwigPyIterator___next__(self)

    def previous(self):
        return _swigEigenCheck.SwigPyIterator_previous(self)

    def advance(self, n):
        return _swigEigenCheck.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _swigEigenCheck.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _swigEigenCheck.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _swigEigenCheck.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _swigEigenCheck.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _swigEigenCheck.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _swigEigenCheck.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _swigEigenCheck:
_swigEigenCheck.SwigPyIterator_swigregister(SwigPyIterator)
class IntVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _swigEigenCheck.IntVector_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _swigEigenCheck.IntVector___nonzero__(self)

    def __bool__(self):
        return _swigEigenCheck.IntVector___bool__(self)

    def __len__(self):
        return _swigEigenCheck.IntVector___len__(self)

    def __getslice__(self, i, j):
        return _swigEigenCheck.IntVector___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _swigEigenCheck.IntVector___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _swigEigenCheck.IntVector___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _swigEigenCheck.IntVector___delitem__(self, *args)

    def __getitem__(self, *args):
        return _swigEigenCheck.IntVector___getitem__(self, *args)

    def __setitem__(self, *args):
        return _swigEigenCheck.IntVector___setitem__(self, *args)

    def pop(self):
        return _swigEigenCheck.IntVector_pop(self)

    def append(self, x):
        return _swigEigenCheck.IntVector_append(self, x)

    def empty(self):
        return _swigEigenCheck.IntVector_empty(self)

    def size(self):
        return _swigEigenCheck.IntVector_size(self)

    def swap(self, v):
        return _swigEigenCheck.IntVector_swap(self, v)

    def begin(self):
        return _swigEigenCheck.IntVector_begin(self)

    def end(self):
        return _swigEigenCheck.IntVector_end(self)

    def rbegin(self):
        return _swigEigenCheck.IntVector_rbegin(self)

    def rend(self):
        return _swigEigenCheck.IntVector_rend(self)

    def clear(self):
        return _swigEigenCheck.IntVector_clear(self)

    def get_allocator(self):
        return _swigEigenCheck.IntVector_get_allocator(self)

    def pop_back(self):
        return _swigEigenCheck.IntVector_pop_back(self)

    def erase(self, *args):
        return _swigEigenCheck.IntVector_erase(self, *args)

    def __init__(self, *args):
        _swigEigenCheck.IntVector_swiginit(self, _swigEigenCheck.new_IntVector(*args))

    def push_back(self, x):
        return _swigEigenCheck.IntVector_push_back(self, x)

    def front(self):
        return _swigEigenCheck.IntVector_front(self)

    def back(self):
        return _swigEigenCheck.IntVector_back(self)

    def assign(self, n, x):
        return _swigEigenCheck.IntVector_assign(self, n, x)

    def resize(self, *args):
        return _swigEigenCheck.IntVector_resize(self, *args)

    def insert(self, *args):
        return _swigEigenCheck.IntVector_insert(self, *args)

    def reserve(self, n):
        return _swigEigenCheck.IntVector_reserve(self, n)

    def capacity(self):
        return _swigEigenCheck.IntVector_capacity(self)
    __swig_destroy__ = _swigEigenCheck.delete_IntVector

# Register IntVector in _swigEigenCheck:
_swigEigenCheck.IntVector_swigregister(IntVector)
class IntArray3(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        return _swigEigenCheck.IntArray3_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _swigEigenCheck.IntArray3___nonzero__(self)

    def __bool__(self):
        return _swigEigenCheck.IntArray3___bool__(self)

    def __len__(self):
        return _swigEigenCheck.IntArray3___len__(self)

    def __getslice__(self, i, j):
        return _swigEigenCheck.IntArray3___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _swigEigenCheck.IntArray3___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _swigEigenCheck.IntArray3___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _swigEigenCheck.IntArray3___delitem__(self, *args)

    def __getitem__(self, *args):
        return _swigEigenCheck.IntArray3___getitem__(self, *args)

    def __setitem__(self, *args):
        return _swigEigenCheck.IntArray3___setitem__(self, *args)

    def __init__(self, *args):
        _swigEigenCheck.IntArray3_swiginit(self, _swigEigenCheck.new_IntArray3(*args))

    def empty(self):
        return _swigEigenCheck.IntArray3_empty(self)

    def size(self):
        return _swigEigenCheck.IntArray3_size(self)

    def swap(self, v):
        return _swigEigenCheck.IntArray3_swap(self, v)

    def begin(self):
        return _swigEigenCheck.IntArray3_begin(self)

    def end(self):
        return _swigEigenCheck.IntArray3_end(self)

    def rbegin(self):
        return _swigEigenCheck.IntArray3_rbegin(self)

    def rend(self):
        return _swigEigenCheck.IntArray3_rend(self)

    def front(self):
        return _swigEigenCheck.IntArray3_front(self)

    def back(self):
        return _swigEigenCheck.IntArray3_back(self)

    def fill(self, u):
        return _swigEigenCheck.IntArray3_fill(self, u)
    __swig_destroy__ = _swigEigenCheck.delete_IntArray3

# Register IntArray3 in _swigEigenCheck:
_swigEigenCheck.IntArray3_swigregister(IntArray3)
class SwigEigenTestClass(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    vector3i = property(_swigEigenCheck.SwigEigenTestClass_vector3i_get, _swigEigenCheck.SwigEigenTestClass_vector3i_set)
    vector3d = property(_swigEigenCheck.SwigEigenTestClass_vector3d_get, _swigEigenCheck.SwigEigenTestClass_vector3d_set)
    matrix3d = property(_swigEigenCheck.SwigEigenTestClass_matrix3d_get, _swigEigenCheck.SwigEigenTestClass_matrix3d_set)
    matrixX3i = property(_swigEigenCheck.SwigEigenTestClass_matrixX3i_get, _swigEigenCheck.SwigEigenTestClass_matrixX3i_set)
    vectorXi = property(_swigEigenCheck.SwigEigenTestClass_vectorXi_get, _swigEigenCheck.SwigEigenTestClass_vectorXi_set)
    vectorXd = property(_swigEigenCheck.SwigEigenTestClass_vectorXd_get, _swigEigenCheck.SwigEigenTestClass_vectorXd_set)
    matrixX3d = property(_swigEigenCheck.SwigEigenTestClass_matrixX3d_get, _swigEigenCheck.SwigEigenTestClass_matrixX3d_set)
    matrixXi = property(_swigEigenCheck.SwigEigenTestClass_matrixXi_get, _swigEigenCheck.SwigEigenTestClass_matrixXi_set)
    matrixXd = property(_swigEigenCheck.SwigEigenTestClass_matrixXd_get, _swigEigenCheck.SwigEigenTestClass_matrixXd_set)
    mrpd = property(_swigEigenCheck.SwigEigenTestClass_mrpd_get, _swigEigenCheck.SwigEigenTestClass_mrpd_set)
    quaterniond = property(_swigEigenCheck.SwigEigenTestClass_quaterniond_get, _swigEigenCheck.SwigEigenTestClass_quaterniond_set)

    def testArrayPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testArrayPrecedence(self, *args)

    def testVector3iPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testVector3iPrecedence(self, *args)

    def testVector3dPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testVector3dPrecedence(self, *args)

    def testStdVectorPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testStdVectorPrecedence(self, *args)

    def testVectorXiPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testVectorXiPrecedence(self, *args)

    def testVectorXdPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testVectorXdPrecedence(self, *args)

    def testMatrixXiPrecedence(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_testMatrixXiPrecedence(self, *args)

    def returnVector3dPointer(self, returnNull):
        return _swigEigenCheck.SwigEigenTestClass_returnVector3dPointer(self, returnNull)

    def qualifierTestvector3iValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3iValue(self, *args)

    def qualifierTestvector3iConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3iConstRef(self, *args)

    def qualifierTestvector3iConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3iConst(self, *args)

    def qualifierTestvector3iRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3iRef(self, *args)

    def qualifierTestvector3iRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3iRvalue(self, *args)

    def qualifierTestvector3dValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3dValue(self, *args)

    def qualifierTestvector3dConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3dConstRef(self, *args)

    def qualifierTestvector3dConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3dConst(self, *args)

    def qualifierTestvector3dRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3dRef(self, *args)

    def qualifierTestvector3dRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvector3dRvalue(self, *args)

    def qualifierTestmatrix3dValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrix3dValue(self, *args)

    def qualifierTestmatrix3dConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrix3dConstRef(self, *args)

    def qualifierTestmatrix3dConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrix3dConst(self, *args)

    def qualifierTestmatrix3dRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrix3dRef(self, *args)

    def qualifierTestmatrix3dRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrix3dRvalue(self, *args)

    def qualifierTestmatrixX3iValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3iValue(self, *args)

    def qualifierTestmatrixX3iConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3iConstRef(self, *args)

    def qualifierTestmatrixX3iConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3iConst(self, *args)

    def qualifierTestmatrixX3iRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3iRef(self, *args)

    def qualifierTestmatrixX3iRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3iRvalue(self, *args)

    def qualifierTestvectorXiValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXiValue(self, *args)

    def qualifierTestvectorXiConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXiConstRef(self, *args)

    def qualifierTestvectorXiConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXiConst(self, *args)

    def qualifierTestvectorXiRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXiRef(self, *args)

    def qualifierTestvectorXiRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXiRvalue(self, *args)

    def qualifierTestvectorXdValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXdValue(self, *args)

    def qualifierTestvectorXdConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXdConstRef(self, *args)

    def qualifierTestvectorXdConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXdConst(self, *args)

    def qualifierTestvectorXdRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXdRef(self, *args)

    def qualifierTestvectorXdRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestvectorXdRvalue(self, *args)

    def qualifierTestmatrixX3dValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3dValue(self, *args)

    def qualifierTestmatrixX3dConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3dConstRef(self, *args)

    def qualifierTestmatrixX3dConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3dConst(self, *args)

    def qualifierTestmatrixX3dRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3dRef(self, *args)

    def qualifierTestmatrixX3dRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixX3dRvalue(self, *args)

    def qualifierTestmatrixXiValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXiValue(self, *args)

    def qualifierTestmatrixXiConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXiConstRef(self, *args)

    def qualifierTestmatrixXiConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXiConst(self, *args)

    def qualifierTestmatrixXiRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXiRef(self, *args)

    def qualifierTestmatrixXiRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXiRvalue(self, *args)

    def qualifierTestmatrixXdValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXdValue(self, *args)

    def qualifierTestmatrixXdConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXdConstRef(self, *args)

    def qualifierTestmatrixXdConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXdConst(self, *args)

    def qualifierTestmatrixXdRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXdRef(self, *args)

    def qualifierTestmatrixXdRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmatrixXdRvalue(self, *args)

    def qualifierTestmrpdValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmrpdValue(self, *args)

    def qualifierTestmrpdConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmrpdConstRef(self, *args)

    def qualifierTestmrpdConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmrpdConst(self, *args)

    def qualifierTestmrpdRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmrpdRef(self, *args)

    def qualifierTestmrpdRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestmrpdRvalue(self, *args)

    def qualifierTestquaterniondValue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestquaterniondValue(self, *args)

    def qualifierTestquaterniondConstRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestquaterniondConstRef(self, *args)

    def qualifierTestquaterniondConst(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestquaterniondConst(self, *args)

    def qualifierTestquaterniondRef(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestquaterniondRef(self, *args)

    def qualifierTestquaterniondRvalue(self, *args):
        return _swigEigenCheck.SwigEigenTestClass_qualifierTestquaterniondRvalue(self, *args)

    def __init__(self):
        _swigEigenCheck.SwigEigenTestClass_swiginit(self, _swigEigenCheck.new_SwigEigenTestClass())
    __swig_destroy__ = _swigEigenCheck.delete_SwigEigenTestClass

# Register SwigEigenTestClass in _swigEigenCheck:
_swigEigenCheck.SwigEigenTestClass_swigregister(SwigEigenTestClass)

