# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _pyswice
else:
    import _pyswice

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def new_doubleArray(nelements):
    return _pyswice.new_doubleArray(nelements)

def delete_doubleArray(ary):
    return _pyswice.delete_doubleArray(ary)

def doubleArray_getitem(ary, index):
    return _pyswice.doubleArray_getitem(ary, index)

def doubleArray_setitem(ary, index, value):
    return _pyswice.doubleArray_setitem(ary, index, value)

def new_spiceIntArray(nelements):
    return _pyswice.new_spiceIntArray(nelements)

def delete_spiceIntArray(ary):
    return _pyswice.delete_spiceIntArray(ary)

def spiceIntArray_getitem(ary, index):
    return _pyswice.spiceIntArray_getitem(ary, index)

def spiceIntArray_setitem(ary, index, value):
    return _pyswice.spiceIntArray_setitem(ary, index, value)

def new_spiceBoolArray(nelements):
    return _pyswice.new_spiceBoolArray(nelements)

def delete_spiceBoolArray(ary):
    return _pyswice.delete_spiceBoolArray(ary)

def spiceBoolArray_getitem(ary, index):
    return _pyswice.spiceBoolArray_getitem(ary, index)

def spiceBoolArray_setitem(ary, index, value):
    return _pyswice.spiceBoolArray_setitem(ary, index, value)

def appndc_c(item, cell):
    return _pyswice.appndc_c(item, cell)

def appndd_c(item, cell):
    return _pyswice.appndd_c(item, cell)

def appndi_c(item, cell):
    return _pyswice.appndi_c(item, cell)

def axisar_c(axis, angle, r):
    return _pyswice.axisar_c(axis, angle, r)

def azlcpo_c(method, target, et, abcorr, azccw, elplsz, obspos, obsctr, obsref, azlsta, lt):
    return _pyswice.azlcpo_c(method, target, et, abcorr, azccw, elplsz, obspos, obsctr, obsref, azlsta, lt)

def azlrec_c(range, az, el, azccw, elplsz, rectan):
    return _pyswice.azlrec_c(range, az, el, azccw, elplsz, rectan)

def badkpv_c(caller, name, comp, size, divby, type):
    return _pyswice.badkpv_c(caller, name, comp, size, divby, type)

def bltfrm_c(frmcls, idset):
    return _pyswice.bltfrm_c(frmcls, idset)

def bodc2n_c(code, namelen, name, found):
    return _pyswice.bodc2n_c(code, namelen, name, found)

def bodc2s_c(code, lenout, name):
    return _pyswice.bodc2s_c(code, lenout, name)

def boddef_c(name, code):
    return _pyswice.boddef_c(name, code)

def bodfnd_c(body, item):
    return _pyswice.bodfnd_c(body, item)

def bodn2c_c(name, code, found):
    return _pyswice.bodn2c_c(name, code, found)

def bods2c_c(name, code, found):
    return _pyswice.bods2c_c(name, code, found)

def bodvar_c(body, item, dim, values):
    return _pyswice.bodvar_c(body, item, dim, values)

def bodvcd_c(body, item, maxn, dim, values):
    return _pyswice.bodvcd_c(body, item, maxn, dim, values)

def bodvrd_c(body, item, maxn, dim, values):
    return _pyswice.bodvrd_c(body, item, maxn, dim, values)

def brcktd_c(number, end1, end2):
    return _pyswice.brcktd_c(number, end1, end2)

def brckti_c(number, end1, end2):
    return _pyswice.brckti_c(number, end1, end2)

def bschoc_c(value, ndim, lenvals, array, order):
    return _pyswice.bschoc_c(value, ndim, lenvals, array, order)

def bschoi_c(value, ndim, array, order):
    return _pyswice.bschoi_c(value, ndim, array, order)

def bsrchc_c(value, ndim, lenvals, array):
    return _pyswice.bsrchc_c(value, ndim, lenvals, array)

def bsrchd_c(value, ndim, array):
    return _pyswice.bsrchd_c(value, ndim, array)

def bsrchi_c(value, ndim, array):
    return _pyswice.bsrchi_c(value, ndim, array)

def b1900_c():
    return _pyswice.b1900_c()

def b1950_c():
    return _pyswice.b1950_c()

def card_c(cell):
    return _pyswice.card_c(cell)

def ccifrm_c(frclss, clssid, lenout, frcode, frname, center, found):
    return _pyswice.ccifrm_c(frclss, clssid, lenout, frcode, frname, center, found)

def cgv2el_c(center, vec1, vec2, ellipse):
    return _pyswice.cgv2el_c(center, vec1, vec2, ellipse)

def chbder_c(cp, degp, x2s, x, nderiv, partdp, dpdxs):
    return _pyswice.chbder_c(cp, degp, x2s, x, nderiv, partdp, dpdxs)

def chbigr_c(degp, cp, x2s, x, p, itgrlp):
    return _pyswice.chbigr_c(degp, cp, x2s, x, p, itgrlp)

def chbint_c(cp, degp, x2s, x, p, dpdx):
    return _pyswice.chbint_c(cp, degp, x2s, x, p, dpdx)

def chbval_c(cp, degp, x2s, x, p):
    return _pyswice.chbval_c(cp, degp, x2s, x, p)

def chkin_c(module):
    return _pyswice.chkin_c(module)

def chkout_c(module):
    return _pyswice.chkout_c(module)

def cidfrm_c(cent, lenout, frcode, frname, found):
    return _pyswice.cidfrm_c(cent, lenout, frcode, frname, found)

def ckfrot_c(inst, et, rotate, ref, found):
    return _pyswice.ckfrot_c(inst, et, rotate, ref, found)

def ckfxfm_c(inst, et, xform, ref, found):
    return _pyswice.ckfxfm_c(inst, et, xform, ref, found)

def ckgr02_c(handle, descr, recno, record):
    return _pyswice.ckgr02_c(handle, descr, recno, record)

def ckcls_c(handle):
    return _pyswice.ckcls_c(handle)

def ckcov_c(ck, idcode, needav, level, tol, timsys, cover):
    return _pyswice.ckcov_c(ck, idcode, needav, level, tol, timsys, cover)

def ckgr03_c(handle, descr, recno, record):
    return _pyswice.ckgr03_c(handle, descr, recno, record)

def ckobj_c(ck, ids):
    return _pyswice.ckobj_c(ck, ids)

def ckgp_c(inst, sclkdp, tol, ref, cmat, clkout, found):
    return _pyswice.ckgp_c(inst, sclkdp, tol, ref, cmat, clkout, found)

def ckgpav_c(inst, sclkdp, tol, ref, cmat, av, clkout, found):
    return _pyswice.ckgpav_c(inst, sclkdp, tol, ref, cmat, av, clkout, found)

def ckmeta_c(ckid, meta, idcode):
    return _pyswice.ckmeta_c(ckid, meta, idcode)

def cknr02_c(handle, descr, nrec):
    return _pyswice.cknr02_c(handle, descr, nrec)

def cknr03_c(handle, descr, nrec):
    return _pyswice.cknr03_c(handle, descr, nrec)

def clearc_c(ndim, arrlen, array):
    return _pyswice.clearc_c(ndim, arrlen, array)

def cklpf_c(fname, handle):
    return _pyswice.cklpf_c(fname, handle)

def ckopn_c(name, ifname, ncomch, handle):
    return _pyswice.ckopn_c(name, ifname, ncomch, handle)

def ckupf_c(handle):
    return _pyswice.ckupf_c(handle)

def ckw01_c(handle, begtime, endtime, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs):
    return _pyswice.ckw01_c(handle, begtime, endtime, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs)

def ckw02_c(handle, begtim, endtim, inst, ref, segid, nrec, start, stop, quats, avvs, rates):
    return _pyswice.ckw02_c(handle, begtim, endtim, inst, ref, segid, nrec, start, stop, quats, avvs, rates)

def ckw03_c(handle, begtim, endtim, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs, nints, starts):
    return _pyswice.ckw03_c(handle, begtim, endtim, inst, ref, avflag, segid, nrec, sclkdp, quats, avvs, nints, starts)

def ckw05_c(handle, subtyp, degree, begtim, endtim, inst, ref, avflag, segid, n, sclkdp, packets, rate, nints, starts):
    return _pyswice.ckw05_c(handle, subtyp, degree, begtim, endtim, inst, ref, avflag, segid, n, sclkdp, packets, rate, nints, starts)

def cleard_c(ndim, array):
    return _pyswice.cleard_c(ndim, array)

def cleari_c(ndim, array):
    return _pyswice.cleari_c(ndim, array)

def clight_c():
    return _pyswice.clight_c()

def clpool_c():
    return _pyswice.clpool_c()

def cmprss_c(delim, n, input, lenout, output):
    return _pyswice.cmprss_c(delim, n, input, lenout, output)

def cnmfrm_c(cname, lenout, frcode, frname, found):
    return _pyswice.cnmfrm_c(cname, lenout, frcode, frname, found)

def conics_c(elts, et, state):
    return _pyswice.conics_c(elts, et, state)

def convrt_c(x, _in, out, y):
    return _pyswice.convrt_c(x, _in, out, y)

def copy_c(a, b):
    return _pyswice.copy_c(a, b)

def cpos_c(str, chars, start):
    return _pyswice.cpos_c(str, chars, start)

def cposr_c(str, chars, start):
    return _pyswice.cposr_c(str, chars, start)

def cvpool_c(agent, update):
    return _pyswice.cvpool_c(agent, update)

def cyllat_c(r, lonc, z, radius, lon, lat):
    return _pyswice.cyllat_c(r, lonc, z, radius, lon, lat)

def cylrec_c(r, lon, z, rectan):
    return _pyswice.cylrec_c(r, lon, z, rectan)

def cylsph_c(r, lonc, z, radius, colat, lon):
    return _pyswice.cylsph_c(r, lonc, z, radius, colat, lon)

def dafac_c(handle, n, lenvals, buffer):
    return _pyswice.dafac_c(handle, n, lenvals, buffer)

def dafbbs_c(handle):
    return _pyswice.dafbbs_c(handle)

def dafbfs_c(handle):
    return _pyswice.dafbfs_c(handle)

def dafcls_c(handle):
    return _pyswice.dafcls_c(handle)

def dafcs_c(handle):
    return _pyswice.dafcs_c(handle)

def dafdc_c(handle):
    return _pyswice.dafdc_c(handle)

def dafec_c(handle, bufsiz, lenout, n, buffer, done):
    return _pyswice.dafec_c(handle, bufsiz, lenout, n, buffer, done)

def daffna_c(found):
    return _pyswice.daffna_c(found)

def daffpa_c(found):
    return _pyswice.daffpa_c(found)

def dafgda_c(handle, begin, end, data):
    return _pyswice.dafgda_c(handle, begin, end, data)

def dafgh_c(handle):
    return _pyswice.dafgh_c(handle)

def dafgn_c(lenout, name):
    return _pyswice.dafgn_c(lenout, name)

def dafgs_c(sum):
    return _pyswice.dafgs_c(sum)

def dafgsr_c(handle, recno, begin, end, data, found):
    return _pyswice.dafgsr_c(handle, recno, begin, end, data, found)

def dafhsf_c(handle, nd, ni):
    return _pyswice.dafhsf_c(handle, nd, ni)

def dafopr_c(fname, handle):
    return _pyswice.dafopr_c(fname, handle)

def dafopw_c(fname, handle):
    return _pyswice.dafopw_c(fname, handle)

def dafps_c(nd, ni, dc, ic, sum):
    return _pyswice.dafps_c(nd, ni, dc, ic, sum)

def dafrda_c(handle, begin, end, data):
    return _pyswice.dafrda_c(handle, begin, end, data)

def dafrfr_c(handle, lenout, nd, ni, ifname, fward, bward, free):
    return _pyswice.dafrfr_c(handle, lenout, nd, ni, ifname, fward, bward, free)

def dasadc_c(handle, n, bpos, epos, datlen, data):
    return _pyswice.dasadc_c(handle, n, bpos, epos, datlen, data)

def dasadd_c(handle, n, data):
    return _pyswice.dasadd_c(handle, n, data)

def dasadi_c(handle, n, data):
    return _pyswice.dasadi_c(handle, n, data)

def dafrs_c(sum):
    return _pyswice.dafrs_c(sum)

def dafus_c(sum, nd, ni, dc, ic):
    return _pyswice.dafus_c(sum, nd, ni, dc, ic)

def dasac_c(handle, n, buflen, buffer):
    return _pyswice.dasac_c(handle, n, buflen, buffer)

def dascls_c(handle):
    return _pyswice.dascls_c(handle)

def dasdc_c(handle):
    return _pyswice.dasdc_c(handle)

def dasec_c(handle, bufsiz, buflen, n, buffer, done):
    return _pyswice.dasec_c(handle, bufsiz, buflen, n, buffer, done)

def dashfn_c(handle, namlen, fname):
    return _pyswice.dashfn_c(handle, namlen, fname)

def dashfs_c(handle, nresvr, nresvc, ncomr, ncomc, free, lastla, lastrc, lastwd):
    return _pyswice.dashfs_c(handle, nresvr, nresvc, ncomr, ncomc, free, lastla, lastrc, lastwd)

def daslla_c(handle, lastc, lastd, lasti):
    return _pyswice.daslla_c(handle, lastc, lastd, lasti)

def dasllc_c(handle):
    return _pyswice.dasllc_c(handle)

def dasonw_c(fname, ftype, ifname, ncomr, handle):
    return _pyswice.dasonw_c(fname, ftype, ifname, ncomr, handle)

def dasopr_c(fname, handle):
    return _pyswice.dasopr_c(fname, handle)

def dasops_c(handle):
    return _pyswice.dasops_c(handle)

def dasopw_c(fname, handle):
    return _pyswice.dasopw_c(fname, handle)

def dasrdc_c(handle, first, last, bpos, epos, datlen, data):
    return _pyswice.dasrdc_c(handle, first, last, bpos, epos, datlen, data)

def dasrdd_c(handle, first, last, data):
    return _pyswice.dasrdd_c(handle, first, last, data)

def dasrdi_c(handle, first, last, data):
    return _pyswice.dasrdi_c(handle, first, last, data)

def dasrfr_c(handle, idwlen, ifnlen, idword, ifname, nresvr, nresvc, ncomr, ncomc):
    return _pyswice.dasrfr_c(handle, idwlen, ifnlen, idword, ifname, nresvr, nresvc, ncomr, ncomc)

def dasudc_c(handle, first, last, bpos, epos, datlen, data):
    return _pyswice.dasudc_c(handle, first, last, bpos, epos, datlen, data)

def dasudd_c(handle, first, last, data):
    return _pyswice.dasudd_c(handle, first, last, data)

def dasudi_c(handle, first, last, data):
    return _pyswice.dasudi_c(handle, first, last, data)

def daswbr_c(handle):
    return _pyswice.daswbr_c(handle)

def dazldr_c(x, y, z, azccw, elplsz, jacobi):
    return _pyswice.dazldr_c(x, y, z, azccw, elplsz, jacobi)

def dcyldr_c(x, y, z, jacobi):
    return _pyswice.dcyldr_c(x, y, z, jacobi)

def deltet_c(epoch, eptype, delta):
    return _pyswice.deltet_c(epoch, eptype, delta)

def det_c(m1):
    return _pyswice.det_c(m1)

def diags2_c(symmat, diag, rotate):
    return _pyswice.diags2_c(symmat, diag, rotate)

def diff_c(a, b, c):
    return _pyswice.diff_c(a, b, c)

def dgeodr_c(x, y, z, re, f, jacobi):
    return _pyswice.dgeodr_c(x, y, z, re, f, jacobi)

def dlabbs_c(handle, descr, found):
    return _pyswice.dlabbs_c(handle, descr, found)

def dlabfs_c(handle, descr, found):
    return _pyswice.dlabfs_c(handle, descr, found)

def dlabns_c(handle):
    return _pyswice.dlabns_c(handle)

def dlaens_c(handle):
    return _pyswice.dlaens_c(handle)

def dlafns_c(handle, descr, nxtdsc, found):
    return _pyswice.dlafns_c(handle, descr, nxtdsc, found)

def dlafps_c(handle, descr, prvdsc, found):
    return _pyswice.dlafps_c(handle, descr, prvdsc, found)

def dlaopn_c(fname, ftype, ifname, ncomch, handle):
    return _pyswice.dlaopn_c(fname, ftype, ifname, ncomch, handle)

def dlatdr_c(x, y, z, jacobi):
    return _pyswice.dlatdr_c(x, y, z, jacobi)

def dnearp_c(state, a, b, c, dnear, dalt, found):
    return _pyswice.dnearp_c(state, a, b, c, dnear, dalt, found)

def dp2hx_c(number, lenout, string, length):
    return _pyswice.dp2hx_c(number, lenout, string, length)

def dpgrdr_c(body, x, y, z, re, f, jacobi):
    return _pyswice.dpgrdr_c(body, x, y, z, re, f, jacobi)

def drdazl_c(range, az, el, azccw, elplsz, jacobi):
    return _pyswice.drdazl_c(range, az, el, azccw, elplsz, jacobi)

def dpmax_c():
    return _pyswice.dpmax_c()

def dpmax_():
    return _pyswice.dpmax_()

def dpmin_c():
    return _pyswice.dpmin_c()

def dpmin_():
    return _pyswice.dpmin_()

def dpr_c():
    return _pyswice.dpr_c()

def drdcyl_c(r, lon, z, jacobi):
    return _pyswice.drdcyl_c(r, lon, z, jacobi)

def drdgeo_c(lon, lat, alt, re, f, jacobi):
    return _pyswice.drdgeo_c(lon, lat, alt, re, f, jacobi)

def drdlat_c(r, lon, lat, jacobi):
    return _pyswice.drdlat_c(r, lon, lat, jacobi)

def drdpgr_c(body, lon, lat, alt, re, f, jacobi):
    return _pyswice.drdpgr_c(body, lon, lat, alt, re, f, jacobi)

def drdsph_c(r, colat, lon, jacobi):
    return _pyswice.drdsph_c(r, colat, lon, jacobi)

def dskb02_c(handle, dladsc, nv, np, nvxtot, vtxbds, voxsiz, voxori, vgrext, cgscal, vtxnpl, voxnpt, voxnpl):
    return _pyswice.dskb02_c(handle, dladsc, nv, np, nvxtot, vtxbds, voxsiz, voxori, vgrext, cgscal, vtxnpl, voxnpt, voxnpl)

def dskcls_c(handle, optmiz):
    return _pyswice.dskcls_c(handle, optmiz)

def dskd02_c(handle, dladsc, item, start, room, n, values):
    return _pyswice.dskd02_c(handle, dladsc, item, start, room, n, values)

def dskgd_c(handle, dladsc, dskdsc):
    return _pyswice.dskgd_c(handle, dladsc, dskdsc)

def dskgtl_c(keywrd, dpval):
    return _pyswice.dskgtl_c(keywrd, dpval)

def dski02_c(handle, dladsc, item, start, room, n, values):
    return _pyswice.dski02_c(handle, dladsc, item, start, room, n, values)

def dskobj_c(dsk, bodids):
    return _pyswice.dskobj_c(dsk, bodids)

def dskopn_c(fname, ifname, ncomch, handle):
    return _pyswice.dskopn_c(fname, ifname, ncomch, handle)

def dskn02_c(handle, dladsc, plid, normal):
    return _pyswice.dskn02_c(handle, dladsc, plid, normal)

def dskmi2_c(nv, vrtces, np, plates, finscl, corscl, worksz, voxpsz, voxlsz, makvtl, spxisz, work, spaixd, spaixi):
    return _pyswice.dskmi2_c(nv, vrtces, np, plates, finscl, corscl, worksz, voxpsz, voxlsz, makvtl, spxisz, work, spaixd, spaixi)

def dskp02_c(handle, dladsc, start, room, n, plates):
    return _pyswice.dskp02_c(handle, dladsc, start, room, n, plates)

def dskrb2_c(nv, vrtces, np, plates, corsys, corpar, mncor3, mxcor3):
    return _pyswice.dskrb2_c(nv, vrtces, np, plates, corsys, corpar, mncor3, mxcor3)

def dsksrf_c(dsk, bodyid, srfids):
    return _pyswice.dsksrf_c(dsk, bodyid, srfids)

def dskstl_c(keywrd, dpval):
    return _pyswice.dskstl_c(keywrd, dpval)

def dskv02_c(handle, dladsc, start, room, n, vrtces):
    return _pyswice.dskv02_c(handle, dladsc, start, room, n, vrtces)

def dskw02_c(handle, center, surfce, dclass, frame, corsys, corpar, mncor1, mxcor1, mncor2, mxcor2, mncor3, mxcor3, first, last, nv, vrtces, np, plates, spaixd, spaixi):
    return _pyswice.dskw02_c(handle, center, surfce, dclass, frame, corsys, corpar, mncor1, mxcor1, mncor2, mxcor2, mncor3, mxcor3, first, last, nv, vrtces, np, plates, spaixd, spaixi)

def dskx02_c(handle, dladsc, vertex, raydir, plid, xpt, found):
    return _pyswice.dskx02_c(handle, dladsc, vertex, raydir, plid, xpt, found)

def dskxsi_c(pri, target, nsurf, srflst, et, fixref, vertex, raydir, maxd, maxi, xpt, handle, dladsc, dskdsc, dc, ic, found):
    return _pyswice.dskxsi_c(pri, target, nsurf, srflst, et, fixref, vertex, raydir, maxd, maxi, xpt, handle, dladsc, dskdsc, dc, ic, found)

def dskxv_c(pri, target, nsurf, srflst, et, fixref, nrays, vtxarr, dirarr, xptarr, fndarr):
    return _pyswice.dskxv_c(pri, target, nsurf, srflst, et, fixref, nrays, vtxarr, dirarr, xptarr, fndarr)

def dskz02_c(handle, dladsc, nv, np):
    return _pyswice.dskz02_c(handle, dladsc, nv, np)

def dsphdr_c(x, y, z, jacobi):
    return _pyswice.dsphdr_c(x, y, z, jacobi)

def dtpool_c(name, found, n, type):
    return _pyswice.dtpool_c(name, found, n, type)

def ducrss_c(s1, s2, sout):
    return _pyswice.ducrss_c(s1, s2, sout)

def dvcrss_c(s1, s2, sout):
    return _pyswice.dvcrss_c(s1, s2, sout)

def dvdot_c(s1, s2):
    return _pyswice.dvdot_c(s1, s2)

def dvhat_c(s1, sout):
    return _pyswice.dvhat_c(s1, sout)

def dvnorm_c(state):
    return _pyswice.dvnorm_c(state)

def dvpool_c(name):
    return _pyswice.dvpool_c(name)

def dvsep_c(s1, s2):
    return _pyswice.dvsep_c(s1, s2)

def edlimb_c(a, b, c, viewpt, limb):
    return _pyswice.edlimb_c(a, b, c, viewpt, limb)

def ednmpt_c(a, b, c, normal, point):
    return _pyswice.ednmpt_c(a, b, c, normal, point)

def edpnt_c(p, a, b, c, ep):
    return _pyswice.edpnt_c(p, a, b, c, ep)

def edterm_c(trmtyp, source, target, et, fixfrm, abcorr, obsrvr, npts, trgepc, obspos, termpts):
    return _pyswice.edterm_c(trmtyp, source, target, et, fixfrm, abcorr, obsrvr, npts, trgepc, obspos, termpts)

def ekacec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull):
    return _pyswice.ekacec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull)

def ekaced_c(handle, segno, recno, column, nvals, dvals, isnull):
    return _pyswice.ekaced_c(handle, segno, recno, column, nvals, dvals, isnull)

def ekacei_c(handle, segno, recno, column, nvals, ivals, isnull):
    return _pyswice.ekacei_c(handle, segno, recno, column, nvals, ivals, isnull)

def ekaclc_c(handle, segno, column, vallen, cvals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekaclc_c(handle, segno, column, vallen, cvals, entszs, nlflgs, rcptrs, wkindx)

def ekacld_c(handle, segno, column, dvals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekacld_c(handle, segno, column, dvals, entszs, nlflgs, rcptrs, wkindx)

def ekacli_c(handle, segno, column, ivals, entszs, nlflgs, rcptrs, wkindx):
    return _pyswice.ekacli_c(handle, segno, column, ivals, entszs, nlflgs, rcptrs, wkindx)

def ekappr_c(handle, segno, recno):
    return _pyswice.ekappr_c(handle, segno, recno)

def ekbseg_c(handle, tabnam, ncols, cnmlen, cnames, declen, decls, segno):
    return _pyswice.ekbseg_c(handle, tabnam, ncols, cnmlen, cnames, declen, decls, segno)

def ekccnt_c(table, ccount):
    return _pyswice.ekccnt_c(table, ccount)

def ekcii_c(table, cindex, lenout, column, attdsc):
    return _pyswice.ekcii_c(table, cindex, lenout, column, attdsc)

def ekcls_c(handle):
    return _pyswice.ekcls_c(handle)

def ekdelr_c(handle, segno, recno):
    return _pyswice.ekdelr_c(handle, segno, recno)

def ekffld_c(handle, segno, rcptrs):
    return _pyswice.ekffld_c(handle, segno, rcptrs)

def ekfind_c(query, lenout, nmrows, error, errmsg):
    return _pyswice.ekfind_c(query, lenout, nmrows, error, errmsg)

def ekgc_c(selidx, row, elment, lenout, cdata, null, found):
    return _pyswice.ekgc_c(selidx, row, elment, lenout, cdata, null, found)

def ekgd_c(selidx, row, elment, ddata, null, found):
    return _pyswice.ekgd_c(selidx, row, elment, ddata, null, found)

def ekgi_c(selidx, row, elment, idata, null, found):
    return _pyswice.ekgi_c(selidx, row, elment, idata, null, found)

def ekifld_c(handle, tabnam, ncols, nrows, cnmlen, cnames, declen, decls, segno, rcptrs):
    return _pyswice.ekifld_c(handle, tabnam, ncols, nrows, cnmlen, cnames, declen, decls, segno, rcptrs)

def ekinsr_c(handle, segno, recno):
    return _pyswice.ekinsr_c(handle, segno, recno)

def eklef_c(fname, handle):
    return _pyswice.eklef_c(fname, handle)

def eknelt_c(selidx, row):
    return _pyswice.eknelt_c(selidx, row)

def eknseg_c(handle):
    return _pyswice.eknseg_c(handle)

def ekntab_c(n):
    return _pyswice.ekntab_c(n)

def ekopn_c(fname, ifname, ncomch, handle):
    return _pyswice.ekopn_c(fname, ifname, ncomch, handle)

def ekopr_c(fname, handle):
    return _pyswice.ekopr_c(fname, handle)

def ekops_c(handle):
    return _pyswice.ekops_c(handle)

def ekopw_c(fname, handle):
    return _pyswice.ekopw_c(fname, handle)

def ekpsel_c(query, msglen, tablen, collen, n, xbegs, xends, xtypes, xclass, tabs, cols, error, errmsg):
    return _pyswice.ekpsel_c(query, msglen, tablen, collen, n, xbegs, xends, xtypes, xclass, tabs, cols, error, errmsg)

def ekrcec_c(handle, segno, recno, column, lenout, nvals, cvals, isnull):
    return _pyswice.ekrcec_c(handle, segno, recno, column, lenout, nvals, cvals, isnull)

def ekrced_c(handle, segno, recno, column, nvals, dvals, isnull):
    return _pyswice.ekrced_c(handle, segno, recno, column, nvals, dvals, isnull)

def ekrcei_c(handle, segno, recno, column, nvals, ivals, isnull):
    return _pyswice.ekrcei_c(handle, segno, recno, column, nvals, ivals, isnull)

def ekssum_c(handle, segno, segsum):
    return _pyswice.ekssum_c(handle, segno, segsum)

def ektnam_c(n, lenout, table):
    return _pyswice.ektnam_c(n, lenout, table)

def ekucec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull):
    return _pyswice.ekucec_c(handle, segno, recno, column, nvals, vallen, cvals, isnull)

def ekuef_c(handle):
    return _pyswice.ekuef_c(handle)

def elemc_c(item, set):
    return _pyswice.elemc_c(item, set)

def elemd_c(item, set):
    return _pyswice.elemd_c(item, set)

def elemi_c(item, set):
    return _pyswice.elemi_c(item, set)

def eqncpv_c(et, epoch, eqel, rapol, decpol, state):
    return _pyswice.eqncpv_c(et, epoch, eqel, rapol, decpol, state)

def eqstr_c(a, b):
    return _pyswice.eqstr_c(a, b)

def el2cgv_c(ellipse, center, smajor, sminor):
    return _pyswice.el2cgv_c(ellipse, center, smajor, sminor)

def erract_c(operation, lenout, action):
    return _pyswice.erract_c(operation, lenout, action)

def errch_c(marker, string):
    return _pyswice.errch_c(marker, string)

def errdev_c(operation, lenout, device):
    return _pyswice.errdev_c(operation, lenout, device)

def errdp_c(marker, number):
    return _pyswice.errdp_c(marker, number)

def errint_c(marker, number):
    return _pyswice.errint_c(marker, number)

def errprt_c(operation, lenout, list):
    return _pyswice.errprt_c(operation, lenout, list)

def esrchc_c(value, ndim, lenvals, array):
    return _pyswice.esrchc_c(value, ndim, lenvals, array)

def etcal_c(et, lenout, string):
    return _pyswice.etcal_c(et, lenout, string)

def et2lst_c(et, body, lon, type, timlen, ampmlen, hr, mn, sc, time, ampm):
    return _pyswice.et2lst_c(et, body, lon, type, timlen, ampmlen, hr, mn, sc, time, ampm)

def et2utc_c(et, format, prec, lenout, utcstr):
    return _pyswice.et2utc_c(et, format, prec, lenout, utcstr)

def eul2m_c(angle3, angle2, angle1, axis3, axis2, axis1, r):
    return _pyswice.eul2m_c(angle3, angle2, angle1, axis3, axis2, axis1, r)

def eul2xf_c(eulang, axisa, axisb, axisc, xform):
    return _pyswice.eul2xf_c(eulang, axisa, axisb, axisc, xform)

def evsgp4_c(et, geophs, elems, state):
    return _pyswice.evsgp4_c(et, geophs, elems, state)

def exists_c(name):
    return _pyswice.exists_c(name)

def expool_c(name, found):
    return _pyswice.expool_c(name, found)

def failed_c():
    return _pyswice.failed_c()

def fovray_c(inst, raydir, rframe, abcorr, obsrvr, et, visible):
    return _pyswice.fovray_c(inst, raydir, rframe, abcorr, obsrvr, et, visible)

def fovtrg_c(inst, target, tshape, tframe, abcorr, obsrvr, et, visible):
    return _pyswice.fovtrg_c(inst, target, tshape, tframe, abcorr, obsrvr, et, visible)

def filli_c(value, ndim, array):
    return _pyswice.filli_c(value, ndim, array)

def filld_c(value, ndim, array):
    return _pyswice.filld_c(value, ndim, array)

def frame_c(x, y, z):
    return _pyswice.frame_c(x, y, z)

def frinfo_c(frcode, cent, clss, clssid, found):
    return _pyswice.frinfo_c(frcode, cent, clss, clssid, found)

def frmnam_c(frcode, lenout, frname):
    return _pyswice.frmnam_c(frcode, lenout, frname)

def ftncls_c(unit):
    return _pyswice.ftncls_c(unit)

def furnsh_c(file):
    return _pyswice.furnsh_c(file)

def gcpool_c(name, start, room, lenout, n, cvals, found):
    return _pyswice.gcpool_c(name, start, room, lenout, n, cvals, found)

def gdpool_c(name, start, room, n, values, found):
    return _pyswice.gdpool_c(name, start, room, n, values, found)

def georec_c(lon, lat, alt, re, f, rectan):
    return _pyswice.georec_c(lon, lat, alt, re, f, rectan)

def getcml_c(argc, argv):
    return _pyswice.getcml_c(argc, argv)

def getelm_c(frstyr, lineln, lines, epoch, elems):
    return _pyswice.getelm_c(frstyr, lineln, lines, epoch, elems)

def getfat_c(file, arclen, typlen, arch, type):
    return _pyswice.getfat_c(file, arclen, typlen, arch, type)

def getfov_c(instid, room, shapelen, framelen, shape, frame, bsight, n, bounds):
    return _pyswice.getfov_c(instid, room, shapelen, framelen, shape, frame, bsight, n, bounds)

def getfvn_c(inst, room, shalen, fralen, shape, frame, bsight, n, bounds):
    return _pyswice.getfvn_c(inst, room, shalen, fralen, shape, frame, bsight, n, bounds)

def getmsg_c(option, lenout, msg):
    return _pyswice.getmsg_c(option, lenout, msg)

def gfbail_c():
    return _pyswice.gfbail_c()

def gfclrh_c():
    return _pyswice.gfclrh_c()

def gfdist_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfdist_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)

def gfevnt_c(udstep, udrefn, gquant, qnpars, lenvals, qpnams, qcpars, qdpars, qipars, qlpars, op, refval, tol, adjust, rpt, udrepi, udrepu, udrepf, nintvls, bail, udbail, cnfine, result):
    return _pyswice.gfevnt_c(udstep, udrefn, gquant, qnpars, lenvals, qpnams, qcpars, qdpars, qipars, qlpars, op, refval, tol, adjust, rpt, udrepi, udrepu, udrepf, nintvls, bail, udbail, cnfine, result)

def gffove_c(inst, tshape, raydir, target, tframe, abcorr, obsrvr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result):
    return _pyswice.gffove_c(inst, tshape, raydir, target, tframe, abcorr, obsrvr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result)

def gfilum_c(method, angtyp, target, illum, fixref, abcorr, obsrvr, spoint, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfilum_c(method, angtyp, target, illum, fixref, abcorr, obsrvr, spoint, relate, refval, adjust, step, nintvls, cnfine, result)

def gfinth_c(sigcode):
    return _pyswice.gfinth_c(sigcode)

def gfocce_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result):
    return _pyswice.gfocce_c(occtyp, front, fshape, fframe, back, bshape, bframe, obsrvr, abcorr, tol, udstep, udrefn, rpt, udrepi, udrepu, udrepf, bail, udbail, cnfine, result)

def gfoclt_c(occtyp, front, fshape, fframe, back, bshape, bframe, abcorr, obsrvr, step, cnfine, result):
    return _pyswice.gfoclt_c(occtyp, front, fshape, fframe, back, bshape, bframe, abcorr, obsrvr, step, cnfine, result)

def gfpa_c(target, illum, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfpa_c(target, illum, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)

def gfposc_c(target, frame, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfposc_c(target, frame, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)

def gfrefn_c(t1, t2, s1, s2, t):
    return _pyswice.gfrefn_c(t1, t2, s1, s2, t)

def gfrepf_c():
    return _pyswice.gfrepf_c()

def gfrepi_c(window, begmss, endmss):
    return _pyswice.gfrepi_c(window, begmss, endmss)

def gfrepu_c(ivbeg, ivend, time):
    return _pyswice.gfrepu_c(ivbeg, ivend, time)

def gfrfov_c(inst, raydir, rframe, abcorr, obsrvr, step, cnfine, result):
    return _pyswice.gfrfov_c(inst, raydir, rframe, abcorr, obsrvr, step, cnfine, result)

def gfrr_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfrr_c(target, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)

def gfsep_c(targ1, shape1, frame1, targ2, shape2, frame2, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsep_c(targ1, shape1, frame1, targ2, shape2, frame2, abcorr, obsrvr, relate, refval, adjust, step, nintvls, cnfine, result)

def gfsntc_c(target, fixref, method, abcorr, obsrvr, dref, dvec, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsntc_c(target, fixref, method, abcorr, obsrvr, dref, dvec, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)

def gfsstp_c(step):
    return _pyswice.gfsstp_c(step)

def gfstep_c(time, step):
    return _pyswice.gfstep_c(time, step)

def gfstol_c(value):
    return _pyswice.gfstol_c(value)

def gfsubc_c(target, fixref, method, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfsubc_c(target, fixref, method, abcorr, obsrvr, crdsys, coord, relate, refval, adjust, step, nintvls, cnfine, result)

def gftfov_c(inst, target, tshape, tframe, abcorr, obsrvr, step, cnfine, result):
    return _pyswice.gftfov_c(inst, target, tshape, tframe, abcorr, obsrvr, step, cnfine, result)

def gfudb_c(udfuns, udfunb, step, cnfine, result):
    return _pyswice.gfudb_c(udfuns, udfunb, step, cnfine, result)

def gfuds_c(udfuns, udfunb, relate, refval, adjust, step, nintvls, cnfine, result):
    return _pyswice.gfuds_c(udfuns, udfunb, relate, refval, adjust, step, nintvls, cnfine, result)

def gipool_c(name, start, room, n, ivals, found):
    return _pyswice.gipool_c(name, start, room, n, ivals, found)

def gnpool_c(name, start, room, lenout, n, kvars, found):
    return _pyswice.gnpool_c(name, start, room, lenout, n, kvars, found)

def hrmesp_c(n, first, step, yvals, x, f, df):
    return _pyswice.hrmesp_c(n, first, step, yvals, x, f, df)

def hrmint_c(n, xvals, yvals, x, work, f, df):
    return _pyswice.hrmint_c(n, xvals, yvals, x, work, f, df)

def halfpi_c():
    return _pyswice.halfpi_c()

def hx2dp_c(string, lenout, number, error, errmsg):
    return _pyswice.hx2dp_c(string, lenout, number, error, errmsg)

def ident_c(matrix):
    return _pyswice.ident_c(matrix)

def ilumin_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, solar, emissn):
    return _pyswice.ilumin_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, solar, emissn)

def illum_c(target, et, abcorr, obsrvr, spoint, phase, solar, emissn):
    return _pyswice.illum_c(target, et, abcorr, obsrvr, spoint, phase, solar, emissn)

def illum_pl02(handle, dladsc, target, et, abcorr, obsrvr, spoint, phase, solar, emissn):
    return _pyswice.illum_pl02(handle, dladsc, target, et, abcorr, obsrvr, spoint, phase, solar, emissn)

def illum_plid_pl02(handle, dladsc, target, et, abcorr, obsrvr, spoint, plid, trgepc, srfvec, phase, solar, emissn, visible, lit):
    return _pyswice.illum_plid_pl02(handle, dladsc, target, et, abcorr, obsrvr, spoint, plid, trgepc, srfvec, phase, solar, emissn, visible, lit)

def illumf_c(method, target, ilusrc, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, incdnc, emissn, visibl, lit):
    return _pyswice.illumf_c(method, target, ilusrc, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec, phase, incdnc, emissn, visibl, lit)

def inedpl_c(a, b, c, plane, ellipse, found):
    return _pyswice.inedpl_c(a, b, c, plane, ellipse, found)

def inelpl_c(ellips, plane, nxpts, xpt1, xpt2):
    return _pyswice.inelpl_c(ellips, plane, nxpts, xpt1, xpt2)

def insrtc_c(item, set):
    return _pyswice.insrtc_c(item, set)

def insrtd_c(item, set):
    return _pyswice.insrtd_c(item, set)

def insrti_c(item, set):
    return _pyswice.insrti_c(item, set)

def inter_c(a, b, c):
    return _pyswice.inter_c(a, b, c)

def inrypl_c(vertex, dir, plane, nxpts, xpt):
    return _pyswice.inrypl_c(vertex, dir, plane, nxpts, xpt)

def intmax_c():
    return _pyswice.intmax_c()

def intmax_():
    return _pyswice.intmax_()

def intmin_c():
    return _pyswice.intmin_c()

def intmin_():
    return _pyswice.intmin_()

def invert_c(m1, m2):
    return _pyswice.invert_c(m1, m2)

def invort_c(m, mit):
    return _pyswice.invort_c(m, mit)

def invstm_c(mat, invmat):
    return _pyswice.invstm_c(mat, invmat)

def isordv_c(array, n):
    return _pyswice.isordv_c(array, n)

def isrot_c(m, ntol, dtol):
    return _pyswice.isrot_c(m, ntol, dtol)

def isrchc_c(value, ndim, lenvals, array):
    return _pyswice.isrchc_c(value, ndim, lenvals, array)

def isrchd_c(value, ndim, array):
    return _pyswice.isrchd_c(value, ndim, array)

def isrchi_c(value, ndim, array):
    return _pyswice.isrchi_c(value, ndim, array)

def iswhsp_c(string):
    return _pyswice.iswhsp_c(string)

def j1900_c():
    return _pyswice.j1900_c()

def j1950_c():
    return _pyswice.j1950_c()

def j2000_c():
    return _pyswice.j2000_c()

def j2100_c():
    return _pyswice.j2100_c()

def jyear_c():
    return _pyswice.jyear_c()

def kclear_c():
    return _pyswice.kclear_c()

def kdata_c(which, kind, fillen, typlen, srclen, file, filtyp, source, handle, found):
    return _pyswice.kdata_c(which, kind, fillen, typlen, srclen, file, filtyp, source, handle, found)

def kinfo_c(file, typlen, srclen, filtyp, source, handle, found):
    return _pyswice.kinfo_c(file, typlen, srclen, filtyp, source, handle, found)

def kplfrm_c(frmcls, idset):
    return _pyswice.kplfrm_c(frmcls, idset)

def ktotal_c(kind, count):
    return _pyswice.ktotal_c(kind, count)

def kxtrct_c(keywd, termlen, terms, nterms, stringlen, substrlen, string, found, substr):
    return _pyswice.kxtrct_c(keywd, termlen, terms, nterms, stringlen, substrlen, string, found, substr)

def lastnb_c(string):
    return _pyswice.lastnb_c(string)

def latcyl_c(radius, lon, lat, r, lonc, z):
    return _pyswice.latcyl_c(radius, lon, lat, r, lonc, z)

def latrec_c(radius, longitude, latitude, rectan):
    return _pyswice.latrec_c(radius, longitude, latitude, rectan)

def latsph_c(radius, lon, lat, rho, colat, lons):
    return _pyswice.latsph_c(radius, lon, lat, rho, colat, lons)

def latsrf_c(method, target, et, fixref, npts, lonlat, srfpts):
    return _pyswice.latsrf_c(method, target, et, fixref, npts, lonlat, srfpts)

def lcase_c(_in, lenout, out):
    return _pyswice.lcase_c(_in, lenout, out)

def ldpool_c(filename):
    return _pyswice.ldpool_c(filename)

def lgresp_c(n, first, step, yvals, x):
    return _pyswice.lgresp_c(n, first, step, yvals, x)

def lgrind_c(n, xvals, yvals, work, x, p, dp):
    return _pyswice.lgrind_c(n, xvals, yvals, work, x, p, dp)

def lgrint_c(n, xvals, yvals, x):
    return _pyswice.lgrint_c(n, xvals, yvals, x)

def limb_pl02(handle, dladsc, target, et, fixref, abcorr, obsrvr, npoints, trgepc, obspos, limbpts, plateIDs):
    return _pyswice.limb_pl02(handle, dladsc, target, et, fixref, abcorr, obsrvr, npoints, trgepc, obspos, limbpts, plateIDs)

def limbpt_c(method, target, et, fixref, abcorr, corloc, obsrvr, refvec, rolstp, ncuts, schstp, soltol, maxn, npts, points, epochs, tangts):
    return _pyswice.limbpt_c(method, target, et, fixref, abcorr, corloc, obsrvr, refvec, rolstp, ncuts, schstp, soltol, maxn, npts, points, epochs, tangts)

def llgrid_pl02(handle, dladsc, npoints, grid, spoints, plateIDs):
    return _pyswice.llgrid_pl02(handle, dladsc, npoints, grid, spoints, plateIDs)

def lmpool_c(cvals, lenvals, n):
    return _pyswice.lmpool_c(cvals, lenvals, n)

def lparse_c(list, delim, nmax, lenout, n, items):
    return _pyswice.lparse_c(list, delim, nmax, lenout, n, items)

def lparsm_c(list, delims, nmax, lenout, n, items):
    return _pyswice.lparsm_c(list, delims, nmax, lenout, n, items)

def lparss_c(list, delims, set):
    return _pyswice.lparss_c(list, delims, set)

def lspcn_c(body, et, abcorr):
    return _pyswice.lspcn_c(body, et, abcorr)

def lstlec_c(string, n, lenvals, array):
    return _pyswice.lstlec_c(string, n, lenvals, array)

def lstled_c(x, n, array):
    return _pyswice.lstled_c(x, n, array)

def lstlei_c(x, n, array):
    return _pyswice.lstlei_c(x, n, array)

def lstltc_c(string, n, lenvals, array):
    return _pyswice.lstltc_c(string, n, lenvals, array)

def lstltd_c(x, n, array):
    return _pyswice.lstltd_c(x, n, array)

def lstlti_c(x, n, array):
    return _pyswice.lstlti_c(x, n, array)

def ltime_c(etobs, obs, dir, targ, ettarg, elapsd):
    return _pyswice.ltime_c(etobs, obs, dir, targ, ettarg, elapsd)

def lx4dec_c(string, first, last, nchar):
    return _pyswice.lx4dec_c(string, first, last, nchar)

def lx4num_c(string, first, last, nchar):
    return _pyswice.lx4num_c(string, first, last, nchar)

def lx4sgn_c(string, first, last, nchar):
    return _pyswice.lx4sgn_c(string, first, last, nchar)

def lx4uns_c(string, first, last, nchar):
    return _pyswice.lx4uns_c(string, first, last, nchar)

def lxqstr_c(string, qchar, first, last, nchar):
    return _pyswice.lxqstr_c(string, qchar, first, last, nchar)

def m2eul_c(r, axis3, axis2, axis1, angle3, angle2, angle1):
    return _pyswice.m2eul_c(r, axis3, axis2, axis1, angle3, angle2, angle1)

def m2q_c(r, q):
    return _pyswice.m2q_c(r, q)

def matchi_c(string, templ, wstr, wchr):
    return _pyswice.matchi_c(string, templ, wstr, wchr)

def matchw_c(string, templ, wstr, wchr):
    return _pyswice.matchw_c(string, templ, wstr, wchr)

def maxd_c(*args):
    return _pyswice.maxd_c(*args)

def maxi_c(*args):
    return _pyswice.maxi_c(*args)

def mequ_c(m1, mout):
    return _pyswice.mequ_c(m1, mout)

def mequg_c(m1, nr, nc, mout):
    return _pyswice.mequg_c(m1, nr, nc, mout)

def mind_c(*args):
    return _pyswice.mind_c(*args)

def mini_c(*args):
    return _pyswice.mini_c(*args)

def moved_(arrfrm, ndim, arrto):
    return _pyswice.moved_(arrfrm, ndim, arrto)

def moved_c(arrfrm, ndim, arrto):
    return _pyswice.moved_c(arrfrm, ndim, arrto)

def mtxm_c(m1, m2, mout):
    return _pyswice.mtxm_c(m1, m2, mout)

def mtxmg_c(m1, m2, row1, col1, col2, mout):
    return _pyswice.mtxmg_c(m1, m2, row1, col1, col2, mout)

def mtxv_c(m1, vin, vout):
    return _pyswice.mtxv_c(m1, vin, vout)

def mtxvg_c(m1, v2, ncol1, nr1r2, vout):
    return _pyswice.mtxvg_c(m1, v2, ncol1, nr1r2, vout)

def mxm_c(m1, m2, mout):
    return _pyswice.mxm_c(m1, m2, mout)

def mxmg_c(m1, m2, row1, col1, col2, mout):
    return _pyswice.mxmg_c(m1, m2, row1, col1, col2, mout)

def mxmt_c(m1, m2, mout):
    return _pyswice.mxmt_c(m1, m2, mout)

def mxmtg_c(m1, m2, nrow1, nc1c2, nrow2, mout):
    return _pyswice.mxmtg_c(m1, m2, nrow1, nc1c2, nrow2, mout)

def mxv_c(m1, vin, vout):
    return _pyswice.mxv_c(m1, vin, vout)

def mxvg_c(m1, v2, nrow1, nc1r2, vout):
    return _pyswice.mxvg_c(m1, v2, nrow1, nc1r2, vout)

def namfrm_c(frname, frcode):
    return _pyswice.namfrm_c(frname, frcode)

def ncpos_c(str, chars, start):
    return _pyswice.ncpos_c(str, chars, start)

def ncposr_c(str, chars, start):
    return _pyswice.ncposr_c(str, chars, start)

def nearpt_c(positn, a, b, c, npoint, alt):
    return _pyswice.nearpt_c(positn, a, b, c, npoint, alt)

def nextwd_c(string, nexlen, reslen, next, rest):
    return _pyswice.nextwd_c(string, nexlen, reslen, next, rest)

def npedln_c(a, b, c, linept, linedr, pnear, dist):
    return _pyswice.npedln_c(a, b, c, linept, linedr, pnear, dist)

def npelpt_c(point, ellips, pnear, dist):
    return _pyswice.npelpt_c(point, ellips, pnear, dist)

def nplnpt_c(linpt, lindir, point, pnear, dist):
    return _pyswice.nplnpt_c(linpt, lindir, point, pnear, dist)

def nthwd_c(string, nth, worlen, word, loc):
    return _pyswice.nthwd_c(string, nth, worlen, word, loc)

def nvc2pl_c(normal, constant, plane):
    return _pyswice.nvc2pl_c(normal, constant, plane)

def nvp2pl_c(normal, point, plane):
    return _pyswice.nvp2pl_c(normal, point, plane)

def occult_c(target1, shape1, frame1, target2, shape2, frame2, abcorr, observer, time, occult_code):
    return _pyswice.occult_c(target1, shape1, frame1, target2, shape2, frame2, abcorr, observer, time, occult_code)

def ordc_c(item, set):
    return _pyswice.ordc_c(item, set)

def ordd_c(item, set):
    return _pyswice.ordd_c(item, set)

def ordi_c(item, set):
    return _pyswice.ordi_c(item, set)

def orderc_c(lenvals, array, ndim, iorder):
    return _pyswice.orderc_c(lenvals, array, ndim, iorder)

def orderd_c(array, ndim, iorder):
    return _pyswice.orderd_c(array, ndim, iorder)

def orderi_c(array, ndim, iorder):
    return _pyswice.orderi_c(array, ndim, iorder)

def oscelt_c(state, et, mu, elts):
    return _pyswice.oscelt_c(state, et, mu, elts)

def oscltx_c(state, et, mu, elts):
    return _pyswice.oscltx_c(state, et, mu, elts)

def pckcls_c(handle):
    return _pyswice.pckcls_c(handle)

def pckcov_c(pck, idcode, cover):
    return _pyswice.pckcov_c(pck, idcode, cover)

def pckfrm_c(pck, ids):
    return _pyswice.pckfrm_c(pck, ids)

def pcklof_c(fname, handle):
    return _pyswice.pcklof_c(fname, handle)

def pckopn_c(name, ifname, ncomch, handle):
    return _pyswice.pckopn_c(name, ifname, ncomch, handle)

def pckuof_c(handle):
    return _pyswice.pckuof_c(handle)

def pckw02_c(handle, clssid, frame, first, last, segid, intlen, n, polydg, cdata, btime):
    return _pyswice.pckw02_c(handle, clssid, frame, first, last, segid, intlen, n, polydg, cdata, btime)

def pcpool_c(name, n, lenvals, cvals):
    return _pyswice.pcpool_c(name, n, lenvals, cvals)

def pdpool_c(name, n, dvals):
    return _pyswice.pdpool_c(name, n, dvals)

def pgrrec_c(body, lon, lat, alt, re, f, rectan):
    return _pyswice.pgrrec_c(body, lon, lat, alt, re, f, rectan)

def phaseq_c(et, target, illumn, obsrvr, abcorr):
    return _pyswice.phaseq_c(et, target, illumn, obsrvr, abcorr)

def pi_c():
    return _pyswice.pi_c()

def pipool_c(name, n, ivals):
    return _pyswice.pipool_c(name, n, ivals)

def pjelpl_c(elin, plane, elout):
    return _pyswice.pjelpl_c(elin, plane, elout)

def pl2nvc_c(plane, normal, constant):
    return _pyswice.pl2nvc_c(plane, normal, constant)

def pl2nvp_c(plane, normal, point):
    return _pyswice.pl2nvp_c(plane, normal, point)

def pl2psv_c(plane, point, span1, span2):
    return _pyswice.pl2psv_c(plane, point, span1, span2)

def pltar_c(nv, vrtces, np, plates):
    return _pyswice.pltar_c(nv, vrtces, np, plates)

def pltexp_c(iverts, delta, overts):
    return _pyswice.pltexp_c(iverts, delta, overts)

def pltnp_c(point, v1, v2, v3, pnear, dist):
    return _pyswice.pltnp_c(point, v1, v2, v3, pnear, dist)

def pltnrm_c(v1, v2, v3, normal):
    return _pyswice.pltnrm_c(v1, v2, v3, normal)

def pltvol_c(nv, vrtces, np, plates):
    return _pyswice.pltvol_c(nv, vrtces, np, plates)

def polyds_c(coeffs, deg, nderiv, t, p):
    return _pyswice.polyds_c(coeffs, deg, nderiv, t, p)

def pos_c(str, substr, start):
    return _pyswice.pos_c(str, substr, start)

def posr_c(str, substr, start):
    return _pyswice.posr_c(str, substr, start)

def prompt_c(prmptStr, lenout, buffer):
    return _pyswice.prompt_c(prmptStr, lenout, buffer)

def prop2b_c(gm, pvinit, dt, pvprop):
    return _pyswice.prop2b_c(gm, pvinit, dt, pvprop)

def prsdp_c(string, dpval):
    return _pyswice.prsdp_c(string, dpval)

def prsint_c(string, intval):
    return _pyswice.prsint_c(string, intval)

def psv2pl_c(point, span1, span2, plane):
    return _pyswice.psv2pl_c(point, span1, span2, plane)

def putcml_c(argc, argv):
    return _pyswice.putcml_c(argc, argv)

def pxform_c(_from, to, et, rotate):
    return _pyswice.pxform_c(_from, to, et, rotate)

def pxfrm2_c(_from, to, etfrom, etto, rotate):
    return _pyswice.pxfrm2_c(_from, to, etfrom, etto, rotate)

def q2m_c(q, r):
    return _pyswice.q2m_c(q, r)

def qcktrc_c(tracelen, trace):
    return _pyswice.qcktrc_c(tracelen, trace)

def qderiv_c(ndim, f0, f2, delta, dfdt):
    return _pyswice.qderiv_c(ndim, f0, f2, delta, dfdt)

def qdq2av_c(q, dq, av):
    return _pyswice.qdq2av_c(q, dq, av)

def qxq_c(q1, q2, qout):
    return _pyswice.qxq_c(q1, q2, qout)

def radrec_c(range, ra, dec, rectan):
    return _pyswice.radrec_c(range, ra, dec, rectan)

def rav2xf_c(rot, av, xform):
    return _pyswice.rav2xf_c(rot, av, xform)

def raxisa_c(matrix, axis, angle):
    return _pyswice.raxisa_c(matrix, axis, angle)

def rdtext_c(file, lenout, line, eof):
    return _pyswice.rdtext_c(file, lenout, line, eof)

def recazl_c(rectan, azccw, elplsz, range, az, el):
    return _pyswice.recazl_c(rectan, azccw, elplsz, range, az, el)

def reccyl_c(rectan, r, lon, z):
    return _pyswice.reccyl_c(rectan, r, lon, z)

def recgeo_c(rectan, re, f, lon, lat, alt):
    return _pyswice.recgeo_c(rectan, re, f, lon, lat, alt)

def reclat_c(rectan, radius, longitude, latitude):
    return _pyswice.reclat_c(rectan, radius, longitude, latitude)

def recpgr_c(body, rectan, re, f, lon, lat, alt):
    return _pyswice.recpgr_c(body, rectan, re, f, lon, lat, alt)

def recrad_c(rectan, radius, ra, dec):
    return _pyswice.recrad_c(rectan, radius, ra, dec)

def reordc_c(iorder, ndim, lenvals, array):
    return _pyswice.reordc_c(iorder, ndim, lenvals, array)

def reordd_c(iorder, ndim, array):
    return _pyswice.reordd_c(iorder, ndim, array)

def reordi_c(iorder, ndim, array):
    return _pyswice.reordi_c(iorder, ndim, array)

def reordl_c(iorder, ndim, array):
    return _pyswice.reordl_c(iorder, ndim, array)

def removc_c(item, set):
    return _pyswice.removc_c(item, set)

def removd_c(item, set):
    return _pyswice.removd_c(item, set)

def removi_c(item, set):
    return _pyswice.removi_c(item, set)

def repmc_c(_in, marker, value, lenout, out):
    return _pyswice.repmc_c(_in, marker, value, lenout, out)

def repmct_c(_in, marker, value, strCase, lenout, out):
    return _pyswice.repmct_c(_in, marker, value, strCase, lenout, out)

def repml_c(_in, marker, value, rtcase, outlen, out):
    return _pyswice.repml_c(_in, marker, value, rtcase, outlen, out)

def repmd_c(_in, marker, value, sigdig, lenout, out):
    return _pyswice.repmd_c(_in, marker, value, sigdig, lenout, out)

def repmf_c(_in, marker, value, sigdig, format, lenout, out):
    return _pyswice.repmf_c(_in, marker, value, sigdig, format, lenout, out)

def repmi_c(_in, marker, value, lenout, out):
    return _pyswice.repmi_c(_in, marker, value, lenout, out)

def repmot_c(_in, marker, value, strCase, lenout, out):
    return _pyswice.repmot_c(_in, marker, value, strCase, lenout, out)

def reset_c():
    return _pyswice.reset_c()

def return_c():
    return _pyswice.return_c()

def recsph_c(rectan, r, colat, lon):
    return _pyswice.recsph_c(rectan, r, colat, lon)

def rotate_c(angle, iaxis, mout):
    return _pyswice.rotate_c(angle, iaxis, mout)

def rotmat_c(m1, angle, iaxis, mout):
    return _pyswice.rotmat_c(m1, angle, iaxis, mout)

def rotvec_c(v1, angle, iaxis, vout):
    return _pyswice.rotvec_c(v1, angle, iaxis, vout)

def rpd_c():
    return _pyswice.rpd_c()

def rquad_c(a, b, c, root1, root2):
    return _pyswice.rquad_c(a, b, c, root1, root2)

def saelgv_c(vec1, vec2, smajor, sminor):
    return _pyswice.saelgv_c(vec1, vec2, smajor, sminor)

def scard_c(card, cell):
    return _pyswice.scard_c(card, cell)

def scdecd_c(sc, sclkdp, sclklen, sclkch):
    return _pyswice.scdecd_c(sc, sclkdp, sclklen, sclkch)

def sce2s_c(sc, et, sclklen, sclkch):
    return _pyswice.sce2s_c(sc, et, sclklen, sclkch)

def sce2c_c(sc, et, sclkdp):
    return _pyswice.sce2c_c(sc, et, sclkdp)

def sce2t_c(sc, et, sclkdp):
    return _pyswice.sce2t_c(sc, et, sclkdp)

def scencd_c(sc, sclkch, sclkdp):
    return _pyswice.scencd_c(sc, sclkch, sclkdp)

def scfmt_c(sc, ticks, clkstrlen, clkstr):
    return _pyswice.scfmt_c(sc, ticks, clkstrlen, clkstr)

def scpart_c(sc, nparts, pstart, pstop):
    return _pyswice.scpart_c(sc, nparts, pstart, pstop)

def scs2e_c(sc, sclkch, et):
    return _pyswice.scs2e_c(sc, sclkch, et)

def sct2e_c(sc, sclkdp, et):
    return _pyswice.sct2e_c(sc, sclkdp, et)

def sctiks_c(sc, clkstr, ticks):
    return _pyswice.sctiks_c(sc, clkstr, ticks)

def sdiff_c(a, b, c):
    return _pyswice.sdiff_c(a, b, c)

def set_c(a, op, b):
    return _pyswice.set_c(a, op, b)

def setmsg_c(msg):
    return _pyswice.setmsg_c(msg)

def shellc_c(ndim, lenvals, array):
    return _pyswice.shellc_c(ndim, lenvals, array)

def shelld_c(ndim, array):
    return _pyswice.shelld_c(ndim, array)

def shelli_c(ndim, array):
    return _pyswice.shelli_c(ndim, array)

def sigerr_c(message):
    return _pyswice.sigerr_c(message)

def sincpt_c(method, target, et, fixref, abcorr, obsrvr, dref, dvec, spoint, trgepc, srfvec, found):
    return _pyswice.sincpt_c(method, target, et, fixref, abcorr, obsrvr, dref, dvec, spoint, trgepc, srfvec, found)

def size_c(size):
    return _pyswice.size_c(size)

def spd_c():
    return _pyswice.spd_c()

def sphcyl_c(radius, colat, slon, r, lon, z):
    return _pyswice.sphcyl_c(radius, colat, slon, r, lon, z)

def sphlat_c(r, colat, lons, radius, lon, lat):
    return _pyswice.sphlat_c(r, colat, lons, radius, lon, lat)

def sphrec_c(r, colat, lon, rectan):
    return _pyswice.sphrec_c(r, colat, lon, rectan)

def spk14a_c(handle, ncsets, coeffs, epochs):
    return _pyswice.spk14a_c(handle, ncsets, coeffs, epochs)

def spk14b_c(handle, segid, body, center, frame, first, last, chbdeg):
    return _pyswice.spk14b_c(handle, segid, body, center, frame, first, last, chbdeg)

def spk14e_c(handle):
    return _pyswice.spk14e_c(handle)

def spkapo_c(targ, et, ref, sobs, abcorr, ptarg, lt):
    return _pyswice.spkapo_c(targ, et, ref, sobs, abcorr, ptarg, lt)

def spkapp_c(targ, et, ref, sobs, abcorr, starg, lt):
    return _pyswice.spkapp_c(targ, et, ref, sobs, abcorr, starg, lt)

def spkacs_c(targ, et, ref, abcorr, obs, starg, lt, dlt):
    return _pyswice.spkacs_c(targ, et, ref, abcorr, obs, starg, lt, dlt)

def spkaps_c(targ, et, ref, abcorr, stobs, accobs, starg, lt, dlt):
    return _pyswice.spkaps_c(targ, et, ref, abcorr, stobs, accobs, starg, lt, dlt)

def spkcls_c(handle):
    return _pyswice.spkcls_c(handle)

def spkcov_c(spk, idcode, cover):
    return _pyswice.spkcov_c(spk, idcode, cover)

def spkcpo_c(target, et, outref, refloc, abcorr, obssta, obsctr, obsref, state, lt):
    return _pyswice.spkcpo_c(target, et, outref, refloc, abcorr, obssta, obsctr, obsref, state, lt)

def spkcpt_c(trgpos, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt):
    return _pyswice.spkcpt_c(trgpos, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt)

def spkcvo_c(target, et, outref, refloc, abcorr, obssta, obsepc, obsctr, obsref, state, lt):
    return _pyswice.spkcvo_c(target, et, outref, refloc, abcorr, obssta, obsepc, obsctr, obsref, state, lt)

def spkcvt_c(trgsta, trgepc, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt):
    return _pyswice.spkcvt_c(trgsta, trgepc, trgctr, trgref, et, outref, refloc, abcorr, obsrvr, state, lt)

def spkez_c(target, epoch, frame, abcorr, observer, state, lt):
    return _pyswice.spkez_c(target, epoch, frame, abcorr, observer, state, lt)

def spkezp_c(targ, et, ref, abcorr, obs, ptarg, lt):
    return _pyswice.spkezp_c(targ, et, ref, abcorr, obs, ptarg, lt)

def spkezr_c(target, epoch, frame, abcorr, observer, state, lt):
    return _pyswice.spkezr_c(target, epoch, frame, abcorr, observer, state, lt)

def spkgeo_c(targ, et, ref, obs, state, lt):
    return _pyswice.spkgeo_c(targ, et, ref, obs, state, lt)

def spkgps_c(targ, et, ref, obs, pos, lt):
    return _pyswice.spkgps_c(targ, et, ref, obs, pos, lt)

def spklef_c(filename, handle):
    return _pyswice.spklef_c(filename, handle)

def spkltc_c(targ, et, ref, abcorr, stobs, starg, lt, dlt):
    return _pyswice.spkltc_c(targ, et, ref, abcorr, stobs, starg, lt, dlt)

def spkobj_c(spk, ids):
    return _pyswice.spkobj_c(spk, ids)

def spkopa_c(file, handle):
    return _pyswice.spkopa_c(file, handle)

def spkopn_c(name, ifname, ncomch, handle):
    return _pyswice.spkopn_c(name, ifname, ncomch, handle)

def spkpds_c(body, center, frame, type, first, last, descr):
    return _pyswice.spkpds_c(body, center, frame, type, first, last, descr)

def spkpos_c(targ, et, ref, abcorr, obs, ptarg, lt):
    return _pyswice.spkpos_c(targ, et, ref, abcorr, obs, ptarg, lt)

def spkpvn_c(handle, descr, et, ref, state, center):
    return _pyswice.spkpvn_c(handle, descr, et, ref, state, center)

def spksfs_c(body, et, idlen, handle, descr, ident, found):
    return _pyswice.spksfs_c(body, et, idlen, handle, descr, ident, found)

def spkssb_c(targ, et, ref, starg):
    return _pyswice.spkssb_c(targ, et, ref, starg)

def spksub_c(handle, descr, ident, begin, end, newh):
    return _pyswice.spksub_c(handle, descr, ident, begin, end, newh)

def spkuds_c(descr, body, center, frame, type, first, last, begin, end):
    return _pyswice.spkuds_c(descr, body, center, frame, type, first, last, begin, end)

def spkuef_c(handle):
    return _pyswice.spkuef_c(handle)

def spkw02_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime):
    return _pyswice.spkw02_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime)

def spkw03_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime):
    return _pyswice.spkw03_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, btime)

def spkw05_c(handle, body, center, frame, first, last, segid, gm, n, states, epochs):
    return _pyswice.spkw05_c(handle, body, center, frame, first, last, segid, gm, n, states, epochs)

def spkw08_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch1, step):
    return _pyswice.spkw08_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch1, step)

def spkw09_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs):
    return _pyswice.spkw09_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs)

def spkw10_c(handle, body, center, frame, first, last, segid, consts, n, elems, epochs):
    return _pyswice.spkw10_c(handle, body, center, frame, first, last, segid, consts, n, elems, epochs)

def spkw12_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch0, step):
    return _pyswice.spkw12_c(handle, body, center, frame, first, last, segid, degree, n, states, epoch0, step)

def spkw13_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs):
    return _pyswice.spkw13_c(handle, body, center, frame, first, last, segid, degree, n, states, epochs)

def spkw15_c(handle, body, center, frame, first, last, segid, epoch, tp, pa, p, ecc, j2flg, pv, gm, j2, radius):
    return _pyswice.spkw15_c(handle, body, center, frame, first, last, segid, epoch, tp, pa, p, ecc, j2flg, pv, gm, j2, radius)

def spkw17_c(handle, body, center, frame, first, last, segid, epoch, eqel, rapol, decpol):
    return _pyswice.spkw17_c(handle, body, center, frame, first, last, segid, epoch, eqel, rapol, decpol)

def spkw18_c(handle, subtyp, body, center, frame, first, last, segid, degree, n, packts, epochs):
    return _pyswice.spkw18_c(handle, subtyp, body, center, frame, first, last, segid, degree, n, packts, epochs)

def spkw20_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, dscale, tscale, initjd, initfr):
    return _pyswice.spkw20_c(handle, body, center, frame, first, last, segid, intlen, n, polydg, cdata, dscale, tscale, initjd, initfr)

def srfrec_c(body, lon, lat, rectan):
    return _pyswice.srfrec_c(body, lon, lat, rectan)

def srfc2s_c(code, bodyid, srflen, srfstr, isname):
    return _pyswice.srfc2s_c(code, bodyid, srflen, srfstr, isname)

def srfcss_c(code, bodstr, srflen, srfstr, isname):
    return _pyswice.srfcss_c(code, bodstr, srflen, srfstr, isname)

def srfnrm_c(method, target, et, fixref, npts, srfpts, normls):
    return _pyswice.srfnrm_c(method, target, et, fixref, npts, srfpts, normls)

def srfs2c_c(srfstr, bodstr, code, found):
    return _pyswice.srfs2c_c(srfstr, bodstr, code, found)

def srfscc_c(surfce, bodyid, surfid, found):
    return _pyswice.srfscc_c(surfce, bodyid, surfid, found)

def srfxpt_c(method, target, et, abcorr, obsrvr, dref, dvec, spoint, dist, trgepc, obspos, found):
    return _pyswice.srfxpt_c(method, target, et, abcorr, obsrvr, dref, dvec, spoint, dist, trgepc, obspos, found)

def ssize_c(size, cell):
    return _pyswice.ssize_c(size, cell)

def stelab_c(pobj, vobs, appobj):
    return _pyswice.stelab_c(pobj, vobs, appobj)

def stlabx_c(pobj, vobs, corpos):
    return _pyswice.stlabx_c(pobj, vobs, corpos)

def stpool_c(item, nth, contin, lenout, string, size, found):
    return _pyswice.stpool_c(item, nth, contin, lenout, string, size, found)

def str2et_c(date, et):
    return _pyswice.str2et_c(date, et)

def subpnt_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec):
    return _pyswice.subpnt_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec)

def subpt_c(method, target, et, abcorr, obsrvr, spoint, alt):
    return _pyswice.subpt_c(method, target, et, abcorr, obsrvr, spoint, alt)

def subpt_pl02(handle, dladsc, method, target, et, abcorr, obsrvr, spoint, alt, plateID):
    return _pyswice.subpt_pl02(handle, dladsc, method, target, et, abcorr, obsrvr, spoint, alt, plateID)

def subslr_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec):
    return _pyswice.subslr_c(method, target, et, fixref, abcorr, obsrvr, spoint, trgepc, srfvec)

def subsol_c(method, target, et, abcorr, obsrvr, spoint):
    return _pyswice.subsol_c(method, target, et, abcorr, obsrvr, spoint)

def subsol_pl02(handle, dladsc, method, target, et, abcorr, obsrvr, spoint, dist, plateID):
    return _pyswice.subsol_pl02(handle, dladsc, method, target, et, abcorr, obsrvr, spoint, dist, plateID)

def sumad_c(array, n):
    return _pyswice.sumad_c(array, n)

def sumai_c(array, n):
    return _pyswice.sumai_c(array, n)

def surfnm_c(a, b, c, point, normal):
    return _pyswice.surfnm_c(a, b, c, point, normal)

def surfpt_c(positn, u, a, b, c, point, found):
    return _pyswice.surfpt_c(positn, u, a, b, c, point, found)

def surfpv_c(stvrtx, stdir, a, b, c, stx, found):
    return _pyswice.surfpv_c(stvrtx, stdir, a, b, c, stx, found)

def swpool_c(agent, nnames, lenvals, names):
    return _pyswice.swpool_c(agent, nnames, lenvals, names)

def sxform_c(_from, to, et, xform):
    return _pyswice.sxform_c(_from, to, et, xform)

def szpool_c(name, n, found):
    return _pyswice.szpool_c(name, n, found)

def tangpt_c(method, target, et, fixref, abcorr, corloc, obsrvr, dref, dvec, tanpt, alt, range, srfpt, trgepc, srfvec):
    return _pyswice.tangpt_c(method, target, et, fixref, abcorr, corloc, obsrvr, dref, dvec, tanpt, alt, range, srfpt, trgepc, srfvec)

def term_pl02(handle, dladsc, trmtyp, source, target, et, fixref, abcorr, obsrvr, npoints, trgepc, obspos, trmpts, plateIDs):
    return _pyswice.term_pl02(handle, dladsc, trmtyp, source, target, et, fixref, abcorr, obsrvr, npoints, trgepc, obspos, trmpts, plateIDs)

def termpt_c(method, ilusrc, target, et, fixref, abcorr, corloc, obsrvr, refvec, rolstp, ncuts, schstp, soltol, maxn, npts, points, epochs, tangts):
    return _pyswice.termpt_c(method, ilusrc, target, et, fixref, abcorr, corloc, obsrvr, refvec, rolstp, ncuts, schstp, soltol, maxn, npts, points, epochs, tangts)

def timdef_c(action, item, lenout, value):
    return _pyswice.timdef_c(action, item, lenout, value)

def timout_c(et, pictur, lenout, output):
    return _pyswice.timout_c(et, pictur, lenout, output)

def tipbod_c(ref, body, et, tipm):
    return _pyswice.tipbod_c(ref, body, et, tipm)

def tisbod_c(ref, body, et, tsipm):
    return _pyswice.tisbod_c(ref, body, et, tsipm)

def tkfram_c(frcode, rot, frame, found):
    return _pyswice.tkfram_c(frcode, rot, frame, found)

def tkvrsn_c(item):
    return _pyswice.tkvrsn_c(item)

def tparch_c(type):
    return _pyswice.tparch_c(type)

def tparse_c(string, lenout, sp2000, errmsg):
    return _pyswice.tparse_c(string, lenout, sp2000, errmsg)

def tpictr_c(sample, lenpictur, lenerror, pictur, ok, error):
    return _pyswice.tpictr_c(sample, lenpictur, lenerror, pictur, ok, error)

def trace_c(matrix):
    return _pyswice.trace_c(matrix)

def trcdep_c(depth):
    return _pyswice.trcdep_c(depth)

def trcnam_c(index, namelen, name):
    return _pyswice.trcnam_c(index, namelen, name)

def trcoff_c():
    return _pyswice.trcoff_c()

def trgsep_c(et, targ1, shape1, frame1, targ2, shape2, frame2, obsrvr, abcorr):
    return _pyswice.trgsep_c(et, targ1, shape1, frame1, targ2, shape2, frame2, obsrvr, abcorr)

def tsetyr_c(year):
    return _pyswice.tsetyr_c(year)

def twopi_c():
    return _pyswice.twopi_c()

def twovec_c(axdef, indexa, plndef, indexp, mout):
    return _pyswice.twovec_c(axdef, indexa, plndef, indexp, mout)

def twovxf_c(axdef, indexa, plndef, indexp, xform):
    return _pyswice.twovxf_c(axdef, indexa, plndef, indexp, xform)

def tyear_c():
    return _pyswice.tyear_c()

def ucase_c(_in, lenout, out):
    return _pyswice.ucase_c(_in, lenout, out)

def ucrss_c(v1, v2, vout):
    return _pyswice.ucrss_c(v1, v2, vout)

def uddc_c(udfunc, x, dx, isdecr):
    return _pyswice.uddc_c(udfunc, x, dx, isdecr)

def uddf_c(udfunc, x, dx, deriv):
    return _pyswice.uddf_c(udfunc, x, dx, deriv)

def udf_c(x, value):
    return _pyswice.udf_c(x, value)

def union_c(a, b, c):
    return _pyswice.union_c(a, b, c)

def unitim_c(epoch, insys, outsys):
    return _pyswice.unitim_c(epoch, insys, outsys)

def unload_c(file):
    return _pyswice.unload_c(file)

def unorm_c(v1, vout, vmag):
    return _pyswice.unorm_c(v1, vout, vmag)

def unormg_c(v1, ndim, vout, vmag):
    return _pyswice.unormg_c(v1, ndim, vout, vmag)

def utc2et_c(utcstr, et):
    return _pyswice.utc2et_c(utcstr, et)

def vadd_c(v1, v2, vout):
    return _pyswice.vadd_c(v1, v2, vout)

def vaddg_c(v1, v2, ndim, vout):
    return _pyswice.vaddg_c(v1, v2, ndim, vout)

def valid_c(size, n, a):
    return _pyswice.valid_c(size, n, a)

def vcrss_c(v1, v2, vout):
    return _pyswice.vcrss_c(v1, v2, vout)

def vdist_c(v1, v2):
    return _pyswice.vdist_c(v1, v2)

def vdistg_c(v1, v2, ndim):
    return _pyswice.vdistg_c(v1, v2, ndim)

def vdot_c(v1, v2):
    return _pyswice.vdot_c(v1, v2)

def vdotg_c(v1, v2, ndim):
    return _pyswice.vdotg_c(v1, v2, ndim)

def vequ_c(vin, vout):
    return _pyswice.vequ_c(vin, vout)

def vequg_c(vin, ndim, vout):
    return _pyswice.vequg_c(vin, ndim, vout)

def vhat_c(v1, vout):
    return _pyswice.vhat_c(v1, vout)

def vhatg_c(v1, ndim, vout):
    return _pyswice.vhatg_c(v1, ndim, vout)

def vlcom_c(a, v1, b, v2, sum):
    return _pyswice.vlcom_c(a, v1, b, v2, sum)

def vlcom3_c(a, v1, b, v2, c, v3, sum):
    return _pyswice.vlcom3_c(a, v1, b, v2, c, v3, sum)

def vlcomg_c(n, a, v1, b, v2, sum):
    return _pyswice.vlcomg_c(n, a, v1, b, v2, sum)

def vminug_c(vin, ndim, vout):
    return _pyswice.vminug_c(vin, ndim, vout)

def vminus_c(v1, vout):
    return _pyswice.vminus_c(v1, vout)

def vnorm_c(v1):
    return _pyswice.vnorm_c(v1)

def vnormg_c(v1, ndim):
    return _pyswice.vnormg_c(v1, ndim)

def vpack_c(x, y, z, v):
    return _pyswice.vpack_c(x, y, z, v)

def vperp_c(a, b, p):
    return _pyswice.vperp_c(a, b, p)

def vprjp_c(vin, plane, vout):
    return _pyswice.vprjp_c(vin, plane, vout)

def vprjpi_c(vin, projpl, invpl, vout, found):
    return _pyswice.vprjpi_c(vin, projpl, invpl, vout, found)

def vprojg_c(a, b, ndim, p):
    return _pyswice.vprojg_c(a, b, ndim, p)

def vproj_c(a, b, p):
    return _pyswice.vproj_c(a, b, p)

def vrel_c(v1, v2):
    return _pyswice.vrel_c(v1, v2)

def vrelg_c(v1, v2, ndim):
    return _pyswice.vrelg_c(v1, v2, ndim)

def vrotv_c(v, axis, theta, r):
    return _pyswice.vrotv_c(v, axis, theta, r)

def vscl_c(s, v1, vout):
    return _pyswice.vscl_c(s, v1, vout)

def vsclg_c(s, v1, ndim, vout):
    return _pyswice.vsclg_c(s, v1, ndim, vout)

def vsep_c(v1, v2):
    return _pyswice.vsep_c(v1, v2)

def vsub_c(v1, v2, vout):
    return _pyswice.vsub_c(v1, v2, vout)

def vsubg_c(v1, v2, ndim, vout):
    return _pyswice.vsubg_c(v1, v2, ndim, vout)

def vsepg_c(v1, v2, ndim):
    return _pyswice.vsepg_c(v1, v2, ndim)

def vtmv_c(v1, matrix, v2):
    return _pyswice.vtmv_c(v1, matrix, v2)

def vtmvg_c(v1, matrix, v2, nrow, ncol):
    return _pyswice.vtmvg_c(v1, matrix, v2, nrow, ncol)

def vupack_c(v, x, y, z):
    return _pyswice.vupack_c(v, x, y, z)

def vzero_c(v):
    return _pyswice.vzero_c(v)

def vzerog_c(v, ndim):
    return _pyswice.vzerog_c(v, ndim)

def wncard_c(window):
    return _pyswice.wncard_c(window)

def wncomd_c(left, right, window, result):
    return _pyswice.wncomd_c(left, right, window, result)

def wncond_c(left, right, window):
    return _pyswice.wncond_c(left, right, window)

def wndifd_c(a, b, c):
    return _pyswice.wndifd_c(a, b, c)

def wnelmd_c(point, window):
    return _pyswice.wnelmd_c(point, window)

def wnexpd_c(left, right, window):
    return _pyswice.wnexpd_c(left, right, window)

def wnextd_c(side, window):
    return _pyswice.wnextd_c(side, window)

def wnfetd_c(window, n, left, right):
    return _pyswice.wnfetd_c(window, n, left, right)

def wnfild_c(sml, window):
    return _pyswice.wnfild_c(sml, window)

def wnfltd_c(sml, window):
    return _pyswice.wnfltd_c(sml, window)

def wnincd_c(left, right, window):
    return _pyswice.wnincd_c(left, right, window)

def wninsd_c(left, right, window):
    return _pyswice.wninsd_c(left, right, window)

def wnintd_c(a, b, c):
    return _pyswice.wnintd_c(a, b, c)

def wnreld_c(a, op, b):
    return _pyswice.wnreld_c(a, op, b)

def wnsumd_c(window, meas, avg, stddev, shortest, longest):
    return _pyswice.wnsumd_c(window, meas, avg, stddev, shortest, longest)

def wnunid_c(a, b, c):
    return _pyswice.wnunid_c(a, b, c)

def wnvald_c(size, n, window):
    return _pyswice.wnvald_c(size, n, window)

def xf2eul_c(xform, axisa, axisb, axisc, eulang, unique):
    return _pyswice.xf2eul_c(xform, axisa, axisb, axisc, eulang, unique)

def xf2rav_c(xform, rot, av):
    return _pyswice.xf2rav_c(xform, rot, av)

def xfmsta_c(input_state, input_coord_sys, output_coord_sys, body, output_state):
    return _pyswice.xfmsta_c(input_state, input_coord_sys, output_coord_sys, body, output_state)

def xpose_c(m1, mout):
    return _pyswice.xpose_c(m1, mout)

def xpose6_c(m1, mout):
    return _pyswice.xpose6_c(m1, mout)

def xposeg_c(matrix, nrow, ncol, xposem):
    return _pyswice.xposeg_c(matrix, nrow, ncol, xposem)

def zzgetcml_c(argc, argv, init):
    return _pyswice.zzgetcml_c(argc, argv, init)

def zzgfgeth_c():
    return _pyswice.zzgfgeth_c()

def zzgfsavh_c(status):
    return _pyswice.zzgfsavh_c(status)

def zzsynccl_c(xdir, cell):
    return _pyswice.zzsynccl_c(xdir, cell)

