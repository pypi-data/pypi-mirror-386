# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import mt5_term_api_health_check_pb2 as mt5__term__api__health__check__pb2


class HealthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Check = channel.unary_unary(
                '/mt5_term_api.Health/Check',
                request_serializer=mt5__term__api__health__check__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=mt5__term__api__health__check__pb2.HealthCheckReply.FromString,
                )
        self.StopListening = channel.unary_unary(
                '/mt5_term_api.Health/StopListening',
                request_serializer=mt5__term__api__health__check__pb2.StopListeningRequest.SerializeToString,
                response_deserializer=mt5__term__api__health__check__pb2.StopListeningReply.FromString,
                )


class HealthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopListening(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HealthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=mt5__term__api__health__check__pb2.HealthCheckRequest.FromString,
                    response_serializer=mt5__term__api__health__check__pb2.HealthCheckReply.SerializeToString,
            ),
            'StopListening': grpc.unary_unary_rpc_method_handler(
                    servicer.StopListening,
                    request_deserializer=mt5__term__api__health__check__pb2.StopListeningRequest.FromString,
                    response_serializer=mt5__term__api__health__check__pb2.StopListeningReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mt5_term_api.Health', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Health(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt5_term_api.Health/Check',
            mt5__term__api__health__check__pb2.HealthCheckRequest.SerializeToString,
            mt5__term__api__health__check__pb2.HealthCheckReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopListening(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mt5_term_api.Health/StopListening',
            mt5__term__api__health__check__pb2.StopListeningRequest.SerializeToString,
            mt5__term__api__health__check__pb2.StopListeningReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
