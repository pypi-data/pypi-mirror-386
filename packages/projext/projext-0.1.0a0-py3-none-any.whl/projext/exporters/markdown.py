
from pathlib import Path
from typing import Iterable, Dict, Any


def to_markdown(documents: Iterable[Dict[str, Any]], root_dir: Path) -> str:
    """Converts a list of file information dicts to a Markdown string."""
    output = ["# 🧩 Project Tree (generated by projext v0.1.0)\n"]

    current_dir = None

    for doc in sorted(documents, key=lambda x: x["path"]):
        file_path = doc["path"]
        relative_path = file_path.relative_to(root_dir)

        if relative_path.parent != current_dir:
            current_dir = relative_path.parent
            output.append(f"## 📁 {current_dir}/\n")

        lang_map = {"py": "python", "js": "javascript", "ts": "typescript", "md": "markdown"}
        lang_ext = file_path.suffix.lstrip(".")
        lang = lang_map.get(lang_ext, lang_ext)
        output.append(f"### 📄 {file_path.name} ({doc['size']} bytes) [mode: {doc['mode']}]\n")
        output.append(f"```{lang}\n{doc['content']}\n```\n")

    return "\n".join(output)
