# Advanced Action-Specific Condition Enforcement Configuration
# Demonstrates all_of/any_of logic for both actions and conditions

enable_builtin_checks: true

checks:
  action_condition_enforcement:
    enabled: true
    severity: error
    description: "Enforce specific conditions for specific actions with all_of/any_of support"

    action_condition_requirements:
      # ============================================================
      # EXAMPLE 1: BASIC USAGE (Backward Compatible)
      # ============================================================
      - actions:
          - "iam:PassRole"
        required_conditions:
          - condition_key: "iam:PassedToService"
            description: "Specify which AWS services are allowed to use the passed role"
            example: |
              "Condition": {
                "StringEquals": {
                  "iam:PassedToService": ["lambda.amazonaws.com"]
                }
              }

      # ============================================================
      # EXAMPLE 2: all_of for ACTIONS
      # All specified actions must be present in the statement
      # ============================================================
      - actions:
          all_of:
            - "s3:PutObject"
            - "s3:PutObjectAcl"
        required_conditions:
          - condition_key: "aws:SecureTransport"
            expected_value: true
            description: "When setting both object and ACL, require HTTPS"

      # ============================================================
      # EXAMPLE 3: any_of for ACTIONS
      # At least one of the specified actions must be present
      # ============================================================
      - actions:
          any_of:
            - "s3:DeleteObject"
            - "s3:DeleteBucket"
            - "dynamodb:DeleteTable"
            - "rds:DeleteDBInstance"
        required_conditions:
          - condition_key: "aws:MultiFactorAuthPresent"
            expected_value: true
            description: "Destructive operations require MFA"

      # ============================================================
      # EXAMPLE 4: all_of for CONDITIONS
      # All specified conditions must be present
      # ============================================================
      - actions:
          - "ec2:RunInstances"
        required_conditions:
          all_of:
            - condition_key: "aws:RequestTag/Environment"
              description: "Instances must be tagged with Environment"
            - condition_key: "aws:RequestTag/Owner"
              description: "Instances must be tagged with Owner"
            - condition_key: "aws:RequestTag/CostCenter"
              description: "Instances must be tagged with CostCenter"

      # ============================================================
      # EXAMPLE 5: any_of for CONDITIONS
      # At least one condition must be present
      # ============================================================
      - actions:
          - "s3:GetObject"
          - "s3:PutObject"
        required_conditions:
          any_of:
            - condition_key: "aws:SourceIp"
              description: "Access from corporate IP"
            - condition_key: "aws:SourceVpce"
              description: "Access via VPC endpoint"
            - condition_key: "aws:PrincipalOrgID"
              description: "Access from organization"

      # ============================================================
      # EXAMPLE 6: COMPLEX - Nested all_of and any_of
      # Combines both all_of AND any_of conditions
      # ============================================================
      - actions:
          all_of:
            - "cloudformation:CreateStack"
            - "cloudformation:UpdateStack"
        required_conditions:
          all_of:  # These conditions MUST all be present
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for infrastructure changes"
            - condition_key: "aws:RequestedRegion"
              description: "Must specify approved region"
          any_of:  # PLUS at least one of these
            - condition_key: "aws:SourceIp"
              description: "From corporate network"
            - condition_key: "aws:SourceVpce"
              description: "Via VPC endpoint"

      # ============================================================
      # EXAMPLE 7: Production Deployment Protection
      # Complex real-world scenario
      # ============================================================
      - actions:
          any_of:
            - "lambda:UpdateFunctionCode"
            - "lambda:PublishVersion"
            - "ecs:UpdateService"
            - "elasticbeanstalk:UpdateEnvironment"
        required_conditions:
          all_of:
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for production deployments"
            - condition_key: "aws:RequestedRegion"
              description: "Deployment region must be specified"
            - condition_key: "aws:RequestTag/Environment"
              description: "Must tag resources with environment"
          any_of:
            - condition_key: "aws:SourceIp"
              description: "Deploy from corporate network or VPN"
            - condition_key: "aws:userid"
              description: "Deploy from approved automation role"

      # ============================================================
      # EXAMPLE 8: Data Protection - Sensitive Data Access
      # ============================================================
      - actions:
          any_of:
            - "s3:GetObject"
            - "dynamodb:GetItem"
            - "rds:DescribeDBSnapshots"
        action_patterns:
          - ".*production.*"
          - ".*pii.*"
          - ".*sensitive.*"
        required_conditions:
          all_of:
            - condition_key: "aws:SecureTransport"
              expected_value: true
              description: "HTTPS required for sensitive data"
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for sensitive data access"
          any_of:
            - condition_key: "aws:SourceIp"
              description: "From corporate network"
            - condition_key: "aws:SourceVpce"
              description: "Via secure VPC endpoint"

      # ============================================================
      # EXAMPLE 9: Cross-Account Access Controls
      # ============================================================
      - actions:
          - "sts:AssumeRole"
        required_conditions:
          all_of:
            - condition_key: "sts:ExternalId"
              description: "External ID required for cross-account assume role"
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for assuming roles"

      # ============================================================
      # EXAMPLE 10: Administrative Actions
      # Using wildcards directly in actions (NEW!)
      # ============================================================
      - actions:
          any_of:
            - "iam:Create*"      # Wildcard support
            - "iam:Delete*"      # Matches iam:DeleteUser, iam:DeleteRole, etc.
            - "iam:Update*"
            - "iam:Put*Policy"
        required_conditions:
          all_of:
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for IAM changes"
            - condition_key: "aws:RequestedRegion"
              description: "Region must be specified"
          any_of:
            - condition_key: "aws:SourceIp"
              description: "From corporate IP range"
            - condition_key: "aws:userid"
              description: "From approved admin role"

      # ============================================================
      # EXAMPLE 10b: Using action_patterns for Regex (Alternative)
      # ============================================================
      - action_patterns:
          - "^iam:Create.*"
          - "^iam:Delete.*"
          - "^iam:Update.*"
          - "^iam:Put.*Policy$"
        required_conditions:
          all_of:
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
              description: "MFA required for IAM changes"
            - condition_key: "aws:RequestedRegion"
              description: "Region must be specified"
          any_of:
            - condition_key: "aws:SourceIp"
              description: "From corporate IP range"
            - condition_key: "aws:userid"
              description: "From approved admin role"

      # ============================================================
      # EXAMPLE 11: Time-Based Restrictions
      # Combine with time-based access control
      # ============================================================
      - actions:
          any_of:
            - "ec2:TerminateInstances"
            - "rds:DeleteDBInstance"
            - "s3:DeleteBucket"
        required_conditions:
          all_of:
            - condition_key: "aws:MultiFactorAuthPresent"
              expected_value: true
            - condition_key: "aws:CurrentTime"
              description: "Must specify time restrictions for destructive operations"

      # ============================================================
      # EXAMPLE 12: Resource Encryption Enforcement
      # ============================================================
      - actions:
          all_of:
            - "s3:PutObject"
        required_conditions:
          any_of:
            - condition_key: "s3:x-amz-server-side-encryption"
              description: "S3 server-side encryption"
            - condition_key: "s3:x-amz-server-side-encryption-aws-kms-key-id"
              description: "KMS encryption key ID"
