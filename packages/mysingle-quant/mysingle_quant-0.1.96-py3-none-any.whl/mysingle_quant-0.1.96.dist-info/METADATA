Metadata-Version: 2.4
Name: mysingle-quant
Version: 0.1.96
Summary: Common utilities and configurations for Quant Platform microservices
Requires-Python: >=3.12
Requires-Dist: aiohttp>=3.9.4
Requires-Dist: beanie>=1.23.6
Requires-Dist: colorlog>=6.9.0
Requires-Dist: duckdb>=1.1.0
Requires-Dist: email-validator>=2.2.0
Requires-Dist: emails>=0.6
Requires-Dist: fastapi>=0.104.1
Requires-Dist: httpx-oauth>=0.16.1
Requires-Dist: httpx>=0.25.2
Requires-Dist: jinja2>=3.1.6
Requires-Dist: makefun>=1.16.0
Requires-Dist: motor>=3.3.2
Requires-Dist: prometheus-client>=0.19.0
Requires-Dist: pwdlib[argon2,bcrypt]>=0.2.1
Requires-Dist: pydantic-settings>=2.1.0
Requires-Dist: pydantic>=2.5.0
Requires-Dist: pyjwt>=2.10.1
Requires-Dist: python-multipart>=0.0.6
Requires-Dist: redis>=6.4.0
Requires-Dist: structlog>=23.2.0
Requires-Dist: uvicorn[standard]>=0.24.0
Provides-Extra: dev
Requires-Dist: httpx>=0.26.0; extra == 'dev'
Requires-Dist: mypy>=1.8.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.1; extra == 'dev'
Requires-Dist: pytest>=7.4.3; extra == 'dev'
Requires-Dist: ruff>=0.1.9; extra == 'dev'
Description-Content-Type: text/markdown

# MySingle Quant

Common utilities and configurations for Quant Platform microservices.

## 📦 Installation

### Basic Installation
```bash
pip install mysingle-quant
```
Installs only core dependencies (`pydantic`, `pydantic-settings`).

### Feature-specific Installation
```bash
# Authentication features
pip install mysingle-quant[auth]

# Web framework features
pip install mysingle-quant[web]

# Database features
pip install mysingle-quant[database]

# Email features
pip install mysingle-quant[email]

# Monitoring features
pip install mysingle-quant[monitoring]

# All features
pip install mysingle-quant[full]

# Development tools
pip install mysingle-quant[dev]
```

### Combined Installation
```bash
# Web + Auth + Database
pip install mysingle-quant[web,auth,database]

# Full features + development tools
pip install mysingle-quant[full,dev]
```

## 🚀 Quick Start

### Basic Usage
```python
from mysingle_quant.core import create_fastapi_app
from mysingle_quant.core.config import settings

# Create FastAPI app with common configurations
app = create_fastapi_app()

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
```

### With Authentication
```python
from mysingle_quant.core import create_fastapi_app
from mysingle_quant.auth import get_user_manager
from mysingle_quant.auth.router import auth_router

app = create_fastapi_app()
app.include_router(auth_router, prefix="/auth")
```

### With Database
```python
from mysingle_quant.core import create_fastapi_app
from mysingle_quant.core.db import init_db

app = create_fastapi_app()

@app.on_event("startup")
async def startup():
    await init_db()
```

## 📋 Features

- **🔐 Authentication**: JWT-based auth with OAuth support
- **🌐 Web Framework**: FastAPI with common configurations
- **🗄️ Database**: MongoDB with Beanie ODM
- **📧 Email**: Template-based email system
- **📊 Monitoring**: Prometheus metrics and structured logging
- **⚙️ Configuration**: Pydantic-based settings management

## 📝 Available Dependencies by Feature

### Core (always installed)
- `pydantic>=2.5.0`
- `pydantic-settings>=2.1.0`

### Auth
- `httpx-oauth>=0.16.1`
- `pyjwt>=2.10.1`
- `pwdlib>=0.2.1`

### Web
- `fastapi>=0.104.1`
- `uvicorn[standard]>=0.24.0`
- `python-multipart>=0.0.6`

### Database
- `motor>=3.3.2`
- `beanie>=1.23.6`
- `redis>=6.4.0`

### Email
- `emails>=0.6`
- `jinja2>=3.1.6`

### Monitoring
- `prometheus-client>=0.19.0`
- `structlog>=23.2.0`

## 🛠️ Development

```bash
# Clone repository
git clone <repo-url>
cd quant-pack

# Install with development dependencies
pip install -e .[full,dev]

# Run tests
pytest

# Format code
black src/
ruff check src/ --fix

# Type checking
mypy src/mysingle_quant/
```

## 📄 License

This project is licensed under the MIT License.
