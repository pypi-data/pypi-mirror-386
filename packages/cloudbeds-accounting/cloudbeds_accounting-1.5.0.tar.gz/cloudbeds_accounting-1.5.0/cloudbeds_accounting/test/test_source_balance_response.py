# coding: utf-8

"""
    Accounting service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cloudbeds_accounting.models.source_balance_response import SourceBalanceResponse

class TestSourceBalanceResponse(unittest.TestCase):
    """SourceBalanceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceBalanceResponse:
        """Test SourceBalanceResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceBalanceResponse`
        """
        model = SourceBalanceResponse()
        if include_optional:
            return SourceBalanceResponse(
                currency = '',
                currency_scale = 56,
                grand_total = 1.337,
                subtotal = 1.337,
                additional_items = 1.337,
                ar_transfer = 1.337,
                amount_paid = 1.337,
                refund_issued = 1.337,
                upcoming_payments = 1.337,
                upcoming_refund = 1.337,
                cancellation_fee = 1.337,
                no_show_fee = 1.337,
                tax_breakdown = [
                    cloudbeds_accounting.models.balance_breakdown_item.BalanceBreakdownItem(
                        name = '', 
                        amount = 1.337, )
                    ],
                fee_breakdown = [
                    cloudbeds_accounting.models.balance_breakdown_item.BalanceBreakdownItem(
                        name = '', 
                        amount = 1.337, )
                    ],
                balance_due = 1.337,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SourceBalanceResponse(
        )
        """

    def testSourceBalanceResponse(self):
        """Test SourceBalanceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
