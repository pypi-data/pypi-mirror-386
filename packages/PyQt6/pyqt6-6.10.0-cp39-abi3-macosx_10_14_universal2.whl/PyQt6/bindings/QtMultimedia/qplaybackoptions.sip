// qplaybackoptions.sip generated by MetaSIP
//
// This file is part of the QtMultimedia Python extension module.
//
// Copyright (c) 2025 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt6.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_6_10_0 -)

class QPlaybackOptions
{
%TypeHeaderCode
#include <qplaybackoptions.h>
%End

public:
    enum class PlaybackIntent
    {
        Playback,
        LowLatencyStreaming,
    };

    QPlaybackOptions();
    QPlaybackOptions(const QPlaybackOptions &);
    ~QPlaybackOptions();
    void swap(QPlaybackOptions &other /Constrained/);
    std::chrono::milliseconds networkTimeout() const;
    void setNetworkTimeout(std::chrono::milliseconds timeout);
    void resetNetworkTimeout();
    QPlaybackOptions::PlaybackIntent playbackIntent() const;
    void setPlaybackIntent(QPlaybackOptions::PlaybackIntent intent);
    void resetPlaybackIntent();
    qsizetype probeSize() const;
    void setProbeSize(qsizetype probeSizeBytes);
    void resetProbeSize();
};

%End
%If (Qt_6_10_0 -)
bool operator>=(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
%If (Qt_6_10_0 -)
bool operator<=(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
%If (Qt_6_10_0 -)
bool operator>(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
%If (Qt_6_10_0 -)
bool operator<(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
%If (Qt_6_10_0 -)
bool operator!=(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
%If (Qt_6_10_0 -)
bool operator==(const QPlaybackOptions &lhs, const QPlaybackOptions &rhs);
%End
