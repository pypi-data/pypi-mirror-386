# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

[build-system]
requires = ["hatchling>=1.24", "hatch-vcs>=0.4"]
build-backend = "hatchling.build"

[project]
name = "dependamerge"
dynamic = ["version"]
description = "Bulk pull request management tool for GitHub organisations"
authors = [
    { name = "Matthew Watkins", email = "93649628+ModeSevenIndustrialSolutions@users.noreply.github.com" },
]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10,<3.14"
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development",
]
dependencies = [
  "aiolimiter>=1.1.0",
  "httpx[http2]>=0.27.0",

  "pydantic>=2.0.0",
  "requests>=2.31.0",
  "rich>=13.0.0",
  "tenacity>=8.2.0",
  "typer>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/lfit/dependamerge"
Repository = "https://github.com/lfit/dependamerge"
Downloads = "https://github.com/lfit/dependamerge/releases"
"Bug Tracker" = "https://github.com/lfit/dependamerge/issues"
Documentation = "https://github.com/lfit/dependamerge/tree/main/docs"
"Source Code" = "https://github.com/lfit/dependamerge"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-mock>=3.15.0",
    "responses>=0.25.8",
    "black>=25.1.0",
    "flake8>=7.3.0",
    "mypy>=1.17.1",
    "pyflakes>=3.4.0",
    "types-requests>=2.32.4.20250809",
]

[project.scripts]
dependamerge = "dependamerge.cli:app"

# Hatch dynamic versioning from VCS (tags). Example: tag v0.2.3 -> version 0.2.3
[tool.hatch.version]
source = "vcs"

# Optional: control local version scheme (omit commit hash/local segment for reproducible builds)
[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

# Generate a file at build time with the resolved version (importable as dependamerge._version.__version__)
[tool.hatch.build.hooks.vcs]
version-file = "src/dependamerge/_version.py"

# Wheel build configuration (src layout)
[tool.hatch.build.targets.wheel]
packages = ["src/dependamerge"]

# sdists: include everything by default
[tool.hatch.build.targets.sdist]
include = ["src", "README.md", "LICENSE*", "pyproject.toml"]

# Dependency group for uv (mirrors dev extra)
[dependency-groups]
dev = [
  "pytest>=8.4.2",
  "pytest-asyncio>=1.1.0",
  "pytest-mock>=3.15.0",
  "responses>=0.25.8",
  "black>=25.1.0",
  "flake8>=7.3.0",
  "mypy>=1.17.1",
  "pyflakes>=3.4.0",
  "types-requests>=2.32.4.20250809",
]

[tool.pytest.ini_options]
testpaths = [
  "tests/",
]
addopts = ["--cov", "--cov-report=html", "--cov-report=xml"]
asyncio_mode = "auto"
markers = [
  "slow: marks tests as slow (deselected by pre-commit hooks)",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]
# relative_files = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.report]
fail_under = 80
skip_empty = true
ignore_errors = true
show_missing = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
  "E",
  "W",
  "F",
  "I",
  "B",
  "C4",
  "UP",
]
ignore = [
  "E501",
  "B008",
  "C901",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101", "D"]
