create or replace procedure PLUGIN.CREATE_GENERIC_SECRET_OBJECT_FROM_EXISTING(SECRET_NAME VARCHAR,SECRET_TO_CLONE VARCHAR,KEYS_TO_INCLUDE ARRAY)
   returns object
   language javascript
   COMMENT = $$
   Creates a generic secret object, using an existing object as a starting point.
   $$
   execute as owner
as
$$
try{
   // retrieve the existing secrets
   var results = snowflake.createStatement( {
         sqlText: `call RETRIEVE_SECRETS(null,?)`,
         binds:[SECRET_TO_CLONE]
      } ).execute();
   results.next();
   var procResult = results.getColumnValue(1);
   if (procResult.success===false){
      throw procResult.error;
   }
   var existingSecrets = procResult.data;
   if (KEYS_TO_INCLUDE != null){
      // pick out the specific keys from the KEYS_TO_INCLUDE array
      existingSecrets = KEYS_TO_INCLUDE.reduce((acc,key) => {
         acc[key] = existingSecrets[key];
         return acc;
      }, {})
   }
   // create the secret object by calling the regular proc
   var results = snowflake.createStatement( {
         sqlText: `call CREATE_GENERIC_SECRET_OBJECT(?,?)`,
         binds:[SECRET_NAME,JSON.stringify(existingSecrets)]
      } ).execute();
   results.next();
   var procResult = results.getColumnValue(1);
   if (procResult.success===false){
      throw procResult.error;
   }
   return {
      "success": true,
      "data": null
   }
}
catch(e){
   return {
      "success": false,
      "error": `CREATE_GENERIC_SECRET_OBJECT_FROM_EXISTING: ${String(e)}`
   }
}
$$
;

grant usage on procedure PLUGIN.CREATE_GENERIC_SECRET_OBJECT_FROM_EXISTING(VARCHAR,VARCHAR,ARRAY)
to application role OMNATA_MANAGEMENT;

