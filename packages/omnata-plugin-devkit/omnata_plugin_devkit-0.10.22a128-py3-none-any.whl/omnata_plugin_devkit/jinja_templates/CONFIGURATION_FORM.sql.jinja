create or replace procedure PLUGIN.CONFIGURATION_FORM(
                                                CONNECTION_FORM_REQUEST OBJECT)
returns object
language python
RUNTIME_VERSION = '3.10'
PACKAGES = ({{packages}})
IMPORTS = ('/app.zip')
HANDLER = 'run'
COMMENT = $$
Returns a sync configuration form definition for an inbound or outbound sync.
$$
execute as owner
as
$$
from logging import getLogger
from omnata_plugin_runtime.logging import log_exception
import json
logger = getLogger(__name__)
def run(session,connection_form_request):
   try:
      logger.info('plugin entrypoint wrapper')
      from omnata_plugin_runtime.plugin_entrypoints import PluginEntrypoint
      logger.info('importing plugin {{plugin_class_name}} from module {{plugin_class_module}}')
      entrypoint = PluginEntrypoint(session=session,
         plugin_fqn='{{plugin_fqn}}',
         module_name='{{plugin_class_module}}',
         class_name='{{plugin_class_name}}'
      )
      result = entrypoint.configuration_form(connection_form_request)
      logger.debug(f'result from plugin: {result}')
      return {
         "success": True,
         "data": result
      }
   except Exception as exception:
      log_exception(exception,logger)
      return {
         "success": False,
         "error": f"CONFIGURATION_FORM: {str(exception)}"
      }
$$
;
   
grant usage on procedure PLUGIN.CONFIGURATION_FORM(OBJECT)
to application role OMNATA_MANAGEMENT;

-- legacy method, can be removed once all plugins pass runtime version 0.9.0
-- and sync engine no longer calls this
create or replace procedure PLUGIN.CONFIGURATION_FORM(
                                                CONNECTIVITY_OPTION VARCHAR,
                                                CONNECTION_METHOD VARCHAR,
                                                CONNECTION_PARAMETERS OBJECT,
                                                OAUTH_SECRET_NAME VARCHAR,
                                                OTHER_SECRETS_NAME VARCHAR,
                                                SYNC_DIRECTION VARCHAR,
                                                SYNC_STRATEGY OBJECT,
                                                FUNCTION_NAME VARCHAR,
                                                SYNC_PARAMETERS OBJECT,
                                                CURRENT_FORM_PARAMETERS OBJECT)
returns object
language SQL 
as
$$
DECLARE res OBJECT;
  BEGIN
    CALL PLUGIN.CONFIGURATION_FORM(
         OBJECT_CONSTRUCT_KEEP_NULL('connectivity_option',:CONNECTIVITY_OPTION,
                          'connection_method',:CONNECTION_METHOD,
                          'connection_parameters',:CONNECTION_PARAMETERS,
                          'oauth_secret_name',:OAUTH_SECRET_NAME,
                          'other_secrets_name',:OTHER_SECRETS_NAME,
                          'sync_direction',:SYNC_DIRECTION,
                          'target_type',null,
                          'sync_strategy',:SYNC_STRATEGY,
                          'function_name',:FUNCTION_NAME,
                          'sync_parameters',:SYNC_PARAMETERS,
                          'current_form_parameters',:CURRENT_FORM_PARAMETERS)
         ) INTO :res;
    return res;
  END;
$$;


grant usage on procedure PLUGIN.CONFIGURATION_FORM(
                                                VARCHAR,
                                                VARCHAR,
                                                OBJECT,
                                                VARCHAR,
                                                VARCHAR,
                                                VARCHAR,
                                                OBJECT,
                                                VARCHAR,
                                                OBJECT,
                                                OBJECT)
to application role OMNATA_MANAGEMENT;

-- legacy method, can be removed once all plugins pass runtime version 0.7.0
-- and sync engine no longer calls this
create or replace procedure PLUGIN.CONFIGURATION_FORM(
                                    CONNECTION_METHOD VARCHAR,
                                    CONNECTION_PARAMETERS OBJECT,
                                    OAUTH_SECRET_NAME VARCHAR,
                                    OTHER_SECRETS_NAME VARCHAR,
                                    SYNC_DIRECTION VARCHAR,
                                    SYNC_STRATEGY OBJECT,
                                    FUNCTION_NAME VARCHAR,
                                    SYNC_PARAMETERS OBJECT,
                                    CURRENT_FORM_PARAMETERS OBJECT)
returns object
language SQL 
as
$$
DECLARE res OBJECT;
  BEGIN
    CALL PLUGIN.CONFIGURATION_FORM(
         OBJECT_CONSTRUCT_KEEP_NULL(
                          'connectivity_option','direct',
                          'connection_method',:CONNECTION_METHOD,
                          'connection_parameters',:CONNECTION_PARAMETERS,
                          'oauth_secret_name',:OAUTH_SECRET_NAME,
                          'other_secrets_name',:OTHER_SECRETS_NAME,
                          'sync_direction',:SYNC_DIRECTION,
                          'target_type',null,
                          'sync_strategy',:SYNC_STRATEGY,
                          'function_name',:FUNCTION_NAME,
                          'sync_parameters',:SYNC_PARAMETERS,
                          'current_form_parameters',:CURRENT_FORM_PARAMETERS)
         ) INTO :res;
    return res;
  END;
$$;

grant usage on procedure PLUGIN.CONFIGURATION_FORM(VARCHAR,
                                                OBJECT,
                                                VARCHAR,
                                                VARCHAR,
                                                VARCHAR,
                                                OBJECT,
                                                VARCHAR,
                                                OBJECT,
                                                OBJECT)
to application role OMNATA_MANAGEMENT;