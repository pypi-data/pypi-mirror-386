create or replace procedure PLUGIN.CREATE_OAUTH_SECRET_OBJECT(SECRET_NAME VARCHAR,SECURITY_INTEGRATION_NAME VARCHAR)
   returns object
   language javascript
   COMMENT = $$
   This procedure is deprecated, as the user must create the OAuth secrets themselves in order to be able to bind them correctly.
   $$
   execute as owner
as
$$
try{
   // we get a very unhelpful internal error if we try to use binding, so interlopate and try to limit injection attack risk
   if (!(SECURITY_INTEGRATION_NAME.match(/^[a-z0-9_]+$/i))){
      throw `Invalid security integration name: ${SECURITY_INTEGRATION_NAME}`
   }
   snowflake.createStatement( {
      sqlText: `CREATE OR REPLACE SECRET IDENTIFIER(?) TYPE = OAUTH2 
                  API_AUTHENTICATION = ${SECURITY_INTEGRATION_NAME}`,
      binds:[SECRET_NAME]
   } ).execute();
   snowflake.createStatement( {
      sqlText: `grant usage on secret IDENTIFIER(?) to application role OMNATA_MANAGEMENT`,
      binds:[SECRET_NAME]
   } ).execute();
    return {
        "success": true,
        "data": null
    }
}
catch(e){
   return {
      "success": false,
      "error": `CREATE_OAUTH_SECRET_OBJECT: ${String(e)}`
   }
}
$$
;

grant usage on procedure PLUGIN.CREATE_OAUTH_SECRET_OBJECT(VARCHAR,VARCHAR)
to application role OMNATA_MANAGEMENT;