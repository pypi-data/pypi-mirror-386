[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "langmiddle"
dynamic = ["version"]
description = "Middlewares for LangChain / LangGraph"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Alpha x1", email = "alpha.xone@outlook.com"}
]
keywords = ["langchain", "langgraph", "middleware", "ai", "llm", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
dependencies = [
    "langchain",
    "langgraph",
    "langchain-core",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "build>=0.8",
    "twine>=4.0",
]
postgres = [
    "psycopg2-binary>=2.9.0",
    "python-dotenv>=1.0.0",
]
supabase = [
    "supabase>=2.20.0",
    "python-jose>=3.3.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.0",
]
firebase = [
    "firebase-admin>=6.0.0",
]
all = [
    "supabase>=2.20.0",
    "python-jose>=3.3.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.0",
    "firebase-admin>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/alpha-xone/langmiddle"
Repository = "https://github.com/alpha-xone/langmiddle"
Issues = "https://github.com/alpha-xone/langmiddle/issues"
Documentation = "https://github.com/alpha-xone/langmiddle#readme"

[tool.setuptools.packages.find]
where = ["."]
include = ["langmiddle*"]

[tool.setuptools.dynamic]
version = {attr = "langmiddle.__version__"}

[tool.setuptools.package-data]
langmiddle = ["py.typed", "storage/supabase/*.sql", "storage/postgres/*.sql"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
