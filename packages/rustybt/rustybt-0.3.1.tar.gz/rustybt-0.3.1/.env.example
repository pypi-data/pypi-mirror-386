# ============================================================================
# RustyBT Environment Variables Configuration
# ============================================================================
#
# Copy this file to .env and fill in your actual values
# NEVER commit .env to version control!
#
# Usage:
#   1. Copy: cp .env.example .env
#   2. Fill in your API keys and secrets
#   3. Load in Python:
#      from dotenv import load_dotenv
#      load_dotenv()
#

# ============================================================================
# Broker Credentials
# ============================================================================

# --- PaperBroker (No credentials needed) ---
# Paper broker is for testing only and doesn't require any configuration

# --- Binance (Cryptocurrency Exchange) ---
# Get keys from: https://www.binance.com → Profile → API Management
BINANCE_API_KEY=
BINANCE_API_SECRET=

# Binance Production (use separate keys for production)
BINANCE_PROD_API_KEY=
BINANCE_PROD_API_SECRET=

# --- Bybit (Derivatives Exchange) ---
# Get keys from: https://www.bybit.com → Account & Security → API Management
BYBIT_API_KEY=
BYBIT_API_SECRET=

# Bybit Production
BYBIT_PROD_API_KEY=
BYBIT_PROD_API_SECRET=

# --- Hyperliquid (DEX) ---
# Generate API keys in Hyperliquid app
HYPERLIQUID_API_KEY=
HYPERLIQUID_API_SECRET=
HYPERLIQUID_WALLET_ADDRESS=0x

# --- Interactive Brokers (Traditional Markets) ---
# TWS/Gateway connection settings
IB_HOST=127.0.0.1
IB_PORT=7497  # 7497 for paper trading, 7496 for live trading
IB_CLIENT_ID=1

# --- CCXT Generic (100+ Exchanges) ---

# Kraken
KRAKEN_API_KEY=
KRAKEN_API_SECRET=

# Coinbase Pro
COINBASE_API_KEY=
COINBASE_API_SECRET=
COINBASE_PASSPHRASE=

# Binance US
BINANCE_US_API_KEY=
BINANCE_US_API_SECRET=

# KuCoin
KUCOIN_API_KEY=
KUCOIN_API_SECRET=
KUCOIN_PASSPHRASE=

# OKX
OKX_API_KEY=
OKX_API_SECRET=
OKX_PASSPHRASE=

# ============================================================================
# Data Providers
# ============================================================================

# --- Yahoo Finance (via yfinance) ---
# No API key required - free tier available

# --- Alpha Vantage ---
# Get free key from: https://www.alphavantage.co/support/#api-key
ALPHAVANTAGE_API_KEY=

# --- Polygon.io ---
# Get key from: https://polygon.io/dashboard/api-keys
POLYGON_API_KEY=

# --- Alpaca Markets ---
# Get keys from: https://app.alpaca.markets/paper/dashboard/overview
ALPACA_API_KEY=
ALPACA_API_SECRET=

# Alpaca Production (separate keys for live trading)
ALPACA_PROD_API_KEY=
ALPACA_PROD_API_SECRET=

# --- Quandl (Not Yet Implemented) ---
# Get key from: https://www.quandl.com/account/api
QUANDL_API_KEY=

# --- IEX Cloud (Not Yet Implemented) ---
# Get key from: https://iexcloud.io/console/tokens
IEX_CLOUD_API_KEY=

# --- Tiingo (Not Yet Implemented) ---
# Get key from: https://www.tiingo.com/account/api/token
TIINGO_API_KEY=

# ============================================================================
# Database Configuration
# ============================================================================

# PostgreSQL (for production deployments)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=rustybt
POSTGRES_USER=rustybt
POSTGRES_PASSWORD=

# Redis (for caching and session management)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# ============================================================================
# AWS Services (Optional)
# ============================================================================

# AWS Credentials (for S3 data storage, etc.)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1

# S3 Bucket for data storage
AWS_S3_BUCKET=rustybt-data

# ============================================================================
# Monitoring & Logging
# ============================================================================

# Sentry (Error tracking)
# Get DSN from: https://sentry.io/settings/projects/
SENTRY_DSN=

# LogDNA / DataDog / Other logging services
LOGDNA_API_KEY=
DATADOG_API_KEY=

# ============================================================================
# Notification Services
# ============================================================================

# Slack Webhooks (for trade alerts)
SLACK_WEBHOOK_URL=

# Telegram Bot (for notifications)
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# Email (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=

# Twilio (SMS notifications)
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=

# ============================================================================
# Application Settings
# ============================================================================

# Environment
ENVIRONMENT=development  # development, staging, production

# Debug mode (set to false in production!)
DEBUG=true

# Logging level
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# Data directories
DATA_DIR=~/.rustybt/data
BUNDLE_DIR=~/.rustybt/bundles
CACHE_DIR=~/.rustybt/cache
LOG_DIR=~/.rustybt/logs

# ============================================================================
# Security Settings
# ============================================================================

# Secret key for session management (generate with: openssl rand -hex 32)
SECRET_KEY=

# JWT secret for API authentication
JWT_SECRET=

# Encryption key for sensitive data
ENCRYPTION_KEY=

# ============================================================================
# Performance Settings
# ============================================================================

# Number of worker processes for parallel optimization
N_WORKERS=4

# Cache TTL (seconds)
CACHE_TTL=3600

# Request timeout (seconds)
REQUEST_TIMEOUT=30

# Maximum retries for failed requests
MAX_RETRIES=3

# ============================================================================
# Feature Flags
# ============================================================================

# Enable experimental features
ENABLE_RUST_OPTIMIZATIONS=false
ENABLE_GPU_ACCELERATION=false
ENABLE_DISTRIBUTED_COMPUTING=false

# Enable shadow trading validation
ENABLE_SHADOW_MODE=true

# ============================================================================
# Notes
# ============================================================================
#
# Security Best Practices:
# 1. Never commit .env to version control (add to .gitignore)
# 2. Use different API keys for development/production
# 3. Rotate keys every 3-6 months
# 4. Disable withdrawal permissions on trading API keys
# 5. Whitelist IPs when possible
# 6. Use read-only keys where possible
# 7. Store production secrets in secure vault (AWS Secrets Manager, HashiCorp Vault)
#
# Testing:
# - Use testnet/paper trading accounts for all testing
# - Validate configuration before live trading
# - Monitor logs for authentication errors
#
# For more information:
# - Documentation: docs/guides/broker-setup-guide.md
# - API Reference: docs/api/live-trading-api.md
#
# ============================================================================
