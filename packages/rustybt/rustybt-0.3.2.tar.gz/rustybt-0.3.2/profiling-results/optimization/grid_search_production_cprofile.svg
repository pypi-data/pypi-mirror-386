<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1400" height="1200">
  <style>
    .bar { fill: #e74c3c; stroke: #c0392b; stroke-width: 1; }
    .bar:hover { fill: #c0392b; }
    .func-name { font-family: monospace; font-size: 12px; fill: #2c3e50; }
    .location { font-family: monospace; font-size: 10px; fill: #7f8c8d; }
    .percent { font-family: monospace; font-size: 11px; fill: #2c3e50; font-weight: bold; }
    .title { font-family: Arial, sans-serif; font-size: 20px; fill: #2c3e50; font-weight: bold; }
    .subtitle { font-family: Arial, sans-serif; font-size: 12px; fill: #7f8c8d; }
  </style>

  <!-- Title -->
  <text x="20" y="30" class="title">Grid Search Production Flame Graph</text>
  <text x="20" y="50" class="subtitle">Top 30 functions by cumulative time (â‰¥0.5% of total runtime: 0.382s)</text>

  <!-- Bars -->
  <g>
    <!-- Function 1: run_grid_search_workflow -->
    <rect x="350" y="80" width="999.9366237513015" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="95" text-anchor="end" class="func-name">
      run_grid_search_workflow
    </text>
    <text x="340" y="108" text-anchor="end" class="location">
      run_production_profiling.py:178
    </text>
    <text x="1359.9366237513013" y="100" class="percent">
      99.99% (0.382s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 2: simple_ma_crossover_backtest -->
    <rect x="350" y="115" width="943.696255819296" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="130" text-anchor="end" class="func-name">
      simple_ma_crossover_backtest
    </text>
    <text x="340" y="143" text-anchor="end" class="location">
      run_production_profiling.py:99
    </text>
    <text x="1303.6962558192959" y="135" class="percent">
      94.37% (0.360s, 100 calls)
    </text>
  </g>
  <g>
    <!-- Function 3: wrapper -->
    <rect x="350" y="150" width="582.9770814802888" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="165" text-anchor="end" class="func-name">
      wrapper
    </text>
    <text x="340" y="178" text-anchor="end" class="location">
      deprecation.py:84
    </text>
    <text x="942.9770814802888" y="170" class="percent">
      58.30% (0.223s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 4: wrapper -->
    <rect x="350" y="185" width="578.288445968986" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="200" text-anchor="end" class="func-name">
      wrapper
    </text>
    <text x="340" y="213" text-anchor="end" class="location">
      opt_flags.py:312
    </text>
    <text x="938.288445968986" y="205" class="percent">
      57.83% (0.221s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 5: collect -->
    <rect x="350" y="220" width="556.4932367557632" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="235" text-anchor="end" class="func-name">
      collect
    </text>
    <text x="340" y="248" text-anchor="end" class="location">
      frame.py:2184
    </text>
    <text x="916.4932367557632" y="240" class="percent">
      55.65% (0.213s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 6: <method 'collect' of 'builtins.PyLazyFrame' objects> -->
    <rect x="350" y="255" width="515.7292712634604" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="270" text-anchor="end" class="func-name">
      <method 'collect' of 'builtins.PyLazy...
    </text>
    <text x="340" y="283" text-anchor="end" class="location">
      ~:0
    </text>
    <text x="875.7292712634604" y="275" class="percent">
      51.57% (0.197s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 7: filter -->
    <rect x="350" y="290" width="399.29814365029955" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="305" text-anchor="end" class="func-name">
      filter
    </text>
    <text x="340" y="318" text-anchor="end" class="location">
      frame.py:5101
    </text>
    <text x="759.2981436502996" y="310" class="percent">
      39.93% (0.153s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 8: sort -->
    <rect x="350" y="325" width="257.19669793198597" height="30"
          style="fill: #e74c3c; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="340" text-anchor="end" class="func-name">
      sort
    </text>
    <text x="340" y="353" text-anchor="end" class="location">
      frame.py:5696
    </text>
    <text x="617.1966979319859" y="345" class="percent">
      25.72% (0.098s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 9: wrapper -->
    <rect x="350" y="360" width="60.45520524697114" height="30"
          style="fill: #e67e22; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="375" text-anchor="end" class="func-name">
      wrapper
    </text>
    <text x="340" y="388" text-anchor="end" class="location">
      utils.py:99
    </text>
    <text x="420.45520524697116" y="380" class="percent">
      6.05% (0.023s, 100 calls)
    </text>
  </g>
  <g>
    <!-- Function 10: filter -->
    <rect x="350" y="395" width="58.755523790636886" height="30"
          style="fill: #e67e22; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="410" text-anchor="end" class="func-name">
      filter
    </text>
    <text x="340" y="423" text-anchor="end" class="location">
      frame.py:4145
    </text>
    <text x="418.75552379063686" y="415" class="percent">
      5.88% (0.022s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 11: _filter -->
    <rect x="350" y="430" width="55.20246928609436" height="30"
          style="fill: #e67e22; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="445" text-anchor="end" class="func-name">
      _filter
    </text>
    <text x="340" y="458" text-anchor="end" class="location">
      frame.py:4060
    </text>
    <text x="415.20246928609436" y="450" class="percent">
      5.52% (0.021s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 12: select_seq -->
    <rect x="350" y="465" width="53.98290323066238" height="30"
          style="fill: #e67e22; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="480" text-anchor="end" class="func-name">
      select_seq
    </text>
    <text x="340" y="493" text-anchor="end" class="location">
      frame.py:10009
    </text>
    <text x="413.9829032306624" y="485" class="percent">
      5.40% (0.021s, 100 calls)
    </text>
  </g>
  <g>
    <!-- Function 13: create_synthetic_price_data -->
    <rect x="350" y="500" width="43.748976857642326" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="515" text-anchor="end" class="func-name">
      create_synthetic_price_data
    </text>
    <text x="340" y="528" text-anchor="end" class="location">
      run_production_profiling.py:43
    </text>
    <text x="403.74897685764233" y="520" class="percent">
      4.37% (0.017s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 14: __eq__ -->
    <rect x="350" y="535" width="31.236594757086724" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="550" text-anchor="end" class="func-name">
      __eq__
    </text>
    <text x="340" y="563" text-anchor="end" class="location">
      expr.py:193
    </text>
    <text x="391.2365947570867" y="555" class="percent">
      3.12% (0.012s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 15: convolve -->
    <rect x="350" y="570" width="31.005664671105457" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="585" text-anchor="end" class="func-name">
      convolve
    </text>
    <text x="340" y="598" text-anchor="end" class="location">
      numeric.py:806
    </text>
    <text x="391.0056646711055" y="590" class="percent">
      3.10% (0.012s, 2,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 16: parse_into_expression -->
    <rect x="350" y="605" width="25.117988128734314" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="620" text-anchor="end" class="func-name">
      parse_into_expression
    </text>
    <text x="340" y="633" text-anchor="end" class="location">
      expr.py:21
    </text>
    <text x="385.11798812873434" y="625" class="percent">
      2.51% (0.010s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 17: <built-in method builtins.isinstance> -->
    <rect x="350" y="640" width="24.632037233022505" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="655" text-anchor="end" class="func-name">
      <built-in method builtins.isinstance>
    </text>
    <text x="340" y="668" text-anchor="end" class="location">
      ~:0
    </text>
    <text x="384.6320372330225" y="660" class="percent">
      2.46% (0.009s, 33,302 calls)
    </text>
  </g>
  <g>
    <!-- Function 18: __init__ -->
    <rect x="350" y="675" width="20.963537320397847" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="690" text-anchor="end" class="func-name">
      __init__
    </text>
    <text x="340" y="703" text-anchor="end" class="location">
      frame.py:359
    </text>
    <text x="380.96353732039785" y="695" class="percent">
      2.10% (0.008s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 19: sequence_to_pydf -->
    <rect x="350" y="710" width="20.953175324679574" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="725" text-anchor="end" class="func-name">
      sequence_to_pydf
    </text>
    <text x="340" y="738" text-anchor="end" class="location">
      dataframe.py:447
    </text>
    <text x="380.9531753246796" y="730" class="percent">
      2.10% (0.008s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 20: wrapper -->
    <rect x="350" y="745" width="20.93386766464361" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="760" text-anchor="end" class="func-name">
      wrapper
    </text>
    <text x="340" y="773" text-anchor="end" class="location">
      functools.py:927
    </text>
    <text x="380.9338676646436" y="765" class="percent">
      2.09% (0.008s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 21: _sequence_of_dict_to_pydf -->
    <rect x="350" y="780" width="20.88532493482846" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="795" text-anchor="end" class="func-name">
      _sequence_of_dict_to_pydf
    </text>
    <text x="340" y="808" text-anchor="end" class="location">
      dataframe.py:696
    </text>
    <text x="380.8853249348285" y="800" class="percent">
      2.09% (0.008s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 22: <built-in method from_dicts> -->
    <rect x="350" y="815" width="20.857943400412726" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="830" text-anchor="end" class="func-name">
      <built-in method from_dicts>
    </text>
    <text x="340" y="843" text-anchor="end" class="location">
      ~:0
    </text>
    <text x="380.85794340041275" y="835" class="percent">
      2.09% (0.008s, 1 calls)
    </text>
  </g>
  <g>
    <!-- Function 23: lit -->
    <rect x="350" y="850" width="19.758155522874336" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="865" text-anchor="end" class="func-name">
      lit
    </text>
    <text x="340" y="878" text-anchor="end" class="location">
      lit.py:31
    </text>
    <text x="379.75815552287435" y="870" class="percent">
      1.98% (0.008s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 24: <built-in method numpy._core._multiarray_umath.correlate> -->
    <rect x="350" y="885" width="18.653754750829734" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="900" text-anchor="end" class="func-name">
      <built-in method numpy._core._multiar...
    </text>
    <text x="340" y="913" text-anchor="end" class="location">
      ~:0
    </text>
    <text x="378.65375475082976" y="905" class="percent">
      1.87% (0.007s, 2,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 25: _eager -->
    <rect x="350" y="920" width="17.864975970144464" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="935" text-anchor="end" class="func-name">
      _eager
    </text>
    <text x="340" y="948" text-anchor="end" class="location">
      opt_flags.py:143
    </text>
    <text x="377.8649759701445" y="940" class="percent">
      1.79% (0.007s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 26: <built-in method numpy.array> -->
    <rect x="350" y="955" width="17.704461902059766" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="970" text-anchor="end" class="func-name">
      <built-in method numpy.array>
    </text>
    <text x="340" y="983" text-anchor="end" class="location">
      ~:0
    </text>
    <text x="377.7044619020598" y="975" class="percent">
      1.77% (0.007s, 4,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 27: lazy -->
    <rect x="350" y="990" width="16.61297304585209" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="1005" text-anchor="end" class="func-name">
      lazy
    </text>
    <text x="340" y="1018" text-anchor="end" class="location">
      frame.py:9882
    </text>
    <text x="376.6129730458521" y="1010" class="percent">
      1.66% (0.006s, 2,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 28: parse_into_list_of_expressions -->
    <rect x="350" y="1025" width="13.824802947330662" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="1040" text-anchor="end" class="func-name">
      parse_into_list_of_expressions
    </text>
    <text x="340" y="1053" text-anchor="end" class="location">
      expr.py:79
    </text>
    <text x="373.8248029473307" y="1045" class="percent">
      1.38% (0.005s, 1,100 calls)
    </text>
  </g>
  <g>
    <!-- Function 29: diff -->
    <rect x="350" y="1060" width="13.768882727890928" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="1075" text-anchor="end" class="func-name">
      diff
    </text>
    <text x="340" y="1088" text-anchor="end" class="location">
      _function_base_impl.py:1391
    </text>
    <text x="373.7688827278909" y="1080" class="percent">
      1.38% (0.005s, 1,000 calls)
    </text>
  </g>
  <g>
    <!-- Function 30: __getitem__ -->
    <rect x="350" y="1095" width="13.091460058341857" height="30"
          style="fill: #f39c12; stroke: #2c3e50; stroke-width: 1;" />
    <text x="340" y="1110" text-anchor="end" class="func-name">
      __getitem__
    </text>
    <text x="340" y="1123" text-anchor="end" class="location">
      frame.py:1258
    </text>
    <text x="373.09146005834185" y="1115" class="percent">
      1.31% (0.005s, 1,100 calls)
    </text>
  </g>

  <!-- Legend -->
  <text x="20" y="1160" class="subtitle">Color coding:</text>
  <rect x="20" y="1165" width="15" height="15" fill="#e74c3c" stroke="#2c3e50"/>
  <text x="40" y="1176" class="location">â‰¥10% (Critical)</text>
  <rect x="150" y="1165" width="15" height="15" fill="#e67e22" stroke="#2c3e50"/>
  <text x="170" y="1176" class="location">â‰¥5% (Major)</text>
  <rect x="280" y="1165" width="15" height="15" fill="#f39c12" stroke="#2c3e50"/>
  <text x="300" y="1176" class="location">â‰¥1% (Notable)</text>
  <rect x="410" y="1165" width="15" height="15" fill="#3498db" stroke="#2c3e50"/>
  <text x="430" y="1176" class="location">&lt;1% (Minor)</text>

  <!-- Footer -->
  <text x="1390" y="1190" text-anchor="end" class="location">
    Generated by RustyBT Profiling Infrastructure
  </text>
</svg>
