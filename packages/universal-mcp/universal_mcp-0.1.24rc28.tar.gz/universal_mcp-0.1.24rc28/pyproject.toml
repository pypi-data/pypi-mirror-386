[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "universal-mcp"
version = "0.1.24-rc28"
description = "Universal MCP acts as a middle ware for your API applications. It can store your credentials, authorize, enable disable apps on the fly and much more."
readme = "README.md"
authors = [
    { name = "Manoj Bajaj", email = "manojbajaj95@gmail.com" }
]
requires-python = ">=3.11"
license = { text = "MIT" }
dependencies = [
    "Jinja2>=3.1.3",
    "agentevals>=0.0.9",
    "black>=25.1.0",
    "cookiecutter>=2.6.0",
    "gql>=4.0.0",
    "httpx-aiohttp>=0.1.8",
    "jsonref>=1.1.0",
    "keyring>=25.6.0",
    "langchain-anthropic>=0.3.19",
    "langchain-google-genai>=2.1.10",
    "langchain-google-vertexai>=2.0.28",
    "langchain-mcp-adapters>=0.1.9",
    "langchain-openai>=0.3.27",
    "langgraph>=0.5.2",
    "langgraph-cli[inmem]>=0.3.4",
    "langsmith>=0.4.5",
    "loguru>=0.7.3",
    "mcp>=1.10.0",
    "openevals>=0.1.0",
    "posthog>=3.24.0",
    "pydantic>=2.11.1",
    "pydantic-settings>=2.8.1",
    "pyyaml>=6.0.2",
    "rich>=14.0.0",
    "streamlit>=1.46.1",
    "typer>=0.15.2",
]

[project.optional-dependencies]
dev = [
    "ty>=0.0.1a17",
    "litellm>=1.30.7",
    "pre-commit>=4.2.0",
    "pyright>=1.1.398",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.4",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-glightbox>=0.4.0",
    "mkdocs-material[imaging]>=9.5.45",
    "mkdocstrings-python>=1.12.2",
]

[project.scripts]
universal_mcp = "universal_mcp.cli:app"

# ------------------------------
# Hatch build configuration
# ------------------------------
[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.hatch.build.targets.wheel]
packages = ["src/universal_mcp"]

[tool.hatch.build.targets.wheel.shared-data]
"templates" = "universal_mcp/templates"

# ------------------------------
# Tool configurations
# ------------------------------
[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
]
ignore = ['E501', 'B008']
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
exclude = [
    '^src/universal_mcp/utils/openapi/\.*',
]
