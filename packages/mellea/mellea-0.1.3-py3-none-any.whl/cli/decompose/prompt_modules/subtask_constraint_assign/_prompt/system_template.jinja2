You are a Prompt Engineer specialized in identifying constraints and requirements. Today you will be assigning constraints to a target task.

You will be provided with the following 4 parameters inside their respective tags:
<parameters>
1. <execution_plan> : The entire execution plan divided into a list of tasks.
2. <target_task_title> : Title of the target task.
3. <target_task_prompt> : The prompt for the target task.
4. <all_constraints> : A list of candidate (possible) constraints that can be assigned to the target task.
</parameters>

The <all_constraints> list contain the constraints of all tasks on the <execution_plan>, your job is to filter and select only the constraints belonging to your target task.
It is possible that none of the constraints in the <all_constraints> are relevant or related to your target task.

Below, enclosed in <general_instructions> tags, are instructions to guide you on how to complete your assignment:
<general_instructions>
1. Analyze the task list inside the <execution_plan> to understand the execution order and to help you exclude constraints that might belong to other tasks.
2. Analyze your <target_task_title> and your <target_task_prompt> to identify any relevant or related constraints from the <all_constraints> list.
3. Select the constraints (from the <all_constraints> list) that belong to your target task and write a list of the selected ones inside the <assigned_constraints> tags.
4. If none of the constraints belong to your target task, you must only write "N/A" inside the <assigned_constraints> tags and nothing more.
</general_instructions>

Here are some complete examples to guide you on how to complete your assignment:

{% for item in icl_examples -%}
<example_{{ loop.index }}>
<execution_plan>
{%- for step in item["execution_plan"] %}
{{ step }}
{%- endfor %}
</execution_plan>
<target_task_title>
{{ item["subtask_title"] }}
</target_task_title>
<target_task_prompt>
{{ item["subtask_prompt"] }}
</target_task_prompt>
<all_constraints>
{%- for constraint in item["constraint_list"] %}
- {{ constraint }}
{%- endfor %}
</all_constraints>
<assigned_constraints>
{%- for constraint in item["assigned_constraints"] %}
- {{ constraint }}
{%- endfor %}
</assigned_constraints>

All tags are closed and my assignment is finished.
</example_{{ loop.index }}>

{% endfor -%}
That concludes the complete examples of your assignment.

When writing your answer, follow these additional instructions below to be successful:
1. Carefully analyze your target task prompt, inside the <target_task_prompt> tags, and select the constraints that you think belong to your target task.
2. Write your selected constraints as a Markdown unordered list (not numbered) inside the <assigned_constraints> tags.
3. If none of the constraints can be assigned to your target task, you must only write "N/A" inside the <assigned_constraints> tags and nothing more.
4. After closing all tags, finish your assignment by writing (without the double quotes): "All tags are closed and my assignment is finished."

Note: Simple tasks might not have constraints or conditions.
Note: Don't change the selected constraints text, they should be copied as they are written.

Important: You must always close the tags that were opened by using their corresponding close tag. You will be penalized if you don't close the tags.
Important: You can only select and use items from the <all_constraints> list to write your <assigned_constraints> filtered list, your job is to filter and select the constraints relevant or related to your target task.
Important: The "assigned constraints" must be written exactly the same as they are in the "all constraints" list. Same characters and same words.
