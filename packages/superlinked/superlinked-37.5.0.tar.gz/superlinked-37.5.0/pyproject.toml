[tool.poetry]
name = "superlinked"
version = "37.5.0"  # The version will be dynamically updated
description = "The Superlinked vector computing library"
authors = ["Superlinked Release <release@superlinked.com>"]
readme = "PYPI_README.md"
license = "Apache-2.0"
include = ["NOTICE"]

[tool.poetry.dependencies]
Deprecated = "^1.2.18"
python = ">=3.10,<3.13"
numpy = ">=1.25.2,<=3.0.0"
sentence-transformers = "^5.0.0"
transformers = "^4.51.0"
open_clip_torch = "^3.0.0" # for image embedding - 2.29.0 needs tensorflow, update carefully
pandas = "^2.0.3"
# Needed by sentence-transformers. Probably it's solved with newer versions.
setuptools = { version = ">=70.1.1,<81.0.0", markers = "python_version >= '3.12'" }
typing_extensions = ">=3.10.0.2"
beartype = ">=0.17.2,<0.22.0"
furl = "^2.1.3"
pydantic = "^2.6.4"
pydantic-settings = "^2.4.0"
cachetools = "^5.4"
filelock = "^3.16.1"
structlog = "!=25.4.0,>=24.4,<26.0" # 25.3.0 causes recursion error
rich = "!=14.0.0" # 14.0.0 causes recursion error
# Needed for natural language query
instructor = "^1.11.3"
requests = "^2.31"
jinja2 = "^3.1.4"
graphviz = ">=0.20.1,<0.22.0"
opentelemetry-sdk = "^1.34.1"
opentelemetry-api = "^1.34.1"
# --- Interactive deps ---
altair = { version = "5.2.0", optional = true }
umap-learn = {version = "^0.5.5", optional = true}
accelerate = {version = ">=0.26.0", optional = true}
ipywidgets = {version = "^8.1.2", optional = true}
# --- Shared deps ----
jupyter = { version = "^1.0.0", optional = true }
# --- Pub/Sub deps ----
google-cloud-pubsub = { version = "^2.23.0", optional = true }
# --- Storage deps ----
google-cloud-storage = { version = ">=2.18.2,<4.0.0", optional = true }
# --- Connector deps ---
mongo-types = { version = "~0.15.1", optional = true }
pymongo = { version = "^4.7.3", optional = true }
redis = { version = "^6.2.0", optional = true }
qdrant-client = { version = "^1.12.1", optional = true }
redisvl = { version = "^0.8.0", optional = true }
topk-sdk = { version = ">=0.3.7,<0.5.0", optional = true }
asgi-correlation-id = "^4.3.4"
modal = "==1.1.3"
nest-asyncio = "^1.6.0"
aiofiles = "^24.1.0"
httpx = "^0.28.1"

[tool.poetry.extras]
interactive = ["jupyter", "altair", "umap-learn", "transformers", "accelerate", "ipywidgets"]
batch = ["pyspark"]
mongo = ["pymongo", "mongo-types"]
topk = ["topk-sdk"]
redis = ["redis", "redisvl"]
qdrant = ["qdrant-client"]
pub-sub = ["google-cloud-pubsub"]
storage = ["google-cloud-storage"]

[tool.poetry.group.dev.dependencies]
setuptools = { version = ">=70.1.1,<81.0.0", markers = "python_version < '3.12'" }
types-jmespath = "~1.0.2.20240106"
types-pyyaml = "~6.0.12.12"
types-jsonschema = "^4.23.0"
types-requests = "<2.32.4.20250914"
types-tqdm = "^4.66"
types-beautifulsoup4 = "^4.12"
types-Deprecated = ">=1.2.15"
types-cachetools = ">=5.4,<7.0"
types-aiofiles = "^24.1.0.20250801"
mypy-boto3 = ">=1.34.41,<1.41.0"
autoflake = ">=2.2.1,<2.4.0"
coverage = ">=7.4,<7.11"
debugpy = "~1.8.0"
flake8 = ">=7.0,<7.2"
mypy = ">=1.8,<1.19"
pandas-stubs = "^2.2.2"
datasets = ">=2.21,<5.0"
matplotlib = "^3.10.1"
matplotlib-stubs = ">=0.2,<0.4"
networkx-stubs = "^0.0.1"
pdoc3 = ">=0.10,<0.12"
pyflakes = "~3.2.0"
typing-extensions = "4.15.0"
data-science-types = "~0.2.23"
build = ">=1.0.3,<1.4.0"
in-place = "~1.0.0"
ipython = ">=8.20,<8.38"
nbconvert = ">=7.14.2,<7.17.0"
setuptools-git-versioning = ">=1.13.5,<2.2.0"
wheel = ">=0.42,<0.46"
pylint = "^3.3.8"
python-semantic-release = ">=8.7,<10.5"
mdformat-gfm = ">=0.3.5,<0.5.0"
moto = { version = "5.1.13", extras = ["all"] }
pylint-pydantic = "^0.3.2"
nbqa = "^1.8.4"
black = {extras = ["jupyter"], version = ">=24.2,<26.0"}
deptry = ">=0.14.2,<0.24.0"
vermin = "^1.6.0"
twine = ">=5.1,<7.0"
# for performant tests
pytest= ">=7.4.4,<9.0.0"
pytest-xdist = "^3.6.1"
pytest-sugar = "^1.0.0"
callee = "^0.3.1"
detect-secrets = "^1.5.0"
flake8-pyproject = "^1.2.3"
pyupgrade = "^3.20.0"
pip-audit = "^2.9.0"

[build-system]
requires = ["setuptools>=41", "wheel", "setuptools-git-versioning<2", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.setuptools-git-versioning]
enabled = true

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["superlinked*"]
exclude = ["tools*", "test*", "notebook*", "examples*"]

[tool.deptry]
known_first_party = ["superlinked"]

[semantic_release]
assets = []
# version_variables = ["superlinked/framework/__init__.py:__version__"] TODO FAI-2090
commit_message = "[skip ci] {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "{version}"

[semantic_release.branches.main]
match = "(main)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[semantic_release.remote.token]
env = "GH_TOKEN"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false

[tool.mypy]
implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = ["pydantic.mypy", "superlinked.mypy_plugin.schema_field_plugin"]

[[tool.mypy.overrides]]
module = "test.*"
disallow_untyped_defs = false
disable_error_code = "arg-type"

[[tool.mypy.overrides]]
module = [
    "callee.*",
    "joblib.*",
    "graphviz.*",
    "scipy.*",
    "redisvl.*",
    "transformers.*",
    "open_clip.*",
    "datasets.*",
    "umap.*",
    "sklearn.*",
    "furl.*",
    "google.*",
    "huggingface_hub.*",
    "nest_asyncio.*",
    "torchvision.transforms.transforms"
]
ignore_missing_imports = true

[tool.black]
line-length = 120

[tool.flake8]
max-line-length = 120
extend-ignore = ["E203", "E501"]

[tool.pylint.MASTER]
max-args = 6
max-line-length = 120
load-plugins = ["pylint_pydantic"]
disable = [
    "import-error",
    "no-name-in-module",
    "too-many-positional-arguments",
    "missing-module-docstring", # do not enforce docstrings
    "missing-class-docstring", # do not enforce docstrings
    "missing-function-docstring", # do not enforce docstrings
    "too-few-public-methods",
    "protected-access",
    "R0801", # Disable duplication check
    "fixme", # We enable TODOs in the code
    "format", # handled by black
    "design", # disables all complexity / design checks
    "similarities" # redundant with R0801, extra cost
]
