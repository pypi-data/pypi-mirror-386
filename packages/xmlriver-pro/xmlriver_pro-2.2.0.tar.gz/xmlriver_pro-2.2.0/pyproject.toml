[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xmlriver-pro"
version = "2.2.0"
authors = [
    {name = "XMLRiver Pro Team", email = "seo@controlseo.ru"}
]
description = "Professional Python client for XMLRiver API with Wordstat support"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: XML",
]
keywords = [
    "xmlriver", "google", "yandex", "wordstat", "search", "api", "seo",
    "scraping", "search-engine", "news", "images", "maps", "ads",
    "frequency", "keywords"
]
dependencies = [
    "requests>=2.31.0",
    "xmltodict>=0.13.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "pylint>=2.17.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://xmlriver.com"
Repository = "https://github.com/Eapwrk/xmlriver-pro"
"Bug Reports" = "https://github.com/Eapwrk/xmlriver-pro/issues"
"Original Repository" = "https://github.com/KursHub-ru/xmlriver"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pylint]
max-line-length = 88
disable = [
    # "C0330",  # REMOVED - wrong hanging indentation (удалено из pylint 3.x)
    # "C0326",  # REMOVED - bad whitespace (удалено из pylint 3.x)
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
]

[tool.mypy]
python_version = "2.2.0"
warn_return_any = false
warn_unused_configs = true
# Смягченные настройки для постепенного улучшения
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = false  # Убрать ошибки "unreachable code"
strict_equality = true
ignore_missing_imports = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=xmlriver_pro",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-m not real_api",  # По умолчанию ИСКЛЮЧАЕМ тесты с реальными API (они стоят денег!)
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as asyncio tests",
    "real_api: marks tests that make real API calls and COST MONEY (deselect by default with '-m not real_api')",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
