[tool.ruff]
line-length = 120
preview = true

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'single'

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint]
select = ['ALL']
ignore = [
    'D100',
    'D101',
    'D102',
    'D103',
    'D104',
    'D105',
    'D106',
    'D107',
    'D203',
    'D212', # Этот и выше – отсутствие docstring
    'COM812', # Отсутствие запятой после последнего элемента многострочного списка
    'S101', # Использование assert
    'PT012', # pytest.raises() должен содержать одну простую строку
    'PLW1514', # Открытие файла без указания кодировки
    'S310', # Чтение урла из строки
    'S404', # Импорт subprocess
    'S603', # Запуск процессов из строки
    'S607', # Запуск процесса с относительным путем (ruff vs /usr/bin/ruff)
    'B008', # Вызов функции в качестве значения аргумента по умолчанию
    'RSE102', # Использование скобок при raise (raise Error vs raise Error())
    'RET504', # Присваивание переменной перед return
    'RET505', # Использование else после return
    'RET506', # Использование else после raise
    'RET507', # Использование else после continue
    'RET508', # Использование else после break
    'CPY', # Отсутствие copyright-нотиса
    'RUF001', # Использование юникод-символов, похожих на латиницу в строках
    'RUF002', # Использование юникод-символов, похожих на латиницу в docstring
    'RUF003', # Использование юникод-символов, похожих на латиницу в коментариях
    'RUF029', # Функция объявлена async, но не использует асинхронные вещи
    'PLR0913', # Слишком много аргументов функции
    'PLR0914', # Слишком много локальных переменных
    'PLR0917', # Слишком много позиционных аргументов функции
    'ARG', # Неиспользуемый аргумент функции/класса/метода
    'FURB152', # Использование числовых значений вместо констант (3.14 vs math.pi)
    'TRY003', # Использование длинных сообщений при raise вместо объявления их в классе exception'а
    'EM102', # Использование f-строк при raise
    'FBT001', # Использование bool в качестве позиционного аргумента
    'FBT002', # Использование bool в качестве значения по умолчанию для позиционного аргумента
    'ANN', # Аннотации типов, этим занимается mypy
] # При добавлении сюда общих игноров – пишите комментарий и проходите ревью!

[tool.ruff.lint.per-file-ignores]
'tests/**/*.py' = [
    'INP001', # Отсутствие __init__.py
    'PLR2004', # Сравнение магических чисел без выноса в константы
    'FBT003', # Передача bool в качестве позизионного аргумента
    'PLR6301', # Неиспользуемый self в методах
] # При добавлении сюда общих игноров – пишите комментарий и проходите ревью!

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
show_error_codes = true
ignore_missing_imports = true
follow_imports = 'silent'
follow_untyped_imports = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
strict = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true
enable_error_code = ['deprecated']
# after up python to 3.13+ plugin will be removed
# https://mypy.readthedocs.io/en/stable/changelog.html#support-for-deprecated-decorator-pep-702
plugins = 'pystolint.mypy.deprecated_plugin'
