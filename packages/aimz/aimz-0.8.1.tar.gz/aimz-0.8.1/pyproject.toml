[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "aimz"
version = "0.8.1"
description = "Scalable probabilistic impact modeling"
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "Eunseop Kim", email = "markean@pm.me" },
    { name = "Jirapat Samranvedhya", email = "jirapat.samranvedhya@lilly.com" },
]
maintainers = [{ name = "Eunseop Kim", email = "markean@pm.me" }]
requires-python = ">=3.11"
dependencies = [
    "dask>=2025.7",
    "jax>=0.8",
    "numpyro>=0.19.0",
    "scikit-learn>=1.6.1",
    "xarray>=2025.7",
    "zarr>=3,<4",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.optional-dependencies]
dev = ["pre-commit>=4.3", "pytest>=8.4", "pytest-cov>=7", "ruff>=0.14"]
gpu = ["jax[cuda13]>=0.7"]
mlflow = ["mlflow>=3"]
docs = [
    "arviz-plots[matplotlib]>=0.6",
    "flax>=0.12",
    "jupyter-sphinx>=0.5",
    "mlflow>=3",
    "myst-parser>=4.0",
    "pydata-sphinx-theme>=0.16",
    "sphinx>=8.2",
    "sphinx-copybutton>=0.5",
    "sphinx-design>=0.6",
]

[project.urls]
source = "https://github.com/markean/aimz"
documentation = "https://aimz.readthedocs.io/"

[tool.coverage.run]
omit = ["aimz/mlflow/*"]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["ALL"]
ignore = []
pep8-naming = { ignore-names = ["*X*"] }
per-file-ignores = { "aimz/model/_core.py" = [
    "ANN001", # missing-type-function-argument
    "ANN003", # missing-type-kwargs
], "aimz/mlflow*" = [
    "ANN202",  # missing-return-type-private-function
    "ARG001",  # unused-function-argument
    "PLR0913", # too-many-arguments
    "PLC0415", # import-outside-top-level
], "docs*" = [
    "INP001", # implicit-namespace-package
    "A001",   # builtin-variable-shadowing
    "F401",   # unused-import
], "tests*" = [
    "INP001", # implicit-namespace-package
    "ARG001", # unused-function-argument
    "S101",   # assert
], "*.ipynb" = [
    "ERA001", # commented-out-code
    "T201",   # print
    "PD011",  # pandas-use-of-dot-values
    "PD901",  # pandas-df-variable-name
    "D101",   # undocumented-public-class
    "D102",   # undocumented-public-method
    "D103",   # undocumented-public-function
    "D107",   # undocumented-public-init
    "D417",   # undocumented-param
    "S101",   # assert
    "F811",   # redefined-while-unused
] }
pydocstyle = { convention = "google" }
pylint = { max-args = 10 }

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.setuptools.packages.find]
include = ["aimz*"]
namespaces = false

[tool.uv]
native-tls = true
