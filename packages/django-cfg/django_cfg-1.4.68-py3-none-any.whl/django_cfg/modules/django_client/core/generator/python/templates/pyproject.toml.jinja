[tool.poetry]
name = "{{ package_name }}"
version = "{{ version }}"
description = "{{ description }}"
authors = {{ authors | tojson }}
license = "{{ license }}"
readme = "README.md"
{% if repository_url %}repository = "{{ repository_url }}"
{% endif %}keywords = {{ keywords | tojson }}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "{{ python_version }}"
pydantic = "^2.12"
httpx = "^0.28"
tenacity = "^9.1"
rich = "^14.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0"
pytest-asyncio = "^0.24"
pytest-cov = "^6.0"
mypy = "^1.18"
ruff = "^0.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "B"]
ignore = []

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov={{ package_name | replace('-', '_') }} --cov-report=html --cov-report=term"
