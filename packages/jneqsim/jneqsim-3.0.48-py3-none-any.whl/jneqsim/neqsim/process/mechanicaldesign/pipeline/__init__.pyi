
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import java.util
import jpype
import jneqsim.neqsim.process.equipment
import jneqsim.neqsim.process.mechanicaldesign
import typing



class PipeDesign:
    NPS5: typing.ClassVar[typing.MutableSequence[float]] = ...
    S5i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S5o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S5t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS10: typing.ClassVar[typing.MutableSequence[float]] = ...
    S10i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S10o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S10t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS20: typing.ClassVar[typing.MutableSequence[float]] = ...
    S20i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S20o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S20t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS30: typing.ClassVar[typing.MutableSequence[float]] = ...
    S30i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S30o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S30t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS40: typing.ClassVar[typing.MutableSequence[float]] = ...
    S40i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S40o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S40t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS60: typing.ClassVar[typing.MutableSequence[float]] = ...
    S60i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S60o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S60t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS80: typing.ClassVar[typing.MutableSequence[float]] = ...
    S80i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S80o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S80t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS100: typing.ClassVar[typing.MutableSequence[float]] = ...
    S100i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S100o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S100t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS120: typing.ClassVar[typing.MutableSequence[float]] = ...
    S120i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S120o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S120t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS140: typing.ClassVar[typing.MutableSequence[float]] = ...
    S140i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S140o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S140t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPS160: typing.ClassVar[typing.MutableSequence[float]] = ...
    S160i: typing.ClassVar[typing.MutableSequence[float]] = ...
    S160o: typing.ClassVar[typing.MutableSequence[float]] = ...
    S160t: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPSSTD: typing.ClassVar[typing.MutableSequence[float]] = ...
    STDi: typing.ClassVar[typing.MutableSequence[float]] = ...
    STDo: typing.ClassVar[typing.MutableSequence[float]] = ...
    STDt: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPSXS: typing.ClassVar[typing.MutableSequence[float]] = ...
    XSi: typing.ClassVar[typing.MutableSequence[float]] = ...
    XSo: typing.ClassVar[typing.MutableSequence[float]] = ...
    XSt: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPSXXS: typing.ClassVar[typing.MutableSequence[float]] = ...
    XXSi: typing.ClassVar[typing.MutableSequence[float]] = ...
    XXSo: typing.ClassVar[typing.MutableSequence[float]] = ...
    XXSt: typing.ClassVar[typing.MutableSequence[float]] = ...
    NPSS5: typing.ClassVar[typing.MutableSequence[float]] = ...
    SS5DN: typing.ClassVar[typing.MutableSequence[float]] = ...
    SS5i: typing.ClassVar[typing.MutableSequence[float]] = ...
    SS5o: typing.ClassVar[typing.MutableSequence[float]] = ...
    SS5t: typing.ClassVar[typing.MutableSequence[float]] = ...
    scheduleLookup: typing.ClassVar[java.util.Map] = ...
    SSWG_integers: typing.ClassVar[typing.MutableSequence[float]] = ...
    SSWG_inch: typing.ClassVar[typing.MutableSequence[float]] = ...
    SSWG_SI: typing.ClassVar[typing.MutableSequence[float]] = ...
    BWG_integers: typing.ClassVar[typing.MutableSequence[float]] = ...
    BWG_inch: typing.ClassVar[typing.MutableSequence[float]] = ...
    BWG_SI: typing.ClassVar[typing.MutableSequence[float]] = ...
    wireSchedules: typing.ClassVar[java.util.Map] = ...
    def __init__(self): ...
    @staticmethod
    def erosionalVelocity(double: float, double2: float) -> float: ...
    @staticmethod
    def gaugeFromThickness(double: float, boolean: bool, string: typing.Union[java.lang.String, str]) -> float: ...
    @staticmethod
    def main(stringArray: typing.Union[typing.List[java.lang.String], jpype.JArray]) -> None: ...
    @staticmethod
    def nearestPipe(double: float, double2: float, double3: float, string: typing.Union[java.lang.String, str]) -> typing.MutableSequence[float]: ...
    @staticmethod
    def thicknessFromGauge(double: float, boolean: bool, string: typing.Union[java.lang.String, str]) -> float: ...
    class ScheduleData:
        nps: typing.MutableSequence[float] = ...
        dis: typing.MutableSequence[float] = ...
        dos: typing.MutableSequence[float] = ...
        ts: typing.MutableSequence[float] = ...
        def __init__(self, doubleArray: typing.Union[typing.List[float], jpype.JArray], doubleArray2: typing.Union[typing.List[float], jpype.JArray], doubleArray3: typing.Union[typing.List[float], jpype.JArray], doubleArray4: typing.Union[typing.List[float], jpype.JArray]): ...
    class WireScheduleData:
        gaugeNumbers: typing.MutableSequence[float] = ...
        thicknessInch: typing.MutableSequence[float] = ...
        thicknessM: typing.MutableSequence[float] = ...
        something: bool = ...
        def __init__(self, doubleArray: typing.Union[typing.List[float], jpype.JArray], doubleArray2: typing.Union[typing.List[float], jpype.JArray], doubleArray3: typing.Union[typing.List[float], jpype.JArray], boolean: bool): ...

class PipelineMechanicalDesign(jneqsim.neqsim.process.mechanicaldesign.MechanicalDesign):
    def __init__(self, processEquipmentInterface: jneqsim.neqsim.process.equipment.ProcessEquipmentInterface): ...
    def calcDesign(self) -> None: ...
    @staticmethod
    def main(stringArray: typing.Union[typing.List[java.lang.String], jpype.JArray]) -> None: ...
    def readDesignSpecifications(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jneqsim.neqsim.process.mechanicaldesign.pipeline")``.

    PipeDesign: typing.Type[PipeDesign]
    PipelineMechanicalDesign: typing.Type[PipelineMechanicalDesign]
