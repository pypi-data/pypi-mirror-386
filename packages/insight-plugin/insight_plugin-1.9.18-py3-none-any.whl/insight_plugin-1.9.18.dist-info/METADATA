Metadata-Version: 2.1
Name: insight-plugin
Version: 1.9.18
Summary: Tooling for developing plugins for InsightConnect
Home-page: https://github.com/rapid7/insight-plugin
Author: rapid7
Author-email: integrationalliance@rapid7.com
License: MIT
Project-URL: Homepage, https://docs.rapid7.com/insightconnect/getting-started
Project-URL: Documentation, https://docs.rapid7.com/insightconnect/getting-started
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: jinja2==3.1.6
Requires-Dist: pyyaml==6.0.1
Requires-Dist: jsonschema==2.3.0
Requires-Dist: mdutils==1.3.1
Requires-Dist: jq==1.4.0
Requires-Dist: insightconnect-integrations-validators~=2.47
Requires-Dist: markupsafe==2.0.1
Requires-Dist: ruamel.yaml==0.17.21
Requires-Dist: ruamel.yaml.clib==0.2.7
Requires-Dist: semver==3.0.4
Requires-Dist: black==24.10.0
Requires-Dist: parameterized==0.8.1
Requires-Dist: prospector==1.14.1
Requires-Dist: prospector[with_bandit]

# Insight Plugin - CLI Tooling for plugin development

## Commands

### Analysis
Run Static Code Analysis on the plugin.

This command will run the static code analysis check on the plugin.

### Checks
Run analysis, linter and validate on the plugin.

This will allow you to recreate, locally, all the github checks that get run
on plugins.

### Create
Create a new plugin.

This command will generate the skeleton folder structure and 
code for a new plugin, based on the provided plugin.spec.yaml file.

### Export
Export a plugin Docker image to a tarball.

This tarball can be uploaded as a custom plugin 
via the import functionality in the InsightConnect UI.

### Refresh
Refresh the plugin.

This command will update the current plugin code, 
when updates are made in the plugin.spec.yaml file, 
and will also run 'black' to format the code.

### Validate
Validate / Run checks against the plugin. 

This command performs quality control checks on the current 
state of the plugin. 
This should be run before finalizing any new updates.

### Samples
Create test samples for actions and triggers. 

This command will create new files under the 'tests' folder which can be 
used to test each new action/trigger. 
Note if a file already exists for a particular action/trigger, it will be overwritten.

### Run
Run an action/trigger from a json test file (created during sample generation)

### Server
Run the plugin in HTTP mode. 

This allows an external API testing program to be used to test a plugin 

### Shell
Run the plugin via the docker shell to enable advanced debugging

### Convert Event Source

Convert a RapidKit event source to a plugin

This command will generate the skeleton folder structure and 
code for a new plugin, based on the provided RapidKit config.yaml file.
