"use strict";(self.webpackChunkjupyterlab_diff=self.webpackChunkjupyterlab_diff||[]).push([[499],{499:(e,t,o)=>{o.r(t),o.d(t,{default:()=>A});var i=o(762),r=o(424),n=o(544),l=o(356),s=o(325),c=o(198),a=o(24),d=o(337),u=o(332),h=o(694),f=o(256);class p extends f.Widget{constructor(e){var t,o;super(),this._toggleButton=null,this._cell=e.cell,this._cellFooterTracker=e.cellFooterTracker,this._originalSource=e.originalSource,this._newSource=e.newSource||e.cell.sharedModel.getSource(),this._trans=e.trans,this._showActionButtons=null===(t=e.showActionButtons)||void 0===t||t,this._openDiff=null===(o=e.openDiff)||void 0===o||o}addToFooter(){if(!this._cellFooterTracker||!this._cell)return;const e=this._cell.id,t=this._cellFooterTracker.getFooter(e);t&&(t.removeWidget("jupyterlab-diff"),t.removeToolbarItem("accept-diff"),t.removeToolbarItem("reject-diff"),t.removeToolbarItem("toggle-diff"),t.removeToolbarItem("compare"),t.addWidget(this),this._createButtons(t),this._cellFooterTracker.showFooter(e))}onAcceptClick(){this._cell&&(this._cell.sharedModel.setSource(this._newSource),this._closeDiffView())}onRejectClick(){this._cell&&(this._cell.sharedModel.setSource(this._originalSource),this._closeDiffView())}onToggleClick(){this.isHidden?this.show():this.hide()}_createButtons(e){if(this._toggleButton=new h.ToolbarButton({label:this._trans.__("Compare changes"),tooltip:this._trans.__("Compare changes"),enabled:!0,className:"jp-DiffView-toggle",onClick:()=>{this.onToggleClick()}}),e.addToolbarItemOnLeft("toggle-diff",this._toggleButton),this._showActionButtons){const t=new h.ToolbarButton({icon:h.undoIcon,tooltip:this._trans.__("Reject Changes"),enabled:!0,className:"jp-DiffView-reject",onClick:()=>this.onRejectClick()}),o=new h.ToolbarButton({icon:h.checkIcon,tooltip:this._trans.__("Accept Changes"),enabled:!0,className:"jp-DiffView-accept",onClick:()=>this.onAcceptClick()});e.addToolbarItemOnRight("reject-diff",t),e.addToolbarItemOnRight("accept-diff",o)}this._openDiff?this.show():this.hide()}_closeDiffView(){if(this._cellFooterTracker&&this._cell){const e=this._cell.id,t=this._cellFooterTracker.getFooter(e);t&&(t.removeWidget("jupyterlab-diff"),t.removeToolbarItem("accept-diff"),t.removeToolbarItem("reject-diff"),t.removeToolbarItem("toggle-diff"),t.removeToolbarItem("compare")),this._cellFooterTracker.hideFooter(e)}}}class _ extends p{constructor(e){super(e),this._splitView=null,this._originalCode=e.originalSource,this._modifiedCode=e.newSource,this.addClass("jp-SplitDiffView")}onAfterAttach(e){super.onAfterAttach(e),this._createSplitView()}onBeforeDetach(e){this._destroySplitView(),super.onBeforeDetach(e)}_createSplitView(){this._splitView||(this._splitView=new c.MergeView({a:{doc:this._originalCode,extensions:[u.basicSetup,(0,s.python)(),a.EditorView.editable.of(!1),d.jupyterTheme]},b:{doc:this._modifiedCode,extensions:[u.basicSetup,(0,s.python)(),a.EditorView.editable.of(!1),d.jupyterTheme]},parent:this.node}))}_destroySplitView(){this._splitView&&(this._splitView.destroy(),this._splitView=null)}}var g=o(195);function w(e){const{editorView:t,compartment:o,originalSource:i,newSource:r,isInitialized:n,sharedModel:l,onChunkChange:s}=e,d=function(e,t){return(0,c.unifiedMergeView)({original:e,...t,mergeControls:(e,t)=>function(e,t){const o=document.createElement("button");o.className=`jp-merge-${e}-button`,o.onclick=e=>{e.preventDefault(),t(e)};const i=("accept"===e?h.checkIcon:h.undoIcon).element({tag:"span",elementSize:"small"});return o.appendChild(i),o}(e,t)})}(i),u=a.EditorView.updateListener.of((e=>{e.transactions.length>0&&s&&!function(e){const t=(0,c.getChunks)(e.state);return!!(t&&t.chunks.length>0)}(t)&&s()})),f=[d,u],p=[];n?p.push(o.reconfigure(f)):p.push(g.StateEffect.appendConfig.of(o.of(f))),l.setSource(r),t.dispatch({effects:p})}class m{constructor(e){var t;this.acceptAllButton=null,this.rejectAllButton=null,this.editor=e.editor,this._originalSource=e.originalSource,this._newSource=e.newSource,this.trans=e.trans,this.showActionButtons=null===(t=e.showActionButtons)||void 0===t||t,this._isInitialized=!1,this._isDisposed=!1,this._diffCompartment=new g.Compartment}get isDisposed(){return this._isDisposed}dispose(){this._isDisposed||(this._isDisposed=!0,this._deactivate())}activate(){this._applyDiff(),this.addToolbarButtons()}_deactivate(){this.removeToolbarButtons(),this._cleanupEditor()}_cleanupEditor(){const e=this._getEditorView();e&&e.dispatch({effects:[this._diffCompartment.reconfigure([])]})}acceptAll(){this._deactivate()}rejectAll(){this.getSharedModel().setSource(this._originalSource),this._deactivate()}_applyDiff(){const e=this._getEditorView();e?(w({editorView:e,compartment:this._diffCompartment,originalSource:this._originalSource,newSource:this._newSource,isInitialized:this._isInitialized,sharedModel:this.getSharedModel(),onChunkChange:()=>this._deactivate()}),this._isInitialized=!0):console.warn("No editor view found for diff")}_getEditorView(){var e;return(null===(e=this.editor)||void 0===e?void 0:e.editor)||null}}class b extends m{constructor(e){super(e),this._cell=e.cell,this._cellFooterTracker=e.cellFooterTracker,this.activate()}getSharedModel(){return this._cell.sharedModel}addToolbarButtons(){if(!this._cellFooterTracker||!this._cell)return;const e=this._cell.id,t=this._cellFooterTracker.getFooter(e);t&&(this.acceptAllButton=new h.ToolbarButton({icon:h.checkIcon,label:this.trans.__("Accept All"),tooltip:this.trans.__("Accept all chunks"),enabled:!0,className:"jp-UnifiedDiff-acceptAll",onClick:()=>this.acceptAll()}),this.rejectAllButton=new h.ToolbarButton({icon:h.undoIcon,label:this.trans.__("Reject All"),tooltip:this.trans.__("Reject all chunks"),enabled:!0,className:"jp-UnifiedDiff-rejectAll",onClick:()=>this.rejectAll()}),this.showActionButtons&&(t.addToolbarItemOnRight("reject-all",this.rejectAllButton),t.addToolbarItemOnRight("accept-all",this.acceptAllButton)),this._cellFooterTracker.showFooter(e))}removeToolbarButtons(){if(!this._cellFooterTracker||!this._cell)return;const e=this._cell.id,t=this._cellFooterTracker.getFooter(e);t&&(this.showActionButtons&&(t.removeToolbarItem("accept-all"),t.removeToolbarItem("reject-all")),this._cellFooterTracker.hideFooter(e))}}class S extends m{constructor(e){super(e),this._spacer=null,this._fileEditorWidget=e.fileEditorWidget,this.activate()}getSharedModel(){return this.editor.model.sharedModel}addToolbarButtons(){if(!this._fileEditorWidget||!this.showActionButtons)return;const e=this._fileEditorWidget.toolbar;e&&(e.node.hidden=!1,this._spacer=h.Toolbar.createSpacerItem(),this.acceptAllButton=new h.ToolbarButton({icon:h.checkIcon,label:this.trans.__("Accept All"),tooltip:this.trans.__("Accept all chunks"),enabled:!0,className:"jp-UnifiedFileDiff-acceptAll",onClick:()=>this.acceptAll()}),this.rejectAllButton=new h.ToolbarButton({icon:h.undoIcon,label:this.trans.__("Reject All"),tooltip:this.trans.__("Reject all chunks"),enabled:!0,className:"jp-UnifiedFileDiff-rejectAll",onClick:()=>this.rejectAll()}),e.addItem("diff-spacer",this._spacer),e.addItem("reject-all-diff",this.rejectAllButton),e.addItem("accept-all-diff",this.acceptAllButton))}removeToolbarButtons(){if(!this._fileEditorWidget)return;const e=this._fileEditorWidget.toolbar;e&&(this.showActionButtons&&(this._spacer&&(this._spacer.dispose(),this._spacer=null),this.acceptAllButton&&(this.acceptAllButton.dispose(),this.acceptAllButton=null),this.rejectAllButton&&(this.rejectAllButton.dispose(),this.rejectAllButton=null)),0===Array.from(e.names()).length&&(e.node.hidden=!0))}}const k="jupyterlab-diff";function T(e,t){const o=e.find((e=>e.context.path===t));return null!=o?o:e.currentWidget}function v(e,t){var o;const i=e.content,r=i.model;let n=null===(o=i.activeCell)||void 0===o?void 0:o.model;if(t&&r)for(let e=0;e<r.cells.length;e++){const o=r.cells.get(e);if(o.id===t){n=o;break}}return null!=n?n:null}const A=[{id:"jupyterlab-diff:split-cell-diff-plugin",description:"Show cell diff using side-by-side split view",requires:[l.ICellFooterTracker,i.INotebookTracker],optional:[r.ITranslator],autoStart:!0,activate:async(e,t,o,i)=>{const{commands:n}=e,l=(null!=i?i:r.nullTranslator).load(k);n.addCommand("jupyterlab-diff:split-cell-diff",{label:l.__("Show Cell Diff (Split View)"),describedBy:{args:{type:"object",properties:{cellId:{type:"string",description:l.__("ID of the cell to show diff for")},originalSource:{type:"string",description:l.__("Original source code to compare against")},newSource:{type:"string",description:l.__("New source code to compare with")},showActionButtons:{type:"boolean",description:l.__("Whether to show action buttons in the diff widget")},notebookPath:{type:"string",description:l.__("Path to the notebook containing the cell")},openDiff:{type:"boolean",description:l.__("Whether to open the diff widget automatically")}},required:["originalSource","newSource"]}},execute:async(e={})=>{const{cellId:i,originalSource:r,newSource:n,showActionButtons:s=!0,notebookPath:c,openDiff:a=!0}=e;if(!r||!n)return void console.error(l.__("Missing required arguments: originalSource and newSource"));const d=T(o,c);if(!d)return;const u=v(d,i);if(!u)return void console.error(l.__("Missing required arguments: cellId (or no active cell found)"));if(!t.getFooter(u.id))return void console.error(l.__("Footer not found for cell %1",u.id));const h={cell:u,cellFooterTracker:t,originalSource:r,newSource:n,showActionButtons:s,openDiff:a,trans:l};await async function(e){const{cell:t,cellFooterTracker:o,originalSource:i,newSource:r,trans:n,showActionButtons:l=!0,openDiff:s=!0}=e,c=new _({originalSource:i,newSource:r,cell:t,cellFooterTracker:o,showActionButtons:l,openDiff:s,trans:n});return c.addClass("jupyterlab-diff"),c.addToFooter(),c}(h)}})}},{id:"jupyterlab-diff:unified-cell-diff-plugin",description:"Show cell diff using unified view",requires:[l.ICellFooterTracker,i.INotebookTracker],optional:[r.ITranslator],autoStart:!0,activate:async(e,t,o,i)=>{const{commands:n}=e,l=(null!=i?i:r.nullTranslator).load(k),s=new Map;n.addCommand("jupyterlab-diff:unified-cell-diff",{label:l.__("Show Cell Diff (Unified)"),describedBy:{args:{type:"object",properties:{cellId:{type:"string",description:l.__("ID of the cell to show diff for")},originalSource:{type:"string",description:l.__("Original source code to compare against")},newSource:{type:"string",description:l.__("New source code to compare with")},showActionButtons:{type:"boolean",description:l.__("Whether to show action buttons for chunk acceptance")},notebookPath:{type:"string",description:l.__("Path to the notebook containing the cell")}},required:["originalSource","newSource"]}},execute:async(e={})=>{const{cellId:i,originalSource:r,newSource:n,showActionButtons:c=!0,notebookPath:a}=e;if(!r||!n)return void console.error(l.__("Missing required arguments: originalSource and newSource"));const d=T(o,a);if(!d)return;const u=v(d,i);if(!u)return void console.error(l.__("Missing required arguments: cellId (or no active cell found)"));const h=d.content.widgets.find((e=>e.model.id===u.id));if(!h||!h.editor)return void console.error(l.__("No editor found for cell %1",u.id));const f=s.get(u.id);f&&!f.isDisposed&&f.dispose();const p=await async function(e){return new b(e)}({cell:u,editor:h.editor,cellFooterTracker:t,originalSource:r,newSource:n,showActionButtons:c,trans:l});s.set(u.id,p)}})}},{id:"jupyterlab-diff:unified-file-diff-plugin",description:"Show file diff using unified view",requires:[n.IEditorTracker],optional:[r.ITranslator],autoStart:!0,activate:async(e,t,o)=>{const{commands:i}=e,n=(null!=o?o:r.nullTranslator).load(k),l=new Map;i.addCommand("jupyterlab-diff:unified-file-diff",{label:n.__("Diff File (Unified)"),describedBy:{args:{type:"object",properties:{filePath:{type:"string",description:n.__("Path to the file to diff. Defaults to current file in editor.")},originalSource:{type:"string",description:n.__("Original source code to compare against")},newSource:{type:"string",description:n.__("New source code to compare with")},showActionButtons:{type:"boolean",description:n.__("Whether to show action buttons for chunk acceptance. Defaults to true.")}},required:["originalSource","newSource"]}},execute:async(e={})=>{var o;const{filePath:i,originalSource:r,newSource:s,showActionButtons:c=!0}=e;if(!r||!s)return void console.error(n.__("Missing required arguments: originalSource and newSource"));let a=t.currentWidget;if(i){const e=t.find((e=>{var t;return(null===(t=e.context)||void 0===t?void 0:t.path)===i}));e&&(a=e)}if(a||(a=t.currentWidget),!a)return void console.error(n.__("No editor found for the file"));const d=a.content.editor;if(!d)return void console.error(n.__("No code editor found in the file widget"));const u=i||(null===(o=a.context)||void 0===o?void 0:o.path)||"default",h=l.get(u);h&&!h.isDisposed&&h.dispose();const f=await async function(e){return new S(e)}({editor:d,fileEditorWidget:a,originalSource:r,newSource:s,showActionButtons:c,trans:n});l.set(u,f)}})}}]}}]);