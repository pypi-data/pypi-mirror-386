[pytest]
# Pytest configuration for agent_mem tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=agent_mem
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    -ra

# Markers for test categorization
markers =
    unit: Unit tests with mocked dependencies
    integration: Integration tests requiring databases
    slow: Slow tests that take significant time
    asyncio: Tests using asyncio

# Async configuration
asyncio_mode = auto

# Coverage options
[coverage:run]
source = agent_mem
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (prevent hanging)
timeout = 300

# Minimum Python version
minversion = 7.0
