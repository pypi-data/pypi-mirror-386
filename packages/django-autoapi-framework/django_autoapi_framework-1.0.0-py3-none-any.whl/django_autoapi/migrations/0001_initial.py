# Generated by Django 5.2.7 on 2025-10-22 06:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RecordRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for this rule', max_length=200)),
                ('active', models.BooleanField(default=True, help_text='Enable/disable this rule')),
                ('domain_filter', models.JSONField(default=dict, help_text='Filter criteria in JSON format. Use ${} for variables.')),
                ('perm_read', models.BooleanField(default=True, help_text='Apply rule for read operations (GET)')),
                ('perm_write', models.BooleanField(default=False, help_text='Apply rule for write operations (POST, PUT, PATCH)')),
                ('perm_create', models.BooleanField(default=False, help_text='Apply rule for create operations (POST)')),
                ('perm_delete', models.BooleanField(default=False, help_text='Apply rule for delete operations (DELETE)')),
                ('global_rule', models.BooleanField(default=False, help_text='Apply to all users (ignore groups)')),
                ('priority', models.IntegerField(default=0, help_text='Higher priority rules are applied first')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(help_text='Model to apply this rule to', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('groups', models.ManyToManyField(blank=True, help_text='Groups this rule applies to', to='auth.group')),
            ],
            options={
                'verbose_name': 'Record Rule',
                'verbose_name_plural': 'Record Rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RecordRuleBypass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='Enable/disable this bypass')),
                ('reason', models.CharField(blank=True, help_text='Reason for bypass (for auditing)', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Specific model to bypass (null = all models)', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(help_text='User who can bypass rules', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Record Rule Bypass',
                'verbose_name_plural': 'Record Rule Bypasses',
                'unique_together': {('user', 'content_type')},
            },
        ),
    ]
