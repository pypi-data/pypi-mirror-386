Metadata-Version: 2.4
Name: lx-anonymizer
Version: 0.8.3
Summary: OCR-driven anonymization pipeline for medical reports and endoscopy frames
Project-URL: Changelog, https://github.com/wg-lux/lx-anonymizer/blob/main/CHANGELOG.md
Project-URL: Documentation, https://github.com/wg-lux/lx-anonymizer#readme
Project-URL: Homepage, https://github.com/wg-lux/lx-anonymizer
Project-URL: Issue Tracker, https://github.com/wg-lux/lx-anonymizer/issues
Author-email: Max Hild <maxhild10@gmail.com>, "Thomas J. Lux" <lux_t1@ukw.de>
Maintainer-email: WG Lux <lux@coloreg.de>
License: MIT License
        
        Copyright (c) 2025 WG Lux
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: anonymization,medical,nlp,ocr,privacy
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Healthcare Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: German
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Image Processing
Classifier: Topic :: Scientific/Engineering :: Medical Science Apps.
Classifier: Topic :: Text Processing :: Linguistic
Requires-Python: >=3.12
Requires-Dist: certifi>=2024.8.30
Requires-Dist: dateparser>=1.2.1
Requires-Dist: django>=5.2.7
Requires-Dist: faker>=37.1.0
Requires-Dist: flair>=0.15.1
Requires-Dist: gender-guesser>=0.4.0
Requires-Dist: imutils>=0.5.4
Requires-Dist: numpy>=1.26.0
Requires-Dist: opencv-python>=4.10.0.84
Requires-Dist: pdfplumber>=0.11.7
Requires-Dist: pillow>=10.4.0
Requires-Dist: pip>=25.2
Requires-Dist: protobuf>=6.30.2
Requires-Dist: pydantic>=2.9.0
Requires-Dist: pymupdf>=1.25.1
Requires-Dist: pyspellchecker>=0.8.2
Requires-Dist: pytesseract>=0.3.13
Requires-Dist: rapidfuzz>=3.13.0
Requires-Dist: requests>=2.32.3
Requires-Dist: spacy==3.8.3
Requires-Dist: tenacity>=9.1.2
Requires-Dist: torch>=2.5.1
Requires-Dist: torchaudio>=2.5.1
Requires-Dist: torchvision>=0.20.1
Provides-Extra: dev
Requires-Dist: build>=1.3.0; extra == 'dev'
Requires-Dist: flake8>=7.1.1; extra == 'dev'
Requires-Dist: pytest-cov>=5.0.0; extra == 'dev'
Requires-Dist: pytest>=7.0.1; extra == 'dev'
Requires-Dist: twine>=6.2.0; extra == 'dev'
Requires-Dist: uv>=0.4.17; extra == 'dev'
Provides-Extra: django
Requires-Dist: django>=5.2; extra == 'django'
Provides-Extra: llm
Requires-Dist: hezar>=0.42.0; extra == 'llm'
Requires-Dist: ollama>=0.4.7; extra == 'llm'
Requires-Dist: tiktoken>=0.9.0; extra == 'llm'
Requires-Dist: transformers==4.44.2; extra == 'llm'
Provides-Extra: ocr
Requires-Dist: tesserocr>=2.8.0; extra == 'ocr'
Requires-Dist: verovio>=5.1.0; extra == 'ocr'
Description-Content-Type: text/markdown

# LX Anonymizer

LX Anonymizer is a toolkit for de-identifying endoscopy frames and medical reports. It combines OCR pipelines, spaCy-based NER, heuristic sanitizers, and report-specific rules to redact or pseudonymize sensitive information while preserving clinical context.

## Highlights
- **End-to-end anonymization** of PDFs and frame sequences using OCR, NER, and pseudonymization helpers.
- **Modular pipeline** that lets you choose between Tesseract, TrOCR, ensemble OCR, and multiple metadata extractors.
- **Human-in-the-loop ready** outputs: original/anonymized text side by side, metadata JSON, and validation artefacts.
- **Extensible ruleset** covering device-specific renderers, fuzzy name matching, and language-specific replacements.

## Requirements
- Python 3.12+
- Linux or macOS (Windows support is experimental)
- NVIDIA GPU recommended for real-time video anonymization (CUDA 12.x). CPU-only processing works but is slower.
- Optional extras:
  - spaCy `de_core_news_lg` model (download after installation)
  - Torch vision/audio for video OCR workloads
  - Ollama-compatible LLMs for advanced metadata extraction

## Installation

### From PyPI *(upcoming release)*
```bash
pip install lx-anonymizer
```

Install extras to tailor the footprint:
```bash
pip install "lx-anonymizer[gpu,ocr,llm,dev]"
```

### From source
```bash
git clone https://github.com/wg-lux/lx-anonymizer.git
cd lx-anonymizer
uv sync
```

### Nix development shell
```bash
direnv allow
nix develop
```
This loads GPU, OCR, and tooling dependencies declared in `devenv.nix`.

## Model downloads
After installation, fetch the German spaCy model:
```bash
python -m spacy download de_core_news_lg
```
First CLI runs also download OCR checkpoints (EAST, TrOCR, etc.). For air-gapped deployments, grab the archives listed in [`lx_anonymizer/settings.py`](lx_anonymizer/settings.py) and place them in `~/.cache/lx-anonymizer`.

## Quickstart

### CLI
```bash
python -m cli.report_reader process report.pdf --ensemble --output-dir ./anonymized
```
Useful options:
- `--llm-extractor {deepseek,medllama,llama3}` for LLM-powered metadata extraction.
- `--use-ocr` and `--ensemble` to switch OCR strategies.
- `batch` and `extract` sub-commands for folder processing or metadata-only runs.

### Python API
```python
from lx_anonymizer import ReportReader

reader = ReportReader(locale="de_DE")
original, anonymized, meta = reader.process_report(
    pdf_path="/path/to/report.pdf",
    use_ensemble=True,
    use_llm_extractor="deepseek",
)
```
See [`tests/test_cli_integration.py`](tests/test_cli_integration.py) for more examples.

## Data directories
By default, outputs live in `~/etc/lx-anonymizer/{data,temp}`. Adjust them in [`lx_anonymizer/directory_setup.py`](lx_anonymizer/directory_setup.py). Clean `temp` regularly to avoid large intermediate artefacts.

## Development workflow
- Format & lint: `uv run flake8`
- Tests (CPU friendly): `uv run pytest -m "not gpu"`
  - GPU tests are marked and can be run with `-m gpu`
- Build wheel for release: `uv run python -m build`
- Full local check helper: `scripts/run_checks.sh`

## Project roadmap
1. Publish CPU-only wheel to TestPyPI.
2. Add optional extras for GPU/LLM workloads and slim default install.
3. Automate release workflow (wheel + sdist upload, GitHub release notes).
4. Expose REST/gRPC service with validation UI.

## Contributing
See [`CONTRIBUTING.md`](CONTRIBUTING.md) for contribution guidelines, testing instructions, and communication channels.

## License
Released under the [MIT License](LICENSE).

## Contact
Questions? Email lux@coloreg.de .



