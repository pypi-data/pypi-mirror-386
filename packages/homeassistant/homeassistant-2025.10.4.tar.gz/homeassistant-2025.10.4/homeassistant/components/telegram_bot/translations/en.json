{
    "config": {
        "abort": {
            "already_configured": "Service is already configured",
            "reauth_successful": "Re-authentication was successful",
            "reconfigure_successful": "Re-configuration was successful"
        },
        "error": {
            "invalid_api_key": "Invalid API key",
            "invalid_proxy_url": "{proxy_url_error}",
            "invalid_trusted_networks": "Invalid trusted network: {error_message}",
            "invalid_url": "URL must start with https",
            "no_url_available": "URL is required since you have not configured an external URL in Home Assistant",
            "telegram_error": "Error from Telegram: {error_message}"
        },
        "step": {
            "reauth_confirm": {
                "data": {
                    "api_key": "API key"
                },
                "data_description": {
                    "api_key": "The API token of your bot."
                },
                "title": "Re-authenticate Telegram bot"
            },
            "reconfigure": {
                "data": {
                    "platform": "Platform"
                },
                "data_description": {
                    "platform": "Telegram bot implementation"
                },
                "description": "Reconfigure Telegram bot",
                "sections": {
                    "advanced_settings": {
                        "data": {
                            "proxy_url": "Proxy URL"
                        },
                        "data_description": {
                            "proxy_url": "Proxy URL if working behind one, optionally including username and password.\n(socks5://username:password@proxy_ip:proxy_port)"
                        },
                        "name": "Advanced settings"
                    }
                },
                "title": "Telegram bot setup"
            },
            "user": {
                "data": {
                    "api_key": "API token",
                    "platform": "Platform"
                },
                "data_description": {
                    "api_key": "The API token of your bot.",
                    "platform": "Telegram bot implementation"
                },
                "description": "To create a Telegram bot, follow these steps:\n\n1. Open Telegram and start a chat with [{botfather_username}]({botfather_url}).\n1. Send the command `/newbot`.\n1. Follow the instructions to create your bot and get your API token.",
                "sections": {
                    "advanced_settings": {
                        "data": {
                            "proxy_url": "Proxy URL"
                        },
                        "data_description": {
                            "proxy_url": "Proxy URL if working behind one, optionally including username and password.\n(socks5://username:password@proxy_ip:proxy_port)"
                        },
                        "name": "Advanced settings"
                    }
                }
            },
            "webhooks": {
                "data": {
                    "trusted_networks": "Trusted networks",
                    "url": "URL"
                },
                "data_description": {
                    "trusted_networks": "Telegram server access ACL as list.\nDefault: 149.154.160.0/20, 91.108.4.0/22",
                    "url": "Allow to overwrite the external URL from the Home Assistant configuration for different setups."
                },
                "title": "Webhooks network configuration"
            }
        }
    },
    "config_subentries": {
        "allowed_chat_ids": {
            "abort": {
                "already_configured": "Chat already configured"
            },
            "error": {
                "chat_not_found": "Chat not found"
            },
            "initiate_flow": {
                "user": "Add allowed chat ID"
            },
            "step": {
                "user": {
                    "data": {
                        "chat_id": "Chat ID"
                    },
                    "data_description": {
                        "chat_id": "ID representing the user or group chat to which messages can be sent."
                    },
                    "title": "Add chat"
                }
            }
        }
    },
    "exceptions": {
        "allowlist_external_dirs_error": {
            "message": "File path has not been configured in allowlist_external_dirs."
        },
        "failed_chat_ids": {
            "message": "Failed targets: {chat_ids}. Please verify that the chat IDs for {bot_name} have been configured."
        },
        "failed_to_load_file": {
            "message": "Failed to load file: {error}"
        },
        "failed_to_load_url": {
            "message": "Failed to load URL: {error}"
        },
        "invalid_chat_ids": {
            "message": "Invalid chat IDs: {chat_ids}. Please configure the chat IDs for {bot_name}."
        },
        "missing_allowed_chat_ids": {
            "message": "No allowed chat IDs found. Please add allowed chat IDs for {bot_name}."
        },
        "missing_config_entry": {
            "message": "No config entries found or setup failed. Please set up the Telegram Bot first."
        },
        "missing_input": {
            "message": "{field} is required."
        },
        "multiple_config_entry": {
            "message": "Multiple config entries found. Please specify the Telegram bot to use in the Config entry ID field."
        }
    },
    "issues": {
        "deprecated_yaml": {
            "description": "Configuring {integration_title} using YAML is being removed.\n\nYour existing YAML configuration has been imported into the UI automatically.\n\nRemove the `{domain}` configuration from your configuration.yaml file and restart Home Assistant to fix this issue.",
            "title": "The {integration_title} YAML configuration is being removed"
        },
        "deprecated_yaml_import_issue_error": {
            "description": "Configuring {integration_title} using YAML is being removed but there was an error while importing your existing configuration ({telegram_bot}): {error_message}.\nSetup will not proceed.\n\nVerify that your {telegram_bot} is operating correctly and restart Home Assistant to attempt the import again.\n\nAlternatively, you may remove the `{domain}` configuration from your configuration.yaml entirely, restart Home Assistant, and add the {integration_title} integration manually.",
            "title": "YAML import failed due to invalid {error_field}"
        },
        "deprecated_yaml_import_issue_has_more_platforms": {
            "description": "Configuring {integration_title} using YAML is being removed.\n\nThe last entry of your existing YAML configuration ({telegram_bot}) has been imported into the UI automatically.\n\nRemove the `{domain}` configuration from your configuration.yaml file and restart Home Assistant to fix this issue. The other Telegram bots will need to be configured manually in the UI.",
            "title": "The {integration_title} YAML configuration is being removed"
        }
    },
    "options": {
        "step": {
            "init": {
                "data": {
                    "parse_mode": "Parse mode"
                },
                "data_description": {
                    "parse_mode": "Default parse mode for messages if not explicit in message data."
                },
                "title": "Configure Telegram bot"
            }
        }
    },
    "selector": {
        "authentication": {
            "options": {
                "basic": "Basic",
                "bearer_token": "Bearer token",
                "digest": "Digest"
            }
        },
        "chat_action": {
            "options": {
                "choose_sticker": "Choosing sticker",
                "find_location": "Finding location",
                "record_video": "Recording video",
                "record_video_note": "Recording video note",
                "record_voice": "Recording voice",
                "typing": "Typing",
                "upload_document": "Uploading document",
                "upload_photo": "Uploading photo",
                "upload_video": "Uploading video",
                "upload_video_note": "Uploading video note",
                "upload_voice": "Uploading voice"
            }
        },
        "parse_mode": {
            "options": {
                "html": "HTML",
                "markdown": "Markdown (Legacy)",
                "markdownv2": "MarkdownV2",
                "plain_text": "Plain text"
            }
        },
        "platforms": {
            "options": {
                "broadcast": "Broadcast",
                "polling": "Polling",
                "webhooks": "Webhooks"
            }
        }
    },
    "services": {
        "answer_callback_query": {
            "description": "Responds to a callback query originated by clicking on an online keyboard button. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert.",
            "fields": {
                "callback_query_id": {
                    "description": "Unique ID of the callback response.",
                    "name": "Callback query ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to answer the callback query.",
                    "name": "Config entry ID"
                },
                "message": {
                    "description": "Unformatted text message body of the notification.",
                    "name": "Message"
                },
                "show_alert": {
                    "description": "Show a permanent notification.",
                    "name": "Show alert"
                },
                "timeout": {
                    "description": "Timeout for sending the answer in seconds.",
                    "name": "Read timeout"
                }
            },
            "name": "Answer callback query"
        },
        "delete_message": {
            "description": "Deletes a previously sent message.",
            "fields": {
                "chat_id": {
                    "description": "ID of the chat where to delete the message.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to delete the message.",
                    "name": "Config entry ID"
                },
                "message_id": {
                    "description": "ID of the message to delete.",
                    "name": "Message ID"
                }
            },
            "name": "Delete message"
        },
        "edit_caption": {
            "description": "Edits the caption of a previously sent message.",
            "fields": {
                "caption": {
                    "description": "Message body of the notification.",
                    "name": "Caption"
                },
                "chat_id": {
                    "description": "ID of the chat where to edit the caption.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to edit the caption.",
                    "name": "Config entry ID"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "message_id": {
                    "description": "ID of the message to edit.",
                    "name": "Message ID"
                }
            },
            "name": "Edit caption"
        },
        "edit_message": {
            "description": "Edits a previously sent message.",
            "fields": {
                "chat_id": {
                    "description": "ID of the chat where to edit the message.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to edit the message.",
                    "name": "Config entry ID"
                },
                "disable_web_page_preview": {
                    "description": "Disables link previews for links in the message.",
                    "name": "Disable web page preview"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "message": {
                    "description": "Message body of the notification.",
                    "name": "Message"
                },
                "message_id": {
                    "description": "ID of the message to edit.",
                    "name": "Message ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse mode"
                },
                "title": {
                    "description": "Optional title for your notification. Will be composed as '%title\n%message'.",
                    "name": "Title"
                }
            },
            "name": "Edit message"
        },
        "edit_replymarkup": {
            "description": "Edits the inline keyboard of a previously sent message.",
            "fields": {
                "chat_id": {
                    "description": "ID of the chat where to edit the reply markup.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to edit the reply markup.",
                    "name": "Config entry ID"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "message_id": {
                    "description": "ID of the message to edit.",
                    "name": "Message ID"
                }
            },
            "name": "Edit reply markup"
        },
        "leave_chat": {
            "description": "Removes the bot from the chat.",
            "fields": {
                "chat_id": {
                    "description": "Chat ID of the group from which the bot should be removed.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to leave the chat.",
                    "name": "Config entry ID"
                }
            },
            "name": "Leave chat"
        },
        "send_animation": {
            "description": "Sends an animation.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "caption": {
                    "description": "The title of the animation.",
                    "name": "Caption"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the animation.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to a GIF or H.264/MPEG-4 AVC video without sound.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse Mode"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the sticker in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to a GIF or H.264/MPEG-4 AVC video without sound.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send animation"
        },
        "send_chat_action": {
            "description": "Sends a chat action.",
            "fields": {
                "chat_action": {
                    "description": "Chat action to be sent.",
                    "name": "Chat action"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the chat action.",
                    "name": "Config entry ID"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the chat action to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                }
            },
            "name": "Send chat action"
        },
        "send_document": {
            "description": "Sends a document.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "caption": {
                    "description": "The title of the document.",
                    "name": "Caption"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the document.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to a document.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse mode"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the document in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to a document.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send document"
        },
        "send_location": {
            "description": "Sends a location.",
            "fields": {
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the location.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "latitude": {
                    "description": "The latitude to send.",
                    "name": "Latitude"
                },
                "longitude": {
                    "description": "The longitude to send.",
                    "name": "Longitude"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the location to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the photo in seconds.",
                    "name": "Read timeout"
                }
            },
            "name": "Send location"
        },
        "send_message": {
            "description": "Sends a notification.",
            "fields": {
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the message.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "disable_web_page_preview": {
                    "description": "Disables link previews for links in the message.",
                    "name": "Disable web page preview"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard. Empty list clears a previously set keyboard.",
                    "name": "Keyboard"
                },
                "message": {
                    "description": "Message body of the notification.",
                    "name": "Message"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse mode"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the notification to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the message in seconds. Will help with timeout errors (poor Internet connection, etc).",
                    "name": "Read timeout"
                },
                "title": {
                    "description": "Optional title for your notification. Will be composed as '%title\n%message'.",
                    "name": "Title"
                }
            },
            "name": "Send message"
        },
        "send_photo": {
            "description": "Sends a photo.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "caption": {
                    "description": "The title of the image.",
                    "name": "Caption"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the photo.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to an image.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse mode"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the photo in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to an image.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send photo"
        },
        "send_poll": {
            "description": "Sends a poll.",
            "fields": {
                "allows_multiple_answers": {
                    "description": "If the poll allows multiple answers.",
                    "name": "Allow multiple answers"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the poll.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "is_anonymous": {
                    "description": "If the poll needs to be anonymous. This is the default.",
                    "name": "Is anonymous"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "open_period": {
                    "description": "Amount of time in seconds the poll will be active after creation, 5-600.",
                    "name": "Open period"
                },
                "options": {
                    "description": "List of answer options, 2-10 strings 1-100 characters each.",
                    "name": "Options"
                },
                "question": {
                    "description": "Poll question, 1-300 characters.",
                    "name": "Question"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the location to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the poll in seconds.",
                    "name": "Read timeout"
                }
            },
            "name": "Send poll"
        },
        "send_sticker": {
            "description": "Sends a sticker.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the sticker.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to a static .webp or animated .tgs sticker.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "sticker_id": {
                    "description": "ID of a sticker that exists on telegram servers.",
                    "name": "Sticker ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the sticker in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to a static .webp or animated .tgs sticker.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send sticker"
        },
        "send_video": {
            "description": "Sends a video.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "caption": {
                    "description": "The title of the video.",
                    "name": "Caption"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the video.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to a video.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "parse_mode": {
                    "description": "Parser for the message text.",
                    "name": "Parse mode"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the video in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to a video.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send video"
        },
        "send_voice": {
            "description": "Sends a voice message.",
            "fields": {
                "authentication": {
                    "description": "Define which authentication method to use. Set to 'Basic' for HTTP basic authentication, 'Digest' for HTTP digest authentication, or 'Bearer token' for OAuth 2.0 bearer token authentication.",
                    "name": "Authentication method"
                },
                "caption": {
                    "description": "The title of the voice message.",
                    "name": "Caption"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to send the voice message.",
                    "name": "Config entry ID"
                },
                "disable_notification": {
                    "description": "Sends the message silently. iOS users and Web users will not receive a notification, Android users will receive a notification with no sound.",
                    "name": "Disable notification"
                },
                "file": {
                    "description": "Local path to a voice message.",
                    "name": "File"
                },
                "inline_keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom inline keyboard with buttons with associated callback data.",
                    "name": "Inline keyboard"
                },
                "keyboard": {
                    "description": "List of rows of commands, comma-separated, to make a custom keyboard.",
                    "name": "Keyboard"
                },
                "message_tag": {
                    "description": "Tag for sent message.",
                    "name": "Message tag"
                },
                "message_thread_id": {
                    "description": "Unique identifier for the target message thread (topic) of the forum; for forum supergroups only.",
                    "name": "Message thread ID"
                },
                "password": {
                    "description": "Password (or bearer token) for a URL that requires authentication.",
                    "name": "Password"
                },
                "reply_to_message_id": {
                    "description": "Mark the message as a reply to a previous message.",
                    "name": "Reply to message ID"
                },
                "target": {
                    "description": "An array of pre-authorized chat IDs to send the document to. If not present, first allowed chat ID is the default.",
                    "name": "Target"
                },
                "timeout": {
                    "description": "Timeout for sending the voice in seconds.",
                    "name": "Read timeout"
                },
                "url": {
                    "description": "Remote path to a voice message.",
                    "name": "URL"
                },
                "username": {
                    "description": "Username for a URL that requires 'Basic' or 'Digest' authentication.",
                    "name": "Username"
                },
                "verify_ssl": {
                    "description": "Enable or disable SSL certificate verification. Disable if you're downloading the file from a URL and you don't want to validate the SSL certificate of the server.",
                    "name": "Verify SSL"
                }
            },
            "name": "Send voice"
        },
        "set_message_reaction": {
            "description": "Sets the bot's reaction for a given message.",
            "fields": {
                "chat_id": {
                    "description": "ID of the chat containing the message.",
                    "name": "Chat ID"
                },
                "config_entry_id": {
                    "description": "The config entry representing the Telegram bot to set the message reaction.",
                    "name": "Config entry ID"
                },
                "is_big": {
                    "description": "Whether the reaction animation should be large.",
                    "name": "Large animation"
                },
                "message_id": {
                    "description": "ID of the message to react to.",
                    "name": "Message ID"
                },
                "reaction": {
                    "description": "Emoji reaction to use.",
                    "name": "Reaction"
                }
            },
            "name": "Set message reaction"
        }
    }
}