{
    "config": {
        "abort": {
            "already_configured": "Ger\u00e4t ist bereits konfiguriert",
            "already_in_progress": "Konfigurationsablauf wird bereits ausgef\u00fchrt",
            "api_error": "Fehler bei der Kommunikation mit Mi-API: {error_detail}",
            "no_devices_found": "Keine Ger\u00e4te im Netzwerk gefunden",
            "reauth_successful": "Die erneute Authentifizierung war erfolgreich"
        },
        "error": {
            "api_device_not_found": "Das Ger\u00e4t wurde in deinem Mi-Konto nicht gefunden.",
            "auth_failed": "Authentifizierung fehlgeschlagen: {error_detail}",
            "decryption_failed": "Der bereitgestellte Bindkey funktionierte nicht, Sensordaten konnten nicht entschl\u00fcsselt werden. Bitte \u00fcberpr\u00fcfe es und versuche es erneut.",
            "expected_24_characters": "Erwartet wird ein 24-stelliger hexadezimaler Bindkey.",
            "expected_32_characters": "Erwartet wird ein 32-stelliger hexadezimaler Bindkey."
        },
        "flow_title": "{name}",
        "step": {
            "bluetooth_confirm": {
                "description": "M\u00f6chtest du {name} einrichten?"
            },
            "cloud_auth": {
                "data": {
                    "password": "Passwort",
                    "username": "Benutzername"
                },
                "description": "Bitte gib deinen Benutzernamen und Passwort f\u00fcr die Mi-App ein. Diese Daten werden nicht gespeichert und nur zum Abrufen des Codes f\u00fcr die Ger\u00e4teverschl\u00fcsselung verwendet. Bei Benutzernamen und Passw\u00f6rtern muss die Gro\u00df- und Kleinschreibung beachtet werden."
            },
            "confirm_slow": {
                "description": "Von diesem Ger\u00e4t wurde in der letzten Minute kein Broadcast gesendet, sodass wir nicht sicher sind, ob dieses Ger\u00e4t Verschl\u00fcsselung verwendet oder nicht. Dies kann daran liegen, dass das Ger\u00e4t ein langsames Sendeintervall verwendet. Best\u00e4tige, dass du das Ger\u00e4t trotzdem hinzuf\u00fcgen m\u00f6chtest. Wenn das n\u00e4chste Mal ein Broadcast empfangen wird, wirst du aufgefordert, den Bindkey einzugeben, falls er ben\u00f6tigt wird."
            },
            "get_encryption_key_4_5": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Die vom Sensor \u00fcbertragenen Sensordaten sind verschl\u00fcsselt. Um sie zu entschl\u00fcsseln, ben\u00f6tigen wir einen 32-stelligen hexadezimalen Bindkey."
            },
            "get_encryption_key_4_5_choose_method": {
                "description": "Ein Mi-Ger\u00e4t kann in Home Assistant auf zwei verschiedene Arten eingerichtet werden.\n\nDu kannst den Bindkey selbst eingeben oder Home Assistant kann ihn aus deinem Mi-Konto importieren.",
                "menu_options": {
                    "cloud_auth": "Mi-Konto (empfohlen)",
                    "get_encryption_key_4_5": "Verschl\u00fcsselungscode manuell eingeben"
                }
            },
            "get_encryption_key_legacy": {
                "data": {
                    "bindkey": "Bindkey"
                },
                "description": "Die vom Sensor \u00fcbertragenen Sensordaten sind verschl\u00fcsselt. Um sie zu entschl\u00fcsseln, ben\u00f6tigen wir einen 24-stelligen hexadezimalen Bindkey."
            },
            "user": {
                "data": {
                    "address": "Ger\u00e4t"
                },
                "description": "W\u00e4hle ein Ger\u00e4t zum Einrichten aus"
            }
        }
    },
    "device_automation": {
        "trigger_subtype": {
            "abnormal": "Abnormal",
            "double_press": "Doppeltes Dr\u00fccken",
            "insufficient_area": "Unzureichende Fl\u00e4che",
            "lock_inside_the_door": "Abschlie\u00dfen der T\u00fcr von innen",
            "lock_outside_the_door": "Abschlie\u00dfen der T\u00fcr von au\u00dfen",
            "locked": "Gesperrt",
            "long_press": "Langes Dr\u00fccken",
            "low_quality_too_light_fuzzy": "Geringe Qualit\u00e4t (zu hell, unscharf)",
            "match_failed": "\u00dcbereinstimmung fehlgeschlagen",
            "match_successful": "\u00dcbereinstimmung erfolgreich",
            "motion_detected": "Bewegung erkannt",
            "press": "Dr\u00fccken",
            "release_the_antilock": "Antiblockiersystem l\u00f6sen",
            "rotate_left": "Nach links drehen",
            "rotate_left_pressed": "Nach links drehen (gedr\u00fcckt)",
            "rotate_right": "Nach rechts drehen",
            "rotate_right_pressed": "Nach rechts drehen (gedr\u00fcckt)",
            "skin_is_too_dry": "Die Haut ist zu trocken",
            "skin_is_too_wet": "Die Haut ist zu nass",
            "turn_off_child_lock": "Kindersicherung ausschalten",
            "turn_on_antilock": "Antiblockiersystem einschalten",
            "turn_on_child_lock": "Kindersicherung einschalten",
            "unlock_inside_the_door": "Aufschlie\u00dfen der T\u00fcr von innen",
            "unlock_outside_the_door": "Aufschlie\u00dfen der T\u00fcr von au\u00dfen"
        },
        "trigger_type": {
            "button": "Taste \u201e{subtype}\u201c",
            "button_air_exchange": "Taste Luftaustausch \u201e{subtype}\u201c",
            "button_brightness": "Taste Helligkeit \u201e{subtype}\u201c",
            "button_color_temperature": "Taste Farbtemperatur \u201e{subtype}\u201c",
            "button_decrease_speed": "Taste Geschwindigkeit verringern \u201e{subtype}\u201c",
            "button_decrease_wind_speed": "Taste Windgeschwindigkeit verringern \u201e{subtype}\u201c",
            "button_dry": "Trocknen-Taste \u201e{subtype}\u201c",
            "button_fan": "L\u00fcftung-Taste \u201e{subtype}\u201c",
            "button_heat": "Heizen-Taste \u201e{subtype}\u201c",
            "button_increase_speed": "Taste Geschwindigkeit erh\u00f6hen \u201e{subtype}\u201c",
            "button_increase_wind_speed": "Taste Windgeschwindigkeit erh\u00f6hen \u201e{subtype}\u201c",
            "button_left": "Taste links \u201e{subtype}\u201c",
            "button_light": "Licht-Taste \u201e{subtype}\u201c",
            "button_m": "M-Taste \u201e{subtype}\u201c",
            "button_mid_left": "Taste Mitte links \u201e{subtype}\u201c",
            "button_mid_right": "Taste Mitte rechts \u201e{subtype}\u201c",
            "button_middle": "Taste Mitte \u201e{subtype}\u201c",
            "button_min": "Min-Taste \u201e{subtype}\u201c",
            "button_off": "Aus-Taste \u201e{subtype}\u201c",
            "button_on": "An-Taste \u201e{subtype}\u201c",
            "button_plus": "Plus-Taste\u201e{subtype}\u201c",
            "button_power": "Power-Taste \u201e{subtype}\u201c",
            "button_right": "Taste rechts \u201e{subtype}\u201c",
            "button_stop": "Stopp-Taste \u201e{subtype}\u201c",
            "button_swing": "Taste Oszillation \u201e{subtype}\u201c",
            "button_timer_30_minutes": "Taste Timer 30 Minuten \u201e{subtype}\u201c",
            "button_timer_60_minutes": "Taste Timer 30 Minuten \u201e{subtype}\u201c",
            "button_wind_mode": "Taste Windmodus \u201e{subtype}\u201c",
            "button_wind_speed": "Taste Windgeschwindigkeit \u201e{subtype}\u201c",
            "cube": "{subtype}",
            "dimmer": "{subtype}",
            "fingerprint": "{subtype}",
            "lock": "{subtype}",
            "motion": "{subtype}"
        }
    },
    "entity": {
        "event": {
            "button": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "double_press": "Doppeltes Dr\u00fccken",
                            "long_press": "Langes Dr\u00fccken",
                            "press": "Dr\u00fccken"
                        }
                    }
                }
            },
            "cube": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "rotate_left": "Nach links drehen",
                            "rotate_right": "Nach rechts drehen"
                        }
                    }
                }
            },
            "dimmer": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "long_press": "Langes Dr\u00fccken",
                            "press": "Dr\u00fccken",
                            "rotate_left": "Nach links drehen",
                            "rotate_left_pressed": "Nach links drehen (gedr\u00fcckt)",
                            "rotate_right": "Nach rechts drehen",
                            "rotate_right_pressed": "Nach rechts drehen (gedr\u00fcckt)"
                        }
                    }
                }
            },
            "error": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "error_nfc_frequently_unlocks": "Fehler NFC entriegelt h\u00e4ufig",
                            "failure_to_unlock_frequently_in_multiple_ways": "Entsperrung auf verschiedenen Wegen wiederholt fehlgeschlagen",
                            "failure_to_unlock_the_vein_frequently": "Entsperrung per Venenerkennung wiederholt fehlgeschlagen",
                            "foreign_body_in_the_keyhole": "Fremdk\u00f6rper im Schl\u00fcsselloch",
                            "frequent_unlocking_with_incorrect_password": "H\u00e4ufiges Entsperren mit falschem Passwort",
                            "frequent_unlocking_with_wrong_fingerprints": "H\u00e4ufiges Entsperren mit falschen Fingerabdr\u00fccken",
                            "hijacking_alarm": "Entf\u00fchrungsalarm",
                            "lock_picking": "Schl\u00f6sserknacken",
                            "mechanical_failure": "Mechanischer Fehler",
                            "operation_timeout_password_input_timeout": "Zeit\u00fcberschreitung bei der Passworteingabe",
                            "palmprints_frequently_fail_to_unlock": "Handabdr\u00fccke lassen sich h\u00e4ufig nicht entsperren",
                            "reset_button_is_pressed": "Reset-Taste wird gedr\u00fcckt",
                            "the_accessory_battery_is_low": "Die Zubeh\u00f6rbatterie ist schwach",
                            "the_battery_level_is_less_than_10_percent": "Der Batteriestand betr\u00e4gt weniger als 10 %",
                            "the_battery_level_is_less_than_5_percent": "Der Batteriestand betr\u00e4gt weniger als 5 %",
                            "the_fingerprint_sensor_is_abnormal": "Der Fingerabdrucksensor ist abnormal",
                            "the_key_has_not_been_taken_out": "Der Schl\u00fcssel wurde nicht abgezogen",
                            "the_lock_sensor_is_faulty": "Der Verriegelungssensor ist defekt",
                            "the_safe_was_moved": "Der Tresor wurde versetzt",
                            "the_wrong_key_is_frequently_unlocked": "H\u00e4ufig wird der falsche Schl\u00fcssel entriegelt",
                            "timeout_is_not_locked_as_required": "Timeout ist nicht wie erforderlich gesperrt",
                            "unlock_inside_the_door_after_arming": "Aufschlie\u00dfen der T\u00fcr von innen nach Scharfschalten",
                            "unlocking_the_face_frequently_fails": "Entsperrung per Gesichtserkennung wiederholt fehlgeschlagen"
                        }
                    }
                }
            },
            "fingerprint": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "insufficient_area": "Unzureichende Fl\u00e4che",
                            "low_quality_too_light_fuzzy": "Geringe Qualit\u00e4t (zu hell, unscharf)",
                            "match_failed": "\u00dcbereinstimmung fehlgeschlagen",
                            "match_successful": "\u00dcbereinstimmung erfolgreich",
                            "skin_is_too_dry": "Die Haut ist zu trocken",
                            "skin_is_too_wet": "Die Haut ist zu nass"
                        }
                    }
                }
            },
            "lock": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "abnormal": "Abnormal",
                            "lock_inside_the_door": "Abschlie\u00dfen der T\u00fcr von innen",
                            "lock_outside_the_door": "Abschlie\u00dfen der T\u00fcr von au\u00dfen",
                            "locked": "Gesperrt",
                            "release_the_antilock": "Antiblockiersystem l\u00f6sen",
                            "turn_off_child_lock": "Kindersicherung ausschalten",
                            "turn_on_antilock": "Antiblockiersystem einschalten",
                            "turn_on_child_lock": "Kindersicherung einschalten",
                            "unlock_inside_the_door": "Aufschlie\u00dfen der T\u00fcr von innen",
                            "unlock_outside_the_door": "Aufschlie\u00dfen der T\u00fcr von au\u00dfen"
                        }
                    }
                }
            },
            "motion": {
                "state_attributes": {
                    "event_type": {
                        "state": {
                            "motion_detected": "Bewegung erkannt"
                        }
                    }
                }
            }
        },
        "sensor": {
            "impedance": {
                "name": "Impedanz"
            },
            "weight_non_stabilized": {
                "name": "Nicht-stabilisiertes Gewicht"
            }
        }
    }
}