[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-watch>=4.2.0",
    "pytest-benchmark>=4.0.0",
    "ruff>=0.1.0",
    "ty>=0.0.1a23", # Modern type checker by Astral
    "pre-commit>=3.0.0",
    "bandit[toml]>=1.7.5",
    "safety>=2.3.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "pip>=25.2",
    "bump-my-version>=1.2.4",
    "git-cliff>=2.10.1",
]
test = [
    "pymongo>=4.15.3",
]

[project]
name = "sanitongo"
version = "0.1.1"
description = "Modern MongoDB query sanitizer with layered security protection"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Krystian Safjan", email = "ksafjan@gmail.com"}
]
maintainers = [
    {name = "Krystian Safjan", email = "ksafjan@gmail.com"}
]
keywords = ["mongodb", "security", "sanitizer", "nosql", "injection"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-watch>=4.2.0",
    "pytest-benchmark>=4.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
    "bandit[toml]>=1.7.5",
    "safety>=2.3.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "ty>=0.0.1a23",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pymongo>=4.0.0",  # For integration testing
]

[project.urls]
Homepage = "https://github.com/izikeros/sanitongo"
Documentation = "https://github.com/izikeros/sanitongo#readme"
Repository = "https://github.com/izikeros/sanitongo"
"Bug Tracker" = "https://github.com/izikeros/sanitongo/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/sanitongo"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.bumpversion]
current_version = "0.1.1"
commit = false
tag = false
allow_dirty = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "src/sanitongo/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-config",
    "--strict-markers",
    "--cov=src/sanitongo",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security-focused tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
