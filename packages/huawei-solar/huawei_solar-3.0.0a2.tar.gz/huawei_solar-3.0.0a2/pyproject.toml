[project]
name = "huawei-solar"
description = "A Python wrapper for the Huawei Inverter modbus TCP API"
license = { file = "LICENSE.md" }
authors = [
    { name = "wlcrs" },
    { name = "Emil Vanherp", email = "emil@vanherp.me" },
]
readme = "README.md"
requires-python = ">= 3.12"
keywords = [
    "huawei",
    "solar",
    "sun2000",
    "inverter",
    "battery",
    "modbus",
    "modbus-tcp",
    "modbus-rtu",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Home Automation",
    "Typing :: Typed",

]

dynamic = ["version"]

dependencies = ["tmodbus[async-serial]>=0.2.2"]

[project.urls]
Homepage = "https://github.com/wlcrs/huawei-solar-lib"
Repository = "https://github.com/wlcrs/huawei-solar-lib"
Issues = "https://github.com/wlcrs/huawei-solar-lib/issues"
Changelog = "https://github.com/wlcrs/huawei-solar-lib/releases"


[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-packages = true

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line

    "S101",   # allow asserts
    "TRY003", # allow exceptions with longer messages.
]

pylint.max-args = 6

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.12"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "codespell==2.4.1",
    "tox>=4.15",
    "mypy==1.18.2",
    "pre-commit==4.3.0",
    "pre-commit-hooks==6.0.0",
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "ruff==0.13.3",
    "yamllint==1.37.1",
]
