# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .gt import Gt
from .gte import Gte
from .lt import Lt
from .lte import Lte


class DatetimeRange(UniversalBaseModel):
    """
    Range filter request
    """

    lt: typing.Optional[Lt] = pydantic.Field(default=None)
    """
    point.key &lt; range.lt
    """

    gt: typing.Optional[Gt] = pydantic.Field(default=None)
    """
    point.key &gt; range.gt
    """

    gte: typing.Optional[Gte] = pydantic.Field(default=None)
    """
    point.key &gt;= range.gte
    """

    lte: typing.Optional[Lte] = pydantic.Field(default=None)
    """
    point.key &lt;= range.lte
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
