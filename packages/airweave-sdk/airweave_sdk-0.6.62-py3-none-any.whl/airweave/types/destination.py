# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Destination(UniversalBaseModel):
    """
    Schema for Destination.
    """

    name: str
    description: typing.Optional[str] = None
    short_name: str
    class_name: str
    auth_config_class: typing.Optional[str] = None
    input_entity_definition_ids: typing.Optional[typing.List[str]] = None
    organization_id: typing.Optional[str] = None
    config_schema: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    labels: typing.Optional[typing.List[str]] = None
    id: str
    created_at: dt.datetime
    modified_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
