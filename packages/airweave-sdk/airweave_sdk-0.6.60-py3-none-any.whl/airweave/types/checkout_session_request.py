# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class CheckoutSessionRequest(UniversalBaseModel):
    """
    Request to create a checkout session.
    """

    plan: str = pydantic.Field()
    """
    Plan to subscribe to (developer, startup)
    """

    success_url: str = pydantic.Field()
    """
    URL to redirect on successful payment
    """

    cancel_url: str = pydantic.Field()
    """
    URL to redirect on cancellation
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
