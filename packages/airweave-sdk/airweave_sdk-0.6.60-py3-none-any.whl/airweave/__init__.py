# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .types import (
        ActionCheckRequest,
        ActionCheckResponse,
        Any,
        ApiKey,
        ApiKeyCreate,
        AuthProvider,
        AuthProviderAuthentication,
        AuthProviderConnection,
        AuthProviderConnectionCreate,
        AuthProviderConnectionUpdate,
        AuthenticationDetails,
        AuthenticationMethod,
        BillingPeriod,
        BillingPeriodStatus,
        BillingPeriodUsage,
        BillingPlan,
        BillingStatus,
        BillingTransition,
        BodyConnectSlackWithTokenConnectionsDirectTokenSlackPost,
        CheckoutSessionRequest,
        CheckoutSessionResponse,
        Collection,
        CollectionStatus,
        CollectionUpdate,
        ConfigField,
        ConfigValues,
        Connection,
        ConnectionStatus,
        CustomerPortalRequest,
        CustomerPortalResponse,
        DagEdge,
        DagEdgeCreate,
        DagNode,
        DagNodeCreate,
        DatetimeRange,
        Destination,
        DestinationWithAuthenticationFields,
        DirectAuthentication,
        EmbeddingModel,
        EmbeddingModelWithAuthenticationFields,
        EntityCount,
        EntityCountWithDefinition,
        EntityDefinition,
        EntityDefinitionCreate,
        EntityDefinitionCreateEntitySchema,
        EntityDefinitionEntitySchema,
        EntitySummary,
        EntityType,
        EntityTypeStats,
        Except,
        FeatureFlag,
        FieldCondition,
        Fields,
        Filter,
        FilterMustItem,
        FilterMustNot,
        FilterMustNotItem,
        FilterShouldItem,
        GeoBoundingBox,
        GeoLineString,
        GeoPoint,
        GeoPolygon,
        GeoRadius,
        Gt,
        Gte,
        HasIdCondition,
        HasIdConditionHasIdItem,
        HasVectorCondition,
        HttpValidationError,
        IntegrationCredentialInDb,
        IntegrationCredentialRawCreate,
        IntegrationType,
        InvitationCreate,
        InvitationResponse,
        IsEmptyCondition,
        IsNullCondition,
        LegacySearchRequest,
        LegacySearchRequestSearchMethod,
        LegacySearchResponse,
        Lt,
        Lte,
        Match,
        MatchAny,
        MatchExcept,
        MatchPhrase,
        MatchText,
        MatchValue,
        MemberResponse,
        MessageResponse,
        MinShould,
        MinShouldConditionsItem,
        MinuteLevelScheduleConfig,
        Must,
        Nested,
        NestedCondition,
        NodeType,
        OAuthBrowserAuthentication,
        OAuthTokenAuthentication,
        OAuthType,
        Organization,
        OrganizationBilling,
        OrganizationCreate,
        OrganizationMetrics,
        OrganizationWithRole,
        PayloadField,
        QueryExpansionStrategy,
        Range,
        ResponseType,
        RetrievalStrategy,
        S3ConfigRequest,
        S3ConfigResponse,
        ScheduleConfig,
        ScheduleDetails,
        ScheduleResponse,
        SearchRequest,
        SearchResponse,
        SearchStatus,
        Should,
        SingleActionCheckResponse,
        SingleActionCheckResponseReason,
        Source,
        SourceConnection,
        SourceConnectionJob,
        SourceConnectionListItem,
        SourceConnectionStatus,
        SubscriptionInfo,
        Sync,
        SyncCreate,
        SyncDag,
        SyncDagCreate,
        SyncDagUpdate,
        SyncDetails,
        SyncJob,
        SyncJobDetails,
        SyncJobStatus,
        SyncStatus,
        SyncUpdate,
        SyncWithSourceConnection,
        Transformer,
        TransformerCreate,
        TransformerUpdate,
        UpdatePlanRequest,
        UsageDashboard,
        UsageSnapshot,
        UsageTrend,
        User,
        UserCreate,
        UserOrganization,
        ValidationError,
        ValidationErrorLocItem,
        Value,
        ValuesCount,
    )
    from .errors import UnprocessableEntityError
    from . import collections, source_connections, sources
    from .client import AirweaveSDK, AsyncAirweaveSDK
    from .collections import SearchCollectionsReadableIdSearchPostRequest, SearchCollectionsReadableIdSearchPostResponse
    from .environment import AirweaveSDKEnvironment
    from .source_connections import Authentication
    from .version import __version__
_dynamic_imports: typing.Dict[str, str] = {
    "ActionCheckRequest": ".types",
    "ActionCheckResponse": ".types",
    "AirweaveSDK": ".client",
    "AirweaveSDKEnvironment": ".environment",
    "Any": ".types",
    "ApiKey": ".types",
    "ApiKeyCreate": ".types",
    "AsyncAirweaveSDK": ".client",
    "AuthProvider": ".types",
    "AuthProviderAuthentication": ".types",
    "AuthProviderConnection": ".types",
    "AuthProviderConnectionCreate": ".types",
    "AuthProviderConnectionUpdate": ".types",
    "Authentication": ".source_connections",
    "AuthenticationDetails": ".types",
    "AuthenticationMethod": ".types",
    "BillingPeriod": ".types",
    "BillingPeriodStatus": ".types",
    "BillingPeriodUsage": ".types",
    "BillingPlan": ".types",
    "BillingStatus": ".types",
    "BillingTransition": ".types",
    "BodyConnectSlackWithTokenConnectionsDirectTokenSlackPost": ".types",
    "CheckoutSessionRequest": ".types",
    "CheckoutSessionResponse": ".types",
    "Collection": ".types",
    "CollectionStatus": ".types",
    "CollectionUpdate": ".types",
    "ConfigField": ".types",
    "ConfigValues": ".types",
    "Connection": ".types",
    "ConnectionStatus": ".types",
    "CustomerPortalRequest": ".types",
    "CustomerPortalResponse": ".types",
    "DagEdge": ".types",
    "DagEdgeCreate": ".types",
    "DagNode": ".types",
    "DagNodeCreate": ".types",
    "DatetimeRange": ".types",
    "Destination": ".types",
    "DestinationWithAuthenticationFields": ".types",
    "DirectAuthentication": ".types",
    "EmbeddingModel": ".types",
    "EmbeddingModelWithAuthenticationFields": ".types",
    "EntityCount": ".types",
    "EntityCountWithDefinition": ".types",
    "EntityDefinition": ".types",
    "EntityDefinitionCreate": ".types",
    "EntityDefinitionCreateEntitySchema": ".types",
    "EntityDefinitionEntitySchema": ".types",
    "EntitySummary": ".types",
    "EntityType": ".types",
    "EntityTypeStats": ".types",
    "Except": ".types",
    "FeatureFlag": ".types",
    "FieldCondition": ".types",
    "Fields": ".types",
    "Filter": ".types",
    "FilterMustItem": ".types",
    "FilterMustNot": ".types",
    "FilterMustNotItem": ".types",
    "FilterShouldItem": ".types",
    "GeoBoundingBox": ".types",
    "GeoLineString": ".types",
    "GeoPoint": ".types",
    "GeoPolygon": ".types",
    "GeoRadius": ".types",
    "Gt": ".types",
    "Gte": ".types",
    "HasIdCondition": ".types",
    "HasIdConditionHasIdItem": ".types",
    "HasVectorCondition": ".types",
    "HttpValidationError": ".types",
    "IntegrationCredentialInDb": ".types",
    "IntegrationCredentialRawCreate": ".types",
    "IntegrationType": ".types",
    "InvitationCreate": ".types",
    "InvitationResponse": ".types",
    "IsEmptyCondition": ".types",
    "IsNullCondition": ".types",
    "LegacySearchRequest": ".types",
    "LegacySearchRequestSearchMethod": ".types",
    "LegacySearchResponse": ".types",
    "Lt": ".types",
    "Lte": ".types",
    "Match": ".types",
    "MatchAny": ".types",
    "MatchExcept": ".types",
    "MatchPhrase": ".types",
    "MatchText": ".types",
    "MatchValue": ".types",
    "MemberResponse": ".types",
    "MessageResponse": ".types",
    "MinShould": ".types",
    "MinShouldConditionsItem": ".types",
    "MinuteLevelScheduleConfig": ".types",
    "Must": ".types",
    "Nested": ".types",
    "NestedCondition": ".types",
    "NodeType": ".types",
    "OAuthBrowserAuthentication": ".types",
    "OAuthTokenAuthentication": ".types",
    "OAuthType": ".types",
    "Organization": ".types",
    "OrganizationBilling": ".types",
    "OrganizationCreate": ".types",
    "OrganizationMetrics": ".types",
    "OrganizationWithRole": ".types",
    "PayloadField": ".types",
    "QueryExpansionStrategy": ".types",
    "Range": ".types",
    "ResponseType": ".types",
    "RetrievalStrategy": ".types",
    "S3ConfigRequest": ".types",
    "S3ConfigResponse": ".types",
    "ScheduleConfig": ".types",
    "ScheduleDetails": ".types",
    "ScheduleResponse": ".types",
    "SearchCollectionsReadableIdSearchPostRequest": ".collections",
    "SearchCollectionsReadableIdSearchPostResponse": ".collections",
    "SearchRequest": ".types",
    "SearchResponse": ".types",
    "SearchStatus": ".types",
    "Should": ".types",
    "SingleActionCheckResponse": ".types",
    "SingleActionCheckResponseReason": ".types",
    "Source": ".types",
    "SourceConnection": ".types",
    "SourceConnectionJob": ".types",
    "SourceConnectionListItem": ".types",
    "SourceConnectionStatus": ".types",
    "SubscriptionInfo": ".types",
    "Sync": ".types",
    "SyncCreate": ".types",
    "SyncDag": ".types",
    "SyncDagCreate": ".types",
    "SyncDagUpdate": ".types",
    "SyncDetails": ".types",
    "SyncJob": ".types",
    "SyncJobDetails": ".types",
    "SyncJobStatus": ".types",
    "SyncStatus": ".types",
    "SyncUpdate": ".types",
    "SyncWithSourceConnection": ".types",
    "Transformer": ".types",
    "TransformerCreate": ".types",
    "TransformerUpdate": ".types",
    "UnprocessableEntityError": ".errors",
    "UpdatePlanRequest": ".types",
    "UsageDashboard": ".types",
    "UsageSnapshot": ".types",
    "UsageTrend": ".types",
    "User": ".types",
    "UserCreate": ".types",
    "UserOrganization": ".types",
    "ValidationError": ".types",
    "ValidationErrorLocItem": ".types",
    "Value": ".types",
    "ValuesCount": ".types",
    "__version__": ".version",
    "collections": ".collections",
    "source_connections": ".source_connections",
    "sources": ".sources",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "ActionCheckRequest",
    "ActionCheckResponse",
    "AirweaveSDK",
    "AirweaveSDKEnvironment",
    "Any",
    "ApiKey",
    "ApiKeyCreate",
    "AsyncAirweaveSDK",
    "AuthProvider",
    "AuthProviderAuthentication",
    "AuthProviderConnection",
    "AuthProviderConnectionCreate",
    "AuthProviderConnectionUpdate",
    "Authentication",
    "AuthenticationDetails",
    "AuthenticationMethod",
    "BillingPeriod",
    "BillingPeriodStatus",
    "BillingPeriodUsage",
    "BillingPlan",
    "BillingStatus",
    "BillingTransition",
    "BodyConnectSlackWithTokenConnectionsDirectTokenSlackPost",
    "CheckoutSessionRequest",
    "CheckoutSessionResponse",
    "Collection",
    "CollectionStatus",
    "CollectionUpdate",
    "ConfigField",
    "ConfigValues",
    "Connection",
    "ConnectionStatus",
    "CustomerPortalRequest",
    "CustomerPortalResponse",
    "DagEdge",
    "DagEdgeCreate",
    "DagNode",
    "DagNodeCreate",
    "DatetimeRange",
    "Destination",
    "DestinationWithAuthenticationFields",
    "DirectAuthentication",
    "EmbeddingModel",
    "EmbeddingModelWithAuthenticationFields",
    "EntityCount",
    "EntityCountWithDefinition",
    "EntityDefinition",
    "EntityDefinitionCreate",
    "EntityDefinitionCreateEntitySchema",
    "EntityDefinitionEntitySchema",
    "EntitySummary",
    "EntityType",
    "EntityTypeStats",
    "Except",
    "FeatureFlag",
    "FieldCondition",
    "Fields",
    "Filter",
    "FilterMustItem",
    "FilterMustNot",
    "FilterMustNotItem",
    "FilterShouldItem",
    "GeoBoundingBox",
    "GeoLineString",
    "GeoPoint",
    "GeoPolygon",
    "GeoRadius",
    "Gt",
    "Gte",
    "HasIdCondition",
    "HasIdConditionHasIdItem",
    "HasVectorCondition",
    "HttpValidationError",
    "IntegrationCredentialInDb",
    "IntegrationCredentialRawCreate",
    "IntegrationType",
    "InvitationCreate",
    "InvitationResponse",
    "IsEmptyCondition",
    "IsNullCondition",
    "LegacySearchRequest",
    "LegacySearchRequestSearchMethod",
    "LegacySearchResponse",
    "Lt",
    "Lte",
    "Match",
    "MatchAny",
    "MatchExcept",
    "MatchPhrase",
    "MatchText",
    "MatchValue",
    "MemberResponse",
    "MessageResponse",
    "MinShould",
    "MinShouldConditionsItem",
    "MinuteLevelScheduleConfig",
    "Must",
    "Nested",
    "NestedCondition",
    "NodeType",
    "OAuthBrowserAuthentication",
    "OAuthTokenAuthentication",
    "OAuthType",
    "Organization",
    "OrganizationBilling",
    "OrganizationCreate",
    "OrganizationMetrics",
    "OrganizationWithRole",
    "PayloadField",
    "QueryExpansionStrategy",
    "Range",
    "ResponseType",
    "RetrievalStrategy",
    "S3ConfigRequest",
    "S3ConfigResponse",
    "ScheduleConfig",
    "ScheduleDetails",
    "ScheduleResponse",
    "SearchCollectionsReadableIdSearchPostRequest",
    "SearchCollectionsReadableIdSearchPostResponse",
    "SearchRequest",
    "SearchResponse",
    "SearchStatus",
    "Should",
    "SingleActionCheckResponse",
    "SingleActionCheckResponseReason",
    "Source",
    "SourceConnection",
    "SourceConnectionJob",
    "SourceConnectionListItem",
    "SourceConnectionStatus",
    "SubscriptionInfo",
    "Sync",
    "SyncCreate",
    "SyncDag",
    "SyncDagCreate",
    "SyncDagUpdate",
    "SyncDetails",
    "SyncJob",
    "SyncJobDetails",
    "SyncJobStatus",
    "SyncStatus",
    "SyncUpdate",
    "SyncWithSourceConnection",
    "Transformer",
    "TransformerCreate",
    "TransformerUpdate",
    "UnprocessableEntityError",
    "UpdatePlanRequest",
    "UsageDashboard",
    "UsageSnapshot",
    "UsageTrend",
    "User",
    "UserCreate",
    "UserOrganization",
    "ValidationError",
    "ValidationErrorLocItem",
    "Value",
    "ValuesCount",
    "__version__",
    "collections",
    "source_connections",
    "sources",
]
