# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .user_organization import UserOrganization


class User(UniversalBaseModel):
    """
    Schema for User.
    """

    email: str
    full_name: typing.Optional[str] = None
    id: str
    auth_0_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="auth0_id")] = None
    primary_organization_id: typing.Optional[str] = None
    user_organizations: typing.Optional[typing.List[UserOrganization]] = None
    is_admin: typing.Optional[bool] = None
    last_active_at: typing.Optional[dt.datetime] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
