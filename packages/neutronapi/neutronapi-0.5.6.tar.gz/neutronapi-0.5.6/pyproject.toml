[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neutronapi"
version = "0.5.6"
description = "A modern, high-performance ASGI-based Python web framework."
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
  {name = "Aaron Kazah", email = "aaron@neutronapi.com"}
]
keywords = ["api", "framework", "async", "fastapi", "uvicorn", "orm", "migrations", "background-tasks", "dependency-injection", "typing"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Framework :: AsyncIO",
]
dependencies = [
  "uvicorn[standard]>=0.23.0",
  "uvloop>=0.17.0",
  "aiosqlite>=0.19.0",
  "PyJWT>=2.8.0",
  "bcrypt>=4.0.0",
  "watchdog>=3.0.0",
]

[project.optional-dependencies]
postgres = ["asyncpg>=0.29.0"]
dev = ["httpx>=0.24.0", "pytest>=7.0.0", "pytest-asyncio>=0.21.0"]

[project.scripts]
neutronapi = "neutronapi.cli:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
neutronapi = ["py.typed"]

[tool.setuptools.packages.find]
where = ["."]
include = ["neutronapi*"]
exclude = ["apps*", "neutronapi/core/tests*"]

# Code style and linting
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\\.pyi?$'
force-exclude = '^(?!neutronapi/).*'
exclude = '''
/(
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | neutronapi.egg-info
  | apps
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
filename = [
  "neutronapi/*.py",
  "neutronapi/**/*.py",
]
exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
  "venv",
  ".venv",
  ".tox",
  "neutronapi.egg-info",
  "apps",
  "neutronapi/tests",
  "neutronapi/db",
  "neutronapi/openapi",
]
