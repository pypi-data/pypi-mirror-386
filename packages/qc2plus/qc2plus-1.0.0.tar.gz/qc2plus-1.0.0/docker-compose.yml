version: '3.8'

services:
  # Base de données PostgreSQL
  postgres-data:
    image: postgres:14-bookworm
    platform: linux/arm64
    container_name: qc2plus-postgres
    environment:
      - POSTGRES_DB=qc2plus_demo
      - POSTGRES_USER=qc2plus
      - POSTGRES_PASSWORD=qc2plus_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./examples/data/init_tables.sql:/docker-entrypoint-initdb.d/01_init_tables.sql
      #- ./examples/data/valid_data_level_1_postgres.sql:/docker-entrypoint-initdb.d/02_load_valid_tables.sql
      #- ./examples/data/load_sample_data.sql:/docker-entrypoint-initdb.d/02_load_sample_data.sql
      #- ./examples/data/transform_data.sql:/docker-entrypoint-initdb.d/03_transform_data.sql
    ports:
      - "5432:5432"
    networks:
      - qc2plus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qc2plus -d qc2plus_demo"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  postgres-results:
    image: postgres:14-bookworm
    platform: linux/arm64
    container_name: qc2plus-postgres-results
    environment:
      - POSTGRES_DB=qc2plus_results
      - POSTGRES_USER=qc2plus
      - POSTGRES_PASSWORD=qc2plus_password
    volumes:
      - postgres_results_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - qc2plus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qc2plus -d qc2plus_results"]
      interval: 10s
      timeout: 5s
      retries: 5


  # Runner principal 2QC+
  qc2plus-runner:
    build: .
    container_name: qc2plus-runner
    volumes:
      - ./examples:/app/examples
      - ./logs:/app/logs
      - ./qc2plus:/app/qc2plus     # Only in development mode
    environment:
      - QC2PLUS_LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres-data:
        condition: service_healthy
    restart: unless-stopped  # Redémarre en cas d'échec #AaDDDED
    networks:
      - qc2plus-network
    command: tail -f /dev/null

  # Exemple basique
  qc2plus-basic:
    build: .
    container_name: qc2plus-basic
    volumes:
      - ./examples/basic:/app/project
      - ./logs:/app/logs
    environment:
      - QC2PLUS_LOG_LEVEL=INFO
    depends_on:
      postgres-data:
        condition: service_healthy
    networks:
      - qc2plus-network
    working_dir: /app/project
    command: >
      bash -c "
        echo 'Starting Basic Example...' &&
        qc2plus --help &&
        qc2plus test-connection --target demo &&
        qc2plus run --target demo
      "

  # Exemple avancé
  qc2plus-advanced:
    build: .
    container_name: c2plus-advanced
    volumes:
      - ./examples/advanced:/app/project
      - ./logs:/app/logs
    environment:
      - QC2PLUS_LOG_LEVEL=INFO
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
    depends_on:
      postgres-data:
        condition: service_healthy
    networks:
      - qc2plus-network
    working_dir: /app/project
    command: >
      bash -c "
        echo 'Starting Advanced Example...' &&
        sleep 30 &&
        qc2plus --help &&
        qc2plus test-connection --target demo &&
        qc2plus run --target demo --level all
      "

volumes:
  postgres_data:
  postgres_results_data:

networks:
  qc2plus-network:
    driver: bridge
