# -------------------------------------------------------------------
# This file was auto-generated. Do not edit directly.
# Generated by: StageGeneratorV2
# -------------------------------------------------------------------

from typing import TYPE_CHECKING

from ibm_watsonx_data_integration.services.datastage.models.flow.dag import StageNode
from ibm_watsonx_data_integration.services.datastage.models.stage_models.planning_analytics import planning_analytics

from ibm_watsonx_data_integration.cpd_models.connections_model import Connection
from ibm_watsonx_data_integration.services.datastage.models.connections.planning_analytics_connection import PlanningAnalyticsConn


if TYPE_CHECKING:
    from ibm_watsonx_data_integration.services.datastage.models.flow.dag import DAG



class IBMPlanningAnalyticsStage(StageNode):
    def __init__(self, dag: "DAG", configuration: planning_analytics=None, *, label: str = None):
        super().__init__(dag, configuration=configuration, label=label)
        self.configuration: planning_analytics = configuration or planning_analytics()

    def use_connection(self, connection: Connection):
        self.configuration.connection = PlanningAnalyticsConn().from_connection(connection)
