name: Build and Publish Wheels

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build wheels
        run: uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.python-version }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-downloads

      - name: Merge artifacts into dist/
        run: |
          mkdir -p dist
          find dist-downloads -name "*.whl" -o -name "*.tar.gz" | xargs -I {} cp {} dist/

      - name: Extract changelog for version
        run: |
          python3 << 'EOF'
          import re

          version = "${{ github.ref }}".replace("refs/tags/", "")

          with open("CHANGELOG.md", "r") as f:
              content = f.read()

          # Find the section for this version
          pattern = rf"## \[{re.escape(version)}\].*?\n(.*?)(?=## \[|$)"
          match = re.search(pattern, content, re.DOTALL)

          if match:
              changelog = match.group(1).strip()
          else:
              changelog = "See CHANGELOG.md for details"

          with open("release_notes.md", "w") as f:
              f.write(changelog)
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          body_path: release_notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-testpypi:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-test')
    environment: publish-testpypi
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build wheels
        run: uv build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-test')
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Build wheels
        run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
