[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv.workspace]
members = [".", "scripts"]

[project]
name = "importobot"
version = "0.1.3"
description = "Automated test framework converter for migrating test cases from Zephyr, JIRA/Xray, and TestLink to Robot Framework format with bulk processing capabilities"
readme = "README.md"
requires-python = ">=3.10"
license = "BSD-2-Clause"
authors = [
    {name = "athola", email = "noreply@github.com"}
]
maintainers = [
    {name = "athola", email = "noreply@github.com"}
]
keywords = ["testing", "automation", "robot-framework", "test-conversion", "zephyr", "jira", "xray", "testlink"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Utilities",
    "Environment :: Console",
    "Natural Language :: English",
    "Typing :: Typed",
]

dependencies = [
    "robotframework>=6.0.0",
    "robotframework-seleniumlibrary>=6.0.0",
    "robotframework-sshlibrary>=3.8.0",
    "robotframework-requests>=0.9.4",
    "robotframework-databaselibrary>=1.2.4",
    "psutil>=7.0.0",
    "bleach>=6.1.0",
]

[project.urls]
"Homepage" = "https://github.com/athola/importobot"
"Repository" = "https://github.com/athola/importobot"
"Bug Tracker" = "https://github.com/athola/importobot/issues"
"Documentation" = "https://github.com/athola/importobot/wiki"
"Changelog" = "https://github.com/athola/importobot/blob/main/CHANGELOG.md"

[project.optional-dependencies]
viz = [
    "matplotlib>=3.10.6",
]
analytics = [
    "numpy>=2.2.6",
    "pandas>=2.0.0",
]
demo = [
    "matplotlib>=3.10.6",
    "numpy>=2.2.6",
    "pandas>=2.0.0",
]
advanced = [
    "scipy>=1.15.3",
]
medallion = [
    # Core medallion architecture dependencies
    # Note: All dependencies use standard library or existing requirements
    # Storage backends (for future cloud integration)
    # "boto3>=1.26.0",  # For AWS S3 backend (commented out for now)
    # "azure-storage-blob>=12.14.0",  # For Azure backend (commented out for now)
    # "google-cloud-storage>=2.7.0",  # For GCP backend (commented out for now)
]
enterprise = [
    # Enterprise features
    "pandas>=2.0.0",  # For advanced analytics
    "numpy>=2.2.6",   # For statistical analysis
    # Cloud storage backends
    # "boto3>=1.26.0",  # AWS integration
    # "azure-storage-blob>=12.14.0",  # Azure integration
    # "google-cloud-storage>=2.7.0",  # GCP integration
]
all = [
    "matplotlib>=3.10.6",
    "numpy>=2.2.6",
    "pandas>=2.0.0",
    # Medallion architecture included in 'all'
]

[project.scripts]
importobot = "importobot.__main__:main"

[dependency-groups]
dev = [
    "scipy-stubs>=1.15.3.0",
    "pytest>=7.0.0",
    "pytest-xdist>=3.6.1",
    "pytest-asyncio>=0.23.5",
    "coverage>=7.0.0",
    "ruff>=0.1.0",

    "pycodestyle>=2.11.0",
    "pydocstyle>=6.3.0",
    "black>=23.0.0",
    "pyyaml>=6.0.0",
    "mypy>=1.0.0",
    "ty",
    "types-PyYAML",
    "types-psutil>=7.0.0.20250822",
    "types-requests>=2.32.0.20240622",
    "numpy",
    "pandas",
    "matplotlib",
    "detect-secrets>=1.5.0",
    "bandit>=1.7.0",
    "hypothesis>=6.140.2",
    "mutmut>=2.4.4",
    "pyright>=1.1.380",
]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["scripts*", "importobot_scripts*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
importobot = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = [".", "tests", "src"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose"
]
markers = [
    "timeout: Set timeout for individual tests (provided by configure_timeout fixture)",
    "slow: Marks long-running generative tests",
]

[tool.coverage.run]
source = ["src"]

[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [".venv", ".uv-cache"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "PL",   # Pylint codes (the equivalent rules)
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "PERF", # Performance rules
    "PT",   # flake8-pytest-style
]
extend-ignore = [
    "PLR2004",
    "PLR0911",
    "PLR0912",
    "PLR0913",
]

[tool.ruff.lint.per-file-ignores]
# Mathematical algorithms in format detector are inherently complex
"src/importobot/medallion/bronze/format_detector.py" = ["C901"]
"tests/**/*.py" = [
    "C901",
    "E501",
    "PERF203",
    "PERF401",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR2004",
    "PLW0603",
    "PT009",
    "PT011",
    "PT012",
    "PT017",
    "PT019",
    "RUF001",
    "RUF002",
    "RUF003",
    "SIM102",
    "SIM108",
    "SIM115",
    "SIM117",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"



[tool.black]
exclude = '''
/(?:
    \.venv
  | \.uv-cache
)/
'''




[tool.pydocstyle]
match-dir = '^(?!\.venv|\.uv-cache|build).*'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
mypy_path = "./src:./scripts/src"
explicit_package_bases = true
namespace_packages = true
exclude = ['^\.venv', '^\.uv-cache']

# Enable strict mode
strict = true

[tool.mutmut]
paths_to_mutate = [
    "src/importobot/medallion/bronze/mvlp_bayesian_confidence.py",
    "src/importobot/medallion/bronze/detection_cache.py",
    "src/importobot/services/optimization_service.py",
    "src/importobot/services/performance_cache.py",
    "src/importobot/services/data_ingestion_service.py",
    "src/importobot/telemetry.py",
]
tests_dir = [
    "tests/unit/medallion/bronze/test_mvlp_bayesian_confidence.py",
    "tests/unit/medallion/bronze/test_detection_cache.py",
    "tests/unit/services/test_optimization_service.py",
    "tests/unit/services/test_performance_cache.py",
    "tests/unit/services/test_data_ingestion_async.py",
]
runner = "python scripts/src/importobot_scripts/mutmut_pytest_runner.py"
backup = false
mypy_path = "./src:./scripts/src"
files = ["./src", "./tests"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "scripts.tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "robot"
ignore_missing_imports = true
ignore_errors = true


[tool.ty.environment]
root = ["./src", "./tests", "./scripts/src", "./scripts/tests"]
extra-paths = ["./src", "./tests", "./scripts/src", "./scripts/tests"]

[tool.ty.rules]
unresolved-import = "ignore"
