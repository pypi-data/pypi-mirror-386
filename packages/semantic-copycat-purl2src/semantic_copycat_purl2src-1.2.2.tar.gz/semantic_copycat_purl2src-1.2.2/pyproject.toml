[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-copycat-purl2src"
version = "1.2.2"
description = "Translate Package URLs (PURLs) into validated download URLs for source code artifacts"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Oscar Valenzuela B.", email = "oscar.valenzuela.b@gmail.com"},
]
keywords = ["purl", "package-url", "package-manager", "source-code", "license-compliance", "ai-detection", "semantic-analysis", "semantic-copycat", "code-copycat"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
]

dependencies = [
    "click>=8.0.0",
    "requests>=2.28.0",
    "urllib3>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "types-requests>=2.28.0",
    "tox>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/oscarvalenzuelab/semantic-copycat-purl2src"
Documentation = "https://github.com/oscarvalenzuelab/semantic-copycat-purl2src#readme"
Repository = "https://github.com/oscarvalenzuelab/semantic-copycat-purl2src"
Issues = "https://github.com/oscarvalenzuelab/semantic-copycat-purl2src/issues"

[project.scripts]
purl2src = "purl2src.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=purl2src --cov-report=term-missing"

[tool.coverage.run]
source = ["src/purl2src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]