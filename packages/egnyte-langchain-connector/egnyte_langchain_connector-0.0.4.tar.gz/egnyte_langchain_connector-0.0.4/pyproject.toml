[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "egnyte-langchain-connector"
version = "0.0.4"
description = "LangChain retriever integration for Egnyte document search and retrieval"
authors = [
    {name = "Abhishek Shahdeo", email = "ashahdeo@egnyte.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11.0"
keywords = ["langchain", "egnyte", "retriever", "documents", "sdk", "ai", "integration"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core LangChain packages (REQUIRED)
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    # HTTP client
    "httpx>=0.24.0",
    # Data validation
    "pydantic>=2.0.0",
    "langchain-tests>=0.3.20",
]

[project.optional-dependencies]
test = [
    "langchain-tests>=0.3.20",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-socket>=0.6.0",
    "python-dotenv>=1.0.0",
]
openai = [
    "langchain-openai>=0.1.0",
    "openai>=1.6.1",
]
anthropic = [
    "langchain-anthropic>=0.1.0",
]
azure = [
    "langchain-openai>=0.1.0",  # Azure OpenAI uses the same package as OpenAI
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
]
all = [
    "langchain-openai>=0.1.0",
    "openai>=1.6.1",
    "langchain-anthropic>=0.1.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.8",
]

[project.urls]
Homepage = "https://github.com/egnyte/langchain-egnyte"
Documentation = "https://github.com/egnyte/langchain-egnyte/blob/main/README.md"
Repository = "https://github.com/egnyte/langchain-egnyte"
Issues = "https://github.com/egnyte/langchain-egnyte/issues"
Changelog = "https://github.com/egnyte/langchain-egnyte/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["langchain_egnyte"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["langchain_egnyte"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "openai.*",
    "httpx.*",
]
ignore_missing_imports = true

[tool.uv]
dev-dependencies = [
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-socket>=0.6.0",
    "pytest-recording>=0.13.0",
    "pytest-benchmark>=4.0.0",
    "langchain-tests>=0.3.0",
    "python-dotenv>=1.0.0",
    "build>=1.3.0",
]

# Remove the sources section as it's causing issues with uv lock

[tool.pytest.ini_options]
markers = [
    "requires_credentials: marks tests as requiring API credentials (may be skipped in CI)",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "-v"
]
# uv will use PyPI by default
