[project]
name = "par_ai_core"
dynamic = [
    "version",
]
description = "PAR AI Core"
url = "https://github.com/paulrobello/par_ai_core"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Paul Robello", email = "probello@gmail.com" },
]
maintainers = [
    { name = "Paul Robello", email = "probello@gmail.com" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = [
    "ai",
    "langchain",
    "openai",
    "anthropic",
    "ollama",
    "llamacpp",
]
dependencies = [
    "requests>=2.32.5",
    "rich>=14.2.0",
    "orjson>=3.11.4",
    "strenum>=0.4.15",
    "boto3>=1.40.58",
    "botocore>=1.40.58",
    "langchain-anthropic>=0.3.22",
    "langchain-aws>=0.2.35",
    "langchain-chroma>=0.2.6",
    "langchain-community>=0.3.31",
    "langchain-core>=0.3.79",
    "langchain-experimental>=0.3.4",
    "langchain-google-genai>=2.0.10",
    "langchain-groq>=0.3.8",
    "langchain-ollama>=0.3.10",
    "langchain-openai>=0.3.32",
    "langchain-qdrant>=0.2.1",
    "langchain-text-splitters>=0.3.11",
    "langchain-xai>=0.2.5",
    "langchain-mistralai>=0.2.12",
    "langchain-deepseek>=0.1.4",
    "langchain-google-community>=2.0.10",
    "langchain>=0.3.27",
    "langgraph>=1.0.1",
    "pydantic-core>=2.33.2",
    "pydantic>=2.11.4",
    "playwright>=1.55.0",
    "python-dotenv>=1.1.1",
    "selenium>=4.37.0",
    "webdriver-manager>=4.0.2",
    "praw>=7.8.1",
    "tavily-python>=0.7.12",
    "youtube-transcript-api>=1.2.3",
    "beautifulsoup4>=4.14.2",
    "html2text>=2025.4.15",
    "markdownify>=1.2.0",
    "litellm>=1.78.7",
    "google-generativeai>=0.8.5",
    "nest-asyncio>=1.6.0",
    "openai>=1.99.9",
]
packages = [
    "src/par_ai_core",
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/paulrobello/par_ai_core"
Documentation = "https://github.com/paulrobello/par_ai_core/blob/main/README.md"
Repository = "https://github.com/paulrobello/par_ai_core"
Issues = "https://github.com/paulrobello/par_ai_core/issues"
Discussions = "https://github.com/paulrobello/par_ai_core/discussions"
Wiki = "https://github.com/paulrobello/par_ai_core/wiki"

[project.scripts]
par_ai_core = "par_ai_core.__main__:main"

[build-system]
requires = [
    "hatchling",
    "wheel",
]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pyright>=1.1.406",
    "pre-commit>=4.3.0",
    "ruff>=0.14.2",
    "types-orjson>=3.6.2",
    "pyinstrument>=5.1.1",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
    "pytest-xdist>=3.8.0",
    "pdoc3>=0.11.6",
    "hatchling>=1.27.0",
    "wheel>=0.45.1",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=src/par_ai_core --cov-report=term-missing"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.hatch.version]
path = "src/par_ai_core/__init__.py"

[tool.hatch.build.targets.wheel]
packages = [
    "src/par_ai_core",
]
include = [
    "py.typed",
    "**/*.py",
    "**/*.html",
    "**/*.gif",
    "**/*.jpg",
    "**/*.png",
    "**/*.md",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/par_ai_core",
    "LICENSE",
    "README.md",
    "extraction_prompt.md",
    "pyproject.toml",
]
exclude = [
    "*.pyc",
    "__pycache__",
    "*.so",
    "*.dylib",
]
