[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "imgif"
version = "0.2.0"
description = "ðŸŽ¬ A playful Python library for converting image sequences into animated GIFs"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Atick Faisal", email = "atickfaisal@gmail.com" },
]
keywords = ["gif", "image", "animation", "converter", "pillow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "rich>=13.7.0",
    "click>=8.1.0",
    "Pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "hatch>=1.9.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "pymdown-extensions>=10.3.0",
]

[project.scripts]
imgif = "img2gif.cli:main"

[project.urls]
Homepage = "https://github.com/atick-faisal/img2gif"
Documentation = "https://imgif.readthedocs.io"
Repository = "https://github.com/atick-faisal/img2gif"
Issues = "https://github.com/atick-faisal/img2gif/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/img2gif"]

[tool.hatch.envs.default]
dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
]

[tool.hatch.envs.test]
dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.11", "3.13"]

[tool.hatch.envs.test.scripts]
all = "pytest {args}"
cov = "pytest --cov=src/img2gif --cov-report=term-missing --cov-report=html {args}"

[tool.hatch.envs.docs]
dependencies = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "pymdown-extensions>=10.3.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve"

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers"
markers = [
    "unit: Unit tests for individual components",
    "e2e: End-to-end integration tests",
]

[tool.coverage.run]
source = ["src/img2gif"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
