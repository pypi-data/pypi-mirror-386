[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flotorch"
version = "2.2.0b1"
description = "A modular Python framework for AI agents and LLM interactions"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Flotorch Team", email = "org.admin@flotorch.ai"}
]

maintainers = [
    {name = "Adil Raza", email = "adil.raza@flotorch.ai"},
    {name = "Venkateswarlu Garnimitta", email = "venkateswarlu.garnimitta@flotorch.ai"},
    {name = "Madhu Jangala", email = "madhu.jangala@flotorch.ai"}
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
    "Natural Language :: English",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.24",
    "pydantic>=1.10",
]

[project.optional-dependencies]
# SDK is the core piece - minimal dependencies
sdk = [
    "httpx>=0.24",
    "pydantic>=1.10",
]
# ADK depends on SDK + adds its own dependencies
adk = [
    "google-adk>=1.5.0",
    "python-dotenv>=1.0.0",
    "flotorch[sdk]",
    "opentelemetry-exporter-otlp-proto-grpc>=1.34.0",
]
# CrewAI depends on SDK + adds its own dependencies
crewai = [
    "crewai>=0.50.0",
    "crewai-tools>=0.60.0",
    "crewai-tools[mcp]",
    "python-dotenv>=1.0.0",
    "flotorch[sdk]",
]
# autogen depends on SDK + adds its own dependencies
autogen = [
    "python-dotenv>=1.0.0",
    "autogen-core>=0.4.0",
    "autogen-agentchat>=0.4.0",
    "autogen-ext[openai]>=0.4.0",
    "openai>=1.0.0",
    "mcp>=1.2.0",
    "flotorch[sdk]",
]
langchain = [
    "langchain>=0.3.27",
    "langchain-openai>=0.2.14",
    "langchain-experimental>=0.3.4",
    "langchain-community>=0.3.29",
    "langgraph>=0.6.6",
    "langchain-mcp-tools>=0.2.13",
    "langchain-mcp-adapters>=0.1.9",
    "langchain-mcp>=0.2.1",
    "flotorch[sdk]",
]
langgraph = [
    "langgraph>=0.6.6",
    "langgraph-checkpoint>=2.1.1",
    "langgraph-prebuilt>=0.6.4",
    "langgraph-sdk>=0.2.3",
    "langchain-core>=0.2.14",
    "langchain-community>=0.3.27",
    "langchain-openai>=0.3.30",
    "langchain-mcp-adapters>=0.1.9",
    "mcp>=1.13.1",
    "flotorch[sdk]",
    "flotorch[langchain]",
]
strands = [
    "strands-agents==1.9.0",
    "flotorch[sdk]",
]
# Development dependencies
dev = [
    "build>=0.10.0",
    "twine>=4.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/flotorch/flotorch-python"
Repository = "https://github.com/flotorch/flotorch-python"
Documentation = "https://docs.flotorch.com"
Issues = "https://github.com/flotorch/flotorch-python/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["flotorch*"]

[tool.setuptools.package-data]
flotorch = ["*.py", "**/*.py"] 
