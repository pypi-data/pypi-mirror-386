# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from user.v1 import user_pb2 as user_dot_v1_dot_user__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getOrCreateUser = channel.unary_unary(
                '/UserService/getOrCreateUser',
                request_serializer=user_dot_v1_dot_user__pb2.getOrCreateUserInput.SerializeToString,
                response_deserializer=user_dot_v1_dot_user__pb2.userInfo.FromString,
                )
        self.updateUserInfo = channel.unary_unary(
                '/UserService/updateUserInfo',
                request_serializer=user_dot_v1_dot_user__pb2.updateUserInfoInput.SerializeToString,
                response_deserializer=user_dot_v1_dot_user__pb2.userInfo.FromString,
                )
        self.getUserInfo = channel.unary_unary(
                '/UserService/getUserInfo',
                request_serializer=user_dot_v1_dot_user__pb2.getUserInfoInput.SerializeToString,
                response_deserializer=user_dot_v1_dot_user__pb2.userInfo.FromString,
                )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getOrCreateUser(self, request, context):
        """create new user. if email already exist, it will return the exist user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getOrCreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.getOrCreateUser,
                    request_deserializer=user_dot_v1_dot_user__pb2.getOrCreateUserInput.FromString,
                    response_serializer=user_dot_v1_dot_user__pb2.userInfo.SerializeToString,
            ),
            'updateUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.updateUserInfo,
                    request_deserializer=user_dot_v1_dot_user__pb2.updateUserInfoInput.FromString,
                    response_serializer=user_dot_v1_dot_user__pb2.userInfo.SerializeToString,
            ),
            'getUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getUserInfo,
                    request_deserializer=user_dot_v1_dot_user__pb2.getUserInfoInput.FromString,
                    response_serializer=user_dot_v1_dot_user__pb2.userInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getOrCreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/getOrCreateUser',
            user_dot_v1_dot_user__pb2.getOrCreateUserInput.SerializeToString,
            user_dot_v1_dot_user__pb2.userInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/updateUserInfo',
            user_dot_v1_dot_user__pb2.updateUserInfoInput.SerializeToString,
            user_dot_v1_dot_user__pb2.userInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserService/getUserInfo',
            user_dot_v1_dot_user__pb2.getUserInfoInput.SerializeToString,
            user_dot_v1_dot_user__pb2.userInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
