# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from data.v1 import dataset_pb2 as data_dot_v1_dot_dataset__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DatasetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDataset = channel.unary_unary(
                '/DatasetService/CreateDataset',
                request_serializer=data_dot_v1_dot_dataset__pb2.CreateDatasetRequest.SerializeToString,
                response_deserializer=data_dot_v1_dot_dataset__pb2.Dataset.FromString,
                )
        self.ListDatasets = channel.unary_unary(
                '/DatasetService/ListDatasets',
                request_serializer=data_dot_v1_dot_dataset__pb2.ListDatasetsRequest.SerializeToString,
                response_deserializer=data_dot_v1_dot_dataset__pb2.ListDatasetsResponse.FromString,
                )
        self.GetDataset = channel.unary_unary(
                '/DatasetService/GetDataset',
                request_serializer=data_dot_v1_dot_dataset__pb2.GetDatasetRequest.SerializeToString,
                response_deserializer=data_dot_v1_dot_dataset__pb2.Dataset.FromString,
                )
        self.ListRecords = channel.unary_unary(
                '/DatasetService/ListRecords',
                request_serializer=data_dot_v1_dot_dataset__pb2.ListRecordsRequest.SerializeToString,
                response_deserializer=data_dot_v1_dot_dataset__pb2.ListRecordsResponse.FromString,
                )
        self.ListAllRecords = channel.unary_unary(
                '/DatasetService/ListAllRecords',
                request_serializer=data_dot_v1_dot_dataset__pb2.ListAllRecordsRequest.SerializeToString,
                response_deserializer=data_dot_v1_dot_dataset__pb2.ListAllRecordsResponse.FromString,
                )
        self.DeleteDataset = channel.unary_unary(
                '/DatasetService/DeleteDataset',
                request_serializer=data_dot_v1_dot_dataset__pb2.DeleteDatasetRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class DatasetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDatasets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataset,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.CreateDatasetRequest.FromString,
                    response_serializer=data_dot_v1_dot_dataset__pb2.Dataset.SerializeToString,
            ),
            'ListDatasets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDatasets,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.ListDatasetsRequest.FromString,
                    response_serializer=data_dot_v1_dot_dataset__pb2.ListDatasetsResponse.SerializeToString,
            ),
            'GetDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataset,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.GetDatasetRequest.FromString,
                    response_serializer=data_dot_v1_dot_dataset__pb2.Dataset.SerializeToString,
            ),
            'ListRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRecords,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.ListRecordsRequest.FromString,
                    response_serializer=data_dot_v1_dot_dataset__pb2.ListRecordsResponse.SerializeToString,
            ),
            'ListAllRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllRecords,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.ListAllRecordsRequest.FromString,
                    response_serializer=data_dot_v1_dot_dataset__pb2.ListAllRecordsResponse.SerializeToString,
            ),
            'DeleteDataset': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataset,
                    request_deserializer=data_dot_v1_dot_dataset__pb2.DeleteDatasetRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DatasetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DatasetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/CreateDataset',
            data_dot_v1_dot_dataset__pb2.CreateDatasetRequest.SerializeToString,
            data_dot_v1_dot_dataset__pb2.Dataset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDatasets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/ListDatasets',
            data_dot_v1_dot_dataset__pb2.ListDatasetsRequest.SerializeToString,
            data_dot_v1_dot_dataset__pb2.ListDatasetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/GetDataset',
            data_dot_v1_dot_dataset__pb2.GetDatasetRequest.SerializeToString,
            data_dot_v1_dot_dataset__pb2.Dataset.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/ListRecords',
            data_dot_v1_dot_dataset__pb2.ListRecordsRequest.SerializeToString,
            data_dot_v1_dot_dataset__pb2.ListRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/ListAllRecords',
            data_dot_v1_dot_dataset__pb2.ListAllRecordsRequest.SerializeToString,
            data_dot_v1_dot_dataset__pb2.ListAllRecordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DatasetService/DeleteDataset',
            data_dot_v1_dot_dataset__pb2.DeleteDatasetRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
