# coding: utf-8

"""
    Pulp 3 API

    Fetch, Upload, Organize, and Distribute Software Packages

    The version of the OpenAPI document: v3
    Contact: pulp-list@redhat.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pulpcore.client.pulp_rpm.models.paginatedrpm_distribution_tree_response_list import PaginatedrpmDistributionTreeResponseList

class TestPaginatedrpmDistributionTreeResponseList(unittest.TestCase):
    """PaginatedrpmDistributionTreeResponseList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedrpmDistributionTreeResponseList:
        """Test PaginatedrpmDistributionTreeResponseList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedrpmDistributionTreeResponseList`
        """
        model = PaginatedrpmDistributionTreeResponseList()
        if include_optional:
            return PaginatedrpmDistributionTreeResponseList(
                count = 123,
                next = 'http://api.example.org/accounts/?offset=400&limit=100',
                previous = 'http://api.example.org/accounts/?offset=200&limit=100',
                results = [
                    pulpcore.client.pulp_rpm.models.rpm/distribution_tree_response.rpm.DistributionTreeResponse(
                        pulp_href = '', 
                        prn = '', 
                        header_version = '', 
                        release_name = '', 
                        release_short = '', 
                        release_version = '', 
                        release_is_layered = True, 
                        base_product_name = '', 
                        base_product_short = '', 
                        base_product_version = '', 
                        arch = '', 
                        build_timestamp = 1.337, 
                        instimage = '', 
                        mainimage = '', 
                        discnum = 56, 
                        totaldiscs = 56, 
                        addons = [
                            pulpcore.client.pulp_rpm.models.addon_response.AddonResponse(
                                addon_id = '', 
                                uid = '', 
                                name = '', 
                                type = '', 
                                packages = '', )
                            ], 
                        checksums = [
                            pulpcore.client.pulp_rpm.models.checksum_response.ChecksumResponse(
                                path = '', 
                                checksum = '', )
                            ], 
                        images = [
                            pulpcore.client.pulp_rpm.models.image_response.ImageResponse(
                                name = '', 
                                path = '', 
                                platforms = '', 
                                artifact = null, )
                            ], 
                        variants = [
                            pulpcore.client.pulp_rpm.models.variant_response.VariantResponse(
                                variant_id = '', 
                                uid = '', 
                                name = '', 
                                type = '', 
                                packages = '', 
                                source_packages = '', 
                                source_repository = '', 
                                debug_packages = '', 
                                debug_repository = '', 
                                identity = '', )
                            ], )
                    ]
            )
        else:
            return PaginatedrpmDistributionTreeResponseList(
                count = 123,
                results = [
                    pulpcore.client.pulp_rpm.models.rpm/distribution_tree_response.rpm.DistributionTreeResponse(
                        pulp_href = '', 
                        prn = '', 
                        header_version = '', 
                        release_name = '', 
                        release_short = '', 
                        release_version = '', 
                        release_is_layered = True, 
                        base_product_name = '', 
                        base_product_short = '', 
                        base_product_version = '', 
                        arch = '', 
                        build_timestamp = 1.337, 
                        instimage = '', 
                        mainimage = '', 
                        discnum = 56, 
                        totaldiscs = 56, 
                        addons = [
                            pulpcore.client.pulp_rpm.models.addon_response.AddonResponse(
                                addon_id = '', 
                                uid = '', 
                                name = '', 
                                type = '', 
                                packages = '', )
                            ], 
                        checksums = [
                            pulpcore.client.pulp_rpm.models.checksum_response.ChecksumResponse(
                                path = '', 
                                checksum = '', )
                            ], 
                        images = [
                            pulpcore.client.pulp_rpm.models.image_response.ImageResponse(
                                name = '', 
                                path = '', 
                                platforms = '', 
                                artifact = null, )
                            ], 
                        variants = [
                            pulpcore.client.pulp_rpm.models.variant_response.VariantResponse(
                                variant_id = '', 
                                uid = '', 
                                name = '', 
                                type = '', 
                                packages = '', 
                                source_packages = '', 
                                source_repository = '', 
                                debug_packages = '', 
                                debug_repository = '', 
                                identity = '', )
                            ], )
                    ],
        )
        """

    def testPaginatedrpmDistributionTreeResponseList(self):
        """Test PaginatedrpmDistributionTreeResponseList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
