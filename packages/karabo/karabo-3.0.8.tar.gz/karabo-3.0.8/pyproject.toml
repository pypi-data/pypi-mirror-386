[build-system]
# A list of packages that are needed to build your package:
requires = ["setuptools"] # REQUIRED if [build-system] table is used
# The name of the Python object that frontends will use to perform the build:
build-backend = "setuptools.build_meta" # If not defined, then legacy behavior can happen.


[project]
version = "3.0.8"
name = "karabo"
description = "The Karabo SCADA system"
readme = "README.md"
requires-python = ">=3.12"
license = "MPL-2.0"
keywords = ["Karabo", "SCADA", "async", "control system"]
authors = [{ name = "European XFEL GmbH", email = "opensource@xfel.eu" }]
maintainers = [
  { name = "S. Hauf", email = "steffen.hauf@xfel.eu" },
  { name = "D. Goeries", email = "dennis.goeries@xfel.eu" },
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 5 - Production/Stable",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
]

dependencies = [
  # unqualified we install a karathon setup with services
  # which happens to be karabo.services
  "karabo.karathon==3.0.8",
]


[project.optional-dependencies]
services = ["karabo.services==3.0.8"]
karathon = ["karabo.karathon==3.0.8"]
bound = ["karabo.bound==3.0.8"]
cpp = ["karabo.cpp==3.0.8"]

# a full headless installation
# bound includes c++,
# services includes karathon
full = [
  "karabo.bound==3.0.8",
  "karabo.services[with_cpp]==3.0.8",
  ]

[project.urls]
"Homepage" = "https://github.com/European-XFEL/Karabo"
"Bug Reports" = "https://github.com/European-XFEL/Karabo/issues"
"Source" = "https://github.com/European-XFEL/Karabo"