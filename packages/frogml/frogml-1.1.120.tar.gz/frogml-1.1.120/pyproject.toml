[tool.poetry]
name = "frogml"
version = "1.1.120"
description = "frogml contains the necessary objects and communication tools for using the JFrog ml Platform"
authors = ["JFrog"]
readme = "README.md"
keywords = ["mlops", "ml", "deployment", "serving", "model"]
packages = [
    { include = "frogml/**/*", format = ["sdist", "wheel"] },
    { include = "frogml_services_mock/**/*", format = ["sdist", "wheel"] },
]
include = [
    {path = "frogml/**/*", format = ["sdist", "wheel"]},
    {path = "frogml_services_mock/**/*", format = ["sdist", "wheel"]}
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
license = "Apache-2.0"

[tool.poetry.urls]
"Home page" = "https://www.jfrog.com/"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
python-json-logger = ">=2.0.2"
grpcio = ">=1.71.2"
protobuf = ">=4.25.8"
dependency-injector = ">=4.0"
requests = "*"
python-jose = {version = ">=3.4.0", extras = ["cryptography"]}
PyYAML = ">=6.0.2"
filelock = "*"
marshmallow-dataclass = "^8.5.8"
typeguard = "^2"
joblib = "^1.3.2"
pyspark = { version = "3.4.2", optional = true }
pyarrow = { version = ">=20.0.0", optional = true }
pyathena = { version = ">=2.2.0,!=2.18.0", optional = true }
cloudpickle = "2.2.1"
retrying = "1.3.4"
chevron = "0.14.0"
dacite = "1.8.1"
cachetools = ">=5.2,<7"
pydantic = "*"
tqdm = "*"
libcst = "^1.8.2"
transformers = {version = "^4.53.0", optional = true}
catboost = {version = "^1.2.8", optional = true}
onnx = {version ="^1.18.0", optional = true}
scikit-learn = {version ="^1.5", optional = true}
torch = {version ="^2.7.1", optional = true}
pandas = {version = ">=1.4.0", optional = true}
strenum = "^0.4.15"

[tool.poetry.group.dev.dependencies]
pyarrow = { version = ">=20.0.0" }
pytest = "^8.4.1"
pyspark = "3.4.2"
pytest-httpserver = "^1.1.3"
black = ">=24.3.0"
flake8 = ">=7.0.0"
bandit = { version = "^1.7.5", extras = ["toml"] }
coverage = [
    {version = "<7.11", python = "<3.10"},
    {version = ">=7.11", python = ">=3.10"}
]
typing_extensions = ">=4.4.0"
bump2version = "1.0.1"
grpcio-tools = ">=1.56.2"
mypy-protobuf = "^3.0.0"
pytest-lazy-fixtures = "^1.1.4"
changelog-cli = "*"
testcontainers = "^3.6.1"
sqlalchemy = "1.4.22"
sqlalchemy-utils = "<=0.36.5,>=0.36.2"
trino = "^0.319.0"
pandas = ">=1.4.0"
numpy = "<2"
tensorflow = "^2.19.0"
imageio = "^2.16.0"
QwakBentoML = { version = "0.0.8", source = "qwak" }
croniter = "1.4.1"
mypy = ">=1.9.0"
isort = ">=5.13.0"
types-requests = ">=2.28.0"
pre-commit = "^4.2.0"
tenacity = "^9.1.2"
freezegun = "^1.5.2"
tf-keras = "^2.19.0"

[tool.poetry.extras]
feature-store = ["pyarrow", "pyathena", "pyspark" ,"pandas"]
onnx = ["onnx"]
transformers = ["transformers"]
catboost = ["catboost"]
scikit-learn = ["scikit-learn"]
torch = ["torch"]


[tool.black]
extend-exclude = '''
(
     .*_pb2.py
    | .*_pb2_grpc.py
    | predict_dir/model.py
)'''

[tool.pytest.ini_options]
addopts = [
    "--strict-markers"
]
markers = [
    "integration: marks tests as slow (deselect with '-m \"not integration\"')",
]

[tool.bandit]
exclude_dirs = ["frogml/sdk/model_version/*/template_files/predict_dir/model.py"]

[tool.poe.tasks]
generate = { cmd = "./scripts/gen-proto.sh" }
clean = { cmd = "rm -rf dist ./**/__pycache__", help = "Clean build artifacts" }
install = "poetry install"
validate = { cmd = "pre-commit run  --all-files", help = "Check lint on all files" }
test = { cmd = "pytest --disable-warnings tests", help = "Run tests" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = 'qwak'
url = 'https://qwak.jfrog.io/artifactory/api/pypi/qwak-pypi-local/simple'
priority = "supplemental"
