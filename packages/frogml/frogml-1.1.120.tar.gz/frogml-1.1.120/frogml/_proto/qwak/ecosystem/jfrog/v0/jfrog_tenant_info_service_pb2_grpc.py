# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from frogml._proto.qwak.ecosystem.jfrog.v0 import jfrog_tenant_info_service_pb2 as qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2


class JFrogTenantInfoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetJFrogTenantInfo = channel.unary_unary(
                '/qwak.ecosystem.jfrog.jfrog_tenant_info.v0.JFrogTenantInfoService/GetJFrogTenantInfo',
                request_serializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoRequest.SerializeToString,
                response_deserializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoResponse.FromString,
                )
        self.ListJFrogProjects = channel.unary_unary(
                '/qwak.ecosystem.jfrog.jfrog_tenant_info.v0.JFrogTenantInfoService/ListJFrogProjects',
                request_serializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsRequest.SerializeToString,
                response_deserializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsResponse.FromString,
                )


class JFrogTenantInfoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetJFrogTenantInfo(self, request, context):
        """Get Tenant Info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJFrogProjects(self, request, context):
        """List Tenant Projects
        Returns all projects for which the requesting user is an admin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JFrogTenantInfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetJFrogTenantInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJFrogTenantInfo,
                    request_deserializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoRequest.FromString,
                    response_serializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoResponse.SerializeToString,
            ),
            'ListJFrogProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJFrogProjects,
                    request_deserializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsRequest.FromString,
                    response_serializer=qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.ecosystem.jfrog.jfrog_tenant_info.v0.JFrogTenantInfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JFrogTenantInfoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetJFrogTenantInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.ecosystem.jfrog.jfrog_tenant_info.v0.JFrogTenantInfoService/GetJFrogTenantInfo',
            qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoRequest.SerializeToString,
            qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.GetJFrogTenantInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJFrogProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.ecosystem.jfrog.jfrog_tenant_info.v0.JFrogTenantInfoService/ListJFrogProjects',
            qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsRequest.SerializeToString,
            qwak_dot_ecosystem_dot_jfrog_dot_v0_dot_jfrog__tenant__info__service__pb2.ListJFrogProjectsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
