# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from frogml._proto.qwak.feature_store.features import feature_set_service_pb2 as qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2


class FeatureSetServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterFeatureSet = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/RegisterFeatureSet',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetResponse.FromString,
                )
        self.UpdateFeatureSet = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/UpdateFeatureSet',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetResponse.FromString,
                )
        self.GetFeatureSetById = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetFeatureSetById',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdResponse.FromString,
                )
        self.GetFeatureSetByName = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetFeatureSetByName',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameResponse.FromString,
                )
        self.ListFeaturesetVersionsByName = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/ListFeaturesetVersionsByName',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameResponse.FromString,
                )
        self.DeleteFeatureSet = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/DeleteFeatureSet',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetResponse.FromString,
                )
        self.DeleteFeaturesetVersion = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/DeleteFeaturesetVersion',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionResponse.FromString,
                )
        self.ListFeatureSets = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/ListFeatureSets',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsResponse.FromString,
                )
        self.ListFeaturesetsByAccount = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/ListFeaturesetsByAccount',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountResponse.FromString,
                )
        self.RunBatchFeatureSet = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/RunBatchFeatureSet',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetResponse.FromString,
                )
        self.RunParquetBatchFeatureSet = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/RunParquetBatchFeatureSet',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetResponse.FromString,
                )
        self.CreateUploadURL = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/CreateUploadURL',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
                )
        self.CreateUploadURLV1 = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/CreateUploadURLV1',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequestV1.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
                )
        self.CreateRealTimeFeatureExtractorUploadURL = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/CreateRealTimeFeatureExtractorUploadURL',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateRealTimeFeatureExtractorUploadURLRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
                )
        self.UpdateFeatureSetState = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/UpdateFeatureSetState',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateResponse.FromString,
                )
        self.GetFeatureSetStateByName = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetFeatureSetStateByName',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameResponse.FromString,
                )
        self.GetEnvToFeatureSetsMapping = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetEnvToFeatureSetsMapping',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingResponse.FromString,
                )
        self.GetFeatureSetStateById = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetFeatureSetStateById',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdResponse.FromString,
                )
        self.PauseFeatureset = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/PauseFeatureset',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetResponse.FromString,
                )
        self.ResumeFeatureset = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/ResumeFeatureset',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetResponse.FromString,
                )
        self.GetFeaturesetSchedulingState = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/GetFeaturesetSchedulingState',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateResponse.FromString,
                )
        self.SetActiveFeaturesetVersion = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetService/SetActiveFeaturesetVersion',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionResponse.FromString,
                )


class FeatureSetServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterFeatureSet(self, request, context):
        """Register a feature set to the registry
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeatureSet(self, request, context):
        """Update an existing feature set's state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetById(self, request, context):
        """Get a feature set by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetByName(self, request, context):
        """Get a feature set by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeaturesetVersionsByName(self, request, context):
        """List Feature Set Versions by name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeatureSet(self, request, context):
        """Delete a feature from the registry
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeaturesetVersion(self, request, context):
        """Delete a featureset version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatureSets(self, request, context):
        """List all registered features
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeaturesetsByAccount(self, request, context):
        """List of registered featuresets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunBatchFeatureSet(self, request, context):
        """Run now feature set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunParquetBatchFeatureSet(self, request, context):
        """Run now feature set parquet dataframe ingestion
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUploadURL(self, request, context):
        """Create a url for uploading
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUploadURLV1(self, request, context):
        """Create a url for uploading artifacts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRealTimeFeatureExtractorUploadURL(self, request, context):
        """Create a url for uploading real time feature extractor code artifact
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeatureSetState(self, request, context):
        """Update an existing feature set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetStateByName(self, request, context):
        """Get Feature Set State by name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEnvToFeatureSetsMapping(self, request, context):
        """Retrieve a mapping of environment names to Featuresets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetStateById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseFeatureset(self, request, context):
        """Pause a Featureset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeFeatureset(self, request, context):
        """Resume a Featureset
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeaturesetSchedulingState(self, request, context):
        """Get Feature Set scheduling state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetActiveFeaturesetVersion(self, request, context):
        """Set Active Featureset Version
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeatureSetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterFeatureSet': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterFeatureSet,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetResponse.SerializeToString,
            ),
            'UpdateFeatureSet': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeatureSet,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetResponse.SerializeToString,
            ),
            'GetFeatureSetById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetById,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdResponse.SerializeToString,
            ),
            'GetFeatureSetByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetByName,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameResponse.SerializeToString,
            ),
            'ListFeaturesetVersionsByName': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeaturesetVersionsByName,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameResponse.SerializeToString,
            ),
            'DeleteFeatureSet': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeatureSet,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetResponse.SerializeToString,
            ),
            'DeleteFeaturesetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeaturesetVersion,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionResponse.SerializeToString,
            ),
            'ListFeatureSets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeatureSets,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsResponse.SerializeToString,
            ),
            'ListFeaturesetsByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeaturesetsByAccount,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountResponse.SerializeToString,
            ),
            'RunBatchFeatureSet': grpc.unary_unary_rpc_method_handler(
                    servicer.RunBatchFeatureSet,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetResponse.SerializeToString,
            ),
            'RunParquetBatchFeatureSet': grpc.unary_unary_rpc_method_handler(
                    servicer.RunParquetBatchFeatureSet,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetResponse.SerializeToString,
            ),
            'CreateUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUploadURL,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.SerializeToString,
            ),
            'CreateUploadURLV1': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUploadURLV1,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequestV1.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.SerializeToString,
            ),
            'CreateRealTimeFeatureExtractorUploadURL': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRealTimeFeatureExtractorUploadURL,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateRealTimeFeatureExtractorUploadURLRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.SerializeToString,
            ),
            'UpdateFeatureSetState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeatureSetState,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateResponse.SerializeToString,
            ),
            'GetFeatureSetStateByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetStateByName,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameResponse.SerializeToString,
            ),
            'GetEnvToFeatureSetsMapping': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEnvToFeatureSetsMapping,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingResponse.SerializeToString,
            ),
            'GetFeatureSetStateById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetStateById,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdResponse.SerializeToString,
            ),
            'PauseFeatureset': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseFeatureset,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetResponse.SerializeToString,
            ),
            'ResumeFeatureset': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeFeatureset,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetResponse.SerializeToString,
            ),
            'GetFeaturesetSchedulingState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeaturesetSchedulingState,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateResponse.SerializeToString,
            ),
            'SetActiveFeaturesetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetActiveFeaturesetVersion,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.feature.store.features.FeatureSetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeatureSetService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterFeatureSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/RegisterFeatureSet',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RegisterFeatureSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFeatureSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/UpdateFeatureSet',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetFeatureSetById',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetFeatureSetByName',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeaturesetVersionsByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/ListFeaturesetVersionsByName',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetVersionsByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFeatureSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/DeleteFeatureSet',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeatureSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFeaturesetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/DeleteFeaturesetVersion',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.DeleteFeaturesetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeatureSets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/ListFeatureSets',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeatureSetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeaturesetsByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/ListFeaturesetsByAccount',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ListFeaturesetsByAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunBatchFeatureSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/RunBatchFeatureSet',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunBatchFeatureSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunParquetBatchFeatureSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/RunParquetBatchFeatureSet',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.RunParquetBatchFeatureSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/CreateUploadURL',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUploadURLV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/CreateUploadURLV1',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLRequestV1.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRealTimeFeatureExtractorUploadURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/CreateRealTimeFeatureExtractorUploadURL',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateRealTimeFeatureExtractorUploadURLRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.CreateUploadURLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFeatureSetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/UpdateFeatureSetState',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.UpdateFeatureSetStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetStateByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetFeatureSetStateByName',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEnvToFeatureSetsMapping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetEnvToFeatureSetsMapping',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetEnvToFeatureSetsMappingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetStateById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetFeatureSetStateById',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeatureSetStateByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseFeatureset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/PauseFeatureset',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.PauseFeaturesetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeFeatureset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/ResumeFeatureset',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.ResumeFeaturesetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeaturesetSchedulingState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/GetFeaturesetSchedulingState',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.GetFeaturesetSchedulingStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetActiveFeaturesetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetService/SetActiveFeaturesetVersion',
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionRequest.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__service__pb2.SetActiveFeaturesetVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
