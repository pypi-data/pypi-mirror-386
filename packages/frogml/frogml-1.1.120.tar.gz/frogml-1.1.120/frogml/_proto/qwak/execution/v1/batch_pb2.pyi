"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class BatchIngestion(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEATURESET_NAME_FIELD_NUMBER: builtins.int
    MANUAL_TRIGGER_FIELD_NUMBER: builtins.int
    SCHEDULED_TRIGGER_FIELD_NUMBER: builtins.int
    featureset_name: builtins.str
    @property
    def manual_trigger(self) -> global___ManualTrigger:
        """Manual Trigger i.e., RunNow"""
    @property
    def scheduled_trigger(self) -> global___ScheduledTrigger:
        """Scheduled Trigger (e.g. Airflow)."""
    def __init__(
        self,
        *,
        featureset_name: builtins.str = ...,
        manual_trigger: global___ManualTrigger | None = ...,
        scheduled_trigger: global___ScheduledTrigger | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["manual_trigger", b"manual_trigger", "scheduled_trigger", b"scheduled_trigger", "trigger_type", b"trigger_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["featureset_name", b"featureset_name", "manual_trigger", b"manual_trigger", "scheduled_trigger", b"scheduled_trigger", "trigger_type", b"trigger_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["trigger_type", b"trigger_type"]) -> typing_extensions.Literal["manual_trigger", "scheduled_trigger"] | None: ...

global___BatchIngestion = BatchIngestion

class ManualTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRIGGER_DATE_FIELD_NUMBER: builtins.int
    @property
    def trigger_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """timestamp at which the manual run was triggered. set by the service (ignored if set by the user)."""
    def __init__(
        self,
        *,
        trigger_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trigger_date", b"trigger_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["trigger_date", b"trigger_date"]) -> None: ...

global___ManualTrigger = ManualTrigger

class ScheduledTrigger(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOGICAL_BATCH_DATE_FIELD_NUMBER: builtins.int
    @property
    def logical_batch_date(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """logical timestamp of the batch"""
    def __init__(
        self,
        *,
        logical_batch_date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["logical_batch_date", b"logical_batch_date"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["logical_batch_date", b"logical_batch_date"]) -> None: ...

global___ScheduledTrigger = ScheduledTrigger
