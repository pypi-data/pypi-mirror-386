"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class RepositoryDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REPOSITORY_TYPE_FIELD_NUMBER: builtins.int
    REPOSITORY_KEY_FIELD_NUMBER: builtins.int
    @property
    def repository_type(self) -> global___RepositoryType:
        """The repository type"""
    repository_key: builtins.str
    """The repository key is the full repository path, e.g. <jfrog_project_key><model>-docker-local"""
    def __init__(
        self,
        *,
        repository_type: global___RepositoryType | None = ...,
        repository_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["repository_type", b"repository_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["repository_key", b"repository_key", "repository_type", b"repository_type"]) -> None: ...

global___RepositoryDetails = RepositoryDetails

class RemoteRepositoryDetails(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCKER_REPOSITORY_FIELD_NUMBER: builtins.int
    HUGGING_FACE_REPOSITORY_FIELD_NUMBER: builtins.int
    REPOSITORY_REMOTE_URL_FIELD_NUMBER: builtins.int
    @property
    def docker_repository(self) -> global___DockerRepository:
        """Docker repository"""
    @property
    def hugging_face_repository(self) -> global___HuggingFaceRepository:
        """HuggingFace repository"""
    repository_remote_url: builtins.str
    """The remote repository URL"""
    def __init__(
        self,
        *,
        docker_repository: global___DockerRepository | None = ...,
        hugging_face_repository: global___HuggingFaceRepository | None = ...,
        repository_remote_url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["docker_repository", b"docker_repository", "hugging_face_repository", b"hugging_face_repository", "repository_type", b"repository_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["docker_repository", b"docker_repository", "hugging_face_repository", b"hugging_face_repository", "repository_remote_url", b"repository_remote_url", "repository_type", b"repository_type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["repository_type", b"repository_type"]) -> typing_extensions.Literal["docker_repository", "hugging_face_repository"] | None: ...

global___RemoteRepositoryDetails = RemoteRepositoryDetails

class DockerRepository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DockerRepository = DockerRepository

class DatasetRepository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DatasetRepository = DatasetRepository

class ArtifactRepository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ArtifactRepository = ArtifactRepository

class HuggingFaceRepository(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___HuggingFaceRepository = HuggingFaceRepository

class RepositoryType(google.protobuf.message.Message):
    """The repository type"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOCKER_REPOSITORY_FIELD_NUMBER: builtins.int
    DATASET_REPOSITORY_FIELD_NUMBER: builtins.int
    ARTIFACT_REPOSITORY_FIELD_NUMBER: builtins.int
    HUGGING_FACE_REPOSITORY_FIELD_NUMBER: builtins.int
    @property
    def docker_repository(self) -> global___DockerRepository:
        """Docker repository"""
    @property
    def dataset_repository(self) -> global___DatasetRepository:
        """Dataset repository"""
    @property
    def artifact_repository(self) -> global___ArtifactRepository:
        """Artifact repository"""
    @property
    def hugging_face_repository(self) -> global___HuggingFaceRepository:
        """HuggingFace repository"""
    def __init__(
        self,
        *,
        docker_repository: global___DockerRepository | None = ...,
        dataset_repository: global___DatasetRepository | None = ...,
        artifact_repository: global___ArtifactRepository | None = ...,
        hugging_face_repository: global___HuggingFaceRepository | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["artifact_repository", b"artifact_repository", "dataset_repository", b"dataset_repository", "docker_repository", b"docker_repository", "hugging_face_repository", b"hugging_face_repository", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["artifact_repository", b"artifact_repository", "dataset_repository", b"dataset_repository", "docker_repository", b"docker_repository", "hugging_face_repository", b"hugging_face_repository", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["docker_repository", "dataset_repository", "artifact_repository", "hugging_face_repository"] | None: ...

global___RepositoryType = RepositoryType
