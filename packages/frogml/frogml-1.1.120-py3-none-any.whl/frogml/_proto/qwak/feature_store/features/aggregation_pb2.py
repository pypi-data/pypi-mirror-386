# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frogml._proto.qwak.feature_store/features/aggregation.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n-qwak/feature_store/features/aggregation.proto\x12\'qwak.feature.store.features.aggregation\"\x85\t\n\x10\x41ggregationField\x12I\n\x0ctime_windows\x18\x01 \x03(\x0b\x32\x33.qwak.feature.store.features.aggregation.TimeWindow\x12\x19\n\x11\x66ield_name_prefix\x18\x02 \x01(\t\x12?\n\x05\x63ount\x18\x03 \x01(\x0b\x32..qwak.feature.store.features.aggregation.CountH\x00\x12;\n\x03sum\x18\x04 \x01(\x0b\x32,.qwak.feature.store.features.aggregation.SumH\x00\x12;\n\x03max\x18\x05 \x01(\x0b\x32,.qwak.feature.store.features.aggregation.MaxH\x00\x12;\n\x03min\x18\x06 \x01(\x0b\x32,.qwak.feature.store.features.aggregation.MinH\x00\x12;\n\x03\x61vg\x18\x07 \x01(\x0b\x32,.qwak.feature.store.features.aggregation.AvgH\x00\x12R\n\x0fsample_variance\x18\x08 \x01(\x0b\x32\x37.qwak.feature.store.features.aggregation.SampleVarianceH\x00\x12Z\n\x13population_variance\x18\t \x01(\x0b\x32;.qwak.feature.store.features.aggregation.PopulationVarianceH\x00\x12L\n\x0csample_stdev\x18\n \x01(\x0b\x32\x34.qwak.feature.store.features.aggregation.SampleSTDEVH\x00\x12T\n\x10population_stdev\x18\x0b \x01(\x0b\x32\x38.qwak.feature.store.features.aggregation.PopulationSTDEVH\x00\x12J\n\x0b\x62oolean_and\x18\x0c \x01(\x0b\x32\x33.qwak.feature.store.features.aggregation.BooleanAndH\x00\x12H\n\nboolean_or\x18\r \x01(\x0b\x32\x32.qwak.feature.store.features.aggregation.BooleanOrH\x00\x12Q\n\x0flast_distinct_n\x18\x0e \x01(\x0b\x32\x36.qwak.feature.store.features.aggregation.LastDistinctNH\x00\x12@\n\x06last_n\x18\x0f \x01(\x0b\x32..qwak.feature.store.features.aggregation.LastNH\x00\x12I\n\npercentile\x18\x10 \x01(\x0b\x32\x33.qwak.feature.store.features.aggregation.PercentileH\x00\x42\x0c\n\naggregator\"b\n\nTimeWindow\x12\x44\n\ttime_unit\x18\x01 \x01(\x0e\x32\x31.qwak.feature.store.features.aggregation.TimeUnit\x12\x0e\n\x06length\x18\x02 \x01(\x03\"\x1b\n\x05\x43ount\x12\x12\n\nfield_name\x18\x01 \x01(\t\"\x19\n\x03Sum\x12\x12\n\nfield_name\x18\x01 \x01(\t\"\x19\n\x03Max\x12\x12\n\nfield_name\x18\x01 \x01(\t\"\x19\n\x03Min\x12\x12\n\nfield_name\x18\x01 \x01(\t\"\x19\n\x03\x41vg\x12\x12\n\nfield_name\x18\x01 \x01(\t\"$\n\x0eSampleVariance\x12\x12\n\nfield_name\x18\x01 \x01(\t\"(\n\x12PopulationVariance\x12\x12\n\nfield_name\x18\x01 \x01(\t\"!\n\x0bSampleSTDEV\x12\x12\n\nfield_name\x18\x01 \x01(\t\"%\n\x0fPopulationSTDEV\x12\x12\n\nfield_name\x18\x01 \x01(\t\" \n\nBooleanAnd\x12\x12\n\nfield_name\x18\x01 \x01(\t\"\x1f\n\tBooleanOr\x12\x12\n\nfield_name\x18\x01 \x01(\t\".\n\rLastDistinctN\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\t\n\x01n\x18\x02 \x01(\x05\"&\n\x05LastN\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\t\n\x01n\x18\x02 \x01(\x05\"+\n\nPercentile\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\t\n\x01p\x18\x02 \x01(\x05*\x8d\x01\n\x08TimeUnit\x12\x15\n\x11TIME_UNIT_INVALID\x10\x00\x12\x13\n\x0fTIME_UNIT_WEEKS\x10\x03\x12\x12\n\x0eTIME_UNIT_DAYS\x10\x04\x12\x13\n\x0fTIME_UNIT_HOURS\x10\x05\x12\x15\n\x11TIME_UNIT_MINUTES\x10\x06\x12\x15\n\x11TIME_UNIT_SECONDS\x10\x07\x42^\n)com.qwak.ai.feature.store.aggregation.apiP\x01Z/qwak/featurestore/features;featurestorefeaturesb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'qwak.feature_store.features.aggregation_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n)com.qwak.ai.feature.store.aggregation.apiP\001Z/qwak/featurestore/features;featurestorefeatures'
  _globals['_TIMEUNIT']._serialized_start=1842
  _globals['_TIMEUNIT']._serialized_end=1983
  _globals['_AGGREGATIONFIELD']._serialized_start=91
  _globals['_AGGREGATIONFIELD']._serialized_end=1248
  _globals['_TIMEWINDOW']._serialized_start=1250
  _globals['_TIMEWINDOW']._serialized_end=1348
  _globals['_COUNT']._serialized_start=1350
  _globals['_COUNT']._serialized_end=1377
  _globals['_SUM']._serialized_start=1379
  _globals['_SUM']._serialized_end=1404
  _globals['_MAX']._serialized_start=1406
  _globals['_MAX']._serialized_end=1431
  _globals['_MIN']._serialized_start=1433
  _globals['_MIN']._serialized_end=1458
  _globals['_AVG']._serialized_start=1460
  _globals['_AVG']._serialized_end=1485
  _globals['_SAMPLEVARIANCE']._serialized_start=1487
  _globals['_SAMPLEVARIANCE']._serialized_end=1523
  _globals['_POPULATIONVARIANCE']._serialized_start=1525
  _globals['_POPULATIONVARIANCE']._serialized_end=1565
  _globals['_SAMPLESTDEV']._serialized_start=1567
  _globals['_SAMPLESTDEV']._serialized_end=1600
  _globals['_POPULATIONSTDEV']._serialized_start=1602
  _globals['_POPULATIONSTDEV']._serialized_end=1639
  _globals['_BOOLEANAND']._serialized_start=1641
  _globals['_BOOLEANAND']._serialized_end=1673
  _globals['_BOOLEANOR']._serialized_start=1675
  _globals['_BOOLEANOR']._serialized_end=1706
  _globals['_LASTDISTINCTN']._serialized_start=1708
  _globals['_LASTDISTINCTN']._serialized_end=1754
  _globals['_LASTN']._serialized_start=1756
  _globals['_LASTN']._serialized_end=1794
  _globals['_PERCENTILE']._serialized_start=1796
  _globals['_PERCENTILE']._serialized_end=1839
# @@protoc_insertion_point(module_scope)
