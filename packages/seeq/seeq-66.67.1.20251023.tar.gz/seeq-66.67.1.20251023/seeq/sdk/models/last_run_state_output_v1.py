# coding: utf-8

"""
    Seeq REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 66.67.1-v202510230217-CD
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from pprint import pformat
from six import iteritems
import re


class LastRunStateOutputV1(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'condition_guid': 'str',
        'cursor_key': 'int',
        'earliest_uncertain_end_time_capsule_start': 'int',
        'error_count': 'int',
        'id_property': 'str',
        'last_error': 'str',
        'last_error_time_created': 'int',
        'uncertain_capsule_ids': 'list[str]'
    }

    attribute_map = {
        'condition_guid': 'conditionGuid',
        'cursor_key': 'cursorKey',
        'earliest_uncertain_end_time_capsule_start': 'earliestUncertainEndTimeCapsuleStart',
        'error_count': 'errorCount',
        'id_property': 'idProperty',
        'last_error': 'lastError',
        'last_error_time_created': 'lastErrorTimeCreated',
        'uncertain_capsule_ids': 'uncertainCapsuleIds'
    }

    def __init__(self, condition_guid=None, cursor_key=None, earliest_uncertain_end_time_capsule_start=None, error_count=None, id_property=None, last_error=None, last_error_time_created=None, uncertain_capsule_ids=None):
        """
        LastRunStateOutputV1 - a model defined in Swagger
        """

        self._condition_guid = None
        self._cursor_key = None
        self._earliest_uncertain_end_time_capsule_start = None
        self._error_count = None
        self._id_property = None
        self._last_error = None
        self._last_error_time_created = None
        self._uncertain_capsule_ids = None

        if condition_guid is not None:
          self.condition_guid = condition_guid
        if cursor_key is not None:
          self.cursor_key = cursor_key
        if earliest_uncertain_end_time_capsule_start is not None:
          self.earliest_uncertain_end_time_capsule_start = earliest_uncertain_end_time_capsule_start
        if error_count is not None:
          self.error_count = error_count
        if id_property is not None:
          self.id_property = id_property
        if last_error is not None:
          self.last_error = last_error
        if last_error_time_created is not None:
          self.last_error_time_created = last_error_time_created
        if uncertain_capsule_ids is not None:
          self.uncertain_capsule_ids = uncertain_capsule_ids

    @property
    def condition_guid(self):
        """
        Gets the condition_guid of this LastRunStateOutputV1.

        :return: The condition_guid of this LastRunStateOutputV1.
        :rtype: str
        """
        return self._condition_guid

    @condition_guid.setter
    def condition_guid(self, condition_guid):
        """
        Sets the condition_guid of this LastRunStateOutputV1.

        :param condition_guid: The condition_guid of this LastRunStateOutputV1.
        :type: str
        """

        self._condition_guid = condition_guid

    @property
    def cursor_key(self):
        """
        Gets the cursor_key of this LastRunStateOutputV1.

        :return: The cursor_key of this LastRunStateOutputV1.
        :rtype: int
        """
        return self._cursor_key

    @cursor_key.setter
    def cursor_key(self, cursor_key):
        """
        Sets the cursor_key of this LastRunStateOutputV1.

        :param cursor_key: The cursor_key of this LastRunStateOutputV1.
        :type: int
        """

        self._cursor_key = cursor_key

    @property
    def earliest_uncertain_end_time_capsule_start(self):
        """
        Gets the earliest_uncertain_end_time_capsule_start of this LastRunStateOutputV1.

        :return: The earliest_uncertain_end_time_capsule_start of this LastRunStateOutputV1.
        :rtype: int
        """
        return self._earliest_uncertain_end_time_capsule_start

    @earliest_uncertain_end_time_capsule_start.setter
    def earliest_uncertain_end_time_capsule_start(self, earliest_uncertain_end_time_capsule_start):
        """
        Sets the earliest_uncertain_end_time_capsule_start of this LastRunStateOutputV1.

        :param earliest_uncertain_end_time_capsule_start: The earliest_uncertain_end_time_capsule_start of this LastRunStateOutputV1.
        :type: int
        """

        self._earliest_uncertain_end_time_capsule_start = earliest_uncertain_end_time_capsule_start

    @property
    def error_count(self):
        """
        Gets the error_count of this LastRunStateOutputV1.

        :return: The error_count of this LastRunStateOutputV1.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """
        Sets the error_count of this LastRunStateOutputV1.

        :param error_count: The error_count of this LastRunStateOutputV1.
        :type: int
        """

        self._error_count = error_count

    @property
    def id_property(self):
        """
        Gets the id_property of this LastRunStateOutputV1.

        :return: The id_property of this LastRunStateOutputV1.
        :rtype: str
        """
        return self._id_property

    @id_property.setter
    def id_property(self, id_property):
        """
        Sets the id_property of this LastRunStateOutputV1.

        :param id_property: The id_property of this LastRunStateOutputV1.
        :type: str
        """

        self._id_property = id_property

    @property
    def last_error(self):
        """
        Gets the last_error of this LastRunStateOutputV1.

        :return: The last_error of this LastRunStateOutputV1.
        :rtype: str
        """
        return self._last_error

    @last_error.setter
    def last_error(self, last_error):
        """
        Sets the last_error of this LastRunStateOutputV1.

        :param last_error: The last_error of this LastRunStateOutputV1.
        :type: str
        """

        self._last_error = last_error

    @property
    def last_error_time_created(self):
        """
        Gets the last_error_time_created of this LastRunStateOutputV1.

        :return: The last_error_time_created of this LastRunStateOutputV1.
        :rtype: int
        """
        return self._last_error_time_created

    @last_error_time_created.setter
    def last_error_time_created(self, last_error_time_created):
        """
        Sets the last_error_time_created of this LastRunStateOutputV1.

        :param last_error_time_created: The last_error_time_created of this LastRunStateOutputV1.
        :type: int
        """

        self._last_error_time_created = last_error_time_created

    @property
    def uncertain_capsule_ids(self):
        """
        Gets the uncertain_capsule_ids of this LastRunStateOutputV1.

        :return: The uncertain_capsule_ids of this LastRunStateOutputV1.
        :rtype: list[str]
        """
        return self._uncertain_capsule_ids

    @uncertain_capsule_ids.setter
    def uncertain_capsule_ids(self, uncertain_capsule_ids):
        """
        Sets the uncertain_capsule_ids of this LastRunStateOutputV1.

        :param uncertain_capsule_ids: The uncertain_capsule_ids of this LastRunStateOutputV1.
        :type: list[str]
        """

        self._uncertain_capsule_ids = uncertain_capsule_ids

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, LastRunStateOutputV1):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
