Metadata-Version: 2.4
Name: cgse-common
Version: 0.16.13
Summary: Software framework to support hardware testing
Author: IvS KU Leuven
Maintainer-email: Rik Huygen <rik.huygen@kuleuven.be>, Sara Regibo <sara.regibo@kuleuven.be>
License-Expression: MIT
Keywords: CGSE,Common-EGSE,hardware testing,software framework
Requires-Python: >=3.10
Requires-Dist: click>=8.2.1
Requires-Dist: deepdiff>=8.1.1
Requires-Dist: distro>=1.9.0
Requires-Dist: duckdb>=1.3.1
Requires-Dist: gitpython>=3.1.44
Requires-Dist: importlib-metadata>=4.6.0; python_version <= '3.11'
Requires-Dist: influxdb3-python
Requires-Dist: navdict>=0.5.9
Requires-Dist: numpy==1.26.4; python_version == '3.9'
Requires-Dist: numpy>=2.1; python_version >= '3.10'
Requires-Dist: pandas==1.5.1; python_version == '3.9'
Requires-Dist: pandas>=2.2.0; python_version >= '3.10'
Requires-Dist: prometheus-client>=0.21.1
Requires-Dist: psutil>=6.1.1
Requires-Dist: psycopg>=3.2.9
Requires-Dist: python-dotenv>=1.1.1
Requires-Dist: pyyaml>=6.0.2
Requires-Dist: pyzmq==23.2.1; python_version == '3.9'
Requires-Dist: pyzmq>=25.1.0; python_version >= '3.10'
Requires-Dist: requests>=2.32.4
Requires-Dist: rich>=13.9.4
Requires-Dist: typer>=0.16.0
Description-Content-Type: text/markdown


![PyPI - Version](https://img.shields.io/pypi/v/cgse-common)
![Supported OS](https://img.shields.io/badge/Supported%20OS-Linux%20%7C%20macOS-blue)
![Python Version from PEP 621 TOML](https://img.shields.io/python/required-version-toml?tomlFilePath=https%3A%2F%2Fraw.githubusercontent.com%2FIvS-KULeuven%2Fcgse%2Frefs%2Fheads%2Fmain%2Fpyproject.toml)
![PyPI - Wheel](https://img.shields.io/pypi/wheel/cgse-common)

# Generic Functionality used in the Common-EGSE

This package 'cgse-common' contains functionality that is used by all `cgse` sub-packages, but it is designed to be a stand-alone generic package that can be used also in any other project.


## Installation

Install the package using pip:

    $ pip install cgse-common


## Usage

All functionality resides in the package `egse`. As an example, if you need a standard way to format your timestamp, use the `format_datetime()` function from `egse.system`:

    >>> from egse.system import format_datetime
    >>> print(format_datetime())
    2023-10-10T08:41:51.937+0000


## Included Functionality

A non-comprehensive list of available functionality:

### Functionality of General Use

* **egse.bits**: contains a number of convenience functions to work with bits, bytes and integers
* **egse.decorators**: a collection of useful decorator functions
* **egse.reload**: a slightly better approach to reloading modules and function than the standard importlib.reload() function.
* **egse.resource**: provides convenience functions to use resources in your code without the need to specify an absolute path
* **egse.system**: defines convenience functions that provide information on system specific functionality like, file system interactions, timing, operating system interactions, etc.
* **egse.version**: functionality to retrieve the package version information
