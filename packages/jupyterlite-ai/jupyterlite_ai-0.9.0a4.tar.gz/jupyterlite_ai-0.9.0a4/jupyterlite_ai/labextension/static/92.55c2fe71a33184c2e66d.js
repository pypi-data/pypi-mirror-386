"use strict";(self.webpackChunk_jupyterlite_ai=self.webpackChunk_jupyterlite_ai||[]).push([[92],{8092:(t,e,o)=>{o.d(e,{CallToolResultSchema:()=>vt,GU:()=>Wt,HM:()=>bt,Iu:()=>a,ListToolsResultSchema:()=>_t,Nh:()=>Jt,O$:()=>X,O4:()=>_,OR:()=>C,Rk:()=>H,Sq:()=>P,Yu:()=>zt,_r:()=>$,aE:()=>r,cv:()=>K,lg:()=>j,o$:()=>T,tC:()=>O,tG:()=>f,ve:()=>tt,vo:()=>b,wR:()=>k,wU:()=>N});var n=o(9661);const r="2025-06-18",a=[r,"2025-03-26","2024-11-05","2024-10-07"],i="2.0",s=n.z.union([n.z.string(),n.z.number().int()]),z=n.z.string(),l=n.z.object({progressToken:n.z.optional(s)}).passthrough(),p=n.z.object({_meta:n.z.optional(l)}).passthrough(),c=n.z.object({method:n.z.string(),params:n.z.optional(p)}),u=n.z.object({_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),g=n.z.object({method:n.z.string(),params:n.z.optional(u)}),m=n.z.object({_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),h=n.z.union([n.z.string(),n.z.number().int()]),d=n.z.object({jsonrpc:n.z.literal(i),id:h}).merge(c).strict(),b=t=>d.safeParse(t).success,x=n.z.object({jsonrpc:n.z.literal(i)}).merge(g).strict(),j=t=>x.safeParse(t).success,y=n.z.object({jsonrpc:n.z.literal(i),id:h,result:m}).strict(),f=t=>y.safeParse(t).success;var _;!function(t){t[t.ConnectionClosed=-32e3]="ConnectionClosed",t[t.RequestTimeout=-32001]="RequestTimeout",t[t.ParseError=-32700]="ParseError",t[t.InvalidRequest=-32600]="InvalidRequest",t[t.MethodNotFound=-32601]="MethodNotFound",t[t.InvalidParams=-32602]="InvalidParams",t[t.InternalError=-32603]="InternalError"}(_||(_={}));const v=n.z.object({jsonrpc:n.z.literal(i),id:h,error:n.z.object({code:n.z.number().int(),message:n.z.string(),data:n.z.optional(n.z.unknown())})}).strict(),T=t=>v.safeParse(t).success,C=n.z.union([d,x,y,v]),k=m.strict(),P=g.extend({method:n.z.literal("notifications/cancelled"),params:u.extend({requestId:h,reason:n.z.string().optional()})}),q=n.z.object({src:n.z.string(),mimeType:n.z.optional(n.z.string()),sizes:n.z.optional(n.z.array(n.z.string()))}).passthrough(),w=n.z.object({icons:n.z.array(q).optional()}).passthrough(),I=n.z.object({name:n.z.string(),title:n.z.optional(n.z.string())}).passthrough(),R=I.extend({version:n.z.string(),websiteUrl:n.z.optional(n.z.string())}).merge(w),S=n.z.object({experimental:n.z.optional(n.z.object({}).passthrough()),sampling:n.z.optional(n.z.object({}).passthrough()),elicitation:n.z.optional(n.z.object({}).passthrough()),roots:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough())}).passthrough(),E=c.extend({method:n.z.literal("initialize"),params:p.extend({protocolVersion:n.z.string(),capabilities:S,clientInfo:R})}),M=n.z.object({experimental:n.z.optional(n.z.object({}).passthrough()),logging:n.z.optional(n.z.object({}).passthrough()),completions:n.z.optional(n.z.object({}).passthrough()),prompts:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough()),resources:n.z.optional(n.z.object({subscribe:n.z.optional(n.z.boolean()),listChanged:n.z.optional(n.z.boolean())}).passthrough()),tools:n.z.optional(n.z.object({listChanged:n.z.optional(n.z.boolean())}).passthrough())}).passthrough(),H=m.extend({protocolVersion:n.z.string(),capabilities:M,serverInfo:R,instructions:n.z.optional(n.z.string())}),L=g.extend({method:n.z.literal("notifications/initialized")}),N=t=>L.safeParse(t).success,O=c.extend({method:n.z.literal("ping")}),U=n.z.object({progress:n.z.number(),total:n.z.optional(n.z.number()),message:n.z.optional(n.z.string())}).passthrough(),$=g.extend({method:n.z.literal("notifications/progress"),params:u.merge(U).extend({progressToken:s})}),F=c.extend({params:p.extend({cursor:n.z.optional(z)}).optional()}),G=m.extend({nextCursor:n.z.optional(z)}),V=n.z.object({uri:n.z.string(),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),W=V.extend({text:n.z.string()}),B=n.z.string().refine(t=>{try{return atob(t),!0}catch(t){return!1}},{message:"Invalid Base64 string"}),Y=V.extend({blob:B}),A=I.extend({uri:n.z.string(),description:n.z.optional(n.z.string()),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).merge(w),D=I.extend({uriTemplate:n.z.string(),description:n.z.optional(n.z.string()),mimeType:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).merge(w),J=F.extend({method:n.z.literal("resources/list")}),K=G.extend({resources:n.z.array(A)}),Q=F.extend({method:n.z.literal("resources/templates/list")}),X=G.extend({resourceTemplates:n.z.array(D)}),Z=c.extend({method:n.z.literal("resources/read"),params:p.extend({uri:n.z.string()})}),tt=m.extend({contents:n.z.array(n.z.union([W,Y]))}),et=g.extend({method:n.z.literal("notifications/resources/list_changed")}),ot=c.extend({method:n.z.literal("resources/subscribe"),params:p.extend({uri:n.z.string()})}),nt=c.extend({method:n.z.literal("resources/unsubscribe"),params:p.extend({uri:n.z.string()})}),rt=g.extend({method:n.z.literal("notifications/resources/updated"),params:u.extend({uri:n.z.string()})}),at=n.z.object({name:n.z.string(),description:n.z.optional(n.z.string()),required:n.z.optional(n.z.boolean())}).passthrough(),it=I.extend({description:n.z.optional(n.z.string()),arguments:n.z.optional(n.z.array(at)),_meta:n.z.optional(n.z.object({}).passthrough())}).merge(w),st=F.extend({method:n.z.literal("prompts/list")}),zt=G.extend({prompts:n.z.array(it)}),lt=c.extend({method:n.z.literal("prompts/get"),params:p.extend({name:n.z.string(),arguments:n.z.optional(n.z.record(n.z.string()))})}),pt=n.z.object({type:n.z.literal("text"),text:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),ct=n.z.object({type:n.z.literal("image"),data:B,mimeType:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),ut=n.z.object({type:n.z.literal("audio"),data:B,mimeType:n.z.string(),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),gt=n.z.object({type:n.z.literal("resource"),resource:n.z.union([W,Y]),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),mt=A.extend({type:n.z.literal("resource_link")}),ht=n.z.union([pt,ct,ut,mt,gt]),dt=n.z.object({role:n.z.enum(["user","assistant"]),content:ht}).passthrough(),bt=m.extend({description:n.z.optional(n.z.string()),messages:n.z.array(dt)}),xt=g.extend({method:n.z.literal("notifications/prompts/list_changed")}),jt=n.z.object({title:n.z.optional(n.z.string()),readOnlyHint:n.z.optional(n.z.boolean()),destructiveHint:n.z.optional(n.z.boolean()),idempotentHint:n.z.optional(n.z.boolean()),openWorldHint:n.z.optional(n.z.boolean())}).passthrough(),yt=I.extend({description:n.z.optional(n.z.string()),inputSchema:n.z.object({type:n.z.literal("object"),properties:n.z.optional(n.z.object({}).passthrough()),required:n.z.optional(n.z.array(n.z.string()))}).passthrough(),outputSchema:n.z.optional(n.z.object({type:n.z.literal("object"),properties:n.z.optional(n.z.object({}).passthrough()),required:n.z.optional(n.z.array(n.z.string()))}).passthrough()),annotations:n.z.optional(jt),_meta:n.z.optional(n.z.object({}).passthrough())}).merge(w),ft=F.extend({method:n.z.literal("tools/list")}),_t=G.extend({tools:n.z.array(yt)}),vt=m.extend({content:n.z.array(ht).default([]),structuredContent:n.z.object({}).passthrough().optional(),isError:n.z.optional(n.z.boolean())}),Tt=(vt.or(m.extend({toolResult:n.z.unknown()})),c.extend({method:n.z.literal("tools/call"),params:p.extend({name:n.z.string(),arguments:n.z.optional(n.z.record(n.z.unknown()))})})),Ct=g.extend({method:n.z.literal("notifications/tools/list_changed")}),kt=n.z.enum(["debug","info","notice","warning","error","critical","alert","emergency"]),Pt=c.extend({method:n.z.literal("logging/setLevel"),params:p.extend({level:kt})}),qt=g.extend({method:n.z.literal("notifications/message"),params:u.extend({level:kt,logger:n.z.optional(n.z.string()),data:n.z.unknown()})}),wt=n.z.object({name:n.z.string().optional()}).passthrough(),It=n.z.object({hints:n.z.optional(n.z.array(wt)),costPriority:n.z.optional(n.z.number().min(0).max(1)),speedPriority:n.z.optional(n.z.number().min(0).max(1)),intelligencePriority:n.z.optional(n.z.number().min(0).max(1))}).passthrough(),Rt=n.z.object({role:n.z.enum(["user","assistant"]),content:n.z.union([pt,ct,ut])}).passthrough(),St=c.extend({method:n.z.literal("sampling/createMessage"),params:p.extend({messages:n.z.array(Rt),systemPrompt:n.z.optional(n.z.string()),includeContext:n.z.optional(n.z.enum(["none","thisServer","allServers"])),temperature:n.z.optional(n.z.number()),maxTokens:n.z.number().int(),stopSequences:n.z.optional(n.z.array(n.z.string())),metadata:n.z.optional(n.z.object({}).passthrough()),modelPreferences:n.z.optional(It)})}),Et=m.extend({model:n.z.string(),stopReason:n.z.optional(n.z.enum(["endTurn","stopSequence","maxTokens"]).or(n.z.string())),role:n.z.enum(["user","assistant"]),content:n.z.discriminatedUnion("type",[pt,ct,ut])}),Mt=n.z.object({type:n.z.literal("boolean"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),default:n.z.optional(n.z.boolean())}).passthrough(),Ht=n.z.object({type:n.z.literal("string"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),minLength:n.z.optional(n.z.number()),maxLength:n.z.optional(n.z.number()),format:n.z.optional(n.z.enum(["email","uri","date","date-time"]))}).passthrough(),Lt=n.z.object({type:n.z.enum(["number","integer"]),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),minimum:n.z.optional(n.z.number()),maximum:n.z.optional(n.z.number())}).passthrough(),Nt=n.z.object({type:n.z.literal("string"),title:n.z.optional(n.z.string()),description:n.z.optional(n.z.string()),enum:n.z.array(n.z.string()),enumNames:n.z.optional(n.z.array(n.z.string()))}).passthrough(),Ot=n.z.union([Mt,Ht,Lt,Nt]),Ut=c.extend({method:n.z.literal("elicitation/create"),params:p.extend({message:n.z.string(),requestedSchema:n.z.object({type:n.z.literal("object"),properties:n.z.record(n.z.string(),Ot),required:n.z.optional(n.z.array(n.z.string()))}).passthrough()})}),$t=m.extend({action:n.z.enum(["accept","decline","cancel"]),content:n.z.optional(n.z.record(n.z.string(),n.z.unknown()))}),Ft=n.z.object({type:n.z.literal("ref/resource"),uri:n.z.string()}).passthrough(),Gt=n.z.object({type:n.z.literal("ref/prompt"),name:n.z.string()}).passthrough(),Vt=c.extend({method:n.z.literal("completion/complete"),params:p.extend({ref:n.z.union([Gt,Ft]),argument:n.z.object({name:n.z.string(),value:n.z.string()}).passthrough(),context:n.z.optional(n.z.object({arguments:n.z.optional(n.z.record(n.z.string(),n.z.string()))}))})}),Wt=m.extend({completion:n.z.object({values:n.z.array(n.z.string()).max(100),total:n.z.optional(n.z.number().int()),hasMore:n.z.optional(n.z.boolean())}).passthrough()}),Bt=n.z.object({uri:n.z.string().startsWith("file://"),name:n.z.optional(n.z.string()),_meta:n.z.optional(n.z.object({}).passthrough())}).passthrough(),Yt=c.extend({method:n.z.literal("roots/list")}),At=m.extend({roots:n.z.array(Bt)}),Dt=g.extend({method:n.z.literal("notifications/roots/list_changed")});n.z.union([O,E,Vt,Pt,lt,st,J,Q,Z,ot,nt,Tt,ft]),n.z.union([P,$,L,Dt]),n.z.union([k,Et,$t,At]),n.z.union([O,St,Ut,Yt]),n.z.union([P,$,qt,rt,et,Ct,xt]),n.z.union([k,H,Wt,bt,zt,K,X,tt,vt,_t]);class Jt extends Error{constructor(t,e,o){super(`MCP error ${t}: ${e}`),this.code=t,this.data=o,this.name="McpError"}}}}]);