"use strict";(self.webpackChunk_jupyterlite_ai=self.webpackChunk_jupyterlite_ai||[]).push([[668],{1408:(e,t,r)=>{r.d(t,{Z:()=>a});class n extends Error{constructor(e,t){super(e),this.name="ParseError",this.type=t.type,this.field=t.field,this.value=t.value,this.line=t.line}}function s(e){}class a extends TransformStream{constructor({onError:e,onRetry:t,onComment:r}={}){let a;super({start(i){a=function(e){if("function"==typeof e)throw new TypeError("`callbacks` must be an object, got a function instead. Did you mean `{onEvent: fn}`?");const{onEvent:t=s,onError:r=s,onRetry:a=s,onComment:i}=e;let o,c="",h=!0,p="",l="";function f(e){if(""===e)return p.length>0&&t({id:o,event:l||void 0,data:p.endsWith("\n")?p.slice(0,-1):p}),o=void 0,p="",void(l="");if(e.startsWith(":"))return void(i&&i(e.slice(e.startsWith(": ")?2:1)));const r=e.indexOf(":");if(-1!==r){const t=e.slice(0,r),n=" "===e[r+1]?2:1;return void u(t,e.slice(r+n),e)}u(e,"",e)}function u(e,t,s){switch(e){case"event":l=t;break;case"data":p=`${p}${t}\n`;break;case"id":o=t.includes("\0")?void 0:t;break;case"retry":/^\d+$/.test(t)?a(parseInt(t,10)):r(new n(`Invalid \`retry\` value: "${t}"`,{type:"invalid-retry",value:t,line:s}));break;default:r(new n(`Unknown field "${e.length>20?`${e.slice(0,20)}â€¦`:e}"`,{type:"unknown-field",field:e,value:t,line:s}))}}return{feed:function(e){const t=h?e.replace(/^\xEF\xBB\xBF/,""):e,[r,n]=function(e){const t=[];let r="",n=0;for(;n<e.length;){const s=e.indexOf("\r",n),a=e.indexOf("\n",n);let i=-1;if(-1!==s&&-1!==a?i=Math.min(s,a):-1!==s?i=s===e.length-1?-1:s:-1!==a&&(i=a),-1===i){r=e.slice(n);break}{const r=e.slice(n,i);t.push(r),n=i+1,"\r"===e[n-1]&&"\n"===e[n]&&n++}}return[t,r]}(`${c}${t}`);for(const e of r)f(e);c=n,h=!1},reset:function(e={}){c&&e.consume&&f(c),h=!0,o=void 0,p="",l="",c=""}}}({onEvent:e=>{i.enqueue(e)},onError(t){"terminate"===e?i.error(t):"function"==typeof e&&e(t)},onRetry:t,onComment:r})},transform(e){a.feed(e)}})}}},6019:(e,t,r)=>{r.d(t,{b:()=>i});var n=r(7418),s=r(9413);class a{constructor(e){this.counter=0,this.metadataRegistry=e?.metadata??n.fd,this.target=e?.target??"draft-2020-12",this.unrepresentable=e?.unrepresentable??"throw",this.override=e?.override??(()=>{}),this.io=e?.io??"output",this.seen=new Map}process(e,t={path:[],schemaPath:[]}){var r;const n=e._zod.def,a={guid:"uuid",url:"uri",datetime:"date-time",json_string:"json-string",regex:""},i=this.seen.get(e);if(i)return i.count++,t.schemaPath.includes(e)&&(i.cycle=t.path),i.schema;const c={schema:{},count:1,cycle:void 0,path:t.path};this.seen.set(e,c);const h=e._zod.toJSONSchema?.();if(h)c.schema=h;else{const r={...t,schemaPath:[...t.schemaPath,e],path:t.path},i=e._zod.parent;if(i)c.ref=i,this.process(i,r),this.seen.get(i).isParent=!0;else{const t=c.schema;switch(n.type){case"string":{const r=t;r.type="string";const{minimum:n,maximum:s,format:i,patterns:o,contentEncoding:h}=e._zod.bag;if("number"==typeof n&&(r.minLength=n),"number"==typeof s&&(r.maxLength=s),i&&(r.format=a[i]??i,""===r.format&&delete r.format),h&&(r.contentEncoding=h),o&&o.size>0){const e=[...o];1===e.length?r.pattern=e[0].source:e.length>1&&(c.schema.allOf=[...e.map(e=>({..."draft-7"===this.target?{type:"string"}:{},pattern:e.source}))])}break}case"number":{const r=t,{minimum:n,maximum:s,format:a,multipleOf:i,exclusiveMaximum:o,exclusiveMinimum:c}=e._zod.bag;"string"==typeof a&&a.includes("int")?r.type="integer":r.type="number","number"==typeof c&&(r.exclusiveMinimum=c),"number"==typeof n&&(r.minimum=n,"number"==typeof c&&(c>=n?delete r.minimum:delete r.exclusiveMinimum)),"number"==typeof o&&(r.exclusiveMaximum=o),"number"==typeof s&&(r.maximum=s,"number"==typeof o&&(o<=s?delete r.maximum:delete r.exclusiveMaximum)),"number"==typeof i&&(r.multipleOf=i);break}case"boolean":case"success":t.type="boolean";break;case"bigint":if("throw"===this.unrepresentable)throw new Error("BigInt cannot be represented in JSON Schema");break;case"symbol":if("throw"===this.unrepresentable)throw new Error("Symbols cannot be represented in JSON Schema");break;case"null":t.type="null";break;case"any":case"unknown":break;case"undefined":if("throw"===this.unrepresentable)throw new Error("Undefined cannot be represented in JSON Schema");break;case"void":if("throw"===this.unrepresentable)throw new Error("Void cannot be represented in JSON Schema");break;case"never":t.not={};break;case"date":if("throw"===this.unrepresentable)throw new Error("Date cannot be represented in JSON Schema");break;case"array":{const s=t,{minimum:a,maximum:i}=e._zod.bag;"number"==typeof a&&(s.minItems=a),"number"==typeof i&&(s.maxItems=i),s.type="array",s.items=this.process(n.element,{...r,path:[...r.path,"items"]});break}case"object":{const e=t;e.type="object",e.properties={};const s=n.shape;for(const t in s)e.properties[t]=this.process(s[t],{...r,path:[...r.path,"properties",t]});const a=new Set(Object.keys(s)),i=new Set([...a].filter(e=>{const t=n.shape[e]._zod;return"input"===this.io?void 0===t.optin:void 0===t.optout}));i.size>0&&(e.required=Array.from(i)),"never"===n.catchall?._zod.def.type?e.additionalProperties=!1:n.catchall?n.catchall&&(e.additionalProperties=this.process(n.catchall,{...r,path:[...r.path,"additionalProperties"]})):"output"===this.io&&(e.additionalProperties=!1);break}case"union":t.anyOf=n.options.map((e,t)=>this.process(e,{...r,path:[...r.path,"anyOf",t]}));break;case"intersection":{const e=t,s=this.process(n.left,{...r,path:[...r.path,"allOf",0]}),a=this.process(n.right,{...r,path:[...r.path,"allOf",1]}),i=e=>"allOf"in e&&1===Object.keys(e).length,o=[...i(s)?s.allOf:[s],...i(a)?a.allOf:[a]];e.allOf=o;break}case"tuple":{const s=t;s.type="array";const a=n.items.map((e,t)=>this.process(e,{...r,path:[...r.path,"prefixItems",t]}));if("draft-2020-12"===this.target?s.prefixItems=a:s.items=a,n.rest){const e=this.process(n.rest,{...r,path:[...r.path,"items"]});"draft-2020-12"===this.target?s.items=e:s.additionalItems=e}n.rest&&(s.items=this.process(n.rest,{...r,path:[...r.path,"items"]}));const{minimum:i,maximum:o}=e._zod.bag;"number"==typeof i&&(s.minItems=i),"number"==typeof o&&(s.maxItems=o);break}case"record":{const e=t;e.type="object",e.propertyNames=this.process(n.keyType,{...r,path:[...r.path,"propertyNames"]}),e.additionalProperties=this.process(n.valueType,{...r,path:[...r.path,"additionalProperties"]});break}case"map":if("throw"===this.unrepresentable)throw new Error("Map cannot be represented in JSON Schema");break;case"set":if("throw"===this.unrepresentable)throw new Error("Set cannot be represented in JSON Schema");break;case"enum":{const e=t,r=(0,s.w5)(n.entries);r.every(e=>"number"==typeof e)&&(e.type="number"),r.every(e=>"string"==typeof e)&&(e.type="string"),e.enum=r;break}case"literal":{const e=t,r=[];for(const e of n.values)if(void 0===e){if("throw"===this.unrepresentable)throw new Error("Literal `undefined` cannot be represented in JSON Schema")}else if("bigint"==typeof e){if("throw"===this.unrepresentable)throw new Error("BigInt literals cannot be represented in JSON Schema");r.push(Number(e))}else r.push(e);if(0===r.length);else if(1===r.length){const t=r[0];e.type=null===t?"null":typeof t,e.const=t}else r.every(e=>"number"==typeof e)&&(e.type="number"),r.every(e=>"string"==typeof e)&&(e.type="string"),r.every(e=>"boolean"==typeof e)&&(e.type="string"),r.every(e=>null===e)&&(e.type="null"),e.enum=r;break}case"file":{const r=t,n={type:"string",format:"binary",contentEncoding:"binary"},{minimum:s,maximum:a,mime:i}=e._zod.bag;void 0!==s&&(n.minLength=s),void 0!==a&&(n.maxLength=a),i?1===i.length?(n.contentMediaType=i[0],Object.assign(r,n)):r.anyOf=i.map(e=>({...n,contentMediaType:e})):Object.assign(r,n);break}case"transform":if("throw"===this.unrepresentable)throw new Error("Transforms cannot be represented in JSON Schema");break;case"nullable":{const e=this.process(n.innerType,r);t.anyOf=[e,{type:"null"}];break}case"nonoptional":case"promise":case"optional":this.process(n.innerType,r),c.ref=n.innerType;break;case"default":this.process(n.innerType,r),c.ref=n.innerType,t.default=JSON.parse(JSON.stringify(n.defaultValue));break;case"prefault":this.process(n.innerType,r),c.ref=n.innerType,"input"===this.io&&(t._prefault=JSON.parse(JSON.stringify(n.defaultValue)));break;case"catch":{let e;this.process(n.innerType,r),c.ref=n.innerType;try{e=n.catchValue(void 0)}catch{throw new Error("Dynamic catch values are not supported in JSON Schema")}t.default=e;break}case"nan":if("throw"===this.unrepresentable)throw new Error("NaN cannot be represented in JSON Schema");break;case"template_literal":{const r=t,n=e._zod.pattern;if(!n)throw new Error("Pattern not found in template literal");r.type="string",r.pattern=n.source;break}case"pipe":{const e="input"===this.io?"transform"===n.in._zod.def.type?n.out:n.in:n.out;this.process(e,r),c.ref=e;break}case"readonly":this.process(n.innerType,r),c.ref=n.innerType,t.readOnly=!0;break;case"lazy":{const t=e._zod.innerType;this.process(t,r),c.ref=t;break}case"custom":if("throw"===this.unrepresentable)throw new Error("Custom types cannot be represented in JSON Schema")}}}const p=this.metadataRegistry.get(e);return p&&Object.assign(c.schema,p),"input"===this.io&&o(e)&&(delete c.schema.examples,delete c.schema.default),"input"===this.io&&c.schema._prefault&&((r=c.schema).default??(r.default=c.schema._prefault)),delete c.schema._prefault,this.seen.get(e).schema}emit(e,t){const r={cycles:t?.cycles??"ref",reused:t?.reused??"inline",external:t?.external??void 0},n=this.seen.get(e);if(!n)throw new Error("Unprocessed schema. This is a bug in Zod.");const s=e=>{const t="draft-2020-12"===this.target?"$defs":"definitions";if(r.external){const n=r.external.registry.get(e[0])?.id,s=r.external.uri??(e=>e);if(n)return{ref:s(n)};const a=e[1].defId??e[1].schema.id??"schema"+this.counter++;return e[1].defId=a,{defId:a,ref:`${s("__shared")}#/${t}/${a}`}}if(e[1]===n)return{ref:"#"};const s=`#/${t}/`,a=e[1].schema.id??"__schema"+this.counter++;return{defId:a,ref:s+a}},a=e=>{if(e[1].schema.$ref)return;const t=e[1],{ref:r,defId:n}=s(e);t.def={...t.schema},n&&(t.defId=n);const a=t.schema;for(const e in a)delete a[e];a.$ref=r};if("throw"===r.cycles)for(const e of this.seen.entries()){const t=e[1];if(t.cycle)throw new Error(`Cycle detected: #/${t.cycle?.join("/")}/<root>\n\nSet the \`cycles\` parameter to \`"ref"\` to resolve cyclical schemas with defs.`)}for(const t of this.seen.entries()){const n=t[1];if(e===t[0]){a(t);continue}if(r.external){const n=r.external.registry.get(t[0])?.id;if(e!==t[0]&&n){a(t);continue}}const s=this.metadataRegistry.get(t[0])?.id;(s||n.cycle||n.count>1&&"ref"===r.reused)&&a(t)}const i=(e,t)=>{const r=this.seen.get(e),n=r.def??r.schema,s={...n};if(null===r.ref)return;const a=r.ref;if(r.ref=null,a){i(a,t);const e=this.seen.get(a).schema;e.$ref&&"draft-7"===t.target?(n.allOf=n.allOf??[],n.allOf.push(e)):(Object.assign(n,e),Object.assign(n,s))}r.isParent||this.override({zodSchema:e,jsonSchema:n,path:r.path??[]})};for(const e of[...this.seen.entries()].reverse())i(e[0],{target:this.target});const o={};if("draft-2020-12"===this.target?o.$schema="https://json-schema.org/draft/2020-12/schema":"draft-7"===this.target?o.$schema="http://json-schema.org/draft-07/schema#":console.warn(`Invalid target: ${this.target}`),r.external?.uri){const t=r.external.registry.get(e)?.id;if(!t)throw new Error("Schema is missing an `id` property");o.$id=r.external.uri(t)}Object.assign(o,n.def);const c=r.external?.defs??{};for(const e of this.seen.entries()){const t=e[1];t.def&&t.defId&&(c[t.defId]=t.def)}r.external||Object.keys(c).length>0&&("draft-2020-12"===this.target?o.$defs=c:o.definitions=c);try{return JSON.parse(JSON.stringify(o))}catch(e){throw new Error("Error converting schema to JSON.")}}}function i(e,t){if(e instanceof n.rs){const r=new a(t),n={};for(const t of e._idmap.entries()){const[e,n]=t;r.process(n)}const s={},i={registry:e,uri:t?.uri,defs:n};for(const n of e._idmap.entries()){const[e,a]=n;s[e]=r.emit(a,{...t,external:i})}if(Object.keys(n).length>0){const e="draft-2020-12"===r.target?"$defs":"definitions";s.__shared={[e]:n}}return{schemas:s}}const r=new a(t);return r.process(e),r.emit(e,t)}function o(e,t){const r=t??{seen:new Set};if(r.seen.has(e))return!1;r.seen.add(e);const n=e._zod.def;switch(n.type){case"string":case"number":case"bigint":case"boolean":case"date":case"symbol":case"undefined":case"null":case"any":case"unknown":case"never":case"void":case"literal":case"enum":case"nan":case"file":case"template_literal":case"custom":case"success":case"catch":return!1;case"array":return o(n.element,r);case"object":for(const e in n.shape)if(o(n.shape[e],r))return!0;return!1;case"union":for(const e of n.options)if(o(e,r))return!0;return!1;case"intersection":return o(n.left,r)||o(n.right,r);case"tuple":for(const e of n.items)if(o(e,r))return!0;return!(!n.rest||!o(n.rest,r));case"record":case"map":return o(n.keyType,r)||o(n.valueType,r);case"set":return o(n.valueType,r);case"promise":case"optional":case"nonoptional":case"nullable":case"readonly":case"default":case"prefault":return o(n.innerType,r);case"lazy":return o(n.getter(),r);case"transform":return!0;case"pipe":return o(n.in,r)||o(n.out,r)}throw new Error(`Unknown schema type: ${n.type}`)}}}]);