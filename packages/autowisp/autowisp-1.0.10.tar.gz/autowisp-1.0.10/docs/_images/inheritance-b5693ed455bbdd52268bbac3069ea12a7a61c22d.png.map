<map id="inheritanceff5b114d87" name="inheritanceff5b114d87">
<area shape="rect" id="node1" href="autowisp.database.data_model.base.html#autowisp.database.data_model.base.DataModelBase" target="_top" title="The base class for all table classes." alt="" coords="3205,379,3536,405"/>
<area shape="rect" id="node3" href="#autowisp.database.data_model.provenance.camera.Camera" target="_top" title="The table describing the camera specified" alt="" coords="3186,453,3555,480"/>
<area shape="rect" id="node2" title="Base class used for declarative class definitions." alt="" coords="3238,304,3502,331"/>
<area shape="rect" id="node4" title="represents an event target, that is, something we can listen on" alt="" coords="4806,528,5049,555"/>
<area shape="rect" id="node12" title="Base class for elements that are the targets of :class:`.DDLEvents`" alt="" coords="4797,603,5058,629"/>
<area shape="rect" id="node5" title="define a class as inspectable." alt="" coords="3260,229,3480,256"/>
<area shape="rect" id="node6" href="https://docs.python.org/3/library/typing.html#typing.Generic" target="_top" title="Abstract base class for generic types." alt="" coords="3264,155,3370,181"/>
<area shape="rect" id="node51" title="element&#45;typed form of ColumnsClauseRole" alt="" coords="2412,229,2710,256"/>
<area shape="rect" id="node60" title="The ultimate base class for all SQL datatypes." alt="" coords="3902,229,4134,256"/>
<area shape="rect" id="node16" title="Base class for elements of a programmatically constructed SQL" alt="" coords="2910,304,3167,331"/>
<area shape="rect" id="node10" title="Establish the ability for a class to have dialect&#45;specific arguments" alt="" coords="4901,677,5133,704"/>
<area shape="rect" id="node53" title="Represents a column in a database table." alt="" coords="4656,752,4863,779"/>
<area shape="rect" id="node55" title="Defines a dependency between two columns." alt="" coords="4895,752,5123,779"/>
<area shape="rect" id="node11" title="mark a ClauseElement as &#39;immutable&#39; when expressions are cloned." alt="" coords="1511,603,1715,629"/>
<area shape="rect" id="node19" title="Represents a column expression from any textual string." alt="" coords="1359,677,1614,704"/>
<area shape="rect" id="node54" title="Base class for items that define a database schema." alt="" coords="4642,677,4877,704"/>
<area shape="rect" id="node13" title="Mixin for objects which can produce a cache key." alt="" coords="3555,155,3818,181"/>
<area shape="rect" id="node15" title="A mixin class that maintains the names of memoized elements in a" alt="" coords="3842,155,4107,181"/>
<area shape="rect" id="node36" title="represents a :class:`.ClauseElement` that compiles to a DQL or DML" alt="" coords="2837,379,3149,405"/>
<area shape="rect" id="node18" title="base class for SQL elements that can be compiled to produce a" alt="" coords="3540,80,3808,107"/>
<area shape="rect" id="node24" title="Represent a column&#45;oriented SQL expression suitable for usage in the" alt="" coords="1229,453,1490,480"/>
<area shape="rect" id="node38" title="ColumnElement where ``.key`` is non&#45;None." alt="" coords="1210,528,1509,555"/>
<area shape="rect" id="node35" title="A type that may be used to indicate any SQL column element or object" alt="" coords="1948,379,2252,405"/>
<area shape="rect" id="node37" title="Base class for visitable objects." alt="" coords="3884,5,4091,32"/>
<area shape="rect" id="node41" title="A mixin class that marks a class as &#39;typing only&#39;, meaning it has" alt="" coords="1846,229,2092,256"/>
<area shape="rect" id="node42" title="Defines boolean, comparison, and other operators for" alt="" coords="2116,229,2387,256"/>
<area shape="rect" id="node43" title="Base of comparison and logical operators." alt="" coords="2138,155,2365,181"/>
<area shape="rect" id="node46" title="Elements suitable for forming comma separated lists of expressions." alt="" coords="622,229,858,256"/>
<area shape="rect" id="node48" title="Define a &quot;role&quot; within a SQL statement structure." alt="" coords="1203,155,1399,181"/>
<area shape="rect" id="node56" title="A mixin that marks a type as supporting &#39;concatenation&#39;," alt="" coords="4159,229,4403,256"/>
<area shape="rect" id="node61" title="The base for all string and character types." alt="" coords="4002,304,4200,331"/>
<area shape="rect" id="node57" title="classes which subclass this can act as &quot;mixin&quot; classes for" alt="" coords="4313,155,4577,181"/>
<area shape="rect" id="node58" title="Mixin expression adaptations based on lookup tables." alt="" coords="4427,229,4722,256"/>
<area shape="rect" id="node59" title="A type for ``int`` integers." alt="" coords="4307,304,4511,331"/>
<area shape="rect" id="node62" title="base for classes that have a &quot;traverse internals&quot; element," alt="" coords="2804,5,3086,32"/>
</map>
