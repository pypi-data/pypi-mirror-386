"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class V1AerodromeSlipstreamPoolPriceChain(str, Enum):
    BASE = "base"


class V1AerodromeSlipstreamPoolPriceRequestTypedDict(TypedDict):
    chain: V1AerodromeSlipstreamPoolPriceChain
    token_in: str
    r"""The symbol or address of a token in the pool."""
    token_out: str
    r"""The symbol or address of a token in the pool."""
    tick_spacing: NotRequired[int]
    r"""The tick spacing of the pool"""


class V1AerodromeSlipstreamPoolPriceRequest(BaseModel):
    chain: Annotated[
        V1AerodromeSlipstreamPoolPriceChain,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ]

    token_in: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The symbol or address of a token in the pool."""

    token_out: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The symbol or address of a token in the pool."""

    tick_spacing: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The tick spacing of the pool"""
