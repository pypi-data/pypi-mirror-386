"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from typing_extensions import TypedDict


class AerodromeSlipstreamPoolPriceResponseTypedDict(TypedDict):
    token_in: str
    r"""The first token in the pool."""
    token_out: str
    r"""The second token in the pool."""
    price: str
    r"""The price of the pool. This is expressed as an instantaneous amount of how
    many token0 you need to buy 1 token1. In any swap this will not change during the trade; use
    the quote endpoint to get a better idea of how much you will pay!
    """
    tick: int
    r"""The current tick in the pool. This is a number that represents the price of
    the pool according to the aerodrome_slipstream v3 concentrated liquidity concept.
    """


class AerodromeSlipstreamPoolPriceResponse(BaseModel):
    token_in: str
    r"""The first token in the pool."""

    token_out: str
    r"""The second token in the pool."""

    price: str
    r"""The price of the pool. This is expressed as an instantaneous amount of how
    many token0 you need to buy 1 token1. In any swap this will not change during the trade; use
    the quote endpoint to get a better idea of how much you will pay!
    """

    tick: int
    r"""The current tick in the pool. This is a number that represents the price of
    the pool according to the aerodrome_slipstream v3 concentrated liquidity concept.
    """
