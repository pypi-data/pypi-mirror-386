"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from enum import Enum
from typing_extensions import TypedDict


class MulticallAuthorizationRequestChain(str, Enum):
    ARBITRUM = "arbitrum"
    BASE = "base"
    ETHEREUM = "ethereum"


class MulticallAuthorizationRequestTypedDict(TypedDict):
    r"""Request model for getting a multicall authorization.

    This model is used to authorize a sender address to perform multicall operations,
    allowing it to call multiple functions on multiple contracts in a single
    transaction.
    """

    chain: MulticallAuthorizationRequestChain
    sender: str
    r"""The Ethereum address to use for authorization"""


class MulticallAuthorizationRequest(BaseModel):
    r"""Request model for getting a multicall authorization.

    This model is used to authorize a sender address to perform multicall operations,
    allowing it to call multiple functions on multiple contracts in a single
    transaction.
    """

    chain: MulticallAuthorizationRequestChain

    sender: str
    r"""The Ethereum address to use for authorization"""
