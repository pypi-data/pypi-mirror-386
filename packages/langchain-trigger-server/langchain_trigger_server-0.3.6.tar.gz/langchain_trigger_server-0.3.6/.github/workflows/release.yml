name: Build and publish to PyPI

on:
  push:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  UV_FROZEN: "true"
  UV_NO_SYNC: "true"

jobs:
  # First, run lint and test to ensure quality
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python + uv
        uses: "./.github/actions/uv_setup"
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run lint
        run: uv run ruff check .

      - name: Run tests
        run: uv run pytest tests/

  # Check version and publish package
  build-and-publish:
    needs: lint-and-test
    name: Build and publish Python distribution to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/langchain-trigger-server
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: read   # Required for private repository access

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python + uv
      uses: "./.github/actions/uv_setup"
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Get current version from pyproject.toml
      id: get-version
      run: |
        VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $VERSION"

    - name: Get latest PyPI version
      id: get-pypi-version
      run: |
        PYPI_VERSION=$(python -c "
        import json, urllib.request, urllib.error
        try:
            with urllib.request.urlopen('https://pypi.org/pypi/langchain-trigger-server/json') as response:
                data = json.loads(response.read())
                print(data['info']['version'])
        except urllib.error.HTTPError as e:
            if e.code == 404:
                print('0.0.0')  # Package doesn't exist yet
            else:
                raise
        ")
        echo "pypi_version=$PYPI_VERSION" >> $GITHUB_OUTPUT
        echo "PyPI version: $PYPI_VERSION"

    - name: Compare versions
      id: compare-versions
      run: |
        python -c "
        from distutils.version import LooseVersion
        current = LooseVersion('${{ steps.get-version.outputs.current_version }}')
        pypi = LooseVersion('${{ steps.get-pypi-version.outputs.pypi_version }}')
        should_publish = current > pypi
        print(f'Current: {current}, PyPI: {pypi}, Should publish: {should_publish}')
        " > version_comparison.txt
        cat version_comparison.txt

        SHOULD_PUBLISH=$(python -c "
        from distutils.version import LooseVersion
        current = LooseVersion('${{ steps.get-version.outputs.current_version }}')
        pypi = LooseVersion('${{ steps.get-pypi-version.outputs.pypi_version }}')
        print('true' if current > pypi else 'false')
        ")
        echo "should_publish=$SHOULD_PUBLISH" >> $GITHUB_OUTPUT

    - name: Build package
      if: steps.compare-versions.outputs.should_publish == 'true'
      run: uv build

    - name: Publish package distributions to PyPI
      if: steps.compare-versions.outputs.should_publish == 'true'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
        print-hash: true
        attestations: false

    - name: Create summary
      run: |
        if [ "${{ steps.compare-versions.outputs.should_publish }}" = "true" ]; then
          echo "✅ Published langchain-trigger-server v${{ steps.get-version.outputs.current_version }} to PyPI" >> $GITHUB_STEP_SUMMARY
        else
          echo "⏭️ Skipped langchain-trigger-server: v${{ steps.get-version.outputs.current_version }} not newer than PyPI v${{ steps.get-pypi-version.outputs.pypi_version }}" >> $GITHUB_STEP_SUMMARY
        fi