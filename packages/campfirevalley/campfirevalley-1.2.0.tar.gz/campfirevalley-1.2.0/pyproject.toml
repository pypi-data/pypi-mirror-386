[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "campfirevalley"
version = "1.2.0"
authors = [
    {name = "Mike Hibbert", email = "mike@hibbertitsolutions.co.uk"},
]
description = "A distributed AI agent orchestration platform with visual LiteGraph interface"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "agents", "orchestration", "distributed", "litegraph", "visualization"]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "asyncio-mqtt>=0.16.0",
    "websockets>=12.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/CampfireValley"
Documentation = "https://yourusername.github.io/CampfireValley"
Repository = "https://github.com/yourusername/CampfireValley.git"
"Bug Tracker" = "https://github.com/yourusername/CampfireValley/issues"
Changelog = "https://github.com/yourusername/CampfireValley/blob/main/CHANGELOG.md"

[project.scripts]
campfirevalley = "campfirevalley.cli:main"
campfire-valley = "campfirevalley.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["campfirevalley*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
campfirevalley = [
    "web/static/**/*",
    "web/templates/**/*",
    "config/**/*.yaml",
    "config/**/*.yml",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["campfirevalley"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["campfirevalley"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true