[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "introligo"
dynamic = ["version"]
authors = [
    {name = "Jakub Brzezowski", email = "jakubbrzez@wp.pl"}
]
description = "Professional Sphinx documentation generator with intelligent auto-discovery. Automatically finds and unifies READMEs, changelogs, markdown guides, and API docs into beautifully organized documentation sites."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
    "Topic :: Text Processing :: Markup :: reStructuredText",
]
keywords = ["documentation", "sphinx", "rst", "yaml", "generator", "doxygen", "breathe"]

dependencies = [
    "PyYAML>=6.0",
    "Jinja2>=3.0",
    "sphinx>=4.0",
]

[project.optional-dependencies]
docs = [
    "furo>=2023.3.27",
]
cpp = [
    "breathe>=4.0",
]
dev = [
    "pytest>=7.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "watchdog>=3.0",
]

[project.urls]
Homepage = "https://github.com/JakubBrzezo/introligo"
Documentation = "https://jakubbrzezo.github.io/introligo"
Repository = "https://github.com/JakubBrzezo/introligo"
"Bug Tracker" = "https://github.com/JakubBrzezo/introligo/issues"
Changelog = "https://github.com/JakubBrzezo/introligo/blob/master/CHANGELOG.md"

[project.scripts]
introligo = "introligo:main"

[tool.setuptools]
packages = ["introligo"]

[tool.setuptools.package-data]
introligo = ["templates/*.jinja2"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.ruff]
line-length = 100
target-version = "py38"
extend-exclude = ["__pycache__", "*.pyc", ".git", "docs/_build"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["introligo"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
exclude = ["examples/", "docs/_build/"]

[[tool.mypy.overrides]]
module = "yaml"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.coverage.run]
branch = true
omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "no-local-version"
tag_regex = "^v(?P<version>\\d+\\.\\d+\\.\\d+)$"
write_to = "introligo/_version.py"
write_to_template = """
# This file is auto-generated by setuptools_scm
__version__ = "{version}"
"""
