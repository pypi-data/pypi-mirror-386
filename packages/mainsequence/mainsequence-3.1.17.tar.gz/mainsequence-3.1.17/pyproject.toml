[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mainsequence"
version = "3.1.17"
description = "Main Sequence SDK"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Main Sequence GmbH", email = "dev@main-sequence.io" }]
license = { file = "LICENSE" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]


# PEP 621 dependencies (published requirements)

dependencies = [
  "cloudpickle",
  "cryptography",
  "fire",
  "google-auth",
  "joblib",
  "matplotlib",
  "nbconvert",
  "numexpr",
  "opentelemetry-api",
  "opentelemetry-exporter-otlp",
  "opentelemetry-sdk",
  "pandas",
  "pandas-market-calendars",
  "psutil",
  "pyarrow",
  "pydantic",
  "python-binance",
  "python-dotenv",
  "python-logstash",
  "pyyaml",
  "s3fs",
  "scikit-learn",
  "scipy",
  "structlog",
  "tqdm",
  "colorama",
  "kaleido",
  "newspaper3k",
  "lxml-html-clean",
  "docstring-parser",
  "concurrent-log-handler",
  "duckdb",
  "plotly",
  "typer",
  "QuantLib", # ← renamed from `quantlib`

]

[project.urls]
Homepage = "https://github.com/mainsequence-sdk/mainsequence-sdk"
Issues = "https://github.com/mainsequence-sdk/mainsequence-sdk/issues"
[project.scripts]
mainsequence = "mainsequence.cli.cli:app"

# PEP 621 dependencies (published requirements)
[dependency-groups]
dev = [
  "mkdocs", "mkdocs-material", "mkdocs-gen-files", "mkdocs-literate-nav", "mkdocs-autorefs",
  "mkdocstrings[python]", "mkdocs-mermaid2-plugin", "pymdown-extensions", "pipdeptree",
  "pytest", "pytest-freezegun", "twine", "streamlit","IPython",
      "ruff>=0.14.0",
  "black>=25.9.0","pre-commit"
]

# Package discovery equivalent to find_packages(include=['mainsequence','mainsequence.*'])
[tool.setuptools.packages.find]
include = ["mainsequence", "mainsequence.*"]

# Include your non-.py assets in wheels/sdists
[tool.setuptools.package-data]
"mainsequence" = ["**/*.html", "**/*.css", "**/*.png", "**/*.toml"]
"mainsequence.dashboards.streamlit" = ["assets/*.png", "assets/*.txt"]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true


# --------------------
# Formatting (Black)
# --------------------
[tool.black]
line-length = 100
target-version = ["py310"]

# --------------------
# Linting & import sort (Ruff)
# --------------------
[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = ["build", "dist", ".venv", ".tox", ".mypy_cache", ".ruff_cache"]
fix = true                    # <-- move fix here

[tool.ruff.lint]
# E/F: pycodestyle/pyflakes, I: import order, B: bugbear, UP: pyupgrade
select = ["E", "F", "I", "B", "UP"]
ignore = ["E203", "E501"]     # let Black handle these

[tool.ruff.lint.isort]
known-first-party = ["mainsequence"]