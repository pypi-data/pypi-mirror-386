[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "synth-data-eval"
version = "0.1.0"
description = "Comprehensive evaluation framework for tabular synthetic data generators"
readme = "README.md"
requires-python = ">=3.8,<3.12"
license = {file = "LICENSE"}
authors = [
    {name = "Ahmed Fouad LAGHA", email = "ms5jzx@inf.elte.hu"},
    {name = "Izsa Regina Mária", email = "bnbq2z@inf.elte.hu"},
    {name = "Zakarya Farou", email = "zakaryafarou@inf.elte.hu"}
]
maintainers = [
    {name = "Ahmed Fouad LAGHA", email = "ms5jzx@inf.elte.hu"},
    {name = "Izsa Regina Mária", email = "bnbq2z@inf.elte.hu"},
    {name = "Zakarya Farou", email = "zakaryafarou@inf.elte.hu"}
]
keywords = [
    "synthetic-data",
    "machine-learning",
    "evaluation",
    "tabular-data",
    "ctgan",
    "privacy",
    "data-generation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.3.0,<3.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "scipy>=1.7.0,<2.0.0",
    "sdv>=1.2.0,<2.0.0",
    "ctgan>=0.7.0,<1.0.0",
    "sdmetrics>=0.12.0,<1.0.0",
    "table-evaluator>=1.4.0",
    "pyyaml>=6.0",
    "tqdm>=4.62.0",
    "joblib>=1.1.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.12.0",
    "plotly>=5.10.0",
    "loguru>=0.6.0",
    "xlrd>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-xdist>=2.5.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.10.0",
    "mypy>=0.990",
    "pre-commit>=2.20.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "ipywidgets>=8.0.0",
    "notebook>=6.5.0",
]
synthcity = [
    "synthcity>=0.2.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinxcontrib-napoleon>=0.7",
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "isort>=5.10.0",
    "jupyter>=1.0.0",
    "synthcity>=0.2.0",
    "sphinx>=5.0.0",
]

[project.scripts]
synth-eval = "scripts.run_benchmark:main"
synth-viz = "scripts.visualize_results:main"

[project.urls]
Homepage = "https://github.com/ahmed-fouad-lagha/synth-data-eval"
Documentation = "https://github.com/ahmed-fouad-lagha/synth-data-eval#readme"
Repository = "https://github.com/ahmed-fouad-lagha/synth-data-eval"
Issues = "https://github.com/ahmed-fouad-lagha/synth-data-eval/issues"
Changelog = "https://github.com/ahmed-fouad-lagha/synth-data-eval/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["generators*", "evaluation*", "scripts*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --strict-markers
    --strict-config
    --cov=generators
    --cov=evaluation
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
"""
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["generators", "evaluation", "scripts"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
