[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "/kitech_repository",
]

[tool.hatch.build.targets.wheel]
packages = ["kitech_repository"]
include = [
    "/kitech_repository/**/*.py",
]

[project]
name = "kitech-repository"
version = "0.1.12"
description = "KITECH Manufacturing Data Repository CLI and Library"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10,<3.14"
authors = [
    { name = "KITECH", email = "kitech@kitech.re.kr" }
]
keywords = ["kitech", "manufacturing", "data", "repository", "cli", "file-manager", "tui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Manufacturing",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Archiving",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Environment :: Console",
]

dependencies = [
    "click>=8.1.0",
    "httpx>=0.25.0",
    "rich>=13.7.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.66.0",
    "aiofiles>=23.2.1",
    "typer>=0.9.0",
    "textual>=0.47.0",
    "keyring>=24.0.0",
]

[project.urls]
Homepage = "https://github.com/kitech/kitech-repository"
Documentation = "https://github.com/kitech/kitech-repository#readme"
Repository = "https://github.com/kitech/kitech-repository.git"
Issues = "https://github.com/kitech/kitech-repository/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-httpx>=0.30.0",
    "textual-dev>=1.0.0",
]
# For Linux systems without system keyring (headless, Docker, WSL)
alt-keyring = [
    "keyrings.alt>=5.0.0",
]

[project.scripts]
kitech = "kitech_repository.cli.main:app"

[tool.ruff]
target-version = "py310"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.isort]
known-first-party = ["kitech_repository"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "--cov=kitech_repository --cov-report=term-missing"

[tool.coverage.run]
source = ["kitech_repository"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

