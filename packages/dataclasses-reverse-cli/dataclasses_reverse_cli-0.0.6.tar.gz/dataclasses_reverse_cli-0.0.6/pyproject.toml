[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "dataclasses-reverse-cli"
description = "Dataclass to be CLI and logger compatible"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "AGPL-3.0-or-later"}
keywords = ["dataclass", "cli", "logging"]
dynamic = ["version"]
dependencies = [
    "deprecated>=1.2.18",
]

[project.urls]
Repository = "https://codeberg.org/MalcolmMielle/dataclasses-reverse-cli"
Issues = "https://codeberg.org/MalcolmMielle/dataclasses-reverse-cli/issues"


[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
version_scheme = "no-guess-dev"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.uv]
dev-dependencies = ["ruff>=0.8.6"]


[tool.hatch.build.targets.wheel]
packages = ["dataclasses_reverse_cli"]


# RUFF
[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = ["F722", "F821"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

