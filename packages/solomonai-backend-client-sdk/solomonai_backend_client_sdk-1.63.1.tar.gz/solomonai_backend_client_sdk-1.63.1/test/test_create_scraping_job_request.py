# coding: utf-8

"""
    Lead Scraping Service API

    Vector Lead Scraping Service API - Manages Lead Scraping Jobs

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@vector.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from backend_client.models.create_scraping_job_request import CreateScrapingJobRequest

class TestCreateScrapingJobRequest(unittest.TestCase):
    """CreateScrapingJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateScrapingJobRequest:
        """Test CreateScrapingJobRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateScrapingJobRequest`
        """
        model = CreateScrapingJobRequest()
        if include_optional:
            return CreateScrapingJobRequest(
                user_id = '',
                org_id = '',
                tenant_id = '',
                name = '',
                keywords = [
                    ''
                    ],
                lang = '',
                zoom = 56,
                lat = '',
                lon = '',
                fast_mode = True,
                radius = 56,
                depth = 56,
                email = True,
                max_time = 56,
                proxies = [
                    ''
                    ]
            )
        else:
            return CreateScrapingJobRequest(
                user_id = '',
                org_id = '',
                tenant_id = '',
        )
        """

    def testCreateScrapingJobRequest(self):
        """Test CreateScrapingJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
