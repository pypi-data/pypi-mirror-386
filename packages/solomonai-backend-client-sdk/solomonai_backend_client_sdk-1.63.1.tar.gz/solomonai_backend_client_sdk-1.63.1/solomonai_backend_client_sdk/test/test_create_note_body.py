# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.create_note_body import CreateNoteBody

class TestCreateNoteBody(unittest.TestCase):
    """CreateNoteBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateNoteBody:
        """Test CreateNoteBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateNoteBody`
        """
        model = CreateNoteBody()
        if include_optional:
            return CreateNoteBody(
                post_type = 'POST_TYPE_UNSPECIFIED',
                note = solomonai_backend_client_sdk.models.a_note_is_a_response_a_user_can_leave_on_another_user's_piece_of_content/_notes_can
only_be_seen_by_the_user_who_created_the_content_(private)_and_should_serve_as_some_form_of
intimate_feedback_protocol.A note is a response a user can leave on another user's piece of content. Notes can
only be seen by the user who created the content (private) and should serve as some form of
intimate feedback protocol(
                    id = '', 
                    backend_platform_user_id = '', 
                    profile_id = '', 
                    media = solomonai_backend_client_sdk.models.media.Media(
                        id = '', 
                        created_at = '', 
                        link = '', 
                        metadata = solomonai_backend_client_sdk.models.media_metadata.MediaMetadata(
                            id = '', 
                            resize = 'MEDIA_RESIZE_UNSPECIFIED', 
                            crop = 'MEDIA_CROP_UNSPECIFIED', 
                            image_width = '', 
                            image_height = '', 
                            type = 'MEDIA_TYPE_UNSPECIFIED', ), ), 
                    mentions = [
                        ''
                        ], 
                    hashtags = [
                        ''
                        ], 
                    created_at = '', 
                    content = '', 
                    author_account_type = 'ACCOUNT_TYPE_UNSPECIFIED', 
                    author_user_name = '', 
                    author_profile_image = '', ),
                org_id = '',
                tenant_id = ''
            )
        else:
            return CreateNoteBody(
                post_type = 'POST_TYPE_UNSPECIFIED',
                org_id = '',
                tenant_id = '',
        )
        """

    def testCreateNoteBody(self):
        """Test CreateNoteBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
