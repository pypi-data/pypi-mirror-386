# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.workspaceservicehttp_tus_headers import WorkspaceservicehttpTusHeaders

class TestWorkspaceservicehttpTusHeaders(unittest.TestCase):
    """WorkspaceservicehttpTusHeaders unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkspaceservicehttpTusHeaders:
        """Test WorkspaceservicehttpTusHeaders
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkspaceservicehttpTusHeaders`
        """
        model = WorkspaceservicehttpTusHeaders()
        if include_optional:
            return WorkspaceservicehttpTusHeaders(
                cache_control = '',
                content_type = '',
                location = '',
                tus_checksum_algorithm = '',
                tus_extension = '',
                tus_max_size = 56,
                tus_resumable = '',
                tus_version = '',
                upload_checksum = '',
                upload_concat = '',
                upload_defer_length = 56,
                upload_expires = '',
                upload_length = 56,
                upload_metadata = '',
                upload_offset = 56
            )
        else:
            return WorkspaceservicehttpTusHeaders(
                tus_resumable = '',
        )
        """

    def testWorkspaceservicehttpTusHeaders(self):
        """Test WorkspaceservicehttpTusHeaders"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
