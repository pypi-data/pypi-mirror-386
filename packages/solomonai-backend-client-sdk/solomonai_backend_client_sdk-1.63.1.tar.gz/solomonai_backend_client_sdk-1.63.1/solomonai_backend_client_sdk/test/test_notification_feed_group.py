# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.notification_feed_group import NotificationFeedGroup

class TestNotificationFeedGroup(unittest.TestCase):
    """NotificationFeedGroup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationFeedGroup:
        """Test NotificationFeedGroup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationFeedGroup`
        """
        model = NotificationFeedGroup()
        if include_optional:
            return NotificationFeedGroup(
                activity_count = '',
                actor_count = '',
                created_at = '',
                group = '',
                feed_group_id = '',
                is_read = True,
                is_seen = True,
                updated_at = '',
                verb = '',
                activities = [
                    solomonai_backend_client_sdk.models.notification_activity.NotificationActivity(
                        actor_name = '', 
                        foreign_id = '', 
                        activity_id = '', 
                        verb = '', 
                        time = '', 
                        target = '', 
                        origin = '', 
                        object = '', )
                    ]
            )
        else:
            return NotificationFeedGroup(
        )
        """

    def testNotificationFeedGroup(self):
        """Test NotificationFeedGroup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
