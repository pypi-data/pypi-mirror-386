# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.invesment_holding import InvesmentHolding

class TestInvesmentHolding(unittest.TestCase):
    """InvesmentHolding unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvesmentHolding:
        """Test InvesmentHolding
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvesmentHolding`
        """
        model = InvesmentHolding()
        if include_optional:
            return InvesmentHolding(
                id = '',
                name = 'nfdkjfjksdhjhfjsdhjgf',
                plaid_account_id = 'k67E4xKvMlhmleEa4pg9hlwGGNnnEeixPolGm',
                cost_basis = 15,
                institution_price = 13.73,
                institution_price_as_of = '2021-04-13T00:00:00.000Z',
                institution_price_datetime = '2022-06-07T23:01:00.000Z',
                institution_value = 4437.35905,
                iso_currency_code = 'USD',
                quantity = 25000,
                security_id = 'vLRMV3MvY1FYNP91on35CJD5QN5rw9Fpa9qOL',
                unofficial_currency_code = 'USD',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return InvesmentHolding(
        )
        """

    def testInvesmentHolding(self):
        """Test InvesmentHolding"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
