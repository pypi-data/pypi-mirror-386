# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.api.workspace_service_api import WorkspaceServiceApi


class TestWorkspaceServiceApi(unittest.TestCase):
    """WorkspaceServiceApi unit test stubs"""

    def setUp(self) -> None:
        self.api = WorkspaceServiceApi()

    def tearDown(self) -> None:
        pass

    def test_bulk_update_comments(self) -> None:
        """Test case for bulk_update_comments

        Bulk update comments
        """
        pass

    def test_create_account(self) -> None:
        """Test case for create_account

        Create a new account
        """
        pass

    def test_create_comment1(self) -> None:
        """Test case for create_comment1

        Create a comment
        """
        pass

    def test_create_comment_edit(self) -> None:
        """Test case for create_comment_edit

        Create a comment edit
        """
        pass

    def test_create_comment_thread(self) -> None:
        """Test case for create_comment_thread

        Create a comment thread
        """
        pass

    def test_create_document_snapshot(self) -> None:
        """Test case for create_document_snapshot

        Create a document snapshot
        """
        pass

    def test_create_folder(self) -> None:
        """Test case for create_folder

        Create a folder
        """
        pass

    def test_create_markdown_file(self) -> None:
        """Test case for create_markdown_file

        Create a markdown file
        """
        pass

    def test_create_workspace(self) -> None:
        """Test case for create_workspace

        Create a workspace
        """
        pass

    def test_create_workspace_compliance(self) -> None:
        """Test case for create_workspace_compliance

        Create workspace compliance settings
        """
        pass

    def test_delete_account(self) -> None:
        """Test case for delete_account

        Delete an account
        """
        pass

    def test_delete_comment1(self) -> None:
        """Test case for delete_comment1

        Delete a comment
        """
        pass

    def test_delete_comment_edit(self) -> None:
        """Test case for delete_comment_edit

        Delete a comment edit
        """
        pass

    def test_delete_comment_thread(self) -> None:
        """Test case for delete_comment_thread

        Delete a comment thread
        """
        pass

    def test_delete_document_snapshot(self) -> None:
        """Test case for delete_document_snapshot

        Delete a document snapshot
        """
        pass

    def test_delete_file(self) -> None:
        """Test case for delete_file

        Delete a file
        """
        pass

    def test_delete_folder(self) -> None:
        """Test case for delete_folder

        Delete a folder
        """
        pass

    def test_delete_workspace(self) -> None:
        """Test case for delete_workspace

        Delete a workspace
        """
        pass

    def test_delete_workspace_compliance(self) -> None:
        """Test case for delete_workspace_compliance

        Delete workspace compliance settings
        """
        pass

    def test_delete_workspace_share(self) -> None:
        """Test case for delete_workspace_share

        Delete a workspace share
        """
        pass

    def test_generate_file_embeddings(self) -> None:
        """Test case for generate_file_embeddings

        Generate file embeddings
        """
        pass

    def test_get_account(self) -> None:
        """Test case for get_account

        Get account by ID
        """
        pass

    def test_get_background_job_status(self) -> None:
        """Test case for get_background_job_status

        Get background job status
        """
        pass

    def test_get_comment(self) -> None:
        """Test case for get_comment

        Get a comment
        """
        pass

    def test_get_comment_edit(self) -> None:
        """Test case for get_comment_edit

        Get a comment edit
        """
        pass

    def test_get_comment_thread(self) -> None:
        """Test case for get_comment_thread

        Get a comment thread
        """
        pass

    def test_get_document_snapshot(self) -> None:
        """Test case for get_document_snapshot

        Get a document snapshot
        """
        pass

    def test_get_file_version(self) -> None:
        """Test case for get_file_version

        Get file version
        """
        pass

    def test_get_single_comment_thread(self) -> None:
        """Test case for get_single_comment_thread

        Get a single comment thread
        """
        pass

    def test_get_workspace_compliance(self) -> None:
        """Test case for get_workspace_compliance

        Get workspace compliance settings
        """
        pass

    def test_get_workspace_share(self) -> None:
        """Test case for get_workspace_share

        Get a workspace share
        """
        pass

    def test_list_accounts(self) -> None:
        """Test case for list_accounts

        List accounts
        """
        pass

    def test_list_comment_edits(self) -> None:
        """Test case for list_comment_edits

        List comment edits
        """
        pass

    def test_list_comments(self) -> None:
        """Test case for list_comments

        List comments
        """
        pass

    def test_list_document_snapshots(self) -> None:
        """Test case for list_document_snapshots

        List document snapshots
        """
        pass

    def test_list_file_versions(self) -> None:
        """Test case for list_file_versions

        List file versions
        """
        pass

    def test_list_files(self) -> None:
        """Test case for list_files

        List files
        """
        pass

    def test_list_folder(self) -> None:
        """Test case for list_folder

        List folders
        """
        pass

    def test_list_workspace(self) -> None:
        """Test case for list_workspace

        List workspaces
        """
        pass

    def test_list_workspace_activity(self) -> None:
        """Test case for list_workspace_activity

        List workspace activity
        """
        pass

    def test_list_workspace_shares(self) -> None:
        """Test case for list_workspace_shares

        List workspace shares
        """
        pass

    def test_share_file(self) -> None:
        """Test case for share_file

        Share a file
        """
        pass

    def test_share_workspace(self) -> None:
        """Test case for share_workspace

        Share a workspace
        """
        pass

    def test_unshare_file(self) -> None:
        """Test case for unshare_file

        Unshare a file
        """
        pass

    def test_update_comment(self) -> None:
        """Test case for update_comment

        Update a comment
        """
        pass

    def test_update_comment_edit(self) -> None:
        """Test case for update_comment_edit

        Update a comment edit
        """
        pass

    def test_update_comment_thread(self) -> None:
        """Test case for update_comment_thread

        Update a comment thread
        """
        pass

    def test_update_file(self) -> None:
        """Test case for update_file

        Update a file
        """
        pass

    def test_update_folder(self) -> None:
        """Test case for update_folder

        Update a folder
        """
        pass

    def test_update_workspace(self) -> None:
        """Test case for update_workspace

        Update a workspace
        """
        pass

    def test_update_workspace_compliance(self) -> None:
        """Test case for update_workspace_compliance

        Update workspace compliance settings
        """
        pass

    def test_update_workspace_share(self) -> None:
        """Test case for update_workspace_share

        Update a workspace share
        """
        pass


if __name__ == '__main__':
    unittest.main()
