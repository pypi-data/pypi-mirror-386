# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class ValidationErrorCode(str, Enum):
    """
    - VALIDATION_ERROR: General validation errors  - AUTHORIZATION_MODEL_NOT_FOUND: Resource not found errors  - INVALID_CONTINUATION_TOKEN: Input errors  - DUPLICATE_ENTRY: Conflict errors  - INVALID_SCHEMA_VERSION: Schema errors  - INVALID_FORMAT: New validation error codes  General invalid format  - INVALID_EMAIL_FORMAT: Email format is invalid  - INVALID_PASSWORD_STRENGTH: Password does not meet strength requirements  - FIELD_TOO_SHORT: Field value is too short  - FIELD_TOO_LONG: Field value is too long  - UNSUPPORTED_MEDIA_TYPE: Media type is not supported
    """

    """
    allowed enum values
    """
    NO_ERROR = 'NO_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INVALID_WRITE_INPUT = 'INVALID_WRITE_INPUT'
    INVALID_CHECK_INPUT = 'INVALID_CHECK_INPUT'
    INVALID_EXPAND_INPUT = 'INVALID_EXPAND_INPUT'
    INVALID_OBJECT_FORMAT = 'INVALID_OBJECT_FORMAT'
    INVALID_USER = 'INVALID_USER'
    INVALID_TUPLE = 'INVALID_TUPLE'
    AUTHORIZATION_MODEL_NOT_FOUND = 'AUTHORIZATION_MODEL_NOT_FOUND'
    TYPE_NOT_FOUND = 'TYPE_NOT_FOUND'
    RELATION_NOT_FOUND = 'RELATION_NOT_FOUND'
    STORE_ID_INVALID_LENGTH = 'STORE_ID_INVALID_LENGTH'
    ID_TOO_LONG = 'ID_TOO_LONG'
    INVALID_CONTINUATION_TOKEN = 'INVALID_CONTINUATION_TOKEN'
    PAGE_SIZE_INVALID = 'PAGE_SIZE_INVALID'
    PARAM_MISSING_VALUE = 'PARAM_MISSING_VALUE'
    EXCEEDED_ENTITY_LIMIT = 'EXCEEDED_ENTITY_LIMIT'
    DUPLICATE_ENTRY = 'DUPLICATE_ENTRY'
    CANNOT_ALLOW_DUPLICATE_TUPLES = 'CANNOT_ALLOW_DUPLICATE_TUPLES'
    CANNOT_ALLOW_DUPLICATE_TYPES = 'CANNOT_ALLOW_DUPLICATE_TYPES'
    INVALID_SCHEMA_VERSION = 'INVALID_SCHEMA_VERSION'
    INVALID_TYPE_PATTERN = 'INVALID_TYPE_PATTERN'
    INVALID_RELATION_PATTERN = 'INVALID_RELATION_PATTERN'
    INVALID_OBJECT_PATTERN = 'INVALID_OBJECT_PATTERN'
    INVALID_FORMAT = 'INVALID_FORMAT'
    INVALID_EMAIL_FORMAT = 'INVALID_EMAIL_FORMAT'
    INVALID_PASSWORD_STRENGTH = 'INVALID_PASSWORD_STRENGTH'
    FIELD_TOO_SHORT = 'FIELD_TOO_SHORT'
    FIELD_TOO_LONG = 'FIELD_TOO_LONG'
    UNSUPPORTED_MEDIA_TYPE = 'UNSUPPORTED_MEDIA_TYPE'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ValidationErrorCode from a JSON string"""
        return cls(json.loads(json_str))


