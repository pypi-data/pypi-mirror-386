# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.vendor_credit import VendorCredit

class TestVendorCredit(unittest.TestCase):
    """VendorCredit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VendorCredit:
        """Test VendorCredit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VendorCredit`
        """
        model = VendorCredit()
        if include_optional:
            return VendorCredit(
                merge_record_id = '',
                remote_id = '',
                number = '',
                transaction_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                vendor = '',
                total_amount = 1.337,
                currency = '',
                exchange_rate = '',
                company = '',
                lines = [
                    solomonai_backend_client_sdk.models.vendor_credit_line.VendorCreditLine(
                        remote_id = '', 
                        net_amount = 1.337, 
                        tracking_category = '', 
                        tracking_categories = [
                            ''
                            ], 
                        description = '', 
                        account = '', 
                        company = '', 
                        exchange_rate = '', 
                        modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                tracking_categories = [
                    ''
                    ],
                remote_was_deleted = True,
                accounting_period = '',
                modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return VendorCredit(
        )
        """

    def testVendorCredit(self):
        """Test VendorCredit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
