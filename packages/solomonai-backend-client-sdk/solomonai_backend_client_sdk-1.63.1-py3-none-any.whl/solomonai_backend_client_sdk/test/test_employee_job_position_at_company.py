# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.employee_job_position_at_company import EmployeeJobPositionAtCompany

class TestEmployeeJobPositionAtCompany(unittest.TestCase):
    """EmployeeJobPositionAtCompany unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmployeeJobPositionAtCompany:
        """Test EmployeeJobPositionAtCompany
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmployeeJobPositionAtCompany`
        """
        model = EmployeeJobPositionAtCompany()
        if include_optional:
            return EmployeeJobPositionAtCompany(
                id = '',
                remote_id = '',
                job_title = '',
                pay_rate = 1.337,
                pay_period = 'PAY_PERIOD_UNSPECIFIED',
                pay_frequency = 'PAY_FREQUENCY_UNSPECIFIED',
                pay_currency = '',
                flsa_status = 'FLSA_STATUS_UNSPECIFIED',
                effective_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                remote_was_deleted = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                merge_account_id = '',
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return EmployeeJobPositionAtCompany(
        )
        """

    def testEmployeeJobPositionAtCompany(self):
        """Test EmployeeJobPositionAtCompany"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
