# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.get_comment_replies_response import GetCommentRepliesResponse

class TestGetCommentRepliesResponse(unittest.TestCase):
    """GetCommentRepliesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCommentRepliesResponse:
        """Test GetCommentRepliesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCommentRepliesResponse`
        """
        model = GetCommentRepliesResponse()
        if include_optional:
            return GetCommentRepliesResponse(
                replies = [
                    solomonai_backend_client_sdk.models.comment_reply.CommentReply(
                        id = '', 
                        backend_platform_user_id = '', 
                        profile_id = '', 
                        media = solomonai_backend_client_sdk.models.media.Media(
                            id = '', 
                            created_at = '', 
                            link = '', 
                            metadata = solomonai_backend_client_sdk.models.media_metadata.MediaMetadata(
                                id = '', 
                                resize = 'MEDIA_RESIZE_UNSPECIFIED', 
                                crop = 'MEDIA_CROP_UNSPECIFIED', 
                                image_width = '', 
                                image_height = '', 
                                type = 'MEDIA_TYPE_UNSPECIFIED', ), ), 
                        mentions = [
                            ''
                            ], 
                        hashtags = [
                            ''
                            ], 
                        created_at = '', 
                        content = '', 
                        extra = {
                            'key' : ''
                            }, 
                        author_username = 'test-user', 
                        author_profile_image = 'test-user', 
                        affinity_score = '', 
                        quality_score = '', 
                        user_id_to_affinity_score_map = {
                            'key' : ''
                            }, 
                        author_account_type = 'ACCOUNT_TYPE_UNSPECIFIED', 
                        user_id_to_reaction_map = {
                            'key' : 'REACTION_UNSPECIFIED'
                            }, 
                        user_id_to_reports_map = {
                            'key' : ''
                            }, )
                    ]
            )
        else:
            return GetCommentRepliesResponse(
        )
        """

    def testGetCommentRepliesResponse(self):
        """Test GetCommentRepliesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
