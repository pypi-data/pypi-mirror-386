# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.split_transaction_request import SplitTransactionRequest

class TestSplitTransactionRequest(unittest.TestCase):
    """SplitTransactionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SplitTransactionRequest:
        """Test SplitTransactionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SplitTransactionRequest`
        """
        model = SplitTransactionRequest()
        if include_optional:
            return SplitTransactionRequest(
                transaction_id = '',
                split_transactions = [
                    solomonai_backend_client_sdk.models.transaction_split.TransactionSplit(
                        id = '', 
                        user_id = '', 
                        link_id = '', 
                        description = '', 
                        amount = 1.337, 
                        categories = [
                            ''
                            ], 
                        personal_finance_category_primary = '', 
                        personal_finance_category_detailed = '', 
                        tags = [
                            ''
                            ], 
                        authorized_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        authorized_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_of_split = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        gl_code = '', 
                        cost_center = '', 
                        project_code = '', 
                        tax_amount = 1.337, 
                        tax_rate = 1.337, 
                        tax_code = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_email = '', )
                    ],
                user_id = '',
                profile_type = 'FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED',
                org_id = 'org_12345',
                tenant_id = 'tenant_67890'
            )
        else:
            return SplitTransactionRequest(
                transaction_id = '',
                split_transactions = [
                    solomonai_backend_client_sdk.models.transaction_split.TransactionSplit(
                        id = '', 
                        user_id = '', 
                        link_id = '', 
                        description = '', 
                        amount = 1.337, 
                        categories = [
                            ''
                            ], 
                        personal_finance_category_primary = '', 
                        personal_finance_category_detailed = '', 
                        tags = [
                            ''
                            ], 
                        authorized_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        authorized_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_of_split = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        gl_code = '', 
                        cost_center = '', 
                        project_code = '', 
                        tax_amount = 1.337, 
                        tax_rate = 1.337, 
                        tax_code = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_email = '', )
                    ],
                user_id = '',
                profile_type = 'FINANCIAL_USER_PROFILE_TYPE_UNSPECIFIED',
                org_id = 'org_12345',
                tenant_id = 'tenant_67890',
        )
        """

    def testSplitTransactionRequest(self):
        """Test SplitTransactionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
