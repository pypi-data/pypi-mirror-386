# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.models.workspaceservicehttp_tus_response import WorkspaceservicehttpTusResponse

class TestWorkspaceservicehttpTusResponse(unittest.TestCase):
    """WorkspaceservicehttpTusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkspaceservicehttpTusResponse:
        """Test WorkspaceservicehttpTusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkspaceservicehttpTusResponse`
        """
        model = WorkspaceservicehttpTusResponse()
        if include_optional:
            return WorkspaceservicehttpTusResponse(
                error = solomonai_backend_client_sdk.models.workspaceservicehttp/tus_error.workspaceservicehttp.TusError(
                    code = 56, 
                    details = solomonai_backend_client_sdk.models.workspaceservicehttp/error_details.workspaceservicehttp.ErrorDetails(
                        field = '', 
                        headers = {
                            'key' : ''
                            }, 
                        reason = '', 
                        retry_after = 56, 
                        retryable = True, ), 
                    message = '', 
                    reference = '', ),
                headers = solomonai_backend_client_sdk.models.workspaceservicehttp/tus_headers.workspaceservicehttp.TusHeaders(
                    cache_control = '', 
                    content_type = '', 
                    location = '', 
                    tus_checksum_algorithm = '', 
                    tus_extension = '', 
                    tus_max_size = 56, 
                    tus_resumable = '', 
                    tus_version = '', 
                    upload_checksum = '', 
                    upload_concat = '', 
                    upload_defer_length = 56, 
                    upload_expires = '', 
                    upload_length = 56, 
                    upload_metadata = '', 
                    upload_offset = 56, ),
                resource_info = solomonai_backend_client_sdk.models.workspaceservicehttp/resource_info.workspaceservicehttp.ResourceInfo(
                    checksum = null, 
                    created_at = '', 
                    expires_at = '', 
                    id = '', 
                    is_final = True, 
                    is_partial = True, 
                    length = 56, 
                    metadata = {
                        'key' : ''
                        }, 
                    offset = 56, 
                    parts = [
                        ''
                        ], 
                    storage = null, ),
                status = 56,
                status_text = ''
            )
        else:
            return WorkspaceservicehttpTusResponse(
        )
        """

    def testWorkspaceservicehttpTusResponse(self):
        """Test WorkspaceservicehttpTusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
