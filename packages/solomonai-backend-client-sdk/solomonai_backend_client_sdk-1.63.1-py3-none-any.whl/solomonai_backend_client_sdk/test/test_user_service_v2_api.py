# coding: utf-8

"""
    User Service API

    Solomon AI User Service API - Manages user profiles and authentication

    The version of the OpenAPI document: 1.0
    Contact: yoanyomba@solomon-ai.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from solomonai_backend_client_sdk.api.user_service_v2_api import UserServiceV2Api


class TestUserServiceV2Api(unittest.TestCase):
    """UserServiceV2Api unit test stubs"""

    def setUp(self) -> None:
        self.api = UserServiceV2Api()

    def tearDown(self) -> None:
        pass

    def test_accept_team_member_invitation(self) -> None:
        """Test case for accept_team_member_invitation

        Accepts a team member invitation
        """
        pass

    def test_add_organization_member_to_organization(self) -> None:
        """Test case for add_organization_member_to_organization

        Adds a member to an organization
        """
        pass

    def test_add_role_to_tenant_team(self) -> None:
        """Test case for add_role_to_tenant_team

        Adds a role to a team
        """
        pass

    def test_add_tenant_member(self) -> None:
        """Test case for add_tenant_member

        Adds a member to a tenant
        """
        pass

    def test_add_user_to_team(self) -> None:
        """Test case for add_user_to_team

        Adds a user to a team
        """
        pass

    def test_bulk_add_team_members(self) -> None:
        """Test case for bulk_add_team_members

        Bulk add team members
        """
        pass

    def test_bulk_remove_team_members(self) -> None:
        """Test case for bulk_remove_team_members

        Bulk remove team members
        """
        pass

    def test_bulk_revoke_org_api_keys(self) -> None:
        """Test case for bulk_revoke_org_api_keys

        Revokes multiple API keys
        """
        pass

    def test_check_email_and_auth0_user_id_exists(self) -> None:
        """Test case for check_email_and_auth0_user_id_exists

        Checks that an email and auth0 user id exists or not
        """
        pass

    def test_check_email_exists_v2(self) -> None:
        """Test case for check_email_exists_v2

        Validate email existence
        """
        pass

    def test_check_username_exists_v2(self) -> None:
        """Test case for check_username_exists_v2

        Validate username existence
        """
        pass

    def test_create_organization(self) -> None:
        """Test case for create_organization

        Creates a new organization
        """
        pass

    def test_create_organization_api_key(self) -> None:
        """Test case for create_organization_api_key

        Creates a new organization API key
        """
        pass

    def test_create_role(self) -> None:
        """Test case for create_role

        Creates a new role
        """
        pass

    def test_create_team(self) -> None:
        """Test case for create_team

        Creates a new team
        """
        pass

    def test_create_tenant(self) -> None:
        """Test case for create_tenant

        Creates a new tenant
        """
        pass

    def test_create_tenant_api_key(self) -> None:
        """Test case for create_tenant_api_key

        Creates a new tenant API key
        """
        pass

    def test_create_tenant_team(self) -> None:
        """Test case for create_tenant_team

        Creates a new team
        """
        pass

    def test_create_user_v2(self) -> None:
        """Test case for create_user_v2

        Create new user account
        """
        pass

    def test_delete_organization(self) -> None:
        """Test case for delete_organization

        Deletes an organization
        """
        pass

    def test_delete_organization_api_key(self) -> None:
        """Test case for delete_organization_api_key

        Deletes an organization API key
        """
        pass

    def test_delete_role(self) -> None:
        """Test case for delete_role

        Deletes a role
        """
        pass

    def test_delete_role_from_tenant_team(self) -> None:
        """Test case for delete_role_from_tenant_team

        Deletes a role from a team
        """
        pass

    def test_delete_team(self) -> None:
        """Test case for delete_team

        Deletes a team
        """
        pass

    def test_delete_tenant(self) -> None:
        """Test case for delete_tenant

        Deletes a tenant
        """
        pass

    def test_delete_tenant_api_key(self) -> None:
        """Test case for delete_tenant_api_key

        Deletes a tenant API key
        """
        pass

    def test_delete_tenant_team(self) -> None:
        """Test case for delete_tenant_team

        Deletes a team
        """
        pass

    def test_delete_user_v2(self) -> None:
        """Test case for delete_user_v2

        Delete user account and associated data
        """
        pass

    def test_get_canny_user_sso_token(self) -> None:
        """Test case for get_canny_user_sso_token

        Retrieves user sso token for canny
        """
        pass

    def test_get_org_api_key_permissions(self) -> None:
        """Test case for get_org_api_key_permissions

        Retrieves permissions for an API key
        """
        pass

    def test_get_organization(self) -> None:
        """Test case for get_organization

        Retrieves an organization
        """
        pass

    def test_get_organization_member(self) -> None:
        """Test case for get_organization_member

        Retrieves a member of an organization
        """
        pass

    def test_get_role(self) -> None:
        """Test case for get_role

        Retrieves a role
        """
        pass

    def test_get_team(self) -> None:
        """Test case for get_team

        Retrieves a team
        """
        pass

    def test_get_tenant(self) -> None:
        """Test case for get_tenant

        Retrieves a tenant
        """
        pass

    def test_get_tenant_team(self) -> None:
        """Test case for get_tenant_team

        Retrieves a team
        """
        pass

    def test_get_user_by_auth0_id(self) -> None:
        """Test case for get_user_by_auth0_id

        Retrieve user account details by auth0 id and profile type
        """
        pass

    def test_get_user_by_authn_idv2(self) -> None:
        """Test case for get_user_by_authn_idv2

        Retrieve user details by authentication ID
        """
        pass

    def test_get_user_by_email_or_username_v2(self) -> None:
        """Test case for get_user_by_email_or_username_v2

        Retrieve user account by email or username
        """
        pass

    def test_get_user_by_email_v2(self) -> None:
        """Test case for get_user_by_email_v2

        Retrieve user details by email
        """
        pass

    def test_get_user_by_username_v2(self) -> None:
        """Test case for get_user_by_username_v2

        Retrieve user details by username
        """
        pass

    def test_get_user_id_v2(self) -> None:
        """Test case for get_user_id_v2

        Retrieve user ID by search criteria
        """
        pass

    def test_get_user_v2(self) -> None:
        """Test case for get_user_v2

        Retrieve user account details
        """
        pass

    def test_health_check(self) -> None:
        """Test case for health_check

        health check
        """
        pass

    def test_invite_team_member(self) -> None:
        """Test case for invite_team_member

        Invites a member to a tenant
        """
        pass

    def test_list_organization_api_keys(self) -> None:
        """Test case for list_organization_api_keys

        Lists all organization API keys
        """
        pass

    def test_list_organization_audit_logs(self) -> None:
        """Test case for list_organization_audit_logs

        Lists all organization audit logs
        """
        pass

    def test_list_organization_members(self) -> None:
        """Test case for list_organization_members

        Lists all members of an organization
        """
        pass

    def test_list_organizations(self) -> None:
        """Test case for list_organizations

        Lists all organizations
        """
        pass

    def test_list_roles(self) -> None:
        """Test case for list_roles

        Lists all roles
        """
        pass

    def test_list_roles_from_tenant_team(self) -> None:
        """Test case for list_roles_from_tenant_team

        Lists all roles from a team
        """
        pass

    def test_list_team_invites(self) -> None:
        """Test case for list_team_invites

        Lists all team invites
        """
        pass

    def test_list_tenant_api_keys(self) -> None:
        """Test case for list_tenant_api_keys

        Lists all tenant API keys
        """
        pass

    def test_list_tenant_audit_logs(self) -> None:
        """Test case for list_tenant_audit_logs

        Lists all tenant audit logs
        """
        pass

    def test_list_tenant_team_members(self) -> None:
        """Test case for list_tenant_team_members

        Lists all members of a tenant
        """
        pass

    def test_list_tenants(self) -> None:
        """Test case for list_tenants

        Lists all tenants
        """
        pass

    def test_password_reset_webhook_v2(self) -> None:
        """Test case for password_reset_webhook_v2

        Process password reset via webhook
        """
        pass

    def test_readyness_check(self) -> None:
        """Test case for readyness_check

        readyness check
        """
        pass

    def test_reject_team_member_invitation(self) -> None:
        """Test case for reject_team_member_invitation

        Rejects a team member invitation
        """
        pass

    def test_remove_organization_member_from_organization(self) -> None:
        """Test case for remove_organization_member_from_organization

        Removes a member from an organization
        """
        pass

    def test_remove_tenant_team_member(self) -> None:
        """Test case for remove_tenant_team_member

        Removes a member from a tenant
        """
        pass

    def test_remove_user_from_team(self) -> None:
        """Test case for remove_user_from_team

        Removes a user from a team
        """
        pass

    def test_retrieve_business_settings(self) -> None:
        """Test case for retrieve_business_settings

        Retrieve business account settings
        """
        pass

    def test_rotate_org_api_key(self) -> None:
        """Test case for rotate_org_api_key

        Rotates an API key
        """
        pass

    def test_update_organization(self) -> None:
        """Test case for update_organization

        Updates an existing organization
        """
        pass

    def test_update_role(self) -> None:
        """Test case for update_role

        Updates an existing role
        """
        pass

    def test_update_team(self) -> None:
        """Test case for update_team

        Updates an existing team
        """
        pass

    def test_update_tenant(self) -> None:
        """Test case for update_tenant

        Updates an existing tenant
        """
        pass

    def test_update_tenant_team(self) -> None:
        """Test case for update_tenant_team

        Updates an existing team
        """
        pass

    def test_update_tenant_team_member(self) -> None:
        """Test case for update_tenant_team_member

        Updates a team member
        """
        pass

    def test_update_user_v2(self) -> None:
        """Test case for update_user_v2

        Update user account information
        """
        pass

    def test_verify_org_api_key(self) -> None:
        """Test case for verify_org_api_key

        Verifies an API key
        """
        pass

    def test_verify_user_v2(self) -> None:
        """Test case for verify_user_v2

        Verify user email address
        """
        pass


if __name__ == '__main__':
    unittest.main()
