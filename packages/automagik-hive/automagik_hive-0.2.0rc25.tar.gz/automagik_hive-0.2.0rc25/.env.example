# =========================================================================
# ‚ö° AUTOMAGIK HIVE - APPLICATION ENVIRONMENT CONFIGURATION
# =========================================================================
#
# NOTES:
# - This is the application environment template. Copy to .env and fill in your values.
# - This file contains application-level configuration only
# - Docker containers inherit from this .env and override specific values in docker-compose.yml
# - DO NOT commit the .env file to version control.
#
# =========================================================================

# -------------------------------------------------------------------------
# CORE APPLICATION SETTINGS
# -------------------------------------------------------------------------
# App Environment (development, staging, production)
HIVE_ENVIRONMENT=development

# Logging Level (DEBUG, INFO, WARNING, ERROR)
HIVE_LOG_LEVEL=INFO

# Agno Framework Logging (ERROR, WARNING, INFO, DEBUG)
AGNO_LOG_LEVEL=WARNING

# Optional: Log directory for file output
# HIVE_LOG_DIR=./logs

# -------------------------------------------------------------------------
# SERVER & API (for local development)
# -------------------------------------------------------------------------
# Server bind address (0.0.0.0 for all interfaces)
HIVE_API_HOST=0.0.0.0

# Server port
HIVE_API_PORT=8886

# Worker processes for production (default: 1)
HIVE_API_WORKERS=1

# -------------------------------------------------------------------------
# DATABASE (for local development)
# -------------------------------------------------------------------------
# Database backend type (auto-generated during install)
# Options: pglite, sqlite, postgresql
# - pglite: WebAssembly PostgreSQL bridge (RECOMMENDED - full agent memory support, no Docker)
# - sqlite: DEVELOPMENT/TESTING ONLY - CANNOT persist agent sessions/memory (use for CI/CD only)
# - postgresql: Full PostgreSQL with Docker (requires Docker installation)
HIVE_DATABASE_BACKEND=pglite

# Connection URL for local development
# PGlite example (RECOMMENDED - full agent memory support, no Docker required):
# Connects to PGlite HTTP bridge on port 5532
HIVE_DATABASE_URL=postgresql://localhost:5532/main

# ‚ö†Ô∏è SQLite WARNING: Agents CANNOT save sessions or remember users between requests
# Use ONLY for CI/CD testing or stateless scenarios. For development, use PGlite instead.
# SQLite example (NOT RECOMMENDED - no agent memory support):
# HIVE_DATABASE_URL=sqlite:///./data/automagik_hive.db

# PostgreSQL example (production - requires Docker):
# HIVE_DATABASE_URL=postgresql+psycopg://hive_user:your-secure-password-here@localhost:5532/hive


# -------------------------------------------------------------------------
# AI PROVIDER KEYS & DEFAULTS
# -------------------------------------------------------------------------
# Fallback model if not specified elsewhere
HIVE_DEFAULT_MODEL=gpt-5

# AI Provider API Keys (set these with your actual keys)
ANTHROPIC_API_KEY=your-anthropic-api-key-here
GEMINI_API_KEY=your-gemini-api-key-here
OPENAI_API_KEY=your-openai-api-key-here
GROK_API_KEY=your-grok-api-key-here
GROQ_API_KEY=your-groq-api-key-here
COHERE_API_KEY=your-cohere-api-key-here

# -------------------------------------------------------------------------
# SECURITY & AUTHENTICATION
# -------------------------------------------------------------------------
# Master API key for accessing Hive endpoints
HIVE_API_KEY=your-hive-api-key-here

# Allowed CORS origins (comma-separated list)
HIVE_CORS_ORIGINS=http://localhost:3000,http://localhost:8886

# Authentication controls - Default: DISABLED for easier development onboarding
# CRITICAL: Authentication is AUTOMATICALLY ENABLED in production environment
# This setting is IGNORED when HIVE_ENVIRONMENT=production (production security override)
HIVE_AUTH_DISABLED=true

# =========================================================================
# üîß NOTIFICATIONS & INTEGRATIONS 
# =========================================================================
# Enable/disable WhatsApp alerts via Evolution MCP
#HIVE_WHATSAPP_NOTIFICATIONS_ENABLED=true
# Group ID for alerts
#WHATSAPP_NOTIFICATION_GROUP=your-whatsapp-group-id@g.us

# LangWatch API key for metrics tracking
LANGWATCH_API_KEY=your-langwatch-api-key-here

# Enable LangWatch integration (explicit control)
HIVE_ENABLE_LANGWATCH=true

# Disable Agno's telemetry
HIVE_AGNO_MONITOR=false

# MCP Configuration path
HIVE_MCP_CONFIG_PATH=ai/.mcp.json

# Enable AGUI mode for UI interface
HIVE_ENABLE_AGUI=false

# -------------------------------------------------------------------------
# DEVELOPMENT MODE - YAML ONLY CONFIGURATION  
# -------------------------------------------------------------------------
# CRITICAL: Use YAML configs only, no database sync conflicts
# Fellow agents: Keep all versions at 1 until we ship MVP!
HIVE_DEV_MODE=true

# =========================================================================
# ‚ö° PERFORMANCE, LIMITS & TUNING
# =========================================================================
#
# All settings in this section are optional.
# Uncomment and modify to fine-tune system performance.
#
# -------------------------------------------------------------------------

# --- Knowledge & Memory ---
# Max results from knowledge base search
# HIVE_MAX_KNOWLEDGE_RESULTS=10

# Days to retain conversation history
# HIVE_MEMORY_RETENTION_DAYS=30

# Max conversation history entries
# HIVE_MAX_MEMORY_ENTRIES=1000

# --- Caching ---
# Cache time-to-live in seconds
# HIVE_CACHE_TTL=300

# Max cache size (number of items)
# HIVE_CACHE_MAX_SIZE=1000

# --- Rate Limiting & Session Management ---
# Max requests per period
# HIVE_RATE_LIMIT_REQUESTS=100

# Time period in seconds
# HIVE_RATE_LIMIT_PERIOD=60

# Max request body size in bytes (10MB)
# HIVE_MAX_REQUEST_SIZE=10485760

# Max turns in a single conversation
# HIVE_MAX_CONVERSATION_TURNS=20

# Session inactivity timeout in seconds
# HIVE_SESSION_TIMEOUT=1800

# Max concurrent users
# HIVE_MAX_CONCURRENT_USERS=100

# --- Agent & Team Routing ---
# Timeout for team routing decisions in seconds
# HIVE_TEAM_ROUTING_TIMEOUT=30

# Max times an agent can switch teams in a session
# HIVE_MAX_TEAM_SWITCHES=3

# =========================================================================
# üìä METRICS & MONITORING
# =========================================================================
#
# Configure collection of detailed performance and usage metrics.
#
# -------------------------------------------------------------------------
# Master switch for metrics collection
HIVE_ENABLE_METRICS=true

# --- Granular Metrics Control (all default: true) ---
# Token usage from Agno
# HIVE_METRICS_COLLECT_TOKENS=true

# Execution timing and time-to-first-token
# HIVE_METRICS_COLLECT_TIME=true

# Tool execution tracking
# HIVE_METRICS_COLLECT_TOOLS=true

# Event lifecycle tracking
# HIVE_METRICS_COLLECT_EVENTS=true

# Content and media tracking
# HIVE_METRICS_COLLECT_CONTENT=true

# --- Metrics Batch Processing ---
# Entries processed per batch (1-10000)
# HIVE_METRICS_BATCH_SIZE=50

# Seconds between batch flushes (0.1-3600)
# HIVE_METRICS_FLUSH_INTERVAL=5.0

# Maximum queue size (10-100000)
# HIVE_METRICS_QUEUE_SIZE=1000
