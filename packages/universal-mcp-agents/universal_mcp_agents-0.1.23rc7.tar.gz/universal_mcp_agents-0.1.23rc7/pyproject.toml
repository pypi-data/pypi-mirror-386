[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[project]
name = "universal-mcp-agents"
version = "0.1.23-rc7"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Manoj Bajaj", email = "manojbajaj95@gmail.com" }
]
requires-python = ">=3.11"
dependencies = [
    "cloudpickle>=3.1.1",
    "langchain-anthropic>=0.3.19",
    "langchain-google-genai>=2.1.10",
    "langchain-openai>=0.3.32",
    "langgraph>=0.6.6",
    "universal-mcp>=0.1.24rc27",
    "universal-mcp-applications>=0.1.25",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0,<9.0.0",
    "pytest-asyncio>=1.2.0",
    "pytest-cov",
]
dev = [
    "ruff",
    "typer>=0.17.4",
    "pre-commit",
]


[project.urls]
Homepage = "https://github.com/universal-mcp/applications"
Repository = "https://github.com/universal-mcp/applications"



[tool.hatch.build.targets.wheel]
packages = [
    "src/universal_mcp",
]

[tool.coverage.run]
source = [
    "src",
]
branch = true

[tool.coverage.report]
show_missing = true
fail_under = 70

[tool.ruff]
line-length = 120
lint.select = [
    "E", "W", "F", "I", "UP", "PL", "T20",
]
lint.ignore = [
    "E501",  # Ignore line length errors
    "PLR2004" # Ignore errors caused due to constants
]

[tool.ruff.lint.pylint]
max-args = 10
max-statements = 118
max-returns = 10
max-branches = 37


[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "module"
