[build-system]
# build the package with [flit](https://flit.readthedocs.io)
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "parsevasp"
dynamic = ["version"]  # read from parsevasp/__init__.py
description = "A general parser for VASP"
authors = [{name = "Espen Flage-Larsen	", email = "espen.flage-larsen@sigma2.no"}]
readme = "README.md"
license = {file = "LICENSE.txt"}
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Development Status :: 5 - Production/Stable",
	"Environment :: Plugins",
	"Intended Audience :: Science/Research",
	"License :: OSI Approved :: MIT License",
	"Programming Language :: Python :: 3.9",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Topic :: Scientific/Engineering :: Physics",
	"Topic :: Scientific/Engineering :: Chemistry"
]
keywords = ["vasp", "parser"]
requires-python = ">=3.9"
dependencies = [
        "numpy",
        "lxml",
        "pyyaml"
]


[project.urls]
Source = "https://github.com/aiida-vasp/parsevasp"

[project.optional-dependencies]
tests = [
      "pytest~=7.0",
      "pytest-cov~=2.7,<2.11",
      "coverage~=6.0"
]
pre-commit = [
	   "pre-commit~=2.2",
]

[tool.flit.module]
name = "parsevasp"

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["parsevasp"]


[tool.ruff]
exclude = [
    "cookiecutters",
    "tutorials",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120


[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint]
ignore = [
  'F403',  # Star imports unable to detect undefined names
  'F405',  # Import may be undefined or defined from star imports
  'PLR0911',  # Too many return statements
  'PLR0912',  # Too many branches
  'PLR0913',  # Too many arguments in function definition
  'PLR0915',  # Too many statements
  'PLR2004',  # Magic value used in comparison
  'RUF005',  # Consider iterable unpacking instead of concatenation
  'RUF012',  # Mutable class attributes should be annotated with `typing.ClassVar`
  'N802',  # invalid-function-name
]
select = [
  'E',  # pydocstyle
  'W',  # pydocstyle
  'F',  # pyflakes
  'I',  # isort
  'N',  # pep8-naming
  'PLC',  # pylint-convention
  'PLE',  # pylint-error
  'PLR',  # pylint-refactor
  'PLW',  # pylint-warning
  'RUF'  # ruff
]


[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["F403", "N803"]
