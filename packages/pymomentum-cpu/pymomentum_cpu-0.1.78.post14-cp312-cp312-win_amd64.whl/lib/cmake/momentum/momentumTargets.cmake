# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "3.0.0")
   message(FATAL_ERROR "CMake >= 3.0.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 3.0.0...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS momentum::common momentum::simd momentum::fmt_eigen momentum::online_qr momentum::math momentum::simd_generalized_loss momentum::skeleton momentum::character momentum::solver momentum::character_solver momentum::simd_constraints momentum::character_sequence_solver momentum::momentum momentum::diff_ik momentum::io_common momentum::io_skeleton momentum::io_shape momentum::io_fbx momentum::io_gltf momentum::io_urdf momentum::io_legacy_json momentum::io_motion momentum::io_marker momentum::io momentum::marker_tracker momentum::app_utils momentum::process_markers momentum::rerun_eigen_adapters momentum::rerun)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target momentum::common
add_library(momentum::common STATIC IMPORTED)

set_target_properties(momentum::common PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MOMENTUM_WITH_SPDLOG=1"
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "fmt::fmt-header-only;indicators::indicators;spdlog::spdlog_header_only"
)

# Create imported target momentum::simd
add_library(momentum::simd INTERFACE IMPORTED)

set_target_properties(momentum::simd PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;drjit"
)

# Create imported target momentum::fmt_eigen
add_library(momentum::fmt_eigen INTERFACE IMPORTED)

set_target_properties(momentum::fmt_eigen PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "fmt::fmt-header-only;Eigen3::Eigen"
)

# Create imported target momentum::online_qr
add_library(momentum::online_qr STATIC IMPORTED)

set_target_properties(momentum::online_qr PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::fmt_eigen;Eigen3::Eigen;Microsoft.GSL::GSL"
)

# Create imported target momentum::math
add_library(momentum::math STATIC IMPORTED)

set_target_properties(momentum::math PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::fmt_eigen;momentum::online_qr;Eigen3::Eigen;Microsoft.GSL::GSL;\$<LINK_ONLY:axel::axel>"
)

# Create imported target momentum::simd_generalized_loss
add_library(momentum::simd_generalized_loss STATIC IMPORTED)

set_target_properties(momentum::simd_generalized_loss PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::math;momentum::simd"
)

# Create imported target momentum::skeleton
add_library(momentum::skeleton STATIC IMPORTED)

set_target_properties(momentum::skeleton PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::math;Eigen3::Eigen;Microsoft.GSL::GSL"
)

# Create imported target momentum::character
add_library(momentum::character STATIC IMPORTED)

set_target_properties(momentum::character PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::math;momentum::skeleton;axel::axel;Dispenso::dispenso;Eigen3::Eigen;Microsoft.GSL::GSL"
)

# Create imported target momentum::solver
add_library(momentum::solver STATIC IMPORTED)

set_target_properties(momentum::solver PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::math;Eigen3::Eigen;Microsoft.GSL::GSL"
)

# Create imported target momentum::character_solver
add_library(momentum::character_solver STATIC IMPORTED)

set_target_properties(momentum::character_solver PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;momentum::solver;axel::axel;Eigen3::Eigen;Microsoft.GSL::GSL;\$<LINK_ONLY:Dispenso::dispenso>"
)

# Create imported target momentum::simd_constraints
add_library(momentum::simd_constraints STATIC IMPORTED)

set_target_properties(momentum::simd_constraints PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character_solver;momentum::simd"
)

# Create imported target momentum::character_sequence_solver
add_library(momentum::character_sequence_solver STATIC IMPORTED)

set_target_properties(momentum::character_sequence_solver PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character_solver;Eigen3::Eigen;Microsoft.GSL::GSL;\$<LINK_ONLY:Dispenso::dispenso>"
)

# Create imported target momentum::momentum
add_library(momentum::momentum INTERFACE IMPORTED)

set_target_properties(momentum::momentum PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;momentum::simd;momentum::online_qr;momentum::math;momentum::solver;momentum::skeleton;momentum::character;momentum::character_solver;momentum::simd_constraints;momentum::character_sequence_solver"
)

# Create imported target momentum::diff_ik
add_library(momentum::diff_ik STATIC IMPORTED)

set_target_properties(momentum::diff_ik PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character_solver;Ceres::ceres;Dispenso::dispenso"
)

# Create imported target momentum::io_common
add_library(momentum::io_common STATIC IMPORTED)

set_target_properties(momentum::io_common PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::common;Microsoft.GSL::GSL"
)

# Create imported target momentum::io_skeleton
add_library(momentum::io_skeleton STATIC IMPORTED)

set_target_properties(momentum::io_skeleton PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;\$<LINK_ONLY:momentum::io_common>;\$<LINK_ONLY:re2::re2>"
)

# Create imported target momentum::io_shape
add_library(momentum::io_shape STATIC IMPORTED)

set_target_properties(momentum::io_shape PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character"
)

# Create imported target momentum::io_fbx
add_library(momentum::io_fbx STATIC IMPORTED)

set_target_properties(momentum::io_fbx PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:momentum::io_common>;\$<LINK_ONLY:momentum::io_skeleton>;\$<LINK_ONLY:OpenFBX>"
)

# Create imported target momentum::io_gltf
add_library(momentum::io_gltf STATIC IMPORTED)

set_target_properties(momentum::io_gltf PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;momentum::io_common;momentum::io_skeleton;fx-gltf::fx-gltf;\$<LINK_ONLY:nlohmann_json::nlohmann_json>"
)

# Create imported target momentum::io_urdf
add_library(momentum::io_urdf STATIC IMPORTED)

set_target_properties(momentum::io_urdf PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;momentum::io_common;momentum::io_skeleton;urdfdom::urdf_parser"
)

# Create imported target momentum::io_legacy_json
add_library(momentum::io_legacy_json STATIC IMPORTED)

set_target_properties(momentum::io_legacy_json PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;momentum::io_common;momentum::io_skeleton;nlohmann_json::nlohmann_json"
)

# Create imported target momentum::io_motion
add_library(momentum::io_motion STATIC IMPORTED)

set_target_properties(momentum::io_motion PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character"
)

# Create imported target momentum::io_marker
add_library(momentum::io_marker STATIC IMPORTED)

set_target_properties(momentum::io_marker PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;\$<LINK_ONLY:momentum::io_common>;\$<LINK_ONLY:momentum::io_gltf>;\$<LINK_ONLY:ezc3d>"
)

# Create imported target momentum::io
add_library(momentum::io STATIC IMPORTED)

set_target_properties(momentum::io PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::io_common;momentum::io_fbx;momentum::io_gltf;momentum::io_legacy_json;momentum::io_motion;momentum::io_marker;momentum::io_shape;momentum::io_skeleton"
)

# Create imported target momentum::marker_tracker
add_library(momentum::marker_tracker STATIC IMPORTED)

set_target_properties(momentum::marker_tracker PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character_solver;\$<LINK_ONLY:momentum::character_sequence_solver>"
)

# Create imported target momentum::app_utils
add_library(momentum::app_utils STATIC IMPORTED)

set_target_properties(momentum::app_utils PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;momentum::marker_tracker;CLI11::CLI11;\$<LINK_ONLY:momentum::io>"
)

# Create imported target momentum::process_markers
add_library(momentum::process_markers STATIC IMPORTED)

set_target_properties(momentum::process_markers PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::app_utils;momentum::marker_tracker;momentum::skeleton;\$<LINK_ONLY:momentum::io_marker>"
)

# Create imported target momentum::rerun_eigen_adapters
add_library(momentum::rerun_eigen_adapters INTERFACE IMPORTED)

set_target_properties(momentum::rerun_eigen_adapters PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen;rerun_sdk"
)

# Create imported target momentum::rerun
add_library(momentum::rerun STATIC IMPORTED)

set_target_properties(momentum::rerun PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "momentum::character;rerun_sdk;\$<LINK_ONLY:momentum::rerun_eigen_adapters>;\$<LINK_ONLY:axel::axel>"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/momentumTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "axel::axel" "rerun_sdk" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
