[build-system]
# Minimum requirements for the build system to execute.
requires = [
    'setuptools >= 77.0.0',
    'passagemath-conf == 10.6.31rc3 ; sys_platform != "win32"',
    'passagemath-setup == 10.6.31rc3',
    'passagemath-environment == 10.6.31rc3',
    'passagemath-categories == 10.6.31rc3',
    'passagemath-modules == 10.6.31rc3',
    'passagemath-flint == 10.6.31rc3',
    'mpmath >=1.1.0, <1.4',
    'cython >=3.0.8, <3.2.0', 'cython >=3.0.8,<3.2.0',
    'cysignals <1.12.4; sys_platform == "win32"', 'cysignals >=1.11.2, != 1.12.0',
    'memory_allocator',
    'pkgconfig',
]
# We need access to the autogen package at build time.
# Hence we declare a custom build backend.
#build-backend = "_custom_build_meta"  # just re-exports setuptools.build_meta definitions
#backend-path = ["."]

[project]
name = "passagemath-pari"
description = "passagemath: Computational Number Theory with PARI/GP"
dependencies = [
    'cysignals <1.12.4; sys_platform == "win32"', 'cysignals >=1.11.2, != 1.12.0',
    'memory_allocator',
    'passagemath-environment == 10.6.31rc3',
    'passagemath-categories == 10.6.31rc3',
    'conway-polynomials >=0.8',
]
dynamic = ["version"]
license = "GPL-2.0-or-later"
authors = [{name = "The Sage Developers", email = "sage-support@googlegroups.com"}]
maintainers = [
    {name = "Matthias KÃ¶ppe"},
    {name = "passagemath contributors"},
]
classifiers = [
    "Development Status :: 6 - Mature",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.10, <3.15"

[project.urls]
"release notes" = "https://github.com/passagemath/passagemath/releases"
"repo (upstream)" = "https://github.com/sagemath/sage"
"repo" = "https://github.com/passagemath/passagemath"
documentation = "https://passagemath.org/docs/latest"
"homepage (upstream)" = "https://www.sagemath.org"
"discourse" = "https://passagemath.discourse.group"
"tracker (upstream)" = "https://github.com/sagemath/sage/issues"
"tracker" = "https://github.com/passagemath/passagemath/issues"

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.optional-dependencies]
test = ["passagemath-repl"]

# PARI data packages
elldata         = ["passagemath-pari-elldata"]
galdata         = ["passagemath-pari-galdata"]
galpol          = ["passagemath-pari-galpol"]
nflistdata      = ["passagemath-pari-nflistdata"]
nftables        = ["passagemath-pari-nftables"]
seadata         = ["passagemath-pari-seadata"]
seadata-big     = ["passagemath-pari-seadata-big"]
seadata-small   = ["passagemath-pari-seadata-small"]

# Jupyter
jupyterkernel   = [
    'ipykernel >=5.2.1',
]
jupyterlab      = [
    "passagemath-pari[jupyterkernel]",
    'jupyterlab',
]
notebook        = [
    "passagemath-pari[jupyterkernel]",
    'notebook >=6.1.1',
]

# Everything as in standard Sage
standard        = ["passagemath-pari[galdata,seadata-small]"]

[tool.cibuildwheel.linux]
# Unfortunately CIBW_REPAIR_WHEEL_COMMAND does not expand {project} (and other placeholders),
# so there is no clean way to refer to the repair_wheel.py script
# https://github.com/pypa/cibuildwheel/issues/1931
repair-wheel-command = [
    'python3 -m pip install passagemath-conf auditwheel',
    'python3 pkgs/sagemath-pari/repair_wheel.py {wheel}',
    'auditwheel repair -w {dest_dir} {wheel}',
]
[tool.cibuildwheel.macos]
repair-wheel-command = [
    'python3 -m pip install passagemath-conf auditwheel',
    'python3 pkgs/sagemath-pari/repair_wheel.py {wheel}',
    'delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}',
]

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
version = {file = ["VERSION.txt"]}

[external]
# External dependencies in the format proposed by https://peps.python.org/pep-0725
build-requires = [
  "virtual:compiler/c",
  "virtual:compiler/cpp",
  "pkg:generic/pkg-config",
]

host-requires = [
  "pkg:generic/gmp",
  "pkg:generic/mpc",
  "pkg:generic/mpfr",
  "pkg:generic/pari",
  "pkg:generic/givaro",
]

dependencies = [
]
