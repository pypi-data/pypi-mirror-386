# Configuration for GenAI OpenTelemetry instrumentation

# The name of the service. Defaults to "genai-app".
OTEL_SERVICE_NAME=genai-app

# The OTLP exporter endpoint. Defaults to "http://localhost:4318".
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318

# Optional headers for the OTLP exporter, in key=value format, separated by commas.
# Example: OTEL_EXPORTER_OTLP_HEADERS=my-header=my-value,another-header=another-value
# OTEL_EXPORTER_OTLP_HEADERS=

# Comma-separated list of instrumentors to enable. If not set, all supported instrumentors are enabled by default.
# Example: GENAI_ENABLED_INSTRUMENTORS=openai,langchain,llama_index
# GENAI_ENABLED_INSTRUMENTORS=

# Enable GPU metrics collection. Defaults to "true".
# GENAI_ENABLE_GPU_METRICS=true

# Enable cost tracking. Defaults to "true".
# GENAI_ENABLE_COST_TRACKING=true

# Enable MCP (Model Context Protocol) instrumentation. Defaults to "true".
# This includes databases, vector DBs, Redis, Kafka, etc.
# GENAI_ENABLE_MCP_INSTRUMENTATION=true

# Enable HTTP/API instrumentation (requests/httpx). Defaults to "false".
# Disabled by default to avoid conflicts with OTLP HTTP exporters.
# GENAI_ENABLE_HTTP_INSTRUMENTATION=false

# Logging configuration
# Set the logging level for the genai-otel library. Defaults to INFO.
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
GENAI_OTEL_LOG_LEVEL=INFO

# If set to "true", the instrumentation will raise an error if it fails. Defaults to "false".
# GENAI_FAIL_ON_ERROR=false

# Enable CO2 tracking. Defaults to "false".
# GENAI_ENABLE_CO2_TRACKING=false

# Carbon intensity in gCO2e/kWh. Defaults to "475.0". Used when GENAI_ENABLE_CO2_TRACKING is true.
# GENAI_CARBON_INTENSITY=475.0

# --- OpenTelemetry Semantic Conventions ---

# OpenTelemetry semantic convention stability opt-in. Defaults to "gen_ai".
# Options:
#   - "gen_ai": Use new semantic conventions only (default)
#   - "gen_ai/dup": Emit both old and new token attributes for migration compatibility
# When set to "gen_ai/dup", both attribute sets are emitted:
#   - New: gen_ai.usage.prompt_tokens, gen_ai.usage.completion_tokens
#   - Old: gen_ai.usage.input_tokens, gen_ai.usage.output_tokens
# OTEL_SEMCONV_STABILITY_OPT_IN=gen_ai

# Enable content capture as span events. Defaults to "false".
# WARNING: When enabled, this captures full prompt and completion content as span events.
#          This may expose sensitive data. Use with caution and ensure proper data handling.
# GENAI_ENABLE_CONTENT_CAPTURE=false

# --- API Keys and Connection Strings ---

# LLM Provider API Keys
# OPENAI_API_KEY=your_openai_api_key
# ANTHROPIC_API_KEY=your_anthropic_api_key
# GOOGLE_API_KEY=your_google_api_key
# AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AWS_REGION=your_aws_region
# AZURE_OPENAI_API_KEY=your_azure_openai_api_key
# AZURE_OPENAI_ENDPOINT=your_azure_openai_endpoint
# COHERE_API_KEY=your_cohere_api_key
# MISTRAL_API_KEY=your_mistral_api_key
# TOGETHER_API_KEY=your_together_api_key
# GROQ_API_KEY=your_groq_api_key
# REPLICATE_API_TOKEN=your_replicate_api_token
# ANYSCALE_API_KEY=your_anyscale_api_key
# For Vertex AI, ensure GOOGLE_APPLICATION_CREDENTIALS environment variable is set to the path of your service account key file.

# MCP Instrumentation Connection Details

# Databases
# POSTGRES_USER=your_postgres_user
# POSTGRES_PASSWORD=your_postgres_password
# POSTGRES_HOST=your_postgres_host
# POSTGRES_PORT=5432
# POSTGRES_DB=your_postgres_db

# MYSQL_USER=your_mysql_user
# MYSQL_PASSWORD=your_mysql_password
# MYSQL_HOST=your_mysql_host
# MYSQL_PORT=3306
# MYSQL_DB=your_mysql_db

# MONGODB_URI=your_mongodb_connection_string

# Caching
# REDIS_HOST=your_redis_host
# REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password

# Message Queues
# KAFKA_BOOTSTRAP_SERVERS=your_kafka_bootstrap_servers

# Vector Databases
# PINECONE_API_KEY=your_pinecone_api_key
# PINECONE_ENVIRONMENT=your_pinecone_environment

# WEAVIATE_URL=your_weaviate_url
# WEAVIATE_API_KEY=your_weaviate_api_key

# QDRANT_URL=your_qdrant_url
# QDRANT_API_KEY=your_qdrant_api_key

# MILVUS_HOST=your_milvus_host
# MILVUS_PORT=19530