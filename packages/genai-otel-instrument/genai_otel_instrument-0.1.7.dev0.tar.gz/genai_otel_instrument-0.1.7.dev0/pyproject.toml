[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "genai-otel-instrument"
dynamic = ["version"]
description = "Comprehensive OpenTelemetry auto-instrumentation for LLM/GenAI applications"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "Kshitij Thakkar", email = "kshitijthakkar@rocketmail.com"}
]
keywords = [
    "opentelemetry",
    "observability",
    "llm",
    "genai",
    "instrumentation",
    "tracing",
    "metrics",
    "monitoring"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "opentelemetry-api>=1.20.0,<2.0.0",
    "opentelemetry-sdk>=1.20.0,<2.0.0",
    "opentelemetry-instrumentation>=0.41b0",
    "opentelemetry-semantic-conventions>=0.45b0,<1.0.0",
    "opentelemetry-exporter-otlp>=1.20.0",
    "opentelemetry-instrumentation-requests>=0.41b0",
    "opentelemetry-instrumentation-httpx>=0.41b0",
    "requests>=2.20.0",
    "wrapt>=1.14.0",
    "httpx>=0.23.0",
    # Database instrumentations and clients - required for MCP
    "opentelemetry-instrumentation-mysql>=0.41b0",
    "mysql-connector-python>=8.0.0,<9.0.0",
    "opentelemetry-instrumentation-psycopg2>=0.41b0",
    "psycopg2-binary>=2.9.0",
    "opentelemetry-instrumentation-redis>=0.41b0",
    "redis",
    "opentelemetry-instrumentation-pymongo>=0.41b0",
    "pymongo",
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "sqlalchemy>=1.4.0",
    "opentelemetry-instrumentation-kafka-python>=0.41b0",
    "kafka-python",
]

[project.optional-dependencies]
# OpenInference instrumentations (requires Python >= 3.10)
openinference = [
    "openinference-instrumentation==0.1.31",
    "openinference-instrumentation-litellm==0.1.19",
    "openinference-instrumentation-mcp==1.3.0",
    "openinference-instrumentation-smolagents==0.1.11",
    "litellm>=1.0.0"
]

gpu = [
    "nvidia-ml-py>=11.495.46",
    "codecarbon>=2.3.0"
]
co2 = ["codecarbon>=2.3.0"]
# Individual LLM providers
openai = ["openai>=1.0.0"]
anthropic = ["anthropic>=0.18.0"]
google = ["google-generativeai>=0.3.0"]
aws = ["boto3>=1.28.0"]
azure = ["azure-ai-openai>=1.0.0"]
cohere = ["cohere>=4.0.0"]
mistral = ["mistralai>=0.4.2"]
together = ["together>=0.2.0"]
groq = ["groq>=0.4.0"]
ollama = ["ollama>=0.1.0"]
replicate = ["replicate>=0.15.0"]

# LLM Frameworks
langchain = ["langchain>=0.1.0"]
llamaindex = ["llama-index>=0.9.0"]
huggingface = ["transformers>=4.30.0"]

# Database instrumentations
databases = [
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "sqlalchemy>=1.4.0",
    "opentelemetry-instrumentation-redis>=0.41b0",
    "redis",
    "opentelemetry-instrumentation-pymongo>=0.41b0",
    "pymongo",
    "opentelemetry-instrumentation-psycopg2>=0.41b0",
    "psycopg2-binary>=2.9.0",
    "opentelemetry-instrumentation-mysql>=0.41b0",
    "mysql-connector-python>=8.0.0,<9.0.0"
]

# Message queue instrumentation
messaging = [
    "opentelemetry-instrumentation-kafka-python>=0.41b0",
    "kafka-python",
]

# Vector databases
vector-dbs = [
    "pinecone>=3.0.0",
    "weaviate-client>=3.0.0",
    "qdrant-client>=1.0.0",
    "chromadb>=0.4.0",
    "pymilvus>=2.3.0",
    "faiss-cpu>=1.7.0",
]

# All LLM providers
all-providers = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "google-generativeai>=0.3.0",
    "boto3>=1.28.0",
    "azure-ai-openai>=1.0.0",
    "cohere>=4.0.0",
    "mistralai>=0.4.2",
    "together>=0.2.0",
    "groq>=0.4.0",
    "ollama>=0.1.0",
    "replicate>=0.15.0",
    "langchain>=0.1.0",
    "llama-index>=0.9.0",
    "transformers>=4.30.0",
    "litellm>=1.0.0",
]

# All MCP tools
all-mcp = [
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "opentelemetry-instrumentation-redis>=0.41b0",
    "opentelemetry-instrumentation-pymongo>=0.41b0",
    "opentelemetry-instrumentation-psycopg2>=0.41b0",
    "opentelemetry-instrumentation-mysql>=0.41b0",
    "opentelemetry-instrumentation-kafka-python>=0.41b0",
    "pinecone>=3.0.0",
    "weaviate-client>=3.0.0",
    "qdrant-client>=1.0.0",
    "chromadb>=0.4.0",
    "pymilvus>=2.3.0",
    "faiss-cpu>=1.7.0",
    "sqlalchemy"
]

# Everything
all = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "google-generativeai>=0.3.0",
    "boto3>=1.28.0",
    "azure-ai-openai>=1.0.0",
    "cohere>=4.0.0",
    "mistralai>=0.4.2",
    "together>=0.2.0",
    "groq>=0.4.0",
    "ollama>=0.1.0",
    "replicate>=0.15.0",
    "langchain>=0.1.0",
    "llama-index>=0.9.0",
    "transformers>=4.30.0",
    "nvidia-ml-py>=11.495.46",
    "opentelemetry-instrumentation-sqlalchemy>=0.41b0",
    "opentelemetry-instrumentation-redis>=0.41b0",
    "opentelemetry-instrumentation-pymongo>=0.41b0",
    "opentelemetry-instrumentation-psycopg2>=0.41b0",
    "opentelemetry-instrumentation-mysql>=0.41b0",
    "opentelemetry-instrumentation-kafka-python>=0.41b0",
    "pinecone>=3.0.0",
    "weaviate-client>=3.0.0",
    "qdrant-client>=1.0.0",
    "chromadb>=0.4.0",
    "pymilvus>=2.3.0",
    "faiss-cpu>=1.7.0",
    "sqlalchemy"
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pylint>=2.17.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.scripts]
genai-instrument = "genai_otel.cli:main"

[project.urls]
Homepage = "https://github.com/Mandark-droid/genai_otel_instrument"
Repository = "https://github.com/Mandark-droid/genai_otel_instrument"
Documentation = "https://github.com/Mandark-droid/genai_otel_instrument#readme"
Issues = "https://github.com/Mandark-droid/genai_otel_instrument/issues"
Changelog = "https://github.com/Mandark-droid/genai_otel_instrument/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["genai_otel", "genai_otel.instrumentors", "genai_otel.mcp_instrumentors"]

[tool.setuptools.package-data]
genai_otel = ["llm_pricing.json", "py.typed"]

[tool.setuptools_scm]
write_to = "genai_otel/__version__.py"
local_scheme = "no-local-version"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.pylint.messages_control]
max-line-length = 100
disable = ["C0111", "C0103"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=genai_otel --cov-report=html --cov-report=term"
filterwarnings = [
    "ignore::UserWarning:replicate.helpers",
]
