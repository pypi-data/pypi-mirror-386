import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "private/qquickrectangleshape_p.h"
        lineNumber: 25
        name: "QQuickRectangleShape"
        accessSemantics: "reference"
        defaultProperty: "data"
        prototype: "QQuickShape"
        exports: ["QtQuick.Shapes.DesignHelpers/RectangleShape 6.10"]
        exportMetaObjectRevisions: [1546]
        Enum {
            name: "BorderMode"
            values: ["Inside", "Middle", "Outside"]
        }
        Property {
            name: "radius"
            type: "int"
            read: "radius"
            write: "setRadius"
            notify: "radiusChanged"
            index: 0
        }
        Property {
            name: "topLeftRadius"
            type: "int"
            read: "topLeftRadius"
            write: "setTopLeftRadius"
            reset: "resetTopLeftRadius"
            notify: "topLeftRadiusChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "topRightRadius"
            type: "int"
            read: "topRightRadius"
            write: "setTopRightRadius"
            reset: "resetTopRightRadius"
            notify: "topRightRadiusChanged"
            index: 2
            isFinal: true
        }
        Property {
            name: "bottomLeftRadius"
            type: "int"
            read: "bottomLeftRadius"
            write: "setBottomLeftRadius"
            reset: "resetBottomLeftRadius"
            notify: "bottomLeftRadiusChanged"
            index: 3
            isFinal: true
        }
        Property {
            name: "bottomRightRadius"
            type: "int"
            read: "bottomRightRadius"
            write: "setBottomRightRadius"
            reset: "resetBottomRightRadius"
            notify: "bottomRightRadiusChanged"
            index: 4
            isFinal: true
        }
        Property {
            name: "bevel"
            type: "bool"
            read: "hasBevel"
            write: "setBevel"
            notify: "bevelChanged"
            index: 5
            isFinal: true
        }
        Property {
            name: "topLeftBevel"
            type: "bool"
            read: "hasTopLeftBevel"
            write: "setTopLeftBevel"
            reset: "resetTopLeftBevel"
            notify: "topLeftBevelChanged"
            index: 6
            isFinal: true
        }
        Property {
            name: "topRightBevel"
            type: "bool"
            read: "hasTopRightBevel"
            write: "setTopRightBevel"
            reset: "resetTopRightBevel"
            notify: "topRightBevelChanged"
            index: 7
            isFinal: true
        }
        Property {
            name: "bottomLeftBevel"
            type: "bool"
            read: "hasBottomLeftBevel"
            write: "setBottomLeftBevel"
            reset: "resetBottomLeftBevel"
            notify: "bottomLeftBevelChanged"
            index: 8
            isFinal: true
        }
        Property {
            name: "bottomRightBevel"
            type: "bool"
            read: "hasBottomRightBevel"
            write: "setBottomRightBevel"
            reset: "resetBottomRightBevel"
            notify: "bottomRightBevelChanged"
            index: 9
            isFinal: true
        }
        Property {
            name: "strokeColor"
            type: "QColor"
            read: "strokeColor"
            write: "setStrokeColor"
            notify: "strokeColorChanged"
            index: 10
            isFinal: true
        }
        Property {
            name: "strokeWidth"
            type: "double"
            read: "strokeWidth"
            write: "setStrokeWidth"
            notify: "strokeWidthChanged"
            index: 11
            isFinal: true
        }
        Property {
            name: "fillColor"
            type: "QColor"
            read: "fillColor"
            write: "setFillColor"
            notify: "fillColorChanged"
            index: 12
            isFinal: true
        }
        Property {
            name: "joinStyle"
            type: "QQuickShapePath::JoinStyle"
            read: "joinStyle"
            write: "setJoinStyle"
            notify: "joinStyleChanged"
            index: 13
            isFinal: true
        }
        Property {
            name: "capStyle"
            type: "QQuickShapePath::CapStyle"
            read: "capStyle"
            write: "setCapStyle"
            notify: "capStyleChanged"
            index: 14
            isFinal: true
        }
        Property {
            name: "strokeStyle"
            type: "QQuickShapePath::StrokeStyle"
            read: "strokeStyle"
            write: "setStrokeStyle"
            notify: "strokeStyleChanged"
            index: 15
            isFinal: true
        }
        Property {
            name: "dashOffset"
            type: "double"
            read: "dashOffset"
            write: "setDashOffset"
            notify: "dashOffsetChanged"
            index: 16
            isFinal: true
        }
        Property {
            name: "dashPattern"
            type: "double"
            isList: true
            read: "dashPattern"
            write: "setDashPattern"
            notify: "dashPatternChanged"
            index: 17
            isFinal: true
        }
        Property {
            name: "fillGradient"
            type: "QQuickShapeGradient"
            isPointer: true
            read: "fillGradient"
            write: "setFillGradient"
            reset: "resetFillGradient"
            index: 18
            isFinal: true
        }
        Property {
            name: "borderMode"
            type: "BorderMode"
            read: "borderMode"
            write: "setBorderMode"
            reset: "resetBorderMode"
            index: 19
            isFinal: true
        }
        Signal { name: "radiusChanged" }
        Signal { name: "topLeftRadiusChanged" }
        Signal { name: "topRightRadiusChanged" }
        Signal { name: "bottomLeftRadiusChanged" }
        Signal { name: "bottomRightRadiusChanged" }
        Signal { name: "bevelChanged" }
        Signal { name: "topLeftBevelChanged" }
        Signal { name: "topRightBevelChanged" }
        Signal { name: "bottomLeftBevelChanged" }
        Signal { name: "bottomRightBevelChanged" }
        Signal { name: "shapePathChanged" }
        Signal { name: "strokeColorChanged" }
        Signal { name: "strokeWidthChanged" }
        Signal { name: "fillColorChanged" }
        Signal { name: "fillRuleChanged" }
        Signal { name: "joinStyleChanged" }
        Signal { name: "capStyleChanged" }
        Signal { name: "strokeStyleChanged" }
        Signal { name: "dashOffsetChanged" }
        Signal { name: "dashPatternChanged" }
        Signal { name: "gradientChanged" }
        Signal { name: "borderModeChanged" }
    }
}
