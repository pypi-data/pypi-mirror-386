[
  {
    "number": 1,
    "title": "Set up uv workspace for monorepo",
    "labels": ["infrastructure", "mcp-server", "p0-critical"],
    "estimate": "2-4h",
    "blocked_by": [],
    "description": "Set up uv workspace configuration to enable monorepo management",
    "acceptance_criteria": [
      "Add [tool.uv.workspace] to root pyproject.toml",
      "Configure workspace members",
      "Verify uv sync works across both packages",
      "Document workspace setup"
    ]
  },
  {
    "number": 2,
    "title": "Create katana_mcp_server package structure",
    "labels": ["infrastructure", "mcp-server", "p0-critical"],
    "estimate": "2-3h",
    "blocked_by": [1],
    "description": "Create directory structure and initial files for katana-mcp-server package",
    "acceptance_criteria": [
      "Create src/katana_mcp/ with subdirectories",
      "Create pyproject.toml with dependencies",
      "Create README.md",
      "Verify package imports after uv sync"
    ]
  },
  {
    "number": 3,
    "title": "Implement basic FastMCP server with authentication",
    "labels": ["server", "mcp-server", "p0-critical"],
    "estimate": "4-6h",
    "blocked_by": [2],
    "description": "Create core FastMCP server with environment-based authentication",
    "acceptance_criteria": [
      "Create server.py with FastMCP initialization",
      "Implement environment-based authentication",
      "Initialize KatanaClient with error handling",
      "Write unit tests for server and auth"
    ]
  },
  {
    "number": 4,
    "title": "Implement check_inventory tool",
    "labels": ["tool", "inventory", "mcp-server", "p1-high"],
    "estimate": "4-6h",
    "blocked_by": [3],
    "description": "Implement tool to check stock levels for a specific SKU",
    "acceptance_criteria": [
      "Create tools/inventory.py",
      "Implement check_inventory(sku) with Pydantic model",
      "Add progress reporting",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 5,
    "title": "Implement list_low_stock_items tool",
    "labels": ["tool", "inventory", "mcp-server", "p1-high"],
    "estimate": "4-6h",
    "blocked_by": [4],
    "description": "Find products below their reorder point",
    "acceptance_criteria": [
      "Add list_low_stock_items(threshold) to inventory.py",
      "Implement pagination handling",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 6,
    "title": "Implement search_products tool",
    "labels": ["tool", "inventory", "mcp-server", "p2-medium"],
    "estimate": "4-6h",
    "blocked_by": [4],
    "description": "Search products by name or SKU",
    "acceptance_criteria": [
      "Add search_products(query, limit) to inventory.py",
      "Implement search logic",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 7,
    "title": "Implement create_sales_order tool",
    "labels": ["tool", "sales-orders", "mcp-server", "p1-high"],
    "estimate": "6-8h",
    "blocked_by": [3],
    "description": "Create new sales orders via MCP",
    "acceptance_criteria": [
      "Create tools/sales_orders.py",
      "Implement create_sales_order with comprehensive parameters",
      "Use Pydantic models for request/response",
      "Add validation and error handling",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 8,
    "title": "Implement get_sales_order_status tool",
    "labels": ["tool", "sales-orders", "mcp-server", "p1-high"],
    "estimate": "3-4h",
    "blocked_by": [7],
    "description": "Get details and status of a sales order",
    "acceptance_criteria": [
      "Add get_sales_order_status(order_id) to sales_orders.py",
      "Include detailed order information",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 9,
    "title": "Implement list_recent_sales_orders tool",
    "labels": ["tool", "sales-orders", "mcp-server", "p2-medium"],
    "estimate": "3-4h",
    "blocked_by": [7],
    "description": "List recent sales orders with filtering",
    "acceptance_criteria": [
      "Add list_recent_sales_orders(limit) to sales_orders.py",
      "Implement date filtering",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 10,
    "title": "Implement create_purchase_order tool",
    "labels": ["tool", "purchase-orders", "mcp-server", "p1-high"],
    "estimate": "6-8h",
    "blocked_by": [3],
    "description": "Create new purchase orders via MCP",
    "acceptance_criteria": [
      "Create tools/purchase_orders.py",
      "Implement create_purchase_order with comprehensive parameters",
      "Use Pydantic models for request/response",
      "Add validation and error handling",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 11,
    "title": "Implement get_purchase_order_status tool",
    "labels": ["tool", "purchase-orders", "mcp-server", "p1-high"],
    "estimate": "3-4h",
    "blocked_by": [10],
    "description": "Get details and status of a purchase order",
    "acceptance_criteria": [
      "Add get_purchase_order_status(order_id) to purchase_orders.py",
      "Include detailed PO information",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 12,
    "title": "Implement receive_purchase_order tool",
    "labels": ["tool", "purchase-orders", "mcp-server", "p1-high"],
    "estimate": "4-6h",
    "blocked_by": [10],
    "description": "Mark purchase order as received",
    "acceptance_criteria": [
      "Add receive_purchase_order(order_id) to purchase_orders.py",
      "Handle batch transactions if applicable",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 13,
    "title": "Implement create_manufacturing_order tool",
    "labels": ["tool", "manufacturing", "mcp-server", "p1-high"],
    "estimate": "6-8h",
    "blocked_by": [3],
    "description": "Create new manufacturing orders via MCP",
    "acceptance_criteria": [
      "Create tools/manufacturing.py",
      "Implement create_manufacturing_order with parameters",
      "Use Pydantic models for request/response",
      "Add validation and error handling",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 14,
    "title": "Implement get_manufacturing_order_status tool",
    "labels": ["tool", "manufacturing", "mcp-server", "p1-high"],
    "estimate": "3-4h",
    "blocked_by": [13],
    "description": "Get details and status of a manufacturing order",
    "acceptance_criteria": [
      "Add get_manufacturing_order_status(order_id) to manufacturing.py",
      "Include production details",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 15,
    "title": "Implement list_active_manufacturing_orders tool",
    "labels": ["tool", "manufacturing", "mcp-server", "p2-medium"],
    "estimate": "3-4h",
    "blocked_by": [13],
    "description": "List in-progress manufacturing orders",
    "acceptance_criteria": [
      "Add list_active_manufacturing_orders(limit) to manufacturing.py",
      "Filter by active status",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 16,
    "title": "Implement inventory resources",
    "labels": ["resource", "inventory", "mcp-server", "p2-medium"],
    "estimate": "4-6h",
    "blocked_by": [4],
    "description": "Create MCP resources for read-only inventory data",
    "acceptance_criteria": [
      "Create resources/inventory.py",
      "Implement inventory://products resource",
      "Implement inventory://stock/{sku} resource",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 17,
    "title": "Implement order resources",
    "labels": ["resource", "orders", "mcp-server", "p2-medium"],
    "estimate": "4-6h",
    "blocked_by": [8, 11],
    "description": "Create MCP resources for read-only order data",
    "acceptance_criteria": [
      "Create resources/orders.py",
      "Implement orders://sales resource",
      "Implement orders://purchase resource",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 18,
    "title": "Implement manufacturing resources",
    "labels": ["resource", "manufacturing", "mcp-server", "p2-medium"],
    "estimate": "4-6h",
    "blocked_by": [14],
    "description": "Create MCP resources for manufacturing data",
    "acceptance_criteria": [
      "Create resources/manufacturing.py",
      "Implement manufacturing://status resource",
      "Provide capacity overview",
      "Write unit and integration tests"
    ]
  },
  {
    "number": 19,
    "title": "Create workflow prompts",
    "labels": ["prompt", "mcp-server", "p2-medium"],
    "estimate": "4-6h",
    "blocked_by": [4, 7, 13],
    "description": "Create reusable workflow prompts for common tasks",
    "acceptance_criteria": [
      "Create prompts/workflows.py",
      "Implement check-low-stock prompt",
      "Implement create-order-from-template prompt",
      "Implement manufacturing-dashboard prompt",
      "Document prompt usage"
    ]
  },
  {
    "number": 20,
    "title": "Create comprehensive documentation",
    "labels": ["documentation", "mcp-server", "p0-critical"],
    "estimate": "6-8h",
    "blocked_by": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19],
    "description": "Document all tools, resources, and prompts",
    "acceptance_criteria": [
      "Create docs/mcp-server/GUIDE.md",
      "Document all 12 tools with examples",
      "Document all 5 resources",
      "Document all prompts",
      "Add configuration guide",
      "Add troubleshooting section"
    ]
  },
  {
    "number": 21,
    "title": "Add integration tests for end-to-end workflows",
    "labels": ["testing", "mcp-server", "p1-high"],
    "estimate": "6-8h",
    "blocked_by": [4, 7, 10, 13],
    "description": "Test multi-tool workflows end-to-end",
    "acceptance_criteria": [
      "Create katana_mcp_server/tests/integration/",
      "Test multi-tool workflows",
      "Test error scenarios",
      "Test authentication",
      "Add CI/CD integration"
    ]
  },
  {
    "number": 22,
    "title": "Create usage examples for Claude Code",
    "labels": ["documentation", "examples", "mcp-server", "p2-medium"],
    "estimate": "3-4h",
    "blocked_by": [20],
    "description": "Provide examples for using MCP server with Claude Code",
    "acceptance_criteria": [
      "Create examples/mcp_examples/",
      "Add example Claude Code configurations",
      "Add example conversations/workflows",
      "Document common patterns"
    ]
  },
  {
    "number": 23,
    "title": "Set up PyPI publishing for katana-mcp-server",
    "labels": ["infrastructure", "release", "mcp-server", "p1-high"],
    "estimate": "3-4h",
    "blocked_by": [2],
    "description": "Configure automated PyPI publishing for MCP server package",
    "acceptance_criteria": [
      "Update release workflow to publish both packages",
      "Add version compatibility checks",
      "Test publishing to Test PyPI",
      "Document release process"
    ]
  },
  {
    "number": 24,
    "title": "Create MCP server v0.1.0 release checklist",
    "labels": ["release", "mcp-server", "p0-critical"],
    "estimate": "4-6h",
    "blocked_by": [20, 21, 22, 23],
    "description": "Final verification and release of v0.1.0",
    "acceptance_criteria": [
      "Verify all 12 tools implemented",
      "Verify all 5 resources implemented",
      "Verify 80%+ test coverage",
      "Verify documentation complete",
      "Test with real Katana API",
      "Create release notes",
      "Publish to PyPI"
    ]
  }
]
