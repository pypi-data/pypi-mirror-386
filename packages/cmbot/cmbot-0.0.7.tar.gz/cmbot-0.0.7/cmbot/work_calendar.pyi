# This file was generated by Nuitka

# Stubs included by default
from __future__ import annotations
from typing import Any, Optional, Union
from typing_extensions import Self
import datetime

class WorkCalendar:
    def __new__(cls: cls) -> Any: ...
    def __init__(self: Self, calendar_data: Optional[dict], auto_generate_calendar: bool, date_format: str, year: Optional[int]) -> None: ...
    def change_calendar(self: Self, cal: Any) -> Any: ...
    def __work_day(self: Self, direct: Any) -> Any: ...
    def previous_work_day(self: Self) -> Any: ...
    def next_work_day(self: Self) -> Any: ...
    def is_work_day(self: Self, date: Optional[Union[str, datetime.date, datetime.datetime]]) -> Any: ...
    def _generate_date_dict(self: Self, start: str, end: str, value: Optional[int]) -> dict: ...
    def _generate_calendar(self: Self, year: Any) -> Any: ...
    def adjust(self: Self, new_value: dict) -> Any: ...


__name__ = ...



# Modules used internally, to allow implicit dependencies to be seen:
import datetime
import typing