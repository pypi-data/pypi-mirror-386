[project]
name = "dftracer-utils"
dynamic = ["version"]
description = "Python binding for dftracer-utils"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Ray Andrew Sinurat", email = "raydreww@gmail.com" },
    { name = "Hariharan Devarajan (Hari)", email = "hariharandev1@llnl.gov" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: C++",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
dev = [
  "pytest>=6.0",
  "ruff",
  "dask[bag,dataframe,distributed]>=2024.1.0,<2025; python_version >= '3.9' and python_version < '3.14'",
  "dask_jobqueue~=0.8.0; python_version >= '3.9' and python_version < '3.14'"
]

[build-system]
requires = ["scikit-build-core >=0.10"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
minimum-version = "build-system.requires"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Package discovery
wheel.packages = ["python/dftracer"]
sdist.include = ["python/dftracer/utils/_version.py", "cmake/tests"]
sdist.exclude = [
  "tests/**",
  "*.DS_Store",
  "*.sh",
  "*.gz",
  "*.tar.gz",
  ".github",
  ".gitignore",
  "*.nix",
  ".envrc",
  "Makefile",
  "MANIFEST.in",
  "*test*",
  "temp*",
  ".clang-*",
  "*.lock",
  "*.venv*",
  "*venv*",
  "*.env",
  "*.egg-info",
  "DEVELOPERS_GUIDE.md",
  "DOCUMENTATION_SETUP.md",
  "docs",
  "Doxygen",
  ".readthedocs.yaml",
]

cmake.build-type = "Release"

[tool.cibuildwheel]
build-verbosity = 1
before-test = [
  "pip install tomli",
  "python -c 'import tomli, subprocess, sys; subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\"] + tomli.load(open(\"pyproject.toml\", \"rb\"))[\"project\"][\"optional-dependencies\"][\"dev\"])'"
]
test-command = "pytest {project}/tests"
test-requires = "pytest"

# @note: enable this if you are using nix, see issue https://github.com/matthew-brett/delocate/issues/247
# [tool.cibuildwheel.macos]
# dependency-versions = { packages = ["delocate==0.12.0"] }

[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "11.3"

[tool.setuptools_scm]
local_scheme = "no-local-version"
version_file = "python/dftracer/utils/_version.py"
