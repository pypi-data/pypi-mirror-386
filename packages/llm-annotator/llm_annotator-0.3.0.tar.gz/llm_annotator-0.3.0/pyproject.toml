[project]
name = "llm-annotator"
dynamic = ["version"]
description = "An easy-to-extend LLM annotator for robust, resumable data annotation."
readme = "README.md"
authors = [
    { name = "Bram Vanroy", email = "2779410+BramVanroy@users.noreply.github.com" }
]
license = "Apache-2.0"
license-files = ["LICEN[CS]E*"]
requires-python = ">=3.12"
dependencies = [
    "datasets>=4.1.1,<5",
    "hf-transfer>=0.1.9,<1",
    "hf-xet>=1.1.10,<2",
    "vllm>=0.11,<0.12",
]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.2,<9",
    "pytest-cov>=7.0.0,<8",
    "ruff>=0.13.1,<0.14",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = { commit = true, tags = true }}]

[tool.ruff]
line-length = 119

[tool.ruff.lint]
ignore = ["C901", "E501", "E741", "F402", "F823", "E402"]
select = ["C", "E", "F", "W", "I"]

# Ignore import violations in all `__init__.py` files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["llm_annotator"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=llm_annotator",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (may require model loading or longer runtime)",
    "integration: marks tests that interact with external systems (Hugging Face Hub, network, or real-model runtimes). These tests require an authenticated Hugging Face account (for example via `hf auth login` or a `HUGGINGFACE_HUB_TOKEN`/`HF_TOKEN` in CI) and may perform uploads/deletions; tests attempt to clean up after themselves.",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
