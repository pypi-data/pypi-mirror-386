{
  "nav": {
    "home": "首页",
    "playground": "试用平台",
    "documentation": "文档",
    "github": "GitHub",
    "status_checking": "检查中...",
    "status_online": "在线",
    "status_offline": "离线"
  },
  "common": {
    "loading": "加载中...",
    "error": "错误",
    "success": "成功",
    "warning": "警告",
    "info": "信息",
    "close": "关闭",
    "save": "保存",
    "cancel": "取消",
    "confirm": "确认",
    "download": "下载",
    "upload": "上传",
    "generate": "生成",
    "play": "播放",
    "stop": "停止",
    "pause": "暂停",
    "resume": "继续",
    "clear": "清除",
    "reset": "重置",
    "copy": "复制",
    "copied": "已复制！",
    "language": "语言",
    "english": "English",
    "chinese": "中文",
    "validate": "验证",
    "options": "选项",
    "max_length": "最大长度",
    "tip": "提示",
    "choose_voice": "从可用声音中选择",
    "select_format": "选择您偏好的音频格式",
    "loading_voices": "加载声音中...",
    "loading_formats": "加载格式中...",
    "ctrl_enter_tip": "使用 Ctrl+Enter 生成",
    "auto_combine_enabled": "自动合并已启用"
  },
  "home": {
    "title": "免费的Python文本转语音",
    "subtitle": "使用免费的openai.fm服务从文本生成高质量语音。无需API密钥，无需注册 - 只需安装即可开始创建音频。",
    "try_demo": "试用演示",
    "documentation": "文档",
    "github": "GitHub",
    "features_title": "主要特性",
    "features_subtitle": "简单、免费且强大的Python开发者文本转语音工具。",
    "feature_free_title": "完全免费",
    "feature_free_desc": "无需API密钥或注册。使用免费的openai.fm服务。",
    "feature_voices_title": "11种声音",
    "feature_voices_desc": "提供所有OpenAI兼容的声音，适用于不同使用场景。",
    "feature_formats_title": "6种音频格式",
    "feature_formats_desc": "支持MP3、WAV、OPUS、AAC、FLAC和PCM格式，适用于任何应用。",
    "feature_docker_title": "Docker就绪",
    "feature_docker_desc": "一键部署，包含Web界面和API端点。",
    "feature_openai_title": "OpenAI兼容",
    "feature_openai_desc": "OpenAI TTS API的直接替代品，支持长文本自动合并。",
    "feature_async_title": "异步和同步",
    "feature_async_desc": "提供asyncio和同步客户端，最大化灵活性。",
    "quick_start_title": "快速开始",
    "installation_title": "安装",
    "installation_code": "pip install ttsfm",
    "usage_title": "基本用法",
    "docker_title": "Docker部署",
    "docker_desc": "运行带有Web界面的TTSFM：",
    "api_title": "OpenAI兼容API",
    "api_desc": "与OpenAI Python客户端一起使用：",
    "footer_copyright": "© 2024 dbcccc"
  },
  "playground": {
    "title": "交互式TTS试用平台",
    "subtitle": "实时测试不同的声音和音频格式",
    "text_input_label": "要转换的文本",
    "text_input_placeholder": "输入您想要转换为语音的文本...",
    "voice_label": "声音",
    "format_label": "音频格式",
    "instructions_label": "声音指令（可选）",
    "instructions_placeholder": "语音生成的额外指令...",
    "character_count": "字符",
    "max_length_warning": "文本超过最大长度。将自动分割并合并。",
    "generate_speech": "生成语音",
    "generating": "生成中...",
    "download_audio": "下载音频",
    "audio_player_title": "生成的音频",
    "file_size": "文件大小",
    "duration": "时长",
    "format": "格式",
    "voice": "声音",
    "chunks_combined": "合并片段",
    "random_text": "随机文本",
    "clear_text": "清除文本",
    "max_length_description": "每个请求的最大字符数（默认：1000）",
    "enable_length_validation": "启用长度验证",
    "auto_combine_long_text": "自动合并长文本",
    "auto_combine_tooltip": "自动分割长文本并将音频片段合并为单个文件",
    "auto_combine_description": "自动处理超过限制的文本",
    "instructions_description": "为声音调制提供可选指令",
    "api_key_optional": "API密钥（可选）",
    "api_key_placeholder": "如果需要，请输入您的API密钥",
    "api_key_description": "仅在服务器启用API密钥保护时需要",
    "sample_texts": {
      "welcome": "欢迎使用TTSFM！这是一个免费的文本转语音服务，使用先进的AI技术将您的文本转换为高质量音频。",
      "story": "很久很久以前，在一个遥远的数字世界里，住着一个小小的Python包，它能够将任何文本转换成美妙的语音。这个包叫做TTSFM，它为世界各地的开发者带来了快乐。",
      "technical": "TTSFM是一个用于文本转语音API的Python客户端，提供同步和异步接口。它支持多种声音和音频格式，非常适合各种应用。",
      "multilingual": "TTSFM支持多种语言和声音，让您能够为全球受众创建多样化的音频内容。该服务完全免费，无需API密钥。",
      "long": "这是一个较长的文本示例，用于测试TTSFM的自动合并功能。当文本超过最大长度限制时，TTSFM会自动将其分割成较小的片段，为每个片段生成音频，然后无缝地将它们合并成一个音频文件。这个过程对用户完全透明，确保您可以转换任何长度的文本，而无需担心技术限制。生成的音频在整个内容中保持一致的质量和自然的流畅性。"
    },
    "error_messages": {
      "empty_text": "请输入要转换的文本。",
      "generation_failed": "语音生成失败。请重试。",
      "network_error": "网络错误。请检查您的连接并重试。",
      "invalid_format": "选择的音频格式无效。",
      "invalid_voice": "选择的声音无效。",
      "text_too_long": "文本太长。请减少长度或启用自动合并。",
      "server_error": "服务器错误。请稍后重试。"
    },
    "success_messages": {
      "generation_complete": "语音生成成功！",
      "text_copied": "文本已复制到剪贴板！",
      "download_started": "下载已开始！"
    }
  },
  "docs": {
    "title": "API文档",
    "subtitle": "TTSFM文本转语音API的完整参考。免费、简单且强大。",
    "contents": "目录",
    "overview": "概述",
    "authentication": "身份验证",
    "text_validation": "文本验证",
    "endpoints": "API端点",
    "voices": "声音",
    "formats": "音频格式",
    "generate": "生成语音",
    "combined": "合并音频",
    "status": "状态和健康检查",
    "errors": "错误处理",
    "examples": "代码示例",
    "python_package": "Python包",
    "overview_title": "概述",
    "overview_desc": "TTSFM API提供现代的、OpenAI兼容的文本转语音生成接口。它支持多种声音、音频格式，并包含高级功能，如文本长度验证和智能自动合并功能。",
    "base_url": "基础URL：",
    "key_features": "主要特性",
    "feature_voices": "11种不同的声音选项 - 从alloy、echo、nova等中选择",
    "feature_formats": "多种音频格式 - 支持MP3、WAV、OPUS、AAC、FLAC、PCM",
    "feature_openai": "OpenAI兼容性 - OpenAI TTS API的直接替代品",
    "feature_auto_combine": "自动合并功能 - 自动处理长文本（>1000字符），通过分割和合并音频",
    "feature_validation": "文本长度验证 - 智能验证，可配置限制",
    "feature_monitoring": "实时监控 - 状态端点和健康检查",
    "new_version": "v3.3.1新功能：",
    "new_version_desc": "运行时镜像现已内置 ffmpeg，MP3 自动合并可立即使用；默认长文本上限调整为 1000 字符，保证播报行为一致。",
    "authentication_title": "身份验证",
    "authentication_desc": "目前，API支持可选的API密钥身份验证。如果已配置，请在请求头中包含您的API密钥。",
    "text_validation_title": "文本长度验证",
    "text_validation_desc": "TTSFM包含内置的文本长度验证，以确保与TTS模型的兼容性。默认最大长度为1000个字符，但可以自定义。",
    "important": "重要：",
    "text_validation_warning": "超过最大长度的文本将被拒绝，除非禁用验证或将文本分割成块。",
    "validation_options": "验证选项",
    "max_length_option": "允许的最大字符数（默认：1000）",
    "validate_length_option": "启用/禁用验证（默认：true）",
    "preserve_words_option": "分块时避免分割单词（默认：true）",
    "endpoints_title": "API端点",
    "get_voices_desc": "获取可用声音列表。",
    "get_formats_desc": "获取支持的音频格式列表。",
    "validate_text_desc": "验证文本长度并获取分割建议。",
    "generate_speech_desc": "从文本生成语音。",
    "response_example": "响应示例：",
    "request_body": "请求体：",
    "parameters": "参数：",
    "text_param": "要转换为语音的文本",
    "voice_param": "声音ID（默认：\"alloy\"）",
    "format_param": "音频格式（默认：\"mp3\"）",
    "instructions_param": "声音调制指令",
    "max_length_param": "最大文本长度（默认：1000）",
    "validate_length_param": "启用验证（默认：true）",
    "response": "响应：",
    "response_audio": "返回带有适当Content-Type头的音频文件。",
    "response_combined_audio": "返回包含所有块无缝合并的单个音频文件。",
    "required": "必需",
    "optional": "可选",
    "python_package_title": "Python包",
    "long_text_support": "长文本支持",
    "long_text_desc": "TTSFM Python包包含内置的长文本分割功能，为需要精细控制的开发者提供支持：",
    "developer_features": "开发者功能：",
    "manual_splitting": "手动分割：对高级用例的文本分块进行完全控制",
    "word_preservation": "单词保护：维护单词边界以获得自然语音",
    "separate_files": "单独文件：每个块保存为单独的音频文件",
    "cli_support": "CLI支持：使用`--split-long-text`标志进行命令行使用",
    "note": "注意：",
    "auto_combine_note": "对于Web用户，建议使用`/v1/audio/speech`中的自动合并功能，因为它会自动处理长文本并返回单个无缝音频文件。",
    "combined_audio_desc": "从长文本生成单个合并的音频文件。自动将文本分割成块，为每个块生成语音，并将它们合并成一个无缝的音频文件。",
    "response_headers": "响应头：",
    "chunks_combined_header": "合并的块数",
    "original_text_length_header": "原始文本长度（字符数）",
    "audio_size_header": "最终音频文件大小（字节）",
    "openai_compatible_desc": "增强的OpenAI兼容端点，具有自动合并功能。在需要时自动处理长文本，通过分割和合并音频块。",
    "enhanced_parameters": "增强参数：",
    "auto_combine_param": "自动分割长文本并将音频块合并为单个文件",
    "auto_combine_false": "如果文本超过max_length则返回错误（标准OpenAI行为）",
    "max_length_chunk_param": "分割时每个块的最大字符数",
    "auto_combine_header": "是否启用了自动合并（true/false）",
    "chunks_combined_response": "合并的音频块数（短文本为1）",
    "original_text_response": "原始文本长度（用于长文本处理）",
    "audio_format_header": "响应的音频格式",
    "audio_size_response": "音频文件大小（字节）",
    "short_text_comment": "短文本（正常工作）",
    "long_text_auto_comment": "带自动合并的长文本（默认）",
    "long_text_no_auto_comment": "不带自动合并的长文本（将出错）",
    "audio_combination": "音频合并：",
    "audio_combination_desc": "在可用时使用高级音频处理（PyDub），在不同环境中具有智能回退。支持所有音频格式。",
    "use_cases": "使用场景：",
    "use_case_articles": "长文章：将博客文章或文章转换为单个音频文件",
    "use_case_audiobooks": "有声书：将章节生成为单个音频文件",
    "use_case_podcasts": "播客：从脚本创建播客剧集",
    "use_case_education": "教育内容：将学习材料转换为音频",
    "example_usage": "使用示例：",
    "python_example_comment": "Python示例",
    "operations": "运行须知",
    "operational_title": "运行须知",
    "operational_limit": "启用 auto_combine 时，超过 1000 字符的请求会自动拆分；若需自行控制分块，可关闭校验。",
    "operational_fallback": "MP3 请求保持 MP3，OPUS/AAC/FLAC/WAV/PCM 等格式会回退为 WAV，确保播放稳定。",
    "operational_backend": "语音由第三方 openai.fm 提供，服务可能波动，请在业务中预留降级策略。",
    "operational_ffmpeg": "Docker 镜像已内置 ffmpeg，无需额外配置即可完成 MP3 自动合并。"
  }
}