[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[project]
name = "req-update-check"
version = "0.3.0"
description = "Check Python package requirements for updates with optional AI-powered analysis"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    { name = "PJ Hoberman", email = "phoberman@outsideinc.com" }
]
dependencies = [
    "requests>=2.31.0"
]

[project.optional-dependencies]
ai = [
    "anthropic>=0.40.0",
    "google-generativeai>=0.8.0",
    "openai>=1.0.0",
]
dev = [
    "coverage>=7.0.0",
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "respx>=0.21.0",  # Mock HTTP for tests
    "ruff>=0.1.0",
]
all = [
    "req-update-check[ai]",
]

[project.urls]
homepage = "https://github.com/ontherivt/req-update-check"
issues = "https://github.com/ontherivt/req-update-check/issues"

[project.scripts]
req-update-check = "req_update_check.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/req_update_check"]

# ==== Coverage ====
[tool.coverage.run]
include = ["src/**"]
#omit = ["*/migrations/*", "*/tests/*"]
#plugins = ["django_coverage_plugin"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    'ISC',
    "ICN",
    "G",
    'INP',
    'PIE',
    "T20",
    'PYI',
    'PT',
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    # "ARG", # Unused function argument
    "PTH",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY",
    # "AIR",
    "PERF",
    # "FURB",
    # "LOG",
    "RUF",
]
ignore = [
    "S101", # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "SIM102", # sometimes it's better to nest
    "UP038", # Checks for uses of isinstance/issubclass that take a tuple
    # of types for comparison.
    # Deactivated because it can make the code slow:
    # https://github.com/astral-sh/ruff/issues/7871
    "DJ001",
    "PT009",
    "FBT001",
    "FBT002",
    "PTH123",
    "G004",  # use of f-string in log statements
    "PT027",  # use pytest.raises
    "SLF001",  # private member accessed
    "EM101",  # exception uses string literal
    "TRY003",  # long messages outside the exception class
    "PLR2004",  # magic value in comparison
    "EM102",  # no f-strings in exceptions
    "COM812",  # Conflicts with formatter
    "ISC001",  # Conflicts with formatter
]
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    "UP038",
]

[tool.ruff.lint.isort]
force-single-line = true
