[tool.poetry]
name = "{{ project_name }}"
version = "0.1.0"
description = "A Django project scaffolded by QuickScale"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "{{ project_name }}"}]

[tool.poetry.dependencies]
python = "^3.12"
Django = ">=5.0,<6.0"
psycopg2-binary = "^2.9.9"
python-decouple = "^3.8"
whitenoise = "^6.6.0"
gunicorn = "^21.2.0"
dj-database-url = "^2.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-django = "^4.7.0"
pytest-cov = "^4.1.0"
factory-boy = "^3.3.0"
ruff = "^0.1.9"
mypy = "^1.8.0"
django-stubs = "^4.2.7"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ project_name }}.settings.local"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --cov={{ project_name }} --cov-report=term-missing --cov-report=html"

[tool.ruff]
line-length = 100
target-version = "py312"
exclude = [
    ".git",
    ".venv",
    ".pytest_cache",
    "__pycache__",
    "migrations",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by ruff format)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "{{ project_name }}.settings.local"
