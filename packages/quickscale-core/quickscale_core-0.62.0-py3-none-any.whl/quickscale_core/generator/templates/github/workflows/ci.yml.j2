name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        django-version: ["4.2", "5.0"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-{% raw %}${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}{% endraw %}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Install Django {% raw %}${{ matrix.django-version }}{% endraw %}
      run: poetry add "Django~={% raw %}${{ matrix.django-version }}{% endraw %}" --group dev

    - name: Run ruff format check
      run: poetry run ruff format --check .

    - name: Run ruff linter
      run: poetry run ruff check .

    - name: Run tests with coverage
      run: poetry run pytest --cov={{ project_name }} --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12' && matrix.django-version == '5.0'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
