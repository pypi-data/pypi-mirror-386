[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "instant-python"
version = "0.12.1"
description = "Instant boilerplate generation for Python projects"
readme = "README.md"
license = { file = "LICENSE" }
authors = [{name = "dimanu-py", email = "dimanu.py@gmail.com"}]
requires-python = ">=3.9"
dependencies = [
    "typer>=0.15.1",
    "jinja2>=3.1.6",
    "questionary>=2.1.0",
    "pyyaml>=6.0.2",
]
classifiers = [
    "Environment :: Console",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Shells",
    "Intended Audience :: Developers",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Operating System :: Microsoft :: Windows",
]

include = [
    "instant_python/templates/**/*",
]

[project.urls]
documentation = "https://dimanu-py.github.io/instant-python/"
repository = "https://github.com/dimanu-py/instant-python/"

[project.scripts]
ipy = "instant_python.cli.cli:app"

[dependency-groups]
dev = [
    {include-group = "docs"},
    {include-group = "git"},
    {include-group = "lint"},
    {include-group = "release"},
    {include-group = "test"},
]

docs = [
    "mkdocs>=1.6.1",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-macros-plugin>=1.3.7",
    "mkdocs-material>=9.6.8",
    "mkdocs-section-index>=0.3.10",
]
git = [
    "commitizen>=4.2.2",
]
lint = [
    "mypy>=1.16.0",
    "pip-audit>=2.9.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.12",
]
release = [
    "python-semantic-release>=10.2.0",
]
test = [
    "approvaltests>=14.6.0",
    "doublex>=1.9.6.1",
    "doublex-expects>=0.7.1",
    "expects>=0.9.0",
    "faker>=37.3.0",
    "pytest>=8.3.5",
    "pytest-sugar>=1.0.0",
    "pytest-watch>=4.2.0",
    "tox>=4.25.0",
    "vermin>=1.6.0",
]

[project.optional-dependencies]
build = ["uv>=0.7.21"]

[tool.uv]
constraint-dependencies = [
    "requests>=2.32.4",
    "urllib3>=2.5.0",
]

[tool.ruff]
exclude = ["instant_python/templates/**", "test/**/resources/**"]
line-length = 120

[tools.pytest.ini_options]
testpaths = ["tests"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
commit_message = "bump: new version {version} created"
commit_parser = "conventional"
major_on_zero = false
allow_zero_version = true
no_git_verify = false
tag_format = "{version}"
build_command = """
    python -m pip install -e '.[build]'
    uv lock --upgrade-package instant-python
    git add uv.lock
"""

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "refactor", "test", "build"]
allowed_tags = ["feat", "fix", "refactor", "perf", "build"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = true

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = ['''^Merge pull request #''', '''^Merge branch ''']
mode = "update"
template_dir = "docs/changelog"