{'src': {'__init__.py': '', 'application': {'__init__.py': ''}, 'domain': {'__init__.py': '', 'exceptions': {'__init__.py': '', 'domain_error.py': 'from abc import ABC\n\n\nclass DomainError(Exception, ABC):\n    def __init__(self, message: str, error_type: str) -> None:\n        self._message = message\n        self._type = error_type\n        super().__init__(self._message)\n\n    @property\n    def type(self) -> str:\n        return self._type\n\n    @property\n    def message(self) -> str:\n        return self._message\n\n    def to_primitives(self) -> dict[str, str]:\n        return {\n            "type": self.type,\n            "message": self.message,\n        }'}}}}
