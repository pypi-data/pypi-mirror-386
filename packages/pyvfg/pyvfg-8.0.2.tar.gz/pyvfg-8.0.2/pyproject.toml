[project]
name = "pyvfg"
version = "8.0.2"
description = ""
readme = "README.md"
# 3.11 is required for pyvfg for *clients* to be able to freely use this library with, ex, openai gym.
requires-python = ">= 3.11"
dependencies = [
    "uv_build",
    "pydantic>=2.8.2",
    "dataclass-wizard>=0.35.1",
    "jsonpatch>=1.33",
    "networkx~=3.4.2",
    "scipy~=1.14.1",
    "numpy~=1.26.4",
    "deprecation~=2.1.0",
    "pathlib>=1.0.1",
]

# The first author is shown on pypi.org, and this provides a general contact email address for pyvfg
[[project.authors]]
name = "VERSES"
email = "info@verses.ai"

[[project.authors]]
name = "Jasmine Moore"
email = "jasmine.moore@verses.ai"

[[project.authors]]
name = "Alex Kiefer"
email = "alex.kiefer@verses.ai"

[[project.authors]]
name = "Alessandro Muzzi"
email = "alessandro.muzzi@verses.ai"

[build-system]
requires = ["uv_build>=0.7.9,<0.8.0"]
build-backend = "uv_build"

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-cov>=6.2.1",
    "coverage>=7.9.2",
    "pytest-benchmark>=5.1.0",
    "pre-commit>=4.2.0",
    "jsonschema~=4.23.0",
    "ruff~=0.11.11",
]

[tool.coverage.run]
# Specifies the source code to measure coverage for.
source = ["pyvfg"]

[tool.coverage.report]
# Fails the run if the total coverage is below this threshold.
fail_under = 80
# Shows the line numbers of missing statements in the terminal report.
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov=pyvfg --cov-report=term-missing --cov-report=html"
filterwarnings = [
    "always::ResourceWarning"
]
markers = [
    "unit",
    "dump_vfg_on_failure(vfg_name, vfg): Dump the passed file on test failure.",
    "clean_vfg_on_failure(vfg): Cleans the passed VFG 2.0.0 on test failure."
]

[tool.ruff]
line-length = 120

[tool.ty.src]
exclude = ["tests/versions/v_0_5_0/**", "src/pyvfg/versions/v_0_5_0/**"]