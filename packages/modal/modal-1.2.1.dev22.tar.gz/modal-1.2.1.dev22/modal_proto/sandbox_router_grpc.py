# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: modal_proto/sandbox_router.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import modal_proto.api_pb2
import modal_proto.sandbox_router_pb2


class SandboxRouterBase(abc.ABC):

    @abc.abstractmethod
    async def SandboxExecPoll(self, stream: 'grpclib.server.Stream[modal_proto.sandbox_router_pb2.SandboxExecPollRequest, modal_proto.sandbox_router_pb2.SandboxExecPollResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SandboxExecStart(self, stream: 'grpclib.server.Stream[modal_proto.sandbox_router_pb2.SandboxExecStartRequest, modal_proto.sandbox_router_pb2.SandboxExecStartResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SandboxExecStdinWrite(self, stream: 'grpclib.server.Stream[modal_proto.sandbox_router_pb2.SandboxExecStdinWriteRequest, modal_proto.sandbox_router_pb2.SandboxExecStdinWriteResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SandboxExecStdioRead(self, stream: 'grpclib.server.Stream[modal_proto.sandbox_router_pb2.SandboxExecStdioReadRequest, modal_proto.sandbox_router_pb2.SandboxExecStdioReadResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SandboxExecWait(self, stream: 'grpclib.server.Stream[modal_proto.sandbox_router_pb2.SandboxExecWaitRequest, modal_proto.sandbox_router_pb2.SandboxExecWaitResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/modal.sandbox_router.SandboxRouter/SandboxExecPoll': grpclib.const.Handler(
                self.SandboxExecPoll,
                grpclib.const.Cardinality.UNARY_UNARY,
                modal_proto.sandbox_router_pb2.SandboxExecPollRequest,
                modal_proto.sandbox_router_pb2.SandboxExecPollResponse,
            ),
            '/modal.sandbox_router.SandboxRouter/SandboxExecStart': grpclib.const.Handler(
                self.SandboxExecStart,
                grpclib.const.Cardinality.UNARY_UNARY,
                modal_proto.sandbox_router_pb2.SandboxExecStartRequest,
                modal_proto.sandbox_router_pb2.SandboxExecStartResponse,
            ),
            '/modal.sandbox_router.SandboxRouter/SandboxExecStdinWrite': grpclib.const.Handler(
                self.SandboxExecStdinWrite,
                grpclib.const.Cardinality.UNARY_UNARY,
                modal_proto.sandbox_router_pb2.SandboxExecStdinWriteRequest,
                modal_proto.sandbox_router_pb2.SandboxExecStdinWriteResponse,
            ),
            '/modal.sandbox_router.SandboxRouter/SandboxExecStdioRead': grpclib.const.Handler(
                self.SandboxExecStdioRead,
                grpclib.const.Cardinality.UNARY_STREAM,
                modal_proto.sandbox_router_pb2.SandboxExecStdioReadRequest,
                modal_proto.sandbox_router_pb2.SandboxExecStdioReadResponse,
            ),
            '/modal.sandbox_router.SandboxRouter/SandboxExecWait': grpclib.const.Handler(
                self.SandboxExecWait,
                grpclib.const.Cardinality.UNARY_UNARY,
                modal_proto.sandbox_router_pb2.SandboxExecWaitRequest,
                modal_proto.sandbox_router_pb2.SandboxExecWaitResponse,
            ),
        }


class SandboxRouterStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.SandboxExecPoll = grpclib.client.UnaryUnaryMethod(
            channel,
            '/modal.sandbox_router.SandboxRouter/SandboxExecPoll',
            modal_proto.sandbox_router_pb2.SandboxExecPollRequest,
            modal_proto.sandbox_router_pb2.SandboxExecPollResponse,
        )
        self.SandboxExecStart = grpclib.client.UnaryUnaryMethod(
            channel,
            '/modal.sandbox_router.SandboxRouter/SandboxExecStart',
            modal_proto.sandbox_router_pb2.SandboxExecStartRequest,
            modal_proto.sandbox_router_pb2.SandboxExecStartResponse,
        )
        self.SandboxExecStdinWrite = grpclib.client.UnaryUnaryMethod(
            channel,
            '/modal.sandbox_router.SandboxRouter/SandboxExecStdinWrite',
            modal_proto.sandbox_router_pb2.SandboxExecStdinWriteRequest,
            modal_proto.sandbox_router_pb2.SandboxExecStdinWriteResponse,
        )
        self.SandboxExecStdioRead = grpclib.client.UnaryStreamMethod(
            channel,
            '/modal.sandbox_router.SandboxRouter/SandboxExecStdioRead',
            modal_proto.sandbox_router_pb2.SandboxExecStdioReadRequest,
            modal_proto.sandbox_router_pb2.SandboxExecStdioReadResponse,
        )
        self.SandboxExecWait = grpclib.client.UnaryUnaryMethod(
            channel,
            '/modal.sandbox_router.SandboxRouter/SandboxExecWait',
            modal_proto.sandbox_router_pb2.SandboxExecWaitRequest,
            modal_proto.sandbox_router_pb2.SandboxExecWaitResponse,
        )
