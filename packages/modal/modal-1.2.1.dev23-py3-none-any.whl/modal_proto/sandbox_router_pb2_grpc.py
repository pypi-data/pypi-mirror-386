# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from modal_proto import sandbox_router_pb2 as modal__proto_dot_sandbox__router__pb2


class SandboxRouterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SandboxExecPoll = channel.unary_unary(
                '/modal.sandbox_router.SandboxRouter/SandboxExecPoll',
                request_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecPollRequest.SerializeToString,
                response_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecPollResponse.FromString,
                )
        self.SandboxExecStart = channel.unary_unary(
                '/modal.sandbox_router.SandboxRouter/SandboxExecStart',
                request_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStartRequest.SerializeToString,
                response_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStartResponse.FromString,
                )
        self.SandboxExecStdinWrite = channel.unary_unary(
                '/modal.sandbox_router.SandboxRouter/SandboxExecStdinWrite',
                request_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteRequest.SerializeToString,
                response_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteResponse.FromString,
                )
        self.SandboxExecStdioRead = channel.unary_stream(
                '/modal.sandbox_router.SandboxRouter/SandboxExecStdioRead',
                request_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadRequest.SerializeToString,
                response_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadResponse.FromString,
                )
        self.SandboxExecWait = channel.unary_unary(
                '/modal.sandbox_router.SandboxRouter/SandboxExecWait',
                request_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecWaitRequest.SerializeToString,
                response_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecWaitResponse.FromString,
                )


class SandboxRouterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SandboxExecPoll(self, request, context):
        """Poll for the exit status of an exec'd command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SandboxExecStart(self, request, context):
        """Execute a command in the sandbox.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SandboxExecStdinWrite(self, request, context):
        """Write to the stdin stream of an exec'd command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SandboxExecStdioRead(self, request, context):
        """Get a stream of output from the stdout or stderr stream of an exec'd command.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SandboxExecWait(self, request, context):
        """Wait for an exec'd command to exit and return the exit code.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SandboxRouterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SandboxExecPoll': grpc.unary_unary_rpc_method_handler(
                    servicer.SandboxExecPoll,
                    request_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecPollRequest.FromString,
                    response_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecPollResponse.SerializeToString,
            ),
            'SandboxExecStart': grpc.unary_unary_rpc_method_handler(
                    servicer.SandboxExecStart,
                    request_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStartRequest.FromString,
                    response_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStartResponse.SerializeToString,
            ),
            'SandboxExecStdinWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.SandboxExecStdinWrite,
                    request_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteRequest.FromString,
                    response_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteResponse.SerializeToString,
            ),
            'SandboxExecStdioRead': grpc.unary_stream_rpc_method_handler(
                    servicer.SandboxExecStdioRead,
                    request_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadRequest.FromString,
                    response_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadResponse.SerializeToString,
            ),
            'SandboxExecWait': grpc.unary_unary_rpc_method_handler(
                    servicer.SandboxExecWait,
                    request_deserializer=modal__proto_dot_sandbox__router__pb2.SandboxExecWaitRequest.FromString,
                    response_serializer=modal__proto_dot_sandbox__router__pb2.SandboxExecWaitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'modal.sandbox_router.SandboxRouter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SandboxRouter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SandboxExecPoll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modal.sandbox_router.SandboxRouter/SandboxExecPoll',
            modal__proto_dot_sandbox__router__pb2.SandboxExecPollRequest.SerializeToString,
            modal__proto_dot_sandbox__router__pb2.SandboxExecPollResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SandboxExecStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modal.sandbox_router.SandboxRouter/SandboxExecStart',
            modal__proto_dot_sandbox__router__pb2.SandboxExecStartRequest.SerializeToString,
            modal__proto_dot_sandbox__router__pb2.SandboxExecStartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SandboxExecStdinWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modal.sandbox_router.SandboxRouter/SandboxExecStdinWrite',
            modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteRequest.SerializeToString,
            modal__proto_dot_sandbox__router__pb2.SandboxExecStdinWriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SandboxExecStdioRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/modal.sandbox_router.SandboxRouter/SandboxExecStdioRead',
            modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadRequest.SerializeToString,
            modal__proto_dot_sandbox__router__pb2.SandboxExecStdioReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SandboxExecWait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/modal.sandbox_router.SandboxRouter/SandboxExecWait',
            modal__proto_dot_sandbox__router__pb2.SandboxExecWaitRequest.SerializeToString,
            modal__proto_dot_sandbox__router__pb2.SandboxExecWaitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
