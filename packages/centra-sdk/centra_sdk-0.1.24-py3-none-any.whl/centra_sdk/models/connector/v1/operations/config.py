# generated by fastapi-codegen:
#   filename:  /home/circleci/project/guardicore/connector
#   timestamp: 2025-10-23T13:54:38+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional, Union
from uuid import UUID

from centra_sdk.utils.gc_serializer import GcSerializer
from pydantic import BaseModel, ConfigDict, Field

from ..common.common import Connector


class OptType(Enum):
    OPT_INT = 'opt_int'
    OPT_STRING = 'opt_string'
    OPT_BOOL = 'opt_bool'
    OPT_FLOAT = 'opt_float'


class ConfigOpts(BaseModel, GcSerializer):
    model_config = ConfigDict(
        populate_by_name=True,
        from_attributes=True,
    )
    name: str
    opt_type: OptType
    default_value: Union[str, int, bool, float]
    description: str
    secret: Optional[bool] = None


class Configuration(BaseModel, GcSerializer):
    model_config = ConfigDict(
        populate_by_name=True,
        from_attributes=True,
    )
    name: str
    value: Union[str, int, bool, float, Dict[str, Any]]


class InternalConfigMetadata(BaseModel, GcSerializer):
    model_config = ConfigDict(
        populate_by_name=True,
        from_attributes=True,
    )
    component_id: UUID = Field(..., alias='component-id')
    component_type: Connector = Field(..., alias='component-type')
    opts: List[ConfigOpts]


class InternalConfig(BaseModel, GcSerializer):
    model_config = ConfigDict(
        populate_by_name=True,
        from_attributes=True,
    )
    configs: List[Configuration]
