# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.task_response import TaskResponse

class TestTaskResponse(unittest.TestCase):
    """TaskResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskResponse:
        """Test TaskResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskResponse`
        """
        model = TaskResponse()
        if include_optional:
            return TaskResponse(
                id = '',
                name = '',
                created_at = 56,
                updated_at = 56,
                is_agentic = True,
                rules = [
                    arthur_client.api_bindings.models.rule_response.RuleResponse(
                        id = '', 
                        name = '', 
                        type = 'KeywordRule', 
                        apply_to_prompt = True, 
                        apply_to_response = True, 
                        enabled = True, 
                        scope = 'default', 
                        created_at = 56, 
                        updated_at = 56, 
                        config = null, )
                    ],
                metrics = [
                    arthur_client.api_bindings.models.metric_response.MetricResponse(
                        id = '', 
                        name = '', 
                        type = 'QueryRelevance', 
                        metric_metadata = '', 
                        config = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        enabled = True, )
                    ]
            )
        else:
            return TaskResponse(
                id = '',
                name = '',
                created_at = 56,
                updated_at = 56,
                rules = [
                    arthur_client.api_bindings.models.rule_response.RuleResponse(
                        id = '', 
                        name = '', 
                        type = 'KeywordRule', 
                        apply_to_prompt = True, 
                        apply_to_response = True, 
                        enabled = True, 
                        scope = 'default', 
                        created_at = 56, 
                        updated_at = 56, 
                        config = null, )
                    ],
        )
        """

    def testTaskResponse(self):
        """Test TaskResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
