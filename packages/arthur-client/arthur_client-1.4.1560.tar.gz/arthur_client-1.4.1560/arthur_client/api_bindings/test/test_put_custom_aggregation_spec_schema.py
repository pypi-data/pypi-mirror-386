# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.put_custom_aggregation_spec_schema import PutCustomAggregationSpecSchema

class TestPutCustomAggregationSpecSchema(unittest.TestCase):
    """PutCustomAggregationSpecSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PutCustomAggregationSpecSchema:
        """Test PutCustomAggregationSpecSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PutCustomAggregationSpecSchema`
        """
        model = PutCustomAggregationSpecSchema()
        if include_optional:
            return PutCustomAggregationSpecSchema(
                reported_aggregations = [
                    arthur_client.api_bindings.models.reported_custom_aggregation.ReportedCustomAggregation(
                        metric_name = '', 
                        description = '', 
                        value_column = '', 
                        timestamp_column = '', 
                        metric_kind = 'sketch', 
                        dimension_columns = [
                            ''
                            ], )
                    ],
                aggregate_args = [
                    null
                    ],
                sql = ''
            )
        else:
            return PutCustomAggregationSpecSchema(
                reported_aggregations = [
                    arthur_client.api_bindings.models.reported_custom_aggregation.ReportedCustomAggregation(
                        metric_name = '', 
                        description = '', 
                        value_column = '', 
                        timestamp_column = '', 
                        metric_kind = 'sketch', 
                        dimension_columns = [
                            ''
                            ], )
                    ],
                aggregate_args = [
                    null
                    ],
                sql = '',
        )
        """

    def testPutCustomAggregationSpecSchema(self):
        """Test PutCustomAggregationSpecSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
