# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.connector_spec import ConnectorSpec

class TestConnectorSpec(unittest.TestCase):
    """ConnectorSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorSpec:
        """Test ConnectorSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorSpec`
        """
        model = ConnectorSpec()
        if include_optional:
            return ConnectorSpec(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                connector_type = 'shield',
                name = '',
                temporary = True,
                fields = [
                    arthur_client.api_bindings.models.connector_spec_field_with_metadata.ConnectorSpecFieldWithMetadata(
                        key = '', 
                        value = '', 
                        d_type = 'string', 
                        is_sensitive = True, )
                    ],
                last_updated_by_user = arthur_client.api_bindings.models.user.User(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization_id = '', 
                    id = '', 
                    first_name = '', 
                    last_name = '', 
                    email = '', 
                    picture = '', 
                    user_type = 'user', 
                    data_plane_id = '', 
                    client_id = '', 
                    organization_name = '', ),
                connector_check_result = arthur_client.api_bindings.models.connector_check_result.ConnectorCheckResult(
                    connection_check_outcome = 'succeeded', 
                    failure_reason = '', ),
                project_id = '',
                data_plane_id = ''
            )
        else:
            return ConnectorSpec(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                connector_type = 'shield',
                name = '',
                temporary = True,
                fields = [
                    arthur_client.api_bindings.models.connector_spec_field_with_metadata.ConnectorSpecFieldWithMetadata(
                        key = '', 
                        value = '', 
                        d_type = 'string', 
                        is_sensitive = True, )
                    ],
                project_id = '',
                data_plane_id = '',
        )
        """

    def testConnectorSpec(self):
        """Test ConnectorSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
