# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.custom_aggregation_spec_schema import CustomAggregationSpecSchema

class TestCustomAggregationSpecSchema(unittest.TestCase):
    """CustomAggregationSpecSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomAggregationSpecSchema:
        """Test CustomAggregationSpecSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomAggregationSpecSchema`
        """
        model = CustomAggregationSpecSchema()
        if include_optional:
            return CustomAggregationSpecSchema(
                id = '',
                name = '',
                description = '',
                workspace_id = '',
                versions = [
                    arthur_client.api_bindings.models.custom_aggregation_version_spec_schema.CustomAggregationVersionSpecSchema(
                        custom_aggregation_id = '', 
                        version = 56, 
                        authored_by = arthur_client.api_bindings.models.user.User(
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            organization_id = '', 
                            id = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            picture = '', 
                            user_type = 'user', 
                            data_plane_id = '', 
                            client_id = '', 
                            organization_name = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        reported_aggregations = [
                            arthur_client.api_bindings.models.reported_custom_aggregation.ReportedCustomAggregation(
                                metric_name = '', 
                                description = '', 
                                value_column = '', 
                                timestamp_column = '', 
                                metric_kind = 'sketch', 
                                dimension_columns = [
                                    ''
                                    ], )
                            ], 
                        aggregate_args = [
                            null
                            ], 
                        sql = '', )
                    ],
                latest_version = 56,
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                is_deleted = True
            )
        else:
            return CustomAggregationSpecSchema(
                id = '',
                name = '',
                workspace_id = '',
                versions = [
                    arthur_client.api_bindings.models.custom_aggregation_version_spec_schema.CustomAggregationVersionSpecSchema(
                        custom_aggregation_id = '', 
                        version = 56, 
                        authored_by = arthur_client.api_bindings.models.user.User(
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            organization_id = '', 
                            id = '', 
                            first_name = '', 
                            last_name = '', 
                            email = '', 
                            picture = '', 
                            user_type = 'user', 
                            data_plane_id = '', 
                            client_id = '', 
                            organization_name = '', ), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        reported_aggregations = [
                            arthur_client.api_bindings.models.reported_custom_aggregation.ReportedCustomAggregation(
                                metric_name = '', 
                                description = '', 
                                value_column = '', 
                                timestamp_column = '', 
                                metric_kind = 'sketch', 
                                dimension_columns = [
                                    ''
                                    ], )
                            ], 
                        aggregate_args = [
                            null
                            ], 
                        sql = '', )
                    ],
                latest_version = 56,
        )
        """

    def testCustomAggregationSpecSchema(self):
        """Test CustomAggregationSpecSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
