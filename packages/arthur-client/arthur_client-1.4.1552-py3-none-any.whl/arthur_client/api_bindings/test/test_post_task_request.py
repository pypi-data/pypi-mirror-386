# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.post_task_request import PostTaskRequest

class TestPostTaskRequest(unittest.TestCase):
    """PostTaskRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostTaskRequest:
        """Test PostTaskRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostTaskRequest`
        """
        model = PostTaskRequest()
        if include_optional:
            return PostTaskRequest(
                name = '0',
                connector_id = '',
                onboarding_identifier = '',
                rules_to_add = [
                    arthur_client.api_bindings.models.new_rule_request.NewRuleRequest(
                        name = '', 
                        type = '', 
                        apply_to_prompt = True, 
                        apply_to_response = True, 
                        config = null, )
                    ],
                is_agentic = True
            )
        else:
            return PostTaskRequest(
                name = '0',
                connector_id = '',
        )
        """

    def testPostTaskRequest(self):
        """Test PostTaskRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
