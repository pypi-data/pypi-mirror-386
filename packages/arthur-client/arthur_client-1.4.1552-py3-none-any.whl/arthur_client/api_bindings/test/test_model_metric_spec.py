# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.model_metric_spec import ModelMetricSpec

class TestModelMetricSpec(unittest.TestCase):
    """ModelMetricSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelMetricSpec:
        """Test ModelMetricSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelMetricSpec`
        """
        model = ModelMetricSpec()
        if include_optional:
            return ModelMetricSpec(
                aggregation_specs = [
                    arthur_client.api_bindings.models.aggregation_spec.AggregationSpec(
                        aggregation_id = '', 
                        aggregation_init_args = [
                            arthur_client.api_bindings.models.metrics_arg_spec.MetricsArgSpec(
                                arg_key = '', 
                                arg_value = null, )
                            ], 
                        aggregation_args = [
                            arthur_client.api_bindings.models.metrics_arg_spec.MetricsArgSpec(
                                arg_key = '', 
                                arg_value = null, )
                            ], 
                        aggregation_kind = 'default', 
                        aggregation_version = 56, )
                    ],
                id = ''
            )
        else:
            return ModelMetricSpec(
                aggregation_specs = [
                    arthur_client.api_bindings.models.aggregation_spec.AggregationSpec(
                        aggregation_id = '', 
                        aggregation_init_args = [
                            arthur_client.api_bindings.models.metrics_arg_spec.MetricsArgSpec(
                                arg_key = '', 
                                arg_value = null, )
                            ], 
                        aggregation_args = [
                            arthur_client.api_bindings.models.metrics_arg_spec.MetricsArgSpec(
                                arg_key = '', 
                                arg_value = null, )
                            ], 
                        aggregation_kind = 'default', 
                        aggregation_version = 56, )
                    ],
                id = '',
        )
        """

    def testModelMetricSpec(self):
        """Test ModelMetricSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
