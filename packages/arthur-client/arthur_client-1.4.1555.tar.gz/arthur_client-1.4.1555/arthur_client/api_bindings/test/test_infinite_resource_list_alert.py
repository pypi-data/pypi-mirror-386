# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.infinite_resource_list_alert import InfiniteResourceListAlert

class TestInfiniteResourceListAlert(unittest.TestCase):
    """InfiniteResourceListAlert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InfiniteResourceListAlert:
        """Test InfiniteResourceListAlert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InfiniteResourceListAlert`
        """
        model = InfiniteResourceListAlert()
        if include_optional:
            return InfiniteResourceListAlert(
                records = [
                    arthur_client.api_bindings.models.alert.Alert(
                        description = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = 1.337, 
                        threshold = 1.337, 
                        bound = 'upper_bound', 
                        interval = arthur_client.api_bindings.models.alert_rule_interval.AlertRuleInterval(
                            unit = 'seconds', 
                            count = 56, ), 
                        dimensions = arthur_client.api_bindings.models.dimensions.dimensions(), 
                        alert_rule_id = '', 
                        job_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        model_id = '', 
                        alert_rule_name = '', 
                        alert_rule_metric_name = '', 
                        is_duplicate_of = '', )
                    ],
                pagination = arthur_client.api_bindings.models.infinite_pagination.InfinitePagination(
                    page = 56, 
                    page_size = 56, )
            )
        else:
            return InfiniteResourceListAlert(
                records = [
                    arthur_client.api_bindings.models.alert.Alert(
                        description = '', 
                        timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        value = 1.337, 
                        threshold = 1.337, 
                        bound = 'upper_bound', 
                        interval = arthur_client.api_bindings.models.alert_rule_interval.AlertRuleInterval(
                            unit = 'seconds', 
                            count = 56, ), 
                        dimensions = arthur_client.api_bindings.models.dimensions.dimensions(), 
                        alert_rule_id = '', 
                        job_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        model_id = '', 
                        alert_rule_name = '', 
                        alert_rule_metric_name = '', 
                        is_duplicate_of = '', )
                    ],
                pagination = arthur_client.api_bindings.models.infinite_pagination.InfinitePagination(
                    page = 56, 
                    page_size = 56, ),
        )
        """

    def testInfiniteResourceListAlert(self):
        """Test InfiniteResourceListAlert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
