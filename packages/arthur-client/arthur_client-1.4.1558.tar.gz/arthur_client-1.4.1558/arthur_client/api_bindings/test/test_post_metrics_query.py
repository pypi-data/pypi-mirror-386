# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.post_metrics_query import PostMetricsQuery

class TestPostMetricsQuery(unittest.TestCase):
    """PostMetricsQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostMetricsQuery:
        """Test PostMetricsQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostMetricsQuery`
        """
        model = PostMetricsQuery()
        if include_optional:
            return PostMetricsQuery(
                query = '',
                time_range = arthur_client.api_bindings.models.post_metrics_query_time_range.PostMetricsQueryTimeRange(
                    start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                interval = arthur_client.api_bindings.models.alert_rule_interval.AlertRuleInterval(
                    unit = 'seconds', 
                    count = 56, ),
                limit = 56,
                result_filter = None
            )
        else:
            return PostMetricsQuery(
                query = '',
                time_range = arthur_client.api_bindings.models.post_metrics_query_time_range.PostMetricsQueryTimeRange(
                    start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testPostMetricsQuery(self):
        """Test PostMetricsQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
