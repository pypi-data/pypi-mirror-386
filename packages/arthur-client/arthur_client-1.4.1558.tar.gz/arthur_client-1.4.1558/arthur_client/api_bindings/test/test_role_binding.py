# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.role_binding import RoleBinding

class TestRoleBinding(unittest.TestCase):
    """RoleBinding unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoleBinding:
        """Test RoleBinding
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoleBinding`
        """
        model = RoleBinding()
        if include_optional:
            return RoleBinding(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                role = arthur_client.api_bindings.models.bound_role.BoundRole(
                    id = '', 
                    name = '', ),
                bound_resource_kind = 'organization',
                bound_resource = arthur_client.api_bindings.models.bound_resource.BoundResource(
                    id = '', 
                    name = '', 
                    metadata = arthur_client.api_bindings.models.project_bound_resource_metadata.ProjectBoundResourceMetadata(
                        workspace_id = '', 
                        workspace_name = '', ), ),
                bound_member_kind = 'user',
                bound_member = arthur_client.api_bindings.models.bound_member.BoundMember(
                    id = '', 
                    name = '', )
            )
        else:
            return RoleBinding(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                role = arthur_client.api_bindings.models.bound_role.BoundRole(
                    id = '', 
                    name = '', ),
                bound_resource_kind = 'organization',
                bound_resource = arthur_client.api_bindings.models.bound_resource.BoundResource(
                    id = '', 
                    name = '', 
                    metadata = arthur_client.api_bindings.models.project_bound_resource_metadata.ProjectBoundResourceMetadata(
                        workspace_id = '', 
                        workspace_name = '', ), ),
                bound_member_kind = 'user',
                bound_member = arthur_client.api_bindings.models.bound_member.BoundMember(
                    id = '', 
                    name = '', ),
        )
        """

    def testRoleBinding(self):
        """Test RoleBinding"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
