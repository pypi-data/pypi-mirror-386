# coding: utf-8

"""
    Arthur Scope

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arthur_client.api_bindings.models.extended_role import ExtendedRole

class TestExtendedRole(unittest.TestCase):
    """ExtendedRole unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtendedRole:
        """Test ExtendedRole
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtendedRole`
        """
        model = ExtendedRole()
        if include_optional:
            return ExtendedRole(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                name = '',
                description = '',
                organization_bindable = True,
                workspace_bindable = True,
                project_bindable = True,
                data_plane_bindable = True,
                permissions = [
                    arthur_client.api_bindings.models.permission.Permission(
                        name = 'organization_read', 
                        description = '', 
                        resource_kind = 'platform', )
                    ],
                base_roles = [
                    arthur_client.api_bindings.models.base_role.BaseRole(
                        id = '', 
                        name = '', 
                        description = '', )
                    ]
            )
        else:
            return ExtendedRole(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                name = '',
                description = '',
                organization_bindable = True,
                workspace_bindable = True,
                project_bindable = True,
                data_plane_bindable = True,
                permissions = [
                    arthur_client.api_bindings.models.permission.Permission(
                        name = 'organization_read', 
                        description = '', 
                        resource_kind = 'platform', )
                    ],
                base_roles = [
                    arthur_client.api_bindings.models.base_role.BaseRole(
                        id = '', 
                        name = '', 
                        description = '', )
                    ],
        )
        """

    def testExtendedRole(self):
        """Test ExtendedRole"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
