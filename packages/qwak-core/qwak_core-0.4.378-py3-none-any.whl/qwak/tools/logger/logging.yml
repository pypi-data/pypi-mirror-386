version: 1
disable_existing_loggers: false

formatters:
  brief:
    format: '%(message)s'
  semi_precise:
    format: "%(asctime)s [%(levelname)-5.5s] %(message)s"
    datefmt: '%Y-%m-%d %H:%M:%S'
  precise:
    format: '%(asctime)s %(levelname)-8s %(module)s - %(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  remote:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(process)d %(levelname)s %(module)s %(lineno)d %(message)s'
    datefmt: '%Y-%m-%dT%H:%M:%S'
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(process)d %(levelname)s %(module)s %(lineno)d %(message)s'
    datefmt: '%Y-%m-%dT%H:%M:%S'

handlers:
  console:
    class : logging.StreamHandler
    formatter: brief
    level   : INFO
    stream  : ext://sys.stdout
  file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: precise
    filename: ""
    maxBytes: 10485760 # 10MB
    backupCount: 5
    encoding: utf8
  remote_console:
    class: logging.StreamHandler
    formatter: remote
    level: DEBUG
    stream: ext://sys.stdout
  model:
    class: logging.StreamHandler
    formatter: json
    level: INFO
    stream: ext://sys.stdout
  build_log_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: semi_precise
    filename: ""
    maxBytes: 10485760 # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  qwak:
    level: DEBUG
    handlers: [console, file_handler]
    propagate: false
  qwak_remote:
    level: DEBUG
    handlers: [remote_console]
    propagate: false
  qwak_model:
    level: DEBUG
    handlers: [model]
    propagate: false
  feature_store:
    level: DEBUG
    handlers: [model]
    propagate: false
  build_local:
    level: DEBUG
    handlers: [build_log_file_handler, console]
    propagate: false
  docker_internal:
    level: DEBUG
    handlers: [console]
    propagate: false
