"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import qwak.administration.runtime_configuration.v0.creds.secret_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class AWSAuthMethod(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AWS_SECURITY_TOKEN_SERVICE_FIELD_NUMBER: builtins.int
    @property
    def aws_security_token_service(self) -> global___AWSSecurityTokenService: ...
    def __init__(
        self,
        *,
        aws_security_token_service: global___AWSSecurityTokenService | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_type", b"auth_type", "aws_security_token_service", b"aws_security_token_service"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_type", b"auth_type", "aws_security_token_service", b"aws_security_token_service"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["auth_type", b"auth_type"]) -> typing_extensions.Literal["aws_security_token_service"] | None: ...

global___AWSAuthMethod = AWSAuthMethod

class AWSSecurityTokenService(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECRET_KEY_REF_FIELD_NUMBER: builtins.int
    @property
    def secret_key_ref(self) -> qwak.administration.runtime_configuration.v0.creds.secret_pb2.SecretKeyRef: ...
    def __init__(
        self,
        *,
        secret_key_ref: qwak.administration.runtime_configuration.v0.creds.secret_pb2.SecretKeyRef | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["location", b"location", "secret_key_ref", b"secret_key_ref"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["location", b"location", "secret_key_ref", b"secret_key_ref"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["location", b"location"]) -> typing_extensions.Literal["secret_key_ref"] | None: ...

global___AWSSecurityTokenService = AWSSecurityTokenService

class AWSScopedPermissions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKLOAD_SCOPE_FIELD_NUMBER: builtins.int
    @property
    def workload_scope(self) -> global___AWSWorkloadPermissionScope: ...
    def __init__(
        self,
        *,
        workload_scope: global___AWSWorkloadPermissionScope | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["scope_type", b"scope_type", "workload_scope", b"workload_scope"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["scope_type", b"scope_type", "workload_scope", b"workload_scope"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["scope_type", b"scope_type"]) -> typing_extensions.Literal["workload_scope"] | None: ...

global___AWSScopedPermissions = AWSScopedPermissions

class AWSWorkloadPermissionScope(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANALYTICS_SCOPE_FIELD_NUMBER: builtins.int
    BATCH_INFERENCE_JOB_SCOPE_FIELD_NUMBER: builtins.int
    FEATURE_STORE_SCOPE_FIELD_NUMBER: builtins.int
    REMOTE_BUILD_JOB_SCOPE_FIELD_NUMBER: builtins.int
    @property
    def analytics_scope(self) -> global___AnalyticsPermissionScope: ...
    @property
    def batch_inference_job_scope(self) -> global___BatchInferenceJobPermissionScope: ...
    @property
    def feature_store_scope(self) -> global___FeatureStorePermissionScope: ...
    @property
    def remote_build_job_scope(self) -> global___RemoteBuildJobPermissionScope: ...
    def __init__(
        self,
        *,
        analytics_scope: global___AnalyticsPermissionScope | None = ...,
        batch_inference_job_scope: global___BatchInferenceJobPermissionScope | None = ...,
        feature_store_scope: global___FeatureStorePermissionScope | None = ...,
        remote_build_job_scope: global___RemoteBuildJobPermissionScope | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["analytics_scope", b"analytics_scope", "batch_inference_job_scope", b"batch_inference_job_scope", "feature_store_scope", b"feature_store_scope", "remote_build_job_scope", b"remote_build_job_scope"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analytics_scope", b"analytics_scope", "batch_inference_job_scope", b"batch_inference_job_scope", "feature_store_scope", b"feature_store_scope", "remote_build_job_scope", b"remote_build_job_scope"]) -> None: ...

global___AWSWorkloadPermissionScope = AWSWorkloadPermissionScope

class AnalyticsPermissionScope(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTH_METHOD_FIELD_NUMBER: builtins.int
    @property
    def auth_method(self) -> global___AWSAuthMethod: ...
    def __init__(
        self,
        *,
        auth_method: global___AWSAuthMethod | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> None: ...

global___AnalyticsPermissionScope = AnalyticsPermissionScope

class BatchInferenceJobPermissionScope(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTH_METHOD_FIELD_NUMBER: builtins.int
    @property
    def auth_method(self) -> global___AWSAuthMethod: ...
    def __init__(
        self,
        *,
        auth_method: global___AWSAuthMethod | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> None: ...

global___BatchInferenceJobPermissionScope = BatchInferenceJobPermissionScope

class FeatureStorePermissionScope(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTH_METHOD_FIELD_NUMBER: builtins.int
    @property
    def auth_method(self) -> global___AWSAuthMethod: ...
    def __init__(
        self,
        *,
        auth_method: global___AWSAuthMethod | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> None: ...

global___FeatureStorePermissionScope = FeatureStorePermissionScope

class RemoteBuildJobPermissionScope(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUTH_METHOD_FIELD_NUMBER: builtins.int
    @property
    def auth_method(self) -> global___AWSAuthMethod: ...
    def __init__(
        self,
        *,
        auth_method: global___AWSAuthMethod | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_method", b"auth_method"]) -> None: ...

global___RemoteBuildJobPermissionScope = RemoteBuildJobPermissionScope
