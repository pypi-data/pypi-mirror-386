# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.instance_template import instance_template_service_pb2 as qwak_dot_instance__template_dot_instance__template__service__pb2


class InstanceTemplateManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListInstanceTemplates = channel.unary_unary(
                '/qwak.management.instance_template.InstanceTemplateManagementService/ListInstanceTemplates',
                request_serializer=qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesRequest.SerializeToString,
                response_deserializer=qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesResponse.FromString,
                )
        self.GetInstanceTemplate = channel.unary_unary(
                '/qwak.management.instance_template.InstanceTemplateManagementService/GetInstanceTemplate',
                request_serializer=qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateRequest.SerializeToString,
                response_deserializer=qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateResponse.FromString,
                )


class InstanceTemplateManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListInstanceTemplates(self, request, context):
        """List Instance Templates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstanceTemplate(self, request, context):
        """Get An Instance Template
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstanceTemplateManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListInstanceTemplates': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstanceTemplates,
                    request_deserializer=qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesRequest.FromString,
                    response_serializer=qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesResponse.SerializeToString,
            ),
            'GetInstanceTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstanceTemplate,
                    request_deserializer=qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateRequest.FromString,
                    response_serializer=qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.management.instance_template.InstanceTemplateManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstanceTemplateManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListInstanceTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.management.instance_template.InstanceTemplateManagementService/ListInstanceTemplates',
            qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesRequest.SerializeToString,
            qwak_dot_instance__template_dot_instance__template__service__pb2.ListInstanceTemplatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstanceTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.management.instance_template.InstanceTemplateManagementService/GetInstanceTemplate',
            qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateRequest.SerializeToString,
            qwak_dot_instance__template_dot_instance__template__service__pb2.GetInstanceTemplateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
