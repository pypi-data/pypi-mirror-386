# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.feature_store.serving import serving_pb2 as qwak_dot_feature__store_dot_serving_dot_serving__pb2


class ServingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFeatures = channel.unary_unary(
                '/com.qwak.ai.feature.store.serving.api.ServingService/GetFeatures',
                request_serializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesResponse.FromString,
                )
        self.GetMultiFeatures = channel.unary_unary(
                '/com.qwak.ai.feature.store.serving.api.ServingService/GetMultiFeatures',
                request_serializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.RequestedEntitiesMatrixRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.MultiFeatureValuesResponse.FromString,
                )


class ServingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFeatures(self, request, context):
        """Get single online feature value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultiFeatures(self, request, context):
        """Get multiple online feature values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatures,
                    request_deserializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesResponse.SerializeToString,
            ),
            'GetMultiFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultiFeatures,
                    request_deserializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.RequestedEntitiesMatrixRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_serving_dot_serving__pb2.MultiFeatureValuesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.qwak.ai.feature.store.serving.api.ServingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.qwak.ai.feature.store.serving.api.ServingService/GetFeatures',
            qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesRequest.SerializeToString,
            qwak_dot_feature__store_dot_serving_dot_serving__pb2.FeatureValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultiFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.qwak.ai.feature.store.serving.api.ServingService/GetMultiFeatures',
            qwak_dot_feature__store_dot_serving_dot_serving__pb2.RequestedEntitiesMatrixRequest.SerializeToString,
            qwak_dot_feature__store_dot_serving_dot_serving__pb2.MultiFeatureValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
