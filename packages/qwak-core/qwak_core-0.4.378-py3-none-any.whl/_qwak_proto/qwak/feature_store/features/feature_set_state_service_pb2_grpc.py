# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.feature_store.features import feature_set_state_service_pb2 as qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2


class FeatureSetStateServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFeatureSetStateById = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStateById',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Request.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Response.FromString,
                )
        self.GetFeatureSetStateByName = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStateByName',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Request.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Response.FromString,
                )
        self.GetFeatureSetStatesList = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStatesList',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Request.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Response.FromString,
                )
        self.UpdateFeatureSetState = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetStateService/UpdateFeatureSetState',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Request.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Response.FromString,
                )
        self.DeleteFeatureSetState = channel.unary_unary(
                '/qwak.feature.store.features.FeatureSetStateService/DeleteFeatureSetState',
                request_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Request.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Response.FromString,
                )


class FeatureSetStateServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetFeatureSetStateById(self, request, context):
        """Get feature state by feature id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetStateByName(self, request, context):
        """Get feature state by feature name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureSetStatesList(self, request, context):
        """Get list of feature state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeatureSetState(self, request, context):
        """Update feature set state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeatureSetState(self, request, context):
        """Delete feature set state
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeatureSetStateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFeatureSetStateById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetStateById,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Request.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Response.SerializeToString,
            ),
            'GetFeatureSetStateByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetStateByName,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Request.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Response.SerializeToString,
            ),
            'GetFeatureSetStatesList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureSetStatesList,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Request.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Response.SerializeToString,
            ),
            'UpdateFeatureSetState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeatureSetState,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Request.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Response.SerializeToString,
            ),
            'DeleteFeatureSetState': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeatureSetState,
                    request_deserializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Request.FromString,
                    response_serializer=qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.feature.store.features.FeatureSetStateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeatureSetStateService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetFeatureSetStateById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStateById',
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Request.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByIdV1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetStateByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStateByName',
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Request.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStateByNameV1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureSetStatesList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetStateService/GetFeatureSetStatesList',
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Request.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.GetFeatureSetStatesListV1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFeatureSetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetStateService/UpdateFeatureSetState',
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Request.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.UpdateFeatureSetStateV1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFeatureSetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.features.FeatureSetStateService/DeleteFeatureSetState',
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Request.SerializeToString,
            qwak_dot_feature__store_dot_features_dot_feature__set__state__service__pb2.DeleteFeatureSetStateV1Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
