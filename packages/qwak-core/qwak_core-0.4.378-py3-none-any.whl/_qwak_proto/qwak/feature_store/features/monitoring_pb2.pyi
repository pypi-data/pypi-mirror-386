"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class MonitoringConfigurations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MONITORING_FIELD_NUMBER: builtins.int
    @property
    def monitoring(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Monitoring]: ...
    def __init__(
        self,
        *,
        monitoring: collections.abc.Iterable[global___Monitoring] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["monitoring", b"monitoring"]) -> None: ...

global___MonitoringConfigurations = MonitoringConfigurations

class Monitoring(google.protobuf.message.Message):
    """Represents the Monitoring configuration"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FAILURE_ALERT_FIELD_NUMBER: builtins.int
    @property
    def failure_alert(self) -> global___FailureAlert: ...
    def __init__(
        self,
        *,
        failure_alert: global___FailureAlert | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["failure_alert", b"failure_alert", "type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["failure_alert", b"failure_alert", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type", b"type"]) -> typing_extensions.Literal["failure_alert"] | None: ...

global___Monitoring = Monitoring

class FailureAlert(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of channel names to be reported on failure"""
    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["names", b"names"]) -> None: ...

global___FailureAlert = FailureAlert
