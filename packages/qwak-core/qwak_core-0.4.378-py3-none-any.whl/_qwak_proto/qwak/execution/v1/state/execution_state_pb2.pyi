"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import qwak.execution.v1.state.spark_execution_state_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ExecutionState(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXECUTION_ID_FIELD_NUMBER: builtins.int
    FEATURESET_ID_FIELD_NUMBER: builtins.int
    ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    SPARK_APP_STATE_FIELD_NUMBER: builtins.int
    execution_id: builtins.str
    """Execution Id"""
    featureset_id: builtins.str
    """featureset id this execution belongs to (featureset:execution is 1:many relation)"""
    environment_id: builtins.str
    """environmentId of the featureset"""
    @property
    def spark_app_state(self) -> qwak.execution.v1.state.spark_execution_state_pb2.SparkExecutionState: ...
    def __init__(
        self,
        *,
        execution_id: builtins.str = ...,
        featureset_id: builtins.str = ...,
        environment_id: builtins.str = ...,
        spark_app_state: qwak.execution.v1.state.spark_execution_state_pb2.SparkExecutionState | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["exec_state", b"exec_state", "spark_app_state", b"spark_app_state"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment_id", b"environment_id", "exec_state", b"exec_state", "execution_id", b"execution_id", "featureset_id", b"featureset_id", "spark_app_state", b"spark_app_state"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["exec_state", b"exec_state"]) -> typing_extensions.Literal["spark_app_state"] | None: ...

global___ExecutionState = ExecutionState
