# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.inference.feedback import feedback_pb2 as qwak_dot_inference_dot_feedback_dot_feedback__pb2


class FeedbackServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PostFeedback = channel.unary_unary(
                '/com.qwak.ai.feedback.api.FeedbackService/PostFeedback',
                request_serializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesRequest.SerializeToString,
                response_deserializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesResponse.FromString,
                )
        self.ConfigureFeedback = channel.unary_unary(
                '/com.qwak.ai.feedback.api.FeedbackService/ConfigureFeedback',
                request_serializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackRequest.SerializeToString,
                response_deserializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackResponse.FromString,
                )


class FeedbackServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PostFeedback(self, request, context):
        """Post feedback values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureFeedback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeedbackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PostFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.PostFeedback,
                    request_deserializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesRequest.FromString,
                    response_serializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesResponse.SerializeToString,
            ),
            'ConfigureFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureFeedback,
                    request_deserializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackRequest.FromString,
                    response_serializer=qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.qwak.ai.feedback.api.FeedbackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeedbackService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PostFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.qwak.ai.feedback.api.FeedbackService/PostFeedback',
            qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesRequest.SerializeToString,
            qwak_dot_inference_dot_feedback_dot_feedback__pb2.ActualValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfigureFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.qwak.ai.feedback.api.FeedbackService/ConfigureFeedback',
            qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackRequest.SerializeToString,
            qwak_dot_inference_dot_feedback_dot_feedback__pb2.ConfigureFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
