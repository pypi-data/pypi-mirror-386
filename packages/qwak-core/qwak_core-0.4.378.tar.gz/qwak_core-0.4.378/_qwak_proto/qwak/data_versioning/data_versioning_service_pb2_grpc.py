# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.data_versioning import data_versioning_service_pb2 as qwak_dot_data__versioning_dot_data__versioning__service__pb2


class DataVersioningManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterDataTag = channel.unary_unary(
                '/qwak.management.data_versioning.DataVersioningManagementService/RegisterDataTag',
                request_serializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagRequest.SerializeToString,
                response_deserializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagResponse.FromString,
                )
        self.GetModelDataTags = channel.unary_unary(
                '/qwak.management.data_versioning.DataVersioningManagementService/GetModelDataTags',
                request_serializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsRequest.SerializeToString,
                response_deserializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsResponse.FromString,
                )


class DataVersioningManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterDataTag(self, request, context):
        """Register data tag
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelDataTags(self, request, context):
        """Get the models tags
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataVersioningManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterDataTag': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDataTag,
                    request_deserializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagRequest.FromString,
                    response_serializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagResponse.SerializeToString,
            ),
            'GetModelDataTags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelDataTags,
                    request_deserializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsRequest.FromString,
                    response_serializer=qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.management.data_versioning.DataVersioningManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataVersioningManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterDataTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.management.data_versioning.DataVersioningManagementService/RegisterDataTag',
            qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagRequest.SerializeToString,
            qwak_dot_data__versioning_dot_data__versioning__service__pb2.RegisterDataTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelDataTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.management.data_versioning.DataVersioningManagementService/GetModelDataTags',
            qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsRequest.SerializeToString,
            qwak_dot_data__versioning_dot_data__versioning__service__pb2.GetModelDataTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
