"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ActualValuesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_ID_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    ACTUALS_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    model_id: builtins.str
    """List of feature columns to fetch."""
    @property
    def entity(self) -> global___Entity:
        """Feature is requested for a single entity (user id for example)."""
    @property
    def actuals(self) -> global___Actuals: ...
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        model_id: builtins.str = ...,
        entity: global___Entity | None = ...,
        actuals: global___Actuals | None = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["actuals", b"actuals", "entity", b"entity", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actuals", b"actuals", "entity", b"entity", "model_id", b"model_id", "timestamp", b"timestamp"]) -> None: ...

global___ActualValuesRequest = ActualValuesRequest

class EnrichedActualValuesData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_ID_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    ACTUALS_FIELD_NUMBER: builtins.int
    QWAK_ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    model_id: builtins.str
    """List of feature columns to fetch."""
    @property
    def entity(self) -> global___Entity:
        """Feature is requested for a single entity (user id for example)."""
    @property
    def actuals(self) -> global___Actuals: ...
    qwak_environment_id: builtins.str
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        model_id: builtins.str = ...,
        entity: global___Entity | None = ...,
        actuals: global___Actuals | None = ...,
        qwak_environment_id: builtins.str = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["actuals", b"actuals", "entity", b"entity", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actuals", b"actuals", "entity", b"entity", "model_id", b"model_id", "qwak_environment_id", b"qwak_environment_id", "timestamp", b"timestamp"]) -> None: ...

global___EnrichedActualValuesData = EnrichedActualValuesData

class Entity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Entity name - such as uuid, site id, etc."""
    value: builtins.str
    """Entity value to fetch"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]) -> None: ...

global___Entity = Entity

class Actuals(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TAG_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    tag: builtins.str
    """Actual tag - such as label name, etc."""
    @property
    def value(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Entity value to fetch"""
    def __init__(
        self,
        *,
        tag: builtins.str = ...,
        value: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["tag", b"tag", "value", b"value"]) -> None: ...

global___Actuals = Actuals

class ActualValuesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ValueStatus:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ValueStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ActualValuesResponse._ValueStatus.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVALID: ActualValuesResponse._ValueStatus.ValueType  # 0
        FAILURE: ActualValuesResponse._ValueStatus.ValueType  # 1
        """Feature value could not be obtained"""
        SUCCESS: ActualValuesResponse._ValueStatus.ValueType  # 2
        """Feature value is set"""

    class ValueStatus(_ValueStatus, metaclass=_ValueStatusEnumTypeWrapper): ...
    INVALID: ActualValuesResponse.ValueStatus.ValueType  # 0
    FAILURE: ActualValuesResponse.ValueStatus.ValueType  # 1
    """Feature value could not be obtained"""
    SUCCESS: ActualValuesResponse.ValueStatus.ValueType  # 2
    """Feature value is set"""

    STATUS_FIELD_NUMBER: builtins.int
    status: global___ActualValuesResponse.ValueStatus.ValueType
    """Feature value status"""
    def __init__(
        self,
        *,
        status: global___ActualValuesResponse.ValueStatus.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___ActualValuesResponse = ActualValuesResponse

class ConfigureFeedbackRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ModelType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ModelTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ConfigureFeedbackRequest._ModelType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVALID_MODEL_TYPE: ConfigureFeedbackRequest._ModelType.ValueType  # 0
        BINARY_CLASSIFICATION: ConfigureFeedbackRequest._ModelType.ValueType  # 1
        MULTICLASS_CLASSIFICATION: ConfigureFeedbackRequest._ModelType.ValueType  # 2
        REGRESSION: ConfigureFeedbackRequest._ModelType.ValueType  # 3

    class ModelType(_ModelType, metaclass=_ModelTypeEnumTypeWrapper): ...
    INVALID_MODEL_TYPE: ConfigureFeedbackRequest.ModelType.ValueType  # 0
    BINARY_CLASSIFICATION: ConfigureFeedbackRequest.ModelType.ValueType  # 1
    MULTICLASS_CLASSIFICATION: ConfigureFeedbackRequest.ModelType.ValueType  # 2
    REGRESSION: ConfigureFeedbackRequest.ModelType.ValueType  # 3

    MODEL_ID_FIELD_NUMBER: builtins.int
    ANALYTICS_ENTITY_COLUMN_FIELD_NUMBER: builtins.int
    FEEDBACK_ENTITY_COLUMN_FIELD_NUMBER: builtins.int
    FEEDBACK_CONFIG_FIELD_NUMBER: builtins.int
    MODEL_TYPE_FIELD_NUMBER: builtins.int
    model_id: builtins.str
    """Feedback model_id"""
    analytics_entity_column: builtins.str
    """Analytics entity column"""
    feedback_entity_column: builtins.str
    """Feedback entity column"""
    @property
    def feedback_config(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FeedbackConfig]:
        """Analytics data config"""
    model_type: global___ConfigureFeedbackRequest.ModelType.ValueType
    def __init__(
        self,
        *,
        model_id: builtins.str = ...,
        analytics_entity_column: builtins.str = ...,
        feedback_entity_column: builtins.str = ...,
        feedback_config: collections.abc.Iterable[global___FeedbackConfig] | None = ...,
        model_type: global___ConfigureFeedbackRequest.ModelType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["analytics_entity_column", b"analytics_entity_column", "feedback_config", b"feedback_config", "feedback_entity_column", b"feedback_entity_column", "model_id", b"model_id", "model_type", b"model_type"]) -> None: ...

global___ConfigureFeedbackRequest = ConfigureFeedbackRequest

class FeedbackConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OUTPUT_COLUMN_FIELD_NUMBER: builtins.int
    ACTUAL_TAG_FIELD_NUMBER: builtins.int
    output_column: builtins.str
    actual_tag: builtins.str
    def __init__(
        self,
        *,
        output_column: builtins.str = ...,
        actual_tag: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["actual_tag", b"actual_tag", "output_column", b"output_column"]) -> None: ...

global___FeedbackConfig = FeedbackConfig

class ConfigureFeedbackResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ValueStatus:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ValueStatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ConfigureFeedbackResponse._ValueStatus.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        INVALID: ConfigureFeedbackResponse._ValueStatus.ValueType  # 0
        FAILURE: ConfigureFeedbackResponse._ValueStatus.ValueType  # 1
        """Feedback configuration could not be obtained"""
        SUCCESS: ConfigureFeedbackResponse._ValueStatus.ValueType  # 2
        """Feedback configuration is set"""

    class ValueStatus(_ValueStatus, metaclass=_ValueStatusEnumTypeWrapper): ...
    INVALID: ConfigureFeedbackResponse.ValueStatus.ValueType  # 0
    FAILURE: ConfigureFeedbackResponse.ValueStatus.ValueType  # 1
    """Feedback configuration could not be obtained"""
    SUCCESS: ConfigureFeedbackResponse.ValueStatus.ValueType  # 2
    """Feedback configuration is set"""

    STATUS_FIELD_NUMBER: builtins.int
    status: global___ConfigureFeedbackResponse.ValueStatus.ValueType
    """Config value status"""
    def __init__(
        self,
        *,
        status: global___ConfigureFeedbackResponse.ValueStatus.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___ConfigureFeedbackResponse = ConfigureFeedbackResponse
