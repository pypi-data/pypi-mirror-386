# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.monitoring.v0 import alerting_channel_sync_service_pb2 as qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2


class AlertingChannelSyncServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAlertingChannelsForEdgeCluster = channel.unary_unary(
                '/qwak.monitoring.v0.AlertingChannelSyncService/ListAlertingChannelsForEdgeCluster',
                request_serializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterRequest.SerializeToString,
                response_deserializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterResponse.FromString,
                )
        self.ListAlertingChannelsForCoreCluster = channel.unary_unary(
                '/qwak.monitoring.v0.AlertingChannelSyncService/ListAlertingChannelsForCoreCluster',
                request_serializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterRequest.SerializeToString,
                response_deserializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterResponse.FromString,
                )


class AlertingChannelSyncServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAlertingChannelsForEdgeCluster(self, request, context):
        """List alerting channels for edge channels
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAlertingChannelsForCoreCluster(self, request, context):
        """List alerting channels for core channels
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlertingChannelSyncServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAlertingChannelsForEdgeCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAlertingChannelsForEdgeCluster,
                    request_deserializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterRequest.FromString,
                    response_serializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterResponse.SerializeToString,
            ),
            'ListAlertingChannelsForCoreCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAlertingChannelsForCoreCluster,
                    request_deserializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterRequest.FromString,
                    response_serializer=qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.monitoring.v0.AlertingChannelSyncService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlertingChannelSyncService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAlertingChannelsForEdgeCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.monitoring.v0.AlertingChannelSyncService/ListAlertingChannelsForEdgeCluster',
            qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterRequest.SerializeToString,
            qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForEdgeClusterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAlertingChannelsForCoreCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.monitoring.v0.AlertingChannelSyncService/ListAlertingChannelsForCoreCluster',
            qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterRequest.SerializeToString,
            qwak_dot_monitoring_dot_v0_dot_alerting__channel__sync__service__pb2.ListAlertingChannelsForCoreClusterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
