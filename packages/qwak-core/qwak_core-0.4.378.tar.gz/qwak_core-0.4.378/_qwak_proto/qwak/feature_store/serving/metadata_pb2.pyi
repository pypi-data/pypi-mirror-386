"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import qwak.feature_store.entities.entity_pb2
import qwak.feature_store.features.feature_set_types_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class StreamingAggregationFeaturesetMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    FEATURESET_NAME_FIELD_NUMBER: builtins.int
    FEATURESET_ID_FIELD_NUMBER: builtins.int
    STREAMING_AGGREGATION_FEATURESET_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    AVRO_SCHEMA_JSON_FIELD_NUMBER: builtins.int
    environment_id: builtins.str
    """Multi environment support"""
    featureset_name: builtins.str
    """Featureset name"""
    featureset_id: builtins.str
    """Featureset id"""
    @property
    def streaming_aggregation_featureset(self) -> qwak.feature_store.features.feature_set_types_pb2.StreamingAggregationFeatureSet:
        """Streaming aggregation featureset"""
    @property
    def entity(self) -> qwak.feature_store.entities.entity_pb2.EntityDefinition:
        """Entity definition of the FeatureSet"""
    avro_schema_json: builtins.str
    """The avro schema in json format that represents the AggregationSpec"""
    def __init__(
        self,
        *,
        environment_id: builtins.str = ...,
        featureset_name: builtins.str = ...,
        featureset_id: builtins.str = ...,
        streaming_aggregation_featureset: qwak.feature_store.features.feature_set_types_pb2.StreamingAggregationFeatureSet | None = ...,
        entity: qwak.feature_store.entities.entity_pb2.EntityDefinition | None = ...,
        avro_schema_json: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity", b"entity", "streaming_aggregation_featureset", b"streaming_aggregation_featureset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["avro_schema_json", b"avro_schema_json", "entity", b"entity", "environment_id", b"environment_id", "featureset_id", b"featureset_id", "featureset_name", b"featureset_name", "streaming_aggregation_featureset", b"streaming_aggregation_featureset"]) -> None: ...

global___StreamingAggregationFeaturesetMetadata = StreamingAggregationFeaturesetMetadata

class BatchFeaturesetV1Metadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    FEATURESET_NAME_FIELD_NUMBER: builtins.int
    FEATURESET_ID_FIELD_NUMBER: builtins.int
    QWAK_PROTOCOL_VERSION_FIELD_NUMBER: builtins.int
    BATCH_FEATURESET_V1_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    environment_id: builtins.str
    """Multi environment support"""
    featureset_name: builtins.str
    """Featureset name"""
    featureset_id: builtins.str
    """Featureset id"""
    qwak_protocol_version: builtins.int
    """qwak protocol version"""
    @property
    def batch_featureset_v1(self) -> qwak.feature_store.features.feature_set_types_pb2.BatchFeatureSetV1:
        """batch v1 featureset"""
    @property
    def entity(self) -> qwak.feature_store.entities.entity_pb2.EntityDefinition:
        """Entity definition of the FeatureSet"""
    def __init__(
        self,
        *,
        environment_id: builtins.str = ...,
        featureset_name: builtins.str = ...,
        featureset_id: builtins.str = ...,
        qwak_protocol_version: builtins.int = ...,
        batch_featureset_v1: qwak.feature_store.features.feature_set_types_pb2.BatchFeatureSetV1 | None = ...,
        entity: qwak.feature_store.entities.entity_pb2.EntityDefinition | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["batch_featureset_v1", b"batch_featureset_v1", "entity", b"entity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_featureset_v1", b"batch_featureset_v1", "entity", b"entity", "environment_id", b"environment_id", "featureset_id", b"featureset_id", "featureset_name", b"featureset_name", "qwak_protocol_version", b"qwak_protocol_version"]) -> None: ...

global___BatchFeaturesetV1Metadata = BatchFeaturesetV1Metadata

class StreamingFeaturesetV1Metadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    FEATURESET_NAME_FIELD_NUMBER: builtins.int
    FEATURESET_ID_FIELD_NUMBER: builtins.int
    QWAK_PROTOCOL_VERSION_FIELD_NUMBER: builtins.int
    STREAMING_FEATURESET_V1_FIELD_NUMBER: builtins.int
    ENTITY_FIELD_NUMBER: builtins.int
    environment_id: builtins.str
    """Multi environment support"""
    featureset_name: builtins.str
    """Featureset name"""
    featureset_id: builtins.str
    """Featureset id"""
    qwak_protocol_version: builtins.int
    """qwak protocol version"""
    @property
    def streaming_featureset_v1(self) -> qwak.feature_store.features.feature_set_types_pb2.StreamingFeatureSetV1:
        """Streaming v1 featureset"""
    @property
    def entity(self) -> qwak.feature_store.entities.entity_pb2.EntityDefinition:
        """Entity definition of the FeatureSet"""
    def __init__(
        self,
        *,
        environment_id: builtins.str = ...,
        featureset_name: builtins.str = ...,
        featureset_id: builtins.str = ...,
        qwak_protocol_version: builtins.int = ...,
        streaming_featureset_v1: qwak.feature_store.features.feature_set_types_pb2.StreamingFeatureSetV1 | None = ...,
        entity: qwak.feature_store.entities.entity_pb2.EntityDefinition | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity", b"entity", "streaming_featureset_v1", b"streaming_featureset_v1"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity", b"entity", "environment_id", b"environment_id", "featureset_id", b"featureset_id", "featureset_name", b"featureset_name", "qwak_protocol_version", b"qwak_protocol_version", "streaming_featureset_v1", b"streaming_featureset_v1"]) -> None: ...

global___StreamingFeaturesetV1Metadata = StreamingFeaturesetV1Metadata

class FeaturesetMemoryUsageStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENVIRONMENT_ID_FIELD_NUMBER: builtins.int
    FEATURESET_ID_FIELD_NUMBER: builtins.int
    FEATURESET_NAME_FIELD_NUMBER: builtins.int
    ONLINE_USED_BYTES_FIELD_NUMBER: builtins.int
    environment_id: builtins.str
    """environment id"""
    featureset_id: builtins.str
    """featureset id"""
    featureset_name: builtins.str
    """featureset name"""
    online_used_bytes: builtins.int
    """number of bytes used in the online store"""
    def __init__(
        self,
        *,
        environment_id: builtins.str = ...,
        featureset_id: builtins.str = ...,
        featureset_name: builtins.str = ...,
        online_used_bytes: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["environment_id", b"environment_id", "featureset_id", b"featureset_id", "featureset_name", b"featureset_name", "online_used_bytes", b"online_used_bytes"]) -> None: ...

global___FeaturesetMemoryUsageStats = FeaturesetMemoryUsageStats
