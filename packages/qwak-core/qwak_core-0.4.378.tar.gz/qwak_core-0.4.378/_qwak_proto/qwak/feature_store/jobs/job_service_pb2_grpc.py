# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from _qwak_proto.qwak.feature_store.jobs import job_service_pb2 as qwak_dot_feature__store_dot_jobs_dot_job__service__pb2


class JobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ApplyJob = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/ApplyJob',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobResponse.FromString,
                )
        self.InitPagination = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/InitPagination',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationResponse.FromString,
                )
        self.ListJobs = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/ListJobs',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsResponse.FromString,
                )
        self.GetJobLogs = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/GetJobLogs',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsResponse.FromString,
                )
        self.GetLatestSuccessfulJob = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/GetLatestSuccessfulJob',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobResponse.FromString,
                )
        self.DeleteFeatureSetJobs = channel.unary_unary(
                '/qwak.feature.store.jobs.JobService/DeleteFeatureSetJobs',
                request_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsRequest.SerializeToString,
                response_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsResponse.FromString,
                )


class JobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ApplyJob(self, request, context):
        """Upsert a job record
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitPagination(self, request, context):
        """Initialise a pagination 'session' - returns the amount of records, and first record running id delimiter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """List all job records of a feature set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobLogs(self, request, context):
        """Get logs of a specific job
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestSuccessfulJob(self, request, context):
        """Get latest successful job of a feature set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFeatureSetJobs(self, request, context):
        """Delete all feature set jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ApplyJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyJob,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobResponse.SerializeToString,
            ),
            'InitPagination': grpc.unary_unary_rpc_method_handler(
                    servicer.InitPagination,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationResponse.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsResponse.SerializeToString,
            ),
            'GetJobLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobLogs,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsResponse.SerializeToString,
            ),
            'GetLatestSuccessfulJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestSuccessfulJob,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobResponse.SerializeToString,
            ),
            'DeleteFeatureSetJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFeatureSetJobs,
                    request_deserializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsRequest.FromString,
                    response_serializer=qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qwak.feature.store.jobs.JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ApplyJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/ApplyJob',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ApplyJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitPagination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/InitPagination',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.InitPaginationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/ListJobs',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.ListJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/GetJobLogs',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetJobLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestSuccessfulJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/GetLatestSuccessfulJob',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.GetLatestSuccessfulJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFeatureSetJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qwak.feature.store.jobs.JobService/DeleteFeatureSetJobs',
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsRequest.SerializeToString,
            qwak_dot_feature__store_dot_jobs_dot_job__service__pb2.DeleteFeatureSetJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
