[tool.poetry]
name = "qwak-core"
version = "0.4.378"
description = "Qwak Core contains the necessary objects and communication tools for using the Qwak Platform"
authors = ["Qwak <info@qwak.com>"]
readme = "README.md"
keywords = ["mlops", "ml", "deployment", "serving", "model"]
packages = [
    { include = "qwak/**/*", format = ["sdist", "wheel"] },
    { include = "_qwak_proto/**/*", format = ["sdist", "wheel"] },
    { include = "qwak_services_mock/**/*", format = ["sdist", "wheel"] },
]
include = [
    {path = "qwak/**/*", format = ["sdist", "wheel"]},
    {path = "_qwak_proto/**/*", format = ["sdist", "wheel"]},
    {path = "qwak_services_mock/**/*", format = ["sdist", "wheel"]},
]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
license = "Apache-2.0"

[tool.poetry.urls]
"Home page" = "https://www.qwak.com/"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
python-json-logger = ">=2.0.2"
grpcio = ">=1.71.2"
protobuf = ">=4.25.8,<5"
dependency-injector = ">=4.0"
requests = "*"
python-jose = {version = ">=3.4.0", extras = ["cryptography"]}
PyYAML = ">=6.0.2"
filelock = "*"
marshmallow-dataclass = "^8.5.8"
typeguard = "^2"
joblib = "^1.3.2"
pyspark = { version = "==3.4.2", optional = true }
pyarrow = { version = ">=20.0.0", optional = true }
pyathena = { version = ">=2.2.0,!=2.18.0", optional = true }
cloudpickle = "2.2.1"
retrying = "1.3.4"
chevron = "==0.14.0"
dacite = "==1.8.1"
cachetools = "*"
pydantic = "*"
typer = "*"
tqdm = "*"
orjson = {version = "^3.11.1", optional = true}

[tool.poetry.group.dev.dependencies]
pyarrow = { version = ">=20.0.0" }
pytest = "^8.4.1"
pyspark = "3.4.2"
pytest-httpserver = "^1.1.3"
black = ">=24.3.0"
flake8 = ">=7.0.0"
bandit = { version = "^1.7.5", extras = ["toml"] }
coverage = ">=7.4.0"
typing_extensions = ">=4.4.0"
bump2version = "1.0.1"
grpcio-tools = [
    { version = ">=1.47.0", python = ">=3.7.1,<3.10" },
    { version = ">=1.56.2", python = ">=3.10" }
]
mypy-protobuf = "^3.0.0"
pytest-lazy-fixtures = "^1.1.4"
changelog-cli = "*"
testcontainers = "^3.6.1"
sqlalchemy = "==1.4.22"
sqlalchemy-utils = "<=0.36.5,>=0.36.2"
trino = "^0.319.0"
pandas = [
    { version = "<1.4", python = ">=3.7.1,<3.8" },
    { version = ">=1.4.0", python = ">=3.8,<3.12" }
]
numpy = [
    { version = ">=1.21.6", python = ">=3.7.1,<3.10" },
    { version = ">=1.24.0", python = ">=3.10" }
]
tensorflow = [
    { version = "^2.8.0", markers = "platform_machine != 'arm64'", python = "<3.10" },
    { version = "^2.13.0", markers = "platform_machine != 'arm64'", python = ">=3.10" }
]
tensorflow-macos = [
    { version = "^2.8.0", markers = "platform_machine == 'arm64'", python = "<3.10" },
    { version = "^2.13.0", markers = "platform_machine == 'arm64'", python = ">=3.10" }
]
tensorflow-io-gcs-filesystem = [
    { version = "^0.34.0", markers = "platform_machine == 'arm64'" }
]
imageio = "^2.16.0"
QwakBentoML = { version = "0.0.8", source = "qwak" }
croniter = "==1.4.1"
mypy = ">=1.9.0"
isort = ">=5.13.0"
types-requests = ">=2.28.0"
pre-commit = "^4.2.0"
orjson = {version = "^3.11.1"}


[tool.poetry.extras]
feature-store = ["pyarrow", "pyathena", "cloudpickle", "pyspark" ,"pandas"]


[tool.black]
extend-exclude = '''
(
     .*_pb2.py
    | .*_pb2_grpc.py
)'''

[tool.pytest.ini_options]
addopts = [
    "--strict-markers"
]
markers = [
    "integration: marks tests as slow (deselect with '-m \"not integration\"')",
]

[tool.bandit]

[tool.poe.tasks]
generate = { cmd = "./scripts/gen-proto.sh" }
clean = { cmd = "rm -rf dist ./**/__pycache__", help = "Clean build artifacts" }
install = "poetry install"
validate = { cmd = "pre-commit run  --all-files", help = "Check lint on all files" }
test = { cmd = "pytest --disable-warnings tests", help = "Run tests" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = 'qwak'
url = 'https://qwak.jfrog.io/artifactory/api/pypi/qwak-pypi/simple'
priority = "supplemental"
