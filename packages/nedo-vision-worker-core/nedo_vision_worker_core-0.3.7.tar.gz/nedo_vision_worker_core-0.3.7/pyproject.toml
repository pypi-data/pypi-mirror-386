[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nedo-vision-worker-core"
dynamic = ["version"]
description = "Nedo Vision Worker Core Library for AI Vision Processing"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Willy Achmat Fauzi", email = "willy.achmat@gmail.com"}
]
maintainers = [
    {name = "Willy Achmat Fauzi", email = "willy.achmat@gmail.com"}
]
keywords = [
    "computer-vision",
    "machine-learning", 
    "ai",
    "worker-core",
    "deep-learning",
    "object-detection",
    "neural-networks",
    "video-processing",
    "pytorch",
    "yolo",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Hardware",
    "Environment :: GPU",
    "Environment :: No Input/Output (Daemon)",
]
requires-python = ">=3.8"
dependencies = [
    "alembic>=1.8.0",
    "numpy>=1.21.0", 
    "pillow>=8.0.0",
    "psutil>=5.9.0",
    "scipy>=1.9.0",
    "shapely>=1.8.0",
    "SQLAlchemy>=1.4.0",
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "ultralytics>=8.0.0",
    "rfdetr>=1.2.0,<2.0.0",
]

[project.optional-dependencies]
# OpenCV dependencies - use this if not using system packages or custom build
opencv = [
    "opencv-python>=4.6.0",
]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "flake8>=4.0.0",
    "pre-commit>=2.17.0",
]

[project.urls]
Homepage = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-worker-core-v2"
Documentation = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-worker-core-v2/-/blob/main/README.md"
Repository = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-worker-core-v2"
"Bug Reports" = "https://gitlab.com/sindika/research/nedo-vision/nedo-vision-worker-core-v2/-/issues"

[project.scripts]
nedo-worker-core = "nedo_vision_worker_core.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["nedo_vision_worker_core*"]

[tool.setuptools.dynamic]
version = {attr = "nedo_vision_worker_core.__version__"}

[tool.setuptools.package-data]
nedo_vision_worker_core = [
    "drawing_assets/**/*",
    "icons/**/*",
    "*.yaml",
    "*.yml", 
    "*.json",
    "*.txt",
    "**/*.yaml",
    "**/*.yml",
    "**/*.json", 
    "**/*.txt",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nedo_vision_worker_core"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
