name: Build and Publish Wheels

permissions:
  contents: write

on:
  push:
    branches: [main]

jobs:
  prepare:
    name: Determine release version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      release: ${{ steps.tag-check.outputs.release }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Read project version
        id: version
        run: |
          version=$(grep -E '^version\s*=' pyproject.toml | awk -F'"' '{print $2}')
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Check if tag already exists
        id: tag-check
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          if git rev-parse "v${VERSION}" >/dev/null 2>&1; then
            echo "release=false" >> "$GITHUB_OUTPUT"
            echo "Tag v${VERSION} already exists - skipping release."
          else
            echo "release=true" >> "$GITHUB_OUTPUT"
          fi

  build:
    name: Build wheels (${{ matrix.target }})
    needs: prepare
    if: needs.prepare.outputs.release == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: --release --out dist

      - name: Build source distribution
        if: matrix.os == 'ubuntu-22.04'
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.target }}
          path: dist/*

  publish:
    name: Publish to PyPI
    needs:
      - prepare
      - build
    if: needs.prepare.outputs.release == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          name: v${{ needs.prepare.outputs.version }}
          generate_release_notes: true
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
