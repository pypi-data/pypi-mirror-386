{"version":3,"file":"chunk-INHXZS53-COD47_NQ.js","names":[],"sources":["../../../frontend/node_modules/numcodecs/dist/chunk-INHXZS53.js"],"sourcesContent":["var __toBinary = /* @__PURE__ */ (() => {\n  var table = new Uint8Array(128);\n  for (var i = 0; i < 64; i++)\n    table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;\n  return (base64) => {\n    var n = base64.length, bytes = new Uint8Array((n - (base64[n - 1] == \"=\") - (base64[n - 2] == \"=\")) * 3 / 4 | 0);\n    for (var i2 = 0, j = 0; i2 < n; ) {\n      var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];\n      var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];\n      bytes[j++] = c0 << 2 | c1 >> 4;\n      bytes[j++] = c1 << 4 | c2 >> 2;\n      bytes[j++] = c2 << 6 | c3;\n    }\n    return bytes;\n  };\n})();\n\nexport {\n  __toBinary\n};\n"],"x_google_ignoreList":[0],"mappings":"AAAA,IAAI,OAAoC,CAEtC,IAAK,IADD,EAAQ,IAAI,WAAW,IAAI,CACtB,EAAI,EAAG,EAAI,GAAI,IACtB,EAAM,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,GAAK,EAAI,EAAI,EAAI,EAAI,KAAO,EAC5E,MAAQ,IAAW,CAEjB,IAAK,IADD,EAAI,EAAO,OAAQ,EAAQ,IAAI,YAAY,GAAK,EAAO,EAAI,IAAM,MAAQ,EAAO,EAAI,IAAM,MAAQ,EAAI,EAAI,EAAE,CACvG,EAAK,EAAG,EAAI,EAAG,EAAK,GAAK,CAChC,IAAI,EAAK,EAAM,EAAO,WAAW,IAAK,EAAG,EAAK,EAAM,EAAO,WAAW,IAAK,EACvE,EAAK,EAAM,EAAO,WAAW,IAAK,EAAG,EAAK,EAAM,EAAO,WAAW,IAAK,EAC3E,EAAM,KAAO,GAAM,EAAI,GAAM,EAC7B,EAAM,KAAO,GAAM,EAAI,GAAM,EAC7B,EAAM,KAAO,GAAM,EAAI,EAEzB,OAAO,MAEP"}