"""
Type annotations for securityhub service literal definitions.

[Documentation](https://youtype.github.io/types_boto3_docs/types_boto3_securityhub/literals/)

Copyright 2025 Vlad Emelianov

Usage::

    ```python
    from types_boto3_securityhub.literals import ActorSessionMfaStatusType

    data: ActorSessionMfaStatusType = "DISABLED"
    ```
"""

import sys

if sys.version_info >= (3, 12):
    from typing import Literal
else:
    from typing_extensions import Literal

__all__ = (
    "ActorSessionMfaStatusType",
    "AdminStatusType",
    "AllowedOperatorsType",
    "AssociationStatusType",
    "AssociationTypeType",
    "AutoEnableStandardsType",
    "AutomationRulesActionTypeType",
    "AutomationRulesActionTypeV2Type",
    "AwsIamAccessKeyStatusType",
    "AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameType",
    "BatchUpdateFindingsV2UnprocessedFindingErrorCodeType",
    "ComplianceStatusType",
    "ConfigurationPolicyAssociationStatusType",
    "ConnectionDirectionType",
    "ConnectorAuthStatusType",
    "ConnectorProviderNameType",
    "ConnectorStatusType",
    "ControlFindingGeneratorType",
    "ControlStatusType",
    "DateRangeUnitType",
    "DescribeActionTargetsPaginatorName",
    "DescribeProductsPaginatorName",
    "DescribeProductsV2PaginatorName",
    "DescribeStandardsControlsPaginatorName",
    "DescribeStandardsPaginatorName",
    "FindingHistoryUpdateSourceTypeType",
    "GetEnabledStandardsPaginatorName",
    "GetFindingHistoryPaginatorName",
    "GetFindingsPaginatorName",
    "GetFindingsV2PaginatorName",
    "GetInsightsPaginatorName",
    "GetResourcesV2PaginatorName",
    "GroupByFieldType",
    "IntegrationTypeType",
    "IntegrationV2TypeType",
    "ListAggregatorsV2PaginatorName",
    "ListConfigurationPoliciesPaginatorName",
    "ListConfigurationPolicyAssociationsPaginatorName",
    "ListEnabledProductsForImportPaginatorName",
    "ListFindingAggregatorsPaginatorName",
    "ListInvitationsPaginatorName",
    "ListMembersPaginatorName",
    "ListOrganizationAdminAccountsPaginatorName",
    "ListSecurityControlDefinitionsPaginatorName",
    "ListStandardsControlAssociationsPaginatorName",
    "MalwareStateType",
    "MalwareTypeType",
    "MapFilterComparisonType",
    "NetworkDirectionType",
    "OcsfBooleanFieldType",
    "OcsfDateFieldType",
    "OcsfMapFieldType",
    "OcsfNumberFieldType",
    "OcsfStringFieldType",
    "OrganizationConfigurationConfigurationTypeType",
    "OrganizationConfigurationStatusType",
    "PaginatorName",
    "ParameterValueTypeType",
    "PartitionType",
    "RecordStateType",
    "RegionAvailabilityStatusType",
    "RegionName",
    "ResourceCategoryType",
    "ResourceGroupByFieldType",
    "ResourceServiceName",
    "ResourcesDateFieldType",
    "ResourcesMapFieldType",
    "ResourcesNumberFieldType",
    "ResourcesStringFieldType",
    "RuleStatusType",
    "RuleStatusV2Type",
    "SecurityControlPropertyType",
    "SecurityHubFeatureType",
    "SecurityHubServiceName",
    "ServiceName",
    "SeverityLabelType",
    "SeverityRatingType",
    "SortOrderType",
    "StandardsControlsUpdatableType",
    "StandardsStatusType",
    "StatusReasonCodeType",
    "StringFilterComparisonType",
    "TargetTypeType",
    "ThreatIntelIndicatorCategoryType",
    "ThreatIntelIndicatorTypeType",
    "UnprocessedErrorCodeType",
    "UpdateStatusType",
    "VerificationStateType",
    "VulnerabilityExploitAvailableType",
    "VulnerabilityFixAvailableType",
    "WorkflowStateType",
    "WorkflowStatusType",
)

ActorSessionMfaStatusType = Literal["DISABLED", "ENABLED"]
AdminStatusType = Literal["DISABLE_IN_PROGRESS", "ENABLED"]
AllowedOperatorsType = Literal["AND", "OR"]
AssociationStatusType = Literal["DISABLED", "ENABLED"]
AssociationTypeType = Literal["APPLIED", "INHERITED"]
AutoEnableStandardsType = Literal["DEFAULT", "NONE"]
AutomationRulesActionTypeType = Literal["FINDING_FIELDS_UPDATE"]
AutomationRulesActionTypeV2Type = Literal["EXTERNAL_INTEGRATION", "FINDING_FIELDS_UPDATE"]
AwsIamAccessKeyStatusType = Literal["Active", "Inactive"]
AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameType = Literal["Prefix", "Suffix"]
BatchUpdateFindingsV2UnprocessedFindingErrorCodeType = Literal[
    "ConflictException",
    "InternalServerException",
    "ResourceNotFoundException",
    "ValidationException",
]
ComplianceStatusType = Literal["FAILED", "NOT_AVAILABLE", "PASSED", "WARNING"]
ConfigurationPolicyAssociationStatusType = Literal["FAILED", "PENDING", "SUCCESS"]
ConnectionDirectionType = Literal["INBOUND", "OUTBOUND"]
ConnectorAuthStatusType = Literal["ACTIVE", "FAILED"]
ConnectorProviderNameType = Literal["JIRA_CLOUD", "SERVICENOW"]
ConnectorStatusType = Literal[
    "CONNECTED", "FAILED_TO_CONNECT", "PENDING_AUTHORIZATION", "PENDING_CONFIGURATION"
]
ControlFindingGeneratorType = Literal["SECURITY_CONTROL", "STANDARD_CONTROL"]
ControlStatusType = Literal["DISABLED", "ENABLED"]
DateRangeUnitType = Literal["DAYS"]
DescribeActionTargetsPaginatorName = Literal["describe_action_targets"]
DescribeProductsPaginatorName = Literal["describe_products"]
DescribeProductsV2PaginatorName = Literal["describe_products_v2"]
DescribeStandardsControlsPaginatorName = Literal["describe_standards_controls"]
DescribeStandardsPaginatorName = Literal["describe_standards"]
FindingHistoryUpdateSourceTypeType = Literal["BATCH_IMPORT_FINDINGS", "BATCH_UPDATE_FINDINGS"]
GetEnabledStandardsPaginatorName = Literal["get_enabled_standards"]
GetFindingHistoryPaginatorName = Literal["get_finding_history"]
GetFindingsPaginatorName = Literal["get_findings"]
GetFindingsV2PaginatorName = Literal["get_findings_v2"]
GetInsightsPaginatorName = Literal["get_insights"]
GetResourcesV2PaginatorName = Literal["get_resources_v2"]
GroupByFieldType = Literal[
    "activity_name",
    "class_name",
    "cloud.account.uid",
    "cloud.provider",
    "cloud.region",
    "compliance.assessments.name",
    "compliance.control",
    "compliance.status",
    "finding_info.title",
    "finding_info.types",
    "metadata.product.name",
    "metadata.product.uid",
    "resources.type",
    "resources.uid",
    "severity",
    "status",
    "vulnerabilities.fix_coverage",
]
IntegrationTypeType = Literal[
    "RECEIVE_FINDINGS_FROM_SECURITY_HUB",
    "SEND_FINDINGS_TO_SECURITY_HUB",
    "UPDATE_FINDINGS_IN_SECURITY_HUB",
]
IntegrationV2TypeType = Literal[
    "RECEIVE_FINDINGS_FROM_SECURITY_HUB",
    "SEND_FINDINGS_TO_SECURITY_HUB",
    "UPDATE_FINDINGS_IN_SECURITY_HUB",
]
ListAggregatorsV2PaginatorName = Literal["list_aggregators_v2"]
ListConfigurationPoliciesPaginatorName = Literal["list_configuration_policies"]
ListConfigurationPolicyAssociationsPaginatorName = Literal["list_configuration_policy_associations"]
ListEnabledProductsForImportPaginatorName = Literal["list_enabled_products_for_import"]
ListFindingAggregatorsPaginatorName = Literal["list_finding_aggregators"]
ListInvitationsPaginatorName = Literal["list_invitations"]
ListMembersPaginatorName = Literal["list_members"]
ListOrganizationAdminAccountsPaginatorName = Literal["list_organization_admin_accounts"]
ListSecurityControlDefinitionsPaginatorName = Literal["list_security_control_definitions"]
ListStandardsControlAssociationsPaginatorName = Literal["list_standards_control_associations"]
MalwareStateType = Literal["OBSERVED", "REMOVAL_FAILED", "REMOVED"]
MalwareTypeType = Literal[
    "ADWARE",
    "BLENDED_THREAT",
    "BOTNET_AGENT",
    "COIN_MINER",
    "EXPLOIT_KIT",
    "KEYLOGGER",
    "MACRO",
    "POTENTIALLY_UNWANTED",
    "RANSOMWARE",
    "REMOTE_ACCESS",
    "ROOTKIT",
    "SPYWARE",
    "TROJAN",
    "VIRUS",
    "WORM",
]
MapFilterComparisonType = Literal["CONTAINS", "EQUALS", "NOT_CONTAINS", "NOT_EQUALS"]
NetworkDirectionType = Literal["IN", "OUT"]
OcsfBooleanFieldType = Literal[
    "compliance.assessments.meets_criteria",
    "vulnerabilities.is_exploit_available",
    "vulnerabilities.is_fix_available",
]
OcsfDateFieldType = Literal[
    "finding_info.created_time_dt",
    "finding_info.first_seen_time_dt",
    "finding_info.last_seen_time_dt",
    "finding_info.modified_time_dt",
]
OcsfMapFieldType = Literal["resources.tags"]
OcsfNumberFieldType = Literal[
    "activity_id",
    "compliance.status_id",
    "confidence_score",
    "finding_info.related_events_count",
    "severity_id",
    "status_id",
]
OcsfStringFieldType = Literal[
    "activity_name",
    "class_name",
    "cloud.account.uid",
    "cloud.provider",
    "cloud.region",
    "comment",
    "compliance.assessments.category",
    "compliance.assessments.name",
    "compliance.control",
    "compliance.standards",
    "compliance.status",
    "finding_info.desc",
    "finding_info.related_events.product.uid",
    "finding_info.related_events.title",
    "finding_info.related_events.uid",
    "finding_info.src_url",
    "finding_info.title",
    "finding_info.types",
    "finding_info.uid",
    "metadata.product.name",
    "metadata.product.uid",
    "metadata.product.vendor_name",
    "metadata.uid",
    "remediation.desc",
    "remediation.references",
    "resources.cloud_partition",
    "resources.region",
    "resources.type",
    "resources.uid",
    "severity",
    "status",
    "vulnerabilities.fix_coverage",
]
OrganizationConfigurationConfigurationTypeType = Literal["CENTRAL", "LOCAL"]
OrganizationConfigurationStatusType = Literal["ENABLED", "FAILED", "PENDING"]
ParameterValueTypeType = Literal["CUSTOM", "DEFAULT"]
PartitionType = Literal["aws", "aws-cn", "aws-us-gov"]
RecordStateType = Literal["ACTIVE", "ARCHIVED"]
RegionAvailabilityStatusType = Literal["AVAILABLE", "UNAVAILABLE"]
ResourceCategoryType = Literal[
    "AI/ML", "Code", "Compute", "Database", "Identity", "Network", "Other", "Storage"
]
ResourceGroupByFieldType = Literal[
    "account_id",
    "findings_summary.finding_type",
    "region",
    "resource_category",
    "resource_name",
    "resource_type",
]
ResourcesDateFieldType = Literal["resource_creation_time_dt", "resource_detail_capture_time_dt"]
ResourcesMapFieldType = Literal["tags"]
ResourcesNumberFieldType = Literal[
    "findings_summary.severities.critical",
    "findings_summary.severities.fatal",
    "findings_summary.severities.high",
    "findings_summary.severities.informational",
    "findings_summary.severities.low",
    "findings_summary.severities.medium",
    "findings_summary.severities.other",
    "findings_summary.severities.unknown",
    "findings_summary.total_findings",
]
ResourcesStringFieldType = Literal[
    "account_id",
    "findings_summary.finding_type",
    "findings_summary.product_name",
    "region",
    "resource_arn",
    "resource_category",
    "resource_id",
    "resource_name",
    "resource_type",
]
RuleStatusType = Literal["DISABLED", "ENABLED"]
RuleStatusV2Type = Literal["DISABLED", "ENABLED"]
SecurityControlPropertyType = Literal["Parameters"]
SecurityHubFeatureType = Literal["SecurityHub", "SecurityHubV2"]
SeverityLabelType = Literal["CRITICAL", "HIGH", "INFORMATIONAL", "LOW", "MEDIUM"]
SeverityRatingType = Literal["CRITICAL", "HIGH", "LOW", "MEDIUM"]
SortOrderType = Literal["asc", "desc"]
StandardsControlsUpdatableType = Literal["NOT_READY_FOR_UPDATES", "READY_FOR_UPDATES"]
StandardsStatusType = Literal["DELETING", "FAILED", "INCOMPLETE", "PENDING", "READY"]
StatusReasonCodeType = Literal[
    "INTERNAL_ERROR",
    "MAXIMUM_NUMBER_OF_CONFIG_RULES_EXCEEDED",
    "NO_AVAILABLE_CONFIGURATION_RECORDER",
]
StringFilterComparisonType = Literal[
    "CONTAINS",
    "CONTAINS_WORD",
    "EQUALS",
    "NOT_CONTAINS",
    "NOT_EQUALS",
    "PREFIX",
    "PREFIX_NOT_EQUALS",
]
TargetTypeType = Literal["ACCOUNT", "ORGANIZATIONAL_UNIT", "ROOT"]
ThreatIntelIndicatorCategoryType = Literal[
    "BACKDOOR", "CARD_STEALER", "COMMAND_AND_CONTROL", "DROP_SITE", "EXPLOIT_SITE", "KEYLOGGER"
]
ThreatIntelIndicatorTypeType = Literal[
    "DOMAIN",
    "EMAIL_ADDRESS",
    "HASH_MD5",
    "HASH_SHA1",
    "HASH_SHA256",
    "HASH_SHA512",
    "IPV4_ADDRESS",
    "IPV6_ADDRESS",
    "MUTEX",
    "PROCESS",
    "URL",
]
UnprocessedErrorCodeType = Literal[
    "ACCESS_DENIED", "INVALID_INPUT", "LIMIT_EXCEEDED", "NOT_FOUND", "RESOURCE_NOT_FOUND"
]
UpdateStatusType = Literal["READY", "UPDATING"]
VerificationStateType = Literal["BENIGN_POSITIVE", "FALSE_POSITIVE", "TRUE_POSITIVE", "UNKNOWN"]
VulnerabilityExploitAvailableType = Literal["NO", "YES"]
VulnerabilityFixAvailableType = Literal["NO", "PARTIAL", "YES"]
WorkflowStateType = Literal["ASSIGNED", "DEFERRED", "IN_PROGRESS", "NEW", "RESOLVED"]
WorkflowStatusType = Literal["NEW", "NOTIFIED", "RESOLVED", "SUPPRESSED"]
SecurityHubServiceName = Literal["securityhub"]
ServiceName = Literal[
    "accessanalyzer",
    "account",
    "acm",
    "acm-pca",
    "aiops",
    "amp",
    "amplify",
    "amplifybackend",
    "amplifyuibuilder",
    "apigateway",
    "apigatewaymanagementapi",
    "apigatewayv2",
    "appconfig",
    "appconfigdata",
    "appfabric",
    "appflow",
    "appintegrations",
    "application-autoscaling",
    "application-insights",
    "application-signals",
    "applicationcostprofiler",
    "appmesh",
    "apprunner",
    "appstream",
    "appsync",
    "apptest",
    "arc-region-switch",
    "arc-zonal-shift",
    "artifact",
    "athena",
    "auditmanager",
    "autoscaling",
    "autoscaling-plans",
    "b2bi",
    "backup",
    "backup-gateway",
    "backupsearch",
    "batch",
    "bcm-dashboards",
    "bcm-data-exports",
    "bcm-pricing-calculator",
    "bcm-recommended-actions",
    "bedrock",
    "bedrock-agent",
    "bedrock-agent-runtime",
    "bedrock-agentcore",
    "bedrock-agentcore-control",
    "bedrock-data-automation",
    "bedrock-data-automation-runtime",
    "bedrock-runtime",
    "billing",
    "billingconductor",
    "braket",
    "budgets",
    "ce",
    "chatbot",
    "chime",
    "chime-sdk-identity",
    "chime-sdk-media-pipelines",
    "chime-sdk-meetings",
    "chime-sdk-messaging",
    "chime-sdk-voice",
    "cleanrooms",
    "cleanroomsml",
    "cloud9",
    "cloudcontrol",
    "clouddirectory",
    "cloudformation",
    "cloudfront",
    "cloudfront-keyvaluestore",
    "cloudhsm",
    "cloudhsmv2",
    "cloudsearch",
    "cloudsearchdomain",
    "cloudtrail",
    "cloudtrail-data",
    "cloudwatch",
    "codeartifact",
    "codebuild",
    "codecatalyst",
    "codecommit",
    "codeconnections",
    "codedeploy",
    "codeguru-reviewer",
    "codeguru-security",
    "codeguruprofiler",
    "codepipeline",
    "codestar-connections",
    "codestar-notifications",
    "cognito-identity",
    "cognito-idp",
    "cognito-sync",
    "comprehend",
    "comprehendmedical",
    "compute-optimizer",
    "config",
    "connect",
    "connect-contact-lens",
    "connectcampaigns",
    "connectcampaignsv2",
    "connectcases",
    "connectparticipant",
    "controlcatalog",
    "controltower",
    "cost-optimization-hub",
    "cur",
    "customer-profiles",
    "databrew",
    "dataexchange",
    "datapipeline",
    "datasync",
    "datazone",
    "dax",
    "deadline",
    "detective",
    "devicefarm",
    "devops-guru",
    "directconnect",
    "discovery",
    "dlm",
    "dms",
    "docdb",
    "docdb-elastic",
    "drs",
    "ds",
    "ds-data",
    "dsql",
    "dynamodb",
    "dynamodbstreams",
    "ebs",
    "ec2",
    "ec2-instance-connect",
    "ecr",
    "ecr-public",
    "ecs",
    "efs",
    "eks",
    "eks-auth",
    "elasticache",
    "elasticbeanstalk",
    "elastictranscoder",
    "elb",
    "elbv2",
    "emr",
    "emr-containers",
    "emr-serverless",
    "entityresolution",
    "es",
    "events",
    "evidently",
    "evs",
    "finspace",
    "finspace-data",
    "firehose",
    "fis",
    "fms",
    "forecast",
    "forecastquery",
    "frauddetector",
    "freetier",
    "fsx",
    "gamelift",
    "gameliftstreams",
    "geo-maps",
    "geo-places",
    "geo-routes",
    "glacier",
    "globalaccelerator",
    "glue",
    "grafana",
    "greengrass",
    "greengrassv2",
    "groundstation",
    "guardduty",
    "health",
    "healthlake",
    "iam",
    "identitystore",
    "imagebuilder",
    "importexport",
    "inspector",
    "inspector-scan",
    "inspector2",
    "internetmonitor",
    "invoicing",
    "iot",
    "iot-data",
    "iot-jobs-data",
    "iot-managed-integrations",
    "iotanalytics",
    "iotdeviceadvisor",
    "iotevents",
    "iotevents-data",
    "iotfleethub",
    "iotfleetwise",
    "iotsecuretunneling",
    "iotsitewise",
    "iotthingsgraph",
    "iottwinmaker",
    "iotwireless",
    "ivs",
    "ivs-realtime",
    "ivschat",
    "kafka",
    "kafkaconnect",
    "kendra",
    "kendra-ranking",
    "keyspaces",
    "keyspacesstreams",
    "kinesis",
    "kinesis-video-archived-media",
    "kinesis-video-media",
    "kinesis-video-signaling",
    "kinesis-video-webrtc-storage",
    "kinesisanalytics",
    "kinesisanalyticsv2",
    "kinesisvideo",
    "kms",
    "lakeformation",
    "lambda",
    "launch-wizard",
    "lex-models",
    "lex-runtime",
    "lexv2-models",
    "lexv2-runtime",
    "license-manager",
    "license-manager-linux-subscriptions",
    "license-manager-user-subscriptions",
    "lightsail",
    "location",
    "logs",
    "lookoutequipment",
    "lookoutmetrics",
    "lookoutvision",
    "m2",
    "machinelearning",
    "macie2",
    "mailmanager",
    "managedblockchain",
    "managedblockchain-query",
    "marketplace-agreement",
    "marketplace-catalog",
    "marketplace-deployment",
    "marketplace-entitlement",
    "marketplace-reporting",
    "marketplacecommerceanalytics",
    "mediaconnect",
    "mediaconvert",
    "medialive",
    "mediapackage",
    "mediapackage-vod",
    "mediapackagev2",
    "mediastore",
    "mediastore-data",
    "mediatailor",
    "medical-imaging",
    "memorydb",
    "meteringmarketplace",
    "mgh",
    "mgn",
    "migration-hub-refactor-spaces",
    "migrationhub-config",
    "migrationhuborchestrator",
    "migrationhubstrategy",
    "mpa",
    "mq",
    "mturk",
    "mwaa",
    "neptune",
    "neptune-graph",
    "neptunedata",
    "network-firewall",
    "networkflowmonitor",
    "networkmanager",
    "networkmonitor",
    "notifications",
    "notificationscontacts",
    "oam",
    "observabilityadmin",
    "odb",
    "omics",
    "opensearch",
    "opensearchserverless",
    "organizations",
    "osis",
    "outposts",
    "panorama",
    "partnercentral-selling",
    "payment-cryptography",
    "payment-cryptography-data",
    "pca-connector-ad",
    "pca-connector-scep",
    "pcs",
    "personalize",
    "personalize-events",
    "personalize-runtime",
    "pi",
    "pinpoint",
    "pinpoint-email",
    "pinpoint-sms-voice",
    "pinpoint-sms-voice-v2",
    "pipes",
    "polly",
    "pricing",
    "proton",
    "qapps",
    "qbusiness",
    "qconnect",
    "qldb",
    "qldb-session",
    "quicksight",
    "ram",
    "rbin",
    "rds",
    "rds-data",
    "redshift",
    "redshift-data",
    "redshift-serverless",
    "rekognition",
    "repostspace",
    "resiliencehub",
    "resource-explorer-2",
    "resource-groups",
    "resourcegroupstaggingapi",
    "robomaker",
    "rolesanywhere",
    "route53",
    "route53-recovery-cluster",
    "route53-recovery-control-config",
    "route53-recovery-readiness",
    "route53domains",
    "route53profiles",
    "route53resolver",
    "rtbfabric",
    "rum",
    "s3",
    "s3control",
    "s3outposts",
    "s3tables",
    "s3vectors",
    "sagemaker",
    "sagemaker-a2i-runtime",
    "sagemaker-edge",
    "sagemaker-featurestore-runtime",
    "sagemaker-geospatial",
    "sagemaker-metrics",
    "sagemaker-runtime",
    "savingsplans",
    "scheduler",
    "schemas",
    "sdb",
    "secretsmanager",
    "security-ir",
    "securityhub",
    "securitylake",
    "serverlessrepo",
    "service-quotas",
    "servicecatalog",
    "servicecatalog-appregistry",
    "servicediscovery",
    "ses",
    "sesv2",
    "shield",
    "signer",
    "simspaceweaver",
    "snow-device-management",
    "snowball",
    "sns",
    "socialmessaging",
    "sqs",
    "ssm",
    "ssm-contacts",
    "ssm-guiconnect",
    "ssm-incidents",
    "ssm-quicksetup",
    "ssm-sap",
    "sso",
    "sso-admin",
    "sso-oidc",
    "stepfunctions",
    "storagegateway",
    "sts",
    "supplychain",
    "support",
    "support-app",
    "swf",
    "synthetics",
    "taxsettings",
    "textract",
    "timestream-influxdb",
    "timestream-query",
    "timestream-write",
    "tnb",
    "transcribe",
    "transfer",
    "translate",
    "trustedadvisor",
    "verifiedpermissions",
    "voice-id",
    "vpc-lattice",
    "waf",
    "waf-regional",
    "wafv2",
    "wellarchitected",
    "wisdom",
    "workdocs",
    "workmail",
    "workmailmessageflow",
    "workspaces",
    "workspaces-instances",
    "workspaces-thin-client",
    "workspaces-web",
    "xray",
]
ResourceServiceName = Literal[
    "cloudformation", "cloudwatch", "dynamodb", "ec2", "glacier", "iam", "s3", "sns", "sqs"
]
PaginatorName = Literal[
    "describe_action_targets",
    "describe_products",
    "describe_products_v2",
    "describe_standards",
    "describe_standards_controls",
    "get_enabled_standards",
    "get_finding_history",
    "get_findings",
    "get_findings_v2",
    "get_insights",
    "get_resources_v2",
    "list_aggregators_v2",
    "list_configuration_policies",
    "list_configuration_policy_associations",
    "list_enabled_products_for_import",
    "list_finding_aggregators",
    "list_invitations",
    "list_members",
    "list_organization_admin_accounts",
    "list_security_control_definitions",
    "list_standards_control_associations",
]
RegionName = Literal[
    "af-south-1",
    "ap-east-1",
    "ap-east-2",
    "ap-northeast-1",
    "ap-northeast-2",
    "ap-northeast-3",
    "ap-south-1",
    "ap-south-2",
    "ap-southeast-1",
    "ap-southeast-2",
    "ap-southeast-3",
    "ap-southeast-4",
    "ap-southeast-5",
    "ap-southeast-6",
    "ap-southeast-7",
    "ca-central-1",
    "ca-west-1",
    "eu-central-1",
    "eu-central-2",
    "eu-north-1",
    "eu-south-1",
    "eu-south-2",
    "eu-west-1",
    "eu-west-2",
    "eu-west-3",
    "il-central-1",
    "me-central-1",
    "me-south-1",
    "mx-central-1",
    "sa-east-1",
    "us-east-1",
    "us-east-2",
    "us-west-1",
    "us-west-2",
]
