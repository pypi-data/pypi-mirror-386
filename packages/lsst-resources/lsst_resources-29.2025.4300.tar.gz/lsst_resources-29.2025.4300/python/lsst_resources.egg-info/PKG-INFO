Metadata-Version: 2.4
Name: lsst-resources
Version: 29.2025.4300
Summary: An abstraction layer for reading and writing from URI file resources.
Author-email: Rubin Observatory Data Management <dm-admin@lists.lsst.org>
License: BSD 3-Clause License
Project-URL: Homepage, https://github.com/lsst/resources
Keywords: lsst
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.11.0
Description-Content-Type: text/markdown
License-File: COPYRIGHT
License-File: LICENSE
Requires-Dist: lsst-utils
Provides-Extra: s3
Requires-Dist: boto3>=1.13; extra == "s3"
Requires-Dist: backoff>=1.10; extra == "s3"
Provides-Extra: https
Requires-Dist: astropy>=4.0; extra == "https"
Requires-Dist: requests>=2.26.0; extra == "https"
Requires-Dist: urllib3>=1.25.10; extra == "https"
Requires-Dist: defusedxml; extra == "https"
Provides-Extra: gs
Requires-Dist: google-cloud-storage; extra == "gs"
Provides-Extra: test
Requires-Dist: moto!=5.0.0,>=1.3; extra == "test"
Requires-Dist: pytest>=3.2; extra == "test"
Requires-Dist: responses>=0.12.0; extra == "test"
Dynamic: license-file

# lsst.resources

[![pypi](https://img.shields.io/pypi/v/lsst-resources.svg)](https://pypi.org/project/lsst-resources/)
[![codecov](https://codecov.io/gh/lsst/resources/branch/main/graph/badge.svg?token=jGf63Xc1Ar)](https://codecov.io/gh/lsst/resources)


This package provides a simple interface to local or remote files using URIs.

```
from lsst.resources import ResourcePath

file_uri = ResourcePath("/data/file.txt")
contents = file_uri.read()

s3_uri = ResourcePath("s3://bucket/data/file.txt")
contents = s3_uri.read()
```

The package currently understands `file`, `s3`, `gs`, `http[s]`, and `resource` (Python package resource) URI schemes as well as a scheme-less URI (relative local file path).

The package provides the main file abstraction layer in the [Rubin Observatory Data Butler](https://github.com/lsst/daf_butler) datastore.

PyPI: [lsst-resources](https://pypi.org/project/lsst-resources/)
