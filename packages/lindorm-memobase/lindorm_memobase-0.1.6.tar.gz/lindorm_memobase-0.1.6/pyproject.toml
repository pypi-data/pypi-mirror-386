[project]
name = "lindorm-memobase"
version = "0.1.6"
description = "A lightweight memory extraction and profile management system for LLM applications"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "LindormMemobase Team"}
]
license = {text = "MIT"}
keywords = ["llm", "memory", "embedding", "profile", "extraction"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "python-dotenv>=1.0.0",
    "openai>=1.98.0",
    "pydantic>=2.11.7",
    "pyyaml>=6.0.2",
    "tiktoken>=0.9.0",
    "typeguard>=4.4.4",
    "opensearch-py>=2.0.0",
    "mysql-connector-python==8.0.11",
    "numpy"
]

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.21.0",
]

[tool.setuptools.packages.find]
where = ["."]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["lindormmemobase/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "asyncio: mark test as async",
]
