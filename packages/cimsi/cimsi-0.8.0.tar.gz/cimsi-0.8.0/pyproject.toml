[build-system]
requires = ["setuptools>=80", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "cimsi"
dynamic = ["version"]
description = "Integrated Modelling System Infrastructure (IMSI) is a comprehensive software project used to download, configure, build and run the suite of models in the CCCma Integrated Modelling System."
authors = [
    { name = "CCCma Technical Development Team"}
]
license = {text  = "OGL-Canada-2.0"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "isodate",
    "cftime",
    "xarray",
    "dataclasses",
    "json5",
    "click",
    "pydantic",
    "omegaconf",
    "pandas",
    "rich",
    "pyarrow",
    "python-dotenv",
    "questionary"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
]

[project.optional-dependencies]
tests = [
    "coverage",
    "pytest",
    "python-dotenv",
]

docs = [
    "sphinxcontrib-programoutput",
    "sphinx-rtd-theme==1.2.2",
    "recommonmark"
]

[project.urls]
Homepage = "https://imsi.readthedocs.io/en/latest/"

[project.scripts]
imsi = "imsi.cli.entry:cli"
imsi-post-install = "imsi.cli.post_install:post_install"

[tool.setuptools]
license-files = [] # workaround https://github.com/astral-sh/uv/issues/9513#issuecomment-2519527822
include-package-data = true

[tool.setuptools.packages.find]
include = ["imsi", "imsi.*"]

[tool.setuptools.package-data]
imsi = ["_version.py", "shell_interface/config_hooks_collection_config.yaml", "cli/*.sh", "utils/*.sh", "imsi.site.rc"]

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Extra tool configuration. Only relevant if they're installed
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[tool.flake8]
max-line-length = 88

[tool.setuptools_scm]
write_to = "imsi/_version.py"
fallback_version = "0.0.0" # Fallback version if no valid tags are found
local_scheme = "no-local-version"
