[project]
name = "imandra"
version = "2.1.2"
description = "A CLI and API client library for interfacing with Imandra's web APIs"
readme = "docs/README.md"
keywords = ["imandra"]
dependencies = ["setuptools >= 21.0.0", "requests >= 2", "platformdirs >= 4.3"]

[project.optional-dependencies]
Core = ["imandrax_api[async] >= 0.16.1, < 0.17.0"]
Http_api_client = [
  "aenum >= 3.1.11",
  "python_dateutil >= 2.5.3",
  "pydantic >= 1.10.5, < 2",
  "urllib3 >= 1.25.3, < 2.1.0",
]
Universe = [
  "devtools>=0.12.2",
  "imandrax-api>=0.16.1",
  "langgraph >= 0.2.63",
  "rich>=14.0.0",
]
Async = ["aiohttp"]
dev = [
  "ipykernel>=6.29.5",
  "pytest>=8.4.2",
  "pytest-asyncio>=1.2.0",
]

[tool.uv]
conflicts = [[{ extra = "http_api_client" }, { extra = "universe" }],]

[tool.setuptools.packages.find]
where = ["src"]

[project.scripts]
imandra-cli = "imandra.cli:main"

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"


[tool.ruff]
line-length = 88
fix = true
show-fixes = true
src = ["src"]
exclude = ["*.ipynb"]

[tool.ruff.lint]
select = [
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "RUF", # ruff-specific rules
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
]
ignore = [
  "SIM108", # if-else-block-instead-of-if-exp
  "N801",   # Class name should use CapWords
  "PTH123", # `open()` should be replaced by `Path.open()`
  "N815",   # Variable `regionsStr` in class scope should not be mixedCase
  "C417",   # Unnecessary `map()` usage (rewrite using a generator expression)
]
pycodestyle.ignore-overlong-task-comments = true
isort.combine-as-imports = true
