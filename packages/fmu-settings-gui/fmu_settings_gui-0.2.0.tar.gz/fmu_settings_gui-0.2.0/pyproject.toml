[build-system]
requires = [
    "setuptools>=45.0",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/fmu_settings_gui/_version.py"

[tool.setuptools.package-data]
"*" = ["static/**/*"]

[project]
name = "fmu-settings-gui"
description = "The GUI for fmu-settings"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "GPL-3.0" }
authors = [
    { name = "Equinor", email = "fg-fmu_atlas@equinor.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Natural Language :: English",
]
dynamic = ["version"]
dependencies = [
    "fastapi",
    "uvicorn",
]

[project.optional-dependencies]
dev = [
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "ruff",
    "types-setuptools",
]

[project.urls]
Homepage = "https://github.com/equinor/fmu-settings-gui"
Repository = "https://github.com/equinor/fmu-settings-gui"
Documentation = "https://github.com/equinor/fmu-settings-gui"

[tool.coverage.run]
omit = [
    "_version.py",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
disallow_untyped_calls = true
disallow_subclassing_any = true
extra_checks = true
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint]
disable = "missing-module-docstring"

[tool.pytest.ini_options]
norecursedirs = [
    ".git",
    ".tox",
    ".env",
    "dist",
    "build",
]
markers = [
    "integration: Marks a test as an integration test",
]

[tool.ruff]
line-length = 88
exclude = ["_version.py"]

[tool.ruff.lint]
ignore = [
    "C901",
]
select = [
    "B",  # flake-8-bugbear
    "C",  # pylint-convention
    "C90",  # mccabe
    "D",  # pydocstyle
    "E",  # pycodestyle-error
    "F",  # pyflakes
    "I",  # isort
    "NPY",  # numpy
    "PD",  # pandas-vet
    "PIE",  # flake8-pie
    "PL",  # pylint
    "Q",  # flake-8 quotes
    "Q",  # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",  # pyupgrade
    "W",  # pylint-warnings
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "google"
