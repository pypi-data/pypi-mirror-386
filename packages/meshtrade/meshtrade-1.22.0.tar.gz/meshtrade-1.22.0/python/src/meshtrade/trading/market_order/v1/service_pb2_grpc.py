# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from meshtrade.trading.market_order.v1 import market_order_pb2 as meshtrade_dot_trading_dot_market__order_dot_v1_dot_market__order__pb2
from meshtrade.trading.market_order.v1 import service_pb2 as meshtrade_dot_trading_dot_market__order_dot_v1_dot_service__pb2


class MarketOrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMarketOrder = channel.unary_unary(
                '/meshtrade.trading.market_order.v1.MarketOrderService/GetMarketOrder',
                request_serializer=meshtrade_dot_trading_dot_market__order_dot_v1_dot_service__pb2.GetMarketOrderRequest.SerializeToString,
                response_deserializer=meshtrade_dot_trading_dot_market__order_dot_v1_dot_market__order__pb2.MarketOrder.FromString,
                _registered_method=True)


class MarketOrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMarketOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketOrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMarketOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketOrder,
                    request_deserializer=meshtrade_dot_trading_dot_market__order_dot_v1_dot_service__pb2.GetMarketOrderRequest.FromString,
                    response_serializer=meshtrade_dot_trading_dot_market__order_dot_v1_dot_market__order__pb2.MarketOrder.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'meshtrade.trading.market_order.v1.MarketOrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('meshtrade.trading.market_order.v1.MarketOrderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MarketOrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMarketOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/meshtrade.trading.market_order.v1.MarketOrderService/GetMarketOrder',
            meshtrade_dot_trading_dot_market__order_dot_v1_dot_service__pb2.GetMarketOrderRequest.SerializeToString,
            meshtrade_dot_trading_dot_market__order_dot_v1_dot_market__order__pb2.MarketOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
