# coding: utf-8

"""
    Sonatype Lifecycle Public REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.196.0-01
    Contact: community@sonatype.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from sonatype_iq_api_client.models.bulk_security_vulnerability_data_dto import BulkSecurityVulnerabilityDataDTO
from sonatype_iq_api_client.models.component_identifier import ComponentIdentifier
from sonatype_iq_api_client.models.security_vulnerability_data_dto import SecurityVulnerabilityDataDTO

from sonatype_iq_api_client.api_client import ApiClient, RequestSerialized
from sonatype_iq_api_client.api_response import ApiResponse
from sonatype_iq_api_client.rest import RESTResponseType


class VulnerabilityDetailsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_security_vulnerability_details(
        self,
        request_body: Annotated[List[StrictStr], Field(description="Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> BulkSecurityVulnerabilityDataDTO:
        """get_security_vulnerability_details

        Use this method to retrieve bulk details for vulnerabilies using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param request_body: Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter (required)
        :type request_body: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details_serialize(
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BulkSecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_security_vulnerability_details_with_http_info(
        self,
        request_body: Annotated[List[StrictStr], Field(description="Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[BulkSecurityVulnerabilityDataDTO]:
        """get_security_vulnerability_details

        Use this method to retrieve bulk details for vulnerabilies using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param request_body: Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter (required)
        :type request_body: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details_serialize(
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BulkSecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_security_vulnerability_details_without_preload_content(
        self,
        request_body: Annotated[List[StrictStr], Field(description="Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """get_security_vulnerability_details

        Use this method to retrieve bulk details for vulnerabilies using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param request_body: Enter the vulnerability identifiers (CVE ID or Sonatype Vulnerability Identifier) as query parameter (required)
        :type request_body: List[str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details_serialize(
            request_body=request_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "BulkSecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_security_vulnerability_details_serialize(
        self,
        request_body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'request_body': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if request_body is not None:
            _body_params = request_body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'BasicAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/vulnerabilities',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_security_vulnerability_details1(
        self,
        ref_id: Annotated[StrictStr, Field(description="Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier)")],
        component_identifier: Annotated[Optional[ComponentIdentifier], Field(description="Enter the component identifier.")] = None,
        identification_source: Annotated[Optional[StrictStr], Field(description="Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.")] = None,
        scan_id: Annotated[Optional[StrictStr], Field(description="Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.")] = None,
        owner_type: Annotated[Optional[StrictStr], Field(description="Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.")] = None,
        owner_id: Annotated[Optional[StrictStr], Field(description="Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SecurityVulnerabilityDataDTO:
        """get_security_vulnerability_details1

        Use this method to retrieve details for a vulnerability using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param ref_id: Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier) (required)
        :type ref_id: str
        :param component_identifier: Enter the component identifier.
        :type component_identifier: ComponentIdentifier
        :param identification_source: Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.
        :type identification_source: str
        :param scan_id: Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.
        :type scan_id: str
        :param owner_type: Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.
        :type owner_type: str
        :param owner_id: Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.
        :type owner_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details1_serialize(
            ref_id=ref_id,
            component_identifier=component_identifier,
            identification_source=identification_source,
            scan_id=scan_id,
            owner_type=owner_type,
            owner_id=owner_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_security_vulnerability_details1_with_http_info(
        self,
        ref_id: Annotated[StrictStr, Field(description="Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier)")],
        component_identifier: Annotated[Optional[ComponentIdentifier], Field(description="Enter the component identifier.")] = None,
        identification_source: Annotated[Optional[StrictStr], Field(description="Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.")] = None,
        scan_id: Annotated[Optional[StrictStr], Field(description="Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.")] = None,
        owner_type: Annotated[Optional[StrictStr], Field(description="Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.")] = None,
        owner_id: Annotated[Optional[StrictStr], Field(description="Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SecurityVulnerabilityDataDTO]:
        """get_security_vulnerability_details1

        Use this method to retrieve details for a vulnerability using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param ref_id: Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier) (required)
        :type ref_id: str
        :param component_identifier: Enter the component identifier.
        :type component_identifier: ComponentIdentifier
        :param identification_source: Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.
        :type identification_source: str
        :param scan_id: Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.
        :type scan_id: str
        :param owner_type: Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.
        :type owner_type: str
        :param owner_id: Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.
        :type owner_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details1_serialize(
            ref_id=ref_id,
            component_identifier=component_identifier,
            identification_source=identification_source,
            scan_id=scan_id,
            owner_type=owner_type,
            owner_id=owner_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_security_vulnerability_details1_without_preload_content(
        self,
        ref_id: Annotated[StrictStr, Field(description="Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier)")],
        component_identifier: Annotated[Optional[ComponentIdentifier], Field(description="Enter the component identifier.")] = None,
        identification_source: Annotated[Optional[StrictStr], Field(description="Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.")] = None,
        scan_id: Annotated[Optional[StrictStr], Field(description="Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.")] = None,
        owner_type: Annotated[Optional[StrictStr], Field(description="Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.")] = None,
        owner_id: Annotated[Optional[StrictStr], Field(description="Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """get_security_vulnerability_details1

        Use this method to retrieve details for a vulnerability using authenticated or non-authenticated requests. A non-authenticated request will retrieve limited details for the vulnerability.  Permissions required: View IQ Elements

        :param ref_id: Enter the vulnerability identifier (CVE ID or Sonatype Vulnerability Identifier) (required)
        :type ref_id: str
        :param component_identifier: Enter the component identifier.
        :type component_identifier: ComponentIdentifier
        :param identification_source: Enter the name of the component identification source (third-party) for this vulnerability. The response will retrieve vulnerability data from this third-party data source.
        :type identification_source: str
        :param scan_id: Enter the scanId where the vulnerability was detected. The response will retrieve vulnerability data from the third-party data source and not HDS.
        :type scan_id: str
        :param owner_type: Enter the value for ownerType where this vulnerability was detected. The response will retrieve the vulnerability data from the third-party data source and not HDS.
        :type owner_type: str
        :param owner_id: Enter the ownerId where this vulnerability was detected. The response will retrieve data from the third-party data source and not HDS.
        :type owner_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_security_vulnerability_details1_serialize(
            ref_id=ref_id,
            component_identifier=component_identifier,
            identification_source=identification_source,
            scan_id=scan_id,
            owner_type=owner_type,
            owner_id=owner_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecurityVulnerabilityDataDTO",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_security_vulnerability_details1_serialize(
        self,
        ref_id,
        component_identifier,
        identification_source,
        scan_id,
        owner_type,
        owner_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ref_id is not None:
            _path_params['refId'] = ref_id
        # process the query parameters
        if component_identifier is not None:
            
            _query_params.append(('componentIdentifier', component_identifier))
            
        if identification_source is not None:
            
            _query_params.append(('identificationSource', identification_source))
            
        if scan_id is not None:
            
            _query_params.append(('scanId', scan_id))
            
        if owner_type is not None:
            
            _query_params.append(('ownerType', owner_type))
            
        if owner_id is not None:
            
            _query_params.append(('ownerId', owner_id))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'BasicAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/vulnerabilities/{refId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


